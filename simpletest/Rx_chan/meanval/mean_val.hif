HIF003
--
-- Copyright (C) 1988-2001 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	lpm_or.tdf
	{
		lpm_or [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTH,LPM_SIZE,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN,CASCADE_CHAIN,DEVICE_FAMILY] [aglobal.inc]
		{
			23 [DEVICE_FAMILY=ACEX1K,CASCADE_CHAIN=IGNORE,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,LPM_SIZE=16,LPM_WIDTH=1,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result0,data15_0,data14_0,data13_0,data12_0,data11_0,data10_0,data9_0,data8_0,data7_0,data6_0,data5_0,data4_0,data3_0,data2_0,data1_0,data0_0];
			45 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=1,LPM_SIZE=11,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,DEVICE_FAMILY=ACEX1K] [data0_0,data1_0,data2_0,data3_0,data4_0,data5_0,data6_0,data7_0,data8_0,data9_0,data10_0,result0];
			65 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=1,LPM_SIZE=10,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,CASCADE_CHAIN=IGNORE,DEVICE_FAMILY=ACEX1K] [data0_0,data1_0,data2_0,data3_0,data4_0,data5_0,data6_0,data7_0,data8_0,data9_0,result0];
		}
	}
	or16.tdf
	{
		or16 [USE_LPM_FOR_AHDL_OPERATORS] [lpm_or.inc]
		{
			22 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [result,data0_0,data1_0,data2_0,data3_0,data4_0,data5_0,data6_0,data7_0,data8_0,data9_0,data10_0,data11_0,data12_0,data13_0,data14_0,data15_0];
		}
	}
	cmpconst.tdf
	{
		cmpconst [CVALUE,WIDTH,USE_LPM_FOR_AHDL_OPERATORS] []
		{
			20 [CVALUE=4,WIDTH=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result,data2,data1,data0];
		}
	}
	lpm_counter.tdf
	{
		lpm_counter [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTH,LPM_DIRECTION=DEFAULT,LPM_MODULUS=0,LPM_AVALUE=0,LPM_SVALUE=0,DEVICE_FAMILY,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,NOT_GATE_PUSH_BACK=OFF,CARRY_CNT_EN=SMART,LABWIDE_SCLR=ON] [aglobal.inc,dffeea.inc,lpm_counter.inc,lpm_compare.inc,cmpconst.inc,lpm_add_sub.inc,lpm_decode.inc,lpm_constant.inc]
		{
			15 [LABWIDE_SCLR=ON,CARRY_CNT_EN=SMART,NOT_GATE_PUSH_BACK=ON,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,DEVICE_FAMILY=ACEX1K,LPM_SVALUE=0,LPM_AVALUE=0,LPM_MODULUS=5,LPM_DIRECTION=UP,LPM_WIDTH=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [q2,q1,q0,cout,clock,clk_en,aclr];
			25 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=2,LPM_DIRECTION=UP,LPM_MODULUS=0,LPM_AVALUE=0,LPM_SVALUE=0,DEVICE_FAMILY=ACEX1K,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,NOT_GATE_PUSH_BACK=ON,CARRY_CNT_EN=SMART,LABWIDE_SCLR=ON] [aclr,clock,cout,q0,q1];
		}
	}
	bypassff.tdf
	{
		bypassff [USE_LPM_FOR_AHDL_OPERATORS,WIDTH=8] []
		{
			12 [WIDTH=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [q1,q0,d1,d0,clk,clrn];
			11 [WIDTH=9,USE_LPM_FOR_AHDL_OPERATORS=OFF] [q8,q7,q6,q5,q4,q3,q2,q1,q0,d8,d7,d6,d5,d4,d3,d2,d1,d0,clk,clrn];
			10 [WIDTH=9,USE_LPM_FOR_AHDL_OPERATORS=OFF] [q7,q6,q5,q4,q3,q2,q1,q0,d8,d7,d6,d5,d4,d3,d2,d1,d0];
			35 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=7] [d0,d1,d2,d3,d4,d5,d6,q0,q1,q2,q3,q4,q5];
			36 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=7] [clrn,clk,d0,d1,d2,d3,d4,d5,d6,q0,q1,q2,q3,q4,q5,q6];
			41 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=6] [d0,d1,d2,d3,d4,d5,q0,q1,q2,q3,q4];
			42 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=6] [clrn,clk,d0,d1,d2,d3,d4,d5,q0,q1,q2,q3,q4,q5];
		}
	}
	altshift.tdf
	{
		altshift [USE_LPM_FOR_AHDL_OPERATORS,WIDTH=4,DEPTH=0] []
		{
			18 [DEPTH=0,WIDTH=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result2,result1,result0,data2,data1,data0];
			13 [DEPTH=0,WIDTH=16,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result15,result14,result13,result12,result11,result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,data15,data14,data13,data12,data11,data10,data9,data8,data7,data6,data5,data4,data3,data2,data1,data0];
			6 [DEPTH=0,WIDTH=1,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result0,data0];
			5 [DEPTH=0,WIDTH=9,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result8,result7,result6,result5,result4,result3,result2,result1,result0,data8,data7,data6,data5,data4,data3,data2,data1,data0];
			28 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=2,DEPTH=0] [data0,data1,result0,result1];
			34 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=7,DEPTH=0] [data0,data1,data2,data3,data4,data5,data6,result0,result1,result2,result3,result4,result5,result6];
			39 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=6,DEPTH=0] [data0,data1,data2,data3,data4,data5,result0,result1,result2,result3,result4,result5];
			43 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=11,DEPTH=0] [data0,data1,data2,data3,data4,data5,data6,data7,data8,data9,data10,result0,result1,result2,result3,result4,result5,result6,result7,result8,result9,result10];
			49 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=4,DEPTH=0] [data0,data1,data2,data3,result0,result1,result2,result3];
			54 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=11,DEPTH=1] [aclr,clock,data0,data1,data2,data3,data4,data5,data6,data7,data8,data9,data10,result0,result1,result2,result3,result4,result5,result6,result7,result8,result9,result10];
			58 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=10,DEPTH=1] [aclr,clock,data0,data1,data2,data3,data4,data5,data6,data7,data8,data9,result0,result1,result2,result3,result4,result5,result6,result7,result8,result9];
			63 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=10,DEPTH=0] [data0,data1,data2,data3,data4,data5,data6,data7,data8,data9,result0,result1,result2,result3,result4,result5,result6,result7,result8,result9];
		}
	}
	addcore.tdf
	{
		addcore [USE_LPM_FOR_AHDL_OPERATORS,width,CONSTANT_CIN,CARRY_CHAIN,CARRY_CHAIN_LENGTH,DEVICE_FAMILY] [aglobal.inc,addcore.inc]
		{
			17 [DEVICE_FAMILY=ACEX1K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,CONSTANT_CIN=1,width=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result2,result1,result0,dataa2,dataa1,dataa0,datab2,datab1,datab0,cin];
			8 [DEVICE_FAMILY=ACEX1K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=9,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result8,result7,result6,result5,result4,result3,result2,result1,result0,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0,cin];
			4 [DEVICE_FAMILY=ACEX1K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,CONSTANT_CIN=1,width=9,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result8,result7,result6,result5,result4,result3,result2,result1,result0,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0,cin];
			27 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=2,CONSTANT_CIN=1,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=ACEX1K] [cin,datab0,datab1,dataa0,dataa1,cout,result0,result1];
			33 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=7,CONSTANT_CIN=0,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=ACEX1K] [cin,datab0,datab1,datab2,datab3,datab4,datab5,datab6,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,dataa6,result0,result1,result2,result3,result4,result5,result6];
			38 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=6,CONSTANT_CIN=1,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=ACEX1K] [cin,datab0,datab1,datab2,datab3,datab4,datab5,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,result0,result1,result2,result3,result4,result5];
			62 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=6,CONSTANT_CIN=0,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=ACEX1K] [cin,datab0,datab1,datab2,datab3,datab4,datab5,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,result0,result1,result2,result3,result4,result5];
		}
	}
	lpm_add_sub.tdf
	{
		lpm_add_sub [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTH,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=NO,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY,STYLE] [aglobal.inc,altshift.inc,bypassff.inc,look_add.inc,addcore.inc,lpm_add_sub.inc]
		{
			16 [STYLE=NORMAL,DEVICE_FAMILY=ACEX1K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=YES,LPM_DIRECTION=ADD,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result2,result1,result0,dataa2,dataa1,dataa0,datab2,datab1,datab0];
			9 [STYLE=NORMAL,DEVICE_FAMILY=ACEX1K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=NO,LPM_DIRECTION=ADD,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=9,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result8,result7,result6,result5,result4,result3,result2,result1,result0,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0];
			7 [STYLE=NORMAL,DEVICE_FAMILY=ACEX1K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=NO,LPM_DIRECTION=ADD,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=9,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result8,result7,result6,result5,result4,result3,result2,result1,result0,cin,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0];
			3 [STYLE=NORMAL,DEVICE_FAMILY=ACEX1K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=NO,LPM_DIRECTION=ADD,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=9,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result8,result7,result6,result5,result4,result3,result2,result1,result0,dataa0,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0];
			2 [STYLE=NORMAL,DEVICE_FAMILY=ACEX1K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=1,ONE_INPUT_IS_CONSTANT=NO,LPM_DIRECTION=ADD,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=16,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result15,result14,result13,result12,result11,result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,dataa15,dataa14,dataa13,dataa12,dataa11,dataa10,dataa9,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab15,datab14,datab13,datab12,datab11,datab10,datab9,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0,clock,aclr];
			26 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=2,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=ADD,ONE_INPUT_IS_CONSTANT=YES,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=ACEX1K,STYLE=NORMAL] [datab0,datab1,dataa0,dataa1,cout,result0,result1];
			31 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=11,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=ADD,ONE_INPUT_IS_CONSTANT=NO,LPM_PIPELINE=1,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=ACEX1K,STYLE=NORMAL] [aclr,clock,datab0,datab1,datab2,datab3,datab4,datab5,datab6,datab7,datab8,datab9,datab10,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,dataa6,dataa7,dataa8,dataa9,dataa10,result0,result1,result2,result3,result4,result5,result6,result7,result8,result9,result10];
			32 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=7,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=ADD,ONE_INPUT_IS_CONSTANT=NO,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=ACEX1K,STYLE=NORMAL] [datab0,datab1,datab2,datab3,datab4,datab5,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,cin,result0,result1,result2,result3,result4,result5,result6];
			37 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=6,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=ADD,ONE_INPUT_IS_CONSTANT=NO,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=ACEX1K,STYLE=NORMAL] [datab0,datab1,datab2,datab3,datab4,dataa0,dataa1,dataa2,dataa3,dataa4,result0,result1,result2,result3,result4,result5];
			40 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=6,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=ADD,ONE_INPUT_IS_CONSTANT=NO,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=ACEX1K,STYLE=NORMAL] [datab0,datab1,datab2,datab3,datab4,datab5,dataa0,result0,result1,result2,result3,result4,result5];
			60 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=10,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=ADD,ONE_INPUT_IS_CONSTANT=NO,LPM_PIPELINE=1,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=ACEX1K,STYLE=NORMAL] [aclr,clock,datab0,datab1,datab2,datab3,datab4,datab5,datab6,datab7,datab8,datab9,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,dataa6,dataa7,dataa8,dataa9,result0,result1,result2,result3,result4,result5,result6,result7,result8,result9];
			61 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=6,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=ADD,ONE_INPUT_IS_CONSTANT=NO,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=ACEX1K,STYLE=NORMAL] [datab0,datab1,datab2,datab3,datab4,dataa0,dataa1,dataa2,dataa3,dataa4,cin,result0,result1,result2,result3,result4,result5];
		}
	}
	lpm_constant.tdf
	{
		lpm_constant [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTH,LPM_CVALUE] []
		{
			19 [LPM_CVALUE=4,LPM_WIDTH=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [];
			29 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=2,LPM_CVALUE=0] [];
		}
	}
	ctup5.tdf
	{
		ctup5 [USE_LPM_FOR_AHDL_OPERATORS] [lpm_counter.inc]
		{
			21 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [cout,q0,q1,aclr,clk_en,clock];
			14 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [cout,q0,q2,aclr,clk_en,clock];
		}
	}
	add16.tdf
	{
		add16 [USE_LPM_FOR_AHDL_OPERATORS] [lpm_add_sub.inc]
		{
			1 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [aclr,clock,datab0,datab1,datab2,datab3,datab4,datab5,datab6,datab7,datab8,datab9,datab10,datab11,datab12,datab13,datab14,datab15,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,dataa6,dataa7,dataa8,dataa9,dataa10,dataa11,dataa12,dataa13,dataa14,dataa15,result0,result1,result2,result3,result4,result5,result6,result7,result8,result9,result10,result11,result12,result13,result14,result15];
		}
	}
	ctup4.tdf
	{
		ctup4 [USE_LPM_FOR_AHDL_OPERATORS] [lpm_counter.inc]
		{
			24 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [clock,aclr,q1,q0,cout];
			46 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [clock,aclr,q1,q0];
		}
	}
	add11.tdf
	{
		add11 [USE_LPM_FOR_AHDL_OPERATORS] [lpm_add_sub.inc]
		{
			30 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,dataa10,dataa9,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab10,datab9,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0,clock,aclr];
		}
	}
	or11.tdf
	{
		or11 [USE_LPM_FOR_AHDL_OPERATORS] [lpm_or.inc]
		{
			44 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [data10_0,data9_0,data8_0,data7_0,data6_0,data5_0,data4_0,data3_0,data2_0,data1_0,data0_0,result];
		}
	}
	dec2.tdf
	{
		dec2 [USE_LPM_FOR_AHDL_OPERATORS] [lpm_decode.inc]
		{
			47 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [data1,data0,eq0];
			51 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [data1,data0,eq0,eq1,eq2,eq3];
		}
	}
	lpm_decode.tdf
	{
		lpm_decode [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTH,LPM_DECODES,LPM_PIPELINE=0,CASCADE_CHAIN=MANUAL,DEVICE_FAMILY] [aglobal.inc,lpm_constant.inc,lpm_compare.inc,altshift.inc,declut.inc]
		{
			48 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=2,LPM_DECODES=4,LPM_PIPELINE=0,CASCADE_CHAIN=IGNORE,DEVICE_FAMILY=ACEX1K] [data0,data1,eq0,eq1,eq2,eq3];
		}
	}
	declut.tdf
	{
		declut [USE_LPM_FOR_AHDL_OPERATORS,width,STAGE,TOT_LEVELS,LATENCY] [bypassff.inc,declut.inc]
		{
			50 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=2,STAGE=0,TOT_LEVELS=1,LATENCY=0] [data0,data1,eq0,eq1,eq2,eq3];
		}
	}
	mux4x10.tdf
	{
		mux4x10 [USE_LPM_FOR_AHDL_OPERATORS] [lpm_mux.inc]
		{
			56 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,data3_9,data3_8,data3_7,data3_6,data3_5,data3_4,data3_3,data3_2,data3_1,data3_0,data2_9,data2_8,data2_7,data2_6,data2_5,data2_4,data2_3,data2_2,data2_1,data2_0,data1_9,data1_8,data1_7,data1_6,data1_5,data1_4,data1_3,data1_2,data1_1,data1_0,data0_9,data0_8,data0_7,data0_6,data0_5,data0_4,data0_3,data0_2,data0_1,data0_0,clock,aclr,sel1,sel0];
		}
	}
	mux4x11.tdf
	{
		mux4x11 [USE_LPM_FOR_AHDL_OPERATORS] [lpm_mux.inc]
		{
			52 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,data3_10,data3_9,data3_8,data3_7,data3_6,data3_5,data3_4,data3_3,data3_2,data3_1,data3_0,data2_10,data2_9,data2_8,data2_7,data2_6,data2_5,data2_4,data2_3,data2_2,data2_1,data2_0,data1_10,data1_9,data1_8,data1_7,data1_6,data1_5,data1_4,data1_3,data1_2,data1_1,data1_0,data0_10,data0_9,data0_8,data0_7,data0_6,data0_5,data0_4,data0_3,data0_2,data0_1,data0_0,clock,aclr,sel1,sel0];
		}
	}
	lpm_mux.tdf
	{
		lpm_mux [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTH,LPM_SIZE,LPM_WIDTHS,LPM_PIPELINE=0] [altshift.inc,bypassff.inc,muxlut.inc]
		{
			53 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=11,LPM_SIZE=4,LPM_WIDTHS=2,LPM_PIPELINE=1] [aclr,clock,sel0,sel1,data0_0,data0_1,data0_2,data0_3,data0_4,data0_5,data0_6,data0_7,data0_8,data0_9,data0_10,data1_0,data1_1,data1_2,data1_3,data1_4,data1_5,data1_6,data1_7,data1_8,data1_9,data1_10,data2_0,data2_1,data2_2,data2_3,data2_4,data2_5,data2_6,data2_7,data2_8,data2_9,data2_10,data3_0,data3_1,data3_2,data3_3,data3_4,data3_5,data3_6,data3_7,data3_8,data3_9,data3_10,result0,result1,result2,result3,result4,result5,result6,result7,result8,result9,result10];
			57 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=10,LPM_SIZE=4,LPM_WIDTHS=2,LPM_PIPELINE=1] [aclr,clock,sel0,sel1,data0_0,data0_1,data0_2,data0_3,data0_4,data0_5,data0_6,data0_7,data0_8,data0_9,data1_0,data1_1,data1_2,data1_3,data1_4,data1_5,data1_6,data1_7,data1_8,data1_9,data2_0,data2_1,data2_2,data2_3,data2_4,data2_5,data2_6,data2_7,data2_8,data2_9,data3_0,data3_1,data3_2,data3_3,data3_4,data3_5,data3_6,data3_7,data3_8,data3_9,result0,result1,result2,result3,result4,result5,result6,result7,result8,result9];
		}
	}
	muxlut.tdf
	{
		muxlut [USE_LPM_FOR_AHDL_OPERATORS,SIZE,LEVEL,TOT_LEVELS,LATENCY,REM_LATENCY,LOCAL=0,CASCADE_CHAIN] [altshift.inc,muxlut.inc]
		{
			55 [USE_LPM_FOR_AHDL_OPERATORS=OFF,SIZE=4,LEVEL=0,TOT_LEVELS=1,LATENCY=0,LOCAL=0,CASCADE_CHAIN=IGNORE] [aclr,clock,select0,select1,data0,data1,data2,data3,result];
		}
	}
	add10.tdf
	{
		add10 [USE_LPM_FOR_AHDL_OPERATORS] [lpm_add_sub.inc]
		{
			59 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,dataa9,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab9,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0,clock,aclr];
		}
	}
	or10.tdf
	{
		or10 [USE_LPM_FOR_AHDL_OPERATORS] [lpm_or.inc]
		{
			64 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [data9_0,data8_0,data7_0,data6_0,data5_0,data4_0,data3_0,data2_0,data1_0,data0_0,result];
		}
	}
	mean_val.gdf
	{
		mean_val [] []
		{
			0 [] [];
		}
	}
}
TREE
{
	mean_val::(0,0):(0): mean_val.gdf
	{
		or16::(0,0):(110): or16.tdf;
		ctup5::(0,0):(103): ctup5.gdf;
		add16::(0,0):(100): add16.tdf;
		ctup4::(0,0):(116): ctup4.tdf
		{
			lpm_counter:25:(51,2):(32,lpm_counter_component): lpm_counter.tdf
			{
				lpm_constant:29:(318,6):(78,scdw): lpm_constant.tdf;
				lpm_add_sub:26:(298,7):(61,add_sub): lpm_add_sub.tdf
				{
					altshift:6:(226,2):(71,oflow_ext_latency_ffs): altshift.tdf;
					altshift:6:(224,2):(63,carry_ext_latency_ffs): altshift.tdf;
					altshift:28:(222,2):(53,result_ext_latency_ffs): altshift.tdf;
					addcore:27:(212,4):(40,adder): addcore.tdf;
				}
			}
		}
		add11::(0,0):(117): add11.gdf;
		or11::(0,0):(118): or11.gdf;
		dec2::(0,0):(119): dec2.tdf
		{
			lpm_decode:48:(52,2):(33,lpm_decode_component): lpm_decode.tdf
			{
				declut:50:(95,5):(51,decoder): declut.tdf;
				altshift:49:(76,2):(37,external_latency_ffs): altshift.tdf;
			}
		}
		or11::(0,0):(120): or11.gdf;
		mux4x10::(0,0):(121): mux4x10.tdf;
		mux4x10::(0,0):(122): mux4x10.tdf;
		or11::(0,0):(125): or11.gdf;
		add11::(0,0):(126): add11.gdf;
		add11::(0,0):(128): add11.gdf;
		or11::(0,0):(129): or11.gdf;
		or11::(0,0):(131): or11.gdf;
		add11::(0,0):(132): add11.gdf;
		mux4x11::(0,0):(136): mux4x11.gdf;
		mux4x10::(0,0):(137): mux4x10.tdf
		{
			lpm_mux:57:(55,2):(81,lpm_mux_component): lpm_mux.tdf
			{
				muxlut:55:(172,22):(270): muxlut.tdf;
				muxlut:55:(172,22):(252): muxlut.tdf;
				muxlut:55:(172,22):(234): muxlut.tdf;
				muxlut:55:(172,22):(216): muxlut.tdf;
				muxlut:55:(172,22):(198): muxlut.tdf;
				muxlut:55:(172,22):(180): muxlut.tdf;
				muxlut:55:(172,22):(162): muxlut.tdf;
				muxlut:55:(172,22):(144): muxlut.tdf;
				muxlut:55:(172,22):(126): muxlut.tdf;
				muxlut:55:(172,22):(108): muxlut.tdf;
				altshift:58:(89,2):(82,external_latency_ffs): altshift.tdf;
			}
		}
		add10::(0,0):(138): add10.tdf
		{
			lpm_add_sub:60:(52,2):(59,lpm_add_sub_component): lpm_add_sub.tdf
			{
				altshift:6:(226,2):(262,oflow_ext_latency_ffs): altshift.tdf;
				altshift:6:(224,2):(254,carry_ext_latency_ffs): altshift.tdf;
				altshift:63:(222,2):(228,result_ext_latency_ffs): altshift.tdf;
				bypassff:12:(196,12):(219,sign_ff0): bypassff.tdf;
				bypassff:42:(194,13):(202,datab1_ff0_0): bypassff.tdf;
				bypassff:42:(194,13):(185,datab1_ff0_1): bypassff.tdf;
				bypassff:41:(194,13):(168,datab1_ff1_0): bypassff.tdf;
				bypassff:41:(194,13):(151,datab1_ff1_1): bypassff.tdf;
				lpm_add_sub:37:(187,14):(122,adder1_01): lpm_add_sub.tdf
				{
					altshift:6:(226,2):(103,oflow_ext_latency_ffs): altshift.tdf;
					altshift:6:(224,2):(95,carry_ext_latency_ffs): altshift.tdf;
					altshift:39:(222,2):(77,result_ext_latency_ffs): altshift.tdf;
					addcore:38:(212,4):(52,adder): addcore.tdf;
				}
				lpm_add_sub:61:(182,11):(93,adder10): lpm_add_sub.tdf
				{
					altshift:6:(226,2):(103,oflow_ext_latency_ffs): altshift.tdf;
					altshift:6:(224,2):(95,carry_ext_latency_ffs): altshift.tdf;
					altshift:39:(222,2):(77,result_ext_latency_ffs): altshift.tdf;
					addcore:62:(212,4):(52,adder): addcore.tdf;
				}
				lpm_add_sub:40:(182,11):(64,adder11): lpm_add_sub.tdf
				{
					altshift:6:(226,2):(103,oflow_ext_latency_ffs): altshift.tdf;
					altshift:6:(224,2):(95,carry_ext_latency_ffs): altshift.tdf;
					altshift:39:(222,2):(77,result_ext_latency_ffs): altshift.tdf;
					addcore:38:(212,4):(52,adder): addcore.tdf;
				}
			}
		}
		add10::(0,0):(139): add10.tdf
		{
			lpm_add_sub:60:(52,2):(59,lpm_add_sub_component): lpm_add_sub.tdf
			{
				altshift:6:(226,2):(262,oflow_ext_latency_ffs): altshift.tdf;
				altshift:6:(224,2):(254,carry_ext_latency_ffs): altshift.tdf;
				altshift:63:(222,2):(228,result_ext_latency_ffs): altshift.tdf;
				bypassff:12:(196,12):(219,sign_ff0): bypassff.tdf;
				bypassff:42:(194,13):(202,datab1_ff0_0): bypassff.tdf;
				bypassff:42:(194,13):(185,datab1_ff0_1): bypassff.tdf;
				bypassff:41:(194,13):(168,datab1_ff1_0): bypassff.tdf;
				bypassff:41:(194,13):(151,datab1_ff1_1): bypassff.tdf;
				lpm_add_sub:37:(187,14):(122,adder1_01): lpm_add_sub.tdf
				{
					altshift:6:(226,2):(103,oflow_ext_latency_ffs): altshift.tdf;
					altshift:6:(224,2):(95,carry_ext_latency_ffs): altshift.tdf;
					altshift:39:(222,2):(77,result_ext_latency_ffs): altshift.tdf;
					addcore:38:(212,4):(52,adder): addcore.tdf;
				}
				lpm_add_sub:61:(182,11):(93,adder10): lpm_add_sub.tdf
				{
					altshift:6:(226,2):(103,oflow_ext_latency_ffs): altshift.tdf;
					altshift:6:(224,2):(95,carry_ext_latency_ffs): altshift.tdf;
					altshift:39:(222,2):(77,result_ext_latency_ffs): altshift.tdf;
					addcore:62:(212,4):(52,adder): addcore.tdf;
				}
				lpm_add_sub:40:(182,11):(64,adder11): lpm_add_sub.tdf
				{
					altshift:6:(226,2):(103,oflow_ext_latency_ffs): altshift.tdf;
					altshift:6:(224,2):(95,carry_ext_latency_ffs): altshift.tdf;
					altshift:39:(222,2):(77,result_ext_latency_ffs): altshift.tdf;
					addcore:38:(212,4):(52,adder): addcore.tdf;
				}
			}
		}
		add10::(0,0):(140): add10.tdf
		{
			lpm_add_sub:60:(52,2):(59,lpm_add_sub_component): lpm_add_sub.tdf
			{
				altshift:6:(226,2):(262,oflow_ext_latency_ffs): altshift.tdf;
				altshift:6:(224,2):(254,carry_ext_latency_ffs): altshift.tdf;
				altshift:63:(222,2):(228,result_ext_latency_ffs): altshift.tdf;
				bypassff:12:(196,12):(219,sign_ff0): bypassff.tdf;
				bypassff:42:(194,13):(202,datab1_ff0_0): bypassff.tdf;
				bypassff:42:(194,13):(185,datab1_ff0_1): bypassff.tdf;
				bypassff:41:(194,13):(168,datab1_ff1_0): bypassff.tdf;
				bypassff:41:(194,13):(151,datab1_ff1_1): bypassff.tdf;
				lpm_add_sub:37:(187,14):(122,adder1_01): lpm_add_sub.tdf
				{
					altshift:6:(226,2):(103,oflow_ext_latency_ffs): altshift.tdf;
					altshift:6:(224,2):(95,carry_ext_latency_ffs): altshift.tdf;
					altshift:39:(222,2):(77,result_ext_latency_ffs): altshift.tdf;
					addcore:38:(212,4):(52,adder): addcore.tdf;
				}
				lpm_add_sub:61:(182,11):(93,adder10): lpm_add_sub.tdf
				{
					altshift:6:(226,2):(103,oflow_ext_latency_ffs): altshift.tdf;
					altshift:6:(224,2):(95,carry_ext_latency_ffs): altshift.tdf;
					altshift:39:(222,2):(77,result_ext_latency_ffs): altshift.tdf;
					addcore:62:(212,4):(52,adder): addcore.tdf;
				}
				lpm_add_sub:40:(182,11):(64,adder11): lpm_add_sub.tdf
				{
					altshift:6:(226,2):(103,oflow_ext_latency_ffs): altshift.tdf;
					altshift:6:(224,2):(95,carry_ext_latency_ffs): altshift.tdf;
					altshift:39:(222,2):(77,result_ext_latency_ffs): altshift.tdf;
					addcore:38:(212,4):(52,adder): addcore.tdf;
				}
			}
		}
		add10::(0,0):(141): add10.tdf
		{
			lpm_add_sub:60:(52,2):(59,lpm_add_sub_component): lpm_add_sub.tdf
			{
				altshift:6:(226,2):(262,oflow_ext_latency_ffs): altshift.tdf;
				altshift:6:(224,2):(254,carry_ext_latency_ffs): altshift.tdf;
				altshift:63:(222,2):(228,result_ext_latency_ffs): altshift.tdf;
				bypassff:12:(196,12):(219,sign_ff0): bypassff.tdf;
				bypassff:42:(194,13):(202,datab1_ff0_0): bypassff.tdf;
				bypassff:42:(194,13):(185,datab1_ff0_1): bypassff.tdf;
				bypassff:41:(194,13):(168,datab1_ff1_0): bypassff.tdf;
				bypassff:41:(194,13):(151,datab1_ff1_1): bypassff.tdf;
				lpm_add_sub:37:(187,14):(122,adder1_01): lpm_add_sub.tdf
				{
					altshift:6:(226,2):(103,oflow_ext_latency_ffs): altshift.tdf;
					altshift:6:(224,2):(95,carry_ext_latency_ffs): altshift.tdf;
					altshift:39:(222,2):(77,result_ext_latency_ffs): altshift.tdf;
					addcore:38:(212,4):(52,adder): addcore.tdf;
				}
				lpm_add_sub:61:(182,11):(93,adder10): lpm_add_sub.tdf
				{
					altshift:6:(226,2):(103,oflow_ext_latency_ffs): altshift.tdf;
					altshift:6:(224,2):(95,carry_ext_latency_ffs): altshift.tdf;
					altshift:39:(222,2):(77,result_ext_latency_ffs): altshift.tdf;
					addcore:62:(212,4):(52,adder): addcore.tdf;
				}
				lpm_add_sub:40:(182,11):(64,adder11): lpm_add_sub.tdf
				{
					altshift:6:(226,2):(103,oflow_ext_latency_ffs): altshift.tdf;
					altshift:6:(224,2):(95,carry_ext_latency_ffs): altshift.tdf;
					altshift:39:(222,2):(77,result_ext_latency_ffs): altshift.tdf;
					addcore:38:(212,4):(52,adder): addcore.tdf;
				}
			}
		}
		or10::(0,0):(142): or10.tdf
		{
			lpm_or:65:(49,2):(38,lpm_or_component): lpm_or.tdf;
		}
		or10::(0,0):(143): or10.tdf
		{
			lpm_or:65:(49,2):(38,lpm_or_component): lpm_or.tdf;
		}
		or10::(0,0):(144): or10.tdf
		{
			lpm_or:65:(49,2):(38,lpm_or_component): lpm_or.tdf;
		}
		or10::(0,0):(145): or10.tdf
		{
			lpm_or:65:(49,2):(38,lpm_or_component): lpm_or.tdf;
		}
	}
}
