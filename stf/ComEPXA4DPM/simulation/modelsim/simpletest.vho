-- Copyright (C) 1991-2004 Altera Corporation
-- Any  megafunction  design,  and related netlist (encrypted  or  decrypted),
-- support information,  device programming or simulation file,  and any other
-- associated  documentation or information  provided by  Altera  or a partner
-- under  Altera's   Megafunction   Partnership   Program  may  be  used  only
-- to program  PLD  devices (but not masked  PLD  devices) from  Altera.   Any
-- other  use  of such  megafunction  design,  netlist,  support  information,
-- device programming or simulation file,  or any other  related documentation
-- or information  is prohibited  for  any  other purpose,  including, but not
-- limited to  modification,  reverse engineering,  de-compiling, or use  with
-- any other  silicon devices,  unless such use is  explicitly  licensed under
-- a separate agreement with  Altera  or a megafunction partner.  Title to the
-- intellectual property,  including patents,  copyrights,  trademarks,  trade
-- secrets,  or maskworks,  embodied in any such megafunction design, netlist,
-- support  information,  device programming or simulation file,  or any other
-- related documentation or information provided by  Altera  or a megafunction
-- partner, remains with Altera, the megafunction partner, or their respective
-- licensors. No other licenses, including any licenses needed under any third
-- party's intellectual property, are provided herein.

-- VENDOR "Altera"
-- PROGRAM "Quartus II"
-- VERSION "Version 4.0 Build 214 3/25/2004 Service Pack 1 SJ Full Version"

-- DATE "05/10/2004 15:43:52"

-- 
-- Device: Altera EPXA4F672I2 Package FBGA672
-- 

-- 
-- This VHDL file should be used for ModelSim (VHDL output from Quartus II) only
-- 

LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	ROC IS
    PORT (
	CLK : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	RST : OUT std_logic
	);
END ROC;

ARCHITECTURE structure OF ROC IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL \RST_state~10\ : std_logic;
SIGNAL \RST_state~11\ : std_logic;
SIGNAL \RST_state~12\ : std_logic;

BEGIN

ww_CLK <= CLK;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
RST <= ww_RST;

\RST~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- RST = DFFE(!\RST_state~12\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00FF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \RST_state~12\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_RST);

\RST_state~10_I\ : apex20ke_lcell 
-- Equation(s):
-- \RST_state~10\ = DFFE(VCC, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \RST_state~10\);

\RST_state~11_I\ : apex20ke_lcell 
-- Equation(s):
-- \RST_state~11\ = DFFE(!\RST_state~10\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F0F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \RST_state~10\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \RST_state~11\);

\RST_state~12_I\ : apex20ke_lcell 
-- Equation(s):
-- \RST_state~12\ = DFFE(\RST_state~11\ # \RST_state~12\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFCC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \RST_state~11\,
	datad => \RST_state~12\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \RST_state~12\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	altclklock IS
    PORT (
	inclock : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	outclock0 : OUT std_logic;
	outclock1 : OUT std_logic
	);
END altclklock;

ARCHITECTURE structure OF altclklock IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_inclock : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_outclock0 : std_logic;
SIGNAL ww_outclock1 : std_logic;

BEGIN

ww_inclock <= inclock;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
outclock0 <= ww_outclock0;
outclock1 <= ww_outclock1;

pll : apex20ke_pll 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	effective_phase_shift => -1377,
	effective_clk0_delay => 46824,
	effective_clk1_delay => 21824,
	input_frequency => 50000,
	clk0_multiply_by => 1,
	clk1_multiply_by => 2,
	clk0_divide_by => 1,
	clk1_divide_by => 1,
	lock_low => 1,
	lock_high => 5,
	invalid_lock_multiplier => 1,
	valid_lock_multiplier => 5,
	phase_shift => 0,
	simulation_type => "functional")
-- pragma translate_on
PORT MAP (
	clk => ww_inclock,
	clk0 => ww_outclock0,
	clk1 => ww_outclock1);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	pll2x IS
    PORT (
	CLK2p : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	outclock0 : OUT std_logic;
	outclock1 : OUT std_logic
	);
END pll2x;

ARCHITECTURE structure OF pll2x IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK2p : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_outclock0 : std_logic;
SIGNAL ww_outclock1 : std_logic;

COMPONENT altclklock
    PORT (
	inclock : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	outclock0 : OUT std_logic;
	outclock1 : OUT std_logic);
END COMPONENT;

BEGIN

ww_CLK2p <= CLK2p;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
outclock0 <= ww_outclock0;
outclock1 <= ww_outclock1;
altclklock_component : altclklock
PORT MAP (
	inclock => ww_CLK2p,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	outclock0 => ww_outclock0,
	outclock1 => ww_outclock1);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	altclklock_1 IS
    PORT (
	inclock : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	outclock1 : OUT std_logic
	);
END altclklock_1;

ARCHITECTURE structure OF altclklock_1 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_inclock : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_outclock1 : std_logic;
SIGNAL pll : std_logic;

BEGIN

ww_inclock <= inclock;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
outclock1 <= ww_outclock1;

\pll~I\ : apex20ke_pll 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	effective_phase_shift => -1377,
	effective_clk1_delay => 9324,
	input_frequency => 50000,
	clk0_multiply_by => 1,
	clk1_multiply_by => 4,
	clk0_divide_by => 1,
	clk1_divide_by => 1,
	lock_low => 5,
	lock_high => 5,
	invalid_lock_multiplier => 5,
	valid_lock_multiplier => 5,
	phase_shift => 0,
	simulation_type => "functional")
-- pragma translate_on
PORT MAP (
	clk => ww_inclock,
	clk1 => ww_outclock1);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	pll4x IS
    PORT (
	CLK1p : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	outclock1 : OUT std_logic
	);
END pll4x;

ARCHITECTURE structure OF pll4x IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK1p : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_outclock1 : std_logic;

COMPONENT altclklock_1
    PORT (
	inclock : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	outclock1 : OUT std_logic);
END COMPONENT;

BEGIN

ww_CLK1p <= CLK1p;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
outclock1 <= ww_outclock1;
altclklock_component : altclklock_1
PORT MAP (
	inclock => ww_CLK1p,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	outclock1 => ww_outclock1);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	alt_exc_upcore IS
    PORT (
	MASTERHGRANT : IN std_logic;
	MASTERHRESP : IN std_logic_vector(1 DOWNTO 0);
	MASTERHCLK : IN std_logic;
	SLAVEHCLK : IN std_logic;
	MASTERHREADY : IN std_logic;
	INTNMI : IN std_logic;
	SLAVEHWDATA : IN std_logic_vector(31 DOWNTO 0);
	MASTERHRDATA : IN std_logic_vector(31 DOWNTO 0);
	SLAVEHSIZE : IN std_logic_vector(1 DOWNTO 0);
	SLAVEHSEL : IN std_logic;
	UARTRXD : IN std_logic;
	INTEXTPIN : IN std_logic;
	UARTDSRN : IN std_logic;
	UARTCTSN : IN std_logic;
	EBIACK : IN std_logic;
	combout : IN std_logic;
	combout1 : IN std_logic;
	combout2 : IN std_logic;
	combout3 : IN std_logic;
	combout4 : IN std_logic;
	combout5 : IN std_logic;
	combout6 : IN std_logic;
	combout7 : IN std_logic;
	combout8 : IN std_logic;
	combout9 : IN std_logic;
	combout10 : IN std_logic;
	combout11 : IN std_logic;
	combout12 : IN std_logic;
	combout13 : IN std_logic;
	combout14 : IN std_logic;
	combout15 : IN std_logic;
	combout16 : IN std_logic;
	combout17 : IN std_logic;
	combout18 : IN std_logic;
	combout19 : IN std_logic;
	combout20 : IN std_logic;
	combout21 : IN std_logic;
	combout22 : IN std_logic;
	combout23 : IN std_logic;
	combout24 : IN std_logic;
	combout25 : IN std_logic;
	combout26 : IN std_logic;
	combout27 : IN std_logic;
	combout28 : IN std_logic;
	combout29 : IN std_logic;
	combout30 : IN std_logic;
	combout31 : IN std_logic;
	combout32 : IN std_logic;
	combout33 : IN std_logic;
	combout34 : IN std_logic;
	combout35 : IN std_logic;
	combout36 : IN std_logic;
	combout37 : IN std_logic;
	combout38 : IN std_logic;
	combout39 : IN std_logic;
	combout40 : IN std_logic;
	combout41 : IN std_logic;
	combout42 : IN std_logic;
	combout43 : IN std_logic;
	combout44 : IN std_logic;
	combout45 : IN std_logic;
	combout46 : IN std_logic;
	combout47 : IN std_logic;
	combout48 : IN std_logic;
	combout49 : IN std_logic;
	combout50 : IN std_logic;
	combout51 : IN std_logic;
	combout52 : IN std_logic;
	combout53 : IN std_logic;
	combout54 : IN std_logic;
	CLK_REF : IN std_logic;
	nPOR : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	core : OUT std_logic;
	MASTERHWRITE : OUT std_logic;
	SLAVEHREADYO : OUT std_logic;
	core1 : OUT std_logic;
	core2 : OUT std_logic;
	core3 : OUT std_logic;
	core4 : OUT std_logic;
	core5 : OUT std_logic;
	core6 : OUT std_logic;
	core7 : OUT std_logic;
	core8 : OUT std_logic;
	core9 : OUT std_logic;
	core10 : OUT std_logic;
	core11 : OUT std_logic;
	core12 : OUT std_logic;
	core13 : OUT std_logic;
	core14 : OUT std_logic;
	core15 : OUT std_logic;
	core16 : OUT std_logic;
	core17 : OUT std_logic;
	MASTERHADDR : OUT std_logic_vector(31 DOWNTO 0);
	MASTERHTRANS : OUT std_logic_vector(1 DOWNTO 0);
	MASTERHSIZE : OUT std_logic_vector(1 DOWNTO 0);
	MASTERHBURST : OUT std_logic_vector(2 DOWNTO 0);
	MASTERHWDATA : OUT std_logic_vector(31 DOWNTO 0);
	core18 : OUT std_logic;
	core19 : OUT std_logic;
	core20 : OUT std_logic;
	core21 : OUT std_logic;
	core22 : OUT std_logic;
	core23 : OUT std_logic;
	core24 : OUT std_logic;
	core25 : OUT std_logic;
	core26 : OUT std_logic;
	core27 : OUT std_logic;
	core28 : OUT std_logic;
	core29 : OUT std_logic;
	core30 : OUT std_logic;
	core31 : OUT std_logic;
	core32 : OUT std_logic;
	core33 : OUT std_logic;
	core34 : OUT std_logic;
	core35 : OUT std_logic;
	core36 : OUT std_logic;
	core37 : OUT std_logic;
	core38 : OUT std_logic;
	core39 : OUT std_logic;
	core40 : OUT std_logic;
	core41 : OUT std_logic;
	core42 : OUT std_logic;
	core43 : OUT std_logic;
	core44 : OUT std_logic;
	core45 : OUT std_logic;
	core46 : OUT std_logic;
	core47 : OUT std_logic;
	core48 : OUT std_logic;
	core49 : OUT std_logic;
	core50 : OUT std_logic;
	core51 : OUT std_logic;
	core52 : OUT std_logic;
	core53 : OUT std_logic;
	core54 : OUT std_logic;
	core55 : OUT std_logic;
	core56 : OUT std_logic;
	core57 : OUT std_logic;
	core58 : OUT std_logic;
	core59 : OUT std_logic;
	core60 : OUT std_logic;
	core61 : OUT std_logic;
	core62 : OUT std_logic;
	core63 : OUT std_logic;
	core64 : OUT std_logic;
	core65 : OUT std_logic;
	core66 : OUT std_logic;
	core67 : OUT std_logic;
	core68 : OUT std_logic;
	core69 : OUT std_logic;
	core70 : OUT std_logic;
	core71 : OUT std_logic;
	core72 : OUT std_logic;
	core73 : OUT std_logic;
	core74 : OUT std_logic;
	core75 : OUT std_logic;
	core76 : OUT std_logic;
	core77 : OUT std_logic;
	core78 : OUT std_logic;
	core79 : OUT std_logic;
	core80 : OUT std_logic;
	core81 : OUT std_logic;
	core82 : OUT std_logic;
	core83 : OUT std_logic;
	core84 : OUT std_logic;
	core85 : OUT std_logic;
	core86 : OUT std_logic;
	core87 : OUT std_logic;
	core88 : OUT std_logic;
	core89 : OUT std_logic;
	core90 : OUT std_logic;
	core91 : OUT std_logic;
	core92 : OUT std_logic;
	core93 : OUT std_logic;
	core94 : OUT std_logic;
	core95 : OUT std_logic;
	core96 : OUT std_logic;
	core97 : OUT std_logic;
	core98 : OUT std_logic;
	core99 : OUT std_logic;
	core100 : OUT std_logic;
	core101 : OUT std_logic;
	core102 : OUT std_logic;
	core103 : OUT std_logic;
	core104 : OUT std_logic;
	core105 : OUT std_logic;
	core106 : OUT std_logic;
	core107 : OUT std_logic;
	core108 : OUT std_logic;
	core109 : OUT std_logic;
	core110 : OUT std_logic;
	core111 : OUT std_logic;
	core112 : OUT std_logic;
	core113 : OUT std_logic;
	core114 : OUT std_logic;
	core115 : OUT std_logic;
	core116 : OUT std_logic;
	core117 : OUT std_logic;
	core118 : OUT std_logic;
	core119 : OUT std_logic;
	core120 : OUT std_logic;
	core121 : OUT std_logic;
	core122 : OUT std_logic;
	core123 : OUT std_logic;
	core124 : OUT std_logic;
	core125 : OUT std_logic
	);
END alt_exc_upcore;

ARCHITECTURE structure OF alt_exc_upcore IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_MASTERHGRANT : std_logic;
SIGNAL ww_MASTERHRESP : std_logic_vector(1 DOWNTO 0);
SIGNAL ww_MASTERHCLK : std_logic;
SIGNAL ww_SLAVEHCLK : std_logic;
SIGNAL ww_MASTERHREADY : std_logic;
SIGNAL ww_INTNMI : std_logic;
SIGNAL ww_SLAVEHWDATA : std_logic_vector(31 DOWNTO 0);
SIGNAL ww_MASTERHRDATA : std_logic_vector(31 DOWNTO 0);
SIGNAL ww_SLAVEHSIZE : std_logic_vector(1 DOWNTO 0);
SIGNAL ww_SLAVEHSEL : std_logic;
SIGNAL ww_UARTRXD : std_logic;
SIGNAL ww_INTEXTPIN : std_logic;
SIGNAL ww_UARTDSRN : std_logic;
SIGNAL ww_UARTCTSN : std_logic;
SIGNAL ww_EBIACK : std_logic;
SIGNAL ww_combout : std_logic;
SIGNAL ww_combout1 : std_logic;
SIGNAL ww_combout2 : std_logic;
SIGNAL ww_combout3 : std_logic;
SIGNAL ww_combout4 : std_logic;
SIGNAL ww_combout5 : std_logic;
SIGNAL ww_combout6 : std_logic;
SIGNAL ww_combout7 : std_logic;
SIGNAL ww_combout8 : std_logic;
SIGNAL ww_combout9 : std_logic;
SIGNAL ww_combout10 : std_logic;
SIGNAL ww_combout11 : std_logic;
SIGNAL ww_combout12 : std_logic;
SIGNAL ww_combout13 : std_logic;
SIGNAL ww_combout14 : std_logic;
SIGNAL ww_combout15 : std_logic;
SIGNAL ww_combout16 : std_logic;
SIGNAL ww_combout17 : std_logic;
SIGNAL ww_combout18 : std_logic;
SIGNAL ww_combout19 : std_logic;
SIGNAL ww_combout20 : std_logic;
SIGNAL ww_combout21 : std_logic;
SIGNAL ww_combout22 : std_logic;
SIGNAL ww_combout23 : std_logic;
SIGNAL ww_combout24 : std_logic;
SIGNAL ww_combout25 : std_logic;
SIGNAL ww_combout26 : std_logic;
SIGNAL ww_combout27 : std_logic;
SIGNAL ww_combout28 : std_logic;
SIGNAL ww_combout29 : std_logic;
SIGNAL ww_combout30 : std_logic;
SIGNAL ww_combout31 : std_logic;
SIGNAL ww_combout32 : std_logic;
SIGNAL ww_combout33 : std_logic;
SIGNAL ww_combout34 : std_logic;
SIGNAL ww_combout35 : std_logic;
SIGNAL ww_combout36 : std_logic;
SIGNAL ww_combout37 : std_logic;
SIGNAL ww_combout38 : std_logic;
SIGNAL ww_combout39 : std_logic;
SIGNAL ww_combout40 : std_logic;
SIGNAL ww_combout41 : std_logic;
SIGNAL ww_combout42 : std_logic;
SIGNAL ww_combout43 : std_logic;
SIGNAL ww_combout44 : std_logic;
SIGNAL ww_combout45 : std_logic;
SIGNAL ww_combout46 : std_logic;
SIGNAL ww_combout47 : std_logic;
SIGNAL ww_combout48 : std_logic;
SIGNAL ww_combout49 : std_logic;
SIGNAL ww_combout50 : std_logic;
SIGNAL ww_combout51 : std_logic;
SIGNAL ww_combout52 : std_logic;
SIGNAL ww_combout53 : std_logic;
SIGNAL ww_combout54 : std_logic;
SIGNAL ww_CLK_REF : std_logic;
SIGNAL ww_nPOR : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_core : std_logic;
SIGNAL ww_MASTERHWRITE : std_logic;
SIGNAL ww_SLAVEHREADYO : std_logic;
SIGNAL ww_core1 : std_logic;
SIGNAL ww_core2 : std_logic;
SIGNAL ww_core3 : std_logic;
SIGNAL ww_core4 : std_logic;
SIGNAL ww_core5 : std_logic;
SIGNAL ww_core6 : std_logic;
SIGNAL ww_core7 : std_logic;
SIGNAL ww_core8 : std_logic;
SIGNAL ww_core9 : std_logic;
SIGNAL ww_core10 : std_logic;
SIGNAL ww_core11 : std_logic;
SIGNAL ww_core12 : std_logic;
SIGNAL ww_core13 : std_logic;
SIGNAL ww_core14 : std_logic;
SIGNAL ww_core15 : std_logic;
SIGNAL ww_core16 : std_logic;
SIGNAL ww_core17 : std_logic;
SIGNAL ww_MASTERHADDR : std_logic_vector(31 DOWNTO 0);
SIGNAL ww_MASTERHTRANS : std_logic_vector(1 DOWNTO 0);
SIGNAL ww_MASTERHSIZE : std_logic_vector(1 DOWNTO 0);
SIGNAL ww_MASTERHBURST : std_logic_vector(2 DOWNTO 0);
SIGNAL ww_MASTERHWDATA : std_logic_vector(31 DOWNTO 0);
SIGNAL ww_core18 : std_logic;
SIGNAL ww_core19 : std_logic;
SIGNAL ww_core20 : std_logic;
SIGNAL ww_core21 : std_logic;
SIGNAL ww_core22 : std_logic;
SIGNAL ww_core23 : std_logic;
SIGNAL ww_core24 : std_logic;
SIGNAL ww_core25 : std_logic;
SIGNAL ww_core26 : std_logic;
SIGNAL ww_core27 : std_logic;
SIGNAL ww_core28 : std_logic;
SIGNAL ww_core29 : std_logic;
SIGNAL ww_core30 : std_logic;
SIGNAL ww_core31 : std_logic;
SIGNAL ww_core32 : std_logic;
SIGNAL ww_core33 : std_logic;
SIGNAL ww_core34 : std_logic;
SIGNAL ww_core35 : std_logic;
SIGNAL ww_core36 : std_logic;
SIGNAL ww_core37 : std_logic;
SIGNAL ww_core38 : std_logic;
SIGNAL ww_core39 : std_logic;
SIGNAL ww_core40 : std_logic;
SIGNAL ww_core41 : std_logic;
SIGNAL ww_core42 : std_logic;
SIGNAL ww_core43 : std_logic;
SIGNAL ww_core44 : std_logic;
SIGNAL ww_core45 : std_logic;
SIGNAL ww_core46 : std_logic;
SIGNAL ww_core47 : std_logic;
SIGNAL ww_core48 : std_logic;
SIGNAL ww_core49 : std_logic;
SIGNAL ww_core50 : std_logic;
SIGNAL ww_core51 : std_logic;
SIGNAL ww_core52 : std_logic;
SIGNAL ww_core53 : std_logic;
SIGNAL ww_core54 : std_logic;
SIGNAL ww_core55 : std_logic;
SIGNAL ww_core56 : std_logic;
SIGNAL ww_core57 : std_logic;
SIGNAL ww_core58 : std_logic;
SIGNAL ww_core59 : std_logic;
SIGNAL ww_core60 : std_logic;
SIGNAL ww_core61 : std_logic;
SIGNAL ww_core62 : std_logic;
SIGNAL ww_core63 : std_logic;
SIGNAL ww_core64 : std_logic;
SIGNAL ww_core65 : std_logic;
SIGNAL ww_core66 : std_logic;
SIGNAL ww_core67 : std_logic;
SIGNAL ww_core68 : std_logic;
SIGNAL ww_core69 : std_logic;
SIGNAL ww_core70 : std_logic;
SIGNAL ww_core71 : std_logic;
SIGNAL ww_core72 : std_logic;
SIGNAL ww_core73 : std_logic;
SIGNAL ww_core74 : std_logic;
SIGNAL ww_core75 : std_logic;
SIGNAL ww_core76 : std_logic;
SIGNAL ww_core77 : std_logic;
SIGNAL ww_core78 : std_logic;
SIGNAL ww_core79 : std_logic;
SIGNAL ww_core80 : std_logic;
SIGNAL ww_core81 : std_logic;
SIGNAL ww_core82 : std_logic;
SIGNAL ww_core83 : std_logic;
SIGNAL ww_core84 : std_logic;
SIGNAL ww_core85 : std_logic;
SIGNAL ww_core86 : std_logic;
SIGNAL ww_core87 : std_logic;
SIGNAL ww_core88 : std_logic;
SIGNAL ww_core89 : std_logic;
SIGNAL ww_core90 : std_logic;
SIGNAL ww_core91 : std_logic;
SIGNAL ww_core92 : std_logic;
SIGNAL ww_core93 : std_logic;
SIGNAL ww_core94 : std_logic;
SIGNAL ww_core95 : std_logic;
SIGNAL ww_core96 : std_logic;
SIGNAL ww_core97 : std_logic;
SIGNAL ww_core98 : std_logic;
SIGNAL ww_core99 : std_logic;
SIGNAL ww_core100 : std_logic;
SIGNAL ww_core101 : std_logic;
SIGNAL ww_core102 : std_logic;
SIGNAL ww_core103 : std_logic;
SIGNAL ww_core104 : std_logic;
SIGNAL ww_core105 : std_logic;
SIGNAL ww_core106 : std_logic;
SIGNAL ww_core107 : std_logic;
SIGNAL ww_core108 : std_logic;
SIGNAL ww_core109 : std_logic;
SIGNAL ww_core110 : std_logic;
SIGNAL ww_core111 : std_logic;
SIGNAL ww_core112 : std_logic;
SIGNAL ww_core113 : std_logic;
SIGNAL ww_core114 : std_logic;
SIGNAL ww_core115 : std_logic;
SIGNAL ww_core116 : std_logic;
SIGNAL ww_core117 : std_logic;
SIGNAL ww_core118 : std_logic;
SIGNAL ww_core119 : std_logic;
SIGNAL ww_core120 : std_logic;
SIGNAL ww_core121 : std_logic;
SIGNAL ww_core122 : std_logic;
SIGNAL ww_core123 : std_logic;
SIGNAL ww_core124 : std_logic;
SIGNAL ww_core125 : std_logic;
SIGNAL \ww_core~I_slavehaddr\ : std_logic_vector(31 DOWNTO 0);
SIGNAL \ww_core~I_slavehtrans\ : std_logic_vector(1 DOWNTO 0);
SIGNAL \ww_core~I_slavehsize\ : std_logic_vector(1 DOWNTO 0);
SIGNAL \ww_core~I_slavehburst\ : std_logic_vector(2 DOWNTO 0);
SIGNAL \ww_core~I_slavehwdata\ : std_logic_vector(31 DOWNTO 0);
SIGNAL \ww_core~I_masterhresp\ : std_logic_vector(1 DOWNTO 0);
SIGNAL \ww_core~I_masterhrdata\ : std_logic_vector(31 DOWNTO 0);
SIGNAL \ww_core~I_sdramdqsin\ : std_logic_vector(3 DOWNTO 0);
SIGNAL \ww_core~I_sdramdqin\ : std_logic_vector(31 DOWNTO 0);
SIGNAL \ww_core~I_ebidqin\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_core~I_intpld\ : std_logic_vector(5 DOWNTO 0);
SIGNAL \ww_core~I_debugextin\ : std_logic_vector(3 DOWNTO 0);
SIGNAL \ww_core~I_gpi\ : std_logic_vector(7 DOWNTO 0);
SIGNAL \ww_core~I_masterhaddr\ : std_logic_vector(31 DOWNTO 0);
SIGNAL \ww_core~I_masterhtrans\ : std_logic_vector(1 DOWNTO 0);
SIGNAL \ww_core~I_masterhsize\ : std_logic_vector(1 DOWNTO 0);
SIGNAL \ww_core~I_masterhburst\ : std_logic_vector(2 DOWNTO 0);
SIGNAL \ww_core~I_masterhwdata\ : std_logic_vector(31 DOWNTO 0);
SIGNAL \ww_core~I_sdramcsn\ : std_logic_vector(1 DOWNTO 0);
SIGNAL \ww_core~I_sdramdqm\ : std_logic_vector(3 DOWNTO 0);
SIGNAL \ww_core~I_sdramaddr\ : std_logic_vector(14 DOWNTO 0);
SIGNAL \ww_core~I_sdramdqout\ : std_logic_vector(31 DOWNTO 0);
SIGNAL \ww_core~I_sdramdqsout\ : std_logic_vector(3 DOWNTO 0);
SIGNAL \ww_core~I_sdramdqoe\ : std_logic_vector(3 DOWNTO 0);
SIGNAL \ww_core~I_ebibe\ : std_logic_vector(1 DOWNTO 0);
SIGNAL \ww_core~I_ebidqout\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_core~I_ebiaddr\ : std_logic_vector(24 DOWNTO 0);
SIGNAL \ww_core~I_ebicsn\ : std_logic_vector(3 DOWNTO 0);
SIGNAL ALT_NOT_ww_MASTERHGRANT : std_logic;
SIGNAL ALT_NOT_ww_MASTERHRESP : std_logic_vector(1 DOWNTO 0);
SIGNAL ALT_NOT_ww_MASTERHREADY : std_logic;

BEGIN

ww_MASTERHGRANT <= MASTERHGRANT;
ww_MASTERHRESP <= MASTERHRESP;
ww_MASTERHCLK <= MASTERHCLK;
ww_SLAVEHCLK <= SLAVEHCLK;
ww_MASTERHREADY <= MASTERHREADY;
ww_INTNMI <= INTNMI;
ww_SLAVEHWDATA <= SLAVEHWDATA;
ww_MASTERHRDATA <= MASTERHRDATA;
ww_SLAVEHSIZE <= SLAVEHSIZE;
ww_SLAVEHSEL <= SLAVEHSEL;
ww_UARTRXD <= UARTRXD;
ww_INTEXTPIN <= INTEXTPIN;
ww_UARTDSRN <= UARTDSRN;
ww_UARTCTSN <= UARTCTSN;
ww_EBIACK <= EBIACK;
ww_combout <= combout;
ww_combout1 <= combout1;
ww_combout2 <= combout2;
ww_combout3 <= combout3;
ww_combout4 <= combout4;
ww_combout5 <= combout5;
ww_combout6 <= combout6;
ww_combout7 <= combout7;
ww_combout8 <= combout8;
ww_combout9 <= combout9;
ww_combout10 <= combout10;
ww_combout11 <= combout11;
ww_combout12 <= combout12;
ww_combout13 <= combout13;
ww_combout14 <= combout14;
ww_combout15 <= combout15;
ww_combout16 <= combout16;
ww_combout17 <= combout17;
ww_combout18 <= combout18;
ww_combout19 <= combout19;
ww_combout20 <= combout20;
ww_combout21 <= combout21;
ww_combout22 <= combout22;
ww_combout23 <= combout23;
ww_combout24 <= combout24;
ww_combout25 <= combout25;
ww_combout26 <= combout26;
ww_combout27 <= combout27;
ww_combout28 <= combout28;
ww_combout29 <= combout29;
ww_combout30 <= combout30;
ww_combout31 <= combout31;
ww_combout32 <= combout32;
ww_combout33 <= combout33;
ww_combout34 <= combout34;
ww_combout35 <= combout35;
ww_combout36 <= combout36;
ww_combout37 <= combout37;
ww_combout38 <= combout38;
ww_combout39 <= combout39;
ww_combout40 <= combout40;
ww_combout41 <= combout41;
ww_combout42 <= combout42;
ww_combout43 <= combout43;
ww_combout44 <= combout44;
ww_combout45 <= combout45;
ww_combout46 <= combout46;
ww_combout47 <= combout47;
ww_combout48 <= combout48;
ww_combout49 <= combout49;
ww_combout50 <= combout50;
ww_combout51 <= combout51;
ww_combout52 <= combout52;
ww_combout53 <= combout53;
ww_combout54 <= combout54;
ww_CLK_REF <= CLK_REF;
ww_nPOR <= nPOR;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
core <= ww_core;
MASTERHWRITE <= ww_MASTERHWRITE;
SLAVEHREADYO <= ww_SLAVEHREADYO;
core1 <= ww_core1;
core2 <= ww_core2;
core3 <= ww_core3;
core4 <= ww_core4;
core5 <= ww_core5;
core6 <= ww_core6;
core7 <= ww_core7;
core8 <= ww_core8;
core9 <= ww_core9;
core10 <= ww_core10;
core11 <= ww_core11;
core12 <= ww_core12;
core13 <= ww_core13;
core14 <= ww_core14;
core15 <= ww_core15;
core16 <= ww_core16;
core17 <= ww_core17;
MASTERHADDR <= ww_MASTERHADDR;
MASTERHTRANS <= ww_MASTERHTRANS;
MASTERHSIZE <= ww_MASTERHSIZE;
MASTERHBURST <= ww_MASTERHBURST;
MASTERHWDATA <= ww_MASTERHWDATA;
core18 <= ww_core18;
core19 <= ww_core19;
core20 <= ww_core20;
core21 <= ww_core21;
core22 <= ww_core22;
core23 <= ww_core23;
core24 <= ww_core24;
core25 <= ww_core25;
core26 <= ww_core26;
core27 <= ww_core27;
core28 <= ww_core28;
core29 <= ww_core29;
core30 <= ww_core30;
core31 <= ww_core31;
core32 <= ww_core32;
core33 <= ww_core33;
core34 <= ww_core34;
core35 <= ww_core35;
core36 <= ww_core36;
core37 <= ww_core37;
core38 <= ww_core38;
core39 <= ww_core39;
core40 <= ww_core40;
core41 <= ww_core41;
core42 <= ww_core42;
core43 <= ww_core43;
core44 <= ww_core44;
core45 <= ww_core45;
core46 <= ww_core46;
core47 <= ww_core47;
core48 <= ww_core48;
core49 <= ww_core49;
core50 <= ww_core50;
core51 <= ww_core51;
core52 <= ww_core52;
core53 <= ww_core53;
core54 <= ww_core54;
core55 <= ww_core55;
core56 <= ww_core56;
core57 <= ww_core57;
core58 <= ww_core58;
core59 <= ww_core59;
core60 <= ww_core60;
core61 <= ww_core61;
core62 <= ww_core62;
core63 <= ww_core63;
core64 <= ww_core64;
core65 <= ww_core65;
core66 <= ww_core66;
core67 <= ww_core67;
core68 <= ww_core68;
core69 <= ww_core69;
core70 <= ww_core70;
core71 <= ww_core71;
core72 <= ww_core72;
core73 <= ww_core73;
core74 <= ww_core74;
core75 <= ww_core75;
core76 <= ww_core76;
core77 <= ww_core77;
core78 <= ww_core78;
core79 <= ww_core79;
core80 <= ww_core80;
core81 <= ww_core81;
core82 <= ww_core82;
core83 <= ww_core83;
core84 <= ww_core84;
core85 <= ww_core85;
core86 <= ww_core86;
core87 <= ww_core87;
core88 <= ww_core88;
core89 <= ww_core89;
core90 <= ww_core90;
core91 <= ww_core91;
core92 <= ww_core92;
core93 <= ww_core93;
core94 <= ww_core94;
core95 <= ww_core95;
core96 <= ww_core96;
core97 <= ww_core97;
core98 <= ww_core98;
core99 <= ww_core99;
core100 <= ww_core100;
core101 <= ww_core101;
core102 <= ww_core102;
core103 <= ww_core103;
core104 <= ww_core104;
core105 <= ww_core105;
core106 <= ww_core106;
core107 <= ww_core107;
core108 <= ww_core108;
core109 <= ww_core109;
core110 <= ww_core110;
core111 <= ww_core111;
core112 <= ww_core112;
core113 <= ww_core113;
core114 <= ww_core114;
core115 <= ww_core115;
core116 <= ww_core116;
core117 <= ww_core117;
core118 <= ww_core118;
core119 <= ww_core119;
core120 <= ww_core120;
core121 <= ww_core121;
core122 <= ww_core122;
core123 <= ww_core123;
core124 <= ww_core124;
core125 <= ww_core125;

\ww_core~I_slavehaddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd);

\ww_core~I_slavehtrans\ <= (gnd & gnd);

\ww_core~I_slavehsize\ <= (ww_SLAVEHSIZE(1) & gnd);

\ww_core~I_slavehburst\ <= (gnd & gnd & gnd);

\ww_core~I_slavehwdata\ <= (ww_SLAVEHWDATA(31) & ww_SLAVEHWDATA(30) & ww_SLAVEHWDATA(29) & ww_SLAVEHWDATA(28) & ww_SLAVEHWDATA(27) & ww_SLAVEHWDATA(26) & ww_SLAVEHWDATA(25) & ww_SLAVEHWDATA(24) & ww_SLAVEHWDATA(23) & ww_SLAVEHWDATA(22) & 
ww_SLAVEHWDATA(21) & ww_SLAVEHWDATA(20) & ww_SLAVEHWDATA(19) & ww_SLAVEHWDATA(18) & ww_SLAVEHWDATA(17) & ww_SLAVEHWDATA(16) & ww_SLAVEHWDATA(15) & ww_SLAVEHWDATA(14) & ww_SLAVEHWDATA(13) & ww_SLAVEHWDATA(12) & ww_SLAVEHWDATA(11) & 
ww_SLAVEHWDATA(10) & ww_SLAVEHWDATA(9) & ww_SLAVEHWDATA(8) & ww_SLAVEHWDATA(7) & ww_SLAVEHWDATA(6) & ww_SLAVEHWDATA(5) & ww_SLAVEHWDATA(4) & ww_SLAVEHWDATA(3) & ww_SLAVEHWDATA(2) & ww_SLAVEHWDATA(1) & ww_SLAVEHWDATA(0));

\ww_core~I_masterhresp\ <= (NOT ww_MASTERHRESP(1) & NOT ww_MASTERHRESP(0));

\ww_core~I_masterhrdata\ <= (ww_MASTERHRDATA(31) & ww_MASTERHRDATA(30) & ww_MASTERHRDATA(29) & ww_MASTERHRDATA(28) & ww_MASTERHRDATA(27) & ww_MASTERHRDATA(26) & ww_MASTERHRDATA(25) & ww_MASTERHRDATA(24) & ww_MASTERHRDATA(23) & 
ww_MASTERHRDATA(22) & ww_MASTERHRDATA(21) & ww_MASTERHRDATA(20) & ww_MASTERHRDATA(19) & ww_MASTERHRDATA(18) & ww_MASTERHRDATA(17) & ww_MASTERHRDATA(16) & ww_MASTERHRDATA(15) & ww_MASTERHRDATA(14) & ww_MASTERHRDATA(13) & ww_MASTERHRDATA(12) & 
ww_MASTERHRDATA(11) & ww_MASTERHRDATA(10) & ww_MASTERHRDATA(9) & ww_MASTERHRDATA(8) & ww_MASTERHRDATA(7) & ww_MASTERHRDATA(6) & ww_MASTERHRDATA(5) & ww_MASTERHRDATA(4) & ww_MASTERHRDATA(3) & ww_MASTERHRDATA(2) & ww_MASTERHRDATA(1) & 
ww_MASTERHRDATA(0));

\ww_core~I_sdramdqsin\ <= (ww_combout3 & ww_combout2 & ww_combout1 & ww_combout);

\ww_core~I_sdramdqin\ <= (ww_combout35 & ww_combout34 & ww_combout33 & ww_combout32 & ww_combout31 & ww_combout30 & ww_combout29 & ww_combout28 & ww_combout27 & ww_combout26 & ww_combout25 & ww_combout24 & ww_combout23 & ww_combout22 & ww_combout21 & 
ww_combout20 & ww_combout19 & ww_combout18 & ww_combout17 & ww_combout16 & ww_combout15 & ww_combout14 & ww_combout13 & ww_combout12 & ww_combout11 & ww_combout10 & ww_combout9 & ww_combout8 & ww_combout7 & ww_combout6 & ww_combout5 & ww_combout4);

\ww_core~I_ebidqin\ <= (ww_combout51 & ww_combout50 & ww_combout49 & ww_combout48 & ww_combout47 & ww_combout46 & ww_combout45 & ww_combout44 & ww_combout43 & ww_combout42 & ww_combout41 & ww_combout40 & ww_combout39 & ww_combout38 & ww_combout37 & 
ww_combout36);

\ww_core~I_intpld\ <= (gnd & gnd & gnd & gnd & gnd & gnd);

\ww_core~I_debugextin\ <= (gnd & gnd & gnd & gnd);

\ww_core~I_gpi\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd);

ww_MASTERHADDR(2) <= \ww_core~I_masterhaddr\(2);
ww_MASTERHADDR(3) <= \ww_core~I_masterhaddr\(3);
ww_MASTERHADDR(4) <= \ww_core~I_masterhaddr\(4);
ww_MASTERHADDR(5) <= \ww_core~I_masterhaddr\(5);
ww_MASTERHADDR(6) <= \ww_core~I_masterhaddr\(6);
ww_MASTERHADDR(7) <= \ww_core~I_masterhaddr\(7);
ww_MASTERHADDR(8) <= \ww_core~I_masterhaddr\(8);
ww_MASTERHADDR(9) <= \ww_core~I_masterhaddr\(9);
ww_MASTERHADDR(10) <= \ww_core~I_masterhaddr\(10);
ww_MASTERHADDR(12) <= \ww_core~I_masterhaddr\(12);
ww_MASTERHADDR(13) <= \ww_core~I_masterhaddr\(13);
ww_MASTERHADDR(14) <= \ww_core~I_masterhaddr\(14);
ww_MASTERHADDR(15) <= \ww_core~I_masterhaddr\(15);
ww_MASTERHADDR(18) <= \ww_core~I_masterhaddr\(18);
ww_MASTERHADDR(19) <= \ww_core~I_masterhaddr\(19);

ww_MASTERHTRANS(0) <= \ww_core~I_masterhtrans\(0);
ww_MASTERHTRANS(1) <= \ww_core~I_masterhtrans\(1);

ww_MASTERHSIZE(0) <= \ww_core~I_masterhsize\(0);
ww_MASTERHSIZE(1) <= \ww_core~I_masterhsize\(1);

ww_MASTERHBURST(0) <= \ww_core~I_masterhburst\(0);
ww_MASTERHBURST(1) <= \ww_core~I_masterhburst\(1);
ww_MASTERHBURST(2) <= \ww_core~I_masterhburst\(2);

ww_MASTERHWDATA(0) <= \ww_core~I_masterhwdata\(0);
ww_MASTERHWDATA(1) <= \ww_core~I_masterhwdata\(1);
ww_MASTERHWDATA(2) <= \ww_core~I_masterhwdata\(2);
ww_MASTERHWDATA(3) <= \ww_core~I_masterhwdata\(3);
ww_MASTERHWDATA(4) <= \ww_core~I_masterhwdata\(4);
ww_MASTERHWDATA(5) <= \ww_core~I_masterhwdata\(5);
ww_MASTERHWDATA(6) <= \ww_core~I_masterhwdata\(6);
ww_MASTERHWDATA(7) <= \ww_core~I_masterhwdata\(7);
ww_MASTERHWDATA(8) <= \ww_core~I_masterhwdata\(8);
ww_MASTERHWDATA(9) <= \ww_core~I_masterhwdata\(9);
ww_MASTERHWDATA(10) <= \ww_core~I_masterhwdata\(10);
ww_MASTERHWDATA(11) <= \ww_core~I_masterhwdata\(11);
ww_MASTERHWDATA(12) <= \ww_core~I_masterhwdata\(12);
ww_MASTERHWDATA(13) <= \ww_core~I_masterhwdata\(13);
ww_MASTERHWDATA(14) <= \ww_core~I_masterhwdata\(14);
ww_MASTERHWDATA(15) <= \ww_core~I_masterhwdata\(15);
ww_MASTERHWDATA(16) <= \ww_core~I_masterhwdata\(16);
ww_MASTERHWDATA(17) <= \ww_core~I_masterhwdata\(17);
ww_MASTERHWDATA(18) <= \ww_core~I_masterhwdata\(18);
ww_MASTERHWDATA(19) <= \ww_core~I_masterhwdata\(19);
ww_MASTERHWDATA(20) <= \ww_core~I_masterhwdata\(20);
ww_MASTERHWDATA(21) <= \ww_core~I_masterhwdata\(21);
ww_MASTERHWDATA(22) <= \ww_core~I_masterhwdata\(22);
ww_MASTERHWDATA(23) <= \ww_core~I_masterhwdata\(23);
ww_MASTERHWDATA(24) <= \ww_core~I_masterhwdata\(24);
ww_MASTERHWDATA(25) <= \ww_core~I_masterhwdata\(25);
ww_MASTERHWDATA(26) <= \ww_core~I_masterhwdata\(26);
ww_MASTERHWDATA(27) <= \ww_core~I_masterhwdata\(27);
ww_MASTERHWDATA(28) <= \ww_core~I_masterhwdata\(28);
ww_MASTERHWDATA(29) <= \ww_core~I_masterhwdata\(29);
ww_MASTERHWDATA(30) <= \ww_core~I_masterhwdata\(30);
ww_MASTERHWDATA(31) <= \ww_core~I_masterhwdata\(31);

ww_core37 <= \ww_core~I_sdramcsn\(0);
ww_core38 <= \ww_core~I_sdramcsn\(1);

ww_core18 <= \ww_core~I_sdramdqm\(0);
ww_core19 <= \ww_core~I_sdramdqm\(1);
ww_core20 <= \ww_core~I_sdramdqm\(2);
ww_core21 <= \ww_core~I_sdramdqm\(3);

ww_core22 <= \ww_core~I_sdramaddr\(0);
ww_core23 <= \ww_core~I_sdramaddr\(1);
ww_core24 <= \ww_core~I_sdramaddr\(2);
ww_core25 <= \ww_core~I_sdramaddr\(3);
ww_core26 <= \ww_core~I_sdramaddr\(4);
ww_core27 <= \ww_core~I_sdramaddr\(5);
ww_core28 <= \ww_core~I_sdramaddr\(6);
ww_core29 <= \ww_core~I_sdramaddr\(7);
ww_core30 <= \ww_core~I_sdramaddr\(8);
ww_core31 <= \ww_core~I_sdramaddr\(9);
ww_core32 <= \ww_core~I_sdramaddr\(10);
ww_core33 <= \ww_core~I_sdramaddr\(11);
ww_core34 <= \ww_core~I_sdramaddr\(12);
ww_core35 <= \ww_core~I_sdramaddr\(13);
ww_core36 <= \ww_core~I_sdramaddr\(14);

ww_core39 <= \ww_core~I_sdramdqout\(0);
ww_core40 <= \ww_core~I_sdramdqout\(1);
ww_core41 <= \ww_core~I_sdramdqout\(2);
ww_core42 <= \ww_core~I_sdramdqout\(3);
ww_core43 <= \ww_core~I_sdramdqout\(4);
ww_core44 <= \ww_core~I_sdramdqout\(5);
ww_core45 <= \ww_core~I_sdramdqout\(6);
ww_core46 <= \ww_core~I_sdramdqout\(7);
ww_core47 <= \ww_core~I_sdramdqout\(8);
ww_core48 <= \ww_core~I_sdramdqout\(9);
ww_core49 <= \ww_core~I_sdramdqout\(10);
ww_core50 <= \ww_core~I_sdramdqout\(11);
ww_core51 <= \ww_core~I_sdramdqout\(12);
ww_core52 <= \ww_core~I_sdramdqout\(13);
ww_core53 <= \ww_core~I_sdramdqout\(14);
ww_core54 <= \ww_core~I_sdramdqout\(15);
ww_core55 <= \ww_core~I_sdramdqout\(16);
ww_core56 <= \ww_core~I_sdramdqout\(17);
ww_core57 <= \ww_core~I_sdramdqout\(18);
ww_core58 <= \ww_core~I_sdramdqout\(19);
ww_core59 <= \ww_core~I_sdramdqout\(20);
ww_core60 <= \ww_core~I_sdramdqout\(21);
ww_core61 <= \ww_core~I_sdramdqout\(22);
ww_core62 <= \ww_core~I_sdramdqout\(23);
ww_core63 <= \ww_core~I_sdramdqout\(24);
ww_core64 <= \ww_core~I_sdramdqout\(25);
ww_core65 <= \ww_core~I_sdramdqout\(26);
ww_core66 <= \ww_core~I_sdramdqout\(27);
ww_core67 <= \ww_core~I_sdramdqout\(28);
ww_core68 <= \ww_core~I_sdramdqout\(29);
ww_core69 <= \ww_core~I_sdramdqout\(30);
ww_core70 <= \ww_core~I_sdramdqout\(31);

ww_core71 <= \ww_core~I_sdramdqsout\(0);
ww_core72 <= \ww_core~I_sdramdqsout\(1);
ww_core73 <= \ww_core~I_sdramdqsout\(2);
ww_core74 <= \ww_core~I_sdramdqsout\(3);

ww_core75 <= \ww_core~I_sdramdqoe\(0);
ww_core76 <= \ww_core~I_sdramdqoe\(1);
ww_core77 <= \ww_core~I_sdramdqoe\(2);
ww_core78 <= \ww_core~I_sdramdqoe\(3);

ww_core95 <= \ww_core~I_ebibe\(0);
ww_core96 <= \ww_core~I_ebibe\(1);

ww_core79 <= \ww_core~I_ebidqout\(0);
ww_core80 <= \ww_core~I_ebidqout\(1);
ww_core81 <= \ww_core~I_ebidqout\(2);
ww_core82 <= \ww_core~I_ebidqout\(3);
ww_core83 <= \ww_core~I_ebidqout\(4);
ww_core84 <= \ww_core~I_ebidqout\(5);
ww_core85 <= \ww_core~I_ebidqout\(6);
ww_core86 <= \ww_core~I_ebidqout\(7);
ww_core87 <= \ww_core~I_ebidqout\(8);
ww_core88 <= \ww_core~I_ebidqout\(9);
ww_core89 <= \ww_core~I_ebidqout\(10);
ww_core90 <= \ww_core~I_ebidqout\(11);
ww_core91 <= \ww_core~I_ebidqout\(12);
ww_core92 <= \ww_core~I_ebidqout\(13);
ww_core93 <= \ww_core~I_ebidqout\(14);
ww_core94 <= \ww_core~I_ebidqout\(15);

ww_core101 <= \ww_core~I_ebiaddr\(0);
ww_core102 <= \ww_core~I_ebiaddr\(1);
ww_core103 <= \ww_core~I_ebiaddr\(2);
ww_core104 <= \ww_core~I_ebiaddr\(3);
ww_core105 <= \ww_core~I_ebiaddr\(4);
ww_core106 <= \ww_core~I_ebiaddr\(5);
ww_core107 <= \ww_core~I_ebiaddr\(6);
ww_core108 <= \ww_core~I_ebiaddr\(7);
ww_core109 <= \ww_core~I_ebiaddr\(8);
ww_core110 <= \ww_core~I_ebiaddr\(9);
ww_core111 <= \ww_core~I_ebiaddr\(10);
ww_core112 <= \ww_core~I_ebiaddr\(11);
ww_core113 <= \ww_core~I_ebiaddr\(12);
ww_core114 <= \ww_core~I_ebiaddr\(13);
ww_core115 <= \ww_core~I_ebiaddr\(14);
ww_core116 <= \ww_core~I_ebiaddr\(15);
ww_core117 <= \ww_core~I_ebiaddr\(16);
ww_core118 <= \ww_core~I_ebiaddr\(17);
ww_core119 <= \ww_core~I_ebiaddr\(18);
ww_core120 <= \ww_core~I_ebiaddr\(19);
ww_core121 <= \ww_core~I_ebiaddr\(20);
ww_core122 <= \ww_core~I_ebiaddr\(21);
ww_core123 <= \ww_core~I_ebiaddr\(22);
ww_core124 <= \ww_core~I_ebiaddr\(23);
ww_core125 <= \ww_core~I_ebiaddr\(24);

ww_core97 <= \ww_core~I_ebicsn\(0);
ww_core98 <= \ww_core~I_ebicsn\(1);
ww_core99 <= \ww_core~I_ebicsn\(2);
ww_core100 <= \ww_core~I_ebicsn\(3);
ALT_NOT_ww_MASTERHGRANT <= NOT ww_MASTERHGRANT;
ALT_NOT_ww_MASTERHRESP(0) <= NOT ww_MASTERHRESP(0);
ALT_NOT_ww_MASTERHRESP(1) <= NOT ww_MASTERHRESP(1);
ALT_NOT_ww_MASTERHREADY <= NOT ww_MASTERHREADY;

\core~I\ : apex20ke_upcore 
-- pragma translate_off
GENERIC MAP (
	processor => "ARM",
	sdram_width => 32,
	sdramdqm_width => 4,
	gpio_width => 8)
-- pragma translate_on
PORT MAP (
	clkref => ww_CLK_REF,
	npor => ww_nPOR,
	nreseti => ww_combout54,
	slavehclk => ww_MASTERHCLK,
	slavehwrite => GND,
	slavehreadyi => ww_SLAVEHREADYO,
	slavehselreg => GND,
	slavehsel => ww_SLAVEHSIZE(1),
	slavehmastlock => GND,
	masterhclk => ww_MASTERHCLK,
	masterhready => ALT_NOT_ww_MASTERHREADY,
	masterhgrant => ALT_NOT_ww_MASTERHGRANT,
	ebiack => ww_EBIACK,
	uartctsn => ww_UARTCTSN,
	uartdcdin => ww_combout53,
	uartdsrn => ww_UARTDSRN,
	uartrxd => ww_UARTRXD,
	uartriin => ww_combout52,
	intextpin => ww_INTEXTPIN,
	debugrq => GND,
	debugext0 => GND,
	debugext1 => GND,
	intnmi => ww_INTNMI,
	slavehaddr => \ww_core~I_slavehaddr\,
	slavehtrans => \ww_core~I_slavehtrans\,
	slavehsize => \ww_core~I_slavehsize\,
	slavehburst => \ww_core~I_slavehburst\,
	slavehwdata => \ww_core~I_slavehwdata\,
	masterhresp => \ww_core~I_masterhresp\,
	masterhrdata => \ww_core~I_masterhrdata\,
	sdramdqsin => \ww_core~I_sdramdqsin\,
	sdramdqin => \ww_core~I_sdramdqin\,
	ebidqin => \ww_core~I_ebidqin\,
	intpld => \ww_core~I_intpld\,
	debugextin => \ww_core~I_debugextin\,
	gpi => \ww_core~I_gpi\,
	nreseto => ww_core,
	masterhwrite => ww_MASTERHWRITE,
	slavehreadyo => ww_SLAVEHREADYO,
	sdramclk => ww_core1,
	sdramclkn => ww_core2,
	sdramclke => ww_core3,
	sdramwen => ww_core4,
	sdramcasn => ww_core5,
	sdramrasn => ww_core6,
	sdramdqsoe => ww_core7,
	ebiwen => ww_core8,
	ebioen => ww_core9,
	ebiclk => ww_core10,
	ebidqoe => ww_core11,
	uartrion => ww_core12,
	uartdcdon => ww_core13,
	uartdcdrioe => ww_core14,
	uarttxd => ww_core15,
	uartrtsn => ww_core16,
	uartdtrn => ww_core17,
	masterhaddr => \ww_core~I_masterhaddr\,
	masterhtrans => \ww_core~I_masterhtrans\,
	masterhsize => \ww_core~I_masterhsize\,
	masterhburst => \ww_core~I_masterhburst\,
	masterhwdata => \ww_core~I_masterhwdata\,
	sdramcsn => \ww_core~I_sdramcsn\,
	sdramdqm => \ww_core~I_sdramdqm\,
	sdramaddr => \ww_core~I_sdramaddr\,
	sdramdqout => \ww_core~I_sdramdqout\,
	sdramdqsout => \ww_core~I_sdramdqsout\,
	sdramdqoe => \ww_core~I_sdramdqoe\,
	ebibe => \ww_core~I_ebibe\,
	ebidqout => \ww_core~I_ebidqout\,
	ebiaddr => \ww_core~I_ebiaddr\,
	ebicsn => \ww_core~I_ebicsn\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	alt_exc_dpram IS
    PORT (
	portaaddr : IN std_logic_vector(12 DOWNTO 0);
	portaclk : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	portadataout : OUT std_logic_vector(31 DOWNTO 0)
	);
END alt_exc_dpram;

ARCHITECTURE structure OF alt_exc_dpram IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_portaaddr : std_logic_vector(12 DOWNTO 0);
SIGNAL ww_portaclk : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_portadataout : std_logic_vector(31 DOWNTO 0);
SIGNAL ww_dpram_aaddress : std_logic_vector(12 DOWNTO 0);
SIGNAL ww_dpram_adatain : std_logic_vector(31 DOWNTO 0);
SIGNAL ww_dpram_adataout : std_logic_vector(31 DOWNTO 0);

BEGIN

ww_portaaddr <= portaaddr;
ww_portaclk <= portaclk;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
portadataout <= ww_portadataout;

ww_dpram_aaddress <= (ww_portaaddr(12) & ww_portaaddr(11) & ww_portaaddr(10) & ww_portaaddr(9) & ww_portaaddr(8) & ww_portaaddr(7) & ww_portaaddr(6) & ww_portaaddr(5) & ww_portaaddr(4) & ww_portaaddr(3) & ww_portaaddr(2) & 
ww_portaaddr(1) & ww_portaaddr(0));

ww_dpram_adatain <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd);

ww_portadataout(0) <= ww_dpram_adataout(0);
ww_portadataout(1) <= ww_dpram_adataout(1);
ww_portadataout(2) <= ww_dpram_adataout(2);
ww_portadataout(3) <= ww_dpram_adataout(3);
ww_portadataout(4) <= ww_dpram_adataout(4);
ww_portadataout(5) <= ww_dpram_adataout(5);
ww_portadataout(6) <= ww_dpram_adataout(6);
ww_portadataout(7) <= ww_dpram_adataout(7);
ww_portadataout(8) <= ww_dpram_adataout(8);
ww_portadataout(9) <= ww_dpram_adataout(9);
ww_portadataout(10) <= ww_dpram_adataout(10);
ww_portadataout(11) <= ww_dpram_adataout(11);
ww_portadataout(12) <= ww_dpram_adataout(12);
ww_portadataout(13) <= ww_dpram_adataout(13);
ww_portadataout(14) <= ww_dpram_adataout(14);
ww_portadataout(15) <= ww_dpram_adataout(15);
ww_portadataout(16) <= ww_dpram_adataout(16);
ww_portadataout(17) <= ww_dpram_adataout(17);
ww_portadataout(18) <= ww_dpram_adataout(18);
ww_portadataout(19) <= ww_dpram_adataout(19);
ww_portadataout(20) <= ww_dpram_adataout(20);
ww_portadataout(21) <= ww_dpram_adataout(21);
ww_portadataout(22) <= ww_dpram_adataout(22);
ww_portadataout(23) <= ww_dpram_adataout(23);
ww_portadataout(24) <= ww_dpram_adataout(24);
ww_portadataout(25) <= ww_dpram_adataout(25);
ww_portadataout(26) <= ww_dpram_adataout(26);
ww_portadataout(27) <= ww_dpram_adataout(27);
ww_portadataout(28) <= ww_dpram_adataout(28);
ww_portadataout(29) <= ww_dpram_adataout(29);
ww_portadataout(30) <= ww_dpram_adataout(30);
ww_portadataout(31) <= ww_dpram_adataout(31);

dpram : apex20ke_dpram 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "single_port",
	output_mode => "unreg",
	depth => 8192,
	addrwidth => 13,
	width => 32,
	ramblock => 0)
-- pragma translate_on
PORT MAP (
	portaclk => ww_portaclk,
	portawe => GND,
	portaaddr => ww_dpram_aaddress,
	portadatain => ww_dpram_adatain,
	portadataout => ww_dpram_adataout);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	alt_exc_dpram_1 IS
    PORT (
	portaaddr : IN std_logic_vector(12 DOWNTO 0);
	portaclk : IN std_logic;
	portawe : IN std_logic;
	portadatain : IN std_logic_vector(31 DOWNTO 0);
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	portadataout : OUT std_logic_vector(31 DOWNTO 0)
	);
END alt_exc_dpram_1;

ARCHITECTURE structure OF alt_exc_dpram_1 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_portaaddr : std_logic_vector(12 DOWNTO 0);
SIGNAL ww_portaclk : std_logic;
SIGNAL ww_portawe : std_logic;
SIGNAL ww_portadatain : std_logic_vector(31 DOWNTO 0);
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_portadataout : std_logic_vector(31 DOWNTO 0);
SIGNAL ww_dpram_aaddress : std_logic_vector(12 DOWNTO 0);
SIGNAL ww_dpram_adatain : std_logic_vector(31 DOWNTO 0);
SIGNAL ww_dpram_adataout : std_logic_vector(31 DOWNTO 0);
SIGNAL \portadataout[1]\ : std_logic;
SIGNAL \portadataout[2]\ : std_logic;
SIGNAL \portadataout[3]\ : std_logic;
SIGNAL \portadataout[4]\ : std_logic;
SIGNAL \portadataout[5]\ : std_logic;
SIGNAL \portadataout[6]\ : std_logic;
SIGNAL \portadataout[7]\ : std_logic;
SIGNAL \portadataout[8]\ : std_logic;
SIGNAL \portadataout[9]\ : std_logic;
SIGNAL \portadataout[10]\ : std_logic;
SIGNAL \portadataout[11]\ : std_logic;
SIGNAL \portadataout[12]\ : std_logic;
SIGNAL \portadataout[13]\ : std_logic;
SIGNAL \portadataout[14]\ : std_logic;
SIGNAL \portadataout[15]\ : std_logic;
SIGNAL \portadataout[16]\ : std_logic;
SIGNAL \portadataout[17]\ : std_logic;
SIGNAL \portadataout[18]\ : std_logic;
SIGNAL \portadataout[19]\ : std_logic;
SIGNAL \portadataout[20]\ : std_logic;
SIGNAL \portadataout[21]\ : std_logic;
SIGNAL \portadataout[22]\ : std_logic;
SIGNAL \portadataout[23]\ : std_logic;
SIGNAL \portadataout[24]\ : std_logic;
SIGNAL \portadataout[25]\ : std_logic;
SIGNAL \portadataout[26]\ : std_logic;
SIGNAL \portadataout[27]\ : std_logic;
SIGNAL \portadataout[28]\ : std_logic;
SIGNAL \portadataout[29]\ : std_logic;
SIGNAL \portadataout[30]\ : std_logic;
SIGNAL \portadataout[31]\ : std_logic;

BEGIN

ww_portaaddr <= portaaddr;
ww_portaclk <= portaclk;
ww_portawe <= portawe;
ww_portadatain <= portadatain;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
portadataout <= ww_portadataout;

ww_dpram_aaddress <= (ww_portaaddr(12) & ww_portaaddr(11) & ww_portaaddr(10) & ww_portaaddr(9) & ww_portaaddr(8) & ww_portaaddr(7) & ww_portaaddr(6) & ww_portaaddr(5) & ww_portaaddr(4) & ww_portaaddr(3) & ww_portaaddr(2) & 
ww_portaaddr(1) & ww_portaaddr(0));

ww_dpram_adatain <= (ww_portadatain(31) & ww_portadatain(30) & ww_portadatain(29) & ww_portadatain(28) & ww_portadatain(27) & ww_portadatain(26) & ww_portadatain(25) & ww_portadatain(24) & ww_portadatain(23) & ww_portadatain(22) & 
ww_portadatain(21) & ww_portadatain(20) & ww_portadatain(19) & ww_portadatain(18) & ww_portadatain(17) & ww_portadatain(16) & ww_portadatain(15) & ww_portadatain(14) & ww_portadatain(13) & ww_portadatain(12) & ww_portadatain(11) & 
ww_portadatain(10) & ww_portadatain(9) & ww_portadatain(8) & ww_portadatain(7) & ww_portadatain(6) & ww_portadatain(5) & ww_portadatain(4) & ww_portadatain(3) & ww_portadatain(2) & ww_portadatain(1) & ww_portadatain(0));

ww_portadataout(0) <= ww_dpram_adataout(0);
\portadataout[1]\ <= ww_dpram_adataout(1);
\portadataout[2]\ <= ww_dpram_adataout(2);
\portadataout[3]\ <= ww_dpram_adataout(3);
\portadataout[4]\ <= ww_dpram_adataout(4);
\portadataout[5]\ <= ww_dpram_adataout(5);
\portadataout[6]\ <= ww_dpram_adataout(6);
\portadataout[7]\ <= ww_dpram_adataout(7);
\portadataout[8]\ <= ww_dpram_adataout(8);
\portadataout[9]\ <= ww_dpram_adataout(9);
\portadataout[10]\ <= ww_dpram_adataout(10);
\portadataout[11]\ <= ww_dpram_adataout(11);
\portadataout[12]\ <= ww_dpram_adataout(12);
\portadataout[13]\ <= ww_dpram_adataout(13);
\portadataout[14]\ <= ww_dpram_adataout(14);
\portadataout[15]\ <= ww_dpram_adataout(15);
\portadataout[16]\ <= ww_dpram_adataout(16);
\portadataout[17]\ <= ww_dpram_adataout(17);
\portadataout[18]\ <= ww_dpram_adataout(18);
\portadataout[19]\ <= ww_dpram_adataout(19);
\portadataout[20]\ <= ww_dpram_adataout(20);
\portadataout[21]\ <= ww_dpram_adataout(21);
\portadataout[22]\ <= ww_dpram_adataout(22);
\portadataout[23]\ <= ww_dpram_adataout(23);
\portadataout[24]\ <= ww_dpram_adataout(24);
\portadataout[25]\ <= ww_dpram_adataout(25);
\portadataout[26]\ <= ww_dpram_adataout(26);
\portadataout[27]\ <= ww_dpram_adataout(27);
\portadataout[28]\ <= ww_dpram_adataout(28);
\portadataout[29]\ <= ww_dpram_adataout(29);
\portadataout[30]\ <= ww_dpram_adataout(30);
\portadataout[31]\ <= ww_dpram_adataout(31);

dpram : apex20ke_dpram 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "single_port",
	output_mode => "unreg",
	depth => 8192,
	addrwidth => 13,
	width => 32,
	ramblock => 1)
-- pragma translate_on
PORT MAP (
	portaclk => ww_portaclk,
	portawe => ww_portawe,
	portaaddr => ww_dpram_aaddress,
	portadatain => ww_dpram_adatain,
	portadataout => ww_dpram_adataout);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	alt_exc_stripe IS
    PORT (
	dp1_portaaddr : IN std_logic_vector(12 DOWNTO 0);
	dp0_portaaddr : IN std_logic_vector(12 DOWNTO 0);
	dp0_2_portaclk : IN std_logic;
	dp1_portawe : IN std_logic;
	dp1_portadatain : IN std_logic_vector(31 DOWNTO 0);
	masterhready : IN std_logic;
	slavehwdata_0 : IN std_logic;
	slavehwdata_1 : IN std_logic;
	slavehwdata_2 : IN std_logic;
	slavehwdata_3 : IN std_logic;
	slavehwdata_4 : IN std_logic;
	slavehwdata_5 : IN std_logic;
	slavehwdata_6 : IN std_logic;
	slavehwdata_7 : IN std_logic;
	slavehwdata_8 : IN std_logic;
	slavehwdata_9 : IN std_logic;
	slavehwdata_10 : IN std_logic;
	slavehwdata_11 : IN std_logic;
	slavehwdata_12 : IN std_logic;
	slavehwdata_13 : IN std_logic;
	slavehwdata_14 : IN std_logic;
	slavehwdata_15 : IN std_logic;
	slavehwdata_16 : IN std_logic;
	slavehwdata_17 : IN std_logic;
	slavehwdata_18 : IN std_logic;
	slavehwdata_19 : IN std_logic;
	slavehwdata_20 : IN std_logic;
	slavehwdata_21 : IN std_logic;
	slavehwdata_22 : IN std_logic;
	slavehwdata_23 : IN std_logic;
	slavehwdata_24 : IN std_logic;
	slavehwdata_25 : IN std_logic;
	slavehwdata_26 : IN std_logic;
	slavehwdata_27 : IN std_logic;
	slavehwdata_28 : IN std_logic;
	slavehwdata_29 : IN std_logic;
	slavehwdata_30 : IN std_logic;
	slavehwdata_31 : IN std_logic;
	reg_rdata_0 : IN std_logic;
	reg_rdata_1 : IN std_logic;
	reg_rdata_2 : IN std_logic;
	reg_rdata_3 : IN std_logic;
	reg_rdata_4 : IN std_logic;
	reg_rdata_5 : IN std_logic;
	reg_rdata_6 : IN std_logic;
	reg_rdata_7 : IN std_logic;
	reg_rdata_8 : IN std_logic;
	reg_rdata_9 : IN std_logic;
	reg_rdata_10 : IN std_logic;
	reg_rdata_11 : IN std_logic;
	reg_rdata_12 : IN std_logic;
	reg_rdata_13 : IN std_logic;
	reg_rdata_14 : IN std_logic;
	reg_rdata_15 : IN std_logic;
	reg_rdata_16 : IN std_logic;
	reg_rdata_17 : IN std_logic;
	reg_rdata_18 : IN std_logic;
	reg_rdata_19 : IN std_logic;
	reg_rdata_20 : IN std_logic;
	reg_rdata_21 : IN std_logic;
	reg_rdata_22 : IN std_logic;
	reg_rdata_23 : IN std_logic;
	reg_rdata_24 : IN std_logic;
	reg_rdata_25 : IN std_logic;
	reg_rdata_26 : IN std_logic;
	reg_rdata_27 : IN std_logic;
	reg_rdata_28 : IN std_logic;
	reg_rdata_29 : IN std_logic;
	reg_rdata_30 : IN std_logic;
	reg_rdata_31 : IN std_logic;
	masterhresp : IN std_logic_vector(1 DOWNTO 0);
	VCC_port : IN std_logic;
	UARTRXD : IN std_logic;
	INTEXTPIN : IN std_logic;
	UARTDSRN : IN std_logic;
	UARTCTSN : IN std_logic;
	EBIACK : IN std_logic;
	combout : IN std_logic;
	combout1 : IN std_logic;
	combout2 : IN std_logic;
	combout3 : IN std_logic;
	combout4 : IN std_logic;
	combout5 : IN std_logic;
	combout6 : IN std_logic;
	combout7 : IN std_logic;
	combout8 : IN std_logic;
	combout9 : IN std_logic;
	combout10 : IN std_logic;
	combout11 : IN std_logic;
	combout12 : IN std_logic;
	combout13 : IN std_logic;
	combout14 : IN std_logic;
	combout15 : IN std_logic;
	combout16 : IN std_logic;
	combout17 : IN std_logic;
	combout18 : IN std_logic;
	combout19 : IN std_logic;
	combout20 : IN std_logic;
	combout21 : IN std_logic;
	combout22 : IN std_logic;
	combout23 : IN std_logic;
	combout24 : IN std_logic;
	combout25 : IN std_logic;
	combout26 : IN std_logic;
	combout27 : IN std_logic;
	combout28 : IN std_logic;
	combout29 : IN std_logic;
	combout30 : IN std_logic;
	combout31 : IN std_logic;
	combout32 : IN std_logic;
	combout33 : IN std_logic;
	combout34 : IN std_logic;
	combout35 : IN std_logic;
	combout36 : IN std_logic;
	combout37 : IN std_logic;
	combout38 : IN std_logic;
	combout39 : IN std_logic;
	combout40 : IN std_logic;
	combout41 : IN std_logic;
	combout42 : IN std_logic;
	combout43 : IN std_logic;
	combout44 : IN std_logic;
	combout45 : IN std_logic;
	combout46 : IN std_logic;
	combout47 : IN std_logic;
	combout48 : IN std_logic;
	combout49 : IN std_logic;
	combout50 : IN std_logic;
	combout51 : IN std_logic;
	combout52 : IN std_logic;
	combout53 : IN std_logic;
	combout54 : IN std_logic;
	CLK_REF : IN std_logic;
	nPOR : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	dp0_portadataout : OUT std_logic_vector(31 DOWNTO 0);
	core : OUT std_logic;
	MASTERHWRITE : OUT std_logic;
	SLAVEHREADYO : OUT std_logic;
	core1 : OUT std_logic;
	core2 : OUT std_logic;
	core3 : OUT std_logic;
	core4 : OUT std_logic;
	core5 : OUT std_logic;
	core6 : OUT std_logic;
	core7 : OUT std_logic;
	core8 : OUT std_logic;
	core9 : OUT std_logic;
	core10 : OUT std_logic;
	core11 : OUT std_logic;
	core12 : OUT std_logic;
	core13 : OUT std_logic;
	core14 : OUT std_logic;
	core15 : OUT std_logic;
	core16 : OUT std_logic;
	core17 : OUT std_logic;
	MASTERHADDR_2 : OUT std_logic;
	MASTERHADDR_3 : OUT std_logic;
	MASTERHADDR_4 : OUT std_logic;
	MASTERHADDR_5 : OUT std_logic;
	MASTERHADDR_6 : OUT std_logic;
	MASTERHADDR_7 : OUT std_logic;
	MASTERHADDR_8 : OUT std_logic;
	MASTERHADDR_9 : OUT std_logic;
	MASTERHADDR_10 : OUT std_logic;
	MASTERHADDR_12 : OUT std_logic;
	MASTERHADDR_13 : OUT std_logic;
	MASTERHADDR_14 : OUT std_logic;
	MASTERHADDR_15 : OUT std_logic;
	MASTERHADDR_18 : OUT std_logic;
	MASTERHADDR_19 : OUT std_logic;
	MASTERHTRANS_0 : OUT std_logic;
	MASTERHTRANS_1 : OUT std_logic;
	MASTERHSIZE_0 : OUT std_logic;
	MASTERHSIZE_1 : OUT std_logic;
	MASTERHBURST_0 : OUT std_logic;
	MASTERHBURST_1 : OUT std_logic;
	MASTERHBURST_2 : OUT std_logic;
	MASTERHWDATA_0 : OUT std_logic;
	MASTERHWDATA_1 : OUT std_logic;
	MASTERHWDATA_2 : OUT std_logic;
	MASTERHWDATA_3 : OUT std_logic;
	MASTERHWDATA_4 : OUT std_logic;
	MASTERHWDATA_5 : OUT std_logic;
	MASTERHWDATA_6 : OUT std_logic;
	MASTERHWDATA_7 : OUT std_logic;
	MASTERHWDATA_8 : OUT std_logic;
	MASTERHWDATA_9 : OUT std_logic;
	MASTERHWDATA_10 : OUT std_logic;
	MASTERHWDATA_11 : OUT std_logic;
	MASTERHWDATA_12 : OUT std_logic;
	MASTERHWDATA_13 : OUT std_logic;
	MASTERHWDATA_14 : OUT std_logic;
	MASTERHWDATA_15 : OUT std_logic;
	MASTERHWDATA_16 : OUT std_logic;
	MASTERHWDATA_17 : OUT std_logic;
	MASTERHWDATA_18 : OUT std_logic;
	MASTERHWDATA_19 : OUT std_logic;
	MASTERHWDATA_20 : OUT std_logic;
	MASTERHWDATA_21 : OUT std_logic;
	MASTERHWDATA_22 : OUT std_logic;
	MASTERHWDATA_23 : OUT std_logic;
	MASTERHWDATA_24 : OUT std_logic;
	MASTERHWDATA_25 : OUT std_logic;
	MASTERHWDATA_26 : OUT std_logic;
	MASTERHWDATA_27 : OUT std_logic;
	MASTERHWDATA_28 : OUT std_logic;
	MASTERHWDATA_29 : OUT std_logic;
	MASTERHWDATA_30 : OUT std_logic;
	MASTERHWDATA_31 : OUT std_logic;
	core18 : OUT std_logic;
	core19 : OUT std_logic;
	core20 : OUT std_logic;
	core21 : OUT std_logic;
	core22 : OUT std_logic;
	core23 : OUT std_logic;
	core24 : OUT std_logic;
	core25 : OUT std_logic;
	core26 : OUT std_logic;
	core27 : OUT std_logic;
	core28 : OUT std_logic;
	core29 : OUT std_logic;
	core30 : OUT std_logic;
	core31 : OUT std_logic;
	core32 : OUT std_logic;
	core33 : OUT std_logic;
	core34 : OUT std_logic;
	core35 : OUT std_logic;
	core36 : OUT std_logic;
	core37 : OUT std_logic;
	core38 : OUT std_logic;
	core39 : OUT std_logic;
	core40 : OUT std_logic;
	core41 : OUT std_logic;
	core42 : OUT std_logic;
	core43 : OUT std_logic;
	core44 : OUT std_logic;
	core45 : OUT std_logic;
	core46 : OUT std_logic;
	core47 : OUT std_logic;
	core48 : OUT std_logic;
	core49 : OUT std_logic;
	core50 : OUT std_logic;
	core51 : OUT std_logic;
	core52 : OUT std_logic;
	core53 : OUT std_logic;
	core54 : OUT std_logic;
	core55 : OUT std_logic;
	core56 : OUT std_logic;
	core57 : OUT std_logic;
	core58 : OUT std_logic;
	core59 : OUT std_logic;
	core60 : OUT std_logic;
	core61 : OUT std_logic;
	core62 : OUT std_logic;
	core63 : OUT std_logic;
	core64 : OUT std_logic;
	core65 : OUT std_logic;
	core66 : OUT std_logic;
	core67 : OUT std_logic;
	core68 : OUT std_logic;
	core69 : OUT std_logic;
	core70 : OUT std_logic;
	core71 : OUT std_logic;
	core72 : OUT std_logic;
	core73 : OUT std_logic;
	core74 : OUT std_logic;
	core75 : OUT std_logic;
	core76 : OUT std_logic;
	core77 : OUT std_logic;
	core78 : OUT std_logic;
	core79 : OUT std_logic;
	core80 : OUT std_logic;
	core81 : OUT std_logic;
	core82 : OUT std_logic;
	core83 : OUT std_logic;
	core84 : OUT std_logic;
	core85 : OUT std_logic;
	core86 : OUT std_logic;
	core87 : OUT std_logic;
	core88 : OUT std_logic;
	core89 : OUT std_logic;
	core90 : OUT std_logic;
	core91 : OUT std_logic;
	core92 : OUT std_logic;
	core93 : OUT std_logic;
	core94 : OUT std_logic;
	core95 : OUT std_logic;
	core96 : OUT std_logic;
	core97 : OUT std_logic;
	core98 : OUT std_logic;
	core99 : OUT std_logic;
	core100 : OUT std_logic;
	core101 : OUT std_logic;
	core102 : OUT std_logic;
	core103 : OUT std_logic;
	core104 : OUT std_logic;
	core105 : OUT std_logic;
	core106 : OUT std_logic;
	core107 : OUT std_logic;
	core108 : OUT std_logic;
	core109 : OUT std_logic;
	core110 : OUT std_logic;
	core111 : OUT std_logic;
	core112 : OUT std_logic;
	core113 : OUT std_logic;
	core114 : OUT std_logic;
	core115 : OUT std_logic;
	core116 : OUT std_logic;
	core117 : OUT std_logic;
	core118 : OUT std_logic;
	core119 : OUT std_logic;
	core120 : OUT std_logic;
	core121 : OUT std_logic;
	core122 : OUT std_logic;
	core123 : OUT std_logic;
	core124 : OUT std_logic;
	core125 : OUT std_logic
	);
END alt_exc_stripe;

ARCHITECTURE structure OF alt_exc_stripe IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_dp1_portaaddr : std_logic_vector(12 DOWNTO 0);
SIGNAL ww_dp0_portaaddr : std_logic_vector(12 DOWNTO 0);
SIGNAL ww_dp0_2_portaclk : std_logic;
SIGNAL ww_dp1_portawe : std_logic;
SIGNAL ww_dp1_portadatain : std_logic_vector(31 DOWNTO 0);
SIGNAL ww_masterhready : std_logic;
SIGNAL ww_slavehwdata_0 : std_logic;
SIGNAL ww_slavehwdata_1 : std_logic;
SIGNAL ww_slavehwdata_2 : std_logic;
SIGNAL ww_slavehwdata_3 : std_logic;
SIGNAL ww_slavehwdata_4 : std_logic;
SIGNAL ww_slavehwdata_5 : std_logic;
SIGNAL ww_slavehwdata_6 : std_logic;
SIGNAL ww_slavehwdata_7 : std_logic;
SIGNAL ww_slavehwdata_8 : std_logic;
SIGNAL ww_slavehwdata_9 : std_logic;
SIGNAL ww_slavehwdata_10 : std_logic;
SIGNAL ww_slavehwdata_11 : std_logic;
SIGNAL ww_slavehwdata_12 : std_logic;
SIGNAL ww_slavehwdata_13 : std_logic;
SIGNAL ww_slavehwdata_14 : std_logic;
SIGNAL ww_slavehwdata_15 : std_logic;
SIGNAL ww_slavehwdata_16 : std_logic;
SIGNAL ww_slavehwdata_17 : std_logic;
SIGNAL ww_slavehwdata_18 : std_logic;
SIGNAL ww_slavehwdata_19 : std_logic;
SIGNAL ww_slavehwdata_20 : std_logic;
SIGNAL ww_slavehwdata_21 : std_logic;
SIGNAL ww_slavehwdata_22 : std_logic;
SIGNAL ww_slavehwdata_23 : std_logic;
SIGNAL ww_slavehwdata_24 : std_logic;
SIGNAL ww_slavehwdata_25 : std_logic;
SIGNAL ww_slavehwdata_26 : std_logic;
SIGNAL ww_slavehwdata_27 : std_logic;
SIGNAL ww_slavehwdata_28 : std_logic;
SIGNAL ww_slavehwdata_29 : std_logic;
SIGNAL ww_slavehwdata_30 : std_logic;
SIGNAL ww_slavehwdata_31 : std_logic;
SIGNAL ww_reg_rdata_0 : std_logic;
SIGNAL ww_reg_rdata_1 : std_logic;
SIGNAL ww_reg_rdata_2 : std_logic;
SIGNAL ww_reg_rdata_3 : std_logic;
SIGNAL ww_reg_rdata_4 : std_logic;
SIGNAL ww_reg_rdata_5 : std_logic;
SIGNAL ww_reg_rdata_6 : std_logic;
SIGNAL ww_reg_rdata_7 : std_logic;
SIGNAL ww_reg_rdata_8 : std_logic;
SIGNAL ww_reg_rdata_9 : std_logic;
SIGNAL ww_reg_rdata_10 : std_logic;
SIGNAL ww_reg_rdata_11 : std_logic;
SIGNAL ww_reg_rdata_12 : std_logic;
SIGNAL ww_reg_rdata_13 : std_logic;
SIGNAL ww_reg_rdata_14 : std_logic;
SIGNAL ww_reg_rdata_15 : std_logic;
SIGNAL ww_reg_rdata_16 : std_logic;
SIGNAL ww_reg_rdata_17 : std_logic;
SIGNAL ww_reg_rdata_18 : std_logic;
SIGNAL ww_reg_rdata_19 : std_logic;
SIGNAL ww_reg_rdata_20 : std_logic;
SIGNAL ww_reg_rdata_21 : std_logic;
SIGNAL ww_reg_rdata_22 : std_logic;
SIGNAL ww_reg_rdata_23 : std_logic;
SIGNAL ww_reg_rdata_24 : std_logic;
SIGNAL ww_reg_rdata_25 : std_logic;
SIGNAL ww_reg_rdata_26 : std_logic;
SIGNAL ww_reg_rdata_27 : std_logic;
SIGNAL ww_reg_rdata_28 : std_logic;
SIGNAL ww_reg_rdata_29 : std_logic;
SIGNAL ww_reg_rdata_30 : std_logic;
SIGNAL ww_reg_rdata_31 : std_logic;
SIGNAL ww_masterhresp : std_logic_vector(1 DOWNTO 0);
SIGNAL ww_VCC_port : std_logic;
SIGNAL ww_UARTRXD : std_logic;
SIGNAL ww_INTEXTPIN : std_logic;
SIGNAL ww_UARTDSRN : std_logic;
SIGNAL ww_UARTCTSN : std_logic;
SIGNAL ww_EBIACK : std_logic;
SIGNAL ww_combout : std_logic;
SIGNAL ww_combout1 : std_logic;
SIGNAL ww_combout2 : std_logic;
SIGNAL ww_combout3 : std_logic;
SIGNAL ww_combout4 : std_logic;
SIGNAL ww_combout5 : std_logic;
SIGNAL ww_combout6 : std_logic;
SIGNAL ww_combout7 : std_logic;
SIGNAL ww_combout8 : std_logic;
SIGNAL ww_combout9 : std_logic;
SIGNAL ww_combout10 : std_logic;
SIGNAL ww_combout11 : std_logic;
SIGNAL ww_combout12 : std_logic;
SIGNAL ww_combout13 : std_logic;
SIGNAL ww_combout14 : std_logic;
SIGNAL ww_combout15 : std_logic;
SIGNAL ww_combout16 : std_logic;
SIGNAL ww_combout17 : std_logic;
SIGNAL ww_combout18 : std_logic;
SIGNAL ww_combout19 : std_logic;
SIGNAL ww_combout20 : std_logic;
SIGNAL ww_combout21 : std_logic;
SIGNAL ww_combout22 : std_logic;
SIGNAL ww_combout23 : std_logic;
SIGNAL ww_combout24 : std_logic;
SIGNAL ww_combout25 : std_logic;
SIGNAL ww_combout26 : std_logic;
SIGNAL ww_combout27 : std_logic;
SIGNAL ww_combout28 : std_logic;
SIGNAL ww_combout29 : std_logic;
SIGNAL ww_combout30 : std_logic;
SIGNAL ww_combout31 : std_logic;
SIGNAL ww_combout32 : std_logic;
SIGNAL ww_combout33 : std_logic;
SIGNAL ww_combout34 : std_logic;
SIGNAL ww_combout35 : std_logic;
SIGNAL ww_combout36 : std_logic;
SIGNAL ww_combout37 : std_logic;
SIGNAL ww_combout38 : std_logic;
SIGNAL ww_combout39 : std_logic;
SIGNAL ww_combout40 : std_logic;
SIGNAL ww_combout41 : std_logic;
SIGNAL ww_combout42 : std_logic;
SIGNAL ww_combout43 : std_logic;
SIGNAL ww_combout44 : std_logic;
SIGNAL ww_combout45 : std_logic;
SIGNAL ww_combout46 : std_logic;
SIGNAL ww_combout47 : std_logic;
SIGNAL ww_combout48 : std_logic;
SIGNAL ww_combout49 : std_logic;
SIGNAL ww_combout50 : std_logic;
SIGNAL ww_combout51 : std_logic;
SIGNAL ww_combout52 : std_logic;
SIGNAL ww_combout53 : std_logic;
SIGNAL ww_combout54 : std_logic;
SIGNAL ww_CLK_REF : std_logic;
SIGNAL ww_nPOR : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_dp0_portadataout : std_logic_vector(31 DOWNTO 0);
SIGNAL ww_core : std_logic;
SIGNAL ww_MASTERHWRITE : std_logic;
SIGNAL ww_SLAVEHREADYO : std_logic;
SIGNAL ww_core1 : std_logic;
SIGNAL ww_core2 : std_logic;
SIGNAL ww_core3 : std_logic;
SIGNAL ww_core4 : std_logic;
SIGNAL ww_core5 : std_logic;
SIGNAL ww_core6 : std_logic;
SIGNAL ww_core7 : std_logic;
SIGNAL ww_core8 : std_logic;
SIGNAL ww_core9 : std_logic;
SIGNAL ww_core10 : std_logic;
SIGNAL ww_core11 : std_logic;
SIGNAL ww_core12 : std_logic;
SIGNAL ww_core13 : std_logic;
SIGNAL ww_core14 : std_logic;
SIGNAL ww_core15 : std_logic;
SIGNAL ww_core16 : std_logic;
SIGNAL ww_core17 : std_logic;
SIGNAL ww_MASTERHADDR_2 : std_logic;
SIGNAL ww_MASTERHADDR_3 : std_logic;
SIGNAL ww_MASTERHADDR_4 : std_logic;
SIGNAL ww_MASTERHADDR_5 : std_logic;
SIGNAL ww_MASTERHADDR_6 : std_logic;
SIGNAL ww_MASTERHADDR_7 : std_logic;
SIGNAL ww_MASTERHADDR_8 : std_logic;
SIGNAL ww_MASTERHADDR_9 : std_logic;
SIGNAL ww_MASTERHADDR_10 : std_logic;
SIGNAL ww_MASTERHADDR_12 : std_logic;
SIGNAL ww_MASTERHADDR_13 : std_logic;
SIGNAL ww_MASTERHADDR_14 : std_logic;
SIGNAL ww_MASTERHADDR_15 : std_logic;
SIGNAL ww_MASTERHADDR_18 : std_logic;
SIGNAL ww_MASTERHADDR_19 : std_logic;
SIGNAL ww_MASTERHTRANS_0 : std_logic;
SIGNAL ww_MASTERHTRANS_1 : std_logic;
SIGNAL ww_MASTERHSIZE_0 : std_logic;
SIGNAL ww_MASTERHSIZE_1 : std_logic;
SIGNAL ww_MASTERHBURST_0 : std_logic;
SIGNAL ww_MASTERHBURST_1 : std_logic;
SIGNAL ww_MASTERHBURST_2 : std_logic;
SIGNAL ww_MASTERHWDATA_0 : std_logic;
SIGNAL ww_MASTERHWDATA_1 : std_logic;
SIGNAL ww_MASTERHWDATA_2 : std_logic;
SIGNAL ww_MASTERHWDATA_3 : std_logic;
SIGNAL ww_MASTERHWDATA_4 : std_logic;
SIGNAL ww_MASTERHWDATA_5 : std_logic;
SIGNAL ww_MASTERHWDATA_6 : std_logic;
SIGNAL ww_MASTERHWDATA_7 : std_logic;
SIGNAL ww_MASTERHWDATA_8 : std_logic;
SIGNAL ww_MASTERHWDATA_9 : std_logic;
SIGNAL ww_MASTERHWDATA_10 : std_logic;
SIGNAL ww_MASTERHWDATA_11 : std_logic;
SIGNAL ww_MASTERHWDATA_12 : std_logic;
SIGNAL ww_MASTERHWDATA_13 : std_logic;
SIGNAL ww_MASTERHWDATA_14 : std_logic;
SIGNAL ww_MASTERHWDATA_15 : std_logic;
SIGNAL ww_MASTERHWDATA_16 : std_logic;
SIGNAL ww_MASTERHWDATA_17 : std_logic;
SIGNAL ww_MASTERHWDATA_18 : std_logic;
SIGNAL ww_MASTERHWDATA_19 : std_logic;
SIGNAL ww_MASTERHWDATA_20 : std_logic;
SIGNAL ww_MASTERHWDATA_21 : std_logic;
SIGNAL ww_MASTERHWDATA_22 : std_logic;
SIGNAL ww_MASTERHWDATA_23 : std_logic;
SIGNAL ww_MASTERHWDATA_24 : std_logic;
SIGNAL ww_MASTERHWDATA_25 : std_logic;
SIGNAL ww_MASTERHWDATA_26 : std_logic;
SIGNAL ww_MASTERHWDATA_27 : std_logic;
SIGNAL ww_MASTERHWDATA_28 : std_logic;
SIGNAL ww_MASTERHWDATA_29 : std_logic;
SIGNAL ww_MASTERHWDATA_30 : std_logic;
SIGNAL ww_MASTERHWDATA_31 : std_logic;
SIGNAL ww_core18 : std_logic;
SIGNAL ww_core19 : std_logic;
SIGNAL ww_core20 : std_logic;
SIGNAL ww_core21 : std_logic;
SIGNAL ww_core22 : std_logic;
SIGNAL ww_core23 : std_logic;
SIGNAL ww_core24 : std_logic;
SIGNAL ww_core25 : std_logic;
SIGNAL ww_core26 : std_logic;
SIGNAL ww_core27 : std_logic;
SIGNAL ww_core28 : std_logic;
SIGNAL ww_core29 : std_logic;
SIGNAL ww_core30 : std_logic;
SIGNAL ww_core31 : std_logic;
SIGNAL ww_core32 : std_logic;
SIGNAL ww_core33 : std_logic;
SIGNAL ww_core34 : std_logic;
SIGNAL ww_core35 : std_logic;
SIGNAL ww_core36 : std_logic;
SIGNAL ww_core37 : std_logic;
SIGNAL ww_core38 : std_logic;
SIGNAL ww_core39 : std_logic;
SIGNAL ww_core40 : std_logic;
SIGNAL ww_core41 : std_logic;
SIGNAL ww_core42 : std_logic;
SIGNAL ww_core43 : std_logic;
SIGNAL ww_core44 : std_logic;
SIGNAL ww_core45 : std_logic;
SIGNAL ww_core46 : std_logic;
SIGNAL ww_core47 : std_logic;
SIGNAL ww_core48 : std_logic;
SIGNAL ww_core49 : std_logic;
SIGNAL ww_core50 : std_logic;
SIGNAL ww_core51 : std_logic;
SIGNAL ww_core52 : std_logic;
SIGNAL ww_core53 : std_logic;
SIGNAL ww_core54 : std_logic;
SIGNAL ww_core55 : std_logic;
SIGNAL ww_core56 : std_logic;
SIGNAL ww_core57 : std_logic;
SIGNAL ww_core58 : std_logic;
SIGNAL ww_core59 : std_logic;
SIGNAL ww_core60 : std_logic;
SIGNAL ww_core61 : std_logic;
SIGNAL ww_core62 : std_logic;
SIGNAL ww_core63 : std_logic;
SIGNAL ww_core64 : std_logic;
SIGNAL ww_core65 : std_logic;
SIGNAL ww_core66 : std_logic;
SIGNAL ww_core67 : std_logic;
SIGNAL ww_core68 : std_logic;
SIGNAL ww_core69 : std_logic;
SIGNAL ww_core70 : std_logic;
SIGNAL ww_core71 : std_logic;
SIGNAL ww_core72 : std_logic;
SIGNAL ww_core73 : std_logic;
SIGNAL ww_core74 : std_logic;
SIGNAL ww_core75 : std_logic;
SIGNAL ww_core76 : std_logic;
SIGNAL ww_core77 : std_logic;
SIGNAL ww_core78 : std_logic;
SIGNAL ww_core79 : std_logic;
SIGNAL ww_core80 : std_logic;
SIGNAL ww_core81 : std_logic;
SIGNAL ww_core82 : std_logic;
SIGNAL ww_core83 : std_logic;
SIGNAL ww_core84 : std_logic;
SIGNAL ww_core85 : std_logic;
SIGNAL ww_core86 : std_logic;
SIGNAL ww_core87 : std_logic;
SIGNAL ww_core88 : std_logic;
SIGNAL ww_core89 : std_logic;
SIGNAL ww_core90 : std_logic;
SIGNAL ww_core91 : std_logic;
SIGNAL ww_core92 : std_logic;
SIGNAL ww_core93 : std_logic;
SIGNAL ww_core94 : std_logic;
SIGNAL ww_core95 : std_logic;
SIGNAL ww_core96 : std_logic;
SIGNAL ww_core97 : std_logic;
SIGNAL ww_core98 : std_logic;
SIGNAL ww_core99 : std_logic;
SIGNAL ww_core100 : std_logic;
SIGNAL ww_core101 : std_logic;
SIGNAL ww_core102 : std_logic;
SIGNAL ww_core103 : std_logic;
SIGNAL ww_core104 : std_logic;
SIGNAL ww_core105 : std_logic;
SIGNAL ww_core106 : std_logic;
SIGNAL ww_core107 : std_logic;
SIGNAL ww_core108 : std_logic;
SIGNAL ww_core109 : std_logic;
SIGNAL ww_core110 : std_logic;
SIGNAL ww_core111 : std_logic;
SIGNAL ww_core112 : std_logic;
SIGNAL ww_core113 : std_logic;
SIGNAL ww_core114 : std_logic;
SIGNAL ww_core115 : std_logic;
SIGNAL ww_core116 : std_logic;
SIGNAL ww_core117 : std_logic;
SIGNAL ww_core118 : std_logic;
SIGNAL ww_core119 : std_logic;
SIGNAL ww_core120 : std_logic;
SIGNAL ww_core121 : std_logic;
SIGNAL ww_core122 : std_logic;
SIGNAL ww_core123 : std_logic;
SIGNAL ww_core124 : std_logic;
SIGNAL ww_core125 : std_logic;
SIGNAL \ww_core~1_MASTERHRESP\ : std_logic_vector(1 DOWNTO 0);
SIGNAL \ww_core~1_SLAVEHWDATA\ : std_logic_vector(31 DOWNTO 0);
SIGNAL \ww_core~1_MASTERHRDATA\ : std_logic_vector(31 DOWNTO 0);
SIGNAL \ww_core~1_SLAVEHSIZE\ : std_logic_vector(1 DOWNTO 0);
SIGNAL \ww_core~1_MASTERHADDR\ : std_logic_vector(31 DOWNTO 0);
SIGNAL \ww_core~1_MASTERHTRANS\ : std_logic_vector(1 DOWNTO 0);
SIGNAL \ww_core~1_MASTERHSIZE\ : std_logic_vector(1 DOWNTO 0);
SIGNAL \ww_core~1_MASTERHBURST\ : std_logic_vector(2 DOWNTO 0);
SIGNAL \ww_core~1_MASTERHWDATA\ : std_logic_vector(31 DOWNTO 0);
SIGNAL ww_dp0_portaaddr : std_logic_vector(12 DOWNTO 0);
SIGNAL ww_dp0_portadataout : std_logic_vector(31 DOWNTO 0);
SIGNAL ww_dp1_portaaddr : std_logic_vector(12 DOWNTO 0);
SIGNAL ww_dp1_portadatain : std_logic_vector(31 DOWNTO 0);
SIGNAL ww_dp1_portadataout : std_logic_vector(31 DOWNTO 0);
SIGNAL lcell_hgrant : std_logic;
SIGNAL lcell_hresp0 : std_logic;
SIGNAL lcell_hresp1 : std_logic;
SIGNAL \dp1|portadataout[0]\ : std_logic;
SIGNAL \_~0\ : std_logic;

COMPONENT alt_exc_upcore
    PORT (
	MASTERHGRANT : IN std_logic;
	MASTERHRESP : IN std_logic_vector(1 DOWNTO 0);
	MASTERHCLK : IN std_logic;
	SLAVEHCLK : IN std_logic;
	MASTERHREADY : IN std_logic;
	INTNMI : IN std_logic;
	SLAVEHWDATA : IN std_logic_vector(31 DOWNTO 0);
	MASTERHRDATA : IN std_logic_vector(31 DOWNTO 0);
	SLAVEHSIZE : IN std_logic_vector(1 DOWNTO 0);
	SLAVEHSEL : IN std_logic;
	UARTRXD : IN std_logic;
	INTEXTPIN : IN std_logic;
	UARTDSRN : IN std_logic;
	UARTCTSN : IN std_logic;
	EBIACK : IN std_logic;
	combout : IN std_logic;
	combout1 : IN std_logic;
	combout2 : IN std_logic;
	combout3 : IN std_logic;
	combout4 : IN std_logic;
	combout5 : IN std_logic;
	combout6 : IN std_logic;
	combout7 : IN std_logic;
	combout8 : IN std_logic;
	combout9 : IN std_logic;
	combout10 : IN std_logic;
	combout11 : IN std_logic;
	combout12 : IN std_logic;
	combout13 : IN std_logic;
	combout14 : IN std_logic;
	combout15 : IN std_logic;
	combout16 : IN std_logic;
	combout17 : IN std_logic;
	combout18 : IN std_logic;
	combout19 : IN std_logic;
	combout20 : IN std_logic;
	combout21 : IN std_logic;
	combout22 : IN std_logic;
	combout23 : IN std_logic;
	combout24 : IN std_logic;
	combout25 : IN std_logic;
	combout26 : IN std_logic;
	combout27 : IN std_logic;
	combout28 : IN std_logic;
	combout29 : IN std_logic;
	combout30 : IN std_logic;
	combout31 : IN std_logic;
	combout32 : IN std_logic;
	combout33 : IN std_logic;
	combout34 : IN std_logic;
	combout35 : IN std_logic;
	combout36 : IN std_logic;
	combout37 : IN std_logic;
	combout38 : IN std_logic;
	combout39 : IN std_logic;
	combout40 : IN std_logic;
	combout41 : IN std_logic;
	combout42 : IN std_logic;
	combout43 : IN std_logic;
	combout44 : IN std_logic;
	combout45 : IN std_logic;
	combout46 : IN std_logic;
	combout47 : IN std_logic;
	combout48 : IN std_logic;
	combout49 : IN std_logic;
	combout50 : IN std_logic;
	combout51 : IN std_logic;
	combout52 : IN std_logic;
	combout53 : IN std_logic;
	combout54 : IN std_logic;
	CLK_REF : IN std_logic;
	nPOR : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	core : OUT std_logic;
	MASTERHWRITE : OUT std_logic;
	SLAVEHREADYO : OUT std_logic;
	core1 : OUT std_logic;
	core2 : OUT std_logic;
	core3 : OUT std_logic;
	core4 : OUT std_logic;
	core5 : OUT std_logic;
	core6 : OUT std_logic;
	core7 : OUT std_logic;
	core8 : OUT std_logic;
	core9 : OUT std_logic;
	core10 : OUT std_logic;
	core11 : OUT std_logic;
	core12 : OUT std_logic;
	core13 : OUT std_logic;
	core14 : OUT std_logic;
	core15 : OUT std_logic;
	core16 : OUT std_logic;
	core17 : OUT std_logic;
	MASTERHADDR : OUT std_logic_vector(31 DOWNTO 0);
	MASTERHTRANS : OUT std_logic_vector(1 DOWNTO 0);
	MASTERHSIZE : OUT std_logic_vector(1 DOWNTO 0);
	MASTERHBURST : OUT std_logic_vector(2 DOWNTO 0);
	MASTERHWDATA : OUT std_logic_vector(31 DOWNTO 0);
	core18 : OUT std_logic;
	core19 : OUT std_logic;
	core20 : OUT std_logic;
	core21 : OUT std_logic;
	core22 : OUT std_logic;
	core23 : OUT std_logic;
	core24 : OUT std_logic;
	core25 : OUT std_logic;
	core26 : OUT std_logic;
	core27 : OUT std_logic;
	core28 : OUT std_logic;
	core29 : OUT std_logic;
	core30 : OUT std_logic;
	core31 : OUT std_logic;
	core32 : OUT std_logic;
	core33 : OUT std_logic;
	core34 : OUT std_logic;
	core35 : OUT std_logic;
	core36 : OUT std_logic;
	core37 : OUT std_logic;
	core38 : OUT std_logic;
	core39 : OUT std_logic;
	core40 : OUT std_logic;
	core41 : OUT std_logic;
	core42 : OUT std_logic;
	core43 : OUT std_logic;
	core44 : OUT std_logic;
	core45 : OUT std_logic;
	core46 : OUT std_logic;
	core47 : OUT std_logic;
	core48 : OUT std_logic;
	core49 : OUT std_logic;
	core50 : OUT std_logic;
	core51 : OUT std_logic;
	core52 : OUT std_logic;
	core53 : OUT std_logic;
	core54 : OUT std_logic;
	core55 : OUT std_logic;
	core56 : OUT std_logic;
	core57 : OUT std_logic;
	core58 : OUT std_logic;
	core59 : OUT std_logic;
	core60 : OUT std_logic;
	core61 : OUT std_logic;
	core62 : OUT std_logic;
	core63 : OUT std_logic;
	core64 : OUT std_logic;
	core65 : OUT std_logic;
	core66 : OUT std_logic;
	core67 : OUT std_logic;
	core68 : OUT std_logic;
	core69 : OUT std_logic;
	core70 : OUT std_logic;
	core71 : OUT std_logic;
	core72 : OUT std_logic;
	core73 : OUT std_logic;
	core74 : OUT std_logic;
	core75 : OUT std_logic;
	core76 : OUT std_logic;
	core77 : OUT std_logic;
	core78 : OUT std_logic;
	core79 : OUT std_logic;
	core80 : OUT std_logic;
	core81 : OUT std_logic;
	core82 : OUT std_logic;
	core83 : OUT std_logic;
	core84 : OUT std_logic;
	core85 : OUT std_logic;
	core86 : OUT std_logic;
	core87 : OUT std_logic;
	core88 : OUT std_logic;
	core89 : OUT std_logic;
	core90 : OUT std_logic;
	core91 : OUT std_logic;
	core92 : OUT std_logic;
	core93 : OUT std_logic;
	core94 : OUT std_logic;
	core95 : OUT std_logic;
	core96 : OUT std_logic;
	core97 : OUT std_logic;
	core98 : OUT std_logic;
	core99 : OUT std_logic;
	core100 : OUT std_logic;
	core101 : OUT std_logic;
	core102 : OUT std_logic;
	core103 : OUT std_logic;
	core104 : OUT std_logic;
	core105 : OUT std_logic;
	core106 : OUT std_logic;
	core107 : OUT std_logic;
	core108 : OUT std_logic;
	core109 : OUT std_logic;
	core110 : OUT std_logic;
	core111 : OUT std_logic;
	core112 : OUT std_logic;
	core113 : OUT std_logic;
	core114 : OUT std_logic;
	core115 : OUT std_logic;
	core116 : OUT std_logic;
	core117 : OUT std_logic;
	core118 : OUT std_logic;
	core119 : OUT std_logic;
	core120 : OUT std_logic;
	core121 : OUT std_logic;
	core122 : OUT std_logic;
	core123 : OUT std_logic;
	core124 : OUT std_logic;
	core125 : OUT std_logic);
END COMPONENT;

COMPONENT alt_exc_dpram
    PORT (
	portaaddr : IN std_logic_vector(12 DOWNTO 0);
	portaclk : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	portadataout : OUT std_logic_vector(31 DOWNTO 0));
END COMPONENT;

COMPONENT alt_exc_dpram_1
    PORT (
	portaaddr : IN std_logic_vector(12 DOWNTO 0);
	portaclk : IN std_logic;
	portawe : IN std_logic;
	portadatain : IN std_logic_vector(31 DOWNTO 0);
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	portadataout : OUT std_logic_vector(31 DOWNTO 0));
END COMPONENT;

BEGIN

ww_dp1_portaaddr <= dp1_portaaddr;
ww_dp0_portaaddr <= dp0_portaaddr;
ww_dp0_2_portaclk <= dp0_2_portaclk;
ww_dp1_portawe <= dp1_portawe;
ww_dp1_portadatain <= dp1_portadatain;
ww_masterhready <= masterhready;
ww_slavehwdata_0 <= slavehwdata_0;
ww_slavehwdata_1 <= slavehwdata_1;
ww_slavehwdata_2 <= slavehwdata_2;
ww_slavehwdata_3 <= slavehwdata_3;
ww_slavehwdata_4 <= slavehwdata_4;
ww_slavehwdata_5 <= slavehwdata_5;
ww_slavehwdata_6 <= slavehwdata_6;
ww_slavehwdata_7 <= slavehwdata_7;
ww_slavehwdata_8 <= slavehwdata_8;
ww_slavehwdata_9 <= slavehwdata_9;
ww_slavehwdata_10 <= slavehwdata_10;
ww_slavehwdata_11 <= slavehwdata_11;
ww_slavehwdata_12 <= slavehwdata_12;
ww_slavehwdata_13 <= slavehwdata_13;
ww_slavehwdata_14 <= slavehwdata_14;
ww_slavehwdata_15 <= slavehwdata_15;
ww_slavehwdata_16 <= slavehwdata_16;
ww_slavehwdata_17 <= slavehwdata_17;
ww_slavehwdata_18 <= slavehwdata_18;
ww_slavehwdata_19 <= slavehwdata_19;
ww_slavehwdata_20 <= slavehwdata_20;
ww_slavehwdata_21 <= slavehwdata_21;
ww_slavehwdata_22 <= slavehwdata_22;
ww_slavehwdata_23 <= slavehwdata_23;
ww_slavehwdata_24 <= slavehwdata_24;
ww_slavehwdata_25 <= slavehwdata_25;
ww_slavehwdata_26 <= slavehwdata_26;
ww_slavehwdata_27 <= slavehwdata_27;
ww_slavehwdata_28 <= slavehwdata_28;
ww_slavehwdata_29 <= slavehwdata_29;
ww_slavehwdata_30 <= slavehwdata_30;
ww_slavehwdata_31 <= slavehwdata_31;
ww_reg_rdata_0 <= reg_rdata_0;
ww_reg_rdata_1 <= reg_rdata_1;
ww_reg_rdata_2 <= reg_rdata_2;
ww_reg_rdata_3 <= reg_rdata_3;
ww_reg_rdata_4 <= reg_rdata_4;
ww_reg_rdata_5 <= reg_rdata_5;
ww_reg_rdata_6 <= reg_rdata_6;
ww_reg_rdata_7 <= reg_rdata_7;
ww_reg_rdata_8 <= reg_rdata_8;
ww_reg_rdata_9 <= reg_rdata_9;
ww_reg_rdata_10 <= reg_rdata_10;
ww_reg_rdata_11 <= reg_rdata_11;
ww_reg_rdata_12 <= reg_rdata_12;
ww_reg_rdata_13 <= reg_rdata_13;
ww_reg_rdata_14 <= reg_rdata_14;
ww_reg_rdata_15 <= reg_rdata_15;
ww_reg_rdata_16 <= reg_rdata_16;
ww_reg_rdata_17 <= reg_rdata_17;
ww_reg_rdata_18 <= reg_rdata_18;
ww_reg_rdata_19 <= reg_rdata_19;
ww_reg_rdata_20 <= reg_rdata_20;
ww_reg_rdata_21 <= reg_rdata_21;
ww_reg_rdata_22 <= reg_rdata_22;
ww_reg_rdata_23 <= reg_rdata_23;
ww_reg_rdata_24 <= reg_rdata_24;
ww_reg_rdata_25 <= reg_rdata_25;
ww_reg_rdata_26 <= reg_rdata_26;
ww_reg_rdata_27 <= reg_rdata_27;
ww_reg_rdata_28 <= reg_rdata_28;
ww_reg_rdata_29 <= reg_rdata_29;
ww_reg_rdata_30 <= reg_rdata_30;
ww_reg_rdata_31 <= reg_rdata_31;
ww_masterhresp <= masterhresp;
ww_VCC_port <= VCC_port;
ww_UARTRXD <= UARTRXD;
ww_INTEXTPIN <= INTEXTPIN;
ww_UARTDSRN <= UARTDSRN;
ww_UARTCTSN <= UARTCTSN;
ww_EBIACK <= EBIACK;
ww_combout <= combout;
ww_combout1 <= combout1;
ww_combout2 <= combout2;
ww_combout3 <= combout3;
ww_combout4 <= combout4;
ww_combout5 <= combout5;
ww_combout6 <= combout6;
ww_combout7 <= combout7;
ww_combout8 <= combout8;
ww_combout9 <= combout9;
ww_combout10 <= combout10;
ww_combout11 <= combout11;
ww_combout12 <= combout12;
ww_combout13 <= combout13;
ww_combout14 <= combout14;
ww_combout15 <= combout15;
ww_combout16 <= combout16;
ww_combout17 <= combout17;
ww_combout18 <= combout18;
ww_combout19 <= combout19;
ww_combout20 <= combout20;
ww_combout21 <= combout21;
ww_combout22 <= combout22;
ww_combout23 <= combout23;
ww_combout24 <= combout24;
ww_combout25 <= combout25;
ww_combout26 <= combout26;
ww_combout27 <= combout27;
ww_combout28 <= combout28;
ww_combout29 <= combout29;
ww_combout30 <= combout30;
ww_combout31 <= combout31;
ww_combout32 <= combout32;
ww_combout33 <= combout33;
ww_combout34 <= combout34;
ww_combout35 <= combout35;
ww_combout36 <= combout36;
ww_combout37 <= combout37;
ww_combout38 <= combout38;
ww_combout39 <= combout39;
ww_combout40 <= combout40;
ww_combout41 <= combout41;
ww_combout42 <= combout42;
ww_combout43 <= combout43;
ww_combout44 <= combout44;
ww_combout45 <= combout45;
ww_combout46 <= combout46;
ww_combout47 <= combout47;
ww_combout48 <= combout48;
ww_combout49 <= combout49;
ww_combout50 <= combout50;
ww_combout51 <= combout51;
ww_combout52 <= combout52;
ww_combout53 <= combout53;
ww_combout54 <= combout54;
ww_CLK_REF <= CLK_REF;
ww_nPOR <= nPOR;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
dp0_portadataout <= ww_dp0_portadataout;
core <= ww_core;
MASTERHWRITE <= ww_MASTERHWRITE;
SLAVEHREADYO <= ww_SLAVEHREADYO;
core1 <= ww_core1;
core2 <= ww_core2;
core3 <= ww_core3;
core4 <= ww_core4;
core5 <= ww_core5;
core6 <= ww_core6;
core7 <= ww_core7;
core8 <= ww_core8;
core9 <= ww_core9;
core10 <= ww_core10;
core11 <= ww_core11;
core12 <= ww_core12;
core13 <= ww_core13;
core14 <= ww_core14;
core15 <= ww_core15;
core16 <= ww_core16;
core17 <= ww_core17;
MASTERHADDR_2 <= ww_MASTERHADDR_2;
MASTERHADDR_3 <= ww_MASTERHADDR_3;
MASTERHADDR_4 <= ww_MASTERHADDR_4;
MASTERHADDR_5 <= ww_MASTERHADDR_5;
MASTERHADDR_6 <= ww_MASTERHADDR_6;
MASTERHADDR_7 <= ww_MASTERHADDR_7;
MASTERHADDR_8 <= ww_MASTERHADDR_8;
MASTERHADDR_9 <= ww_MASTERHADDR_9;
MASTERHADDR_10 <= ww_MASTERHADDR_10;
MASTERHADDR_12 <= ww_MASTERHADDR_12;
MASTERHADDR_13 <= ww_MASTERHADDR_13;
MASTERHADDR_14 <= ww_MASTERHADDR_14;
MASTERHADDR_15 <= ww_MASTERHADDR_15;
MASTERHADDR_18 <= ww_MASTERHADDR_18;
MASTERHADDR_19 <= ww_MASTERHADDR_19;
MASTERHTRANS_0 <= ww_MASTERHTRANS_0;
MASTERHTRANS_1 <= ww_MASTERHTRANS_1;
MASTERHSIZE_0 <= ww_MASTERHSIZE_0;
MASTERHSIZE_1 <= ww_MASTERHSIZE_1;
MASTERHBURST_0 <= ww_MASTERHBURST_0;
MASTERHBURST_1 <= ww_MASTERHBURST_1;
MASTERHBURST_2 <= ww_MASTERHBURST_2;
MASTERHWDATA_0 <= ww_MASTERHWDATA_0;
MASTERHWDATA_1 <= ww_MASTERHWDATA_1;
MASTERHWDATA_2 <= ww_MASTERHWDATA_2;
MASTERHWDATA_3 <= ww_MASTERHWDATA_3;
MASTERHWDATA_4 <= ww_MASTERHWDATA_4;
MASTERHWDATA_5 <= ww_MASTERHWDATA_5;
MASTERHWDATA_6 <= ww_MASTERHWDATA_6;
MASTERHWDATA_7 <= ww_MASTERHWDATA_7;
MASTERHWDATA_8 <= ww_MASTERHWDATA_8;
MASTERHWDATA_9 <= ww_MASTERHWDATA_9;
MASTERHWDATA_10 <= ww_MASTERHWDATA_10;
MASTERHWDATA_11 <= ww_MASTERHWDATA_11;
MASTERHWDATA_12 <= ww_MASTERHWDATA_12;
MASTERHWDATA_13 <= ww_MASTERHWDATA_13;
MASTERHWDATA_14 <= ww_MASTERHWDATA_14;
MASTERHWDATA_15 <= ww_MASTERHWDATA_15;
MASTERHWDATA_16 <= ww_MASTERHWDATA_16;
MASTERHWDATA_17 <= ww_MASTERHWDATA_17;
MASTERHWDATA_18 <= ww_MASTERHWDATA_18;
MASTERHWDATA_19 <= ww_MASTERHWDATA_19;
MASTERHWDATA_20 <= ww_MASTERHWDATA_20;
MASTERHWDATA_21 <= ww_MASTERHWDATA_21;
MASTERHWDATA_22 <= ww_MASTERHWDATA_22;
MASTERHWDATA_23 <= ww_MASTERHWDATA_23;
MASTERHWDATA_24 <= ww_MASTERHWDATA_24;
MASTERHWDATA_25 <= ww_MASTERHWDATA_25;
MASTERHWDATA_26 <= ww_MASTERHWDATA_26;
MASTERHWDATA_27 <= ww_MASTERHWDATA_27;
MASTERHWDATA_28 <= ww_MASTERHWDATA_28;
MASTERHWDATA_29 <= ww_MASTERHWDATA_29;
MASTERHWDATA_30 <= ww_MASTERHWDATA_30;
MASTERHWDATA_31 <= ww_MASTERHWDATA_31;
core18 <= ww_core18;
core19 <= ww_core19;
core20 <= ww_core20;
core21 <= ww_core21;
core22 <= ww_core22;
core23 <= ww_core23;
core24 <= ww_core24;
core25 <= ww_core25;
core26 <= ww_core26;
core27 <= ww_core27;
core28 <= ww_core28;
core29 <= ww_core29;
core30 <= ww_core30;
core31 <= ww_core31;
core32 <= ww_core32;
core33 <= ww_core33;
core34 <= ww_core34;
core35 <= ww_core35;
core36 <= ww_core36;
core37 <= ww_core37;
core38 <= ww_core38;
core39 <= ww_core39;
core40 <= ww_core40;
core41 <= ww_core41;
core42 <= ww_core42;
core43 <= ww_core43;
core44 <= ww_core44;
core45 <= ww_core45;
core46 <= ww_core46;
core47 <= ww_core47;
core48 <= ww_core48;
core49 <= ww_core49;
core50 <= ww_core50;
core51 <= ww_core51;
core52 <= ww_core52;
core53 <= ww_core53;
core54 <= ww_core54;
core55 <= ww_core55;
core56 <= ww_core56;
core57 <= ww_core57;
core58 <= ww_core58;
core59 <= ww_core59;
core60 <= ww_core60;
core61 <= ww_core61;
core62 <= ww_core62;
core63 <= ww_core63;
core64 <= ww_core64;
core65 <= ww_core65;
core66 <= ww_core66;
core67 <= ww_core67;
core68 <= ww_core68;
core69 <= ww_core69;
core70 <= ww_core70;
core71 <= ww_core71;
core72 <= ww_core72;
core73 <= ww_core73;
core74 <= ww_core74;
core75 <= ww_core75;
core76 <= ww_core76;
core77 <= ww_core77;
core78 <= ww_core78;
core79 <= ww_core79;
core80 <= ww_core80;
core81 <= ww_core81;
core82 <= ww_core82;
core83 <= ww_core83;
core84 <= ww_core84;
core85 <= ww_core85;
core86 <= ww_core86;
core87 <= ww_core87;
core88 <= ww_core88;
core89 <= ww_core89;
core90 <= ww_core90;
core91 <= ww_core91;
core92 <= ww_core92;
core93 <= ww_core93;
core94 <= ww_core94;
core95 <= ww_core95;
core96 <= ww_core96;
core97 <= ww_core97;
core98 <= ww_core98;
core99 <= ww_core99;
core100 <= ww_core100;
core101 <= ww_core101;
core102 <= ww_core102;
core103 <= ww_core103;
core104 <= ww_core104;
core105 <= ww_core105;
core106 <= ww_core106;
core107 <= ww_core107;
core108 <= ww_core108;
core109 <= ww_core109;
core110 <= ww_core110;
core111 <= ww_core111;
core112 <= ww_core112;
core113 <= ww_core113;
core114 <= ww_core114;
core115 <= ww_core115;
core116 <= ww_core116;
core117 <= ww_core117;
core118 <= ww_core118;
core119 <= ww_core119;
core120 <= ww_core120;
core121 <= ww_core121;
core122 <= ww_core122;
core123 <= ww_core123;
core124 <= ww_core124;
core125 <= ww_core125;

\ww_core~1_MASTERHRESP\ <= (lcell_hresp1 & lcell_hresp0);

\ww_core~1_SLAVEHWDATA\ <= (ww_slavehwdata_31 & ww_slavehwdata_30 & ww_slavehwdata_29 & ww_slavehwdata_28 & ww_slavehwdata_27 & ww_slavehwdata_26 & ww_slavehwdata_25 & ww_slavehwdata_24 & ww_slavehwdata_23 & ww_slavehwdata_22 & ww_slavehwdata_21 & 
ww_slavehwdata_20 & ww_slavehwdata_19 & ww_slavehwdata_18 & ww_slavehwdata_17 & ww_slavehwdata_16 & ww_slavehwdata_15 & ww_slavehwdata_14 & ww_slavehwdata_13 & ww_slavehwdata_12 & ww_slavehwdata_11 & ww_slavehwdata_10 & ww_slavehwdata_9 & ww_slavehwdata_8
& ww_slavehwdata_7 & ww_slavehwdata_6 & ww_slavehwdata_5 & ww_slavehwdata_4 & ww_slavehwdata_3 & ww_slavehwdata_2 & ww_slavehwdata_1 & ww_slavehwdata_0);

\ww_core~1_MASTERHRDATA\ <= (ww_reg_rdata_31 & ww_reg_rdata_30 & ww_reg_rdata_29 & ww_reg_rdata_28 & ww_reg_rdata_27 & ww_reg_rdata_26 & ww_reg_rdata_25 & ww_reg_rdata_24 & ww_reg_rdata_23 & ww_reg_rdata_22 & ww_reg_rdata_21 & ww_reg_rdata_20 & 
ww_reg_rdata_19 & ww_reg_rdata_18 & ww_reg_rdata_17 & ww_reg_rdata_16 & ww_reg_rdata_15 & ww_reg_rdata_14 & ww_reg_rdata_13 & ww_reg_rdata_12 & ww_reg_rdata_11 & ww_reg_rdata_10 & ww_reg_rdata_9 & ww_reg_rdata_8 & ww_reg_rdata_7 & ww_reg_rdata_6 & 
ww_reg_rdata_5 & ww_reg_rdata_4 & ww_reg_rdata_3 & ww_reg_rdata_2 & ww_reg_rdata_1 & ww_reg_rdata_0);

\ww_core~1_SLAVEHSIZE\ <= (ww_VCC_port & gnd);

ww_MASTERHADDR_2 <= \ww_core~1_MASTERHADDR\(2);
ww_MASTERHADDR_3 <= \ww_core~1_MASTERHADDR\(3);
ww_MASTERHADDR_4 <= \ww_core~1_MASTERHADDR\(4);
ww_MASTERHADDR_5 <= \ww_core~1_MASTERHADDR\(5);
ww_MASTERHADDR_6 <= \ww_core~1_MASTERHADDR\(6);
ww_MASTERHADDR_7 <= \ww_core~1_MASTERHADDR\(7);
ww_MASTERHADDR_8 <= \ww_core~1_MASTERHADDR\(8);
ww_MASTERHADDR_9 <= \ww_core~1_MASTERHADDR\(9);
ww_MASTERHADDR_10 <= \ww_core~1_MASTERHADDR\(10);
ww_MASTERHADDR_12 <= \ww_core~1_MASTERHADDR\(12);
ww_MASTERHADDR_13 <= \ww_core~1_MASTERHADDR\(13);
ww_MASTERHADDR_14 <= \ww_core~1_MASTERHADDR\(14);
ww_MASTERHADDR_15 <= \ww_core~1_MASTERHADDR\(15);
ww_MASTERHADDR_18 <= \ww_core~1_MASTERHADDR\(18);
ww_MASTERHADDR_19 <= \ww_core~1_MASTERHADDR\(19);

ww_MASTERHTRANS_0 <= \ww_core~1_MASTERHTRANS\(0);
ww_MASTERHTRANS_1 <= \ww_core~1_MASTERHTRANS\(1);

ww_MASTERHSIZE_0 <= \ww_core~1_MASTERHSIZE\(0);
ww_MASTERHSIZE_1 <= \ww_core~1_MASTERHSIZE\(1);

ww_MASTERHBURST_0 <= \ww_core~1_MASTERHBURST\(0);
ww_MASTERHBURST_1 <= \ww_core~1_MASTERHBURST\(1);
ww_MASTERHBURST_2 <= \ww_core~1_MASTERHBURST\(2);

ww_MASTERHWDATA_0 <= \ww_core~1_MASTERHWDATA\(0);
ww_MASTERHWDATA_1 <= \ww_core~1_MASTERHWDATA\(1);
ww_MASTERHWDATA_2 <= \ww_core~1_MASTERHWDATA\(2);
ww_MASTERHWDATA_3 <= \ww_core~1_MASTERHWDATA\(3);
ww_MASTERHWDATA_4 <= \ww_core~1_MASTERHWDATA\(4);
ww_MASTERHWDATA_5 <= \ww_core~1_MASTERHWDATA\(5);
ww_MASTERHWDATA_6 <= \ww_core~1_MASTERHWDATA\(6);
ww_MASTERHWDATA_7 <= \ww_core~1_MASTERHWDATA\(7);
ww_MASTERHWDATA_8 <= \ww_core~1_MASTERHWDATA\(8);
ww_MASTERHWDATA_9 <= \ww_core~1_MASTERHWDATA\(9);
ww_MASTERHWDATA_10 <= \ww_core~1_MASTERHWDATA\(10);
ww_MASTERHWDATA_11 <= \ww_core~1_MASTERHWDATA\(11);
ww_MASTERHWDATA_12 <= \ww_core~1_MASTERHWDATA\(12);
ww_MASTERHWDATA_13 <= \ww_core~1_MASTERHWDATA\(13);
ww_MASTERHWDATA_14 <= \ww_core~1_MASTERHWDATA\(14);
ww_MASTERHWDATA_15 <= \ww_core~1_MASTERHWDATA\(15);
ww_MASTERHWDATA_16 <= \ww_core~1_MASTERHWDATA\(16);
ww_MASTERHWDATA_17 <= \ww_core~1_MASTERHWDATA\(17);
ww_MASTERHWDATA_18 <= \ww_core~1_MASTERHWDATA\(18);
ww_MASTERHWDATA_19 <= \ww_core~1_MASTERHWDATA\(19);
ww_MASTERHWDATA_20 <= \ww_core~1_MASTERHWDATA\(20);
ww_MASTERHWDATA_21 <= \ww_core~1_MASTERHWDATA\(21);
ww_MASTERHWDATA_22 <= \ww_core~1_MASTERHWDATA\(22);
ww_MASTERHWDATA_23 <= \ww_core~1_MASTERHWDATA\(23);
ww_MASTERHWDATA_24 <= \ww_core~1_MASTERHWDATA\(24);
ww_MASTERHWDATA_25 <= \ww_core~1_MASTERHWDATA\(25);
ww_MASTERHWDATA_26 <= \ww_core~1_MASTERHWDATA\(26);
ww_MASTERHWDATA_27 <= \ww_core~1_MASTERHWDATA\(27);
ww_MASTERHWDATA_28 <= \ww_core~1_MASTERHWDATA\(28);
ww_MASTERHWDATA_29 <= \ww_core~1_MASTERHWDATA\(29);
ww_MASTERHWDATA_30 <= \ww_core~1_MASTERHWDATA\(30);
ww_MASTERHWDATA_31 <= \ww_core~1_MASTERHWDATA\(31);

ww_dp0_portaaddr <= (ww_dp0_portaaddr(12) & ww_dp0_portaaddr(11) & ww_dp0_portaaddr(10) & ww_dp0_portaaddr(9) & ww_dp0_portaaddr(8) & ww_dp0_portaaddr(7) & ww_dp0_portaaddr(6) & ww_dp0_portaaddr(5) & ww_dp0_portaaddr(4) & 
ww_dp0_portaaddr(3) & ww_dp0_portaaddr(2) & ww_dp0_portaaddr(1) & ww_dp0_portaaddr(0));

ww_dp0_portadataout(0) <= ww_dp0_portadataout(0);
ww_dp0_portadataout(1) <= ww_dp0_portadataout(1);
ww_dp0_portadataout(2) <= ww_dp0_portadataout(2);
ww_dp0_portadataout(3) <= ww_dp0_portadataout(3);
ww_dp0_portadataout(4) <= ww_dp0_portadataout(4);
ww_dp0_portadataout(5) <= ww_dp0_portadataout(5);
ww_dp0_portadataout(6) <= ww_dp0_portadataout(6);
ww_dp0_portadataout(7) <= ww_dp0_portadataout(7);
ww_dp0_portadataout(8) <= ww_dp0_portadataout(8);
ww_dp0_portadataout(9) <= ww_dp0_portadataout(9);
ww_dp0_portadataout(10) <= ww_dp0_portadataout(10);
ww_dp0_portadataout(11) <= ww_dp0_portadataout(11);
ww_dp0_portadataout(12) <= ww_dp0_portadataout(12);
ww_dp0_portadataout(13) <= ww_dp0_portadataout(13);
ww_dp0_portadataout(14) <= ww_dp0_portadataout(14);
ww_dp0_portadataout(15) <= ww_dp0_portadataout(15);
ww_dp0_portadataout(16) <= ww_dp0_portadataout(16);
ww_dp0_portadataout(17) <= ww_dp0_portadataout(17);
ww_dp0_portadataout(18) <= ww_dp0_portadataout(18);
ww_dp0_portadataout(19) <= ww_dp0_portadataout(19);
ww_dp0_portadataout(20) <= ww_dp0_portadataout(20);
ww_dp0_portadataout(21) <= ww_dp0_portadataout(21);
ww_dp0_portadataout(22) <= ww_dp0_portadataout(22);
ww_dp0_portadataout(23) <= ww_dp0_portadataout(23);
ww_dp0_portadataout(24) <= ww_dp0_portadataout(24);
ww_dp0_portadataout(25) <= ww_dp0_portadataout(25);
ww_dp0_portadataout(26) <= ww_dp0_portadataout(26);
ww_dp0_portadataout(27) <= ww_dp0_portadataout(27);
ww_dp0_portadataout(28) <= ww_dp0_portadataout(28);
ww_dp0_portadataout(29) <= ww_dp0_portadataout(29);
ww_dp0_portadataout(30) <= ww_dp0_portadataout(30);
ww_dp0_portadataout(31) <= ww_dp0_portadataout(31);

ww_dp1_portaaddr <= (ww_dp1_portaaddr(12) & ww_dp1_portaaddr(11) & ww_dp1_portaaddr(10) & ww_dp1_portaaddr(9) & ww_dp1_portaaddr(8) & ww_dp1_portaaddr(7) & ww_dp1_portaaddr(6) & ww_dp1_portaaddr(5) & ww_dp1_portaaddr(4) & 
ww_dp1_portaaddr(3) & ww_dp1_portaaddr(2) & ww_dp1_portaaddr(1) & ww_dp1_portaaddr(0));

ww_dp1_portadatain <= (ww_dp1_portadatain(31) & ww_dp1_portadatain(30) & ww_dp1_portadatain(29) & ww_dp1_portadatain(28) & ww_dp1_portadatain(27) & ww_dp1_portadatain(26) & ww_dp1_portadatain(25) & ww_dp1_portadatain(24) & ww_dp1_portadatain(23)
& ww_dp1_portadatain(22) & ww_dp1_portadatain(21) & ww_dp1_portadatain(20) & ww_dp1_portadatain(19) & ww_dp1_portadatain(18) & ww_dp1_portadatain(17) & ww_dp1_portadatain(16) & ww_dp1_portadatain(15) & ww_dp1_portadatain(14) & 
ww_dp1_portadatain(13) & ww_dp1_portadatain(12) & ww_dp1_portadatain(11) & ww_dp1_portadatain(10) & ww_dp1_portadatain(9) & ww_dp1_portadatain(8) & ww_dp1_portadatain(7) & ww_dp1_portadatain(6) & ww_dp1_portadatain(5) & 
ww_dp1_portadatain(4) & ww_dp1_portadatain(3) & ww_dp1_portadatain(2) & ww_dp1_portadatain(1) & ww_dp1_portadatain(0));

\dp1|portadataout[0]\ <= ww_dp1_portadataout(0);
\core~1\ : alt_exc_upcore
PORT MAP (
	MASTERHGRANT => lcell_hgrant,
	MASTERHRESP => \ww_core~1_MASTERHRESP\,
	MASTERHCLK => ww_dp0_2_portaclk,
	SLAVEHCLK => ww_dp0_2_portaclk,
	MASTERHREADY => ww_masterhready,
	INTNMI => \_~0\,
	SLAVEHWDATA => \ww_core~1_SLAVEHWDATA\,
	MASTERHRDATA => \ww_core~1_MASTERHRDATA\,
	SLAVEHSIZE => \ww_core~1_SLAVEHSIZE\,
	SLAVEHSEL => ww_VCC_port,
	UARTRXD => ww_UARTRXD,
	INTEXTPIN => ww_INTEXTPIN,
	UARTDSRN => ww_UARTDSRN,
	UARTCTSN => ww_UARTCTSN,
	EBIACK => ww_EBIACK,
	combout => ww_combout,
	combout1 => ww_combout1,
	combout2 => ww_combout2,
	combout3 => ww_combout3,
	combout4 => ww_combout4,
	combout5 => ww_combout5,
	combout6 => ww_combout6,
	combout7 => ww_combout7,
	combout8 => ww_combout8,
	combout9 => ww_combout9,
	combout10 => ww_combout10,
	combout11 => ww_combout11,
	combout12 => ww_combout12,
	combout13 => ww_combout13,
	combout14 => ww_combout14,
	combout15 => ww_combout15,
	combout16 => ww_combout16,
	combout17 => ww_combout17,
	combout18 => ww_combout18,
	combout19 => ww_combout19,
	combout20 => ww_combout20,
	combout21 => ww_combout21,
	combout22 => ww_combout22,
	combout23 => ww_combout23,
	combout24 => ww_combout24,
	combout25 => ww_combout25,
	combout26 => ww_combout26,
	combout27 => ww_combout27,
	combout28 => ww_combout28,
	combout29 => ww_combout29,
	combout30 => ww_combout30,
	combout31 => ww_combout31,
	combout32 => ww_combout32,
	combout33 => ww_combout33,
	combout34 => ww_combout34,
	combout35 => ww_combout35,
	combout36 => ww_combout36,
	combout37 => ww_combout37,
	combout38 => ww_combout38,
	combout39 => ww_combout39,
	combout40 => ww_combout40,
	combout41 => ww_combout41,
	combout42 => ww_combout42,
	combout43 => ww_combout43,
	combout44 => ww_combout44,
	combout45 => ww_combout45,
	combout46 => ww_combout46,
	combout47 => ww_combout47,
	combout48 => ww_combout48,
	combout49 => ww_combout49,
	combout50 => ww_combout50,
	combout51 => ww_combout51,
	combout52 => ww_combout52,
	combout53 => ww_combout53,
	combout54 => ww_combout54,
	CLK_REF => ww_CLK_REF,
	nPOR => ww_nPOR,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	core => ww_core,
	MASTERHWRITE => ww_MASTERHWRITE,
	SLAVEHREADYO => ww_SLAVEHREADYO,
	core1 => ww_core1,
	core2 => ww_core2,
	core3 => ww_core3,
	core4 => ww_core4,
	core5 => ww_core5,
	core6 => ww_core6,
	core7 => ww_core7,
	core8 => ww_core8,
	core9 => ww_core9,
	core10 => ww_core10,
	core11 => ww_core11,
	core12 => ww_core12,
	core13 => ww_core13,
	core14 => ww_core14,
	core15 => ww_core15,
	core16 => ww_core16,
	core17 => ww_core17,
	MASTERHADDR => \ww_core~1_MASTERHADDR\,
	MASTERHTRANS => \ww_core~1_MASTERHTRANS\,
	MASTERHSIZE => \ww_core~1_MASTERHSIZE\,
	MASTERHBURST => \ww_core~1_MASTERHBURST\,
	MASTERHWDATA => \ww_core~1_MASTERHWDATA\,
	core18 => ww_core18,
	core19 => ww_core19,
	core20 => ww_core20,
	core21 => ww_core21,
	core22 => ww_core22,
	core23 => ww_core23,
	core24 => ww_core24,
	core25 => ww_core25,
	core26 => ww_core26,
	core27 => ww_core27,
	core28 => ww_core28,
	core29 => ww_core29,
	core30 => ww_core30,
	core31 => ww_core31,
	core32 => ww_core32,
	core33 => ww_core33,
	core34 => ww_core34,
	core35 => ww_core35,
	core36 => ww_core36,
	core37 => ww_core37,
	core38 => ww_core38,
	core39 => ww_core39,
	core40 => ww_core40,
	core41 => ww_core41,
	core42 => ww_core42,
	core43 => ww_core43,
	core44 => ww_core44,
	core45 => ww_core45,
	core46 => ww_core46,
	core47 => ww_core47,
	core48 => ww_core48,
	core49 => ww_core49,
	core50 => ww_core50,
	core51 => ww_core51,
	core52 => ww_core52,
	core53 => ww_core53,
	core54 => ww_core54,
	core55 => ww_core55,
	core56 => ww_core56,
	core57 => ww_core57,
	core58 => ww_core58,
	core59 => ww_core59,
	core60 => ww_core60,
	core61 => ww_core61,
	core62 => ww_core62,
	core63 => ww_core63,
	core64 => ww_core64,
	core65 => ww_core65,
	core66 => ww_core66,
	core67 => ww_core67,
	core68 => ww_core68,
	core69 => ww_core69,
	core70 => ww_core70,
	core71 => ww_core71,
	core72 => ww_core72,
	core73 => ww_core73,
	core74 => ww_core74,
	core75 => ww_core75,
	core76 => ww_core76,
	core77 => ww_core77,
	core78 => ww_core78,
	core79 => ww_core79,
	core80 => ww_core80,
	core81 => ww_core81,
	core82 => ww_core82,
	core83 => ww_core83,
	core84 => ww_core84,
	core85 => ww_core85,
	core86 => ww_core86,
	core87 => ww_core87,
	core88 => ww_core88,
	core89 => ww_core89,
	core90 => ww_core90,
	core91 => ww_core91,
	core92 => ww_core92,
	core93 => ww_core93,
	core94 => ww_core94,
	core95 => ww_core95,
	core96 => ww_core96,
	core97 => ww_core97,
	core98 => ww_core98,
	core99 => ww_core99,
	core100 => ww_core100,
	core101 => ww_core101,
	core102 => ww_core102,
	core103 => ww_core103,
	core104 => ww_core104,
	core105 => ww_core105,
	core106 => ww_core106,
	core107 => ww_core107,
	core108 => ww_core108,
	core109 => ww_core109,
	core110 => ww_core110,
	core111 => ww_core111,
	core112 => ww_core112,
	core113 => ww_core113,
	core114 => ww_core114,
	core115 => ww_core115,
	core116 => ww_core116,
	core117 => ww_core117,
	core118 => ww_core118,
	core119 => ww_core119,
	core120 => ww_core120,
	core121 => ww_core121,
	core122 => ww_core122,
	core123 => ww_core123,
	core124 => ww_core124,
	core125 => ww_core125);
dp0 : alt_exc_dpram
PORT MAP (
	portaaddr => ww_dp0_portaaddr,
	portaclk => ww_dp0_2_portaclk,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	portadataout => ww_dp0_portadataout);
dp1 : alt_exc_dpram_1
PORT MAP (
	portaaddr => ww_dp1_portaaddr,
	portaclk => ww_dp0_2_portaclk,
	portawe => ww_dp1_portawe,
	portadatain => ww_dp1_portadatain,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	portadataout => ww_dp1_portadataout);

\lcell_hgrant~I\ : apex20ke_lcell 
-- Equation(s):
-- lcell_hgrant = GND

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => lcell_hgrant);

\lcell_hresp0~I\ : apex20ke_lcell 
-- Equation(s):
-- lcell_hresp0 = !masterhresp_0

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00FF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datad => ww_masterhresp(0),
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => lcell_hresp0);

\lcell_hresp1~I\ : apex20ke_lcell 
-- Equation(s):
-- lcell_hresp1 = VCC

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => lcell_hresp1);

\_~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~0\ = portadataout & portadataout

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_dp0_portadataout(0),
	datad => \dp1|portadataout[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	stripe IS
    PORT (
	q_12 : IN std_logic;
	q_11 : IN std_logic;
	q_10 : IN std_logic;
	q_9 : IN std_logic;
	q_8 : IN std_logic;
	q_7 : IN std_logic;
	q_6 : IN std_logic;
	q_5 : IN std_logic;
	q_4 : IN std_logic;
	q_3 : IN std_logic;
	q_2 : IN std_logic;
	q_1 : IN std_logic;
	q_0 : IN std_logic;
	q_121 : IN std_logic;
	q_111 : IN std_logic;
	q_101 : IN std_logic;
	q_91 : IN std_logic;
	q_81 : IN std_logic;
	q_71 : IN std_logic;
	q_61 : IN std_logic;
	q_51 : IN std_logic;
	q_41 : IN std_logic;
	q_31 : IN std_logic;
	q_21 : IN std_logic;
	q_13 : IN std_logic;
	q_01 : IN std_logic;
	outclock0 : IN std_logic;
	rx_we : IN std_logic;
	inst46_0 : IN std_logic;
	inst46_1 : IN std_logic;
	inst46_2 : IN std_logic;
	inst46_3 : IN std_logic;
	inst46_4 : IN std_logic;
	inst46_5 : IN std_logic;
	inst46_6 : IN std_logic;
	inst46_7 : IN std_logic;
	inst43_0 : IN std_logic;
	inst43_1 : IN std_logic;
	inst43_2 : IN std_logic;
	inst43_3 : IN std_logic;
	inst43_4 : IN std_logic;
	inst43_5 : IN std_logic;
	inst43_6 : IN std_logic;
	inst43_7 : IN std_logic;
	inst41_0 : IN std_logic;
	inst41_1 : IN std_logic;
	inst41_2 : IN std_logic;
	inst41_3 : IN std_logic;
	inst41_4 : IN std_logic;
	inst41_5 : IN std_logic;
	inst41_6 : IN std_logic;
	inst41_7 : IN std_logic;
	inst38_0 : IN std_logic;
	inst38_1 : IN std_logic;
	inst38_2 : IN std_logic;
	inst38_3 : IN std_logic;
	inst38_4 : IN std_logic;
	inst38_5 : IN std_logic;
	inst38_6 : IN std_logic;
	inst38_7 : IN std_logic;
	masterhready : IN std_logic;
	slavehwdata_0 : IN std_logic;
	slavehwdata_1 : IN std_logic;
	slavehwdata_2 : IN std_logic;
	slavehwdata_3 : IN std_logic;
	slavehwdata_4 : IN std_logic;
	slavehwdata_5 : IN std_logic;
	slavehwdata_6 : IN std_logic;
	slavehwdata_7 : IN std_logic;
	slavehwdata_8 : IN std_logic;
	slavehwdata_9 : IN std_logic;
	slavehwdata_10 : IN std_logic;
	slavehwdata_11 : IN std_logic;
	slavehwdata_12 : IN std_logic;
	slavehwdata_13 : IN std_logic;
	slavehwdata_14 : IN std_logic;
	slavehwdata_15 : IN std_logic;
	slavehwdata_16 : IN std_logic;
	slavehwdata_17 : IN std_logic;
	slavehwdata_18 : IN std_logic;
	slavehwdata_19 : IN std_logic;
	slavehwdata_20 : IN std_logic;
	slavehwdata_21 : IN std_logic;
	slavehwdata_22 : IN std_logic;
	slavehwdata_23 : IN std_logic;
	slavehwdata_24 : IN std_logic;
	slavehwdata_25 : IN std_logic;
	slavehwdata_26 : IN std_logic;
	slavehwdata_27 : IN std_logic;
	slavehwdata_28 : IN std_logic;
	slavehwdata_29 : IN std_logic;
	slavehwdata_30 : IN std_logic;
	slavehwdata_31 : IN std_logic;
	reg_rdata_0 : IN std_logic;
	reg_rdata_1 : IN std_logic;
	reg_rdata_2 : IN std_logic;
	reg_rdata_3 : IN std_logic;
	reg_rdata_4 : IN std_logic;
	reg_rdata_5 : IN std_logic;
	reg_rdata_6 : IN std_logic;
	reg_rdata_7 : IN std_logic;
	reg_rdata_8 : IN std_logic;
	reg_rdata_9 : IN std_logic;
	reg_rdata_10 : IN std_logic;
	reg_rdata_11 : IN std_logic;
	reg_rdata_12 : IN std_logic;
	reg_rdata_13 : IN std_logic;
	reg_rdata_14 : IN std_logic;
	reg_rdata_15 : IN std_logic;
	reg_rdata_16 : IN std_logic;
	reg_rdata_17 : IN std_logic;
	reg_rdata_18 : IN std_logic;
	reg_rdata_19 : IN std_logic;
	reg_rdata_20 : IN std_logic;
	reg_rdata_21 : IN std_logic;
	reg_rdata_22 : IN std_logic;
	reg_rdata_23 : IN std_logic;
	reg_rdata_24 : IN std_logic;
	reg_rdata_25 : IN std_logic;
	reg_rdata_26 : IN std_logic;
	reg_rdata_27 : IN std_logic;
	reg_rdata_28 : IN std_logic;
	reg_rdata_29 : IN std_logic;
	reg_rdata_30 : IN std_logic;
	reg_rdata_31 : IN std_logic;
	masterhresp_0 : IN std_logic;
	VCC_port : IN std_logic;
	UARTRXD : IN std_logic;
	INTEXTPIN : IN std_logic;
	UARTDSRN : IN std_logic;
	UARTCTSN : IN std_logic;
	EBIACK : IN std_logic;
	combout : IN std_logic;
	combout1 : IN std_logic;
	combout2 : IN std_logic;
	combout3 : IN std_logic;
	combout4 : IN std_logic;
	combout5 : IN std_logic;
	combout6 : IN std_logic;
	combout7 : IN std_logic;
	combout8 : IN std_logic;
	combout9 : IN std_logic;
	combout10 : IN std_logic;
	combout11 : IN std_logic;
	combout12 : IN std_logic;
	combout13 : IN std_logic;
	combout14 : IN std_logic;
	combout15 : IN std_logic;
	combout16 : IN std_logic;
	combout17 : IN std_logic;
	combout18 : IN std_logic;
	combout19 : IN std_logic;
	combout20 : IN std_logic;
	combout21 : IN std_logic;
	combout22 : IN std_logic;
	combout23 : IN std_logic;
	combout24 : IN std_logic;
	combout25 : IN std_logic;
	combout26 : IN std_logic;
	combout27 : IN std_logic;
	combout28 : IN std_logic;
	combout29 : IN std_logic;
	combout30 : IN std_logic;
	combout31 : IN std_logic;
	combout32 : IN std_logic;
	combout33 : IN std_logic;
	combout34 : IN std_logic;
	combout35 : IN std_logic;
	combout36 : IN std_logic;
	combout37 : IN std_logic;
	combout38 : IN std_logic;
	combout39 : IN std_logic;
	combout40 : IN std_logic;
	combout41 : IN std_logic;
	combout42 : IN std_logic;
	combout43 : IN std_logic;
	combout44 : IN std_logic;
	combout45 : IN std_logic;
	combout46 : IN std_logic;
	combout47 : IN std_logic;
	combout48 : IN std_logic;
	combout49 : IN std_logic;
	combout50 : IN std_logic;
	combout51 : IN std_logic;
	combout52 : IN std_logic;
	combout53 : IN std_logic;
	combout54 : IN std_logic;
	CLK_REF : IN std_logic;
	nPOR : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	portadataout_0 : OUT std_logic;
	portadataout_1 : OUT std_logic;
	portadataout_2 : OUT std_logic;
	portadataout_3 : OUT std_logic;
	portadataout_4 : OUT std_logic;
	portadataout_5 : OUT std_logic;
	portadataout_6 : OUT std_logic;
	portadataout_7 : OUT std_logic;
	portadataout_8 : OUT std_logic;
	portadataout_9 : OUT std_logic;
	portadataout_10 : OUT std_logic;
	portadataout_11 : OUT std_logic;
	portadataout_12 : OUT std_logic;
	portadataout_13 : OUT std_logic;
	portadataout_14 : OUT std_logic;
	portadataout_15 : OUT std_logic;
	portadataout_16 : OUT std_logic;
	portadataout_17 : OUT std_logic;
	portadataout_18 : OUT std_logic;
	portadataout_19 : OUT std_logic;
	portadataout_20 : OUT std_logic;
	portadataout_21 : OUT std_logic;
	portadataout_22 : OUT std_logic;
	portadataout_23 : OUT std_logic;
	portadataout_24 : OUT std_logic;
	portadataout_25 : OUT std_logic;
	portadataout_26 : OUT std_logic;
	portadataout_27 : OUT std_logic;
	portadataout_28 : OUT std_logic;
	portadataout_29 : OUT std_logic;
	portadataout_30 : OUT std_logic;
	portadataout_31 : OUT std_logic;
	core : OUT std_logic;
	MASTERHWRITE : OUT std_logic;
	SLAVEHREADYO : OUT std_logic;
	core1 : OUT std_logic;
	core2 : OUT std_logic;
	core3 : OUT std_logic;
	core4 : OUT std_logic;
	core5 : OUT std_logic;
	core6 : OUT std_logic;
	core7 : OUT std_logic;
	core8 : OUT std_logic;
	core9 : OUT std_logic;
	core10 : OUT std_logic;
	core11 : OUT std_logic;
	core12 : OUT std_logic;
	core13 : OUT std_logic;
	core14 : OUT std_logic;
	core15 : OUT std_logic;
	core16 : OUT std_logic;
	core17 : OUT std_logic;
	MASTERHADDR_2 : OUT std_logic;
	MASTERHADDR_3 : OUT std_logic;
	MASTERHADDR_4 : OUT std_logic;
	MASTERHADDR_5 : OUT std_logic;
	MASTERHADDR_6 : OUT std_logic;
	MASTERHADDR_7 : OUT std_logic;
	MASTERHADDR_8 : OUT std_logic;
	MASTERHADDR_9 : OUT std_logic;
	MASTERHADDR_10 : OUT std_logic;
	MASTERHADDR_12 : OUT std_logic;
	MASTERHADDR_13 : OUT std_logic;
	MASTERHADDR_14 : OUT std_logic;
	MASTERHADDR_15 : OUT std_logic;
	MASTERHADDR_18 : OUT std_logic;
	MASTERHADDR_19 : OUT std_logic;
	MASTERHTRANS_0 : OUT std_logic;
	MASTERHTRANS_1 : OUT std_logic;
	MASTERHSIZE_0 : OUT std_logic;
	MASTERHSIZE_1 : OUT std_logic;
	MASTERHBURST_0 : OUT std_logic;
	MASTERHBURST_1 : OUT std_logic;
	MASTERHBURST_2 : OUT std_logic;
	MASTERHWDATA_0 : OUT std_logic;
	MASTERHWDATA_1 : OUT std_logic;
	MASTERHWDATA_2 : OUT std_logic;
	MASTERHWDATA_3 : OUT std_logic;
	MASTERHWDATA_4 : OUT std_logic;
	MASTERHWDATA_5 : OUT std_logic;
	MASTERHWDATA_6 : OUT std_logic;
	MASTERHWDATA_7 : OUT std_logic;
	MASTERHWDATA_8 : OUT std_logic;
	MASTERHWDATA_9 : OUT std_logic;
	MASTERHWDATA_10 : OUT std_logic;
	MASTERHWDATA_11 : OUT std_logic;
	MASTERHWDATA_12 : OUT std_logic;
	MASTERHWDATA_13 : OUT std_logic;
	MASTERHWDATA_14 : OUT std_logic;
	MASTERHWDATA_15 : OUT std_logic;
	MASTERHWDATA_16 : OUT std_logic;
	MASTERHWDATA_17 : OUT std_logic;
	MASTERHWDATA_18 : OUT std_logic;
	MASTERHWDATA_19 : OUT std_logic;
	MASTERHWDATA_20 : OUT std_logic;
	MASTERHWDATA_21 : OUT std_logic;
	MASTERHWDATA_22 : OUT std_logic;
	MASTERHWDATA_23 : OUT std_logic;
	MASTERHWDATA_24 : OUT std_logic;
	MASTERHWDATA_25 : OUT std_logic;
	MASTERHWDATA_26 : OUT std_logic;
	MASTERHWDATA_27 : OUT std_logic;
	MASTERHWDATA_28 : OUT std_logic;
	MASTERHWDATA_29 : OUT std_logic;
	MASTERHWDATA_30 : OUT std_logic;
	MASTERHWDATA_31 : OUT std_logic;
	core18 : OUT std_logic;
	core19 : OUT std_logic;
	core20 : OUT std_logic;
	core21 : OUT std_logic;
	core22 : OUT std_logic;
	core23 : OUT std_logic;
	core24 : OUT std_logic;
	core25 : OUT std_logic;
	core26 : OUT std_logic;
	core27 : OUT std_logic;
	core28 : OUT std_logic;
	core29 : OUT std_logic;
	core30 : OUT std_logic;
	core31 : OUT std_logic;
	core32 : OUT std_logic;
	core33 : OUT std_logic;
	core34 : OUT std_logic;
	core35 : OUT std_logic;
	core36 : OUT std_logic;
	core37 : OUT std_logic;
	core38 : OUT std_logic;
	core39 : OUT std_logic;
	core40 : OUT std_logic;
	core41 : OUT std_logic;
	core42 : OUT std_logic;
	core43 : OUT std_logic;
	core44 : OUT std_logic;
	core45 : OUT std_logic;
	core46 : OUT std_logic;
	core47 : OUT std_logic;
	core48 : OUT std_logic;
	core49 : OUT std_logic;
	core50 : OUT std_logic;
	core51 : OUT std_logic;
	core52 : OUT std_logic;
	core53 : OUT std_logic;
	core54 : OUT std_logic;
	core55 : OUT std_logic;
	core56 : OUT std_logic;
	core57 : OUT std_logic;
	core58 : OUT std_logic;
	core59 : OUT std_logic;
	core60 : OUT std_logic;
	core61 : OUT std_logic;
	core62 : OUT std_logic;
	core63 : OUT std_logic;
	core64 : OUT std_logic;
	core65 : OUT std_logic;
	core66 : OUT std_logic;
	core67 : OUT std_logic;
	core68 : OUT std_logic;
	core69 : OUT std_logic;
	core70 : OUT std_logic;
	core71 : OUT std_logic;
	core72 : OUT std_logic;
	core73 : OUT std_logic;
	core74 : OUT std_logic;
	core75 : OUT std_logic;
	core76 : OUT std_logic;
	core77 : OUT std_logic;
	core78 : OUT std_logic;
	core79 : OUT std_logic;
	core80 : OUT std_logic;
	core81 : OUT std_logic;
	core82 : OUT std_logic;
	core83 : OUT std_logic;
	core84 : OUT std_logic;
	core85 : OUT std_logic;
	core86 : OUT std_logic;
	core87 : OUT std_logic;
	core88 : OUT std_logic;
	core89 : OUT std_logic;
	core90 : OUT std_logic;
	core91 : OUT std_logic;
	core92 : OUT std_logic;
	core93 : OUT std_logic;
	core94 : OUT std_logic;
	core95 : OUT std_logic;
	core96 : OUT std_logic;
	core97 : OUT std_logic;
	core98 : OUT std_logic;
	core99 : OUT std_logic;
	core100 : OUT std_logic;
	core101 : OUT std_logic;
	core102 : OUT std_logic;
	core103 : OUT std_logic;
	core104 : OUT std_logic;
	core105 : OUT std_logic;
	core106 : OUT std_logic;
	core107 : OUT std_logic;
	core108 : OUT std_logic;
	core109 : OUT std_logic;
	core110 : OUT std_logic;
	core111 : OUT std_logic;
	core112 : OUT std_logic;
	core113 : OUT std_logic;
	core114 : OUT std_logic;
	core115 : OUT std_logic;
	core116 : OUT std_logic;
	core117 : OUT std_logic;
	core118 : OUT std_logic;
	core119 : OUT std_logic;
	core120 : OUT std_logic;
	core121 : OUT std_logic;
	core122 : OUT std_logic;
	core123 : OUT std_logic;
	core124 : OUT std_logic;
	core125 : OUT std_logic
	);
END stripe;

ARCHITECTURE structure OF stripe IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_q_12 : std_logic;
SIGNAL ww_q_11 : std_logic;
SIGNAL ww_q_10 : std_logic;
SIGNAL ww_q_9 : std_logic;
SIGNAL ww_q_8 : std_logic;
SIGNAL ww_q_7 : std_logic;
SIGNAL ww_q_6 : std_logic;
SIGNAL ww_q_5 : std_logic;
SIGNAL ww_q_4 : std_logic;
SIGNAL ww_q_3 : std_logic;
SIGNAL ww_q_2 : std_logic;
SIGNAL ww_q_1 : std_logic;
SIGNAL ww_q_0 : std_logic;
SIGNAL ww_q_121 : std_logic;
SIGNAL ww_q_111 : std_logic;
SIGNAL ww_q_101 : std_logic;
SIGNAL ww_q_91 : std_logic;
SIGNAL ww_q_81 : std_logic;
SIGNAL ww_q_71 : std_logic;
SIGNAL ww_q_61 : std_logic;
SIGNAL ww_q_51 : std_logic;
SIGNAL ww_q_41 : std_logic;
SIGNAL ww_q_31 : std_logic;
SIGNAL ww_q_21 : std_logic;
SIGNAL ww_q_13 : std_logic;
SIGNAL ww_q_01 : std_logic;
SIGNAL ww_outclock0 : std_logic;
SIGNAL ww_rx_we : std_logic;
SIGNAL ww_inst46_0 : std_logic;
SIGNAL ww_inst46_1 : std_logic;
SIGNAL ww_inst46_2 : std_logic;
SIGNAL ww_inst46_3 : std_logic;
SIGNAL ww_inst46_4 : std_logic;
SIGNAL ww_inst46_5 : std_logic;
SIGNAL ww_inst46_6 : std_logic;
SIGNAL ww_inst46_7 : std_logic;
SIGNAL ww_inst43_0 : std_logic;
SIGNAL ww_inst43_1 : std_logic;
SIGNAL ww_inst43_2 : std_logic;
SIGNAL ww_inst43_3 : std_logic;
SIGNAL ww_inst43_4 : std_logic;
SIGNAL ww_inst43_5 : std_logic;
SIGNAL ww_inst43_6 : std_logic;
SIGNAL ww_inst43_7 : std_logic;
SIGNAL ww_inst41_0 : std_logic;
SIGNAL ww_inst41_1 : std_logic;
SIGNAL ww_inst41_2 : std_logic;
SIGNAL ww_inst41_3 : std_logic;
SIGNAL ww_inst41_4 : std_logic;
SIGNAL ww_inst41_5 : std_logic;
SIGNAL ww_inst41_6 : std_logic;
SIGNAL ww_inst41_7 : std_logic;
SIGNAL ww_inst38_0 : std_logic;
SIGNAL ww_inst38_1 : std_logic;
SIGNAL ww_inst38_2 : std_logic;
SIGNAL ww_inst38_3 : std_logic;
SIGNAL ww_inst38_4 : std_logic;
SIGNAL ww_inst38_5 : std_logic;
SIGNAL ww_inst38_6 : std_logic;
SIGNAL ww_inst38_7 : std_logic;
SIGNAL ww_masterhready : std_logic;
SIGNAL ww_slavehwdata_0 : std_logic;
SIGNAL ww_slavehwdata_1 : std_logic;
SIGNAL ww_slavehwdata_2 : std_logic;
SIGNAL ww_slavehwdata_3 : std_logic;
SIGNAL ww_slavehwdata_4 : std_logic;
SIGNAL ww_slavehwdata_5 : std_logic;
SIGNAL ww_slavehwdata_6 : std_logic;
SIGNAL ww_slavehwdata_7 : std_logic;
SIGNAL ww_slavehwdata_8 : std_logic;
SIGNAL ww_slavehwdata_9 : std_logic;
SIGNAL ww_slavehwdata_10 : std_logic;
SIGNAL ww_slavehwdata_11 : std_logic;
SIGNAL ww_slavehwdata_12 : std_logic;
SIGNAL ww_slavehwdata_13 : std_logic;
SIGNAL ww_slavehwdata_14 : std_logic;
SIGNAL ww_slavehwdata_15 : std_logic;
SIGNAL ww_slavehwdata_16 : std_logic;
SIGNAL ww_slavehwdata_17 : std_logic;
SIGNAL ww_slavehwdata_18 : std_logic;
SIGNAL ww_slavehwdata_19 : std_logic;
SIGNAL ww_slavehwdata_20 : std_logic;
SIGNAL ww_slavehwdata_21 : std_logic;
SIGNAL ww_slavehwdata_22 : std_logic;
SIGNAL ww_slavehwdata_23 : std_logic;
SIGNAL ww_slavehwdata_24 : std_logic;
SIGNAL ww_slavehwdata_25 : std_logic;
SIGNAL ww_slavehwdata_26 : std_logic;
SIGNAL ww_slavehwdata_27 : std_logic;
SIGNAL ww_slavehwdata_28 : std_logic;
SIGNAL ww_slavehwdata_29 : std_logic;
SIGNAL ww_slavehwdata_30 : std_logic;
SIGNAL ww_slavehwdata_31 : std_logic;
SIGNAL ww_reg_rdata_0 : std_logic;
SIGNAL ww_reg_rdata_1 : std_logic;
SIGNAL ww_reg_rdata_2 : std_logic;
SIGNAL ww_reg_rdata_3 : std_logic;
SIGNAL ww_reg_rdata_4 : std_logic;
SIGNAL ww_reg_rdata_5 : std_logic;
SIGNAL ww_reg_rdata_6 : std_logic;
SIGNAL ww_reg_rdata_7 : std_logic;
SIGNAL ww_reg_rdata_8 : std_logic;
SIGNAL ww_reg_rdata_9 : std_logic;
SIGNAL ww_reg_rdata_10 : std_logic;
SIGNAL ww_reg_rdata_11 : std_logic;
SIGNAL ww_reg_rdata_12 : std_logic;
SIGNAL ww_reg_rdata_13 : std_logic;
SIGNAL ww_reg_rdata_14 : std_logic;
SIGNAL ww_reg_rdata_15 : std_logic;
SIGNAL ww_reg_rdata_16 : std_logic;
SIGNAL ww_reg_rdata_17 : std_logic;
SIGNAL ww_reg_rdata_18 : std_logic;
SIGNAL ww_reg_rdata_19 : std_logic;
SIGNAL ww_reg_rdata_20 : std_logic;
SIGNAL ww_reg_rdata_21 : std_logic;
SIGNAL ww_reg_rdata_22 : std_logic;
SIGNAL ww_reg_rdata_23 : std_logic;
SIGNAL ww_reg_rdata_24 : std_logic;
SIGNAL ww_reg_rdata_25 : std_logic;
SIGNAL ww_reg_rdata_26 : std_logic;
SIGNAL ww_reg_rdata_27 : std_logic;
SIGNAL ww_reg_rdata_28 : std_logic;
SIGNAL ww_reg_rdata_29 : std_logic;
SIGNAL ww_reg_rdata_30 : std_logic;
SIGNAL ww_reg_rdata_31 : std_logic;
SIGNAL ww_masterhresp_0 : std_logic;
SIGNAL ww_VCC_port : std_logic;
SIGNAL ww_UARTRXD : std_logic;
SIGNAL ww_INTEXTPIN : std_logic;
SIGNAL ww_UARTDSRN : std_logic;
SIGNAL ww_UARTCTSN : std_logic;
SIGNAL ww_EBIACK : std_logic;
SIGNAL ww_combout : std_logic;
SIGNAL ww_combout1 : std_logic;
SIGNAL ww_combout2 : std_logic;
SIGNAL ww_combout3 : std_logic;
SIGNAL ww_combout4 : std_logic;
SIGNAL ww_combout5 : std_logic;
SIGNAL ww_combout6 : std_logic;
SIGNAL ww_combout7 : std_logic;
SIGNAL ww_combout8 : std_logic;
SIGNAL ww_combout9 : std_logic;
SIGNAL ww_combout10 : std_logic;
SIGNAL ww_combout11 : std_logic;
SIGNAL ww_combout12 : std_logic;
SIGNAL ww_combout13 : std_logic;
SIGNAL ww_combout14 : std_logic;
SIGNAL ww_combout15 : std_logic;
SIGNAL ww_combout16 : std_logic;
SIGNAL ww_combout17 : std_logic;
SIGNAL ww_combout18 : std_logic;
SIGNAL ww_combout19 : std_logic;
SIGNAL ww_combout20 : std_logic;
SIGNAL ww_combout21 : std_logic;
SIGNAL ww_combout22 : std_logic;
SIGNAL ww_combout23 : std_logic;
SIGNAL ww_combout24 : std_logic;
SIGNAL ww_combout25 : std_logic;
SIGNAL ww_combout26 : std_logic;
SIGNAL ww_combout27 : std_logic;
SIGNAL ww_combout28 : std_logic;
SIGNAL ww_combout29 : std_logic;
SIGNAL ww_combout30 : std_logic;
SIGNAL ww_combout31 : std_logic;
SIGNAL ww_combout32 : std_logic;
SIGNAL ww_combout33 : std_logic;
SIGNAL ww_combout34 : std_logic;
SIGNAL ww_combout35 : std_logic;
SIGNAL ww_combout36 : std_logic;
SIGNAL ww_combout37 : std_logic;
SIGNAL ww_combout38 : std_logic;
SIGNAL ww_combout39 : std_logic;
SIGNAL ww_combout40 : std_logic;
SIGNAL ww_combout41 : std_logic;
SIGNAL ww_combout42 : std_logic;
SIGNAL ww_combout43 : std_logic;
SIGNAL ww_combout44 : std_logic;
SIGNAL ww_combout45 : std_logic;
SIGNAL ww_combout46 : std_logic;
SIGNAL ww_combout47 : std_logic;
SIGNAL ww_combout48 : std_logic;
SIGNAL ww_combout49 : std_logic;
SIGNAL ww_combout50 : std_logic;
SIGNAL ww_combout51 : std_logic;
SIGNAL ww_combout52 : std_logic;
SIGNAL ww_combout53 : std_logic;
SIGNAL ww_combout54 : std_logic;
SIGNAL ww_CLK_REF : std_logic;
SIGNAL ww_nPOR : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_portadataout_0 : std_logic;
SIGNAL ww_portadataout_1 : std_logic;
SIGNAL ww_portadataout_2 : std_logic;
SIGNAL ww_portadataout_3 : std_logic;
SIGNAL ww_portadataout_4 : std_logic;
SIGNAL ww_portadataout_5 : std_logic;
SIGNAL ww_portadataout_6 : std_logic;
SIGNAL ww_portadataout_7 : std_logic;
SIGNAL ww_portadataout_8 : std_logic;
SIGNAL ww_portadataout_9 : std_logic;
SIGNAL ww_portadataout_10 : std_logic;
SIGNAL ww_portadataout_11 : std_logic;
SIGNAL ww_portadataout_12 : std_logic;
SIGNAL ww_portadataout_13 : std_logic;
SIGNAL ww_portadataout_14 : std_logic;
SIGNAL ww_portadataout_15 : std_logic;
SIGNAL ww_portadataout_16 : std_logic;
SIGNAL ww_portadataout_17 : std_logic;
SIGNAL ww_portadataout_18 : std_logic;
SIGNAL ww_portadataout_19 : std_logic;
SIGNAL ww_portadataout_20 : std_logic;
SIGNAL ww_portadataout_21 : std_logic;
SIGNAL ww_portadataout_22 : std_logic;
SIGNAL ww_portadataout_23 : std_logic;
SIGNAL ww_portadataout_24 : std_logic;
SIGNAL ww_portadataout_25 : std_logic;
SIGNAL ww_portadataout_26 : std_logic;
SIGNAL ww_portadataout_27 : std_logic;
SIGNAL ww_portadataout_28 : std_logic;
SIGNAL ww_portadataout_29 : std_logic;
SIGNAL ww_portadataout_30 : std_logic;
SIGNAL ww_portadataout_31 : std_logic;
SIGNAL ww_core : std_logic;
SIGNAL ww_MASTERHWRITE : std_logic;
SIGNAL ww_SLAVEHREADYO : std_logic;
SIGNAL ww_core1 : std_logic;
SIGNAL ww_core2 : std_logic;
SIGNAL ww_core3 : std_logic;
SIGNAL ww_core4 : std_logic;
SIGNAL ww_core5 : std_logic;
SIGNAL ww_core6 : std_logic;
SIGNAL ww_core7 : std_logic;
SIGNAL ww_core8 : std_logic;
SIGNAL ww_core9 : std_logic;
SIGNAL ww_core10 : std_logic;
SIGNAL ww_core11 : std_logic;
SIGNAL ww_core12 : std_logic;
SIGNAL ww_core13 : std_logic;
SIGNAL ww_core14 : std_logic;
SIGNAL ww_core15 : std_logic;
SIGNAL ww_core16 : std_logic;
SIGNAL ww_core17 : std_logic;
SIGNAL ww_MASTERHADDR_2 : std_logic;
SIGNAL ww_MASTERHADDR_3 : std_logic;
SIGNAL ww_MASTERHADDR_4 : std_logic;
SIGNAL ww_MASTERHADDR_5 : std_logic;
SIGNAL ww_MASTERHADDR_6 : std_logic;
SIGNAL ww_MASTERHADDR_7 : std_logic;
SIGNAL ww_MASTERHADDR_8 : std_logic;
SIGNAL ww_MASTERHADDR_9 : std_logic;
SIGNAL ww_MASTERHADDR_10 : std_logic;
SIGNAL ww_MASTERHADDR_12 : std_logic;
SIGNAL ww_MASTERHADDR_13 : std_logic;
SIGNAL ww_MASTERHADDR_14 : std_logic;
SIGNAL ww_MASTERHADDR_15 : std_logic;
SIGNAL ww_MASTERHADDR_18 : std_logic;
SIGNAL ww_MASTERHADDR_19 : std_logic;
SIGNAL ww_MASTERHTRANS_0 : std_logic;
SIGNAL ww_MASTERHTRANS_1 : std_logic;
SIGNAL ww_MASTERHSIZE_0 : std_logic;
SIGNAL ww_MASTERHSIZE_1 : std_logic;
SIGNAL ww_MASTERHBURST_0 : std_logic;
SIGNAL ww_MASTERHBURST_1 : std_logic;
SIGNAL ww_MASTERHBURST_2 : std_logic;
SIGNAL ww_MASTERHWDATA_0 : std_logic;
SIGNAL ww_MASTERHWDATA_1 : std_logic;
SIGNAL ww_MASTERHWDATA_2 : std_logic;
SIGNAL ww_MASTERHWDATA_3 : std_logic;
SIGNAL ww_MASTERHWDATA_4 : std_logic;
SIGNAL ww_MASTERHWDATA_5 : std_logic;
SIGNAL ww_MASTERHWDATA_6 : std_logic;
SIGNAL ww_MASTERHWDATA_7 : std_logic;
SIGNAL ww_MASTERHWDATA_8 : std_logic;
SIGNAL ww_MASTERHWDATA_9 : std_logic;
SIGNAL ww_MASTERHWDATA_10 : std_logic;
SIGNAL ww_MASTERHWDATA_11 : std_logic;
SIGNAL ww_MASTERHWDATA_12 : std_logic;
SIGNAL ww_MASTERHWDATA_13 : std_logic;
SIGNAL ww_MASTERHWDATA_14 : std_logic;
SIGNAL ww_MASTERHWDATA_15 : std_logic;
SIGNAL ww_MASTERHWDATA_16 : std_logic;
SIGNAL ww_MASTERHWDATA_17 : std_logic;
SIGNAL ww_MASTERHWDATA_18 : std_logic;
SIGNAL ww_MASTERHWDATA_19 : std_logic;
SIGNAL ww_MASTERHWDATA_20 : std_logic;
SIGNAL ww_MASTERHWDATA_21 : std_logic;
SIGNAL ww_MASTERHWDATA_22 : std_logic;
SIGNAL ww_MASTERHWDATA_23 : std_logic;
SIGNAL ww_MASTERHWDATA_24 : std_logic;
SIGNAL ww_MASTERHWDATA_25 : std_logic;
SIGNAL ww_MASTERHWDATA_26 : std_logic;
SIGNAL ww_MASTERHWDATA_27 : std_logic;
SIGNAL ww_MASTERHWDATA_28 : std_logic;
SIGNAL ww_MASTERHWDATA_29 : std_logic;
SIGNAL ww_MASTERHWDATA_30 : std_logic;
SIGNAL ww_MASTERHWDATA_31 : std_logic;
SIGNAL ww_core18 : std_logic;
SIGNAL ww_core19 : std_logic;
SIGNAL ww_core20 : std_logic;
SIGNAL ww_core21 : std_logic;
SIGNAL ww_core22 : std_logic;
SIGNAL ww_core23 : std_logic;
SIGNAL ww_core24 : std_logic;
SIGNAL ww_core25 : std_logic;
SIGNAL ww_core26 : std_logic;
SIGNAL ww_core27 : std_logic;
SIGNAL ww_core28 : std_logic;
SIGNAL ww_core29 : std_logic;
SIGNAL ww_core30 : std_logic;
SIGNAL ww_core31 : std_logic;
SIGNAL ww_core32 : std_logic;
SIGNAL ww_core33 : std_logic;
SIGNAL ww_core34 : std_logic;
SIGNAL ww_core35 : std_logic;
SIGNAL ww_core36 : std_logic;
SIGNAL ww_core37 : std_logic;
SIGNAL ww_core38 : std_logic;
SIGNAL ww_core39 : std_logic;
SIGNAL ww_core40 : std_logic;
SIGNAL ww_core41 : std_logic;
SIGNAL ww_core42 : std_logic;
SIGNAL ww_core43 : std_logic;
SIGNAL ww_core44 : std_logic;
SIGNAL ww_core45 : std_logic;
SIGNAL ww_core46 : std_logic;
SIGNAL ww_core47 : std_logic;
SIGNAL ww_core48 : std_logic;
SIGNAL ww_core49 : std_logic;
SIGNAL ww_core50 : std_logic;
SIGNAL ww_core51 : std_logic;
SIGNAL ww_core52 : std_logic;
SIGNAL ww_core53 : std_logic;
SIGNAL ww_core54 : std_logic;
SIGNAL ww_core55 : std_logic;
SIGNAL ww_core56 : std_logic;
SIGNAL ww_core57 : std_logic;
SIGNAL ww_core58 : std_logic;
SIGNAL ww_core59 : std_logic;
SIGNAL ww_core60 : std_logic;
SIGNAL ww_core61 : std_logic;
SIGNAL ww_core62 : std_logic;
SIGNAL ww_core63 : std_logic;
SIGNAL ww_core64 : std_logic;
SIGNAL ww_core65 : std_logic;
SIGNAL ww_core66 : std_logic;
SIGNAL ww_core67 : std_logic;
SIGNAL ww_core68 : std_logic;
SIGNAL ww_core69 : std_logic;
SIGNAL ww_core70 : std_logic;
SIGNAL ww_core71 : std_logic;
SIGNAL ww_core72 : std_logic;
SIGNAL ww_core73 : std_logic;
SIGNAL ww_core74 : std_logic;
SIGNAL ww_core75 : std_logic;
SIGNAL ww_core76 : std_logic;
SIGNAL ww_core77 : std_logic;
SIGNAL ww_core78 : std_logic;
SIGNAL ww_core79 : std_logic;
SIGNAL ww_core80 : std_logic;
SIGNAL ww_core81 : std_logic;
SIGNAL ww_core82 : std_logic;
SIGNAL ww_core83 : std_logic;
SIGNAL ww_core84 : std_logic;
SIGNAL ww_core85 : std_logic;
SIGNAL ww_core86 : std_logic;
SIGNAL ww_core87 : std_logic;
SIGNAL ww_core88 : std_logic;
SIGNAL ww_core89 : std_logic;
SIGNAL ww_core90 : std_logic;
SIGNAL ww_core91 : std_logic;
SIGNAL ww_core92 : std_logic;
SIGNAL ww_core93 : std_logic;
SIGNAL ww_core94 : std_logic;
SIGNAL ww_core95 : std_logic;
SIGNAL ww_core96 : std_logic;
SIGNAL ww_core97 : std_logic;
SIGNAL ww_core98 : std_logic;
SIGNAL ww_core99 : std_logic;
SIGNAL ww_core100 : std_logic;
SIGNAL ww_core101 : std_logic;
SIGNAL ww_core102 : std_logic;
SIGNAL ww_core103 : std_logic;
SIGNAL ww_core104 : std_logic;
SIGNAL ww_core105 : std_logic;
SIGNAL ww_core106 : std_logic;
SIGNAL ww_core107 : std_logic;
SIGNAL ww_core108 : std_logic;
SIGNAL ww_core109 : std_logic;
SIGNAL ww_core110 : std_logic;
SIGNAL ww_core111 : std_logic;
SIGNAL ww_core112 : std_logic;
SIGNAL ww_core113 : std_logic;
SIGNAL ww_core114 : std_logic;
SIGNAL ww_core115 : std_logic;
SIGNAL ww_core116 : std_logic;
SIGNAL ww_core117 : std_logic;
SIGNAL ww_core118 : std_logic;
SIGNAL ww_core119 : std_logic;
SIGNAL ww_core120 : std_logic;
SIGNAL ww_core121 : std_logic;
SIGNAL ww_core122 : std_logic;
SIGNAL ww_core123 : std_logic;
SIGNAL ww_core124 : std_logic;
SIGNAL ww_core125 : std_logic;
SIGNAL ww_lpm_instance_dp1_portaaddr : std_logic_vector(12 DOWNTO 0);
SIGNAL ww_lpm_instance_dp0_portaaddr : std_logic_vector(12 DOWNTO 0);
SIGNAL ww_lpm_instance_dp1_portadatain : std_logic_vector(31 DOWNTO 0);
SIGNAL ww_lpm_instance_masterhresp : std_logic_vector(1 DOWNTO 0);
SIGNAL ww_lpm_instance_dp0_portadataout : std_logic_vector(31 DOWNTO 0);

COMPONENT alt_exc_stripe
    PORT (
	dp1_portaaddr : IN std_logic_vector(12 DOWNTO 0);
	dp0_portaaddr : IN std_logic_vector(12 DOWNTO 0);
	dp0_2_portaclk : IN std_logic;
	dp1_portawe : IN std_logic;
	dp1_portadatain : IN std_logic_vector(31 DOWNTO 0);
	masterhready : IN std_logic;
	slavehwdata_0 : IN std_logic;
	slavehwdata_1 : IN std_logic;
	slavehwdata_2 : IN std_logic;
	slavehwdata_3 : IN std_logic;
	slavehwdata_4 : IN std_logic;
	slavehwdata_5 : IN std_logic;
	slavehwdata_6 : IN std_logic;
	slavehwdata_7 : IN std_logic;
	slavehwdata_8 : IN std_logic;
	slavehwdata_9 : IN std_logic;
	slavehwdata_10 : IN std_logic;
	slavehwdata_11 : IN std_logic;
	slavehwdata_12 : IN std_logic;
	slavehwdata_13 : IN std_logic;
	slavehwdata_14 : IN std_logic;
	slavehwdata_15 : IN std_logic;
	slavehwdata_16 : IN std_logic;
	slavehwdata_17 : IN std_logic;
	slavehwdata_18 : IN std_logic;
	slavehwdata_19 : IN std_logic;
	slavehwdata_20 : IN std_logic;
	slavehwdata_21 : IN std_logic;
	slavehwdata_22 : IN std_logic;
	slavehwdata_23 : IN std_logic;
	slavehwdata_24 : IN std_logic;
	slavehwdata_25 : IN std_logic;
	slavehwdata_26 : IN std_logic;
	slavehwdata_27 : IN std_logic;
	slavehwdata_28 : IN std_logic;
	slavehwdata_29 : IN std_logic;
	slavehwdata_30 : IN std_logic;
	slavehwdata_31 : IN std_logic;
	reg_rdata_0 : IN std_logic;
	reg_rdata_1 : IN std_logic;
	reg_rdata_2 : IN std_logic;
	reg_rdata_3 : IN std_logic;
	reg_rdata_4 : IN std_logic;
	reg_rdata_5 : IN std_logic;
	reg_rdata_6 : IN std_logic;
	reg_rdata_7 : IN std_logic;
	reg_rdata_8 : IN std_logic;
	reg_rdata_9 : IN std_logic;
	reg_rdata_10 : IN std_logic;
	reg_rdata_11 : IN std_logic;
	reg_rdata_12 : IN std_logic;
	reg_rdata_13 : IN std_logic;
	reg_rdata_14 : IN std_logic;
	reg_rdata_15 : IN std_logic;
	reg_rdata_16 : IN std_logic;
	reg_rdata_17 : IN std_logic;
	reg_rdata_18 : IN std_logic;
	reg_rdata_19 : IN std_logic;
	reg_rdata_20 : IN std_logic;
	reg_rdata_21 : IN std_logic;
	reg_rdata_22 : IN std_logic;
	reg_rdata_23 : IN std_logic;
	reg_rdata_24 : IN std_logic;
	reg_rdata_25 : IN std_logic;
	reg_rdata_26 : IN std_logic;
	reg_rdata_27 : IN std_logic;
	reg_rdata_28 : IN std_logic;
	reg_rdata_29 : IN std_logic;
	reg_rdata_30 : IN std_logic;
	reg_rdata_31 : IN std_logic;
	masterhresp : IN std_logic_vector(1 DOWNTO 0);
	VCC_port : IN std_logic;
	UARTRXD : IN std_logic;
	INTEXTPIN : IN std_logic;
	UARTDSRN : IN std_logic;
	UARTCTSN : IN std_logic;
	EBIACK : IN std_logic;
	combout : IN std_logic;
	combout1 : IN std_logic;
	combout2 : IN std_logic;
	combout3 : IN std_logic;
	combout4 : IN std_logic;
	combout5 : IN std_logic;
	combout6 : IN std_logic;
	combout7 : IN std_logic;
	combout8 : IN std_logic;
	combout9 : IN std_logic;
	combout10 : IN std_logic;
	combout11 : IN std_logic;
	combout12 : IN std_logic;
	combout13 : IN std_logic;
	combout14 : IN std_logic;
	combout15 : IN std_logic;
	combout16 : IN std_logic;
	combout17 : IN std_logic;
	combout18 : IN std_logic;
	combout19 : IN std_logic;
	combout20 : IN std_logic;
	combout21 : IN std_logic;
	combout22 : IN std_logic;
	combout23 : IN std_logic;
	combout24 : IN std_logic;
	combout25 : IN std_logic;
	combout26 : IN std_logic;
	combout27 : IN std_logic;
	combout28 : IN std_logic;
	combout29 : IN std_logic;
	combout30 : IN std_logic;
	combout31 : IN std_logic;
	combout32 : IN std_logic;
	combout33 : IN std_logic;
	combout34 : IN std_logic;
	combout35 : IN std_logic;
	combout36 : IN std_logic;
	combout37 : IN std_logic;
	combout38 : IN std_logic;
	combout39 : IN std_logic;
	combout40 : IN std_logic;
	combout41 : IN std_logic;
	combout42 : IN std_logic;
	combout43 : IN std_logic;
	combout44 : IN std_logic;
	combout45 : IN std_logic;
	combout46 : IN std_logic;
	combout47 : IN std_logic;
	combout48 : IN std_logic;
	combout49 : IN std_logic;
	combout50 : IN std_logic;
	combout51 : IN std_logic;
	combout52 : IN std_logic;
	combout53 : IN std_logic;
	combout54 : IN std_logic;
	CLK_REF : IN std_logic;
	nPOR : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	dp0_portadataout : OUT std_logic_vector(31 DOWNTO 0);
	core : OUT std_logic;
	MASTERHWRITE : OUT std_logic;
	SLAVEHREADYO : OUT std_logic;
	core1 : OUT std_logic;
	core2 : OUT std_logic;
	core3 : OUT std_logic;
	core4 : OUT std_logic;
	core5 : OUT std_logic;
	core6 : OUT std_logic;
	core7 : OUT std_logic;
	core8 : OUT std_logic;
	core9 : OUT std_logic;
	core10 : OUT std_logic;
	core11 : OUT std_logic;
	core12 : OUT std_logic;
	core13 : OUT std_logic;
	core14 : OUT std_logic;
	core15 : OUT std_logic;
	core16 : OUT std_logic;
	core17 : OUT std_logic;
	MASTERHADDR_2 : OUT std_logic;
	MASTERHADDR_3 : OUT std_logic;
	MASTERHADDR_4 : OUT std_logic;
	MASTERHADDR_5 : OUT std_logic;
	MASTERHADDR_6 : OUT std_logic;
	MASTERHADDR_7 : OUT std_logic;
	MASTERHADDR_8 : OUT std_logic;
	MASTERHADDR_9 : OUT std_logic;
	MASTERHADDR_10 : OUT std_logic;
	MASTERHADDR_12 : OUT std_logic;
	MASTERHADDR_13 : OUT std_logic;
	MASTERHADDR_14 : OUT std_logic;
	MASTERHADDR_15 : OUT std_logic;
	MASTERHADDR_18 : OUT std_logic;
	MASTERHADDR_19 : OUT std_logic;
	MASTERHTRANS_0 : OUT std_logic;
	MASTERHTRANS_1 : OUT std_logic;
	MASTERHSIZE_0 : OUT std_logic;
	MASTERHSIZE_1 : OUT std_logic;
	MASTERHBURST_0 : OUT std_logic;
	MASTERHBURST_1 : OUT std_logic;
	MASTERHBURST_2 : OUT std_logic;
	MASTERHWDATA_0 : OUT std_logic;
	MASTERHWDATA_1 : OUT std_logic;
	MASTERHWDATA_2 : OUT std_logic;
	MASTERHWDATA_3 : OUT std_logic;
	MASTERHWDATA_4 : OUT std_logic;
	MASTERHWDATA_5 : OUT std_logic;
	MASTERHWDATA_6 : OUT std_logic;
	MASTERHWDATA_7 : OUT std_logic;
	MASTERHWDATA_8 : OUT std_logic;
	MASTERHWDATA_9 : OUT std_logic;
	MASTERHWDATA_10 : OUT std_logic;
	MASTERHWDATA_11 : OUT std_logic;
	MASTERHWDATA_12 : OUT std_logic;
	MASTERHWDATA_13 : OUT std_logic;
	MASTERHWDATA_14 : OUT std_logic;
	MASTERHWDATA_15 : OUT std_logic;
	MASTERHWDATA_16 : OUT std_logic;
	MASTERHWDATA_17 : OUT std_logic;
	MASTERHWDATA_18 : OUT std_logic;
	MASTERHWDATA_19 : OUT std_logic;
	MASTERHWDATA_20 : OUT std_logic;
	MASTERHWDATA_21 : OUT std_logic;
	MASTERHWDATA_22 : OUT std_logic;
	MASTERHWDATA_23 : OUT std_logic;
	MASTERHWDATA_24 : OUT std_logic;
	MASTERHWDATA_25 : OUT std_logic;
	MASTERHWDATA_26 : OUT std_logic;
	MASTERHWDATA_27 : OUT std_logic;
	MASTERHWDATA_28 : OUT std_logic;
	MASTERHWDATA_29 : OUT std_logic;
	MASTERHWDATA_30 : OUT std_logic;
	MASTERHWDATA_31 : OUT std_logic;
	core18 : OUT std_logic;
	core19 : OUT std_logic;
	core20 : OUT std_logic;
	core21 : OUT std_logic;
	core22 : OUT std_logic;
	core23 : OUT std_logic;
	core24 : OUT std_logic;
	core25 : OUT std_logic;
	core26 : OUT std_logic;
	core27 : OUT std_logic;
	core28 : OUT std_logic;
	core29 : OUT std_logic;
	core30 : OUT std_logic;
	core31 : OUT std_logic;
	core32 : OUT std_logic;
	core33 : OUT std_logic;
	core34 : OUT std_logic;
	core35 : OUT std_logic;
	core36 : OUT std_logic;
	core37 : OUT std_logic;
	core38 : OUT std_logic;
	core39 : OUT std_logic;
	core40 : OUT std_logic;
	core41 : OUT std_logic;
	core42 : OUT std_logic;
	core43 : OUT std_logic;
	core44 : OUT std_logic;
	core45 : OUT std_logic;
	core46 : OUT std_logic;
	core47 : OUT std_logic;
	core48 : OUT std_logic;
	core49 : OUT std_logic;
	core50 : OUT std_logic;
	core51 : OUT std_logic;
	core52 : OUT std_logic;
	core53 : OUT std_logic;
	core54 : OUT std_logic;
	core55 : OUT std_logic;
	core56 : OUT std_logic;
	core57 : OUT std_logic;
	core58 : OUT std_logic;
	core59 : OUT std_logic;
	core60 : OUT std_logic;
	core61 : OUT std_logic;
	core62 : OUT std_logic;
	core63 : OUT std_logic;
	core64 : OUT std_logic;
	core65 : OUT std_logic;
	core66 : OUT std_logic;
	core67 : OUT std_logic;
	core68 : OUT std_logic;
	core69 : OUT std_logic;
	core70 : OUT std_logic;
	core71 : OUT std_logic;
	core72 : OUT std_logic;
	core73 : OUT std_logic;
	core74 : OUT std_logic;
	core75 : OUT std_logic;
	core76 : OUT std_logic;
	core77 : OUT std_logic;
	core78 : OUT std_logic;
	core79 : OUT std_logic;
	core80 : OUT std_logic;
	core81 : OUT std_logic;
	core82 : OUT std_logic;
	core83 : OUT std_logic;
	core84 : OUT std_logic;
	core85 : OUT std_logic;
	core86 : OUT std_logic;
	core87 : OUT std_logic;
	core88 : OUT std_logic;
	core89 : OUT std_logic;
	core90 : OUT std_logic;
	core91 : OUT std_logic;
	core92 : OUT std_logic;
	core93 : OUT std_logic;
	core94 : OUT std_logic;
	core95 : OUT std_logic;
	core96 : OUT std_logic;
	core97 : OUT std_logic;
	core98 : OUT std_logic;
	core99 : OUT std_logic;
	core100 : OUT std_logic;
	core101 : OUT std_logic;
	core102 : OUT std_logic;
	core103 : OUT std_logic;
	core104 : OUT std_logic;
	core105 : OUT std_logic;
	core106 : OUT std_logic;
	core107 : OUT std_logic;
	core108 : OUT std_logic;
	core109 : OUT std_logic;
	core110 : OUT std_logic;
	core111 : OUT std_logic;
	core112 : OUT std_logic;
	core113 : OUT std_logic;
	core114 : OUT std_logic;
	core115 : OUT std_logic;
	core116 : OUT std_logic;
	core117 : OUT std_logic;
	core118 : OUT std_logic;
	core119 : OUT std_logic;
	core120 : OUT std_logic;
	core121 : OUT std_logic;
	core122 : OUT std_logic;
	core123 : OUT std_logic;
	core124 : OUT std_logic;
	core125 : OUT std_logic);
END COMPONENT;

BEGIN

ww_q_12 <= q_12;
ww_q_11 <= q_11;
ww_q_10 <= q_10;
ww_q_9 <= q_9;
ww_q_8 <= q_8;
ww_q_7 <= q_7;
ww_q_6 <= q_6;
ww_q_5 <= q_5;
ww_q_4 <= q_4;
ww_q_3 <= q_3;
ww_q_2 <= q_2;
ww_q_1 <= q_1;
ww_q_0 <= q_0;
ww_q_121 <= q_121;
ww_q_111 <= q_111;
ww_q_101 <= q_101;
ww_q_91 <= q_91;
ww_q_81 <= q_81;
ww_q_71 <= q_71;
ww_q_61 <= q_61;
ww_q_51 <= q_51;
ww_q_41 <= q_41;
ww_q_31 <= q_31;
ww_q_21 <= q_21;
ww_q_13 <= q_13;
ww_q_01 <= q_01;
ww_outclock0 <= outclock0;
ww_rx_we <= rx_we;
ww_inst46_0 <= inst46_0;
ww_inst46_1 <= inst46_1;
ww_inst46_2 <= inst46_2;
ww_inst46_3 <= inst46_3;
ww_inst46_4 <= inst46_4;
ww_inst46_5 <= inst46_5;
ww_inst46_6 <= inst46_6;
ww_inst46_7 <= inst46_7;
ww_inst43_0 <= inst43_0;
ww_inst43_1 <= inst43_1;
ww_inst43_2 <= inst43_2;
ww_inst43_3 <= inst43_3;
ww_inst43_4 <= inst43_4;
ww_inst43_5 <= inst43_5;
ww_inst43_6 <= inst43_6;
ww_inst43_7 <= inst43_7;
ww_inst41_0 <= inst41_0;
ww_inst41_1 <= inst41_1;
ww_inst41_2 <= inst41_2;
ww_inst41_3 <= inst41_3;
ww_inst41_4 <= inst41_4;
ww_inst41_5 <= inst41_5;
ww_inst41_6 <= inst41_6;
ww_inst41_7 <= inst41_7;
ww_inst38_0 <= inst38_0;
ww_inst38_1 <= inst38_1;
ww_inst38_2 <= inst38_2;
ww_inst38_3 <= inst38_3;
ww_inst38_4 <= inst38_4;
ww_inst38_5 <= inst38_5;
ww_inst38_6 <= inst38_6;
ww_inst38_7 <= inst38_7;
ww_masterhready <= masterhready;
ww_slavehwdata_0 <= slavehwdata_0;
ww_slavehwdata_1 <= slavehwdata_1;
ww_slavehwdata_2 <= slavehwdata_2;
ww_slavehwdata_3 <= slavehwdata_3;
ww_slavehwdata_4 <= slavehwdata_4;
ww_slavehwdata_5 <= slavehwdata_5;
ww_slavehwdata_6 <= slavehwdata_6;
ww_slavehwdata_7 <= slavehwdata_7;
ww_slavehwdata_8 <= slavehwdata_8;
ww_slavehwdata_9 <= slavehwdata_9;
ww_slavehwdata_10 <= slavehwdata_10;
ww_slavehwdata_11 <= slavehwdata_11;
ww_slavehwdata_12 <= slavehwdata_12;
ww_slavehwdata_13 <= slavehwdata_13;
ww_slavehwdata_14 <= slavehwdata_14;
ww_slavehwdata_15 <= slavehwdata_15;
ww_slavehwdata_16 <= slavehwdata_16;
ww_slavehwdata_17 <= slavehwdata_17;
ww_slavehwdata_18 <= slavehwdata_18;
ww_slavehwdata_19 <= slavehwdata_19;
ww_slavehwdata_20 <= slavehwdata_20;
ww_slavehwdata_21 <= slavehwdata_21;
ww_slavehwdata_22 <= slavehwdata_22;
ww_slavehwdata_23 <= slavehwdata_23;
ww_slavehwdata_24 <= slavehwdata_24;
ww_slavehwdata_25 <= slavehwdata_25;
ww_slavehwdata_26 <= slavehwdata_26;
ww_slavehwdata_27 <= slavehwdata_27;
ww_slavehwdata_28 <= slavehwdata_28;
ww_slavehwdata_29 <= slavehwdata_29;
ww_slavehwdata_30 <= slavehwdata_30;
ww_slavehwdata_31 <= slavehwdata_31;
ww_reg_rdata_0 <= reg_rdata_0;
ww_reg_rdata_1 <= reg_rdata_1;
ww_reg_rdata_2 <= reg_rdata_2;
ww_reg_rdata_3 <= reg_rdata_3;
ww_reg_rdata_4 <= reg_rdata_4;
ww_reg_rdata_5 <= reg_rdata_5;
ww_reg_rdata_6 <= reg_rdata_6;
ww_reg_rdata_7 <= reg_rdata_7;
ww_reg_rdata_8 <= reg_rdata_8;
ww_reg_rdata_9 <= reg_rdata_9;
ww_reg_rdata_10 <= reg_rdata_10;
ww_reg_rdata_11 <= reg_rdata_11;
ww_reg_rdata_12 <= reg_rdata_12;
ww_reg_rdata_13 <= reg_rdata_13;
ww_reg_rdata_14 <= reg_rdata_14;
ww_reg_rdata_15 <= reg_rdata_15;
ww_reg_rdata_16 <= reg_rdata_16;
ww_reg_rdata_17 <= reg_rdata_17;
ww_reg_rdata_18 <= reg_rdata_18;
ww_reg_rdata_19 <= reg_rdata_19;
ww_reg_rdata_20 <= reg_rdata_20;
ww_reg_rdata_21 <= reg_rdata_21;
ww_reg_rdata_22 <= reg_rdata_22;
ww_reg_rdata_23 <= reg_rdata_23;
ww_reg_rdata_24 <= reg_rdata_24;
ww_reg_rdata_25 <= reg_rdata_25;
ww_reg_rdata_26 <= reg_rdata_26;
ww_reg_rdata_27 <= reg_rdata_27;
ww_reg_rdata_28 <= reg_rdata_28;
ww_reg_rdata_29 <= reg_rdata_29;
ww_reg_rdata_30 <= reg_rdata_30;
ww_reg_rdata_31 <= reg_rdata_31;
ww_masterhresp_0 <= masterhresp_0;
ww_VCC_port <= VCC_port;
ww_UARTRXD <= UARTRXD;
ww_INTEXTPIN <= INTEXTPIN;
ww_UARTDSRN <= UARTDSRN;
ww_UARTCTSN <= UARTCTSN;
ww_EBIACK <= EBIACK;
ww_combout <= combout;
ww_combout1 <= combout1;
ww_combout2 <= combout2;
ww_combout3 <= combout3;
ww_combout4 <= combout4;
ww_combout5 <= combout5;
ww_combout6 <= combout6;
ww_combout7 <= combout7;
ww_combout8 <= combout8;
ww_combout9 <= combout9;
ww_combout10 <= combout10;
ww_combout11 <= combout11;
ww_combout12 <= combout12;
ww_combout13 <= combout13;
ww_combout14 <= combout14;
ww_combout15 <= combout15;
ww_combout16 <= combout16;
ww_combout17 <= combout17;
ww_combout18 <= combout18;
ww_combout19 <= combout19;
ww_combout20 <= combout20;
ww_combout21 <= combout21;
ww_combout22 <= combout22;
ww_combout23 <= combout23;
ww_combout24 <= combout24;
ww_combout25 <= combout25;
ww_combout26 <= combout26;
ww_combout27 <= combout27;
ww_combout28 <= combout28;
ww_combout29 <= combout29;
ww_combout30 <= combout30;
ww_combout31 <= combout31;
ww_combout32 <= combout32;
ww_combout33 <= combout33;
ww_combout34 <= combout34;
ww_combout35 <= combout35;
ww_combout36 <= combout36;
ww_combout37 <= combout37;
ww_combout38 <= combout38;
ww_combout39 <= combout39;
ww_combout40 <= combout40;
ww_combout41 <= combout41;
ww_combout42 <= combout42;
ww_combout43 <= combout43;
ww_combout44 <= combout44;
ww_combout45 <= combout45;
ww_combout46 <= combout46;
ww_combout47 <= combout47;
ww_combout48 <= combout48;
ww_combout49 <= combout49;
ww_combout50 <= combout50;
ww_combout51 <= combout51;
ww_combout52 <= combout52;
ww_combout53 <= combout53;
ww_combout54 <= combout54;
ww_CLK_REF <= CLK_REF;
ww_nPOR <= nPOR;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
portadataout_0 <= ww_portadataout_0;
portadataout_1 <= ww_portadataout_1;
portadataout_2 <= ww_portadataout_2;
portadataout_3 <= ww_portadataout_3;
portadataout_4 <= ww_portadataout_4;
portadataout_5 <= ww_portadataout_5;
portadataout_6 <= ww_portadataout_6;
portadataout_7 <= ww_portadataout_7;
portadataout_8 <= ww_portadataout_8;
portadataout_9 <= ww_portadataout_9;
portadataout_10 <= ww_portadataout_10;
portadataout_11 <= ww_portadataout_11;
portadataout_12 <= ww_portadataout_12;
portadataout_13 <= ww_portadataout_13;
portadataout_14 <= ww_portadataout_14;
portadataout_15 <= ww_portadataout_15;
portadataout_16 <= ww_portadataout_16;
portadataout_17 <= ww_portadataout_17;
portadataout_18 <= ww_portadataout_18;
portadataout_19 <= ww_portadataout_19;
portadataout_20 <= ww_portadataout_20;
portadataout_21 <= ww_portadataout_21;
portadataout_22 <= ww_portadataout_22;
portadataout_23 <= ww_portadataout_23;
portadataout_24 <= ww_portadataout_24;
portadataout_25 <= ww_portadataout_25;
portadataout_26 <= ww_portadataout_26;
portadataout_27 <= ww_portadataout_27;
portadataout_28 <= ww_portadataout_28;
portadataout_29 <= ww_portadataout_29;
portadataout_30 <= ww_portadataout_30;
portadataout_31 <= ww_portadataout_31;
core <= ww_core;
MASTERHWRITE <= ww_MASTERHWRITE;
SLAVEHREADYO <= ww_SLAVEHREADYO;
core1 <= ww_core1;
core2 <= ww_core2;
core3 <= ww_core3;
core4 <= ww_core4;
core5 <= ww_core5;
core6 <= ww_core6;
core7 <= ww_core7;
core8 <= ww_core8;
core9 <= ww_core9;
core10 <= ww_core10;
core11 <= ww_core11;
core12 <= ww_core12;
core13 <= ww_core13;
core14 <= ww_core14;
core15 <= ww_core15;
core16 <= ww_core16;
core17 <= ww_core17;
MASTERHADDR_2 <= ww_MASTERHADDR_2;
MASTERHADDR_3 <= ww_MASTERHADDR_3;
MASTERHADDR_4 <= ww_MASTERHADDR_4;
MASTERHADDR_5 <= ww_MASTERHADDR_5;
MASTERHADDR_6 <= ww_MASTERHADDR_6;
MASTERHADDR_7 <= ww_MASTERHADDR_7;
MASTERHADDR_8 <= ww_MASTERHADDR_8;
MASTERHADDR_9 <= ww_MASTERHADDR_9;
MASTERHADDR_10 <= ww_MASTERHADDR_10;
MASTERHADDR_12 <= ww_MASTERHADDR_12;
MASTERHADDR_13 <= ww_MASTERHADDR_13;
MASTERHADDR_14 <= ww_MASTERHADDR_14;
MASTERHADDR_15 <= ww_MASTERHADDR_15;
MASTERHADDR_18 <= ww_MASTERHADDR_18;
MASTERHADDR_19 <= ww_MASTERHADDR_19;
MASTERHTRANS_0 <= ww_MASTERHTRANS_0;
MASTERHTRANS_1 <= ww_MASTERHTRANS_1;
MASTERHSIZE_0 <= ww_MASTERHSIZE_0;
MASTERHSIZE_1 <= ww_MASTERHSIZE_1;
MASTERHBURST_0 <= ww_MASTERHBURST_0;
MASTERHBURST_1 <= ww_MASTERHBURST_1;
MASTERHBURST_2 <= ww_MASTERHBURST_2;
MASTERHWDATA_0 <= ww_MASTERHWDATA_0;
MASTERHWDATA_1 <= ww_MASTERHWDATA_1;
MASTERHWDATA_2 <= ww_MASTERHWDATA_2;
MASTERHWDATA_3 <= ww_MASTERHWDATA_3;
MASTERHWDATA_4 <= ww_MASTERHWDATA_4;
MASTERHWDATA_5 <= ww_MASTERHWDATA_5;
MASTERHWDATA_6 <= ww_MASTERHWDATA_6;
MASTERHWDATA_7 <= ww_MASTERHWDATA_7;
MASTERHWDATA_8 <= ww_MASTERHWDATA_8;
MASTERHWDATA_9 <= ww_MASTERHWDATA_9;
MASTERHWDATA_10 <= ww_MASTERHWDATA_10;
MASTERHWDATA_11 <= ww_MASTERHWDATA_11;
MASTERHWDATA_12 <= ww_MASTERHWDATA_12;
MASTERHWDATA_13 <= ww_MASTERHWDATA_13;
MASTERHWDATA_14 <= ww_MASTERHWDATA_14;
MASTERHWDATA_15 <= ww_MASTERHWDATA_15;
MASTERHWDATA_16 <= ww_MASTERHWDATA_16;
MASTERHWDATA_17 <= ww_MASTERHWDATA_17;
MASTERHWDATA_18 <= ww_MASTERHWDATA_18;
MASTERHWDATA_19 <= ww_MASTERHWDATA_19;
MASTERHWDATA_20 <= ww_MASTERHWDATA_20;
MASTERHWDATA_21 <= ww_MASTERHWDATA_21;
MASTERHWDATA_22 <= ww_MASTERHWDATA_22;
MASTERHWDATA_23 <= ww_MASTERHWDATA_23;
MASTERHWDATA_24 <= ww_MASTERHWDATA_24;
MASTERHWDATA_25 <= ww_MASTERHWDATA_25;
MASTERHWDATA_26 <= ww_MASTERHWDATA_26;
MASTERHWDATA_27 <= ww_MASTERHWDATA_27;
MASTERHWDATA_28 <= ww_MASTERHWDATA_28;
MASTERHWDATA_29 <= ww_MASTERHWDATA_29;
MASTERHWDATA_30 <= ww_MASTERHWDATA_30;
MASTERHWDATA_31 <= ww_MASTERHWDATA_31;
core18 <= ww_core18;
core19 <= ww_core19;
core20 <= ww_core20;
core21 <= ww_core21;
core22 <= ww_core22;
core23 <= ww_core23;
core24 <= ww_core24;
core25 <= ww_core25;
core26 <= ww_core26;
core27 <= ww_core27;
core28 <= ww_core28;
core29 <= ww_core29;
core30 <= ww_core30;
core31 <= ww_core31;
core32 <= ww_core32;
core33 <= ww_core33;
core34 <= ww_core34;
core35 <= ww_core35;
core36 <= ww_core36;
core37 <= ww_core37;
core38 <= ww_core38;
core39 <= ww_core39;
core40 <= ww_core40;
core41 <= ww_core41;
core42 <= ww_core42;
core43 <= ww_core43;
core44 <= ww_core44;
core45 <= ww_core45;
core46 <= ww_core46;
core47 <= ww_core47;
core48 <= ww_core48;
core49 <= ww_core49;
core50 <= ww_core50;
core51 <= ww_core51;
core52 <= ww_core52;
core53 <= ww_core53;
core54 <= ww_core54;
core55 <= ww_core55;
core56 <= ww_core56;
core57 <= ww_core57;
core58 <= ww_core58;
core59 <= ww_core59;
core60 <= ww_core60;
core61 <= ww_core61;
core62 <= ww_core62;
core63 <= ww_core63;
core64 <= ww_core64;
core65 <= ww_core65;
core66 <= ww_core66;
core67 <= ww_core67;
core68 <= ww_core68;
core69 <= ww_core69;
core70 <= ww_core70;
core71 <= ww_core71;
core72 <= ww_core72;
core73 <= ww_core73;
core74 <= ww_core74;
core75 <= ww_core75;
core76 <= ww_core76;
core77 <= ww_core77;
core78 <= ww_core78;
core79 <= ww_core79;
core80 <= ww_core80;
core81 <= ww_core81;
core82 <= ww_core82;
core83 <= ww_core83;
core84 <= ww_core84;
core85 <= ww_core85;
core86 <= ww_core86;
core87 <= ww_core87;
core88 <= ww_core88;
core89 <= ww_core89;
core90 <= ww_core90;
core91 <= ww_core91;
core92 <= ww_core92;
core93 <= ww_core93;
core94 <= ww_core94;
core95 <= ww_core95;
core96 <= ww_core96;
core97 <= ww_core97;
core98 <= ww_core98;
core99 <= ww_core99;
core100 <= ww_core100;
core101 <= ww_core101;
core102 <= ww_core102;
core103 <= ww_core103;
core104 <= ww_core104;
core105 <= ww_core105;
core106 <= ww_core106;
core107 <= ww_core107;
core108 <= ww_core108;
core109 <= ww_core109;
core110 <= ww_core110;
core111 <= ww_core111;
core112 <= ww_core112;
core113 <= ww_core113;
core114 <= ww_core114;
core115 <= ww_core115;
core116 <= ww_core116;
core117 <= ww_core117;
core118 <= ww_core118;
core119 <= ww_core119;
core120 <= ww_core120;
core121 <= ww_core121;
core122 <= ww_core122;
core123 <= ww_core123;
core124 <= ww_core124;
core125 <= ww_core125;

ww_lpm_instance_dp1_portaaddr <= (ww_q_12 & ww_q_11 & ww_q_10 & ww_q_9 & ww_q_8 & ww_q_7 & ww_q_6 & ww_q_5 & ww_q_4 & ww_q_3 & ww_q_2 & ww_q_1 & ww_q_0);

ww_lpm_instance_dp0_portaaddr <= (ww_q_121 & ww_q_111 & ww_q_101 & ww_q_91 & ww_q_81 & ww_q_71 & ww_q_61 & ww_q_51 & ww_q_41 & ww_q_31 & ww_q_21 & ww_q_13 & ww_q_01);

ww_lpm_instance_dp1_portadatain <= (ww_inst38_7 & ww_inst38_6 & ww_inst38_5 & ww_inst38_4 & ww_inst38_3 & ww_inst38_2 & ww_inst38_1 & ww_inst38_0 & ww_inst41_7 & ww_inst41_6 & ww_inst41_5 & ww_inst41_4 & ww_inst41_3 & ww_inst41_2 & ww_inst41_1 & 
ww_inst41_0 & ww_inst43_7 & ww_inst43_6 & ww_inst43_5 & ww_inst43_4 & ww_inst43_3 & ww_inst43_2 & ww_inst43_1 & ww_inst43_0 & ww_inst46_7 & ww_inst46_6 & ww_inst46_5 & ww_inst46_4 & ww_inst46_3 & ww_inst46_2 & ww_inst46_1 & ww_inst46_0);

ww_lpm_instance_masterhresp <= (gnd & ww_masterhresp_0);

ww_portadataout_0 <= ww_lpm_instance_dp0_portadataout(0);
ww_portadataout_1 <= ww_lpm_instance_dp0_portadataout(1);
ww_portadataout_2 <= ww_lpm_instance_dp0_portadataout(2);
ww_portadataout_3 <= ww_lpm_instance_dp0_portadataout(3);
ww_portadataout_4 <= ww_lpm_instance_dp0_portadataout(4);
ww_portadataout_5 <= ww_lpm_instance_dp0_portadataout(5);
ww_portadataout_6 <= ww_lpm_instance_dp0_portadataout(6);
ww_portadataout_7 <= ww_lpm_instance_dp0_portadataout(7);
ww_portadataout_8 <= ww_lpm_instance_dp0_portadataout(8);
ww_portadataout_9 <= ww_lpm_instance_dp0_portadataout(9);
ww_portadataout_10 <= ww_lpm_instance_dp0_portadataout(10);
ww_portadataout_11 <= ww_lpm_instance_dp0_portadataout(11);
ww_portadataout_12 <= ww_lpm_instance_dp0_portadataout(12);
ww_portadataout_13 <= ww_lpm_instance_dp0_portadataout(13);
ww_portadataout_14 <= ww_lpm_instance_dp0_portadataout(14);
ww_portadataout_15 <= ww_lpm_instance_dp0_portadataout(15);
ww_portadataout_16 <= ww_lpm_instance_dp0_portadataout(16);
ww_portadataout_17 <= ww_lpm_instance_dp0_portadataout(17);
ww_portadataout_18 <= ww_lpm_instance_dp0_portadataout(18);
ww_portadataout_19 <= ww_lpm_instance_dp0_portadataout(19);
ww_portadataout_20 <= ww_lpm_instance_dp0_portadataout(20);
ww_portadataout_21 <= ww_lpm_instance_dp0_portadataout(21);
ww_portadataout_22 <= ww_lpm_instance_dp0_portadataout(22);
ww_portadataout_23 <= ww_lpm_instance_dp0_portadataout(23);
ww_portadataout_24 <= ww_lpm_instance_dp0_portadataout(24);
ww_portadataout_25 <= ww_lpm_instance_dp0_portadataout(25);
ww_portadataout_26 <= ww_lpm_instance_dp0_portadataout(26);
ww_portadataout_27 <= ww_lpm_instance_dp0_portadataout(27);
ww_portadataout_28 <= ww_lpm_instance_dp0_portadataout(28);
ww_portadataout_29 <= ww_lpm_instance_dp0_portadataout(29);
ww_portadataout_30 <= ww_lpm_instance_dp0_portadataout(30);
ww_portadataout_31 <= ww_lpm_instance_dp0_portadataout(31);
lpm_instance : alt_exc_stripe
PORT MAP (
	dp1_portaaddr => ww_lpm_instance_dp1_portaaddr,
	dp0_portaaddr => ww_lpm_instance_dp0_portaaddr,
	dp0_2_portaclk => ww_outclock0,
	dp1_portawe => ww_rx_we,
	dp1_portadatain => ww_lpm_instance_dp1_portadatain,
	masterhready => ww_masterhready,
	slavehwdata_0 => ww_slavehwdata_0,
	slavehwdata_1 => ww_slavehwdata_1,
	slavehwdata_2 => ww_slavehwdata_2,
	slavehwdata_3 => ww_slavehwdata_3,
	slavehwdata_4 => ww_slavehwdata_4,
	slavehwdata_5 => ww_slavehwdata_5,
	slavehwdata_6 => ww_slavehwdata_6,
	slavehwdata_7 => ww_slavehwdata_7,
	slavehwdata_8 => ww_slavehwdata_8,
	slavehwdata_9 => ww_slavehwdata_9,
	slavehwdata_10 => ww_slavehwdata_10,
	slavehwdata_11 => ww_slavehwdata_11,
	slavehwdata_12 => ww_slavehwdata_12,
	slavehwdata_13 => ww_slavehwdata_13,
	slavehwdata_14 => ww_slavehwdata_14,
	slavehwdata_15 => ww_slavehwdata_15,
	slavehwdata_16 => ww_slavehwdata_16,
	slavehwdata_17 => ww_slavehwdata_17,
	slavehwdata_18 => ww_slavehwdata_18,
	slavehwdata_19 => ww_slavehwdata_19,
	slavehwdata_20 => ww_slavehwdata_20,
	slavehwdata_21 => ww_slavehwdata_21,
	slavehwdata_22 => ww_slavehwdata_22,
	slavehwdata_23 => ww_slavehwdata_23,
	slavehwdata_24 => ww_slavehwdata_24,
	slavehwdata_25 => ww_slavehwdata_25,
	slavehwdata_26 => ww_slavehwdata_26,
	slavehwdata_27 => ww_slavehwdata_27,
	slavehwdata_28 => ww_slavehwdata_28,
	slavehwdata_29 => ww_slavehwdata_29,
	slavehwdata_30 => ww_slavehwdata_30,
	slavehwdata_31 => ww_slavehwdata_31,
	reg_rdata_0 => ww_reg_rdata_0,
	reg_rdata_1 => ww_reg_rdata_1,
	reg_rdata_2 => ww_reg_rdata_2,
	reg_rdata_3 => ww_reg_rdata_3,
	reg_rdata_4 => ww_reg_rdata_4,
	reg_rdata_5 => ww_reg_rdata_5,
	reg_rdata_6 => ww_reg_rdata_6,
	reg_rdata_7 => ww_reg_rdata_7,
	reg_rdata_8 => ww_reg_rdata_8,
	reg_rdata_9 => ww_reg_rdata_9,
	reg_rdata_10 => ww_reg_rdata_10,
	reg_rdata_11 => ww_reg_rdata_11,
	reg_rdata_12 => ww_reg_rdata_12,
	reg_rdata_13 => ww_reg_rdata_13,
	reg_rdata_14 => ww_reg_rdata_14,
	reg_rdata_15 => ww_reg_rdata_15,
	reg_rdata_16 => ww_reg_rdata_16,
	reg_rdata_17 => ww_reg_rdata_17,
	reg_rdata_18 => ww_reg_rdata_18,
	reg_rdata_19 => ww_reg_rdata_19,
	reg_rdata_20 => ww_reg_rdata_20,
	reg_rdata_21 => ww_reg_rdata_21,
	reg_rdata_22 => ww_reg_rdata_22,
	reg_rdata_23 => ww_reg_rdata_23,
	reg_rdata_24 => ww_reg_rdata_24,
	reg_rdata_25 => ww_reg_rdata_25,
	reg_rdata_26 => ww_reg_rdata_26,
	reg_rdata_27 => ww_reg_rdata_27,
	reg_rdata_28 => ww_reg_rdata_28,
	reg_rdata_29 => ww_reg_rdata_29,
	reg_rdata_30 => ww_reg_rdata_30,
	reg_rdata_31 => ww_reg_rdata_31,
	masterhresp => ww_lpm_instance_masterhresp,
	VCC_port => ww_VCC_port,
	UARTRXD => ww_UARTRXD,
	INTEXTPIN => ww_INTEXTPIN,
	UARTDSRN => ww_UARTDSRN,
	UARTCTSN => ww_UARTCTSN,
	EBIACK => ww_EBIACK,
	combout => ww_combout,
	combout1 => ww_combout1,
	combout2 => ww_combout2,
	combout3 => ww_combout3,
	combout4 => ww_combout4,
	combout5 => ww_combout5,
	combout6 => ww_combout6,
	combout7 => ww_combout7,
	combout8 => ww_combout8,
	combout9 => ww_combout9,
	combout10 => ww_combout10,
	combout11 => ww_combout11,
	combout12 => ww_combout12,
	combout13 => ww_combout13,
	combout14 => ww_combout14,
	combout15 => ww_combout15,
	combout16 => ww_combout16,
	combout17 => ww_combout17,
	combout18 => ww_combout18,
	combout19 => ww_combout19,
	combout20 => ww_combout20,
	combout21 => ww_combout21,
	combout22 => ww_combout22,
	combout23 => ww_combout23,
	combout24 => ww_combout24,
	combout25 => ww_combout25,
	combout26 => ww_combout26,
	combout27 => ww_combout27,
	combout28 => ww_combout28,
	combout29 => ww_combout29,
	combout30 => ww_combout30,
	combout31 => ww_combout31,
	combout32 => ww_combout32,
	combout33 => ww_combout33,
	combout34 => ww_combout34,
	combout35 => ww_combout35,
	combout36 => ww_combout36,
	combout37 => ww_combout37,
	combout38 => ww_combout38,
	combout39 => ww_combout39,
	combout40 => ww_combout40,
	combout41 => ww_combout41,
	combout42 => ww_combout42,
	combout43 => ww_combout43,
	combout44 => ww_combout44,
	combout45 => ww_combout45,
	combout46 => ww_combout46,
	combout47 => ww_combout47,
	combout48 => ww_combout48,
	combout49 => ww_combout49,
	combout50 => ww_combout50,
	combout51 => ww_combout51,
	combout52 => ww_combout52,
	combout53 => ww_combout53,
	combout54 => ww_combout54,
	CLK_REF => ww_CLK_REF,
	nPOR => ww_nPOR,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	dp0_portadataout => ww_lpm_instance_dp0_portadataout,
	core => ww_core,
	MASTERHWRITE => ww_MASTERHWRITE,
	SLAVEHREADYO => ww_SLAVEHREADYO,
	core1 => ww_core1,
	core2 => ww_core2,
	core3 => ww_core3,
	core4 => ww_core4,
	core5 => ww_core5,
	core6 => ww_core6,
	core7 => ww_core7,
	core8 => ww_core8,
	core9 => ww_core9,
	core10 => ww_core10,
	core11 => ww_core11,
	core12 => ww_core12,
	core13 => ww_core13,
	core14 => ww_core14,
	core15 => ww_core15,
	core16 => ww_core16,
	core17 => ww_core17,
	MASTERHADDR_2 => ww_MASTERHADDR_2,
	MASTERHADDR_3 => ww_MASTERHADDR_3,
	MASTERHADDR_4 => ww_MASTERHADDR_4,
	MASTERHADDR_5 => ww_MASTERHADDR_5,
	MASTERHADDR_6 => ww_MASTERHADDR_6,
	MASTERHADDR_7 => ww_MASTERHADDR_7,
	MASTERHADDR_8 => ww_MASTERHADDR_8,
	MASTERHADDR_9 => ww_MASTERHADDR_9,
	MASTERHADDR_10 => ww_MASTERHADDR_10,
	MASTERHADDR_12 => ww_MASTERHADDR_12,
	MASTERHADDR_13 => ww_MASTERHADDR_13,
	MASTERHADDR_14 => ww_MASTERHADDR_14,
	MASTERHADDR_15 => ww_MASTERHADDR_15,
	MASTERHADDR_18 => ww_MASTERHADDR_18,
	MASTERHADDR_19 => ww_MASTERHADDR_19,
	MASTERHTRANS_0 => ww_MASTERHTRANS_0,
	MASTERHTRANS_1 => ww_MASTERHTRANS_1,
	MASTERHSIZE_0 => ww_MASTERHSIZE_0,
	MASTERHSIZE_1 => ww_MASTERHSIZE_1,
	MASTERHBURST_0 => ww_MASTERHBURST_0,
	MASTERHBURST_1 => ww_MASTERHBURST_1,
	MASTERHBURST_2 => ww_MASTERHBURST_2,
	MASTERHWDATA_0 => ww_MASTERHWDATA_0,
	MASTERHWDATA_1 => ww_MASTERHWDATA_1,
	MASTERHWDATA_2 => ww_MASTERHWDATA_2,
	MASTERHWDATA_3 => ww_MASTERHWDATA_3,
	MASTERHWDATA_4 => ww_MASTERHWDATA_4,
	MASTERHWDATA_5 => ww_MASTERHWDATA_5,
	MASTERHWDATA_6 => ww_MASTERHWDATA_6,
	MASTERHWDATA_7 => ww_MASTERHWDATA_7,
	MASTERHWDATA_8 => ww_MASTERHWDATA_8,
	MASTERHWDATA_9 => ww_MASTERHWDATA_9,
	MASTERHWDATA_10 => ww_MASTERHWDATA_10,
	MASTERHWDATA_11 => ww_MASTERHWDATA_11,
	MASTERHWDATA_12 => ww_MASTERHWDATA_12,
	MASTERHWDATA_13 => ww_MASTERHWDATA_13,
	MASTERHWDATA_14 => ww_MASTERHWDATA_14,
	MASTERHWDATA_15 => ww_MASTERHWDATA_15,
	MASTERHWDATA_16 => ww_MASTERHWDATA_16,
	MASTERHWDATA_17 => ww_MASTERHWDATA_17,
	MASTERHWDATA_18 => ww_MASTERHWDATA_18,
	MASTERHWDATA_19 => ww_MASTERHWDATA_19,
	MASTERHWDATA_20 => ww_MASTERHWDATA_20,
	MASTERHWDATA_21 => ww_MASTERHWDATA_21,
	MASTERHWDATA_22 => ww_MASTERHWDATA_22,
	MASTERHWDATA_23 => ww_MASTERHWDATA_23,
	MASTERHWDATA_24 => ww_MASTERHWDATA_24,
	MASTERHWDATA_25 => ww_MASTERHWDATA_25,
	MASTERHWDATA_26 => ww_MASTERHWDATA_26,
	MASTERHWDATA_27 => ww_MASTERHWDATA_27,
	MASTERHWDATA_28 => ww_MASTERHWDATA_28,
	MASTERHWDATA_29 => ww_MASTERHWDATA_29,
	MASTERHWDATA_30 => ww_MASTERHWDATA_30,
	MASTERHWDATA_31 => ww_MASTERHWDATA_31,
	core18 => ww_core18,
	core19 => ww_core19,
	core20 => ww_core20,
	core21 => ww_core21,
	core22 => ww_core22,
	core23 => ww_core23,
	core24 => ww_core24,
	core25 => ww_core25,
	core26 => ww_core26,
	core27 => ww_core27,
	core28 => ww_core28,
	core29 => ww_core29,
	core30 => ww_core30,
	core31 => ww_core31,
	core32 => ww_core32,
	core33 => ww_core33,
	core34 => ww_core34,
	core35 => ww_core35,
	core36 => ww_core36,
	core37 => ww_core37,
	core38 => ww_core38,
	core39 => ww_core39,
	core40 => ww_core40,
	core41 => ww_core41,
	core42 => ww_core42,
	core43 => ww_core43,
	core44 => ww_core44,
	core45 => ww_core45,
	core46 => ww_core46,
	core47 => ww_core47,
	core48 => ww_core48,
	core49 => ww_core49,
	core50 => ww_core50,
	core51 => ww_core51,
	core52 => ww_core52,
	core53 => ww_core53,
	core54 => ww_core54,
	core55 => ww_core55,
	core56 => ww_core56,
	core57 => ww_core57,
	core58 => ww_core58,
	core59 => ww_core59,
	core60 => ww_core60,
	core61 => ww_core61,
	core62 => ww_core62,
	core63 => ww_core63,
	core64 => ww_core64,
	core65 => ww_core65,
	core66 => ww_core66,
	core67 => ww_core67,
	core68 => ww_core68,
	core69 => ww_core69,
	core70 => ww_core70,
	core71 => ww_core71,
	core72 => ww_core72,
	core73 => ww_core73,
	core74 => ww_core74,
	core75 => ww_core75,
	core76 => ww_core76,
	core77 => ww_core77,
	core78 => ww_core78,
	core79 => ww_core79,
	core80 => ww_core80,
	core81 => ww_core81,
	core82 => ww_core82,
	core83 => ww_core83,
	core84 => ww_core84,
	core85 => ww_core85,
	core86 => ww_core86,
	core87 => ww_core87,
	core88 => ww_core88,
	core89 => ww_core89,
	core90 => ww_core90,
	core91 => ww_core91,
	core92 => ww_core92,
	core93 => ww_core93,
	core94 => ww_core94,
	core95 => ww_core95,
	core96 => ww_core96,
	core97 => ww_core97,
	core98 => ww_core98,
	core99 => ww_core99,
	core100 => ww_core100,
	core101 => ww_core101,
	core102 => ww_core102,
	core103 => ww_core103,
	core104 => ww_core104,
	core105 => ww_core105,
	core106 => ww_core106,
	core107 => ww_core107,
	core108 => ww_core108,
	core109 => ww_core109,
	core110 => ww_core110,
	core111 => ww_core111,
	core112 => ww_core112,
	core113 => ww_core113,
	core114 => ww_core114,
	core115 => ww_core115,
	core116 => ww_core116,
	core117 => ww_core117,
	core118 => ww_core118,
	core119 => ww_core119,
	core120 => ww_core120,
	core121 => ww_core121,
	core122 => ww_core122,
	core123 => ww_core123,
	core124 => ww_core124,
	core125 => ww_core125);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	ahb_slave IS
    PORT (
	CLK : IN std_logic;
	MASTERHWRITE : IN std_logic;
	MASTERHADDR_2 : IN std_logic;
	MASTERHADDR_3 : IN std_logic;
	MASTERHADDR_4 : IN std_logic;
	MASTERHADDR_5 : IN std_logic;
	MASTERHADDR_6 : IN std_logic;
	MASTERHADDR_7 : IN std_logic;
	MASTERHADDR_8 : IN std_logic;
	MASTERHADDR_9 : IN std_logic;
	MASTERHADDR_10 : IN std_logic;
	MASTERHADDR_12 : IN std_logic;
	MASTERHADDR_13 : IN std_logic;
	MASTERHADDR_14 : IN std_logic;
	MASTERHADDR_15 : IN std_logic;
	MASTERHADDR_18 : IN std_logic;
	MASTERHADDR_19 : IN std_logic;
	MASTERHTRANS_0 : IN std_logic;
	MASTERHTRANS_1 : IN std_logic;
	MASTERHSIZE_0 : IN std_logic;
	MASTERHSIZE_1 : IN std_logic;
	MASTERHBURST_0 : IN std_logic;
	MASTERHBURST_1 : IN std_logic;
	MASTERHBURST_2 : IN std_logic;
	RST : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	masterhready : OUT std_logic;
	reg_address_3 : OUT std_logic;
	reg_address_4 : OUT std_logic;
	reg_address_5 : OUT std_logic;
	reg_address_6 : OUT std_logic;
	reg_address_2 : OUT std_logic;
	reg_address_12 : OUT std_logic;
	reg_address_13 : OUT std_logic;
	reg_address_14 : OUT std_logic;
	reg_address_18 : OUT std_logic;
	reg_address_19 : OUT std_logic;
	masterhresp_0 : OUT std_logic;
	reg_enable : OUT std_logic;
	reg_write : OUT std_logic;
	reg_address_15 : OUT std_logic;
	reg_address_7 : OUT std_logic;
	reg_address_8 : OUT std_logic;
	reg_address_9 : OUT std_logic;
	reg_address_10 : OUT std_logic
	);
END ahb_slave;

ARCHITECTURE structure OF ahb_slave IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK : std_logic;
SIGNAL ww_MASTERHWRITE : std_logic;
SIGNAL ww_MASTERHADDR_2 : std_logic;
SIGNAL ww_MASTERHADDR_3 : std_logic;
SIGNAL ww_MASTERHADDR_4 : std_logic;
SIGNAL ww_MASTERHADDR_5 : std_logic;
SIGNAL ww_MASTERHADDR_6 : std_logic;
SIGNAL ww_MASTERHADDR_7 : std_logic;
SIGNAL ww_MASTERHADDR_8 : std_logic;
SIGNAL ww_MASTERHADDR_9 : std_logic;
SIGNAL ww_MASTERHADDR_10 : std_logic;
SIGNAL ww_MASTERHADDR_12 : std_logic;
SIGNAL ww_MASTERHADDR_13 : std_logic;
SIGNAL ww_MASTERHADDR_14 : std_logic;
SIGNAL ww_MASTERHADDR_15 : std_logic;
SIGNAL ww_MASTERHADDR_18 : std_logic;
SIGNAL ww_MASTERHADDR_19 : std_logic;
SIGNAL ww_MASTERHTRANS_0 : std_logic;
SIGNAL ww_MASTERHTRANS_1 : std_logic;
SIGNAL ww_MASTERHSIZE_0 : std_logic;
SIGNAL ww_MASTERHSIZE_1 : std_logic;
SIGNAL ww_MASTERHBURST_0 : std_logic;
SIGNAL ww_MASTERHBURST_1 : std_logic;
SIGNAL ww_MASTERHBURST_2 : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_masterhready : std_logic;
SIGNAL ww_reg_address_3 : std_logic;
SIGNAL ww_reg_address_4 : std_logic;
SIGNAL ww_reg_address_5 : std_logic;
SIGNAL ww_reg_address_6 : std_logic;
SIGNAL ww_reg_address_2 : std_logic;
SIGNAL ww_reg_address_12 : std_logic;
SIGNAL ww_reg_address_13 : std_logic;
SIGNAL ww_reg_address_14 : std_logic;
SIGNAL ww_reg_address_18 : std_logic;
SIGNAL ww_reg_address_19 : std_logic;
SIGNAL ww_masterhresp_0 : std_logic;
SIGNAL ww_reg_enable : std_logic;
SIGNAL ww_reg_write : std_logic;
SIGNAL ww_reg_address_15 : std_logic;
SIGNAL ww_reg_address_7 : std_logic;
SIGNAL ww_reg_address_8 : std_logic;
SIGNAL ww_reg_address_9 : std_logic;
SIGNAL ww_reg_address_10 : std_logic;
SIGNAL \i~203\ : std_logic;
SIGNAL \i~161\ : std_logic;
SIGNAL \i~7748\ : std_logic;
SIGNAL \i275~37\ : std_logic;
SIGNAL \i~7756\ : std_logic;
SIGNAL \i~7774\ : std_logic;
SIGNAL \slave_state~21\ : std_logic;
SIGNAL \i~7\ : std_logic;
SIGNAL \i~7740\ : std_logic;
SIGNAL \i~204\ : std_logic;
SIGNAL \i~7735\ : std_logic;
SIGNAL \i~7736\ : std_logic;
SIGNAL \slave_state~24\ : std_logic;
SIGNAL \i~7738\ : std_logic;
SIGNAL \i~7739\ : std_logic;
SIGNAL \slave_state~22\ : std_logic;
SIGNAL \i~7747\ : std_logic;
SIGNAL \slave_state~23\ : std_logic;
SIGNAL \i~7749\ : std_logic;
SIGNAL \slave_state~20\ : std_logic;
SIGNAL \i275~39\ : std_logic;
SIGNAL \i~7773\ : std_logic;
SIGNAL \i~7722\ : std_logic;
SIGNAL \i464~0\ : std_logic;
SIGNAL \i~7720\ : std_logic;
SIGNAL \i~7721\ : std_logic;
SIGNAL \i~7724\ : std_logic;
SIGNAL \i~7725\ : std_logic;
SIGNAL \i~7726\ : std_logic;
SIGNAL \i~7727\ : std_logic;
SIGNAL \i~7728\ : std_logic;
SIGNAL \i~7729\ : std_logic;
SIGNAL \i~7757\ : std_logic;
SIGNAL \i~7762\ : std_logic;
SIGNAL \i~7763\ : std_logic;
SIGNAL \i~7761\ : std_logic;
SIGNAL \i~7765\ : std_logic;

BEGIN

ww_CLK <= CLK;
ww_MASTERHWRITE <= MASTERHWRITE;
ww_MASTERHADDR_2 <= MASTERHADDR_2;
ww_MASTERHADDR_3 <= MASTERHADDR_3;
ww_MASTERHADDR_4 <= MASTERHADDR_4;
ww_MASTERHADDR_5 <= MASTERHADDR_5;
ww_MASTERHADDR_6 <= MASTERHADDR_6;
ww_MASTERHADDR_7 <= MASTERHADDR_7;
ww_MASTERHADDR_8 <= MASTERHADDR_8;
ww_MASTERHADDR_9 <= MASTERHADDR_9;
ww_MASTERHADDR_10 <= MASTERHADDR_10;
ww_MASTERHADDR_12 <= MASTERHADDR_12;
ww_MASTERHADDR_13 <= MASTERHADDR_13;
ww_MASTERHADDR_14 <= MASTERHADDR_14;
ww_MASTERHADDR_15 <= MASTERHADDR_15;
ww_MASTERHADDR_18 <= MASTERHADDR_18;
ww_MASTERHADDR_19 <= MASTERHADDR_19;
ww_MASTERHTRANS_0 <= MASTERHTRANS_0;
ww_MASTERHTRANS_1 <= MASTERHTRANS_1;
ww_MASTERHSIZE_0 <= MASTERHSIZE_0;
ww_MASTERHSIZE_1 <= MASTERHSIZE_1;
ww_MASTERHBURST_0 <= MASTERHBURST_0;
ww_MASTERHBURST_1 <= MASTERHBURST_1;
ww_MASTERHBURST_2 <= MASTERHBURST_2;
ww_RST <= RST;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
masterhready <= ww_masterhready;
reg_address_3 <= ww_reg_address_3;
reg_address_4 <= ww_reg_address_4;
reg_address_5 <= ww_reg_address_5;
reg_address_6 <= ww_reg_address_6;
reg_address_2 <= ww_reg_address_2;
reg_address_12 <= ww_reg_address_12;
reg_address_13 <= ww_reg_address_13;
reg_address_14 <= ww_reg_address_14;
reg_address_18 <= ww_reg_address_18;
reg_address_19 <= ww_reg_address_19;
masterhresp_0 <= ww_masterhresp_0;
reg_enable <= ww_reg_enable;
reg_write <= ww_reg_write;
reg_address_15 <= ww_reg_address_15;
reg_address_7 <= ww_reg_address_7;
reg_address_8 <= ww_reg_address_8;
reg_address_9 <= ww_reg_address_9;
reg_address_10 <= ww_reg_address_10;

\masterhready~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- masterhready = DFFE(!\slave_state~24\ & !\i~7721\ & (\slave_state~20\ # !\i~7722\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0023",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \slave_state~20\,
	datab => \slave_state~24\,
	datac => \i~7722\,
	datad => \i~7721\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_masterhready);

\reg_address[3]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_address_3 = DFFE(MASTERHADDR & (\i~7726\ # reg_address_3 & !\i~7729\) # !MASTERHADDR & reg_address_3 & !\i~7729\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "A0EC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_MASTERHADDR_3,
	datab => ww_reg_address_3,
	datac => \i~7726\,
	datad => \i~7729\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_address_3);

\reg_address[4]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_address_4 = DFFE(MASTERHADDR & (\i~7726\ # reg_address_4 & !\i~7729\) # !MASTERHADDR & reg_address_4 & !\i~7729\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "A0EC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_MASTERHADDR_4,
	datab => ww_reg_address_4,
	datac => \i~7726\,
	datad => \i~7729\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_address_4);

\reg_address[5]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_address_5 = DFFE(MASTERHADDR & (\i~7726\ # reg_address_5 & !\i~7729\) # !MASTERHADDR & reg_address_5 & !\i~7729\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "A0EC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_MASTERHADDR_5,
	datab => ww_reg_address_5,
	datac => \i~7726\,
	datad => \i~7729\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_address_5);

\reg_address[6]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_address_6 = DFFE(MASTERHADDR & (\i~7726\ # reg_address_6 & !\i~7729\) # !MASTERHADDR & reg_address_6 & !\i~7729\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AE0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_MASTERHADDR_6,
	datab => ww_reg_address_6,
	datac => \i~7729\,
	datad => \i~7726\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_address_6);

\reg_address[2]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_address_2 = DFFE(MASTERHADDR & (\i~7726\ # !\i~7729\ & reg_address_2) # !MASTERHADDR & !\i~7729\ & reg_address_2, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BA30",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_MASTERHADDR_2,
	datab => \i~7729\,
	datac => ww_reg_address_2,
	datad => \i~7726\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_address_2);

\reg_address[12]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_address_12 = DFFE(reg_address_12 & (MASTERHADDR & \i~7726\ # !\i~7729\) # !reg_address_12 & MASTERHADDR & \i~7726\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C0EA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_12,
	datab => ww_MASTERHADDR_12,
	datac => \i~7726\,
	datad => \i~7729\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_address_12);

\reg_address[13]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_address_13 = DFFE(\i~7726\ & (MASTERHADDR # reg_address_13 & !\i~7729\) # !\i~7726\ & reg_address_13 & !\i~7729\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AE0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~7726\,
	datab => ww_reg_address_13,
	datac => \i~7729\,
	datad => ww_MASTERHADDR_13,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_address_13);

\reg_address[14]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_address_14 = DFFE(reg_address_14 & (MASTERHADDR & \i~7726\ # !\i~7729\) # !reg_address_14 & MASTERHADDR & \i~7726\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C0EA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_14,
	datab => ww_MASTERHADDR_14,
	datac => \i~7726\,
	datad => \i~7729\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_address_14);

\reg_address[18]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_address_18 = DFFE(\i~7729\ & MASTERHADDR & \i~7726\ # !\i~7729\ & (reg_address_18 # MASTERHADDR & \i~7726\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DC50",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~7729\,
	datab => ww_MASTERHADDR_18,
	datac => ww_reg_address_18,
	datad => \i~7726\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_address_18);

\reg_address[19]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_address_19 = DFFE(\i~7729\ & MASTERHADDR & \i~7726\ # !\i~7729\ & (reg_address_19 # MASTERHADDR & \i~7726\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DC50",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~7729\,
	datab => ww_MASTERHADDR_19,
	datac => ww_reg_address_19,
	datad => \i~7726\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_address_19);

\masterhresp[0]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- masterhresp_0 = DFFE(\slave_state~23\ # \i~7756\ & (\i~7757\ # !\i275~37\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EFCC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~7757\,
	datab => \slave_state~23\,
	datac => \i275~37\,
	datad => \i~7756\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_masterhresp_0);

\reg_enable~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_enable = DFFE(\i~7761\ # \i~203\ & (\i~7762\ # \i~7763\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFA8",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~203\,
	datab => \i~7762\,
	datac => \i~7763\,
	datad => \i~7761\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_enable);

\reg_write~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_write = DFFE(\i~7765\ # reg_write & (\slave_state~24\ # !\i~7729\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FAF2",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_write,
	datab => \i~7729\,
	datac => \i~7765\,
	datad => \slave_state~24\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_write);

\reg_address[15]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_address_15 = DFFE(\i~7729\ & MASTERHADDR & \i~7726\ # !\i~7729\ & (reg_address_15 # MASTERHADDR & \i~7726\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DC50",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~7729\,
	datab => ww_MASTERHADDR_15,
	datac => ww_reg_address_15,
	datad => \i~7726\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_address_15);

\reg_address[7]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_address_7 = DFFE(\i~7726\ & (MASTERHADDR # reg_address_7 & !\i~7729\) # !\i~7726\ & reg_address_7 & !\i~7729\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "88F8",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~7726\,
	datab => ww_MASTERHADDR_7,
	datac => ww_reg_address_7,
	datad => \i~7729\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_address_7);

\reg_address[8]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_address_8 = DFFE(reg_address_8 & (\i~7726\ & MASTERHADDR # !\i~7729\) # !reg_address_8 & \i~7726\ & MASTERHADDR, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F222",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_8,
	datab => \i~7729\,
	datac => \i~7726\,
	datad => ww_MASTERHADDR_8,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_address_8);

\reg_address[9]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_address_9 = DFFE(MASTERHADDR & (\i~7726\ # !\i~7729\ & reg_address_9) # !MASTERHADDR & !\i~7729\ & reg_address_9, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B3A0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_MASTERHADDR_9,
	datab => \i~7729\,
	datac => \i~7726\,
	datad => ww_reg_address_9,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_address_9);

\reg_address[10]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_address_10 = DFFE(MASTERHADDR & (\i~7726\ # reg_address_10 & !\i~7729\) # !MASTERHADDR & reg_address_10 & !\i~7729\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "A0EC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_MASTERHADDR_10,
	datab => ww_reg_address_10,
	datac => \i~7726\,
	datad => \i~7729\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_address_10);

\i~203_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~203\ = MASTERHTRANS # MASTERHTRANS

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHTRANS_1,
	datad => ww_MASTERHTRANS_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~203\);

\i~161_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~161\ = \slave_state~22\ & MASTERHTRANS

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \slave_state~22\,
	datad => ww_MASTERHTRANS_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~161\);

\i~7748_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~7748\ = \slave_state~21\ & (MASTERHBURST # MASTERHBURST # !MASTERHBURST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C8CC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_MASTERHBURST_2,
	datab => \slave_state~21\,
	datac => ww_MASTERHBURST_1,
	datad => ww_MASTERHBURST_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~7748\);

\i275~37_I\ : apex20ke_lcell 
-- Equation(s):
-- \i275~37\ = !MASTERHBURST & !MASTERHSIZE & !MASTERHBURST & MASTERHSIZE
-- \i275~39\ = !MASTERHBURST & !MASTERHSIZE & !MASTERHBURST & MASTERHSIZE

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0100",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_MASTERHBURST_2,
	datab => ww_MASTERHSIZE_0,
	datac => ww_MASTERHBURST_1,
	datad => ww_MASTERHSIZE_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i275~37\,
	cascout => \i275~39\);

\i~7756_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~7756\ = !\slave_state~20\ & (MASTERHTRANS # MASTERHTRANS)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00FC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_MASTERHTRANS_1,
	datac => ww_MASTERHTRANS_0,
	datad => \slave_state~20\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~7756\);

\i~204_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~204\ = MASTERHTRANS & !MASTERHTRANS
-- \i~7774\ = MASTERHTRANS & !MASTERHTRANS

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00F0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHTRANS_1,
	datad => ww_MASTERHTRANS_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~204\,
	cascout => \i~7774\);

\slave_state~21_I\ : apex20ke_lcell 
-- Equation(s):
-- \slave_state~21\ = DFFE((\i~7748\ # MASTERHWRITE & \i275~37\ & \i~7756\) & CASCADE(\i~7774\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAAA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~7748\,
	datab => ww_MASTERHWRITE,
	datac => \i275~37\,
	datad => \i~7756\,
	cascin => \i~7774\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \slave_state~21\);

\i~7_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~7\ = MASTERHBURST & !MASTERHBURST & !MASTERHBURST

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0202",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_MASTERHBURST_0,
	datab => ww_MASTERHBURST_2,
	datac => ww_MASTERHBURST_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~7\);

\i~7740_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~7740\ = \slave_state~21\ & \i~7\ & (MASTERHTRANS # MASTERHTRANS)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C800",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_MASTERHTRANS_1,
	datab => \slave_state~21\,
	datac => ww_MASTERHTRANS_0,
	datad => \i~7\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~7740\);

\i~7735_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~7735\ = MASTERHTRANS & (\slave_state~22\ # \slave_state~21\ & \i~7\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EC00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \slave_state~21\,
	datab => \slave_state~22\,
	datac => \i~7\,
	datad => ww_MASTERHTRANS_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~7735\);

\i~7736_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~7736\ = \i275~37\ & !\slave_state~20\ & (MASTERHTRANS # MASTERHTRANS)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "2220",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i275~37\,
	datab => \slave_state~20\,
	datac => ww_MASTERHTRANS_1,
	datad => ww_MASTERHTRANS_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~7736\);

\slave_state~24_I\ : apex20ke_lcell 
-- Equation(s):
-- \slave_state~24\ = DFFE(!MASTERHWRITE & (\i~7735\ # \i~204\ & \i~7736\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0E0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~204\,
	datab => \i~7735\,
	datac => ww_MASTERHWRITE,
	datad => \i~7736\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \slave_state~24\);

\i~7738_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~7738\ = MASTERHTRANS & !MASTERHTRANS

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00F0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHTRANS_0,
	datad => ww_MASTERHTRANS_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~7738\);

\i~7739_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~7739\ = \slave_state~24\ # \i~7738\ & (\slave_state~22\ # \slave_state~21\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \slave_state~22\,
	datab => \slave_state~21\,
	datac => \slave_state~24\,
	datad => \i~7738\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~7739\);

\slave_state~22_I\ : apex20ke_lcell 
-- Equation(s):
-- \slave_state~22\ = DFFE(\i~7739\ # MASTERHWRITE & (\i~161\ # \i~7740\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFA8",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_MASTERHWRITE,
	datab => \i~161\,
	datac => \i~7740\,
	datad => \i~7739\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \slave_state~22\);

\i~7747_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~7747\ = !\i~203\ & (\slave_state~22\ # \slave_state~21\ # !\slave_state~20\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5551",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~203\,
	datab => \slave_state~20\,
	datac => \slave_state~22\,
	datad => \slave_state~21\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~7747\);

\slave_state~23_I\ : apex20ke_lcell 
-- Equation(s):
-- \slave_state~23\ = DFFE(!\i275~37\ & !\slave_state~20\ & (MASTERHTRANS # MASTERHTRANS), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "000E",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_MASTERHTRANS_0,
	datab => ww_MASTERHTRANS_1,
	datac => \i275~37\,
	datad => \slave_state~20\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \slave_state~23\);

\i~7749_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~7749\ = \i~7738\ & \i275~37\ & !\slave_state~20\ # !\i~7738\ & (\i~7748\ # \i275~37\ & !\slave_state~20\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5D0C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~7738\,
	datab => \i275~37\,
	datac => \slave_state~20\,
	datad => \i~7748\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~7749\);

\slave_state~20_I\ : apex20ke_lcell 
-- Equation(s):
-- \slave_state~20\ = DFFE(!\i~7747\ & !\slave_state~23\ & (\i~204\ # !\i~7749\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "1011",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~7747\,
	datab => \slave_state~23\,
	datac => \i~204\,
	datad => \i~7749\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \slave_state~20\);

\i~7773_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~7773\ = (MASTERHTRANS & !masterhready # !MASTERHTRANS & (MASTERHTRANS & MASTERHWRITE # !MASTERHTRANS & !masterhready)) & CASCADE(\i275~39\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "2E0F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_MASTERHWRITE,
	datab => ww_MASTERHTRANS_0,
	datac => ww_masterhready,
	datad => ww_MASTERHTRANS_1,
	cascin => \i275~39\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~7773\);

\i~7722_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~7722\ = \i~7773\ # !MASTERHTRANS & !MASTERHTRANS

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF03",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_MASTERHTRANS_0,
	datac => ww_MASTERHTRANS_1,
	datad => \i~7773\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~7722\);

\i464~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \i464~0\ = MASTERHBURST # MASTERHBURST # !MASTERHBURST # !MASTERHTRANS

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FDFF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_MASTERHTRANS_1,
	datab => ww_MASTERHBURST_1,
	datac => ww_MASTERHBURST_2,
	datad => ww_MASTERHBURST_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i464~0\);

\i~7720_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~7720\ = \slave_state~23\ # \slave_state~22\ & (MASTERHWRITE # !MASTERHTRANS)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF8C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_MASTERHWRITE,
	datab => \slave_state~22\,
	datac => ww_MASTERHTRANS_1,
	datad => \slave_state~23\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~7720\);

\i~7721_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~7721\ = \i~7720\ # \slave_state~21\ & (\i464~0\ # MASTERHWRITE)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFC8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i464~0\,
	datab => \slave_state~21\,
	datac => ww_MASTERHWRITE,
	datad => \i~7720\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~7721\);

\i~7724_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~7724\ = MASTERHTRANS & \i275~37\ & !\slave_state~20\ & !MASTERHTRANS

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0008",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_MASTERHTRANS_1,
	datab => \i275~37\,
	datac => \slave_state~20\,
	datad => ww_MASTERHTRANS_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~7724\);

\i~7725_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~7725\ = \i~7\ & \slave_state~21\ & MASTERHTRANS

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "A000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~7\,
	datac => \slave_state~21\,
	datad => ww_MASTERHTRANS_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~7725\);

\i~7726_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~7726\ = \i~161\ # \i~7724\ # \slave_state~24\ # \i~7725\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~161\,
	datab => \i~7724\,
	datac => \slave_state~24\,
	datad => \i~7725\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~7726\);

\i~7727_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~7727\ = !\slave_state~23\ & (MASTERHTRANS # !\slave_state~22\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3303",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \slave_state~23\,
	datac => \slave_state~22\,
	datad => ww_MASTERHTRANS_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~7727\);

\i~7728_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~7728\ = !\slave_state~20\ & (MASTERHTRANS # !\i275~37\ # !MASTERHTRANS)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F07",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_MASTERHTRANS_1,
	datab => \i275~37\,
	datac => \slave_state~20\,
	datad => ww_MASTERHTRANS_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~7728\);

\i~7729_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~7729\ = \i~7727\ & !\i~7728\ & (!\slave_state~21\ # !\i464~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "004C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i464~0\,
	datab => \i~7727\,
	datac => \slave_state~21\,
	datad => \i~7728\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~7729\);

\i~7757_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~7757\ = masterhresp_0 & (MASTERHTRANS # !MASTERHTRANS)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CF00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_MASTERHTRANS_0,
	datac => ww_MASTERHTRANS_1,
	datad => ww_masterhresp_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~7757\);

\i~7762_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~7762\ = !\slave_state~20\ & \i275~37\ & (reg_enable # \i~204\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "4440",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \slave_state~20\,
	datab => \i275~37\,
	datac => ww_reg_enable,
	datad => \i~204\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~7762\);

\i~7763_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~7763\ = \slave_state~21\ & (\i~7\ # MASTERHTRANS & !MASTERHTRANS)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "A0A8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \slave_state~21\,
	datab => ww_MASTERHTRANS_0,
	datac => \i~7\,
	datad => ww_MASTERHTRANS_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~7763\);

\i~7761_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~7761\ = \slave_state~24\ # \slave_state~22\ & MASTERHTRANS

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FAF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \slave_state~22\,
	datac => \slave_state~24\,
	datad => ww_MASTERHTRANS_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~7761\);

\i~7765_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~7765\ = MASTERHWRITE & (\i~7724\ # \i~161\ # \i~7725\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0E0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~7724\,
	datab => \i~161\,
	datac => ww_MASTERHWRITE,
	datad => \i~7725\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~7765\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	ahb_master IS
    PORT (
	CLK : IN std_logic;
	RST : IN std_logic;
	wdata_0 : IN std_logic;
	wdata_1 : IN std_logic;
	wdata_2 : IN std_logic;
	wdata_3 : IN std_logic;
	wdata_4 : IN std_logic;
	wdata_5 : IN std_logic;
	wdata_6 : IN std_logic;
	wdata_7 : IN std_logic;
	wdata_8 : IN std_logic;
	wdata_9 : IN std_logic;
	wdata_10 : IN std_logic;
	wdata_11 : IN std_logic;
	wdata_12 : IN std_logic;
	wdata_13 : IN std_logic;
	wdata_14 : IN std_logic;
	wdata_15 : IN std_logic;
	wdata_16 : IN std_logic;
	wdata_17 : IN std_logic;
	wdata_18 : IN std_logic;
	wdata_19 : IN std_logic;
	wdata_20 : IN std_logic;
	wdata_21 : IN std_logic;
	wdata_22 : IN std_logic;
	wdata_23 : IN std_logic;
	wdata_24 : IN std_logic;
	wdata_25 : IN std_logic;
	wdata_26 : IN std_logic;
	wdata_27 : IN std_logic;
	wdata_28 : IN std_logic;
	wdata_29 : IN std_logic;
	wdata_30 : IN std_logic;
	wdata_31 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	slavehwdata_0 : OUT std_logic;
	slavehwdata_1 : OUT std_logic;
	slavehwdata_2 : OUT std_logic;
	slavehwdata_3 : OUT std_logic;
	slavehwdata_4 : OUT std_logic;
	slavehwdata_5 : OUT std_logic;
	slavehwdata_6 : OUT std_logic;
	slavehwdata_7 : OUT std_logic;
	slavehwdata_8 : OUT std_logic;
	slavehwdata_9 : OUT std_logic;
	slavehwdata_10 : OUT std_logic;
	slavehwdata_11 : OUT std_logic;
	slavehwdata_12 : OUT std_logic;
	slavehwdata_13 : OUT std_logic;
	slavehwdata_14 : OUT std_logic;
	slavehwdata_15 : OUT std_logic;
	slavehwdata_16 : OUT std_logic;
	slavehwdata_17 : OUT std_logic;
	slavehwdata_18 : OUT std_logic;
	slavehwdata_19 : OUT std_logic;
	slavehwdata_20 : OUT std_logic;
	slavehwdata_21 : OUT std_logic;
	slavehwdata_22 : OUT std_logic;
	slavehwdata_23 : OUT std_logic;
	slavehwdata_24 : OUT std_logic;
	slavehwdata_25 : OUT std_logic;
	slavehwdata_26 : OUT std_logic;
	slavehwdata_27 : OUT std_logic;
	slavehwdata_28 : OUT std_logic;
	slavehwdata_29 : OUT std_logic;
	slavehwdata_30 : OUT std_logic;
	slavehwdata_31 : OUT std_logic
	);
END ahb_master;

ARCHITECTURE structure OF ahb_master IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_wdata_0 : std_logic;
SIGNAL ww_wdata_1 : std_logic;
SIGNAL ww_wdata_2 : std_logic;
SIGNAL ww_wdata_3 : std_logic;
SIGNAL ww_wdata_4 : std_logic;
SIGNAL ww_wdata_5 : std_logic;
SIGNAL ww_wdata_6 : std_logic;
SIGNAL ww_wdata_7 : std_logic;
SIGNAL ww_wdata_8 : std_logic;
SIGNAL ww_wdata_9 : std_logic;
SIGNAL ww_wdata_10 : std_logic;
SIGNAL ww_wdata_11 : std_logic;
SIGNAL ww_wdata_12 : std_logic;
SIGNAL ww_wdata_13 : std_logic;
SIGNAL ww_wdata_14 : std_logic;
SIGNAL ww_wdata_15 : std_logic;
SIGNAL ww_wdata_16 : std_logic;
SIGNAL ww_wdata_17 : std_logic;
SIGNAL ww_wdata_18 : std_logic;
SIGNAL ww_wdata_19 : std_logic;
SIGNAL ww_wdata_20 : std_logic;
SIGNAL ww_wdata_21 : std_logic;
SIGNAL ww_wdata_22 : std_logic;
SIGNAL ww_wdata_23 : std_logic;
SIGNAL ww_wdata_24 : std_logic;
SIGNAL ww_wdata_25 : std_logic;
SIGNAL ww_wdata_26 : std_logic;
SIGNAL ww_wdata_27 : std_logic;
SIGNAL ww_wdata_28 : std_logic;
SIGNAL ww_wdata_29 : std_logic;
SIGNAL ww_wdata_30 : std_logic;
SIGNAL ww_wdata_31 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_slavehwdata_0 : std_logic;
SIGNAL ww_slavehwdata_1 : std_logic;
SIGNAL ww_slavehwdata_2 : std_logic;
SIGNAL ww_slavehwdata_3 : std_logic;
SIGNAL ww_slavehwdata_4 : std_logic;
SIGNAL ww_slavehwdata_5 : std_logic;
SIGNAL ww_slavehwdata_6 : std_logic;
SIGNAL ww_slavehwdata_7 : std_logic;
SIGNAL ww_slavehwdata_8 : std_logic;
SIGNAL ww_slavehwdata_9 : std_logic;
SIGNAL ww_slavehwdata_10 : std_logic;
SIGNAL ww_slavehwdata_11 : std_logic;
SIGNAL ww_slavehwdata_12 : std_logic;
SIGNAL ww_slavehwdata_13 : std_logic;
SIGNAL ww_slavehwdata_14 : std_logic;
SIGNAL ww_slavehwdata_15 : std_logic;
SIGNAL ww_slavehwdata_16 : std_logic;
SIGNAL ww_slavehwdata_17 : std_logic;
SIGNAL ww_slavehwdata_18 : std_logic;
SIGNAL ww_slavehwdata_19 : std_logic;
SIGNAL ww_slavehwdata_20 : std_logic;
SIGNAL ww_slavehwdata_21 : std_logic;
SIGNAL ww_slavehwdata_22 : std_logic;
SIGNAL ww_slavehwdata_23 : std_logic;
SIGNAL ww_slavehwdata_24 : std_logic;
SIGNAL ww_slavehwdata_25 : std_logic;
SIGNAL ww_slavehwdata_26 : std_logic;
SIGNAL ww_slavehwdata_27 : std_logic;
SIGNAL ww_slavehwdata_28 : std_logic;
SIGNAL ww_slavehwdata_29 : std_logic;
SIGNAL ww_slavehwdata_30 : std_logic;
SIGNAL ww_slavehwdata_31 : std_logic;

BEGIN

ww_CLK <= CLK;
ww_RST <= RST;
ww_wdata_0 <= wdata_0;
ww_wdata_1 <= wdata_1;
ww_wdata_2 <= wdata_2;
ww_wdata_3 <= wdata_3;
ww_wdata_4 <= wdata_4;
ww_wdata_5 <= wdata_5;
ww_wdata_6 <= wdata_6;
ww_wdata_7 <= wdata_7;
ww_wdata_8 <= wdata_8;
ww_wdata_9 <= wdata_9;
ww_wdata_10 <= wdata_10;
ww_wdata_11 <= wdata_11;
ww_wdata_12 <= wdata_12;
ww_wdata_13 <= wdata_13;
ww_wdata_14 <= wdata_14;
ww_wdata_15 <= wdata_15;
ww_wdata_16 <= wdata_16;
ww_wdata_17 <= wdata_17;
ww_wdata_18 <= wdata_18;
ww_wdata_19 <= wdata_19;
ww_wdata_20 <= wdata_20;
ww_wdata_21 <= wdata_21;
ww_wdata_22 <= wdata_22;
ww_wdata_23 <= wdata_23;
ww_wdata_24 <= wdata_24;
ww_wdata_25 <= wdata_25;
ww_wdata_26 <= wdata_26;
ww_wdata_27 <= wdata_27;
ww_wdata_28 <= wdata_28;
ww_wdata_29 <= wdata_29;
ww_wdata_30 <= wdata_30;
ww_wdata_31 <= wdata_31;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
slavehwdata_0 <= ww_slavehwdata_0;
slavehwdata_1 <= ww_slavehwdata_1;
slavehwdata_2 <= ww_slavehwdata_2;
slavehwdata_3 <= ww_slavehwdata_3;
slavehwdata_4 <= ww_slavehwdata_4;
slavehwdata_5 <= ww_slavehwdata_5;
slavehwdata_6 <= ww_slavehwdata_6;
slavehwdata_7 <= ww_slavehwdata_7;
slavehwdata_8 <= ww_slavehwdata_8;
slavehwdata_9 <= ww_slavehwdata_9;
slavehwdata_10 <= ww_slavehwdata_10;
slavehwdata_11 <= ww_slavehwdata_11;
slavehwdata_12 <= ww_slavehwdata_12;
slavehwdata_13 <= ww_slavehwdata_13;
slavehwdata_14 <= ww_slavehwdata_14;
slavehwdata_15 <= ww_slavehwdata_15;
slavehwdata_16 <= ww_slavehwdata_16;
slavehwdata_17 <= ww_slavehwdata_17;
slavehwdata_18 <= ww_slavehwdata_18;
slavehwdata_19 <= ww_slavehwdata_19;
slavehwdata_20 <= ww_slavehwdata_20;
slavehwdata_21 <= ww_slavehwdata_21;
slavehwdata_22 <= ww_slavehwdata_22;
slavehwdata_23 <= ww_slavehwdata_23;
slavehwdata_24 <= ww_slavehwdata_24;
slavehwdata_25 <= ww_slavehwdata_25;
slavehwdata_26 <= ww_slavehwdata_26;
slavehwdata_27 <= ww_slavehwdata_27;
slavehwdata_28 <= ww_slavehwdata_28;
slavehwdata_29 <= ww_slavehwdata_29;
slavehwdata_30 <= ww_slavehwdata_30;
slavehwdata_31 <= ww_slavehwdata_31;

\slavehwdata[0]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- slavehwdata_0 = DFFE(wdata_0, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_wdata_0,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_slavehwdata_0);

\slavehwdata[1]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- slavehwdata_1 = DFFE(wdata_1, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_wdata_1,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_slavehwdata_1);

\slavehwdata[2]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- slavehwdata_2 = DFFE(wdata_2, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_wdata_2,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_slavehwdata_2);

\slavehwdata[3]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- slavehwdata_3 = DFFE(wdata_3, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_wdata_3,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_slavehwdata_3);

\slavehwdata[4]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- slavehwdata_4 = DFFE(wdata_4, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_wdata_4,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_slavehwdata_4);

\slavehwdata[5]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- slavehwdata_5 = DFFE(wdata_5, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_wdata_5,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_slavehwdata_5);

\slavehwdata[6]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- slavehwdata_6 = DFFE(wdata_6, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_wdata_6,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_slavehwdata_6);

\slavehwdata[7]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- slavehwdata_7 = DFFE(wdata_7, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_wdata_7,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_slavehwdata_7);

\slavehwdata[8]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- slavehwdata_8 = DFFE(wdata_8, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_wdata_8,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_slavehwdata_8);

\slavehwdata[9]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- slavehwdata_9 = DFFE(wdata_9, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_wdata_9,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_slavehwdata_9);

\slavehwdata[10]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- slavehwdata_10 = DFFE(wdata_10, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_wdata_10,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_slavehwdata_10);

\slavehwdata[11]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- slavehwdata_11 = DFFE(wdata_11, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_wdata_11,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_slavehwdata_11);

\slavehwdata[12]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- slavehwdata_12 = DFFE(wdata_12, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_wdata_12,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_slavehwdata_12);

\slavehwdata[13]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- slavehwdata_13 = DFFE(wdata_13, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_wdata_13,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_slavehwdata_13);

\slavehwdata[14]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- slavehwdata_14 = DFFE(wdata_14, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_wdata_14,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_slavehwdata_14);

\slavehwdata[15]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- slavehwdata_15 = DFFE(wdata_15, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_wdata_15,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_slavehwdata_15);

\slavehwdata[16]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- slavehwdata_16 = DFFE(wdata_16, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_wdata_16,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_slavehwdata_16);

\slavehwdata[17]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- slavehwdata_17 = DFFE(wdata_17, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_wdata_17,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_slavehwdata_17);

\slavehwdata[18]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- slavehwdata_18 = DFFE(wdata_18, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_wdata_18,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_slavehwdata_18);

\slavehwdata[19]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- slavehwdata_19 = DFFE(wdata_19, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_wdata_19,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_slavehwdata_19);

\slavehwdata[20]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- slavehwdata_20 = DFFE(wdata_20, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_wdata_20,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_slavehwdata_20);

\slavehwdata[21]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- slavehwdata_21 = DFFE(wdata_21, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_wdata_21,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_slavehwdata_21);

\slavehwdata[22]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- slavehwdata_22 = DFFE(wdata_22, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_wdata_22,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_slavehwdata_22);

\slavehwdata[23]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- slavehwdata_23 = DFFE(wdata_23, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_wdata_23,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_slavehwdata_23);

\slavehwdata[24]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- slavehwdata_24 = DFFE(wdata_24, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_wdata_24,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_slavehwdata_24);

\slavehwdata[25]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- slavehwdata_25 = DFFE(wdata_25, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_wdata_25,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_slavehwdata_25);

\slavehwdata[26]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- slavehwdata_26 = DFFE(wdata_26, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_wdata_26,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_slavehwdata_26);

\slavehwdata[27]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- slavehwdata_27 = DFFE(wdata_27, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_wdata_27,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_slavehwdata_27);

\slavehwdata[28]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- slavehwdata_28 = DFFE(wdata_28, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_wdata_28,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_slavehwdata_28);

\slavehwdata[29]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- slavehwdata_29 = DFFE(wdata_29, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_wdata_29,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_slavehwdata_29);

\slavehwdata[30]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- slavehwdata_30 = DFFE(wdata_30, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_wdata_30,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_slavehwdata_30);

\slavehwdata[31]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- slavehwdata_31 = DFFE(wdata_31, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_wdata_31,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_slavehwdata_31);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	altrom IS
    PORT (
	address : IN std_logic_vector(6 DOWNTO 0);
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q : OUT std_logic_vector(15 DOWNTO 0)
	);
END altrom;

ARCHITECTURE structure OF altrom IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_address : std_logic_vector(6 DOWNTO 0);
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_q : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][0]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][0]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][1]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][1]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][2]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][2]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][3]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][3]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][4]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][4]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][5]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][5]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][6]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][6]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][7]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][7]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][8]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][8]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][9]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][9]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][10]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][10]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][11]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][11]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][12]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][12]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][13]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][13]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][14]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][14]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][15]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][15]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \segment[0][0]_modesel\ : std_logic_vector(17 DOWNTO 0) := "100000000000000000";
SIGNAL \segment[0][1]_modesel\ : std_logic_vector(17 DOWNTO 0) := "100000000000000000";
SIGNAL \segment[0][2]_modesel\ : std_logic_vector(17 DOWNTO 0) := "100000000000000000";
SIGNAL \segment[0][3]_modesel\ : std_logic_vector(17 DOWNTO 0) := "100000000000000000";
SIGNAL \segment[0][4]_modesel\ : std_logic_vector(17 DOWNTO 0) := "100000000000000000";
SIGNAL \segment[0][5]_modesel\ : std_logic_vector(17 DOWNTO 0) := "100000000000000000";
SIGNAL \segment[0][6]_modesel\ : std_logic_vector(17 DOWNTO 0) := "100000000000000000";
SIGNAL \segment[0][7]_modesel\ : std_logic_vector(17 DOWNTO 0) := "100000000000000000";
SIGNAL \segment[0][8]_modesel\ : std_logic_vector(17 DOWNTO 0) := "100000000000000000";
SIGNAL \segment[0][9]_modesel\ : std_logic_vector(17 DOWNTO 0) := "100000000000000000";
SIGNAL \segment[0][10]_modesel\ : std_logic_vector(17 DOWNTO 0) := "100000000000000000";
SIGNAL \segment[0][11]_modesel\ : std_logic_vector(17 DOWNTO 0) := "100000000000000000";
SIGNAL \segment[0][12]_modesel\ : std_logic_vector(17 DOWNTO 0) := "100000000000000000";
SIGNAL \segment[0][13]_modesel\ : std_logic_vector(17 DOWNTO 0) := "100000000000000000";
SIGNAL \segment[0][14]_modesel\ : std_logic_vector(17 DOWNTO 0) := "100000000000000000";
SIGNAL \segment[0][15]_modesel\ : std_logic_vector(17 DOWNTO 0) := "100000000000000000";

BEGIN

ww_address <= address;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
q <= ww_q;

\ww_segment[0][0]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd);

\ww_segment[0][0]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_address(6) & ww_address(5) & ww_address(4) & ww_address(3) & ww_address(2) & ww_address(1) & ww_address(0));

\ww_segment[0][1]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd);

\ww_segment[0][1]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_address(6) & ww_address(5) & ww_address(4) & ww_address(3) & ww_address(2) & ww_address(1) & ww_address(0));

\ww_segment[0][2]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd);

\ww_segment[0][2]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_address(6) & ww_address(5) & ww_address(4) & ww_address(3) & ww_address(2) & ww_address(1) & ww_address(0));

\ww_segment[0][3]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd);

\ww_segment[0][3]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_address(6) & ww_address(5) & ww_address(4) & ww_address(3) & ww_address(2) & ww_address(1) & ww_address(0));

\ww_segment[0][4]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd);

\ww_segment[0][4]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_address(6) & ww_address(5) & ww_address(4) & ww_address(3) & ww_address(2) & ww_address(1) & ww_address(0));

\ww_segment[0][5]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd);

\ww_segment[0][5]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_address(6) & ww_address(5) & ww_address(4) & ww_address(3) & ww_address(2) & ww_address(1) & ww_address(0));

\ww_segment[0][6]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd);

\ww_segment[0][6]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_address(6) & ww_address(5) & ww_address(4) & ww_address(3) & ww_address(2) & ww_address(1) & ww_address(0));

\ww_segment[0][7]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd);

\ww_segment[0][7]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_address(6) & ww_address(5) & ww_address(4) & ww_address(3) & ww_address(2) & ww_address(1) & ww_address(0));

\ww_segment[0][8]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd);

\ww_segment[0][8]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_address(6) & ww_address(5) & ww_address(4) & ww_address(3) & ww_address(2) & ww_address(1) & ww_address(0));

\ww_segment[0][9]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd);

\ww_segment[0][9]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_address(6) & ww_address(5) & ww_address(4) & ww_address(3) & ww_address(2) & ww_address(1) & ww_address(0));

\ww_segment[0][10]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd);

\ww_segment[0][10]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_address(6) & ww_address(5) & ww_address(4) & ww_address(3) & ww_address(2) & ww_address(1) & ww_address(0));

\ww_segment[0][11]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd);

\ww_segment[0][11]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_address(6) & ww_address(5) & ww_address(4) & ww_address(3) & ww_address(2) & ww_address(1) & ww_address(0));

\ww_segment[0][12]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd);

\ww_segment[0][12]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_address(6) & ww_address(5) & ww_address(4) & ww_address(3) & ww_address(2) & ww_address(1) & ww_address(0));

\ww_segment[0][13]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd);

\ww_segment[0][13]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_address(6) & ww_address(5) & ww_address(4) & ww_address(3) & ww_address(2) & ww_address(1) & ww_address(0));

\ww_segment[0][14]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd);

\ww_segment[0][14]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_address(6) & ww_address(5) & ww_address(4) & ww_address(3) & ww_address(2) & ww_address(1) & ww_address(0));

\ww_segment[0][15]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd);

\ww_segment[0][15]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_address(6) & ww_address(5) & ww_address(4) & ww_address(3) & ww_address(2) & ww_address(1) & ww_address(0));

\segment[0][0]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	mem1 => "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100111101001",
	operation_mode => "rom",
	logical_ram_name => "slaveregister:slaveregister_inst|version_rom:inst_version_rom|lpm_rom:lpm_rom_component|altrom:srom|content",
	init_file => "version_rom.mif",
	logical_ram_depth => 128,
	logical_ram_width => 16,
	address_width => 7,
	first_address => 0,
	last_address => 127,
	bit_number => 0,
	data_in_clock => "none",
	data_in_clear => "none",
	write_logic_clock => "none",
	write_logic_clear => "none",
	read_enable_clock => "none",
	read_enable_clear => "none",
	read_address_clock => "none",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	waddr => \ww_segment[0][0]_waddr\,
	raddr => \ww_segment[0][0]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][0]_modesel\,
	dataout => ww_q(0));

\segment[0][1]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	mem1 => "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000100010",
	operation_mode => "rom",
	logical_ram_name => "slaveregister:slaveregister_inst|version_rom:inst_version_rom|lpm_rom:lpm_rom_component|altrom:srom|content",
	init_file => "version_rom.mif",
	logical_ram_depth => 128,
	logical_ram_width => 16,
	address_width => 7,
	first_address => 0,
	last_address => 127,
	bit_number => 1,
	data_in_clock => "none",
	data_in_clear => "none",
	write_logic_clock => "none",
	write_logic_clear => "none",
	read_enable_clock => "none",
	read_enable_clear => "none",
	read_address_clock => "none",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	waddr => \ww_segment[0][1]_waddr\,
	raddr => \ww_segment[0][1]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][1]_modesel\,
	dataout => ww_q(1));

\segment[0][2]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	mem1 => "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
	operation_mode => "rom",
	logical_ram_name => "slaveregister:slaveregister_inst|version_rom:inst_version_rom|lpm_rom:lpm_rom_component|altrom:srom|content",
	init_file => "version_rom.mif",
	logical_ram_depth => 128,
	logical_ram_width => 16,
	address_width => 7,
	first_address => 0,
	last_address => 127,
	bit_number => 2,
	data_in_clock => "none",
	data_in_clear => "none",
	write_logic_clock => "none",
	write_logic_clear => "none",
	read_enable_clock => "none",
	read_enable_clear => "none",
	read_address_clock => "none",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	waddr => \ww_segment[0][2]_waddr\,
	raddr => \ww_segment[0][2]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][2]_modesel\,
	dataout => ww_q(2));

\segment[0][3]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	mem1 => "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010",
	operation_mode => "rom",
	logical_ram_name => "slaveregister:slaveregister_inst|version_rom:inst_version_rom|lpm_rom:lpm_rom_component|altrom:srom|content",
	init_file => "version_rom.mif",
	logical_ram_depth => 128,
	logical_ram_width => 16,
	address_width => 7,
	first_address => 0,
	last_address => 127,
	bit_number => 3,
	data_in_clock => "none",
	data_in_clear => "none",
	write_logic_clock => "none",
	write_logic_clear => "none",
	read_enable_clock => "none",
	read_enable_clear => "none",
	read_address_clock => "none",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	waddr => \ww_segment[0][3]_waddr\,
	raddr => \ww_segment[0][3]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][3]_modesel\,
	dataout => ww_q(3));

\segment[0][4]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	mem1 => "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010",
	operation_mode => "rom",
	logical_ram_name => "slaveregister:slaveregister_inst|version_rom:inst_version_rom|lpm_rom:lpm_rom_component|altrom:srom|content",
	init_file => "version_rom.mif",
	logical_ram_depth => 128,
	logical_ram_width => 16,
	address_width => 7,
	first_address => 0,
	last_address => 127,
	bit_number => 4,
	data_in_clock => "none",
	data_in_clear => "none",
	write_logic_clock => "none",
	write_logic_clear => "none",
	read_enable_clock => "none",
	read_enable_clear => "none",
	read_address_clock => "none",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	waddr => \ww_segment[0][4]_waddr\,
	raddr => \ww_segment[0][4]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][4]_modesel\,
	dataout => ww_q(4));

\segment[0][5]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	mem1 => "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
	operation_mode => "rom",
	logical_ram_name => "slaveregister:slaveregister_inst|version_rom:inst_version_rom|lpm_rom:lpm_rom_component|altrom:srom|content",
	init_file => "version_rom.mif",
	logical_ram_depth => 128,
	logical_ram_width => 16,
	address_width => 7,
	first_address => 0,
	last_address => 127,
	bit_number => 5,
	data_in_clock => "none",
	data_in_clear => "none",
	write_logic_clock => "none",
	write_logic_clear => "none",
	read_enable_clock => "none",
	read_enable_clear => "none",
	read_address_clock => "none",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	waddr => \ww_segment[0][5]_waddr\,
	raddr => \ww_segment[0][5]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][5]_modesel\,
	dataout => ww_q(5));

\segment[0][6]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	mem1 => "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010",
	operation_mode => "rom",
	logical_ram_name => "slaveregister:slaveregister_inst|version_rom:inst_version_rom|lpm_rom:lpm_rom_component|altrom:srom|content",
	init_file => "version_rom.mif",
	logical_ram_depth => 128,
	logical_ram_width => 16,
	address_width => 7,
	first_address => 0,
	last_address => 127,
	bit_number => 6,
	data_in_clock => "none",
	data_in_clear => "none",
	write_logic_clock => "none",
	write_logic_clear => "none",
	read_enable_clock => "none",
	read_enable_clear => "none",
	read_address_clock => "none",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	waddr => \ww_segment[0][6]_waddr\,
	raddr => \ww_segment[0][6]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][6]_modesel\,
	dataout => ww_q(6));

\segment[0][7]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	mem1 => "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
	operation_mode => "rom",
	logical_ram_name => "slaveregister:slaveregister_inst|version_rom:inst_version_rom|lpm_rom:lpm_rom_component|altrom:srom|content",
	init_file => "version_rom.mif",
	logical_ram_depth => 128,
	logical_ram_width => 16,
	address_width => 7,
	first_address => 0,
	last_address => 127,
	bit_number => 7,
	data_in_clock => "none",
	data_in_clear => "none",
	write_logic_clock => "none",
	write_logic_clear => "none",
	read_enable_clock => "none",
	read_enable_clear => "none",
	read_address_clock => "none",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	waddr => \ww_segment[0][7]_waddr\,
	raddr => \ww_segment[0][7]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][7]_modesel\,
	dataout => ww_q(7));

\segment[0][8]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	mem1 => "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
	operation_mode => "rom",
	logical_ram_name => "slaveregister:slaveregister_inst|version_rom:inst_version_rom|lpm_rom:lpm_rom_component|altrom:srom|content",
	init_file => "version_rom.mif",
	logical_ram_depth => 128,
	logical_ram_width => 16,
	address_width => 7,
	first_address => 0,
	last_address => 127,
	bit_number => 8,
	data_in_clock => "none",
	data_in_clear => "none",
	write_logic_clock => "none",
	write_logic_clear => "none",
	read_enable_clock => "none",
	read_enable_clear => "none",
	read_address_clock => "none",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	waddr => \ww_segment[0][8]_waddr\,
	raddr => \ww_segment[0][8]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][8]_modesel\,
	dataout => ww_q(8));

\segment[0][9]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	mem1 => "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
	operation_mode => "rom",
	logical_ram_name => "slaveregister:slaveregister_inst|version_rom:inst_version_rom|lpm_rom:lpm_rom_component|altrom:srom|content",
	init_file => "version_rom.mif",
	logical_ram_depth => 128,
	logical_ram_width => 16,
	address_width => 7,
	first_address => 0,
	last_address => 127,
	bit_number => 9,
	data_in_clock => "none",
	data_in_clear => "none",
	write_logic_clock => "none",
	write_logic_clear => "none",
	read_enable_clock => "none",
	read_enable_clear => "none",
	read_address_clock => "none",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	waddr => \ww_segment[0][9]_waddr\,
	raddr => \ww_segment[0][9]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][9]_modesel\,
	dataout => ww_q(9));

\segment[0][10]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	mem1 => "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
	operation_mode => "rom",
	logical_ram_name => "slaveregister:slaveregister_inst|version_rom:inst_version_rom|lpm_rom:lpm_rom_component|altrom:srom|content",
	init_file => "version_rom.mif",
	logical_ram_depth => 128,
	logical_ram_width => 16,
	address_width => 7,
	first_address => 0,
	last_address => 127,
	bit_number => 10,
	data_in_clock => "none",
	data_in_clear => "none",
	write_logic_clock => "none",
	write_logic_clear => "none",
	read_enable_clock => "none",
	read_enable_clear => "none",
	read_address_clock => "none",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	waddr => \ww_segment[0][10]_waddr\,
	raddr => \ww_segment[0][10]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][10]_modesel\,
	dataout => ww_q(10));

\segment[0][11]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	mem1 => "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
	operation_mode => "rom",
	logical_ram_name => "slaveregister:slaveregister_inst|version_rom:inst_version_rom|lpm_rom:lpm_rom_component|altrom:srom|content",
	init_file => "version_rom.mif",
	logical_ram_depth => 128,
	logical_ram_width => 16,
	address_width => 7,
	first_address => 0,
	last_address => 127,
	bit_number => 11,
	data_in_clock => "none",
	data_in_clear => "none",
	write_logic_clock => "none",
	write_logic_clear => "none",
	read_enable_clock => "none",
	read_enable_clear => "none",
	read_address_clock => "none",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	waddr => \ww_segment[0][11]_waddr\,
	raddr => \ww_segment[0][11]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][11]_modesel\,
	dataout => ww_q(11));

\segment[0][12]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	mem1 => "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
	operation_mode => "rom",
	logical_ram_name => "slaveregister:slaveregister_inst|version_rom:inst_version_rom|lpm_rom:lpm_rom_component|altrom:srom|content",
	init_file => "version_rom.mif",
	logical_ram_depth => 128,
	logical_ram_width => 16,
	address_width => 7,
	first_address => 0,
	last_address => 127,
	bit_number => 12,
	data_in_clock => "none",
	data_in_clear => "none",
	write_logic_clock => "none",
	write_logic_clear => "none",
	read_enable_clock => "none",
	read_enable_clear => "none",
	read_address_clock => "none",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	waddr => \ww_segment[0][12]_waddr\,
	raddr => \ww_segment[0][12]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][12]_modesel\,
	dataout => ww_q(12));

\segment[0][13]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	mem1 => "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
	operation_mode => "rom",
	logical_ram_name => "slaveregister:slaveregister_inst|version_rom:inst_version_rom|lpm_rom:lpm_rom_component|altrom:srom|content",
	init_file => "version_rom.mif",
	logical_ram_depth => 128,
	logical_ram_width => 16,
	address_width => 7,
	first_address => 0,
	last_address => 127,
	bit_number => 13,
	data_in_clock => "none",
	data_in_clear => "none",
	write_logic_clock => "none",
	write_logic_clear => "none",
	read_enable_clock => "none",
	read_enable_clear => "none",
	read_address_clock => "none",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	waddr => \ww_segment[0][13]_waddr\,
	raddr => \ww_segment[0][13]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][13]_modesel\,
	dataout => ww_q(13));

\segment[0][14]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	mem1 => "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
	operation_mode => "rom",
	logical_ram_name => "slaveregister:slaveregister_inst|version_rom:inst_version_rom|lpm_rom:lpm_rom_component|altrom:srom|content",
	init_file => "version_rom.mif",
	logical_ram_depth => 128,
	logical_ram_width => 16,
	address_width => 7,
	first_address => 0,
	last_address => 127,
	bit_number => 14,
	data_in_clock => "none",
	data_in_clear => "none",
	write_logic_clock => "none",
	write_logic_clear => "none",
	read_enable_clock => "none",
	read_enable_clear => "none",
	read_address_clock => "none",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	waddr => \ww_segment[0][14]_waddr\,
	raddr => \ww_segment[0][14]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][14]_modesel\,
	dataout => ww_q(14));

\segment[0][15]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	mem1 => "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
	operation_mode => "rom",
	logical_ram_name => "slaveregister:slaveregister_inst|version_rom:inst_version_rom|lpm_rom:lpm_rom_component|altrom:srom|content",
	init_file => "version_rom.mif",
	logical_ram_depth => 128,
	logical_ram_width => 16,
	address_width => 7,
	first_address => 0,
	last_address => 127,
	bit_number => 15,
	data_in_clock => "none",
	data_in_clear => "none",
	write_logic_clock => "none",
	write_logic_clear => "none",
	read_enable_clock => "none",
	read_enable_clear => "none",
	read_address_clock => "none",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	waddr => \ww_segment[0][15]_waddr\,
	raddr => \ww_segment[0][15]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][15]_modesel\,
	dataout => ww_q(15));
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_rom IS
    PORT (
	address : IN std_logic_vector(6 DOWNTO 0);
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q_0 : OUT std_logic;
	q_1 : OUT std_logic;
	q_2 : OUT std_logic;
	q_3 : OUT std_logic;
	q_4 : OUT std_logic;
	q_5 : OUT std_logic;
	q_6 : OUT std_logic;
	q_7 : OUT std_logic;
	q_8 : OUT std_logic;
	q_9 : OUT std_logic;
	q_10 : OUT std_logic;
	q_11 : OUT std_logic;
	q_12 : OUT std_logic;
	q_13 : OUT std_logic;
	q_14 : OUT std_logic;
	q_15 : OUT std_logic
	);
END lpm_rom;

ARCHITECTURE structure OF lpm_rom IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_address : std_logic_vector(6 DOWNTO 0);
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_q_0 : std_logic;
SIGNAL ww_q_1 : std_logic;
SIGNAL ww_q_2 : std_logic;
SIGNAL ww_q_3 : std_logic;
SIGNAL ww_q_4 : std_logic;
SIGNAL ww_q_5 : std_logic;
SIGNAL ww_q_6 : std_logic;
SIGNAL ww_q_7 : std_logic;
SIGNAL ww_q_8 : std_logic;
SIGNAL ww_q_9 : std_logic;
SIGNAL ww_q_10 : std_logic;
SIGNAL ww_q_11 : std_logic;
SIGNAL ww_q_12 : std_logic;
SIGNAL ww_q_13 : std_logic;
SIGNAL ww_q_14 : std_logic;
SIGNAL ww_q_15 : std_logic;
SIGNAL ww_srom_address : std_logic_vector(6 DOWNTO 0);
SIGNAL ww_srom_q : std_logic_vector(15 DOWNTO 0);

COMPONENT altrom
    PORT (
	address : IN std_logic_vector(6 DOWNTO 0);
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q : OUT std_logic_vector(15 DOWNTO 0));
END COMPONENT;

BEGIN

ww_address <= address;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
q_0 <= ww_q_0;
q_1 <= ww_q_1;
q_2 <= ww_q_2;
q_3 <= ww_q_3;
q_4 <= ww_q_4;
q_5 <= ww_q_5;
q_6 <= ww_q_6;
q_7 <= ww_q_7;
q_8 <= ww_q_8;
q_9 <= ww_q_9;
q_10 <= ww_q_10;
q_11 <= ww_q_11;
q_12 <= ww_q_12;
q_13 <= ww_q_13;
q_14 <= ww_q_14;
q_15 <= ww_q_15;

ww_srom_address <= (ww_address(6) & ww_address(5) & ww_address(4) & ww_address(3) & ww_address(2) & ww_address(1) & ww_address(0));

ww_q_0 <= ww_srom_q(0);
ww_q_1 <= ww_srom_q(1);
ww_q_2 <= ww_srom_q(2);
ww_q_3 <= ww_srom_q(3);
ww_q_4 <= ww_srom_q(4);
ww_q_5 <= ww_srom_q(5);
ww_q_6 <= ww_srom_q(6);
ww_q_7 <= ww_srom_q(7);
ww_q_8 <= ww_srom_q(8);
ww_q_9 <= ww_srom_q(9);
ww_q_10 <= ww_srom_q(10);
ww_q_11 <= ww_srom_q(11);
ww_q_12 <= ww_srom_q(12);
ww_q_13 <= ww_srom_q(13);
ww_q_14 <= ww_srom_q(14);
ww_q_15 <= ww_srom_q(15);
srom : altrom
PORT MAP (
	address => ww_srom_address,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	q => ww_srom_q);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	version_rom IS
    PORT (
	reg_address_3 : IN std_logic;
	reg_address_4 : IN std_logic;
	reg_address_5 : IN std_logic;
	reg_address_6 : IN std_logic;
	reg_address_2 : IN std_logic;
	reg_address_7 : IN std_logic;
	reg_address_8 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q_0 : OUT std_logic;
	q_1 : OUT std_logic;
	q_2 : OUT std_logic;
	q_3 : OUT std_logic;
	q_4 : OUT std_logic;
	q_5 : OUT std_logic;
	q_6 : OUT std_logic;
	q_7 : OUT std_logic;
	q_8 : OUT std_logic;
	q_9 : OUT std_logic;
	q_10 : OUT std_logic;
	q_11 : OUT std_logic;
	q_12 : OUT std_logic;
	q_13 : OUT std_logic;
	q_14 : OUT std_logic;
	q_15 : OUT std_logic
	);
END version_rom;

ARCHITECTURE structure OF version_rom IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_reg_address_3 : std_logic;
SIGNAL ww_reg_address_4 : std_logic;
SIGNAL ww_reg_address_5 : std_logic;
SIGNAL ww_reg_address_6 : std_logic;
SIGNAL ww_reg_address_2 : std_logic;
SIGNAL ww_reg_address_7 : std_logic;
SIGNAL ww_reg_address_8 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_q_0 : std_logic;
SIGNAL ww_q_1 : std_logic;
SIGNAL ww_q_2 : std_logic;
SIGNAL ww_q_3 : std_logic;
SIGNAL ww_q_4 : std_logic;
SIGNAL ww_q_5 : std_logic;
SIGNAL ww_q_6 : std_logic;
SIGNAL ww_q_7 : std_logic;
SIGNAL ww_q_8 : std_logic;
SIGNAL ww_q_9 : std_logic;
SIGNAL ww_q_10 : std_logic;
SIGNAL ww_q_11 : std_logic;
SIGNAL ww_q_12 : std_logic;
SIGNAL ww_q_13 : std_logic;
SIGNAL ww_q_14 : std_logic;
SIGNAL ww_q_15 : std_logic;
SIGNAL ww_lpm_rom_component_address : std_logic_vector(6 DOWNTO 0);

COMPONENT lpm_rom
    PORT (
	address : IN std_logic_vector(6 DOWNTO 0);
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q_0 : OUT std_logic;
	q_1 : OUT std_logic;
	q_2 : OUT std_logic;
	q_3 : OUT std_logic;
	q_4 : OUT std_logic;
	q_5 : OUT std_logic;
	q_6 : OUT std_logic;
	q_7 : OUT std_logic;
	q_8 : OUT std_logic;
	q_9 : OUT std_logic;
	q_10 : OUT std_logic;
	q_11 : OUT std_logic;
	q_12 : OUT std_logic;
	q_13 : OUT std_logic;
	q_14 : OUT std_logic;
	q_15 : OUT std_logic);
END COMPONENT;

BEGIN

ww_reg_address_3 <= reg_address_3;
ww_reg_address_4 <= reg_address_4;
ww_reg_address_5 <= reg_address_5;
ww_reg_address_6 <= reg_address_6;
ww_reg_address_2 <= reg_address_2;
ww_reg_address_7 <= reg_address_7;
ww_reg_address_8 <= reg_address_8;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
q_0 <= ww_q_0;
q_1 <= ww_q_1;
q_2 <= ww_q_2;
q_3 <= ww_q_3;
q_4 <= ww_q_4;
q_5 <= ww_q_5;
q_6 <= ww_q_6;
q_7 <= ww_q_7;
q_8 <= ww_q_8;
q_9 <= ww_q_9;
q_10 <= ww_q_10;
q_11 <= ww_q_11;
q_12 <= ww_q_12;
q_13 <= ww_q_13;
q_14 <= ww_q_14;
q_15 <= ww_q_15;

ww_lpm_rom_component_address <= (ww_reg_address_8 & ww_reg_address_7 & ww_reg_address_6 & ww_reg_address_5 & ww_reg_address_4 & ww_reg_address_3 & ww_reg_address_2);
lpm_rom_component : lpm_rom
PORT MAP (
	address => ww_lpm_rom_component_address,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	q_0 => ww_q_0,
	q_1 => ww_q_1,
	q_2 => ww_q_2,
	q_3 => ww_q_3,
	q_4 => ww_q_4,
	q_5 => ww_q_5,
	q_6 => ww_q_6,
	q_7 => ww_q_7,
	q_8 => ww_q_8,
	q_9 => ww_q_9,
	q_10 => ww_q_10,
	q_11 => ww_q_11,
	q_12 => ww_q_12,
	q_13 => ww_q_13,
	q_14 => ww_q_14,
	q_15 => ww_q_15);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	slaveregister IS
    PORT (
	sload_path_15 : IN std_logic;
	sload_path_14 : IN std_logic;
	sload_path_13 : IN std_logic;
	sload_path_12 : IN std_logic;
	sload_path_11 : IN std_logic;
	sload_path_10 : IN std_logic;
	sload_path_9 : IN std_logic;
	sload_path_8 : IN std_logic;
	sload_path_7 : IN std_logic;
	sload_path_6 : IN std_logic;
	sload_path_5 : IN std_logic;
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	q_15 : IN std_logic;
	q_14 : IN std_logic;
	q_13 : IN std_logic;
	q_12 : IN std_logic;
	q_11 : IN std_logic;
	q_10 : IN std_logic;
	q_9 : IN std_logic;
	q_8 : IN std_logic;
	q_7 : IN std_logic;
	q_6 : IN std_logic;
	q_5 : IN std_logic;
	q_4 : IN std_logic;
	q_3 : IN std_logic;
	q_2 : IN std_logic;
	q_1 : IN std_logic;
	q_0 : IN std_logic;
	CLK : IN std_logic;
	sload_path_47 : IN std_logic;
	sload_path_46 : IN std_logic;
	sload_path_45 : IN std_logic;
	sload_path_44 : IN std_logic;
	sload_path_43 : IN std_logic;
	sload_path_42 : IN std_logic;
	sload_path_41 : IN std_logic;
	sload_path_40 : IN std_logic;
	sload_path_39 : IN std_logic;
	sload_path_38 : IN std_logic;
	sload_path_37 : IN std_logic;
	sload_path_36 : IN std_logic;
	sload_path_35 : IN std_logic;
	sload_path_34 : IN std_logic;
	sload_path_33 : IN std_logic;
	sload_path_32 : IN std_logic;
	sload_path_31 : IN std_logic;
	sload_path_30 : IN std_logic;
	sload_path_29 : IN std_logic;
	sload_path_28 : IN std_logic;
	sload_path_27 : IN std_logic;
	sload_path_26 : IN std_logic;
	sload_path_25 : IN std_logic;
	sload_path_24 : IN std_logic;
	sload_path_23 : IN std_logic;
	sload_path_22 : IN std_logic;
	sload_path_21 : IN std_logic;
	sload_path_20 : IN std_logic;
	sload_path_19 : IN std_logic;
	sload_path_18 : IN std_logic;
	sload_path_17 : IN std_logic;
	sload_path_16 : IN std_logic;
	sload_path_151 : IN std_logic;
	sload_path_141 : IN std_logic;
	sload_path_131 : IN std_logic;
	sload_path_121 : IN std_logic;
	sload_path_111 : IN std_logic;
	sload_path_101 : IN std_logic;
	sload_path_91 : IN std_logic;
	sload_path_81 : IN std_logic;
	sload_path_71 : IN std_logic;
	sload_path_61 : IN std_logic;
	sload_path_51 : IN std_logic;
	sload_path_48 : IN std_logic;
	sload_path_310 : IN std_logic;
	sload_path_210 : IN std_logic;
	sload_path_110 : IN std_logic;
	sload_path_01 : IN std_logic;
	MASTERHWDATA_0 : IN std_logic;
	MASTERHWDATA_1 : IN std_logic;
	MASTERHWDATA_2 : IN std_logic;
	MASTERHWDATA_3 : IN std_logic;
	MASTERHWDATA_4 : IN std_logic;
	MASTERHWDATA_5 : IN std_logic;
	MASTERHWDATA_6 : IN std_logic;
	MASTERHWDATA_7 : IN std_logic;
	MASTERHWDATA_8 : IN std_logic;
	MASTERHWDATA_9 : IN std_logic;
	MASTERHWDATA_10 : IN std_logic;
	MASTERHWDATA_11 : IN std_logic;
	MASTERHWDATA_12 : IN std_logic;
	MASTERHWDATA_13 : IN std_logic;
	MASTERHWDATA_14 : IN std_logic;
	MASTERHWDATA_15 : IN std_logic;
	MASTERHWDATA_16 : IN std_logic;
	MASTERHWDATA_17 : IN std_logic;
	MASTERHWDATA_18 : IN std_logic;
	MASTERHWDATA_19 : IN std_logic;
	MASTERHWDATA_20 : IN std_logic;
	MASTERHWDATA_21 : IN std_logic;
	MASTERHWDATA_22 : IN std_logic;
	MASTERHWDATA_23 : IN std_logic;
	MASTERHWDATA_24 : IN std_logic;
	MASTERHWDATA_25 : IN std_logic;
	MASTERHWDATA_26 : IN std_logic;
	MASTERHWDATA_27 : IN std_logic;
	MASTERHWDATA_28 : IN std_logic;
	MASTERHWDATA_29 : IN std_logic;
	MASTERHWDATA_30 : IN std_logic;
	MASTERHWDATA_31 : IN std_logic;
	RST : IN std_logic;
	reg_address_3 : IN std_logic;
	reg_address_4 : IN std_logic;
	reg_address_5 : IN std_logic;
	reg_address_6 : IN std_logic;
	reg_address_2 : IN std_logic;
	comres_rcvd : IN std_logic;
	reg_address_12 : IN std_logic;
	reg_address_13 : IN std_logic;
	reg_address_14 : IN std_logic;
	q_01 : IN std_logic;
	reg_address_18 : IN std_logic;
	reg_address_19 : IN std_logic;
	q_02 : IN std_logic;
	atwd0_timestamp_32 : IN std_logic;
	atwd0_timestamp_0 : IN std_logic;
	multiSPEcnt_0 : IN std_logic;
	atwd1_timestamp_0 : IN std_logic;
	oneSPEcnt_0 : IN std_logic;
	atwd1_timestamp_32 : IN std_logic;
	multiSPEcnt_01 : IN std_logic;
	oneSPEcnt_01 : IN std_logic;
	done : IN std_logic;
	op_6 : IN std_logic;
	inst16_0 : IN std_logic;
	q_03 : IN std_logic;
	q_16 : IN std_logic;
	atwd0_timestamp_33 : IN std_logic;
	atwd0_timestamp_1 : IN std_logic;
	multiSPEcnt_1 : IN std_logic;
	atwd1_timestamp_1 : IN std_logic;
	oneSPEcnt_1 : IN std_logic;
	oneSPEcnt_11 : IN std_logic;
	inst50 : IN std_logic;
	atwd1_timestamp_33 : IN std_logic;
	multiSPEcnt_11 : IN std_logic;
	inst16_1 : IN std_logic;
	q_17 : IN std_logic;
	q_18 : IN std_logic;
	q_21 : IN std_logic;
	q_22 : IN std_logic;
	atwd0_timestamp_34 : IN std_logic;
	atwd0_timestamp_2 : IN std_logic;
	multiSPEcnt_2 : IN std_logic;
	atwd1_timestamp_2 : IN std_logic;
	oneSPEcnt_2 : IN std_logic;
	oneSPEcnt_21 : IN std_logic;
	reboot_gnt : IN std_logic;
	atwd1_timestamp_34 : IN std_logic;
	multiSPEcnt_21 : IN std_logic;
	inst16_2 : IN std_logic;
	q_23 : IN std_logic;
	q_31 : IN std_logic;
	atwd0_timestamp_35 : IN std_logic;
	atwd0_timestamp_3 : IN std_logic;
	multiSPEcnt_3 : IN std_logic;
	atwd1_timestamp_3 : IN std_logic;
	oneSPEcnt_3 : IN std_logic;
	oneSPEcnt_31 : IN std_logic;
	last_node_0 : IN std_logic;
	atwd1_timestamp_35 : IN std_logic;
	multiSPEcnt_31 : IN std_logic;
	inst16_3 : IN std_logic;
	q_32 : IN std_logic;
	q_33 : IN std_logic;
	q_41 : IN std_logic;
	q_42 : IN std_logic;
	atwd0_timestamp_36 : IN std_logic;
	atwd0_timestamp_4 : IN std_logic;
	multiSPEcnt_4 : IN std_logic;
	atwd1_timestamp_4 : IN std_logic;
	oneSPEcnt_4 : IN std_logic;
	oneSPEcnt_41 : IN std_logic;
	atwd1_timestamp_36 : IN std_logic;
	multiSPEcnt_41 : IN std_logic;
	inst16_4 : IN std_logic;
	q_43 : IN std_logic;
	q_51 : IN std_logic;
	atwd0_timestamp_37 : IN std_logic;
	atwd0_timestamp_5 : IN std_logic;
	multiSPEcnt_5 : IN std_logic;
	atwd1_timestamp_5 : IN std_logic;
	oneSPEcnt_5 : IN std_logic;
	oneSPEcnt_51 : IN std_logic;
	op_61 : IN std_logic;
	atwd1_timestamp_37 : IN std_logic;
	multiSPEcnt_51 : IN std_logic;
	inst16_5 : IN std_logic;
	q_52 : IN std_logic;
	q_53 : IN std_logic;
	q_61 : IN std_logic;
	q_62 : IN std_logic;
	atwd0_timestamp_38 : IN std_logic;
	atwd0_timestamp_6 : IN std_logic;
	multiSPEcnt_6 : IN std_logic;
	atwd1_timestamp_6 : IN std_logic;
	oneSPEcnt_6 : IN std_logic;
	oneSPEcnt_61 : IN std_logic;
	com_avail : IN std_logic;
	atwd1_timestamp_38 : IN std_logic;
	multiSPEcnt_61 : IN std_logic;
	inst16_6 : IN std_logic;
	q_63 : IN std_logic;
	q_71 : IN std_logic;
	atwd0_timestamp_39 : IN std_logic;
	atwd0_timestamp_7 : IN std_logic;
	multiSPEcnt_7 : IN std_logic;
	atwd1_timestamp_7 : IN std_logic;
	oneSPEcnt_7 : IN std_logic;
	oneSPEcnt_71 : IN std_logic;
	inst16_7 : IN std_logic;
	atwd1_timestamp_39 : IN std_logic;
	multiSPEcnt_71 : IN std_logic;
	q_72 : IN std_logic;
	q_73 : IN std_logic;
	q_81 : IN std_logic;
	q_82 : IN std_logic;
	FF_down_a : IN std_logic;
	atwd0_timestamp_40 : IN std_logic;
	atwd0_timestamp_8 : IN std_logic;
	multiSPEcnt_8 : IN std_logic;
	done1 : IN std_logic;
	atwd1_timestamp_40 : IN std_logic;
	oneSPEcnt_8 : IN std_logic;
	oneSPEcnt_81 : IN std_logic;
	atwd1_timestamp_8 : IN std_logic;
	inst16_8 : IN std_logic;
	multiSPEcnt_81 : IN std_logic;
	q_83 : IN std_logic;
	q_91 : IN std_logic;
	FF_down_abar : IN std_logic;
	atwd0_timestamp_41 : IN std_logic;
	atwd0_timestamp_9 : IN std_logic;
	multiSPEcnt_9 : IN std_logic;
	atwd1_timestamp_9 : IN std_logic;
	oneSPEcnt_9 : IN std_logic;
	oneSPEcnt_91 : IN std_logic;
	inst16_9 : IN std_logic;
	atwd1_timestamp_41 : IN std_logic;
	multiSPEcnt_91 : IN std_logic;
	q_92 : IN std_logic;
	q_93 : IN std_logic;
	q_101 : IN std_logic;
	q_102 : IN std_logic;
	FF_down_b : IN std_logic;
	atwd0_timestamp_42 : IN std_logic;
	atwd0_timestamp_10 : IN std_logic;
	multiSPEcnt_10 : IN std_logic;
	atwd1_timestamp_10 : IN std_logic;
	oneSPEcnt_10 : IN std_logic;
	oneSPEcnt_101 : IN std_logic;
	inst16_10 : IN std_logic;
	atwd1_timestamp_42 : IN std_logic;
	multiSPEcnt_101 : IN std_logic;
	q_103 : IN std_logic;
	q_111 : IN std_logic;
	FF_down_bbar : IN std_logic;
	atwd0_timestamp_43 : IN std_logic;
	atwd0_timestamp_11 : IN std_logic;
	multiSPEcnt_111 : IN std_logic;
	atwd1_timestamp_11 : IN std_logic;
	oneSPEcnt_111 : IN std_logic;
	oneSPEcnt_112 : IN std_logic;
	inst16_11 : IN std_logic;
	atwd1_timestamp_43 : IN std_logic;
	multiSPEcnt_112 : IN std_logic;
	q_112 : IN std_logic;
	q_113 : IN std_logic;
	q_121 : IN std_logic;
	q_122 : IN std_logic;
	FF_up_a : IN std_logic;
	atwd0_timestamp_44 : IN std_logic;
	atwd0_timestamp_12 : IN std_logic;
	multiSPEcnt_12 : IN std_logic;
	atwd1_timestamp_12 : IN std_logic;
	oneSPEcnt_12 : IN std_logic;
	oneSPEcnt_121 : IN std_logic;
	inst16_12 : IN std_logic;
	atwd1_timestamp_44 : IN std_logic;
	multiSPEcnt_121 : IN std_logic;
	q_123 : IN std_logic;
	q_131 : IN std_logic;
	FF_up_abar : IN std_logic;
	atwd0_timestamp_45 : IN std_logic;
	atwd0_timestamp_13 : IN std_logic;
	multiSPEcnt_13 : IN std_logic;
	atwd1_timestamp_13 : IN std_logic;
	oneSPEcnt_13 : IN std_logic;
	oneSPEcnt_131 : IN std_logic;
	inst16_13 : IN std_logic;
	atwd1_timestamp_45 : IN std_logic;
	multiSPEcnt_131 : IN std_logic;
	q_132 : IN std_logic;
	q_133 : IN std_logic;
	q_141 : IN std_logic;
	q_142 : IN std_logic;
	FF_up_b : IN std_logic;
	atwd0_timestamp_46 : IN std_logic;
	atwd0_timestamp_14 : IN std_logic;
	multiSPEcnt_14 : IN std_logic;
	atwd1_timestamp_14 : IN std_logic;
	oneSPEcnt_14 : IN std_logic;
	oneSPEcnt_141 : IN std_logic;
	inst16_14 : IN std_logic;
	atwd1_timestamp_46 : IN std_logic;
	multiSPEcnt_141 : IN std_logic;
	q_143 : IN std_logic;
	q_151 : IN std_logic;
	FF_up_bbar : IN std_logic;
	atwd0_timestamp_47 : IN std_logic;
	atwd0_timestamp_15 : IN std_logic;
	multiSPEcnt_15 : IN std_logic;
	atwd1_timestamp_15 : IN std_logic;
	oneSPEcnt_15 : IN std_logic;
	oneSPEcnt_151 : IN std_logic;
	inst16_15 : IN std_logic;
	atwd1_timestamp_47 : IN std_logic;
	multiSPEcnt_151 : IN std_logic;
	q_152 : IN std_logic;
	q_153 : IN std_logic;
	atwd1_timestamp_16 : IN std_logic;
	atwd0_timestamp_16 : IN std_logic;
	atwd1_timestamp_17 : IN std_logic;
	atwd0_timestamp_17 : IN std_logic;
	atwd1_timestamp_18 : IN std_logic;
	atwd0_timestamp_18 : IN std_logic;
	atwd1_timestamp_19 : IN std_logic;
	atwd0_timestamp_19 : IN std_logic;
	atwd1_timestamp_20 : IN std_logic;
	atwd0_timestamp_20 : IN std_logic;
	atwd1_timestamp_21 : IN std_logic;
	atwd0_timestamp_21 : IN std_logic;
	atwd1_timestamp_22 : IN std_logic;
	atwd0_timestamp_22 : IN std_logic;
	atwd1_timestamp_23 : IN std_logic;
	atwd0_timestamp_23 : IN std_logic;
	atwd1_timestamp_24 : IN std_logic;
	atwd0_timestamp_24 : IN std_logic;
	atwd1_timestamp_25 : IN std_logic;
	atwd0_timestamp_25 : IN std_logic;
	atwd1_timestamp_26 : IN std_logic;
	atwd0_timestamp_26 : IN std_logic;
	atwd1_timestamp_27 : IN std_logic;
	atwd0_timestamp_27 : IN std_logic;
	atwd1_timestamp_28 : IN std_logic;
	atwd0_timestamp_28 : IN std_logic;
	atwd1_timestamp_29 : IN std_logic;
	atwd0_timestamp_29 : IN std_logic;
	atwd1_timestamp_30 : IN std_logic;
	atwd0_timestamp_30 : IN std_logic;
	atwd1_timestamp_31 : IN std_logic;
	atwd0_timestamp_31 : IN std_logic;
	reg_enable : IN std_logic;
	reg_write : IN std_logic;
	reg_address_15 : IN std_logic;
	reg_address_7 : IN std_logic;
	reg_address_8 : IN std_logic;
	done2 : IN std_logic;
	COINC_DOWN_A : IN std_logic;
	COINC_DOWN_ABAR : IN std_logic;
	COINC_DOWN_B : IN std_logic;
	COINC_DOWN_BBAR : IN std_logic;
	COINC_UP_A : IN std_logic;
	COINC_UP_ABAR : IN std_logic;
	COINC_UP_B : IN std_logic;
	COINC_UP_BBAR : IN std_logic;
	FL_ATTN : IN std_logic;
	FL_TDO : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	command_2_local_26 : OUT std_logic;
	com_ctrl_local_2 : OUT std_logic;
	reg_rdata_0 : OUT std_logic;
	reg_rdata_1 : OUT std_logic;
	reg_rdata_2 : OUT std_logic;
	reg_rdata_3 : OUT std_logic;
	reg_rdata_4 : OUT std_logic;
	reg_rdata_5 : OUT std_logic;
	reg_rdata_6 : OUT std_logic;
	reg_rdata_7 : OUT std_logic;
	reg_rdata_8 : OUT std_logic;
	reg_rdata_9 : OUT std_logic;
	reg_rdata_10 : OUT std_logic;
	reg_rdata_11 : OUT std_logic;
	reg_rdata_12 : OUT std_logic;
	reg_rdata_13 : OUT std_logic;
	reg_rdata_14 : OUT std_logic;
	reg_rdata_15 : OUT std_logic;
	reg_rdata_16 : OUT std_logic;
	reg_rdata_17 : OUT std_logic;
	reg_rdata_18 : OUT std_logic;
	reg_rdata_19 : OUT std_logic;
	reg_rdata_20 : OUT std_logic;
	reg_rdata_21 : OUT std_logic;
	reg_rdata_22 : OUT std_logic;
	reg_rdata_23 : OUT std_logic;
	reg_rdata_24 : OUT std_logic;
	reg_rdata_25 : OUT std_logic;
	reg_rdata_26 : OUT std_logic;
	reg_rdata_27 : OUT std_logic;
	reg_rdata_28 : OUT std_logic;
	reg_rdata_29 : OUT std_logic;
	reg_rdata_30 : OUT std_logic;
	reg_rdata_31 : OUT std_logic;
	command_2_local_12 : OUT std_logic;
	command_2_local_13 : OUT std_logic;
	command_2_local_14 : OUT std_logic;
	command_2_local_15 : OUT std_logic;
	command_2_local_28 : OUT std_logic;
	command_2_local_31 : OUT std_logic;
	command_2_local_29 : OUT std_logic;
	command_2_local_30 : OUT std_logic;
	i3329 : OUT std_logic;
	rx_dpr_radr_local_0 : OUT std_logic;
	command_2_local_0 : OUT std_logic;
	command_4_local_0 : OUT std_logic;
	command_0_local_0 : OUT std_logic;
	tx_dpr_wadr_local_0 : OUT std_logic;
	rx_dpr_radr_local_1 : OUT std_logic;
	command_2_local_1 : OUT std_logic;
	tx_dpr_wadr_local_1 : OUT std_logic;
	command_0_local_1 : OUT std_logic;
	command_4_local_1 : OUT std_logic;
	rx_dpr_radr_local_2 : OUT std_logic;
	tx_dpr_wadr_local_2 : OUT std_logic;
	command_0_local_2 : OUT std_logic;
	command_4_local_2 : OUT std_logic;
	rx_dpr_radr_local_3 : OUT std_logic;
	tx_dpr_wadr_local_3 : OUT std_logic;
	command_0_local_3 : OUT std_logic;
	command_4_local_3 : OUT std_logic;
	rx_dpr_radr_local_4 : OUT std_logic;
	tx_dpr_wadr_local_4 : OUT std_logic;
	rx_dpr_radr_local_5 : OUT std_logic;
	tx_dpr_wadr_local_5 : OUT std_logic;
	rx_dpr_radr_local_6 : OUT std_logic;
	tx_dpr_wadr_local_6 : OUT std_logic;
	rx_dpr_radr_local_7 : OUT std_logic;
	tx_dpr_wadr_local_7 : OUT std_logic;
	command_2_local_8 : OUT std_logic;
	rx_dpr_radr_local_8 : OUT std_logic;
	command_4_local_8 : OUT std_logic;
	tx_dpr_wadr_local_8 : OUT std_logic;
	command_0_local_8 : OUT std_logic;
	command_2_local_9 : OUT std_logic;
	rx_dpr_radr_local_9 : OUT std_logic;
	tx_dpr_wadr_local_9 : OUT std_logic;
	command_0_local_9 : OUT std_logic;
	command_2_local_10 : OUT std_logic;
	rx_dpr_radr_local_10 : OUT std_logic;
	tx_dpr_wadr_local_10 : OUT std_logic;
	command_0_local_10 : OUT std_logic;
	command_2_local_11 : OUT std_logic;
	rx_dpr_radr_local_11 : OUT std_logic;
	tx_dpr_wadr_local_11 : OUT std_logic;
	command_0_local_11 : OUT std_logic;
	rx_dpr_radr_local_12 : OUT std_logic;
	tx_dpr_wadr_local_12 : OUT std_logic;
	command_4_local_12 : OUT std_logic;
	rx_dpr_radr_local_13 : OUT std_logic;
	tx_dpr_wadr_local_13 : OUT std_logic;
	command_4_local_13 : OUT std_logic;
	rx_dpr_radr_local_14 : OUT std_logic;
	tx_dpr_wadr_local_14 : OUT std_logic;
	command_4_local_14 : OUT std_logic;
	rx_dpr_radr_local_15 : OUT std_logic;
	tx_dpr_wadr_local_15 : OUT std_logic;
	command_0_local_15 : OUT std_logic;
	command_4_local_15 : OUT std_logic;
	i : OUT std_logic;
	command_1_local_16 : OUT std_logic;
	command_0_local_16 : OUT std_logic;
	command_1_local_17 : OUT std_logic;
	command_0_local_17 : OUT std_logic;
	command_1_local_18 : OUT std_logic;
	command_1_local_19 : OUT std_logic;
	command_2_local_24 : OUT std_logic;
	command_0_local_24 : OUT std_logic;
	command_0_local_26 : OUT std_logic;
	command_0_local_28 : OUT std_logic;
	command_0_local_30 : OUT std_logic;
	i33291 : OUT std_logic;
	i3335 : OUT std_logic;
	dom_id_48 : OUT std_logic;
	i33351 : OUT std_logic;
	tx_pack_rdy : OUT std_logic;
	i3342 : OUT std_logic;
	rx_dpr_radr_stb : OUT std_logic;
	dom_id_481 : OUT std_logic;
	dom_id_0 : OUT std_logic;
	dom_id_1 : OUT std_logic;
	dom_id_2 : OUT std_logic;
	dom_id_3 : OUT std_logic;
	dom_id_4 : OUT std_logic;
	dom_id_5 : OUT std_logic;
	dom_id_6 : OUT std_logic;
	dom_id_7 : OUT std_logic;
	dom_id_8 : OUT std_logic;
	dom_id_9 : OUT std_logic;
	dom_id_10 : OUT std_logic;
	dom_id_11 : OUT std_logic;
	dom_id_12 : OUT std_logic;
	dom_id_13 : OUT std_logic;
	dom_id_14 : OUT std_logic;
	dom_id_15 : OUT std_logic;
	dom_id_16 : OUT std_logic;
	dom_id_17 : OUT std_logic;
	dom_id_18 : OUT std_logic;
	dom_id_19 : OUT std_logic;
	dom_id_20 : OUT std_logic;
	dom_id_21 : OUT std_logic;
	dom_id_22 : OUT std_logic;
	dom_id_23 : OUT std_logic;
	dom_id_24 : OUT std_logic;
	dom_id_25 : OUT std_logic;
	dom_id_26 : OUT std_logic;
	dom_id_27 : OUT std_logic;
	dom_id_28 : OUT std_logic;
	dom_id_29 : OUT std_logic;
	dom_id_30 : OUT std_logic;
	dom_id_31 : OUT std_logic;
	dom_id_32 : OUT std_logic;
	dom_id_33 : OUT std_logic;
	dom_id_34 : OUT std_logic;
	dom_id_35 : OUT std_logic;
	dom_id_36 : OUT std_logic;
	dom_id_37 : OUT std_logic;
	dom_id_38 : OUT std_logic;
	dom_id_39 : OUT std_logic;
	dom_id_40 : OUT std_logic;
	dom_id_41 : OUT std_logic;
	dom_id_42 : OUT std_logic;
	dom_id_43 : OUT std_logic;
	dom_id_44 : OUT std_logic;
	dom_id_45 : OUT std_logic;
	dom_id_46 : OUT std_logic;
	dom_id_47 : OUT std_logic
	);
END slaveregister;

ARCHITECTURE structure OF slaveregister IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_15 : std_logic;
SIGNAL ww_sload_path_14 : std_logic;
SIGNAL ww_sload_path_13 : std_logic;
SIGNAL ww_sload_path_12 : std_logic;
SIGNAL ww_sload_path_11 : std_logic;
SIGNAL ww_sload_path_10 : std_logic;
SIGNAL ww_sload_path_9 : std_logic;
SIGNAL ww_sload_path_8 : std_logic;
SIGNAL ww_sload_path_7 : std_logic;
SIGNAL ww_sload_path_6 : std_logic;
SIGNAL ww_sload_path_5 : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_q_15 : std_logic;
SIGNAL ww_q_14 : std_logic;
SIGNAL ww_q_13 : std_logic;
SIGNAL ww_q_12 : std_logic;
SIGNAL ww_q_11 : std_logic;
SIGNAL ww_q_10 : std_logic;
SIGNAL ww_q_9 : std_logic;
SIGNAL ww_q_8 : std_logic;
SIGNAL ww_q_7 : std_logic;
SIGNAL ww_q_6 : std_logic;
SIGNAL ww_q_5 : std_logic;
SIGNAL ww_q_4 : std_logic;
SIGNAL ww_q_3 : std_logic;
SIGNAL ww_q_2 : std_logic;
SIGNAL ww_q_1 : std_logic;
SIGNAL ww_q_0 : std_logic;
SIGNAL ww_CLK : std_logic;
SIGNAL ww_sload_path_47 : std_logic;
SIGNAL ww_sload_path_46 : std_logic;
SIGNAL ww_sload_path_45 : std_logic;
SIGNAL ww_sload_path_44 : std_logic;
SIGNAL ww_sload_path_43 : std_logic;
SIGNAL ww_sload_path_42 : std_logic;
SIGNAL ww_sload_path_41 : std_logic;
SIGNAL ww_sload_path_40 : std_logic;
SIGNAL ww_sload_path_39 : std_logic;
SIGNAL ww_sload_path_38 : std_logic;
SIGNAL ww_sload_path_37 : std_logic;
SIGNAL ww_sload_path_36 : std_logic;
SIGNAL ww_sload_path_35 : std_logic;
SIGNAL ww_sload_path_34 : std_logic;
SIGNAL ww_sload_path_33 : std_logic;
SIGNAL ww_sload_path_32 : std_logic;
SIGNAL ww_sload_path_31 : std_logic;
SIGNAL ww_sload_path_30 : std_logic;
SIGNAL ww_sload_path_29 : std_logic;
SIGNAL ww_sload_path_28 : std_logic;
SIGNAL ww_sload_path_27 : std_logic;
SIGNAL ww_sload_path_26 : std_logic;
SIGNAL ww_sload_path_25 : std_logic;
SIGNAL ww_sload_path_24 : std_logic;
SIGNAL ww_sload_path_23 : std_logic;
SIGNAL ww_sload_path_22 : std_logic;
SIGNAL ww_sload_path_21 : std_logic;
SIGNAL ww_sload_path_20 : std_logic;
SIGNAL ww_sload_path_19 : std_logic;
SIGNAL ww_sload_path_18 : std_logic;
SIGNAL ww_sload_path_17 : std_logic;
SIGNAL ww_sload_path_16 : std_logic;
SIGNAL ww_sload_path_151 : std_logic;
SIGNAL ww_sload_path_141 : std_logic;
SIGNAL ww_sload_path_131 : std_logic;
SIGNAL ww_sload_path_121 : std_logic;
SIGNAL ww_sload_path_111 : std_logic;
SIGNAL ww_sload_path_101 : std_logic;
SIGNAL ww_sload_path_91 : std_logic;
SIGNAL ww_sload_path_81 : std_logic;
SIGNAL ww_sload_path_71 : std_logic;
SIGNAL ww_sload_path_61 : std_logic;
SIGNAL ww_sload_path_51 : std_logic;
SIGNAL ww_sload_path_48 : std_logic;
SIGNAL ww_sload_path_310 : std_logic;
SIGNAL ww_sload_path_210 : std_logic;
SIGNAL ww_sload_path_110 : std_logic;
SIGNAL ww_sload_path_01 : std_logic;
SIGNAL ww_MASTERHWDATA_0 : std_logic;
SIGNAL ww_MASTERHWDATA_1 : std_logic;
SIGNAL ww_MASTERHWDATA_2 : std_logic;
SIGNAL ww_MASTERHWDATA_3 : std_logic;
SIGNAL ww_MASTERHWDATA_4 : std_logic;
SIGNAL ww_MASTERHWDATA_5 : std_logic;
SIGNAL ww_MASTERHWDATA_6 : std_logic;
SIGNAL ww_MASTERHWDATA_7 : std_logic;
SIGNAL ww_MASTERHWDATA_8 : std_logic;
SIGNAL ww_MASTERHWDATA_9 : std_logic;
SIGNAL ww_MASTERHWDATA_10 : std_logic;
SIGNAL ww_MASTERHWDATA_11 : std_logic;
SIGNAL ww_MASTERHWDATA_12 : std_logic;
SIGNAL ww_MASTERHWDATA_13 : std_logic;
SIGNAL ww_MASTERHWDATA_14 : std_logic;
SIGNAL ww_MASTERHWDATA_15 : std_logic;
SIGNAL ww_MASTERHWDATA_16 : std_logic;
SIGNAL ww_MASTERHWDATA_17 : std_logic;
SIGNAL ww_MASTERHWDATA_18 : std_logic;
SIGNAL ww_MASTERHWDATA_19 : std_logic;
SIGNAL ww_MASTERHWDATA_20 : std_logic;
SIGNAL ww_MASTERHWDATA_21 : std_logic;
SIGNAL ww_MASTERHWDATA_22 : std_logic;
SIGNAL ww_MASTERHWDATA_23 : std_logic;
SIGNAL ww_MASTERHWDATA_24 : std_logic;
SIGNAL ww_MASTERHWDATA_25 : std_logic;
SIGNAL ww_MASTERHWDATA_26 : std_logic;
SIGNAL ww_MASTERHWDATA_27 : std_logic;
SIGNAL ww_MASTERHWDATA_28 : std_logic;
SIGNAL ww_MASTERHWDATA_29 : std_logic;
SIGNAL ww_MASTERHWDATA_30 : std_logic;
SIGNAL ww_MASTERHWDATA_31 : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_reg_address_3 : std_logic;
SIGNAL ww_reg_address_4 : std_logic;
SIGNAL ww_reg_address_5 : std_logic;
SIGNAL ww_reg_address_6 : std_logic;
SIGNAL ww_reg_address_2 : std_logic;
SIGNAL ww_comres_rcvd : std_logic;
SIGNAL ww_reg_address_12 : std_logic;
SIGNAL ww_reg_address_13 : std_logic;
SIGNAL ww_reg_address_14 : std_logic;
SIGNAL ww_q_01 : std_logic;
SIGNAL ww_reg_address_18 : std_logic;
SIGNAL ww_reg_address_19 : std_logic;
SIGNAL ww_q_02 : std_logic;
SIGNAL ww_atwd0_timestamp_32 : std_logic;
SIGNAL ww_atwd0_timestamp_0 : std_logic;
SIGNAL ww_multiSPEcnt_0 : std_logic;
SIGNAL ww_atwd1_timestamp_0 : std_logic;
SIGNAL ww_oneSPEcnt_0 : std_logic;
SIGNAL ww_atwd1_timestamp_32 : std_logic;
SIGNAL ww_multiSPEcnt_01 : std_logic;
SIGNAL ww_oneSPEcnt_01 : std_logic;
SIGNAL ww_done : std_logic;
SIGNAL ww_op_6 : std_logic;
SIGNAL ww_inst16_0 : std_logic;
SIGNAL ww_q_03 : std_logic;
SIGNAL ww_q_16 : std_logic;
SIGNAL ww_atwd0_timestamp_33 : std_logic;
SIGNAL ww_atwd0_timestamp_1 : std_logic;
SIGNAL ww_multiSPEcnt_1 : std_logic;
SIGNAL ww_atwd1_timestamp_1 : std_logic;
SIGNAL ww_oneSPEcnt_1 : std_logic;
SIGNAL ww_oneSPEcnt_11 : std_logic;
SIGNAL ww_inst50 : std_logic;
SIGNAL ww_atwd1_timestamp_33 : std_logic;
SIGNAL ww_multiSPEcnt_11 : std_logic;
SIGNAL ww_inst16_1 : std_logic;
SIGNAL ww_q_17 : std_logic;
SIGNAL ww_q_18 : std_logic;
SIGNAL ww_q_21 : std_logic;
SIGNAL ww_q_22 : std_logic;
SIGNAL ww_atwd0_timestamp_34 : std_logic;
SIGNAL ww_atwd0_timestamp_2 : std_logic;
SIGNAL ww_multiSPEcnt_2 : std_logic;
SIGNAL ww_atwd1_timestamp_2 : std_logic;
SIGNAL ww_oneSPEcnt_2 : std_logic;
SIGNAL ww_oneSPEcnt_21 : std_logic;
SIGNAL ww_reboot_gnt : std_logic;
SIGNAL ww_atwd1_timestamp_34 : std_logic;
SIGNAL ww_multiSPEcnt_21 : std_logic;
SIGNAL ww_inst16_2 : std_logic;
SIGNAL ww_q_23 : std_logic;
SIGNAL ww_q_31 : std_logic;
SIGNAL ww_atwd0_timestamp_35 : std_logic;
SIGNAL ww_atwd0_timestamp_3 : std_logic;
SIGNAL ww_multiSPEcnt_3 : std_logic;
SIGNAL ww_atwd1_timestamp_3 : std_logic;
SIGNAL ww_oneSPEcnt_3 : std_logic;
SIGNAL ww_oneSPEcnt_31 : std_logic;
SIGNAL ww_last_node_0 : std_logic;
SIGNAL ww_atwd1_timestamp_35 : std_logic;
SIGNAL ww_multiSPEcnt_31 : std_logic;
SIGNAL ww_inst16_3 : std_logic;
SIGNAL ww_q_32 : std_logic;
SIGNAL ww_q_33 : std_logic;
SIGNAL ww_q_41 : std_logic;
SIGNAL ww_q_42 : std_logic;
SIGNAL ww_atwd0_timestamp_36 : std_logic;
SIGNAL ww_atwd0_timestamp_4 : std_logic;
SIGNAL ww_multiSPEcnt_4 : std_logic;
SIGNAL ww_atwd1_timestamp_4 : std_logic;
SIGNAL ww_oneSPEcnt_4 : std_logic;
SIGNAL ww_oneSPEcnt_41 : std_logic;
SIGNAL ww_atwd1_timestamp_36 : std_logic;
SIGNAL ww_multiSPEcnt_41 : std_logic;
SIGNAL ww_inst16_4 : std_logic;
SIGNAL ww_q_43 : std_logic;
SIGNAL ww_q_51 : std_logic;
SIGNAL ww_atwd0_timestamp_37 : std_logic;
SIGNAL ww_atwd0_timestamp_5 : std_logic;
SIGNAL ww_multiSPEcnt_5 : std_logic;
SIGNAL ww_atwd1_timestamp_5 : std_logic;
SIGNAL ww_oneSPEcnt_5 : std_logic;
SIGNAL ww_oneSPEcnt_51 : std_logic;
SIGNAL ww_op_61 : std_logic;
SIGNAL ww_atwd1_timestamp_37 : std_logic;
SIGNAL ww_multiSPEcnt_51 : std_logic;
SIGNAL ww_inst16_5 : std_logic;
SIGNAL ww_q_52 : std_logic;
SIGNAL ww_q_53 : std_logic;
SIGNAL ww_q_61 : std_logic;
SIGNAL ww_q_62 : std_logic;
SIGNAL ww_atwd0_timestamp_38 : std_logic;
SIGNAL ww_atwd0_timestamp_6 : std_logic;
SIGNAL ww_multiSPEcnt_6 : std_logic;
SIGNAL ww_atwd1_timestamp_6 : std_logic;
SIGNAL ww_oneSPEcnt_6 : std_logic;
SIGNAL ww_oneSPEcnt_61 : std_logic;
SIGNAL ww_com_avail : std_logic;
SIGNAL ww_atwd1_timestamp_38 : std_logic;
SIGNAL ww_multiSPEcnt_61 : std_logic;
SIGNAL ww_inst16_6 : std_logic;
SIGNAL ww_q_63 : std_logic;
SIGNAL ww_q_71 : std_logic;
SIGNAL ww_atwd0_timestamp_39 : std_logic;
SIGNAL ww_atwd0_timestamp_7 : std_logic;
SIGNAL ww_multiSPEcnt_7 : std_logic;
SIGNAL ww_atwd1_timestamp_7 : std_logic;
SIGNAL ww_oneSPEcnt_7 : std_logic;
SIGNAL ww_oneSPEcnt_71 : std_logic;
SIGNAL ww_inst16_7 : std_logic;
SIGNAL ww_atwd1_timestamp_39 : std_logic;
SIGNAL ww_multiSPEcnt_71 : std_logic;
SIGNAL ww_q_72 : std_logic;
SIGNAL ww_q_73 : std_logic;
SIGNAL ww_q_81 : std_logic;
SIGNAL ww_q_82 : std_logic;
SIGNAL ww_FF_down_a : std_logic;
SIGNAL ww_atwd0_timestamp_40 : std_logic;
SIGNAL ww_atwd0_timestamp_8 : std_logic;
SIGNAL ww_multiSPEcnt_8 : std_logic;
SIGNAL ww_done1 : std_logic;
SIGNAL ww_atwd1_timestamp_40 : std_logic;
SIGNAL ww_oneSPEcnt_8 : std_logic;
SIGNAL ww_oneSPEcnt_81 : std_logic;
SIGNAL ww_atwd1_timestamp_8 : std_logic;
SIGNAL ww_inst16_8 : std_logic;
SIGNAL ww_multiSPEcnt_81 : std_logic;
SIGNAL ww_q_83 : std_logic;
SIGNAL ww_q_91 : std_logic;
SIGNAL ww_FF_down_abar : std_logic;
SIGNAL ww_atwd0_timestamp_41 : std_logic;
SIGNAL ww_atwd0_timestamp_9 : std_logic;
SIGNAL ww_multiSPEcnt_9 : std_logic;
SIGNAL ww_atwd1_timestamp_9 : std_logic;
SIGNAL ww_oneSPEcnt_9 : std_logic;
SIGNAL ww_oneSPEcnt_91 : std_logic;
SIGNAL ww_inst16_9 : std_logic;
SIGNAL ww_atwd1_timestamp_41 : std_logic;
SIGNAL ww_multiSPEcnt_91 : std_logic;
SIGNAL ww_q_92 : std_logic;
SIGNAL ww_q_93 : std_logic;
SIGNAL ww_q_101 : std_logic;
SIGNAL ww_q_102 : std_logic;
SIGNAL ww_FF_down_b : std_logic;
SIGNAL ww_atwd0_timestamp_42 : std_logic;
SIGNAL ww_atwd0_timestamp_10 : std_logic;
SIGNAL ww_multiSPEcnt_10 : std_logic;
SIGNAL ww_atwd1_timestamp_10 : std_logic;
SIGNAL ww_oneSPEcnt_10 : std_logic;
SIGNAL ww_oneSPEcnt_101 : std_logic;
SIGNAL ww_inst16_10 : std_logic;
SIGNAL ww_atwd1_timestamp_42 : std_logic;
SIGNAL ww_multiSPEcnt_101 : std_logic;
SIGNAL ww_q_103 : std_logic;
SIGNAL ww_q_111 : std_logic;
SIGNAL ww_FF_down_bbar : std_logic;
SIGNAL ww_atwd0_timestamp_43 : std_logic;
SIGNAL ww_atwd0_timestamp_11 : std_logic;
SIGNAL ww_multiSPEcnt_111 : std_logic;
SIGNAL ww_atwd1_timestamp_11 : std_logic;
SIGNAL ww_oneSPEcnt_111 : std_logic;
SIGNAL ww_oneSPEcnt_112 : std_logic;
SIGNAL ww_inst16_11 : std_logic;
SIGNAL ww_atwd1_timestamp_43 : std_logic;
SIGNAL ww_multiSPEcnt_112 : std_logic;
SIGNAL ww_q_112 : std_logic;
SIGNAL ww_q_113 : std_logic;
SIGNAL ww_q_121 : std_logic;
SIGNAL ww_q_122 : std_logic;
SIGNAL ww_FF_up_a : std_logic;
SIGNAL ww_atwd0_timestamp_44 : std_logic;
SIGNAL ww_atwd0_timestamp_12 : std_logic;
SIGNAL ww_multiSPEcnt_12 : std_logic;
SIGNAL ww_atwd1_timestamp_12 : std_logic;
SIGNAL ww_oneSPEcnt_12 : std_logic;
SIGNAL ww_oneSPEcnt_121 : std_logic;
SIGNAL ww_inst16_12 : std_logic;
SIGNAL ww_atwd1_timestamp_44 : std_logic;
SIGNAL ww_multiSPEcnt_121 : std_logic;
SIGNAL ww_q_123 : std_logic;
SIGNAL ww_q_131 : std_logic;
SIGNAL ww_FF_up_abar : std_logic;
SIGNAL ww_atwd0_timestamp_45 : std_logic;
SIGNAL ww_atwd0_timestamp_13 : std_logic;
SIGNAL ww_multiSPEcnt_13 : std_logic;
SIGNAL ww_atwd1_timestamp_13 : std_logic;
SIGNAL ww_oneSPEcnt_13 : std_logic;
SIGNAL ww_oneSPEcnt_131 : std_logic;
SIGNAL ww_inst16_13 : std_logic;
SIGNAL ww_atwd1_timestamp_45 : std_logic;
SIGNAL ww_multiSPEcnt_131 : std_logic;
SIGNAL ww_q_132 : std_logic;
SIGNAL ww_q_133 : std_logic;
SIGNAL ww_q_141 : std_logic;
SIGNAL ww_q_142 : std_logic;
SIGNAL ww_FF_up_b : std_logic;
SIGNAL ww_atwd0_timestamp_46 : std_logic;
SIGNAL ww_atwd0_timestamp_14 : std_logic;
SIGNAL ww_multiSPEcnt_14 : std_logic;
SIGNAL ww_atwd1_timestamp_14 : std_logic;
SIGNAL ww_oneSPEcnt_14 : std_logic;
SIGNAL ww_oneSPEcnt_141 : std_logic;
SIGNAL ww_inst16_14 : std_logic;
SIGNAL ww_atwd1_timestamp_46 : std_logic;
SIGNAL ww_multiSPEcnt_141 : std_logic;
SIGNAL ww_q_143 : std_logic;
SIGNAL ww_q_151 : std_logic;
SIGNAL ww_FF_up_bbar : std_logic;
SIGNAL ww_atwd0_timestamp_47 : std_logic;
SIGNAL ww_atwd0_timestamp_15 : std_logic;
SIGNAL ww_multiSPEcnt_15 : std_logic;
SIGNAL ww_atwd1_timestamp_15 : std_logic;
SIGNAL ww_oneSPEcnt_15 : std_logic;
SIGNAL ww_oneSPEcnt_151 : std_logic;
SIGNAL ww_inst16_15 : std_logic;
SIGNAL ww_atwd1_timestamp_47 : std_logic;
SIGNAL ww_multiSPEcnt_151 : std_logic;
SIGNAL ww_q_152 : std_logic;
SIGNAL ww_q_153 : std_logic;
SIGNAL ww_atwd1_timestamp_16 : std_logic;
SIGNAL ww_atwd0_timestamp_16 : std_logic;
SIGNAL ww_atwd1_timestamp_17 : std_logic;
SIGNAL ww_atwd0_timestamp_17 : std_logic;
SIGNAL ww_atwd1_timestamp_18 : std_logic;
SIGNAL ww_atwd0_timestamp_18 : std_logic;
SIGNAL ww_atwd1_timestamp_19 : std_logic;
SIGNAL ww_atwd0_timestamp_19 : std_logic;
SIGNAL ww_atwd1_timestamp_20 : std_logic;
SIGNAL ww_atwd0_timestamp_20 : std_logic;
SIGNAL ww_atwd1_timestamp_21 : std_logic;
SIGNAL ww_atwd0_timestamp_21 : std_logic;
SIGNAL ww_atwd1_timestamp_22 : std_logic;
SIGNAL ww_atwd0_timestamp_22 : std_logic;
SIGNAL ww_atwd1_timestamp_23 : std_logic;
SIGNAL ww_atwd0_timestamp_23 : std_logic;
SIGNAL ww_atwd1_timestamp_24 : std_logic;
SIGNAL ww_atwd0_timestamp_24 : std_logic;
SIGNAL ww_atwd1_timestamp_25 : std_logic;
SIGNAL ww_atwd0_timestamp_25 : std_logic;
SIGNAL ww_atwd1_timestamp_26 : std_logic;
SIGNAL ww_atwd0_timestamp_26 : std_logic;
SIGNAL ww_atwd1_timestamp_27 : std_logic;
SIGNAL ww_atwd0_timestamp_27 : std_logic;
SIGNAL ww_atwd1_timestamp_28 : std_logic;
SIGNAL ww_atwd0_timestamp_28 : std_logic;
SIGNAL ww_atwd1_timestamp_29 : std_logic;
SIGNAL ww_atwd0_timestamp_29 : std_logic;
SIGNAL ww_atwd1_timestamp_30 : std_logic;
SIGNAL ww_atwd0_timestamp_30 : std_logic;
SIGNAL ww_atwd1_timestamp_31 : std_logic;
SIGNAL ww_atwd0_timestamp_31 : std_logic;
SIGNAL ww_reg_enable : std_logic;
SIGNAL ww_reg_write : std_logic;
SIGNAL ww_reg_address_15 : std_logic;
SIGNAL ww_reg_address_7 : std_logic;
SIGNAL ww_reg_address_8 : std_logic;
SIGNAL ww_done2 : std_logic;
SIGNAL ww_COINC_DOWN_A : std_logic;
SIGNAL ww_COINC_DOWN_ABAR : std_logic;
SIGNAL ww_COINC_DOWN_B : std_logic;
SIGNAL ww_COINC_DOWN_BBAR : std_logic;
SIGNAL ww_COINC_UP_A : std_logic;
SIGNAL ww_COINC_UP_ABAR : std_logic;
SIGNAL ww_COINC_UP_B : std_logic;
SIGNAL ww_COINC_UP_BBAR : std_logic;
SIGNAL ww_FL_ATTN : std_logic;
SIGNAL ww_FL_TDO : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_command_2_local_26 : std_logic;
SIGNAL ww_com_ctrl_local_2 : std_logic;
SIGNAL ww_reg_rdata_0 : std_logic;
SIGNAL ww_reg_rdata_1 : std_logic;
SIGNAL ww_reg_rdata_2 : std_logic;
SIGNAL ww_reg_rdata_3 : std_logic;
SIGNAL ww_reg_rdata_4 : std_logic;
SIGNAL ww_reg_rdata_5 : std_logic;
SIGNAL ww_reg_rdata_6 : std_logic;
SIGNAL ww_reg_rdata_7 : std_logic;
SIGNAL ww_reg_rdata_8 : std_logic;
SIGNAL ww_reg_rdata_9 : std_logic;
SIGNAL ww_reg_rdata_10 : std_logic;
SIGNAL ww_reg_rdata_11 : std_logic;
SIGNAL ww_reg_rdata_12 : std_logic;
SIGNAL ww_reg_rdata_13 : std_logic;
SIGNAL ww_reg_rdata_14 : std_logic;
SIGNAL ww_reg_rdata_15 : std_logic;
SIGNAL ww_reg_rdata_16 : std_logic;
SIGNAL ww_reg_rdata_17 : std_logic;
SIGNAL ww_reg_rdata_18 : std_logic;
SIGNAL ww_reg_rdata_19 : std_logic;
SIGNAL ww_reg_rdata_20 : std_logic;
SIGNAL ww_reg_rdata_21 : std_logic;
SIGNAL ww_reg_rdata_22 : std_logic;
SIGNAL ww_reg_rdata_23 : std_logic;
SIGNAL ww_reg_rdata_24 : std_logic;
SIGNAL ww_reg_rdata_25 : std_logic;
SIGNAL ww_reg_rdata_26 : std_logic;
SIGNAL ww_reg_rdata_27 : std_logic;
SIGNAL ww_reg_rdata_28 : std_logic;
SIGNAL ww_reg_rdata_29 : std_logic;
SIGNAL ww_reg_rdata_30 : std_logic;
SIGNAL ww_reg_rdata_31 : std_logic;
SIGNAL ww_command_2_local_12 : std_logic;
SIGNAL ww_command_2_local_13 : std_logic;
SIGNAL ww_command_2_local_14 : std_logic;
SIGNAL ww_command_2_local_15 : std_logic;
SIGNAL ww_command_2_local_28 : std_logic;
SIGNAL ww_command_2_local_31 : std_logic;
SIGNAL ww_command_2_local_29 : std_logic;
SIGNAL ww_command_2_local_30 : std_logic;
SIGNAL ww_i3329 : std_logic;
SIGNAL ww_rx_dpr_radr_local_0 : std_logic;
SIGNAL ww_command_2_local_0 : std_logic;
SIGNAL ww_command_4_local_0 : std_logic;
SIGNAL ww_command_0_local_0 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_0 : std_logic;
SIGNAL ww_rx_dpr_radr_local_1 : std_logic;
SIGNAL ww_command_2_local_1 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_1 : std_logic;
SIGNAL ww_command_0_local_1 : std_logic;
SIGNAL ww_command_4_local_1 : std_logic;
SIGNAL ww_rx_dpr_radr_local_2 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_2 : std_logic;
SIGNAL ww_command_0_local_2 : std_logic;
SIGNAL ww_command_4_local_2 : std_logic;
SIGNAL ww_rx_dpr_radr_local_3 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_3 : std_logic;
SIGNAL ww_command_0_local_3 : std_logic;
SIGNAL ww_command_4_local_3 : std_logic;
SIGNAL ww_rx_dpr_radr_local_4 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_4 : std_logic;
SIGNAL ww_rx_dpr_radr_local_5 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_5 : std_logic;
SIGNAL ww_rx_dpr_radr_local_6 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_6 : std_logic;
SIGNAL ww_rx_dpr_radr_local_7 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_7 : std_logic;
SIGNAL ww_command_2_local_8 : std_logic;
SIGNAL ww_rx_dpr_radr_local_8 : std_logic;
SIGNAL ww_command_4_local_8 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_8 : std_logic;
SIGNAL ww_command_0_local_8 : std_logic;
SIGNAL ww_command_2_local_9 : std_logic;
SIGNAL ww_rx_dpr_radr_local_9 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_9 : std_logic;
SIGNAL ww_command_0_local_9 : std_logic;
SIGNAL ww_command_2_local_10 : std_logic;
SIGNAL ww_rx_dpr_radr_local_10 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_10 : std_logic;
SIGNAL ww_command_0_local_10 : std_logic;
SIGNAL ww_command_2_local_11 : std_logic;
SIGNAL ww_rx_dpr_radr_local_11 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_11 : std_logic;
SIGNAL ww_command_0_local_11 : std_logic;
SIGNAL ww_rx_dpr_radr_local_12 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_12 : std_logic;
SIGNAL ww_command_4_local_12 : std_logic;
SIGNAL ww_rx_dpr_radr_local_13 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_13 : std_logic;
SIGNAL ww_command_4_local_13 : std_logic;
SIGNAL ww_rx_dpr_radr_local_14 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_14 : std_logic;
SIGNAL ww_command_4_local_14 : std_logic;
SIGNAL ww_rx_dpr_radr_local_15 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_15 : std_logic;
SIGNAL ww_command_0_local_15 : std_logic;
SIGNAL ww_command_4_local_15 : std_logic;
SIGNAL ww_i : std_logic;
SIGNAL ww_command_1_local_16 : std_logic;
SIGNAL ww_command_0_local_16 : std_logic;
SIGNAL ww_command_1_local_17 : std_logic;
SIGNAL ww_command_0_local_17 : std_logic;
SIGNAL ww_command_1_local_18 : std_logic;
SIGNAL ww_command_1_local_19 : std_logic;
SIGNAL ww_command_2_local_24 : std_logic;
SIGNAL ww_command_0_local_24 : std_logic;
SIGNAL ww_command_0_local_26 : std_logic;
SIGNAL ww_command_0_local_28 : std_logic;
SIGNAL ww_command_0_local_30 : std_logic;
SIGNAL ww_i33291 : std_logic;
SIGNAL ww_i3335 : std_logic;
SIGNAL ww_dom_id_48 : std_logic;
SIGNAL ww_i33351 : std_logic;
SIGNAL ww_tx_pack_rdy : std_logic;
SIGNAL ww_i3342 : std_logic;
SIGNAL ww_rx_dpr_radr_stb : std_logic;
SIGNAL ww_dom_id_481 : std_logic;
SIGNAL ww_dom_id_0 : std_logic;
SIGNAL ww_dom_id_1 : std_logic;
SIGNAL ww_dom_id_2 : std_logic;
SIGNAL ww_dom_id_3 : std_logic;
SIGNAL ww_dom_id_4 : std_logic;
SIGNAL ww_dom_id_5 : std_logic;
SIGNAL ww_dom_id_6 : std_logic;
SIGNAL ww_dom_id_7 : std_logic;
SIGNAL ww_dom_id_8 : std_logic;
SIGNAL ww_dom_id_9 : std_logic;
SIGNAL ww_dom_id_10 : std_logic;
SIGNAL ww_dom_id_11 : std_logic;
SIGNAL ww_dom_id_12 : std_logic;
SIGNAL ww_dom_id_13 : std_logic;
SIGNAL ww_dom_id_14 : std_logic;
SIGNAL ww_dom_id_15 : std_logic;
SIGNAL ww_dom_id_16 : std_logic;
SIGNAL ww_dom_id_17 : std_logic;
SIGNAL ww_dom_id_18 : std_logic;
SIGNAL ww_dom_id_19 : std_logic;
SIGNAL ww_dom_id_20 : std_logic;
SIGNAL ww_dom_id_21 : std_logic;
SIGNAL ww_dom_id_22 : std_logic;
SIGNAL ww_dom_id_23 : std_logic;
SIGNAL ww_dom_id_24 : std_logic;
SIGNAL ww_dom_id_25 : std_logic;
SIGNAL ww_dom_id_26 : std_logic;
SIGNAL ww_dom_id_27 : std_logic;
SIGNAL ww_dom_id_28 : std_logic;
SIGNAL ww_dom_id_29 : std_logic;
SIGNAL ww_dom_id_30 : std_logic;
SIGNAL ww_dom_id_31 : std_logic;
SIGNAL ww_dom_id_32 : std_logic;
SIGNAL ww_dom_id_33 : std_logic;
SIGNAL ww_dom_id_34 : std_logic;
SIGNAL ww_dom_id_35 : std_logic;
SIGNAL ww_dom_id_36 : std_logic;
SIGNAL ww_dom_id_37 : std_logic;
SIGNAL ww_dom_id_38 : std_logic;
SIGNAL ww_dom_id_39 : std_logic;
SIGNAL ww_dom_id_40 : std_logic;
SIGNAL ww_dom_id_41 : std_logic;
SIGNAL ww_dom_id_42 : std_logic;
SIGNAL ww_dom_id_43 : std_logic;
SIGNAL ww_dom_id_44 : std_logic;
SIGNAL ww_dom_id_45 : std_logic;
SIGNAL ww_dom_id_46 : std_logic;
SIGNAL ww_dom_id_47 : std_logic;
SIGNAL \srom|q[0]\ : std_logic;
SIGNAL \srom|q[1]\ : std_logic;
SIGNAL \srom|q[2]\ : std_logic;
SIGNAL \srom|q[3]\ : std_logic;
SIGNAL \srom|q[4]\ : std_logic;
SIGNAL \srom|q[5]\ : std_logic;
SIGNAL \srom|q[6]\ : std_logic;
SIGNAL \srom|q[7]\ : std_logic;
SIGNAL \srom|q[8]\ : std_logic;
SIGNAL \srom|q[9]\ : std_logic;
SIGNAL \srom|q[10]\ : std_logic;
SIGNAL \srom|q[11]\ : std_logic;
SIGNAL \srom|q[12]\ : std_logic;
SIGNAL \srom|q[13]\ : std_logic;
SIGNAL \srom|q[14]\ : std_logic;
SIGNAL \srom|q[15]\ : std_logic;
SIGNAL \com_ctrl_local[2]~90_1\ : std_logic;
SIGNAL \i1166~115_1\ : std_logic;
SIGNAL \i2215~51_1\ : std_logic;
SIGNAL \dom_id[48]~290\ : std_logic;
SIGNAL \dom_id[48]~288\ : std_logic;
SIGNAL \command_2_local[26]~126\ : std_logic;
SIGNAL \command_2_local[26]~32\ : std_logic;
SIGNAL \com_ctrl_local[2]~90\ : std_logic;
SIGNAL \com_ctrl_local[2]~124\ : std_logic;
SIGNAL \i~14465\ : std_logic;
SIGNAL \i~14469\ : std_logic;
SIGNAL \i~4817\ : std_logic;
SIGNAL \dom_id[48]~233\ : std_logic;
SIGNAL \command_2_local[26]~127\ : std_logic;
SIGNAL \i1166~111\ : std_logic;
SIGNAL \command_3_local[0]~32\ : std_logic;
SIGNAL \command_3_local[0]\ : std_logic;
SIGNAL \command_1_local[18]~32\ : std_logic;
SIGNAL \command_1_local[0]\ : std_logic;
SIGNAL \i~14467\ : std_logic;
SIGNAL \i~14468\ : std_logic;
SIGNAL \i~14466\ : std_logic;
SIGNAL \i~5142\ : std_logic;
SIGNAL \i~5143\ : std_logic;
SIGNAL \com_ctrl_local[0]\ : std_logic;
SIGNAL \i~5140\ : std_logic;
SIGNAL \i~5141\ : std_logic;
SIGNAL \i~14470\ : std_logic;
SIGNAL \i~14471\ : std_logic;
SIGNAL \i~5136\ : std_logic;
SIGNAL \i~5137\ : std_logic;
SIGNAL \i~5134\ : std_logic;
SIGNAL \i~5138\ : std_logic;
SIGNAL \i~5139\ : std_logic;
SIGNAL \i~5135\ : std_logic;
SIGNAL \i~14472\ : std_logic;
SIGNAL \i~5278\ : std_logic;
SIGNAL \i~5279\ : std_logic;
SIGNAL \i1166~109\ : std_logic;
SIGNAL \i~14464\ : std_logic;
SIGNAL \i~14474\ : std_logic;
SIGNAL \i~14475\ : std_logic;
SIGNAL \i~5280\ : std_logic;
SIGNAL \i~4820\ : std_logic;
SIGNAL \i~14479\ : std_logic;
SIGNAL \i~14476\ : std_logic;
SIGNAL \command_3_local[1]\ : std_logic;
SIGNAL \command_1_local[1]\ : std_logic;
SIGNAL \i~14477\ : std_logic;
SIGNAL \i~14478\ : std_logic;
SIGNAL \i~5152\ : std_logic;
SIGNAL \i~5153\ : std_logic;
SIGNAL \i~14480\ : std_logic;
SIGNAL \i~5150\ : std_logic;
SIGNAL \i~5151\ : std_logic;
SIGNAL \com_ctrl_local[1]\ : std_logic;
SIGNAL \i~5148\ : std_logic;
SIGNAL \i~5149\ : std_logic;
SIGNAL \i~5146\ : std_logic;
SIGNAL \i~5147\ : std_logic;
SIGNAL \i~5144\ : std_logic;
SIGNAL \i~5145\ : std_logic;
SIGNAL \i~14481\ : std_logic;
SIGNAL \i~5281\ : std_logic;
SIGNAL \i~14483\ : std_logic;
SIGNAL \i~14484\ : std_logic;
SIGNAL \i~14488\ : std_logic;
SIGNAL \i~4823\ : std_logic;
SIGNAL \command_2_local[2]\ : std_logic;
SIGNAL \i~14485\ : std_logic;
SIGNAL \command_1_local[2]\ : std_logic;
SIGNAL \command_3_local[2]\ : std_logic;
SIGNAL \i~14486\ : std_logic;
SIGNAL \i~14487\ : std_logic;
SIGNAL \i~5162\ : std_logic;
SIGNAL \i~5163\ : std_logic;
SIGNAL \i~5160\ : std_logic;
SIGNAL \i~5161\ : std_logic;
SIGNAL \i~14489\ : std_logic;
SIGNAL \i~5156\ : std_logic;
SIGNAL \i~5157\ : std_logic;
SIGNAL \i~5158\ : std_logic;
SIGNAL \i~5159\ : std_logic;
SIGNAL \i~5154\ : std_logic;
SIGNAL \i~5155\ : std_logic;
SIGNAL \i~14490\ : std_logic;
SIGNAL \i~5282\ : std_logic;
SIGNAL \i~5283\ : std_logic;
SIGNAL \i~14492\ : std_logic;
SIGNAL \i~14493\ : std_logic;
SIGNAL \i~14497\ : std_logic;
SIGNAL \i~4826\ : std_logic;
SIGNAL \command_2_local[3]\ : std_logic;
SIGNAL \i~14494\ : std_logic;
SIGNAL \command_1_local[3]\ : std_logic;
SIGNAL \command_3_local[3]\ : std_logic;
SIGNAL \i~14495\ : std_logic;
SIGNAL \i~14496\ : std_logic;
SIGNAL \i~5172\ : std_logic;
SIGNAL \i~5173\ : std_logic;
SIGNAL \com_ctrl_local[3]\ : std_logic;
SIGNAL \i~5168\ : std_logic;
SIGNAL \i~5169\ : std_logic;
SIGNAL \i~5166\ : std_logic;
SIGNAL \i~5167\ : std_logic;
SIGNAL \i~5164\ : std_logic;
SIGNAL \i~5170\ : std_logic;
SIGNAL \i~5171\ : std_logic;
SIGNAL \i~14498\ : std_logic;
SIGNAL \i~5165\ : std_logic;
SIGNAL \i~14499\ : std_logic;
SIGNAL \i~5284\ : std_logic;
SIGNAL \i~5285\ : std_logic;
SIGNAL \i~14502\ : std_logic;
SIGNAL \i~14501\ : std_logic;
SIGNAL \i~14506\ : std_logic;
SIGNAL \i~4829\ : std_logic;
SIGNAL \command_2_local[4]\ : std_logic;
SIGNAL \i~14503\ : std_logic;
SIGNAL \command_1_local[4]\ : std_logic;
SIGNAL \command_3_local[4]\ : std_logic;
SIGNAL \i~14504\ : std_logic;
SIGNAL \i~14505\ : std_logic;
SIGNAL \i~5182\ : std_logic;
SIGNAL \i~5183\ : std_logic;
SIGNAL \i~5180\ : std_logic;
SIGNAL \i~5181\ : std_logic;
SIGNAL \i~14507\ : std_logic;
SIGNAL \com_ctrl_local[4]\ : std_logic;
SIGNAL \i~5178\ : std_logic;
SIGNAL \i~5179\ : std_logic;
SIGNAL \command_4_local[3]~81\ : std_logic;
SIGNAL \command_4_local[3]~32\ : std_logic;
SIGNAL \command_4_local[4]\ : std_logic;
SIGNAL \command_0_local[30]~129\ : std_logic;
SIGNAL \command_0_local[30]~32\ : std_logic;
SIGNAL \command_0_local[4]\ : std_logic;
SIGNAL \i~5176\ : std_logic;
SIGNAL \i~5177\ : std_logic;
SIGNAL \i~5174\ : std_logic;
SIGNAL \i~5175\ : std_logic;
SIGNAL \i~14508\ : std_logic;
SIGNAL \i~5286\ : std_logic;
SIGNAL \i~5287\ : std_logic;
SIGNAL \i~14510\ : std_logic;
SIGNAL \i~14511\ : std_logic;
SIGNAL \command_2_local[5]\ : std_logic;
SIGNAL \i~14512\ : std_logic;
SIGNAL \command_3_local[5]\ : std_logic;
SIGNAL \command_1_local[5]\ : std_logic;
SIGNAL \i~14513\ : std_logic;
SIGNAL \i~14514\ : std_logic;
SIGNAL \i~5192\ : std_logic;
SIGNAL \i~14515\ : std_logic;
SIGNAL \i~4832\ : std_logic;
SIGNAL \i~5193\ : std_logic;
SIGNAL \i~5190\ : std_logic;
SIGNAL \i~5191\ : std_logic;
SIGNAL \i~14516\ : std_logic;
SIGNAL \command_4_local[5]\ : std_logic;
SIGNAL \command_0_local[5]\ : std_logic;
SIGNAL \i~5186\ : std_logic;
SIGNAL \i~5187\ : std_logic;
SIGNAL \com_ctrl_local[5]\ : std_logic;
SIGNAL \i~5188\ : std_logic;
SIGNAL \i~5189\ : std_logic;
SIGNAL \i~5184\ : std_logic;
SIGNAL \i~5185\ : std_logic;
SIGNAL \i~14517\ : std_logic;
SIGNAL \i~5288\ : std_logic;
SIGNAL \i~5289\ : std_logic;
SIGNAL \i~14519\ : std_logic;
SIGNAL \i~14520\ : std_logic;
SIGNAL \i~14524\ : std_logic;
SIGNAL \i~4835\ : std_logic;
SIGNAL \command_2_local[6]\ : std_logic;
SIGNAL \i~14521\ : std_logic;
SIGNAL \command_3_local[6]\ : std_logic;
SIGNAL \command_1_local[6]\ : std_logic;
SIGNAL \i~14522\ : std_logic;
SIGNAL \i~14523\ : std_logic;
SIGNAL \i~5202\ : std_logic;
SIGNAL \i~5203\ : std_logic;
SIGNAL \i~14525\ : std_logic;
SIGNAL \i~5200\ : std_logic;
SIGNAL \i~5201\ : std_logic;
SIGNAL \command_4_local[6]\ : std_logic;
SIGNAL \command_0_local[6]\ : std_logic;
SIGNAL \i~5196\ : std_logic;
SIGNAL \i~5197\ : std_logic;
SIGNAL \i~5198\ : std_logic;
SIGNAL \com_ctrl_local[6]\ : std_logic;
SIGNAL \i~5199\ : std_logic;
SIGNAL \i~5194\ : std_logic;
SIGNAL \i~5195\ : std_logic;
SIGNAL \i~14526\ : std_logic;
SIGNAL \i~5290\ : std_logic;
SIGNAL \i~5291\ : std_logic;
SIGNAL \i~14528\ : std_logic;
SIGNAL \i~14529\ : std_logic;
SIGNAL \i~14533\ : std_logic;
SIGNAL \command_2_local[7]\ : std_logic;
SIGNAL \i~14530\ : std_logic;
SIGNAL \command_3_local[7]\ : std_logic;
SIGNAL \command_1_local[7]\ : std_logic;
SIGNAL \i~14531\ : std_logic;
SIGNAL \i~14532\ : std_logic;
SIGNAL \i~4838\ : std_logic;
SIGNAL \i~5210\ : std_logic;
SIGNAL \i~5211\ : std_logic;
SIGNAL \i~14535\ : std_logic;
SIGNAL \i~14536\ : std_logic;
SIGNAL \com_ctrl_local[7]\ : std_logic;
SIGNAL \i~5208\ : std_logic;
SIGNAL \i~5209\ : std_logic;
SIGNAL \command_4_local[7]\ : std_logic;
SIGNAL \command_0_local[7]\ : std_logic;
SIGNAL \i~5206\ : std_logic;
SIGNAL \i~5207\ : std_logic;
SIGNAL \i~5204\ : std_logic;
SIGNAL \i~14534\ : std_logic;
SIGNAL \i~5205\ : std_logic;
SIGNAL \i~14537\ : std_logic;
SIGNAL \i~5292\ : std_logic;
SIGNAL \i~5293\ : std_logic;
SIGNAL \i~14539\ : std_logic;
SIGNAL \i~14540\ : std_logic;
SIGNAL \i~5218\ : std_logic;
SIGNAL \com_ctrl_local[8]\ : std_logic;
SIGNAL \i~5219\ : std_logic;
SIGNAL \i~5214\ : std_logic;
SIGNAL \i~5215\ : std_logic;
SIGNAL \i~5212\ : std_logic;
SIGNAL \i~14547\ : std_logic;
SIGNAL \i~5216\ : std_logic;
SIGNAL \i~5217\ : std_logic;
SIGNAL \i~5213\ : std_logic;
SIGNAL \i~14545\ : std_logic;
SIGNAL \i~14546\ : std_logic;
SIGNAL \i~14541\ : std_logic;
SIGNAL \i~14542\ : std_logic;
SIGNAL \command_3_local[8]\ : std_logic;
SIGNAL \i~4840\ : std_logic;
SIGNAL \command_1_local[8]\ : std_logic;
SIGNAL \i~14543\ : std_logic;
SIGNAL \i~14544\ : std_logic;
SIGNAL \i~5220\ : std_logic;
SIGNAL \i~5221\ : std_logic;
SIGNAL \i~14548\ : std_logic;
SIGNAL \i~5294\ : std_logic;
SIGNAL \i~5295\ : std_logic;
SIGNAL \i~14550\ : std_logic;
SIGNAL \i~14551\ : std_logic;
SIGNAL \i~5296\ : std_logic;
SIGNAL \i~14552\ : std_logic;
SIGNAL \i~14553\ : std_logic;
SIGNAL \i~14556\ : std_logic;
SIGNAL \i~14557\ : std_logic;
SIGNAL \command_3_local[9]\ : std_logic;
SIGNAL \i~4842\ : std_logic;
SIGNAL \command_1_local[9]\ : std_logic;
SIGNAL \i~14554\ : std_logic;
SIGNAL \i~14555\ : std_logic;
SIGNAL \i~5228\ : std_logic;
SIGNAL \i~5229\ : std_logic;
SIGNAL \command_4_local[9]\ : std_logic;
SIGNAL \i~5224\ : std_logic;
SIGNAL \i~5225\ : std_logic;
SIGNAL \com_ctrl_local[9]\ : std_logic;
SIGNAL \i~5226\ : std_logic;
SIGNAL \i~5227\ : std_logic;
SIGNAL \i~5222\ : std_logic;
SIGNAL \i~14558\ : std_logic;
SIGNAL \i~14559\ : std_logic;
SIGNAL \i~14560\ : std_logic;
SIGNAL \i~5223\ : std_logic;
SIGNAL \i~14561\ : std_logic;
SIGNAL \i~5297\ : std_logic;
SIGNAL \i~14569\ : std_logic;
SIGNAL \i~14570\ : std_logic;
SIGNAL \i~14565\ : std_logic;
SIGNAL \i~14566\ : std_logic;
SIGNAL \command_3_local[10]\ : std_logic;
SIGNAL \i~4844\ : std_logic;
SIGNAL \command_1_local[10]\ : std_logic;
SIGNAL \i~14567\ : std_logic;
SIGNAL \i~14568\ : std_logic;
SIGNAL \i~5236\ : std_logic;
SIGNAL \i~5237\ : std_logic;
SIGNAL \i~14571\ : std_logic;
SIGNAL \i~14572\ : std_logic;
SIGNAL \i~14573\ : std_logic;
SIGNAL \com_ctrl_local[10]\ : std_logic;
SIGNAL \i~5234\ : std_logic;
SIGNAL \i~5235\ : std_logic;
SIGNAL \command_4_local[10]\ : std_logic;
SIGNAL \i~5232\ : std_logic;
SIGNAL \i~5233\ : std_logic;
SIGNAL \i~5230\ : std_logic;
SIGNAL \i~5231\ : std_logic;
SIGNAL \i~14574\ : std_logic;
SIGNAL \i~5298\ : std_logic;
SIGNAL \i~5299\ : std_logic;
SIGNAL \i~14564\ : std_logic;
SIGNAL \i~14563\ : std_logic;
SIGNAL \i~14582\ : std_logic;
SIGNAL \i~14583\ : std_logic;
SIGNAL \i~14578\ : std_logic;
SIGNAL \i~14579\ : std_logic;
SIGNAL \command_3_local[11]\ : std_logic;
SIGNAL \i~4846\ : std_logic;
SIGNAL \command_1_local[11]\ : std_logic;
SIGNAL \i~14580\ : std_logic;
SIGNAL \i~14581\ : std_logic;
SIGNAL \i~5244\ : std_logic;
SIGNAL \i~5245\ : std_logic;
SIGNAL \i~14585\ : std_logic;
SIGNAL \i~14586\ : std_logic;
SIGNAL \i~14584\ : std_logic;
SIGNAL \com_ctrl_local[11]\ : std_logic;
SIGNAL \i~5242\ : std_logic;
SIGNAL \i~5243\ : std_logic;
SIGNAL \command_4_local[11]\ : std_logic;
SIGNAL \i~5240\ : std_logic;
SIGNAL \i~5241\ : std_logic;
SIGNAL \i~5238\ : std_logic;
SIGNAL \i~5239\ : std_logic;
SIGNAL \i~14587\ : std_logic;
SIGNAL \i~5300\ : std_logic;
SIGNAL \i~5301\ : std_logic;
SIGNAL \i~14577\ : std_logic;
SIGNAL \i~14576\ : std_logic;
SIGNAL \i~14589\ : std_logic;
SIGNAL \i~14590\ : std_logic;
SIGNAL \i~14595\ : std_logic;
SIGNAL \i~14596\ : std_logic;
SIGNAL \i~14591\ : std_logic;
SIGNAL \i~14592\ : std_logic;
SIGNAL \command_3_local[12]\ : std_logic;
SIGNAL \i~4848\ : std_logic;
SIGNAL \command_1_local[12]\ : std_logic;
SIGNAL \i~14593\ : std_logic;
SIGNAL \i~14594\ : std_logic;
SIGNAL \i~5252\ : std_logic;
SIGNAL \i~5253\ : std_logic;
SIGNAL \i~14597\ : std_logic;
SIGNAL \i~14598\ : std_logic;
SIGNAL \i~14599\ : std_logic;
SIGNAL \com_ctrl_local[12]\ : std_logic;
SIGNAL \i~5250\ : std_logic;
SIGNAL \i~5251\ : std_logic;
SIGNAL \command_0_local[12]\ : std_logic;
SIGNAL \i~5248\ : std_logic;
SIGNAL \i~5249\ : std_logic;
SIGNAL \i~5246\ : std_logic;
SIGNAL \i~5247\ : std_logic;
SIGNAL \i~14600\ : std_logic;
SIGNAL \i~5302\ : std_logic;
SIGNAL \i~5303\ : std_logic;
SIGNAL \i~5304\ : std_logic;
SIGNAL \i~14610\ : std_logic;
SIGNAL \i~14611\ : std_logic;
SIGNAL \i~14612\ : std_logic;
SIGNAL \com_ctrl_local[13]\ : std_logic;
SIGNAL \i~5258\ : std_logic;
SIGNAL \i~5259\ : std_logic;
SIGNAL \command_0_local[13]\ : std_logic;
SIGNAL \i~5256\ : std_logic;
SIGNAL \i~5257\ : std_logic;
SIGNAL \i~5254\ : std_logic;
SIGNAL \i~5255\ : std_logic;
SIGNAL \i~14604\ : std_logic;
SIGNAL \i~14605\ : std_logic;
SIGNAL \i~14608\ : std_logic;
SIGNAL \i~14609\ : std_logic;
SIGNAL \command_3_local[13]\ : std_logic;
SIGNAL \i~4850\ : std_logic;
SIGNAL \command_1_local[13]\ : std_logic;
SIGNAL \i~14606\ : std_logic;
SIGNAL \i~14607\ : std_logic;
SIGNAL \i~5260\ : std_logic;
SIGNAL \i~5261\ : std_logic;
SIGNAL \i~14613\ : std_logic;
SIGNAL \i~5305\ : std_logic;
SIGNAL \i~14603\ : std_logic;
SIGNAL \i~14602\ : std_logic;
SIGNAL \i~14623\ : std_logic;
SIGNAL \i~14624\ : std_logic;
SIGNAL \i~14625\ : std_logic;
SIGNAL \command_0_local[14]\ : std_logic;
SIGNAL \i~5264\ : std_logic;
SIGNAL \i~5265\ : std_logic;
SIGNAL \com_ctrl_local[14]\ : std_logic;
SIGNAL \i~5266\ : std_logic;
SIGNAL \i~5267\ : std_logic;
SIGNAL \i~5262\ : std_logic;
SIGNAL \i~5263\ : std_logic;
SIGNAL \i~14621\ : std_logic;
SIGNAL \i~14622\ : std_logic;
SIGNAL \i~14617\ : std_logic;
SIGNAL \i~14618\ : std_logic;
SIGNAL \command_3_local[14]\ : std_logic;
SIGNAL \i~4852\ : std_logic;
SIGNAL \command_1_local[14]\ : std_logic;
SIGNAL \i~14619\ : std_logic;
SIGNAL \i~14620\ : std_logic;
SIGNAL \i~5268\ : std_logic;
SIGNAL \i~5269\ : std_logic;
SIGNAL \i~14626\ : std_logic;
SIGNAL \i~5306\ : std_logic;
SIGNAL \i~5307\ : std_logic;
SIGNAL \i~14616\ : std_logic;
SIGNAL \i~14615\ : std_logic;
SIGNAL \i~14628\ : std_logic;
SIGNAL \i~14629\ : std_logic;
SIGNAL \i~5308\ : std_logic;
SIGNAL \i~14634\ : std_logic;
SIGNAL \i~14635\ : std_logic;
SIGNAL \i~14630\ : std_logic;
SIGNAL \i~14631\ : std_logic;
SIGNAL \command_3_local[15]\ : std_logic;
SIGNAL \i~4854\ : std_logic;
SIGNAL \command_1_local[15]\ : std_logic;
SIGNAL \i~14632\ : std_logic;
SIGNAL \i~14633\ : std_logic;
SIGNAL \i~5276\ : std_logic;
SIGNAL \i~5277\ : std_logic;
SIGNAL \i~14636\ : std_logic;
SIGNAL \i~14637\ : std_logic;
SIGNAL \i~14638\ : std_logic;
SIGNAL \com_ctrl_local[15]\ : std_logic;
SIGNAL \i~5274\ : std_logic;
SIGNAL \i~5275\ : std_logic;
SIGNAL \i~5272\ : std_logic;
SIGNAL \i~5273\ : std_logic;
SIGNAL \i~5270\ : std_logic;
SIGNAL \i~5271\ : std_logic;
SIGNAL \i~14639\ : std_logic;
SIGNAL \i~5309\ : std_logic;
SIGNAL \dom_id[0]~232\ : std_logic;
SIGNAL \rx_dpr_radr_local[15]~75\ : std_logic;
SIGNAL \rx_dpr_radr_local[16]\ : std_logic;
SIGNAL \com_ctrl_local[16]\ : std_logic;
SIGNAL \i~14691\ : std_logic;
SIGNAL \tx_dpr_wadr_local[0]~74\ : std_logic;
SIGNAL \tx_dpr_wadr_local[16]\ : std_logic;
SIGNAL \i~14645\ : std_logic;
SIGNAL \i~14433\ : std_logic;
SIGNAL \command_2_local[16]\ : std_logic;
SIGNAL \i~14642\ : std_logic;
SIGNAL \command_3_local[16]\ : std_logic;
SIGNAL \command_4_local[16]\ : std_logic;
SIGNAL \i~14643\ : std_logic;
SIGNAL \i~5072\ : std_logic;
SIGNAL \i~5073\ : std_logic;
SIGNAL \i~5070\ : std_logic;
SIGNAL \i~5071\ : std_logic;
SIGNAL \i1166~0\ : std_logic;
SIGNAL \i1166~115\ : std_logic;
SIGNAL \i1166~117\ : std_logic;
SIGNAL \rx_dpr_radr_local[17]\ : std_logic;
SIGNAL \tx_dpr_wadr_local[17]\ : std_logic;
SIGNAL \com_ctrl_local[17]\ : std_logic;
SIGNAL \i~14648\ : std_logic;
SIGNAL \i~14435\ : std_logic;
SIGNAL \command_2_local[17]\ : std_logic;
SIGNAL \i~14646\ : std_logic;
SIGNAL \command_3_local[17]\ : std_logic;
SIGNAL \command_4_local[17]\ : std_logic;
SIGNAL \i~14647\ : std_logic;
SIGNAL \i~5076\ : std_logic;
SIGNAL \i~5077\ : std_logic;
SIGNAL \i~5074\ : std_logic;
SIGNAL \i~5075\ : std_logic;
SIGNAL \command_2_local[18]\ : std_logic;
SIGNAL \i~14649\ : std_logic;
SIGNAL \com_ctrl_local[18]\ : std_logic;
SIGNAL \tx_dpr_wadr_local[18]\ : std_logic;
SIGNAL \i~14651\ : std_logic;
SIGNAL \rx_dpr_radr_local[18]\ : std_logic;
SIGNAL \i~14437\ : std_logic;
SIGNAL \command_3_local[18]\ : std_logic;
SIGNAL \command_4_local[18]\ : std_logic;
SIGNAL \i~14650\ : std_logic;
SIGNAL \command_0_local[18]\ : std_logic;
SIGNAL \i~5080\ : std_logic;
SIGNAL \i~5081\ : std_logic;
SIGNAL \i~5078\ : std_logic;
SIGNAL \i~5079\ : std_logic;
SIGNAL \rx_dpr_radr_local[19]\ : std_logic;
SIGNAL \tx_dpr_wadr_local[19]\ : std_logic;
SIGNAL \com_ctrl_local[19]\ : std_logic;
SIGNAL \i~14654\ : std_logic;
SIGNAL \i~14439\ : std_logic;
SIGNAL \command_2_local[19]\ : std_logic;
SIGNAL \i~14652\ : std_logic;
SIGNAL \command_3_local[19]\ : std_logic;
SIGNAL \command_4_local[19]\ : std_logic;
SIGNAL \i~14653\ : std_logic;
SIGNAL \command_0_local[19]\ : std_logic;
SIGNAL \i~5084\ : std_logic;
SIGNAL \i~5085\ : std_logic;
SIGNAL \i~5082\ : std_logic;
SIGNAL \i~5083\ : std_logic;
SIGNAL \rx_dpr_radr_local[20]\ : std_logic;
SIGNAL \com_ctrl_local[20]\ : std_logic;
SIGNAL \tx_dpr_wadr_local[20]\ : std_logic;
SIGNAL \i~14657\ : std_logic;
SIGNAL \i~14441\ : std_logic;
SIGNAL \command_2_local[20]\ : std_logic;
SIGNAL \i~14655\ : std_logic;
SIGNAL \command_4_local[20]\ : std_logic;
SIGNAL \command_3_local[20]\ : std_logic;
SIGNAL \i~14656\ : std_logic;
SIGNAL \command_1_local[20]\ : std_logic;
SIGNAL \command_0_local[20]\ : std_logic;
SIGNAL \i~5088\ : std_logic;
SIGNAL \i~5089\ : std_logic;
SIGNAL \i~5086\ : std_logic;
SIGNAL \i~5087\ : std_logic;
SIGNAL \command_2_local[21]\ : std_logic;
SIGNAL \i~14658\ : std_logic;
SIGNAL \rx_dpr_radr_local[21]\ : std_logic;
SIGNAL \com_ctrl_local[21]\ : std_logic;
SIGNAL \tx_dpr_wadr_local[21]\ : std_logic;
SIGNAL \i~14660\ : std_logic;
SIGNAL \i~14443\ : std_logic;
SIGNAL \command_3_local[21]\ : std_logic;
SIGNAL \command_4_local[21]\ : std_logic;
SIGNAL \i~14659\ : std_logic;
SIGNAL \command_1_local[21]\ : std_logic;
SIGNAL \command_0_local[21]\ : std_logic;
SIGNAL \i~5092\ : std_logic;
SIGNAL \i~5093\ : std_logic;
SIGNAL \i~5090\ : std_logic;
SIGNAL \i~5091\ : std_logic;
SIGNAL \tx_dpr_wadr_local[22]\ : std_logic;
SIGNAL \com_ctrl_local[22]\ : std_logic;
SIGNAL \i~14663\ : std_logic;
SIGNAL \rx_dpr_radr_local[22]\ : std_logic;
SIGNAL \i~14445\ : std_logic;
SIGNAL \command_2_local[22]\ : std_logic;
SIGNAL \i~14661\ : std_logic;
SIGNAL \command_4_local[22]\ : std_logic;
SIGNAL \command_3_local[22]\ : std_logic;
SIGNAL \i~14662\ : std_logic;
SIGNAL \command_1_local[22]\ : std_logic;
SIGNAL \command_0_local[22]\ : std_logic;
SIGNAL \i~5096\ : std_logic;
SIGNAL \i~5097\ : std_logic;
SIGNAL \i~5094\ : std_logic;
SIGNAL \i~5095\ : std_logic;
SIGNAL \command_2_local[23]\ : std_logic;
SIGNAL \i~14664\ : std_logic;
SIGNAL \rx_dpr_radr_local[23]\ : std_logic;
SIGNAL \com_ctrl_local[23]\ : std_logic;
SIGNAL \tx_dpr_wadr_local[23]\ : std_logic;
SIGNAL \i~14666\ : std_logic;
SIGNAL \i~14447\ : std_logic;
SIGNAL \command_3_local[23]\ : std_logic;
SIGNAL \command_4_local[23]\ : std_logic;
SIGNAL \i~14665\ : std_logic;
SIGNAL \command_1_local[23]\ : std_logic;
SIGNAL \command_0_local[23]\ : std_logic;
SIGNAL \i~5100\ : std_logic;
SIGNAL \i~5101\ : std_logic;
SIGNAL \i~5098\ : std_logic;
SIGNAL \i~5099\ : std_logic;
SIGNAL \i1158~70\ : std_logic;
SIGNAL \i~14667\ : std_logic;
SIGNAL \com_ctrl_local[24]\ : std_logic;
SIGNAL \tx_dpr_wadr_local[24]\ : std_logic;
SIGNAL \i~14669\ : std_logic;
SIGNAL \rx_dpr_radr_local[24]\ : std_logic;
SIGNAL \i~14449\ : std_logic;
SIGNAL \command_4_local[24]\ : std_logic;
SIGNAL \command_3_local[24]\ : std_logic;
SIGNAL \i~14668\ : std_logic;
SIGNAL \command_1_local[24]\ : std_logic;
SIGNAL \i~5104\ : std_logic;
SIGNAL \i~5105\ : std_logic;
SIGNAL \i~5102\ : std_logic;
SIGNAL \i~5103\ : std_logic;
SIGNAL \command_2_local[25]\ : std_logic;
SIGNAL \i~14670\ : std_logic;
SIGNAL \com_ctrl_local[25]\ : std_logic;
SIGNAL \tx_dpr_wadr_local[25]\ : std_logic;
SIGNAL \i~14672\ : std_logic;
SIGNAL \rx_dpr_radr_local[25]\ : std_logic;
SIGNAL \i~14451\ : std_logic;
SIGNAL \command_3_local[25]\ : std_logic;
SIGNAL \command_4_local[25]\ : std_logic;
SIGNAL \i~14671\ : std_logic;
SIGNAL \command_1_local[25]\ : std_logic;
SIGNAL \command_0_local[25]\ : std_logic;
SIGNAL \i~5108\ : std_logic;
SIGNAL \i~5109\ : std_logic;
SIGNAL \i~5106\ : std_logic;
SIGNAL \i~5107\ : std_logic;
SIGNAL \i~14673\ : std_logic;
SIGNAL \rx_dpr_radr_local[26]\ : std_logic;
SIGNAL \tx_dpr_wadr_local[26]\ : std_logic;
SIGNAL \com_ctrl_local[26]\ : std_logic;
SIGNAL \i~14675\ : std_logic;
SIGNAL \i~14453\ : std_logic;
SIGNAL \command_4_local[26]\ : std_logic;
SIGNAL \command_3_local[26]\ : std_logic;
SIGNAL \i~14674\ : std_logic;
SIGNAL \command_1_local[26]\ : std_logic;
SIGNAL \i~5112\ : std_logic;
SIGNAL \i~5113\ : std_logic;
SIGNAL \i~5110\ : std_logic;
SIGNAL \i~5111\ : std_logic;
SIGNAL \command_4_local[27]\ : std_logic;
SIGNAL \command_3_local[27]\ : std_logic;
SIGNAL \i~14677\ : std_logic;
SIGNAL \command_1_local[27]\ : std_logic;
SIGNAL \command_0_local[27]\ : std_logic;
SIGNAL \i~5116\ : std_logic;
SIGNAL \i~5117\ : std_logic;
SIGNAL \i~5114\ : std_logic;
SIGNAL \rx_dpr_radr_local[27]\ : std_logic;
SIGNAL \tx_dpr_wadr_local[27]\ : std_logic;
SIGNAL \com_ctrl_local[27]\ : std_logic;
SIGNAL \i~14678\ : std_logic;
SIGNAL \i~14455\ : std_logic;
SIGNAL \command_2_local[27]\ : std_logic;
SIGNAL \i~14676\ : std_logic;
SIGNAL \i~5115\ : std_logic;
SIGNAL \i1154~69\ : std_logic;
SIGNAL \rx_dpr_radr_local[28]\ : std_logic;
SIGNAL \com_ctrl_local[28]\ : std_logic;
SIGNAL \tx_dpr_wadr_local[28]\ : std_logic;
SIGNAL \i~14681\ : std_logic;
SIGNAL \i~14457\ : std_logic;
SIGNAL \command_4_local[28]\ : std_logic;
SIGNAL \command_3_local[28]\ : std_logic;
SIGNAL \i~14680\ : std_logic;
SIGNAL \command_1_local[28]\ : std_logic;
SIGNAL \i~5120\ : std_logic;
SIGNAL \i~5121\ : std_logic;
SIGNAL \i~5118\ : std_logic;
SIGNAL \i~14679\ : std_logic;
SIGNAL \i~5119\ : std_logic;
SIGNAL \i~14682\ : std_logic;
SIGNAL \rx_dpr_radr_local[29]\ : std_logic;
SIGNAL \com_ctrl_local[29]\ : std_logic;
SIGNAL \tx_dpr_wadr_local[29]\ : std_logic;
SIGNAL \i~14684\ : std_logic;
SIGNAL \i~14459\ : std_logic;
SIGNAL \command_4_local[29]\ : std_logic;
SIGNAL \command_3_local[29]\ : std_logic;
SIGNAL \i~14683\ : std_logic;
SIGNAL \command_1_local[29]\ : std_logic;
SIGNAL \command_0_local[29]\ : std_logic;
SIGNAL \i~5124\ : std_logic;
SIGNAL \i~5125\ : std_logic;
SIGNAL \i~5122\ : std_logic;
SIGNAL \i~5123\ : std_logic;
SIGNAL \i~14685\ : std_logic;
SIGNAL \com_ctrl_local[30]\ : std_logic;
SIGNAL \tx_dpr_wadr_local[30]\ : std_logic;
SIGNAL \i~14687\ : std_logic;
SIGNAL \rx_dpr_radr_local[30]\ : std_logic;
SIGNAL \i~14461\ : std_logic;
SIGNAL \command_3_local[30]\ : std_logic;
SIGNAL \command_4_local[30]\ : std_logic;
SIGNAL \i~14686\ : std_logic;
SIGNAL \command_1_local[30]\ : std_logic;
SIGNAL \i~5128\ : std_logic;
SIGNAL \i~5129\ : std_logic;
SIGNAL \i~5126\ : std_logic;
SIGNAL \i~5127\ : std_logic;
SIGNAL \com_ctrl_local[31]\ : std_logic;
SIGNAL \tx_dpr_wadr_local[31]\ : std_logic;
SIGNAL \i~14690\ : std_logic;
SIGNAL \rx_dpr_radr_local[31]\ : std_logic;
SIGNAL \i~14463\ : std_logic;
SIGNAL \i~14688\ : std_logic;
SIGNAL \command_4_local[31]\ : std_logic;
SIGNAL \command_3_local[31]\ : std_logic;
SIGNAL \i~14689\ : std_logic;
SIGNAL \command_1_local[31]\ : std_logic;
SIGNAL \command_0_local[31]\ : std_logic;
SIGNAL \i~5132\ : std_logic;
SIGNAL \i~5133\ : std_logic;
SIGNAL \i~5130\ : std_logic;
SIGNAL \i~5131\ : std_logic;
SIGNAL \command_2_local[26]~161\ : std_logic;
SIGNAL \i2215~51\ : std_logic;
SIGNAL \i~14644\ : std_logic;
SIGNAL \dom_id[48]~291\ : std_logic;
SIGNAL \dom_id[48]~289\ : std_logic;
SIGNAL \dom_id[0]~114\ : std_logic;
SIGNAL ALT_NOT_ww_RST : std_logic;

COMPONENT version_rom
    PORT (
	reg_address_3 : IN std_logic;
	reg_address_4 : IN std_logic;
	reg_address_5 : IN std_logic;
	reg_address_6 : IN std_logic;
	reg_address_2 : IN std_logic;
	reg_address_7 : IN std_logic;
	reg_address_8 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q_0 : OUT std_logic;
	q_1 : OUT std_logic;
	q_2 : OUT std_logic;
	q_3 : OUT std_logic;
	q_4 : OUT std_logic;
	q_5 : OUT std_logic;
	q_6 : OUT std_logic;
	q_7 : OUT std_logic;
	q_8 : OUT std_logic;
	q_9 : OUT std_logic;
	q_10 : OUT std_logic;
	q_11 : OUT std_logic;
	q_12 : OUT std_logic;
	q_13 : OUT std_logic;
	q_14 : OUT std_logic;
	q_15 : OUT std_logic);
END COMPONENT;

BEGIN

ww_sload_path_15 <= sload_path_15;
ww_sload_path_14 <= sload_path_14;
ww_sload_path_13 <= sload_path_13;
ww_sload_path_12 <= sload_path_12;
ww_sload_path_11 <= sload_path_11;
ww_sload_path_10 <= sload_path_10;
ww_sload_path_9 <= sload_path_9;
ww_sload_path_8 <= sload_path_8;
ww_sload_path_7 <= sload_path_7;
ww_sload_path_6 <= sload_path_6;
ww_sload_path_5 <= sload_path_5;
ww_sload_path_4 <= sload_path_4;
ww_sload_path_3 <= sload_path_3;
ww_sload_path_2 <= sload_path_2;
ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_q_15 <= q_15;
ww_q_14 <= q_14;
ww_q_13 <= q_13;
ww_q_12 <= q_12;
ww_q_11 <= q_11;
ww_q_10 <= q_10;
ww_q_9 <= q_9;
ww_q_8 <= q_8;
ww_q_7 <= q_7;
ww_q_6 <= q_6;
ww_q_5 <= q_5;
ww_q_4 <= q_4;
ww_q_3 <= q_3;
ww_q_2 <= q_2;
ww_q_1 <= q_1;
ww_q_0 <= q_0;
ww_CLK <= CLK;
ww_sload_path_47 <= sload_path_47;
ww_sload_path_46 <= sload_path_46;
ww_sload_path_45 <= sload_path_45;
ww_sload_path_44 <= sload_path_44;
ww_sload_path_43 <= sload_path_43;
ww_sload_path_42 <= sload_path_42;
ww_sload_path_41 <= sload_path_41;
ww_sload_path_40 <= sload_path_40;
ww_sload_path_39 <= sload_path_39;
ww_sload_path_38 <= sload_path_38;
ww_sload_path_37 <= sload_path_37;
ww_sload_path_36 <= sload_path_36;
ww_sload_path_35 <= sload_path_35;
ww_sload_path_34 <= sload_path_34;
ww_sload_path_33 <= sload_path_33;
ww_sload_path_32 <= sload_path_32;
ww_sload_path_31 <= sload_path_31;
ww_sload_path_30 <= sload_path_30;
ww_sload_path_29 <= sload_path_29;
ww_sload_path_28 <= sload_path_28;
ww_sload_path_27 <= sload_path_27;
ww_sload_path_26 <= sload_path_26;
ww_sload_path_25 <= sload_path_25;
ww_sload_path_24 <= sload_path_24;
ww_sload_path_23 <= sload_path_23;
ww_sload_path_22 <= sload_path_22;
ww_sload_path_21 <= sload_path_21;
ww_sload_path_20 <= sload_path_20;
ww_sload_path_19 <= sload_path_19;
ww_sload_path_18 <= sload_path_18;
ww_sload_path_17 <= sload_path_17;
ww_sload_path_16 <= sload_path_16;
ww_sload_path_151 <= sload_path_151;
ww_sload_path_141 <= sload_path_141;
ww_sload_path_131 <= sload_path_131;
ww_sload_path_121 <= sload_path_121;
ww_sload_path_111 <= sload_path_111;
ww_sload_path_101 <= sload_path_101;
ww_sload_path_91 <= sload_path_91;
ww_sload_path_81 <= sload_path_81;
ww_sload_path_71 <= sload_path_71;
ww_sload_path_61 <= sload_path_61;
ww_sload_path_51 <= sload_path_51;
ww_sload_path_48 <= sload_path_48;
ww_sload_path_310 <= sload_path_310;
ww_sload_path_210 <= sload_path_210;
ww_sload_path_110 <= sload_path_110;
ww_sload_path_01 <= sload_path_01;
ww_MASTERHWDATA_0 <= MASTERHWDATA_0;
ww_MASTERHWDATA_1 <= MASTERHWDATA_1;
ww_MASTERHWDATA_2 <= MASTERHWDATA_2;
ww_MASTERHWDATA_3 <= MASTERHWDATA_3;
ww_MASTERHWDATA_4 <= MASTERHWDATA_4;
ww_MASTERHWDATA_5 <= MASTERHWDATA_5;
ww_MASTERHWDATA_6 <= MASTERHWDATA_6;
ww_MASTERHWDATA_7 <= MASTERHWDATA_7;
ww_MASTERHWDATA_8 <= MASTERHWDATA_8;
ww_MASTERHWDATA_9 <= MASTERHWDATA_9;
ww_MASTERHWDATA_10 <= MASTERHWDATA_10;
ww_MASTERHWDATA_11 <= MASTERHWDATA_11;
ww_MASTERHWDATA_12 <= MASTERHWDATA_12;
ww_MASTERHWDATA_13 <= MASTERHWDATA_13;
ww_MASTERHWDATA_14 <= MASTERHWDATA_14;
ww_MASTERHWDATA_15 <= MASTERHWDATA_15;
ww_MASTERHWDATA_16 <= MASTERHWDATA_16;
ww_MASTERHWDATA_17 <= MASTERHWDATA_17;
ww_MASTERHWDATA_18 <= MASTERHWDATA_18;
ww_MASTERHWDATA_19 <= MASTERHWDATA_19;
ww_MASTERHWDATA_20 <= MASTERHWDATA_20;
ww_MASTERHWDATA_21 <= MASTERHWDATA_21;
ww_MASTERHWDATA_22 <= MASTERHWDATA_22;
ww_MASTERHWDATA_23 <= MASTERHWDATA_23;
ww_MASTERHWDATA_24 <= MASTERHWDATA_24;
ww_MASTERHWDATA_25 <= MASTERHWDATA_25;
ww_MASTERHWDATA_26 <= MASTERHWDATA_26;
ww_MASTERHWDATA_27 <= MASTERHWDATA_27;
ww_MASTERHWDATA_28 <= MASTERHWDATA_28;
ww_MASTERHWDATA_29 <= MASTERHWDATA_29;
ww_MASTERHWDATA_30 <= MASTERHWDATA_30;
ww_MASTERHWDATA_31 <= MASTERHWDATA_31;
ww_RST <= RST;
ww_reg_address_3 <= reg_address_3;
ww_reg_address_4 <= reg_address_4;
ww_reg_address_5 <= reg_address_5;
ww_reg_address_6 <= reg_address_6;
ww_reg_address_2 <= reg_address_2;
ww_comres_rcvd <= comres_rcvd;
ww_reg_address_12 <= reg_address_12;
ww_reg_address_13 <= reg_address_13;
ww_reg_address_14 <= reg_address_14;
ww_q_01 <= q_01;
ww_reg_address_18 <= reg_address_18;
ww_reg_address_19 <= reg_address_19;
ww_q_02 <= q_02;
ww_atwd0_timestamp_32 <= atwd0_timestamp_32;
ww_atwd0_timestamp_0 <= atwd0_timestamp_0;
ww_multiSPEcnt_0 <= multiSPEcnt_0;
ww_atwd1_timestamp_0 <= atwd1_timestamp_0;
ww_oneSPEcnt_0 <= oneSPEcnt_0;
ww_atwd1_timestamp_32 <= atwd1_timestamp_32;
ww_multiSPEcnt_01 <= multiSPEcnt_01;
ww_oneSPEcnt_01 <= oneSPEcnt_01;
ww_done <= done;
ww_op_6 <= op_6;
ww_inst16_0 <= inst16_0;
ww_q_03 <= q_03;
ww_q_16 <= q_16;
ww_atwd0_timestamp_33 <= atwd0_timestamp_33;
ww_atwd0_timestamp_1 <= atwd0_timestamp_1;
ww_multiSPEcnt_1 <= multiSPEcnt_1;
ww_atwd1_timestamp_1 <= atwd1_timestamp_1;
ww_oneSPEcnt_1 <= oneSPEcnt_1;
ww_oneSPEcnt_11 <= oneSPEcnt_11;
ww_inst50 <= inst50;
ww_atwd1_timestamp_33 <= atwd1_timestamp_33;
ww_multiSPEcnt_11 <= multiSPEcnt_11;
ww_inst16_1 <= inst16_1;
ww_q_17 <= q_17;
ww_q_18 <= q_18;
ww_q_21 <= q_21;
ww_q_22 <= q_22;
ww_atwd0_timestamp_34 <= atwd0_timestamp_34;
ww_atwd0_timestamp_2 <= atwd0_timestamp_2;
ww_multiSPEcnt_2 <= multiSPEcnt_2;
ww_atwd1_timestamp_2 <= atwd1_timestamp_2;
ww_oneSPEcnt_2 <= oneSPEcnt_2;
ww_oneSPEcnt_21 <= oneSPEcnt_21;
ww_reboot_gnt <= reboot_gnt;
ww_atwd1_timestamp_34 <= atwd1_timestamp_34;
ww_multiSPEcnt_21 <= multiSPEcnt_21;
ww_inst16_2 <= inst16_2;
ww_q_23 <= q_23;
ww_q_31 <= q_31;
ww_atwd0_timestamp_35 <= atwd0_timestamp_35;
ww_atwd0_timestamp_3 <= atwd0_timestamp_3;
ww_multiSPEcnt_3 <= multiSPEcnt_3;
ww_atwd1_timestamp_3 <= atwd1_timestamp_3;
ww_oneSPEcnt_3 <= oneSPEcnt_3;
ww_oneSPEcnt_31 <= oneSPEcnt_31;
ww_last_node_0 <= last_node_0;
ww_atwd1_timestamp_35 <= atwd1_timestamp_35;
ww_multiSPEcnt_31 <= multiSPEcnt_31;
ww_inst16_3 <= inst16_3;
ww_q_32 <= q_32;
ww_q_33 <= q_33;
ww_q_41 <= q_41;
ww_q_42 <= q_42;
ww_atwd0_timestamp_36 <= atwd0_timestamp_36;
ww_atwd0_timestamp_4 <= atwd0_timestamp_4;
ww_multiSPEcnt_4 <= multiSPEcnt_4;
ww_atwd1_timestamp_4 <= atwd1_timestamp_4;
ww_oneSPEcnt_4 <= oneSPEcnt_4;
ww_oneSPEcnt_41 <= oneSPEcnt_41;
ww_atwd1_timestamp_36 <= atwd1_timestamp_36;
ww_multiSPEcnt_41 <= multiSPEcnt_41;
ww_inst16_4 <= inst16_4;
ww_q_43 <= q_43;
ww_q_51 <= q_51;
ww_atwd0_timestamp_37 <= atwd0_timestamp_37;
ww_atwd0_timestamp_5 <= atwd0_timestamp_5;
ww_multiSPEcnt_5 <= multiSPEcnt_5;
ww_atwd1_timestamp_5 <= atwd1_timestamp_5;
ww_oneSPEcnt_5 <= oneSPEcnt_5;
ww_oneSPEcnt_51 <= oneSPEcnt_51;
ww_op_61 <= op_61;
ww_atwd1_timestamp_37 <= atwd1_timestamp_37;
ww_multiSPEcnt_51 <= multiSPEcnt_51;
ww_inst16_5 <= inst16_5;
ww_q_52 <= q_52;
ww_q_53 <= q_53;
ww_q_61 <= q_61;
ww_q_62 <= q_62;
ww_atwd0_timestamp_38 <= atwd0_timestamp_38;
ww_atwd0_timestamp_6 <= atwd0_timestamp_6;
ww_multiSPEcnt_6 <= multiSPEcnt_6;
ww_atwd1_timestamp_6 <= atwd1_timestamp_6;
ww_oneSPEcnt_6 <= oneSPEcnt_6;
ww_oneSPEcnt_61 <= oneSPEcnt_61;
ww_com_avail <= com_avail;
ww_atwd1_timestamp_38 <= atwd1_timestamp_38;
ww_multiSPEcnt_61 <= multiSPEcnt_61;
ww_inst16_6 <= inst16_6;
ww_q_63 <= q_63;
ww_q_71 <= q_71;
ww_atwd0_timestamp_39 <= atwd0_timestamp_39;
ww_atwd0_timestamp_7 <= atwd0_timestamp_7;
ww_multiSPEcnt_7 <= multiSPEcnt_7;
ww_atwd1_timestamp_7 <= atwd1_timestamp_7;
ww_oneSPEcnt_7 <= oneSPEcnt_7;
ww_oneSPEcnt_71 <= oneSPEcnt_71;
ww_inst16_7 <= inst16_7;
ww_atwd1_timestamp_39 <= atwd1_timestamp_39;
ww_multiSPEcnt_71 <= multiSPEcnt_71;
ww_q_72 <= q_72;
ww_q_73 <= q_73;
ww_q_81 <= q_81;
ww_q_82 <= q_82;
ww_FF_down_a <= FF_down_a;
ww_atwd0_timestamp_40 <= atwd0_timestamp_40;
ww_atwd0_timestamp_8 <= atwd0_timestamp_8;
ww_multiSPEcnt_8 <= multiSPEcnt_8;
ww_done1 <= done1;
ww_atwd1_timestamp_40 <= atwd1_timestamp_40;
ww_oneSPEcnt_8 <= oneSPEcnt_8;
ww_oneSPEcnt_81 <= oneSPEcnt_81;
ww_atwd1_timestamp_8 <= atwd1_timestamp_8;
ww_inst16_8 <= inst16_8;
ww_multiSPEcnt_81 <= multiSPEcnt_81;
ww_q_83 <= q_83;
ww_q_91 <= q_91;
ww_FF_down_abar <= FF_down_abar;
ww_atwd0_timestamp_41 <= atwd0_timestamp_41;
ww_atwd0_timestamp_9 <= atwd0_timestamp_9;
ww_multiSPEcnt_9 <= multiSPEcnt_9;
ww_atwd1_timestamp_9 <= atwd1_timestamp_9;
ww_oneSPEcnt_9 <= oneSPEcnt_9;
ww_oneSPEcnt_91 <= oneSPEcnt_91;
ww_inst16_9 <= inst16_9;
ww_atwd1_timestamp_41 <= atwd1_timestamp_41;
ww_multiSPEcnt_91 <= multiSPEcnt_91;
ww_q_92 <= q_92;
ww_q_93 <= q_93;
ww_q_101 <= q_101;
ww_q_102 <= q_102;
ww_FF_down_b <= FF_down_b;
ww_atwd0_timestamp_42 <= atwd0_timestamp_42;
ww_atwd0_timestamp_10 <= atwd0_timestamp_10;
ww_multiSPEcnt_10 <= multiSPEcnt_10;
ww_atwd1_timestamp_10 <= atwd1_timestamp_10;
ww_oneSPEcnt_10 <= oneSPEcnt_10;
ww_oneSPEcnt_101 <= oneSPEcnt_101;
ww_inst16_10 <= inst16_10;
ww_atwd1_timestamp_42 <= atwd1_timestamp_42;
ww_multiSPEcnt_101 <= multiSPEcnt_101;
ww_q_103 <= q_103;
ww_q_111 <= q_111;
ww_FF_down_bbar <= FF_down_bbar;
ww_atwd0_timestamp_43 <= atwd0_timestamp_43;
ww_atwd0_timestamp_11 <= atwd0_timestamp_11;
ww_multiSPEcnt_111 <= multiSPEcnt_111;
ww_atwd1_timestamp_11 <= atwd1_timestamp_11;
ww_oneSPEcnt_111 <= oneSPEcnt_111;
ww_oneSPEcnt_112 <= oneSPEcnt_112;
ww_inst16_11 <= inst16_11;
ww_atwd1_timestamp_43 <= atwd1_timestamp_43;
ww_multiSPEcnt_112 <= multiSPEcnt_112;
ww_q_112 <= q_112;
ww_q_113 <= q_113;
ww_q_121 <= q_121;
ww_q_122 <= q_122;
ww_FF_up_a <= FF_up_a;
ww_atwd0_timestamp_44 <= atwd0_timestamp_44;
ww_atwd0_timestamp_12 <= atwd0_timestamp_12;
ww_multiSPEcnt_12 <= multiSPEcnt_12;
ww_atwd1_timestamp_12 <= atwd1_timestamp_12;
ww_oneSPEcnt_12 <= oneSPEcnt_12;
ww_oneSPEcnt_121 <= oneSPEcnt_121;
ww_inst16_12 <= inst16_12;
ww_atwd1_timestamp_44 <= atwd1_timestamp_44;
ww_multiSPEcnt_121 <= multiSPEcnt_121;
ww_q_123 <= q_123;
ww_q_131 <= q_131;
ww_FF_up_abar <= FF_up_abar;
ww_atwd0_timestamp_45 <= atwd0_timestamp_45;
ww_atwd0_timestamp_13 <= atwd0_timestamp_13;
ww_multiSPEcnt_13 <= multiSPEcnt_13;
ww_atwd1_timestamp_13 <= atwd1_timestamp_13;
ww_oneSPEcnt_13 <= oneSPEcnt_13;
ww_oneSPEcnt_131 <= oneSPEcnt_131;
ww_inst16_13 <= inst16_13;
ww_atwd1_timestamp_45 <= atwd1_timestamp_45;
ww_multiSPEcnt_131 <= multiSPEcnt_131;
ww_q_132 <= q_132;
ww_q_133 <= q_133;
ww_q_141 <= q_141;
ww_q_142 <= q_142;
ww_FF_up_b <= FF_up_b;
ww_atwd0_timestamp_46 <= atwd0_timestamp_46;
ww_atwd0_timestamp_14 <= atwd0_timestamp_14;
ww_multiSPEcnt_14 <= multiSPEcnt_14;
ww_atwd1_timestamp_14 <= atwd1_timestamp_14;
ww_oneSPEcnt_14 <= oneSPEcnt_14;
ww_oneSPEcnt_141 <= oneSPEcnt_141;
ww_inst16_14 <= inst16_14;
ww_atwd1_timestamp_46 <= atwd1_timestamp_46;
ww_multiSPEcnt_141 <= multiSPEcnt_141;
ww_q_143 <= q_143;
ww_q_151 <= q_151;
ww_FF_up_bbar <= FF_up_bbar;
ww_atwd0_timestamp_47 <= atwd0_timestamp_47;
ww_atwd0_timestamp_15 <= atwd0_timestamp_15;
ww_multiSPEcnt_15 <= multiSPEcnt_15;
ww_atwd1_timestamp_15 <= atwd1_timestamp_15;
ww_oneSPEcnt_15 <= oneSPEcnt_15;
ww_oneSPEcnt_151 <= oneSPEcnt_151;
ww_inst16_15 <= inst16_15;
ww_atwd1_timestamp_47 <= atwd1_timestamp_47;
ww_multiSPEcnt_151 <= multiSPEcnt_151;
ww_q_152 <= q_152;
ww_q_153 <= q_153;
ww_atwd1_timestamp_16 <= atwd1_timestamp_16;
ww_atwd0_timestamp_16 <= atwd0_timestamp_16;
ww_atwd1_timestamp_17 <= atwd1_timestamp_17;
ww_atwd0_timestamp_17 <= atwd0_timestamp_17;
ww_atwd1_timestamp_18 <= atwd1_timestamp_18;
ww_atwd0_timestamp_18 <= atwd0_timestamp_18;
ww_atwd1_timestamp_19 <= atwd1_timestamp_19;
ww_atwd0_timestamp_19 <= atwd0_timestamp_19;
ww_atwd1_timestamp_20 <= atwd1_timestamp_20;
ww_atwd0_timestamp_20 <= atwd0_timestamp_20;
ww_atwd1_timestamp_21 <= atwd1_timestamp_21;
ww_atwd0_timestamp_21 <= atwd0_timestamp_21;
ww_atwd1_timestamp_22 <= atwd1_timestamp_22;
ww_atwd0_timestamp_22 <= atwd0_timestamp_22;
ww_atwd1_timestamp_23 <= atwd1_timestamp_23;
ww_atwd0_timestamp_23 <= atwd0_timestamp_23;
ww_atwd1_timestamp_24 <= atwd1_timestamp_24;
ww_atwd0_timestamp_24 <= atwd0_timestamp_24;
ww_atwd1_timestamp_25 <= atwd1_timestamp_25;
ww_atwd0_timestamp_25 <= atwd0_timestamp_25;
ww_atwd1_timestamp_26 <= atwd1_timestamp_26;
ww_atwd0_timestamp_26 <= atwd0_timestamp_26;
ww_atwd1_timestamp_27 <= atwd1_timestamp_27;
ww_atwd0_timestamp_27 <= atwd0_timestamp_27;
ww_atwd1_timestamp_28 <= atwd1_timestamp_28;
ww_atwd0_timestamp_28 <= atwd0_timestamp_28;
ww_atwd1_timestamp_29 <= atwd1_timestamp_29;
ww_atwd0_timestamp_29 <= atwd0_timestamp_29;
ww_atwd1_timestamp_30 <= atwd1_timestamp_30;
ww_atwd0_timestamp_30 <= atwd0_timestamp_30;
ww_atwd1_timestamp_31 <= atwd1_timestamp_31;
ww_atwd0_timestamp_31 <= atwd0_timestamp_31;
ww_reg_enable <= reg_enable;
ww_reg_write <= reg_write;
ww_reg_address_15 <= reg_address_15;
ww_reg_address_7 <= reg_address_7;
ww_reg_address_8 <= reg_address_8;
ww_done2 <= done2;
ww_COINC_DOWN_A <= COINC_DOWN_A;
ww_COINC_DOWN_ABAR <= COINC_DOWN_ABAR;
ww_COINC_DOWN_B <= COINC_DOWN_B;
ww_COINC_DOWN_BBAR <= COINC_DOWN_BBAR;
ww_COINC_UP_A <= COINC_UP_A;
ww_COINC_UP_ABAR <= COINC_UP_ABAR;
ww_COINC_UP_B <= COINC_UP_B;
ww_COINC_UP_BBAR <= COINC_UP_BBAR;
ww_FL_ATTN <= FL_ATTN;
ww_FL_TDO <= FL_TDO;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
command_2_local_26 <= ww_command_2_local_26;
com_ctrl_local_2 <= ww_com_ctrl_local_2;
reg_rdata_0 <= ww_reg_rdata_0;
reg_rdata_1 <= ww_reg_rdata_1;
reg_rdata_2 <= ww_reg_rdata_2;
reg_rdata_3 <= ww_reg_rdata_3;
reg_rdata_4 <= ww_reg_rdata_4;
reg_rdata_5 <= ww_reg_rdata_5;
reg_rdata_6 <= ww_reg_rdata_6;
reg_rdata_7 <= ww_reg_rdata_7;
reg_rdata_8 <= ww_reg_rdata_8;
reg_rdata_9 <= ww_reg_rdata_9;
reg_rdata_10 <= ww_reg_rdata_10;
reg_rdata_11 <= ww_reg_rdata_11;
reg_rdata_12 <= ww_reg_rdata_12;
reg_rdata_13 <= ww_reg_rdata_13;
reg_rdata_14 <= ww_reg_rdata_14;
reg_rdata_15 <= ww_reg_rdata_15;
reg_rdata_16 <= ww_reg_rdata_16;
reg_rdata_17 <= ww_reg_rdata_17;
reg_rdata_18 <= ww_reg_rdata_18;
reg_rdata_19 <= ww_reg_rdata_19;
reg_rdata_20 <= ww_reg_rdata_20;
reg_rdata_21 <= ww_reg_rdata_21;
reg_rdata_22 <= ww_reg_rdata_22;
reg_rdata_23 <= ww_reg_rdata_23;
reg_rdata_24 <= ww_reg_rdata_24;
reg_rdata_25 <= ww_reg_rdata_25;
reg_rdata_26 <= ww_reg_rdata_26;
reg_rdata_27 <= ww_reg_rdata_27;
reg_rdata_28 <= ww_reg_rdata_28;
reg_rdata_29 <= ww_reg_rdata_29;
reg_rdata_30 <= ww_reg_rdata_30;
reg_rdata_31 <= ww_reg_rdata_31;
command_2_local_12 <= ww_command_2_local_12;
command_2_local_13 <= ww_command_2_local_13;
command_2_local_14 <= ww_command_2_local_14;
command_2_local_15 <= ww_command_2_local_15;
command_2_local_28 <= ww_command_2_local_28;
command_2_local_31 <= ww_command_2_local_31;
command_2_local_29 <= ww_command_2_local_29;
command_2_local_30 <= ww_command_2_local_30;
i3329 <= ww_i3329;
rx_dpr_radr_local_0 <= ww_rx_dpr_radr_local_0;
command_2_local_0 <= ww_command_2_local_0;
command_4_local_0 <= ww_command_4_local_0;
command_0_local_0 <= ww_command_0_local_0;
tx_dpr_wadr_local_0 <= ww_tx_dpr_wadr_local_0;
rx_dpr_radr_local_1 <= ww_rx_dpr_radr_local_1;
command_2_local_1 <= ww_command_2_local_1;
tx_dpr_wadr_local_1 <= ww_tx_dpr_wadr_local_1;
command_0_local_1 <= ww_command_0_local_1;
command_4_local_1 <= ww_command_4_local_1;
rx_dpr_radr_local_2 <= ww_rx_dpr_radr_local_2;
tx_dpr_wadr_local_2 <= ww_tx_dpr_wadr_local_2;
command_0_local_2 <= ww_command_0_local_2;
command_4_local_2 <= ww_command_4_local_2;
rx_dpr_radr_local_3 <= ww_rx_dpr_radr_local_3;
tx_dpr_wadr_local_3 <= ww_tx_dpr_wadr_local_3;
command_0_local_3 <= ww_command_0_local_3;
command_4_local_3 <= ww_command_4_local_3;
rx_dpr_radr_local_4 <= ww_rx_dpr_radr_local_4;
tx_dpr_wadr_local_4 <= ww_tx_dpr_wadr_local_4;
rx_dpr_radr_local_5 <= ww_rx_dpr_radr_local_5;
tx_dpr_wadr_local_5 <= ww_tx_dpr_wadr_local_5;
rx_dpr_radr_local_6 <= ww_rx_dpr_radr_local_6;
tx_dpr_wadr_local_6 <= ww_tx_dpr_wadr_local_6;
rx_dpr_radr_local_7 <= ww_rx_dpr_radr_local_7;
tx_dpr_wadr_local_7 <= ww_tx_dpr_wadr_local_7;
command_2_local_8 <= ww_command_2_local_8;
rx_dpr_radr_local_8 <= ww_rx_dpr_radr_local_8;
command_4_local_8 <= ww_command_4_local_8;
tx_dpr_wadr_local_8 <= ww_tx_dpr_wadr_local_8;
command_0_local_8 <= ww_command_0_local_8;
command_2_local_9 <= ww_command_2_local_9;
rx_dpr_radr_local_9 <= ww_rx_dpr_radr_local_9;
tx_dpr_wadr_local_9 <= ww_tx_dpr_wadr_local_9;
command_0_local_9 <= ww_command_0_local_9;
command_2_local_10 <= ww_command_2_local_10;
rx_dpr_radr_local_10 <= ww_rx_dpr_radr_local_10;
tx_dpr_wadr_local_10 <= ww_tx_dpr_wadr_local_10;
command_0_local_10 <= ww_command_0_local_10;
command_2_local_11 <= ww_command_2_local_11;
rx_dpr_radr_local_11 <= ww_rx_dpr_radr_local_11;
tx_dpr_wadr_local_11 <= ww_tx_dpr_wadr_local_11;
command_0_local_11 <= ww_command_0_local_11;
rx_dpr_radr_local_12 <= ww_rx_dpr_radr_local_12;
tx_dpr_wadr_local_12 <= ww_tx_dpr_wadr_local_12;
command_4_local_12 <= ww_command_4_local_12;
rx_dpr_radr_local_13 <= ww_rx_dpr_radr_local_13;
tx_dpr_wadr_local_13 <= ww_tx_dpr_wadr_local_13;
command_4_local_13 <= ww_command_4_local_13;
rx_dpr_radr_local_14 <= ww_rx_dpr_radr_local_14;
tx_dpr_wadr_local_14 <= ww_tx_dpr_wadr_local_14;
command_4_local_14 <= ww_command_4_local_14;
rx_dpr_radr_local_15 <= ww_rx_dpr_radr_local_15;
tx_dpr_wadr_local_15 <= ww_tx_dpr_wadr_local_15;
command_0_local_15 <= ww_command_0_local_15;
command_4_local_15 <= ww_command_4_local_15;
i <= ww_i;
command_1_local_16 <= ww_command_1_local_16;
command_0_local_16 <= ww_command_0_local_16;
command_1_local_17 <= ww_command_1_local_17;
command_0_local_17 <= ww_command_0_local_17;
command_1_local_18 <= ww_command_1_local_18;
command_1_local_19 <= ww_command_1_local_19;
command_2_local_24 <= ww_command_2_local_24;
command_0_local_24 <= ww_command_0_local_24;
command_0_local_26 <= ww_command_0_local_26;
command_0_local_28 <= ww_command_0_local_28;
command_0_local_30 <= ww_command_0_local_30;
i33291 <= ww_i33291;
i3335 <= ww_i3335;
dom_id_48 <= ww_dom_id_48;
i33351 <= ww_i33351;
tx_pack_rdy <= ww_tx_pack_rdy;
i3342 <= ww_i3342;
rx_dpr_radr_stb <= ww_rx_dpr_radr_stb;
dom_id_481 <= ww_dom_id_481;
dom_id_0 <= ww_dom_id_0;
dom_id_1 <= ww_dom_id_1;
dom_id_2 <= ww_dom_id_2;
dom_id_3 <= ww_dom_id_3;
dom_id_4 <= ww_dom_id_4;
dom_id_5 <= ww_dom_id_5;
dom_id_6 <= ww_dom_id_6;
dom_id_7 <= ww_dom_id_7;
dom_id_8 <= ww_dom_id_8;
dom_id_9 <= ww_dom_id_9;
dom_id_10 <= ww_dom_id_10;
dom_id_11 <= ww_dom_id_11;
dom_id_12 <= ww_dom_id_12;
dom_id_13 <= ww_dom_id_13;
dom_id_14 <= ww_dom_id_14;
dom_id_15 <= ww_dom_id_15;
dom_id_16 <= ww_dom_id_16;
dom_id_17 <= ww_dom_id_17;
dom_id_18 <= ww_dom_id_18;
dom_id_19 <= ww_dom_id_19;
dom_id_20 <= ww_dom_id_20;
dom_id_21 <= ww_dom_id_21;
dom_id_22 <= ww_dom_id_22;
dom_id_23 <= ww_dom_id_23;
dom_id_24 <= ww_dom_id_24;
dom_id_25 <= ww_dom_id_25;
dom_id_26 <= ww_dom_id_26;
dom_id_27 <= ww_dom_id_27;
dom_id_28 <= ww_dom_id_28;
dom_id_29 <= ww_dom_id_29;
dom_id_30 <= ww_dom_id_30;
dom_id_31 <= ww_dom_id_31;
dom_id_32 <= ww_dom_id_32;
dom_id_33 <= ww_dom_id_33;
dom_id_34 <= ww_dom_id_34;
dom_id_35 <= ww_dom_id_35;
dom_id_36 <= ww_dom_id_36;
dom_id_37 <= ww_dom_id_37;
dom_id_38 <= ww_dom_id_38;
dom_id_39 <= ww_dom_id_39;
dom_id_40 <= ww_dom_id_40;
dom_id_41 <= ww_dom_id_41;
dom_id_42 <= ww_dom_id_42;
dom_id_43 <= ww_dom_id_43;
dom_id_44 <= ww_dom_id_44;
dom_id_45 <= ww_dom_id_45;
dom_id_46 <= ww_dom_id_46;
dom_id_47 <= ww_dom_id_47;
ALT_NOT_ww_RST <= NOT ww_RST;
inst_version_rom : version_rom
PORT MAP (
	reg_address_3 => ww_reg_address_3,
	reg_address_4 => ww_reg_address_4,
	reg_address_5 => ww_reg_address_5,
	reg_address_6 => ww_reg_address_6,
	reg_address_2 => ww_reg_address_2,
	reg_address_7 => ww_reg_address_7,
	reg_address_8 => ww_reg_address_8,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	q_0 => \srom|q[0]\,
	q_1 => \srom|q[1]\,
	q_2 => \srom|q[2]\,
	q_3 => \srom|q[3]\,
	q_4 => \srom|q[4]\,
	q_5 => \srom|q[5]\,
	q_6 => \srom|q[6]\,
	q_7 => \srom|q[7]\,
	q_8 => \srom|q[8]\,
	q_9 => \srom|q[9]\,
	q_10 => \srom|q[10]\,
	q_11 => \srom|q[11]\,
	q_12 => \srom|q[12]\,
	q_13 => \srom|q[13]\,
	q_14 => \srom|q[14]\,
	q_15 => \srom|q[15]\);

\command_2_local[26]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_2_local_26 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_2_local[26]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_26,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_2_local[26]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_2_local_26);

\com_ctrl_local[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- com_ctrl_local_2 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \com_ctrl_local[2]~124\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_2,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \com_ctrl_local[2]~124\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_com_ctrl_local_2);

\reg_rdata[0]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_rdata_0 = DFFE(\i~14465\ # \i~14464\ # \i~5279\ & \i1166~109\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFEA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14465\,
	datab => \i~5279\,
	datac => \i1166~109\,
	datad => \i~14464\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_rdata_0);

\reg_rdata[1]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_rdata_1 = DFFE(\i~14474\ # \i~14475\ # \i1166~109\ & \i~5281\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEFC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i1166~109\,
	datab => \i~14474\,
	datac => \i~14475\,
	datad => \i~5281\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_rdata_1);

\reg_rdata[2]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_rdata_2 = DFFE(\i~14483\ # \i~14484\ # \i1166~109\ & \i~5283\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEEE",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14483\,
	datab => \i~14484\,
	datac => \i1166~109\,
	datad => \i~5283\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_rdata_2);

\reg_rdata[3]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_rdata_3 = DFFE(\i~14492\ # \i~14493\ # \i1166~109\ & \i~5285\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEEE",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14492\,
	datab => \i~14493\,
	datac => \i1166~109\,
	datad => \i~5285\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_rdata_3);

\reg_rdata[4]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_rdata_4 = DFFE(\i~14502\ # \i~14501\ # \i1166~109\ & \i~5287\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEEE",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14502\,
	datab => \i~14501\,
	datac => \i1166~109\,
	datad => \i~5287\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_rdata_4);

\reg_rdata[5]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_rdata_5 = DFFE(\i~14510\ # \i~14511\ # \i1166~109\ & \i~5289\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEEE",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14510\,
	datab => \i~14511\,
	datac => \i1166~109\,
	datad => \i~5289\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_rdata_5);

\reg_rdata[6]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_rdata_6 = DFFE(\i~14519\ # \i~14520\ # \i1166~109\ & \i~5291\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEEE",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14519\,
	datab => \i~14520\,
	datac => \i1166~109\,
	datad => \i~5291\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_rdata_6);

\reg_rdata[7]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_rdata_7 = DFFE(\i~14528\ # \i~14529\ # \i1166~109\ & \i~5293\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEFA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14528\,
	datab => \i1166~109\,
	datac => \i~14529\,
	datad => \i~5293\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_rdata_7);

\reg_rdata[8]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_rdata_8 = DFFE(\i~14539\ # \i~14540\ # \i1166~109\ & \i~5295\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEEE",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14539\,
	datab => \i~14540\,
	datac => \i1166~109\,
	datad => \i~5295\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_rdata_8);

\reg_rdata[9]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_rdata_9 = DFFE(\i~14550\ # \i~14551\ # \i1166~109\ & \i~5297\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEFC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i1166~109\,
	datab => \i~14550\,
	datac => \i~14551\,
	datad => \i~5297\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_rdata_9);

\reg_rdata[10]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_rdata_10 = DFFE(\i~14564\ # \i~14563\ # \i~5299\ & \i1166~109\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFEC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5299\,
	datab => \i~14564\,
	datac => \i1166~109\,
	datad => \i~14563\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_rdata_10);

\reg_rdata[11]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_rdata_11 = DFFE(\i~14577\ # \i~14576\ # \i~5301\ & \i1166~109\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFEC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5301\,
	datab => \i~14577\,
	datac => \i1166~109\,
	datad => \i~14576\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_rdata_11);

\reg_rdata[12]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_rdata_12 = DFFE(\i~14589\ # \i~14590\ # \i1166~109\ & \i~5303\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEEE",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14589\,
	datab => \i~14590\,
	datac => \i1166~109\,
	datad => \i~5303\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_rdata_12);

\reg_rdata[13]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_rdata_13 = DFFE(\i~14603\ # \i~14602\ # \i~5305\ & \i1166~109\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFEC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5305\,
	datab => \i~14603\,
	datac => \i1166~109\,
	datad => \i~14602\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_rdata_13);

\reg_rdata[14]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_rdata_14 = DFFE(\i~14616\ # \i~14615\ # \i~5307\ & \i1166~109\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFEC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5307\,
	datab => \i~14616\,
	datac => \i1166~109\,
	datad => \i~14615\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_rdata_14);

\reg_rdata[15]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_rdata_15 = DFFE(\i~14628\ # \i~14629\ # \i1166~109\ & \i~5309\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEFC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i1166~109\,
	datab => \i~14628\,
	datac => \i~14629\,
	datad => \i~5309\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_rdata_15);

\reg_rdata[16]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_rdata_16 = DFFE(\i1166~0\ & (\i1166~117\ # !reg_address_2 & \i~5071\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F040",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datab => \i~5071\,
	datac => \i1166~0\,
	datad => \i1166~117\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_rdata_16);

\reg_rdata[17]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_rdata_17 = DFFE(i & \i1166~109\ & !reg_address_2 & \i~5075\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0800",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_i,
	datab => \i1166~109\,
	datac => ww_reg_address_2,
	datad => \i~5075\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_rdata_17);

\reg_rdata[18]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_rdata_18 = DFFE(i & \i1166~109\ & !reg_address_2 & \i~5079\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0800",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_i,
	datab => \i1166~109\,
	datac => ww_reg_address_2,
	datad => \i~5079\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_rdata_18);

\reg_rdata[19]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_rdata_19 = DFFE(\i1166~109\ & i & !reg_address_2 & \i~5083\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0800",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i1166~109\,
	datab => ww_i,
	datac => ww_reg_address_2,
	datad => \i~5083\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_rdata_19);

\reg_rdata[20]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_rdata_20 = DFFE(i & \i1166~109\ & !reg_address_2 & \i~5087\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0800",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_i,
	datab => \i1166~109\,
	datac => ww_reg_address_2,
	datad => \i~5087\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_rdata_20);

\reg_rdata[21]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_rdata_21 = DFFE(i & \i1166~109\ & \i~5091\ & !reg_address_2, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0080",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_i,
	datab => \i1166~109\,
	datac => \i~5091\,
	datad => ww_reg_address_2,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_rdata_21);

\reg_rdata[22]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_rdata_22 = DFFE(i & \i1166~109\ & !reg_address_2 & \i~5095\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0800",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_i,
	datab => \i1166~109\,
	datac => ww_reg_address_2,
	datad => \i~5095\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_rdata_22);

\reg_rdata[23]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_rdata_23 = DFFE(i & \i1166~109\ & !reg_address_2 & \i~5099\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0800",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_i,
	datab => \i1166~109\,
	datac => ww_reg_address_2,
	datad => \i~5099\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_rdata_23);

\reg_rdata[24]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_rdata_24 = DFFE(\i1166~0\ & (\i1158~70\ # !reg_address_2 & \i~5103\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B0A0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i1158~70\,
	datab => ww_reg_address_2,
	datac => \i1166~0\,
	datad => \i~5103\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_rdata_24);

\reg_rdata[25]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_rdata_25 = DFFE(i & \i1166~109\ & !reg_address_2 & \i~5107\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0800",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_i,
	datab => \i1166~109\,
	datac => ww_reg_address_2,
	datad => \i~5107\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_rdata_25);

\reg_rdata[26]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_rdata_26 = DFFE(i & \i1166~109\ & !reg_address_2 & \i~5111\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0800",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_i,
	datab => \i1166~109\,
	datac => ww_reg_address_2,
	datad => \i~5111\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_rdata_26);

\reg_rdata[27]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_rdata_27 = DFFE(\i1166~109\ & i & !reg_address_2 & \i~5115\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0800",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i1166~109\,
	datab => ww_i,
	datac => ww_reg_address_2,
	datad => \i~5115\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_rdata_27);

\reg_rdata[28]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_rdata_28 = DFFE(\i1166~0\ & (\i1154~69\ # !reg_address_2 & \i~5119\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8C88",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i1154~69\,
	datab => \i1166~0\,
	datac => ww_reg_address_2,
	datad => \i~5119\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_rdata_28);

\reg_rdata[29]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_rdata_29 = DFFE(i & !reg_address_2 & \i1166~109\ & \i~5123\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "2000",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_i,
	datab => ww_reg_address_2,
	datac => \i1166~109\,
	datad => \i~5123\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_rdata_29);

\reg_rdata[30]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_rdata_30 = DFFE(\i1166~109\ & i & !reg_address_2 & \i~5127\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0800",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i1166~109\,
	datab => ww_i,
	datac => ww_reg_address_2,
	datad => \i~5127\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_rdata_30);

\reg_rdata[31]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reg_rdata_31 = DFFE(i & !reg_address_2 & \i1166~109\ & \i~5131\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "2000",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_i,
	datab => ww_reg_address_2,
	datac => \i1166~109\,
	datad => \i~5131\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reg_rdata_31);

\command_2_local[12]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_2_local_12 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_2_local[26]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_12,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_2_local[26]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_2_local_12);

\command_2_local[13]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_2_local_13 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_2_local[26]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_13,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_2_local[26]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_2_local_13);

\command_2_local[14]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_2_local_14 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_2_local[26]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_14,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_2_local[26]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_2_local_14);

\command_2_local[15]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_2_local_15 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_2_local[26]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_15,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_2_local[26]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_2_local_15);

\command_2_local[28]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_2_local_28 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_2_local[26]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_28,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_2_local[26]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_2_local_28);

\command_2_local[31]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_2_local_31 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_2_local[26]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_31,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_2_local[26]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_2_local_31);

\command_2_local[29]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_2_local_29 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_2_local[26]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_29,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_2_local[26]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_2_local_29);

\command_2_local[30]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_2_local_30 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_2_local[26]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_30,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_2_local[26]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_2_local_30);

\i3329~33_I\ : apex20ke_lcell 
-- Equation(s):
-- i3329 = reg_address_12 & reg_address_13 & !reg_address_14

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00C0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_12,
	datac => ww_reg_address_13,
	datad => ww_reg_address_14,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_i3329);

\rx_dpr_radr_local[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- rx_dpr_radr_local_0 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \rx_dpr_radr_local[15]~75\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_0,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \rx_dpr_radr_local[15]~75\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_rx_dpr_radr_local_0);

\command_2_local[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_2_local_0 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_2_local[26]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_0,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_2_local[26]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_2_local_0);

\command_4_local[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_4_local_0 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_4_local[3]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_0,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_4_local[3]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_4_local_0);

\command_0_local[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_0_local_0 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_0_local[30]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_0,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_0_local[30]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_0_local_0);

\tx_dpr_wadr_local[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- tx_dpr_wadr_local_0 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \tx_dpr_wadr_local[0]~74\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_0,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \tx_dpr_wadr_local[0]~74\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_tx_dpr_wadr_local_0);

\rx_dpr_radr_local[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- rx_dpr_radr_local_1 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \rx_dpr_radr_local[15]~75\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_1,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \rx_dpr_radr_local[15]~75\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_rx_dpr_radr_local_1);

\command_2_local[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_2_local_1 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_2_local[26]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_1,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_2_local[26]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_2_local_1);

\tx_dpr_wadr_local[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- tx_dpr_wadr_local_1 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \tx_dpr_wadr_local[0]~74\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_1,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \tx_dpr_wadr_local[0]~74\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_tx_dpr_wadr_local_1);

\command_0_local[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_0_local_1 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_0_local[30]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_1,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_0_local[30]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_0_local_1);

\command_4_local[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_4_local_1 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_4_local[3]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_1,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_4_local[3]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_4_local_1);

\rx_dpr_radr_local[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- rx_dpr_radr_local_2 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \rx_dpr_radr_local[15]~75\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_2,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \rx_dpr_radr_local[15]~75\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_rx_dpr_radr_local_2);

\tx_dpr_wadr_local[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- tx_dpr_wadr_local_2 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \tx_dpr_wadr_local[0]~74\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_2,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \tx_dpr_wadr_local[0]~74\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_tx_dpr_wadr_local_2);

\command_0_local[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_0_local_2 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_0_local[30]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_2,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_0_local[30]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_0_local_2);

\command_4_local[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_4_local_2 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_4_local[3]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_2,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_4_local[3]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_4_local_2);

\rx_dpr_radr_local[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- rx_dpr_radr_local_3 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \rx_dpr_radr_local[15]~75\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_3,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \rx_dpr_radr_local[15]~75\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_rx_dpr_radr_local_3);

\tx_dpr_wadr_local[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- tx_dpr_wadr_local_3 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \tx_dpr_wadr_local[0]~74\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_3,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \tx_dpr_wadr_local[0]~74\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_tx_dpr_wadr_local_3);

\command_0_local[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_0_local_3 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_0_local[30]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_3,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_0_local[30]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_0_local_3);

\command_4_local[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_4_local_3 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_4_local[3]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_3,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_4_local[3]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_4_local_3);

\rx_dpr_radr_local[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- rx_dpr_radr_local_4 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \rx_dpr_radr_local[15]~75\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_4,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \rx_dpr_radr_local[15]~75\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_rx_dpr_radr_local_4);

\tx_dpr_wadr_local[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- tx_dpr_wadr_local_4 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \tx_dpr_wadr_local[0]~74\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_4,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \tx_dpr_wadr_local[0]~74\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_tx_dpr_wadr_local_4);

\rx_dpr_radr_local[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- rx_dpr_radr_local_5 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \rx_dpr_radr_local[15]~75\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_5,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \rx_dpr_radr_local[15]~75\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_rx_dpr_radr_local_5);

\tx_dpr_wadr_local[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- tx_dpr_wadr_local_5 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \tx_dpr_wadr_local[0]~74\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_5,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \tx_dpr_wadr_local[0]~74\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_tx_dpr_wadr_local_5);

\rx_dpr_radr_local[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- rx_dpr_radr_local_6 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \rx_dpr_radr_local[15]~75\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_6,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \rx_dpr_radr_local[15]~75\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_rx_dpr_radr_local_6);

\tx_dpr_wadr_local[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- tx_dpr_wadr_local_6 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \tx_dpr_wadr_local[0]~74\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_6,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \tx_dpr_wadr_local[0]~74\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_tx_dpr_wadr_local_6);

\rx_dpr_radr_local[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- rx_dpr_radr_local_7 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \rx_dpr_radr_local[15]~75\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_7,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \rx_dpr_radr_local[15]~75\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_rx_dpr_radr_local_7);

\tx_dpr_wadr_local[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- tx_dpr_wadr_local_7 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \tx_dpr_wadr_local[0]~74\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_7,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \tx_dpr_wadr_local[0]~74\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_tx_dpr_wadr_local_7);

\command_2_local[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_2_local_8 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_2_local[26]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_8,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_2_local[26]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_2_local_8);

\rx_dpr_radr_local[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- rx_dpr_radr_local_8 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \rx_dpr_radr_local[15]~75\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_8,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \rx_dpr_radr_local[15]~75\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_rx_dpr_radr_local_8);

\command_4_local[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_4_local_8 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_4_local[3]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_8,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_4_local[3]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_4_local_8);

\tx_dpr_wadr_local[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- tx_dpr_wadr_local_8 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \tx_dpr_wadr_local[0]~74\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_8,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \tx_dpr_wadr_local[0]~74\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_tx_dpr_wadr_local_8);

\command_0_local[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_0_local_8 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_0_local[30]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_8,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_0_local[30]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_0_local_8);

\command_2_local[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_2_local_9 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_2_local[26]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_9,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_2_local[26]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_2_local_9);

\rx_dpr_radr_local[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- rx_dpr_radr_local_9 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \rx_dpr_radr_local[15]~75\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_9,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \rx_dpr_radr_local[15]~75\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_rx_dpr_radr_local_9);

\tx_dpr_wadr_local[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- tx_dpr_wadr_local_9 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \tx_dpr_wadr_local[0]~74\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_9,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \tx_dpr_wadr_local[0]~74\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_tx_dpr_wadr_local_9);

\command_0_local[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_0_local_9 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_0_local[30]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_9,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_0_local[30]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_0_local_9);

\command_2_local[10]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_2_local_10 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_2_local[26]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_10,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_2_local[26]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_2_local_10);

\rx_dpr_radr_local[10]~I\ : apex20ke_lcell 
-- Equation(s):
-- rx_dpr_radr_local_10 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \rx_dpr_radr_local[15]~75\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_10,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \rx_dpr_radr_local[15]~75\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_rx_dpr_radr_local_10);

\tx_dpr_wadr_local[10]~I\ : apex20ke_lcell 
-- Equation(s):
-- tx_dpr_wadr_local_10 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \tx_dpr_wadr_local[0]~74\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_10,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \tx_dpr_wadr_local[0]~74\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_tx_dpr_wadr_local_10);

\command_0_local[10]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_0_local_10 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_0_local[30]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_10,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_0_local[30]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_0_local_10);

\command_2_local[11]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_2_local_11 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_2_local[26]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_11,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_2_local[26]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_2_local_11);

\rx_dpr_radr_local[11]~I\ : apex20ke_lcell 
-- Equation(s):
-- rx_dpr_radr_local_11 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \rx_dpr_radr_local[15]~75\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_11,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \rx_dpr_radr_local[15]~75\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_rx_dpr_radr_local_11);

\tx_dpr_wadr_local[11]~I\ : apex20ke_lcell 
-- Equation(s):
-- tx_dpr_wadr_local_11 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \tx_dpr_wadr_local[0]~74\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_11,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \tx_dpr_wadr_local[0]~74\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_tx_dpr_wadr_local_11);

\command_0_local[11]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_0_local_11 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_0_local[30]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_11,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_0_local[30]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_0_local_11);

\rx_dpr_radr_local[12]~I\ : apex20ke_lcell 
-- Equation(s):
-- rx_dpr_radr_local_12 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \rx_dpr_radr_local[15]~75\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_12,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \rx_dpr_radr_local[15]~75\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_rx_dpr_radr_local_12);

\tx_dpr_wadr_local[12]~I\ : apex20ke_lcell 
-- Equation(s):
-- tx_dpr_wadr_local_12 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \tx_dpr_wadr_local[0]~74\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_12,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \tx_dpr_wadr_local[0]~74\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_tx_dpr_wadr_local_12);

\command_4_local[12]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_4_local_12 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_4_local[3]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_12,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_4_local[3]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_4_local_12);

\rx_dpr_radr_local[13]~I\ : apex20ke_lcell 
-- Equation(s):
-- rx_dpr_radr_local_13 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \rx_dpr_radr_local[15]~75\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_13,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \rx_dpr_radr_local[15]~75\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_rx_dpr_radr_local_13);

\tx_dpr_wadr_local[13]~I\ : apex20ke_lcell 
-- Equation(s):
-- tx_dpr_wadr_local_13 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \tx_dpr_wadr_local[0]~74\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_13,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \tx_dpr_wadr_local[0]~74\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_tx_dpr_wadr_local_13);

\command_4_local[13]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_4_local_13 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_4_local[3]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_13,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_4_local[3]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_4_local_13);

\rx_dpr_radr_local[14]~I\ : apex20ke_lcell 
-- Equation(s):
-- rx_dpr_radr_local_14 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \rx_dpr_radr_local[15]~75\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_14,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \rx_dpr_radr_local[15]~75\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_rx_dpr_radr_local_14);

\tx_dpr_wadr_local[14]~I\ : apex20ke_lcell 
-- Equation(s):
-- tx_dpr_wadr_local_14 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \tx_dpr_wadr_local[0]~74\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_14,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \tx_dpr_wadr_local[0]~74\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_tx_dpr_wadr_local_14);

\command_4_local[14]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_4_local_14 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_4_local[3]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_14,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_4_local[3]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_4_local_14);

\rx_dpr_radr_local[15]~I\ : apex20ke_lcell 
-- Equation(s):
-- rx_dpr_radr_local_15 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \rx_dpr_radr_local[15]~75\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_15,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \rx_dpr_radr_local[15]~75\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_rx_dpr_radr_local_15);

\tx_dpr_wadr_local[15]~I\ : apex20ke_lcell 
-- Equation(s):
-- tx_dpr_wadr_local_15 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \tx_dpr_wadr_local[0]~74\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_15,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \tx_dpr_wadr_local[0]~74\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_tx_dpr_wadr_local_15);

\command_0_local[15]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_0_local_15 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_0_local[30]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_15,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_0_local[30]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_0_local_15);

\command_4_local[15]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_4_local_15 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_4_local[3]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_15,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_4_local[3]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_4_local_15);

\i~14641_I\ : apex20ke_lcell 
-- Equation(s):
-- i = reg_address_12 & !reg_address_14

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00F0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_reg_address_12,
	datad => ww_reg_address_14,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_i);

\command_1_local[16]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_1_local_16 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_1_local[18]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_16,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_1_local[18]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_1_local_16);

\command_0_local[16]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_0_local_16 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_0_local[30]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_16,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_0_local[30]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_0_local_16);

\command_1_local[17]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_1_local_17 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_1_local[18]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_17,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_1_local[18]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_1_local_17);

\command_0_local[17]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_0_local_17 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_0_local[30]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_17,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_0_local[30]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_0_local_17);

\command_1_local[18]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_1_local_18 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_1_local[18]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_18,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_1_local[18]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_1_local_18);

\command_1_local[19]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_1_local_19 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_1_local[18]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_19,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_1_local[18]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_1_local_19);

\command_2_local[24]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_2_local_24 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_2_local[26]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_24,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_2_local[26]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_2_local_24);

\command_0_local[24]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_0_local_24 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_0_local[30]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_24,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_0_local[30]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_0_local_24);

\command_0_local[26]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_0_local_26 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_0_local[30]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_26,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_0_local[30]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_0_local_26);

\command_0_local[28]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_0_local_28 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_0_local[30]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_28,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_0_local[30]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_0_local_28);

\command_0_local[30]~I\ : apex20ke_lcell 
-- Equation(s):
-- command_0_local_30 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_0_local[30]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_30,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_0_local[30]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_command_0_local_30);

\i3329~34_I\ : apex20ke_lcell 
-- Equation(s):
-- i33291 = !reg_address_15 & reg_write & reg_enable

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_15,
	datac => ww_reg_write,
	datad => ww_reg_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_i33291);

\i3335~16_I\ : apex20ke_lcell 
-- Equation(s):
-- i3335 = !reg_address_12 & reg_address_14 & !reg_address_13 & i33291

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0400",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_12,
	datab => ww_reg_address_14,
	datac => ww_reg_address_13,
	datad => ww_i33291,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_i3335);

\dom_id[48]~231_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_48 = reg_enable & !reg_address_15 & !reg_address_13 & reg_write
-- \dom_id[48]~290\ = reg_enable & !reg_address_15 & !reg_address_13 & reg_write

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0200",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_enable,
	datab => ww_reg_address_15,
	datac => ww_reg_address_13,
	datad => ww_reg_write,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_dom_id_48,
	cascout => \dom_id[48]~290\);

\i3335~17_I\ : apex20ke_lcell 
-- Equation(s):
-- i33351 = !reg_address_13 & reg_address_14 & i33291

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_13,
	datac => ww_reg_address_14,
	datad => ww_i33291,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_i33351);

\tx_pack_rdy~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- tx_pack_rdy = DFFE((!reg_address_3 & reg_address_6) & CASCADE(\i2215~51\), GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_reg_address_3,
	datad => ww_reg_address_6,
	cascin => \i2215~51\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_tx_pack_rdy);

\i3342~15_I\ : apex20ke_lcell 
-- Equation(s):
-- i3342 = !reg_address_13 & i33291 & reg_address_14 & reg_address_12

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "4000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_13,
	datab => ww_i33291,
	datac => ww_reg_address_14,
	datad => ww_reg_address_12,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_i3342);

\rx_dpr_radr_stb~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- rx_dpr_radr_stb = DFFE(reg_address_5 & reg_address_4 & \command_2_local[26]~127\ & \i~14644\, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8000",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => ww_reg_address_4,
	datac => \command_2_local[26]~127\,
	datad => \i~14644\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_rx_dpr_radr_stb);

\dom_id[48]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_481 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[48]~289\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_16,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[48]~289\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_481);

\dom_id[0]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_0 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[0]~114\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_0,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[0]~114\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_0);

\dom_id[1]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_1 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[0]~114\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_1,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[0]~114\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_1);

\dom_id[2]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_2 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[0]~114\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_2,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[0]~114\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_2);

\dom_id[3]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_3 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[0]~114\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_3,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[0]~114\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_3);

\dom_id[4]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_4 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[0]~114\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_4,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[0]~114\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_4);

\dom_id[5]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_5 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[0]~114\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_5,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[0]~114\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_5);

\dom_id[6]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_6 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[0]~114\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_6,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[0]~114\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_6);

\dom_id[7]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_7 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[0]~114\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_7,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[0]~114\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_7);

\dom_id[8]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_8 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[0]~114\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_8,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[0]~114\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_8);

\dom_id[9]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_9 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[0]~114\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_9,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[0]~114\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_9);

\dom_id[10]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_10 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[0]~114\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_10,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[0]~114\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_10);

\dom_id[11]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_11 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[0]~114\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_11,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[0]~114\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_11);

\dom_id[12]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_12 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[0]~114\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_12,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[0]~114\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_12);

\dom_id[13]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_13 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[0]~114\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_13,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[0]~114\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_13);

\dom_id[14]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_14 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[0]~114\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_14,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[0]~114\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_14);

\dom_id[15]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_15 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[0]~114\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_15,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[0]~114\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_15);

\dom_id[16]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_16 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[0]~114\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_16,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[0]~114\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_16);

\dom_id[17]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_17 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[0]~114\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_17,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[0]~114\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_17);

\dom_id[18]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_18 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[0]~114\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_18,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[0]~114\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_18);

\dom_id[19]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_19 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[0]~114\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_19,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[0]~114\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_19);

\dom_id[20]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_20 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[0]~114\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_20,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[0]~114\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_20);

\dom_id[21]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_21 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[0]~114\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_21,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[0]~114\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_21);

\dom_id[22]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_22 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[0]~114\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_22,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[0]~114\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_22);

\dom_id[23]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_23 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[0]~114\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_23,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[0]~114\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_23);

\dom_id[24]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_24 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[0]~114\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_24,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[0]~114\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_24);

\dom_id[25]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_25 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[0]~114\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_25,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[0]~114\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_25);

\dom_id[26]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_26 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[0]~114\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_26,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[0]~114\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_26);

\dom_id[27]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_27 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[0]~114\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_27,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[0]~114\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_27);

\dom_id[28]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_28 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[0]~114\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_28,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[0]~114\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_28);

\dom_id[29]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_29 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[0]~114\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_29,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[0]~114\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_29);

\dom_id[30]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_30 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[0]~114\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_30,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[0]~114\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_30);

\dom_id[31]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_31 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[0]~114\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_31,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[0]~114\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_31);

\dom_id[32]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_32 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[48]~289\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_0,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[48]~289\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_32);

\dom_id[33]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_33 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[48]~289\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_1,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[48]~289\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_33);

\dom_id[34]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_34 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[48]~289\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_2,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[48]~289\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_34);

\dom_id[35]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_35 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[48]~289\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_3,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[48]~289\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_35);

\dom_id[36]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_36 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[48]~289\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_4,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[48]~289\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_36);

\dom_id[37]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_37 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[48]~289\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_5,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[48]~289\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_37);

\dom_id[38]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_38 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[48]~289\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_6,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[48]~289\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_38);

\dom_id[39]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_39 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[48]~289\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_7,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[48]~289\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_39);

\dom_id[40]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_40 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[48]~289\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_8,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[48]~289\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_40);

\dom_id[41]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_41 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[48]~289\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_9,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[48]~289\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_41);

\dom_id[42]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_42 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[48]~289\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_10,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[48]~289\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_42);

\dom_id[43]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_43 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[48]~289\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_11,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[48]~289\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_43);

\dom_id[44]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_44 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[48]~289\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_12,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[48]~289\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_44);

\dom_id[45]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_45 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[48]~289\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_13,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[48]~289\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_45);

\dom_id[46]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_46 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[48]~289\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_14,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[48]~289\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_46);

\dom_id[47]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_id_47 = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \dom_id[48]~289\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_15,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \dom_id[48]~289\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_id_47);

\dom_id[48]~288_I\ : apex20ke_lcell 
-- Equation(s):
-- \dom_id[48]~288\ = (!reg_address_14 & reg_address_19 & !reg_address_18 & reg_address_12) & CASCADE(\dom_id[48]~290\)
-- \dom_id[48]~291\ = (!reg_address_14 & reg_address_19 & !reg_address_18 & reg_address_12) & CASCADE(\dom_id[48]~290\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0400",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_14,
	datab => ww_reg_address_19,
	datac => ww_reg_address_18,
	datad => ww_reg_address_12,
	cascin => \dom_id[48]~290\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \dom_id[48]~288\,
	cascout => \dom_id[48]~291\);

\command_2_local[26]~126_I\ : apex20ke_lcell 
-- Equation(s):
-- \command_2_local[26]~126\ = reg_address_3 & !reg_address_5 & !reg_address_6 & reg_address_4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0200",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datab => ww_reg_address_5,
	datac => ww_reg_address_6,
	datad => ww_reg_address_4,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \command_2_local[26]~126\);

\command_2_local[26]~32_I\ : apex20ke_lcell 
-- Equation(s):
-- \command_2_local[26]~32\ = \dom_id[48]~288\ & !reg_address_2 & \command_2_local[26]~126\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0C00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \dom_id[48]~288\,
	datac => ww_reg_address_2,
	datad => \command_2_local[26]~126\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \command_2_local[26]~32\);

\com_ctrl_local[2]~90_I\ : apex20ke_lcell 
-- Equation(s):
-- \com_ctrl_local[2]~90\ = reg_address_4 & !reg_address_3 & \dom_id[48]~288\ & !reg_address_2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0020",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_4,
	datab => ww_reg_address_3,
	datac => \dom_id[48]~288\,
	datad => ww_reg_address_2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \com_ctrl_local[2]~90\);

\com_ctrl_local[2]~124_I\ : apex20ke_lcell 
-- Equation(s):
-- \com_ctrl_local[2]~124\ = (!reg_address_6 & reg_address_5) & CASCADE(\com_ctrl_local[2]~90\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_reg_address_6,
	datad => ww_reg_address_5,
	cascin => \com_ctrl_local[2]~90\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \com_ctrl_local[2]~124\);

\i~14465_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14465\ = q & !reg_address_19 & !reg_address_18

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "000A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \srom|q[0]\,
	datac => ww_reg_address_19,
	datad => ww_reg_address_18,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14465\);

\i~14469_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14469\ = reg_address_5 & (reg_address_6 & q_0 # !reg_address_6 & sload_path_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8C80",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_0,
	datab => ww_reg_address_5,
	datac => ww_reg_address_6,
	datad => ww_sload_path_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14469\);

\i~4817_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~4817\ = !reg_address_5 & reg_address_6 & atwd0_timestamp_32

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_5,
	datac => ww_reg_address_6,
	datad => ww_atwd0_timestamp_32,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~4817\);

\dom_id[48]~233_I\ : apex20ke_lcell 
-- Equation(s):
-- \dom_id[48]~233\ = reg_address_19 & !reg_address_18

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0C0C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_19,
	datac => ww_reg_address_18,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \dom_id[48]~233\);

\command_2_local[26]~127_I\ : apex20ke_lcell 
-- Equation(s):
-- \command_2_local[26]~127\ = i & dom_id_48 & !reg_address_2 & \dom_id[48]~233\
-- \command_2_local[26]~161\ = i & dom_id_48 & !reg_address_2 & \dom_id[48]~233\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0800",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_i,
	datab => ww_dom_id_48,
	datac => ww_reg_address_2,
	datad => \dom_id[48]~233\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \command_2_local[26]~127\,
	cascout => \command_2_local[26]~161\);

\i1166~111_I\ : apex20ke_lcell 
-- Equation(s):
-- \i1166~111\ = !reg_address_6 & !reg_address_4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0505",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_6,
	datac => ww_reg_address_4,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i1166~111\);

\command_3_local[0]~32_I\ : apex20ke_lcell 
-- Equation(s):
-- \command_3_local[0]~32\ = reg_address_5 & \command_2_local[26]~127\ & \i1166~111\ & reg_address_3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => \command_2_local[26]~127\,
	datac => \i1166~111\,
	datad => ww_reg_address_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \command_3_local[0]~32\);

\command_3_local[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_3_local[0]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_3_local[0]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_0,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_3_local[0]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_3_local[0]\);

\command_1_local[18]~32_I\ : apex20ke_lcell 
-- Equation(s):
-- \command_1_local[18]~32\ = \i1166~111\ & !reg_address_5 & reg_address_3 & \command_2_local[26]~127\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "2000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i1166~111\,
	datab => ww_reg_address_5,
	datac => ww_reg_address_3,
	datad => \command_2_local[26]~127\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \command_1_local[18]~32\);

\command_1_local[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_1_local[0]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_1_local[18]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_0,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_1_local[18]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_1_local[0]\);

\i~14467_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14467\ = \command_3_local[0]\ & (reg_address_5 # \command_1_local[0]\) # !\command_3_local[0]\ & !reg_address_5 & \command_1_local[0]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \command_3_local[0]\,
	datac => ww_reg_address_5,
	datad => \command_1_local[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14467\);

\i~14468_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14468\ = reg_address_6 & !reg_address_5 & atwd0_timestamp_0 # !reg_address_6 & \i~14467\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3A0A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14467\,
	datab => ww_reg_address_5,
	datac => ww_reg_address_6,
	datad => ww_atwd0_timestamp_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14468\);

\i~14466_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14466\ = reg_address_6 & reg_address_5 & rx_dpr_radr_local_0 # !reg_address_6 & command_2_local_0 & !reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C202",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_2_local_0,
	datab => ww_reg_address_6,
	datac => ww_reg_address_5,
	datad => ww_rx_dpr_radr_local_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14466\);

\i~5142_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5142\ = reg_address_4 & (reg_address_2 # \i~14466\) # !reg_address_4 & !reg_address_2 & \i~14468\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BA98",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_4,
	datab => ww_reg_address_2,
	datac => \i~14468\,
	datad => \i~14466\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5142\);

\i~5143_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5143\ = \i~5142\ & (\i~14469\ # !reg_address_2) # !\i~5142\ & reg_address_2 & \i~4817\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BBC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14469\,
	datab => ww_reg_address_2,
	datac => \i~4817\,
	datad => \i~5142\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5143\);

\com_ctrl_local[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \com_ctrl_local[0]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \com_ctrl_local[2]~124\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_0,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \com_ctrl_local[2]~124\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \com_ctrl_local[0]\);

\i~5140_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5140\ = reg_address_6 & (tx_dpr_wadr_local_0 # reg_address_2) # !reg_address_6 & !reg_address_2 & \com_ctrl_local[0]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CBC8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_tx_dpr_wadr_local_0,
	datab => ww_reg_address_6,
	datac => ww_reg_address_2,
	datad => \com_ctrl_local[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5140\);

\i~5141_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5141\ = \i~5140\ & (inst16_0 # !reg_address_2) # !\i~5140\ & reg_address_2 & op_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BC8C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_inst16_0,
	datab => \i~5140\,
	datac => ww_reg_address_2,
	datad => ww_op_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5141\);

\i~14470_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14470\ = oneSPEcnt_0 & (multiSPEcnt_0 # !reg_address_2) # !oneSPEcnt_0 & multiSPEcnt_0 & reg_address_2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CACA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_oneSPEcnt_01,
	datab => ww_multiSPEcnt_01,
	datac => ww_reg_address_2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14470\);

\i~14471_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14471\ = reg_address_6 & !reg_address_2 & command_4_local_0 # !reg_address_6 & \i~14470\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "7520",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_6,
	datab => ww_reg_address_2,
	datac => ww_command_4_local_0,
	datad => \i~14470\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14471\);

\i~5136_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5136\ = reg_address_6 & (reg_address_2 # sload_path_0) # !reg_address_6 & !reg_address_2 & command_0_local_0

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F4A4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datab => ww_command_0_local_0,
	datac => ww_reg_address_6,
	datad => ww_sload_path_01,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5136\);

\i~5137_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5137\ = \i~5136\ & (sload_path_32 # !reg_address_2) # !\i~5136\ & reg_address_2 & done

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F588",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datab => ww_done,
	datac => ww_sload_path_32,
	datad => \i~5136\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5137\);

\i~5134_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5134\ = reg_address_5 & (\i~14471\ # reg_address_4) # !reg_address_5 & !reg_address_4 & \i~5137\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CBC8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14471\,
	datab => ww_reg_address_5,
	datac => ww_reg_address_4,
	datad => \i~5137\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5134\);

\i~5138_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5138\ = reg_address_6 & (reg_address_2 # atwd1_timestamp_0) # !reg_address_6 & oneSPEcnt_0 & !reg_address_2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F2C2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_oneSPEcnt_0,
	datab => ww_reg_address_2,
	datac => ww_reg_address_6,
	datad => ww_atwd1_timestamp_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5138\);

\i~5139_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5139\ = \i~5138\ & (atwd1_timestamp_32 # !reg_address_2) # !\i~5138\ & reg_address_2 & multiSPEcnt_0

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BBC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_atwd1_timestamp_32,
	datab => ww_reg_address_2,
	datac => ww_multiSPEcnt_0,
	datad => \i~5138\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5139\);

\i~5135_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5135\ = \i~5134\ & (\i~5141\ # !reg_address_4) # !\i~5134\ & reg_address_4 & \i~5139\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DAD0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_4,
	datab => \i~5141\,
	datac => \i~5134\,
	datad => \i~5139\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5135\);

\i~14472_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14472\ = \i~5143\ & (reg_address_3 # \i~5135\) # !\i~5143\ & !reg_address_3 & \i~5135\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \i~5143\,
	datac => ww_reg_address_3,
	datad => \i~5135\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14472\);

\i~5278_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5278\ = reg_address_12 & (reg_address_14 # \i~14472\) # !reg_address_12 & q & !reg_address_14

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F2C2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \srom|q[0]\,
	datab => ww_reg_address_14,
	datac => ww_reg_address_12,
	datad => \i~14472\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5278\);

\i~5279_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5279\ = \i~5278\ & (q # !reg_address_14) # !\i~5278\ & q & reg_address_14

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F388",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_02,
	datab => ww_reg_address_14,
	datac => ww_q_03,
	datad => \i~5278\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5279\);

\i1166~109_I\ : apex20ke_lcell 
-- Equation(s):
-- \i1166~109\ = !reg_address_13 & (reg_address_19 # reg_address_18)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00FC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_19,
	datac => ww_reg_address_18,
	datad => ww_reg_address_13,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i1166~109\);

\i~14464_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14464\ = i3329 & q & (reg_address_19 # reg_address_18)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_19,
	datab => ww_reg_address_18,
	datac => ww_i3329,
	datad => ww_q_01,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14464\);

\i~14474_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14474\ = i3329 & q & (reg_address_19 # reg_address_18)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C800",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_19,
	datab => ww_i3329,
	datac => ww_reg_address_18,
	datad => ww_q_16,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14474\);

\i~14475_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14475\ = !reg_address_19 & !reg_address_18 & q

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_19,
	datac => ww_reg_address_18,
	datad => \srom|q[1]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14475\);

\i~5280_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5280\ = reg_address_14 & (reg_address_12 # q) # !reg_address_14 & q & !reg_address_12

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CEC2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \srom|q[1]\,
	datab => ww_reg_address_14,
	datac => ww_reg_address_12,
	datad => ww_q_17,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5280\);

\i~4820_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~4820\ = !reg_address_5 & reg_address_6 & atwd0_timestamp_33

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_5,
	datac => ww_reg_address_6,
	datad => ww_atwd0_timestamp_33,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~4820\);

\i~14479_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14479\ = reg_address_5 & (reg_address_6 & q_1 # !reg_address_6 & sload_path_1)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8C80",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_1,
	datab => ww_reg_address_5,
	datac => ww_reg_address_6,
	datad => ww_sload_path_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14479\);

\i~14476_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14476\ = reg_address_5 & rx_dpr_radr_local_1 & reg_address_6 # !reg_address_5 & command_2_local_1 & !reg_address_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C00A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_2_local_1,
	datab => ww_rx_dpr_radr_local_1,
	datac => ww_reg_address_5,
	datad => ww_reg_address_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14476\);

\command_3_local[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_3_local[1]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_3_local[0]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_1,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_3_local[0]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_3_local[1]\);

\command_1_local[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_1_local[1]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_1_local[18]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_1,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_1_local[18]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_1_local[1]\);

\i~14477_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14477\ = \command_3_local[1]\ & (reg_address_5 # \command_1_local[1]\) # !\command_3_local[1]\ & !reg_address_5 & \command_1_local[1]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \command_3_local[1]\,
	datac => ww_reg_address_5,
	datad => \command_1_local[1]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14477\);

\i~14478_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14478\ = reg_address_6 & !reg_address_5 & atwd0_timestamp_1 # !reg_address_6 & \i~14477\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "7250",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_6,
	datab => ww_reg_address_5,
	datac => \i~14477\,
	datad => ww_atwd0_timestamp_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14478\);

\i~5152_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5152\ = reg_address_4 & (reg_address_2 # \i~14476\) # !reg_address_4 & !reg_address_2 & \i~14478\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B9A8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_4,
	datab => ww_reg_address_2,
	datac => \i~14476\,
	datad => \i~14478\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5152\);

\i~5153_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5153\ = \i~5152\ & (\i~14479\ # !reg_address_2) # !\i~5152\ & \i~4820\ & reg_address_2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F388",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~4820\,
	datab => ww_reg_address_2,
	datac => \i~14479\,
	datad => \i~5152\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5153\);

\i~14480_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14480\ = reg_address_5 & multiSPEcnt_1 & !reg_address_6 # !reg_address_5 & reg_address_6 & sload_path_33

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5808",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => ww_multiSPEcnt_1,
	datac => ww_reg_address_6,
	datad => ww_sload_path_33,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14480\);

\i~5150_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5150\ = reg_address_6 & (reg_address_5 # atwd1_timestamp_33) # !reg_address_6 & multiSPEcnt_1 & !reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CEC2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_multiSPEcnt_11,
	datab => ww_reg_address_6,
	datac => ww_reg_address_5,
	datad => ww_atwd1_timestamp_33,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5150\);

\i~5151_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5151\ = \i~5150\ & (inst16_1 # !reg_address_5) # !\i~5150\ & reg_address_5 & inst50

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F588",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => ww_inst50,
	datac => ww_inst16_1,
	datad => \i~5150\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5151\);

\com_ctrl_local[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \com_ctrl_local[1]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \com_ctrl_local[2]~124\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_1,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \com_ctrl_local[2]~124\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \com_ctrl_local[1]\);

\i~5148_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5148\ = reg_address_6 & (reg_address_5 # atwd1_timestamp_1) # !reg_address_6 & !reg_address_5 & oneSPEcnt_1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F4A4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => ww_oneSPEcnt_1,
	datac => ww_reg_address_6,
	datad => ww_atwd1_timestamp_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5148\);

\i~5149_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5149\ = \i~5148\ & (tx_dpr_wadr_local_1 # !reg_address_5) # !\i~5148\ & \com_ctrl_local[1]\ & reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \com_ctrl_local[1]\,
	datab => ww_tx_dpr_wadr_local_1,
	datac => ww_reg_address_5,
	datad => \i~5148\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5149\);

\i~5146_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5146\ = reg_address_6 & (reg_address_5 # sload_path_1) # !reg_address_6 & !reg_address_5 & command_0_local_1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F4A4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => ww_command_0_local_1,
	datac => ww_reg_address_6,
	datad => ww_sload_path_110,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5146\);

\i~5147_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5147\ = \i~5146\ & (command_4_local_1 # !reg_address_5) # !\i~5146\ & oneSPEcnt_1 & reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AFC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_4_local_1,
	datab => ww_oneSPEcnt_11,
	datac => ww_reg_address_5,
	datad => \i~5146\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5147\);

\i~5144_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5144\ = reg_address_4 & (reg_address_2 # \i~5149\) # !reg_address_4 & !reg_address_2 & \i~5147\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E5E0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datab => \i~5149\,
	datac => ww_reg_address_4,
	datad => \i~5147\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5144\);

\i~5145_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5145\ = \i~5144\ & (\i~5151\ # !reg_address_2) # !\i~5144\ & reg_address_2 & \i~14480\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F588",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datab => \i~14480\,
	datac => \i~5151\,
	datad => \i~5144\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5145\);

\i~14481_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14481\ = reg_address_3 & \i~5153\ # !reg_address_3 & \i~5145\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F5A0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datac => \i~5153\,
	datad => \i~5145\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14481\);

\i~5281_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5281\ = \i~5280\ & (q # !reg_address_12) # !\i~5280\ & reg_address_12 & \i~14481\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DAD0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_12,
	datab => ww_q_18,
	datac => \i~5280\,
	datad => \i~14481\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5281\);

\i~14483_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14483\ = i3329 & q & (reg_address_19 # reg_address_18)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_19,
	datab => ww_reg_address_18,
	datac => ww_i3329,
	datad => ww_q_21,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14483\);

\i~14484_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14484\ = q & !reg_address_19 & !reg_address_18

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0022",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \srom|q[2]\,
	datab => ww_reg_address_19,
	datad => ww_reg_address_18,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14484\);

\i~14488_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14488\ = reg_address_5 & (reg_address_6 & q_2 # !reg_address_6 & sload_path_2)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8C80",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_2,
	datab => ww_reg_address_5,
	datac => ww_reg_address_6,
	datad => ww_sload_path_2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14488\);

\i~4823_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~4823\ = reg_address_6 & !reg_address_5 & atwd0_timestamp_34

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0C00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_6,
	datac => ww_reg_address_5,
	datad => ww_atwd0_timestamp_34,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~4823\);

\command_2_local[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_2_local[2]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_2_local[26]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_2,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_2_local[26]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_2_local[2]\);

\i~14485_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14485\ = reg_address_5 & rx_dpr_radr_local_2 & reg_address_6 # !reg_address_5 & \command_2_local[2]\ & !reg_address_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C00A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \command_2_local[2]\,
	datab => ww_rx_dpr_radr_local_2,
	datac => ww_reg_address_5,
	datad => ww_reg_address_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14485\);

\command_1_local[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_1_local[2]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_1_local[18]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_2,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_1_local[18]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_1_local[2]\);

\command_3_local[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_3_local[2]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_3_local[0]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_2,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_3_local[0]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_3_local[2]\);

\i~14486_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14486\ = reg_address_5 & \command_3_local[2]\ # !reg_address_5 & \command_1_local[2]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E4E4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => \command_1_local[2]\,
	datac => \command_3_local[2]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14486\);

\i~14487_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14487\ = reg_address_6 & !reg_address_5 & atwd0_timestamp_2 # !reg_address_6 & \i~14486\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "2E22",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14486\,
	datab => ww_reg_address_6,
	datac => ww_reg_address_5,
	datad => ww_atwd0_timestamp_2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14487\);

\i~5162_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5162\ = reg_address_4 & (\i~14485\ # reg_address_2) # !reg_address_4 & !reg_address_2 & \i~14487\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E3E0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14485\,
	datab => ww_reg_address_2,
	datac => ww_reg_address_4,
	datad => \i~14487\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5162\);

\i~5163_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5163\ = \i~5162\ & (\i~14488\ # !reg_address_2) # !\i~5162\ & reg_address_2 & \i~4823\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BBC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14488\,
	datab => ww_reg_address_2,
	datac => \i~4823\,
	datad => \i~5162\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5163\);

\i~5160_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5160\ = reg_address_6 & (reg_address_5 # atwd1_timestamp_34) # !reg_address_6 & !reg_address_5 & multiSPEcnt_2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F4A4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => ww_multiSPEcnt_21,
	datac => ww_reg_address_6,
	datad => ww_atwd1_timestamp_34,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5160\);

\i~5161_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5161\ = \i~5160\ & (inst16_2 # !reg_address_5) # !\i~5160\ & reboot_gnt & reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F388",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reboot_gnt,
	datab => ww_reg_address_5,
	datac => ww_inst16_2,
	datad => \i~5160\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5161\);

\i~14489_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14489\ = reg_address_5 & multiSPEcnt_2 & !reg_address_6 # !reg_address_5 & reg_address_6 & sload_path_34

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3808",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_multiSPEcnt_2,
	datab => ww_reg_address_5,
	datac => ww_reg_address_6,
	datad => ww_sload_path_34,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14489\);

\i~5156_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5156\ = reg_address_6 & (reg_address_5 # sload_path_2) # !reg_address_6 & command_0_local_2 & !reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CEC2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_0_local_2,
	datab => ww_reg_address_6,
	datac => ww_reg_address_5,
	datad => ww_sload_path_210,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5156\);

\i~5157_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5157\ = \i~5156\ & (command_4_local_2 # !reg_address_5) # !\i~5156\ & oneSPEcnt_2 & reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_oneSPEcnt_21,
	datab => ww_command_4_local_2,
	datac => ww_reg_address_5,
	datad => \i~5156\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5157\);

\i~5158_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5158\ = reg_address_6 & (reg_address_5 # atwd1_timestamp_2) # !reg_address_6 & oneSPEcnt_2 & !reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CEC2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_oneSPEcnt_2,
	datab => ww_reg_address_6,
	datac => ww_reg_address_5,
	datad => ww_atwd1_timestamp_2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5158\);

\i~5159_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5159\ = \i~5158\ & (tx_dpr_wadr_local_2 # !reg_address_5) # !\i~5158\ & reg_address_5 & com_ctrl_local_2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BBC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_tx_dpr_wadr_local_2,
	datab => ww_reg_address_5,
	datac => ww_com_ctrl_local_2,
	datad => \i~5158\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5159\);

\i~5154_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5154\ = reg_address_4 & (reg_address_2 # \i~5159\) # !reg_address_4 & !reg_address_2 & \i~5157\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F4A4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datab => \i~5157\,
	datac => ww_reg_address_4,
	datad => \i~5159\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5154\);

\i~5155_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5155\ = \i~5154\ & (\i~5161\ # !reg_address_2) # !\i~5154\ & reg_address_2 & \i~14489\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DDA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datab => \i~5161\,
	datac => \i~14489\,
	datad => \i~5154\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5155\);

\i~14490_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14490\ = reg_address_3 & \i~5163\ # !reg_address_3 & \i~5155\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3C0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_3,
	datac => \i~5163\,
	datad => \i~5155\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14490\);

\i~5282_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5282\ = reg_address_12 & (reg_address_14 # \i~14490\) # !reg_address_12 & q & !reg_address_14

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F2C2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \srom|q[2]\,
	datab => ww_reg_address_14,
	datac => ww_reg_address_12,
	datad => \i~14490\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5282\);

\i~5283_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5283\ = \i~5282\ & (q # !reg_address_14) # !\i~5282\ & q & reg_address_14

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F388",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_22,
	datab => ww_reg_address_14,
	datac => ww_q_23,
	datad => \i~5282\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5283\);

\i~14492_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14492\ = i3329 & q & (reg_address_18 # reg_address_19)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_18,
	datab => ww_reg_address_19,
	datac => ww_i3329,
	datad => ww_q_31,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14492\);

\i~14493_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14493\ = !reg_address_19 & !reg_address_18 & q

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_19,
	datac => ww_reg_address_18,
	datad => \srom|q[3]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14493\);

\i~14497_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14497\ = reg_address_5 & (reg_address_6 & q_3 # !reg_address_6 & sload_path_3)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B080",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_3,
	datab => ww_reg_address_6,
	datac => ww_reg_address_5,
	datad => ww_sload_path_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14497\);

\i~4826_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~4826\ = !reg_address_5 & reg_address_6 & atwd0_timestamp_35

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_5,
	datac => ww_reg_address_6,
	datad => ww_atwd0_timestamp_35,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~4826\);

\command_2_local[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_2_local[3]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_2_local[26]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_3,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_2_local[26]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_2_local[3]\);

\i~14494_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14494\ = reg_address_5 & rx_dpr_radr_local_3 & reg_address_6 # !reg_address_5 & \command_2_local[3]\ & !reg_address_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "A00C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_rx_dpr_radr_local_3,
	datab => \command_2_local[3]\,
	datac => ww_reg_address_5,
	datad => ww_reg_address_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14494\);

\command_1_local[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_1_local[3]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_1_local[18]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_3,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_1_local[18]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_1_local[3]\);

\command_3_local[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_3_local[3]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_3_local[0]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_3,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_3_local[0]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_3_local[3]\);

\i~14495_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14495\ = \command_1_local[3]\ & (\command_3_local[3]\ # !reg_address_5) # !\command_1_local[3]\ & reg_address_5 & \command_3_local[3]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \command_1_local[3]\,
	datac => ww_reg_address_5,
	datad => \command_3_local[3]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14495\);

\i~14496_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14496\ = reg_address_6 & !reg_address_5 & atwd0_timestamp_3 # !reg_address_6 & \i~14495\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5C0C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => \i~14495\,
	datac => ww_reg_address_6,
	datad => ww_atwd0_timestamp_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14496\);

\i~5172_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5172\ = reg_address_4 & (\i~14494\ # reg_address_2) # !reg_address_4 & !reg_address_2 & \i~14496\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CBC8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14494\,
	datab => ww_reg_address_4,
	datac => ww_reg_address_2,
	datad => \i~14496\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5172\);

\i~5173_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5173\ = \i~5172\ & (\i~14497\ # !reg_address_2) # !\i~5172\ & \i~4826\ & reg_address_2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AFC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14497\,
	datab => \i~4826\,
	datac => ww_reg_address_2,
	datad => \i~5172\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5173\);

\com_ctrl_local[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \com_ctrl_local[3]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \com_ctrl_local[2]~124\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_3,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \com_ctrl_local[2]~124\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \com_ctrl_local[3]\);

\i~5168_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5168\ = reg_address_6 & (reg_address_5 # atwd1_timestamp_3) # !reg_address_6 & oneSPEcnt_3 & !reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CEC2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_oneSPEcnt_3,
	datab => ww_reg_address_6,
	datac => ww_reg_address_5,
	datad => ww_atwd1_timestamp_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5168\);

\i~5169_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5169\ = \i~5168\ & (tx_dpr_wadr_local_3 # !reg_address_5) # !\i~5168\ & reg_address_5 & \com_ctrl_local[3]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BBC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_tx_dpr_wadr_local_3,
	datab => ww_reg_address_5,
	datac => \com_ctrl_local[3]\,
	datad => \i~5168\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5169\);

\i~5166_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5166\ = reg_address_6 & (reg_address_5 # sload_path_3) # !reg_address_6 & command_0_local_3 & !reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CEC2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_0_local_3,
	datab => ww_reg_address_6,
	datac => ww_reg_address_5,
	datad => ww_sload_path_310,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5166\);

\i~5167_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5167\ = \i~5166\ & (command_4_local_3 # !reg_address_5) # !\i~5166\ & oneSPEcnt_3 & reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_oneSPEcnt_31,
	datab => ww_command_4_local_3,
	datac => ww_reg_address_5,
	datad => \i~5166\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5167\);

\i~5164_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5164\ = reg_address_4 & (reg_address_2 # \i~5169\) # !reg_address_4 & !reg_address_2 & \i~5167\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B9A8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_4,
	datab => ww_reg_address_2,
	datac => \i~5169\,
	datad => \i~5167\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5164\);

\i~5170_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5170\ = reg_address_6 & (reg_address_5 # atwd1_timestamp_35) # !reg_address_6 & !reg_address_5 & multiSPEcnt_3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BA98",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_6,
	datab => ww_reg_address_5,
	datac => ww_multiSPEcnt_31,
	datad => ww_atwd1_timestamp_35,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5170\);

\i~5171_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5171\ = \i~5170\ & (inst16_3 # !reg_address_5) # !\i~5170\ & reg_address_5 & last_node_0

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BBC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_inst16_3,
	datab => ww_reg_address_5,
	datac => ww_last_node_0,
	datad => \i~5170\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5171\);

\i~14498_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14498\ = reg_address_6 & !reg_address_5 & sload_path_35 # !reg_address_6 & multiSPEcnt_3 & reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "2C20",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_multiSPEcnt_3,
	datab => ww_reg_address_6,
	datac => ww_reg_address_5,
	datad => ww_sload_path_35,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14498\);

\i~5165_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5165\ = \i~5164\ & (\i~5171\ # !reg_address_2) # !\i~5164\ & reg_address_2 & \i~14498\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E6A2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5164\,
	datab => ww_reg_address_2,
	datac => \i~5171\,
	datad => \i~14498\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5165\);

\i~14499_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14499\ = reg_address_3 & \i~5173\ # !reg_address_3 & \i~5165\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F5A0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datac => \i~5173\,
	datad => \i~5165\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14499\);

\i~5284_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5284\ = reg_address_14 & (reg_address_12 # q) # !reg_address_14 & q & !reg_address_12

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CEC2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \srom|q[3]\,
	datab => ww_reg_address_14,
	datac => ww_reg_address_12,
	datad => ww_q_32,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5284\);

\i~5285_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5285\ = \i~5284\ & (q # !reg_address_12) # !\i~5284\ & reg_address_12 & \i~14499\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BBC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_33,
	datab => ww_reg_address_12,
	datac => \i~14499\,
	datad => \i~5284\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5285\);

\i~14502_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14502\ = !reg_address_19 & q & !reg_address_18

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0030",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_19,
	datac => \srom|q[4]\,
	datad => ww_reg_address_18,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14502\);

\i~14501_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14501\ = i3329 & q & (reg_address_19 # reg_address_18)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "A800",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_i3329,
	datab => ww_reg_address_19,
	datac => ww_reg_address_18,
	datad => ww_q_41,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14501\);

\i~14506_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14506\ = reg_address_5 & (reg_address_6 & q_4 # !reg_address_6 & sload_path_4)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8C80",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_4,
	datab => ww_reg_address_5,
	datac => ww_reg_address_6,
	datad => ww_sload_path_4,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14506\);

\i~4829_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~4829\ = !reg_address_5 & reg_address_6 & atwd0_timestamp_36

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datac => ww_reg_address_6,
	datad => ww_atwd0_timestamp_36,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~4829\);

\command_2_local[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_2_local[4]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_2_local[26]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_4,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_2_local[26]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_2_local[4]\);

\i~14503_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14503\ = reg_address_5 & rx_dpr_radr_local_4 & reg_address_6 # !reg_address_5 & \command_2_local[4]\ & !reg_address_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8830",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_rx_dpr_radr_local_4,
	datab => ww_reg_address_5,
	datac => \command_2_local[4]\,
	datad => ww_reg_address_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14503\);

\command_1_local[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_1_local[4]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_1_local[18]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_4,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_1_local[18]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_1_local[4]\);

\command_3_local[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_3_local[4]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_3_local[0]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_4,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_3_local[0]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_3_local[4]\);

\i~14504_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14504\ = reg_address_5 & \command_3_local[4]\ # !reg_address_5 & \command_1_local[4]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA50",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datac => \command_1_local[4]\,
	datad => \command_3_local[4]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14504\);

\i~14505_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14505\ = reg_address_6 & !reg_address_5 & atwd0_timestamp_4 # !reg_address_6 & \i~14504\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "7430",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => ww_reg_address_6,
	datac => \i~14504\,
	datad => ww_atwd0_timestamp_4,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14505\);

\i~5182_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5182\ = reg_address_4 & (reg_address_2 # \i~14503\) # !reg_address_4 & !reg_address_2 & \i~14505\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "D9C8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datab => ww_reg_address_4,
	datac => \i~14503\,
	datad => \i~14505\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5182\);

\i~5183_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5183\ = \i~5182\ & (\i~14506\ # !reg_address_2) # !\i~5182\ & \i~4829\ & reg_address_2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AFC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14506\,
	datab => \i~4829\,
	datac => ww_reg_address_2,
	datad => \i~5182\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5183\);

\i~5180_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5180\ = reg_address_6 & (reg_address_5 # atwd1_timestamp_36) # !reg_address_6 & !reg_address_5 & multiSPEcnt_4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F4A4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => ww_multiSPEcnt_41,
	datac => ww_reg_address_6,
	datad => ww_atwd1_timestamp_36,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5180\);

\i~5181_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5181\ = \i~5180\ & (inst16_4 # !reg_address_5) # !\i~5180\ & comres_rcvd & reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_comres_rcvd,
	datab => ww_inst16_4,
	datac => ww_reg_address_5,
	datad => \i~5180\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5181\);

\i~14507_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14507\ = reg_address_5 & multiSPEcnt_4 & !reg_address_6 # !reg_address_5 & reg_address_6 & sload_path_36

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5808",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => ww_multiSPEcnt_4,
	datac => ww_reg_address_6,
	datad => ww_sload_path_36,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14507\);

\com_ctrl_local[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \com_ctrl_local[4]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \com_ctrl_local[2]~124\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_4,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \com_ctrl_local[2]~124\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \com_ctrl_local[4]\);

\i~5178_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5178\ = reg_address_6 & (reg_address_5 # atwd1_timestamp_4) # !reg_address_6 & !reg_address_5 & oneSPEcnt_4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F4A4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => ww_oneSPEcnt_4,
	datac => ww_reg_address_6,
	datad => ww_atwd1_timestamp_4,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5178\);

\i~5179_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5179\ = \i~5178\ & (tx_dpr_wadr_local_4 # !reg_address_5) # !\i~5178\ & reg_address_5 & \com_ctrl_local[4]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F588",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => \com_ctrl_local[4]\,
	datac => ww_tx_dpr_wadr_local_4,
	datad => \i~5178\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5179\);

\command_4_local[3]~81_I\ : apex20ke_lcell 
-- Equation(s):
-- \command_4_local[3]~81\ = !reg_address_4 & reg_address_5 & reg_address_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "4040",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_4,
	datab => ww_reg_address_5,
	datac => ww_reg_address_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \command_4_local[3]~81\);

\command_4_local[3]~32_I\ : apex20ke_lcell 
-- Equation(s):
-- \command_4_local[3]~32\ = !reg_address_2 & !reg_address_3 & \dom_id[48]~288\ & \command_4_local[3]~81\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "1000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datab => ww_reg_address_3,
	datac => \dom_id[48]~288\,
	datad => \command_4_local[3]~81\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \command_4_local[3]~32\);

\command_4_local[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_4_local[4]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_4_local[3]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_4,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_4_local[3]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_4_local[4]\);

\command_0_local[30]~129_I\ : apex20ke_lcell 
-- Equation(s):
-- \command_0_local[30]~129\ = !reg_address_5 & !reg_address_3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "000F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_reg_address_5,
	datad => ww_reg_address_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \command_0_local[30]~129\);

\command_0_local[30]~32_I\ : apex20ke_lcell 
-- Equation(s):
-- \command_0_local[30]~32\ = \i1166~111\ & !reg_address_2 & \dom_id[48]~288\ & \command_0_local[30]~129\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "2000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i1166~111\,
	datab => ww_reg_address_2,
	datac => \dom_id[48]~288\,
	datad => \command_0_local[30]~129\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \command_0_local[30]~32\);

\command_0_local[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_0_local[4]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_0_local[30]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_4,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_0_local[30]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_0_local[4]\);

\i~5176_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5176\ = reg_address_6 & (reg_address_5 # sload_path_4) # !reg_address_6 & !reg_address_5 & \command_0_local[4]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F4A4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => \command_0_local[4]\,
	datac => ww_reg_address_6,
	datad => ww_sload_path_48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5176\);

\i~5177_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5177\ = \i~5176\ & (\command_4_local[4]\ # !reg_address_5) # !\i~5176\ & oneSPEcnt_4 & reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AFC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \command_4_local[4]\,
	datab => ww_oneSPEcnt_41,
	datac => ww_reg_address_5,
	datad => \i~5176\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5177\);

\i~5174_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5174\ = reg_address_4 & (\i~5179\ # reg_address_2) # !reg_address_4 & !reg_address_2 & \i~5177\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ADA8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_4,
	datab => \i~5179\,
	datac => ww_reg_address_2,
	datad => \i~5177\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5174\);

\i~5175_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5175\ = \i~5174\ & (\i~5181\ # !reg_address_2) # !\i~5174\ & reg_address_2 & \i~14507\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DDA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datab => \i~5181\,
	datac => \i~14507\,
	datad => \i~5174\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5175\);

\i~14508_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14508\ = \i~5183\ & (reg_address_3 # \i~5175\) # !\i~5183\ & !reg_address_3 & \i~5175\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AFA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5183\,
	datac => ww_reg_address_3,
	datad => \i~5175\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14508\);

\i~5286_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5286\ = reg_address_12 & (reg_address_14 # \i~14508\) # !reg_address_12 & !reg_address_14 & q

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BA98",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_12,
	datab => ww_reg_address_14,
	datac => \srom|q[4]\,
	datad => \i~14508\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5286\);

\i~5287_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5287\ = \i~5286\ & (q # !reg_address_14) # !\i~5286\ & q & reg_address_14

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F388",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_42,
	datab => ww_reg_address_14,
	datac => ww_q_43,
	datad => \i~5286\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5287\);

\i~14510_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14510\ = i3329 & q & (reg_address_19 # reg_address_18)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C800",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_19,
	datab => ww_i3329,
	datac => ww_reg_address_18,
	datad => ww_q_51,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14510\);

\i~14511_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14511\ = !reg_address_19 & !reg_address_18 & q

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_19,
	datac => ww_reg_address_18,
	datad => \srom|q[5]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14511\);

\command_2_local[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_2_local[5]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_2_local[26]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_5,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_2_local[26]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_2_local[5]\);

\i~14512_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14512\ = reg_address_5 & reg_address_6 & rx_dpr_radr_local_5 # !reg_address_5 & !reg_address_6 & \command_2_local[5]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "9180",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => ww_reg_address_6,
	datac => ww_rx_dpr_radr_local_5,
	datad => \command_2_local[5]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14512\);

\command_3_local[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_3_local[5]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_3_local[0]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_5,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_3_local[0]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_3_local[5]\);

\command_1_local[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_1_local[5]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_1_local[18]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_5,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_1_local[18]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_1_local[5]\);

\i~14513_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14513\ = \command_3_local[5]\ & (reg_address_5 # \command_1_local[5]\) # !\command_3_local[5]\ & !reg_address_5 & \command_1_local[5]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \command_3_local[5]\,
	datac => ww_reg_address_5,
	datad => \command_1_local[5]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14513\);

\i~14514_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14514\ = reg_address_6 & !reg_address_5 & atwd0_timestamp_5 # !reg_address_6 & \i~14513\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5C0C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => \i~14513\,
	datac => ww_reg_address_6,
	datad => ww_atwd0_timestamp_5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14514\);

\i~5192_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5192\ = reg_address_4 & (\i~14512\ # reg_address_2) # !reg_address_4 & !reg_address_2 & \i~14514\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CBC8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14512\,
	datab => ww_reg_address_4,
	datac => ww_reg_address_2,
	datad => \i~14514\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5192\);

\i~14515_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14515\ = reg_address_5 & (reg_address_6 & q_5 # !reg_address_6 & sload_path_5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8A80",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => ww_q_5,
	datac => ww_reg_address_6,
	datad => ww_sload_path_5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14515\);

\i~4832_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~4832\ = !reg_address_5 & reg_address_6 & atwd0_timestamp_37

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datac => ww_reg_address_6,
	datad => ww_atwd0_timestamp_37,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~4832\);

\i~5193_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5193\ = \i~5192\ & (\i~14515\ # !reg_address_2) # !\i~5192\ & reg_address_2 & \i~4832\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E6C4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datab => \i~5192\,
	datac => \i~14515\,
	datad => \i~4832\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5193\);

\i~5190_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5190\ = reg_address_6 & (reg_address_5 # atwd1_timestamp_37) # !reg_address_6 & multiSPEcnt_5 & !reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F2C2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_multiSPEcnt_51,
	datab => ww_reg_address_5,
	datac => ww_reg_address_6,
	datad => ww_atwd1_timestamp_37,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5190\);

\i~5191_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5191\ = \i~5190\ & (inst16_5 # !reg_address_5) # !\i~5190\ & op_6 & reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AFC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_inst16_5,
	datab => ww_op_61,
	datac => ww_reg_address_5,
	datad => \i~5190\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5191\);

\i~14516_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14516\ = reg_address_6 & !reg_address_5 & sload_path_37 # !reg_address_6 & multiSPEcnt_5 & reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "2C20",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_multiSPEcnt_5,
	datab => ww_reg_address_6,
	datac => ww_reg_address_5,
	datad => ww_sload_path_37,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14516\);

\command_4_local[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_4_local[5]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_4_local[3]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_5,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_4_local[3]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_4_local[5]\);

\command_0_local[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_0_local[5]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_0_local[30]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_5,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_0_local[30]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_0_local[5]\);

\i~5186_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5186\ = reg_address_6 & (reg_address_5 # sload_path_5) # !reg_address_6 & !reg_address_5 & \command_0_local[5]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F4A4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => \command_0_local[5]\,
	datac => ww_reg_address_6,
	datad => ww_sload_path_51,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5186\);

\i~5187_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5187\ = \i~5186\ & (\command_4_local[5]\ # !reg_address_5) # !\i~5186\ & oneSPEcnt_5 & reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AFC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \command_4_local[5]\,
	datab => ww_oneSPEcnt_51,
	datac => ww_reg_address_5,
	datad => \i~5186\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5187\);

\com_ctrl_local[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \com_ctrl_local[5]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \com_ctrl_local[2]~124\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_5,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \com_ctrl_local[2]~124\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \com_ctrl_local[5]\);

\i~5188_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5188\ = reg_address_6 & (reg_address_5 # atwd1_timestamp_5) # !reg_address_6 & oneSPEcnt_5 & !reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AEA4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_6,
	datab => ww_oneSPEcnt_5,
	datac => ww_reg_address_5,
	datad => ww_atwd1_timestamp_5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5188\);

\i~5189_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5189\ = \i~5188\ & (tx_dpr_wadr_local_5 # !reg_address_5) # !\i~5188\ & \com_ctrl_local[5]\ & reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \com_ctrl_local[5]\,
	datab => ww_tx_dpr_wadr_local_5,
	datac => ww_reg_address_5,
	datad => \i~5188\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5189\);

\i~5184_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5184\ = reg_address_4 & (reg_address_2 # \i~5189\) # !reg_address_4 & \i~5187\ & !reg_address_2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AEA4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_4,
	datab => \i~5187\,
	datac => ww_reg_address_2,
	datad => \i~5189\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5184\);

\i~5185_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5185\ = \i~5184\ & (\i~5191\ # !reg_address_2) # !\i~5184\ & reg_address_2 & \i~14516\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DDA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datab => \i~5191\,
	datac => \i~14516\,
	datad => \i~5184\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5185\);

\i~14517_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14517\ = \i~5193\ & (reg_address_3 # \i~5185\) # !\i~5193\ & !reg_address_3 & \i~5185\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \i~5193\,
	datac => ww_reg_address_3,
	datad => \i~5185\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14517\);

\i~5288_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5288\ = reg_address_14 & (reg_address_12 # q) # !reg_address_14 & q & !reg_address_12

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F2C2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \srom|q[5]\,
	datab => ww_reg_address_12,
	datac => ww_reg_address_14,
	datad => ww_q_52,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5288\);

\i~5289_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5289\ = \i~5288\ & (q # !reg_address_12) # !\i~5288\ & reg_address_12 & \i~14517\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BBC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_53,
	datab => ww_reg_address_12,
	datac => \i~14517\,
	datad => \i~5288\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5289\);

\i~14519_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14519\ = i3329 & q & (reg_address_19 # reg_address_18)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C800",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_19,
	datab => ww_i3329,
	datac => ww_reg_address_18,
	datad => ww_q_61,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14519\);

\i~14520_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14520\ = q & !reg_address_19 & !reg_address_18

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "000A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \srom|q[6]\,
	datac => ww_reg_address_19,
	datad => ww_reg_address_18,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14520\);

\i~14524_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14524\ = reg_address_5 & (reg_address_6 & q_6 # !reg_address_6 & sload_path_6)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B080",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_6,
	datab => ww_reg_address_6,
	datac => ww_reg_address_5,
	datad => ww_sload_path_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14524\);

\i~4835_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~4835\ = !reg_address_5 & reg_address_6 & atwd0_timestamp_38

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_5,
	datac => ww_reg_address_6,
	datad => ww_atwd0_timestamp_38,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~4835\);

\command_2_local[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_2_local[6]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_2_local[26]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_6,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_2_local[26]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_2_local[6]\);

\i~14521_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14521\ = reg_address_6 & rx_dpr_radr_local_6 & reg_address_5 # !reg_address_6 & !reg_address_5 & \command_2_local[6]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8580",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_6,
	datab => ww_rx_dpr_radr_local_6,
	datac => ww_reg_address_5,
	datad => \command_2_local[6]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14521\);

\command_3_local[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_3_local[6]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_3_local[0]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_6,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_3_local[0]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_3_local[6]\);

\command_1_local[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_1_local[6]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_1_local[18]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_6,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_1_local[18]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_1_local[6]\);

\i~14522_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14522\ = \command_3_local[6]\ & (\command_1_local[6]\ # reg_address_5) # !\command_3_local[6]\ & \command_1_local[6]\ & !reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CCF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \command_3_local[6]\,
	datac => \command_1_local[6]\,
	datad => ww_reg_address_5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14522\);

\i~14523_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14523\ = reg_address_6 & !reg_address_5 & atwd0_timestamp_6 # !reg_address_6 & \i~14522\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3A0A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14522\,
	datab => ww_reg_address_5,
	datac => ww_reg_address_6,
	datad => ww_atwd0_timestamp_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14523\);

\i~5202_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5202\ = reg_address_4 & (reg_address_2 # \i~14521\) # !reg_address_4 & !reg_address_2 & \i~14523\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E5E0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datab => \i~14521\,
	datac => ww_reg_address_4,
	datad => \i~14523\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5202\);

\i~5203_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5203\ = \i~5202\ & (\i~14524\ # !reg_address_2) # !\i~5202\ & \i~4835\ & reg_address_2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AFC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14524\,
	datab => \i~4835\,
	datac => ww_reg_address_2,
	datad => \i~5202\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5203\);

\i~14525_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14525\ = reg_address_5 & multiSPEcnt_6 & !reg_address_6 # !reg_address_5 & reg_address_6 & sload_path_38

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3808",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_multiSPEcnt_6,
	datab => ww_reg_address_5,
	datac => ww_reg_address_6,
	datad => ww_sload_path_38,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14525\);

\i~5200_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5200\ = reg_address_6 & (reg_address_5 # atwd1_timestamp_38) # !reg_address_6 & multiSPEcnt_6 & !reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F2C2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_multiSPEcnt_61,
	datab => ww_reg_address_5,
	datac => ww_reg_address_6,
	datad => ww_atwd1_timestamp_38,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5200\);

\i~5201_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5201\ = \i~5200\ & (inst16_6 # !reg_address_5) # !\i~5200\ & reg_address_5 & com_avail

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BBC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_inst16_6,
	datab => ww_reg_address_5,
	datac => ww_com_avail,
	datad => \i~5200\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5201\);

\command_4_local[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_4_local[6]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_4_local[3]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_6,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_4_local[3]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_4_local[6]\);

\command_0_local[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_0_local[6]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_0_local[30]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_6,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_0_local[30]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_0_local[6]\);

\i~5196_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5196\ = reg_address_6 & (reg_address_5 # sload_path_6) # !reg_address_6 & \command_0_local[6]\ & !reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AEA4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_6,
	datab => \command_0_local[6]\,
	datac => ww_reg_address_5,
	datad => ww_sload_path_61,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5196\);

\i~5197_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5197\ = \i~5196\ & (\command_4_local[6]\ # !reg_address_5) # !\i~5196\ & reg_address_5 & oneSPEcnt_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F588",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => ww_oneSPEcnt_61,
	datac => \command_4_local[6]\,
	datad => \i~5196\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5197\);

\i~5198_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5198\ = reg_address_6 & (reg_address_5 # atwd1_timestamp_6) # !reg_address_6 & oneSPEcnt_6 & !reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CEC2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_oneSPEcnt_6,
	datab => ww_reg_address_6,
	datac => ww_reg_address_5,
	datad => ww_atwd1_timestamp_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5198\);

\com_ctrl_local[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \com_ctrl_local[6]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \com_ctrl_local[2]~124\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_6,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \com_ctrl_local[2]~124\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \com_ctrl_local[6]\);

\i~5199_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5199\ = \i~5198\ & (tx_dpr_wadr_local_6 # !reg_address_5) # !\i~5198\ & reg_address_5 & \com_ctrl_local[6]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DAD0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => ww_tx_dpr_wadr_local_6,
	datac => \i~5198\,
	datad => \com_ctrl_local[6]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5199\);

\i~5194_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5194\ = reg_address_4 & (reg_address_2 # \i~5199\) # !reg_address_4 & \i~5197\ & !reg_address_2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CEC2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5197\,
	datab => ww_reg_address_4,
	datac => ww_reg_address_2,
	datad => \i~5199\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5194\);

\i~5195_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5195\ = \i~5194\ & (\i~5201\ # !reg_address_2) # !\i~5194\ & reg_address_2 & \i~14525\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F588",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datab => \i~14525\,
	datac => \i~5201\,
	datad => \i~5194\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5195\);

\i~14526_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14526\ = \i~5203\ & (reg_address_3 # \i~5195\) # !\i~5203\ & !reg_address_3 & \i~5195\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \i~5203\,
	datac => ww_reg_address_3,
	datad => \i~5195\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14526\);

\i~5290_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5290\ = reg_address_12 & (reg_address_14 # \i~14526\) # !reg_address_12 & q & !reg_address_14

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F2C2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \srom|q[6]\,
	datab => ww_reg_address_14,
	datac => ww_reg_address_12,
	datad => \i~14526\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5290\);

\i~5291_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5291\ = \i~5290\ & (q # !reg_address_14) # !\i~5290\ & q & reg_address_14

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F388",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_62,
	datab => ww_reg_address_14,
	datac => ww_q_63,
	datad => \i~5290\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5291\);

\i~14528_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14528\ = i3329 & q & (reg_address_18 # reg_address_19)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_18,
	datab => ww_reg_address_19,
	datac => ww_i3329,
	datad => ww_q_71,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14528\);

\i~14529_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14529\ = !reg_address_19 & !reg_address_18 & q

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_19,
	datac => ww_reg_address_18,
	datad => \srom|q[7]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14529\);

\i~14533_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14533\ = reg_address_5 & (reg_address_6 & q_7 # !reg_address_6 & sload_path_7)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B080",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_7,
	datab => ww_reg_address_6,
	datac => ww_reg_address_5,
	datad => ww_sload_path_7,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14533\);

\command_2_local[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_2_local[7]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_2_local[26]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_7,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_2_local[26]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_2_local[7]\);

\i~14530_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14530\ = reg_address_5 & rx_dpr_radr_local_7 & reg_address_6 # !reg_address_5 & !reg_address_6 & \command_2_local[7]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8580",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => ww_rx_dpr_radr_local_7,
	datac => ww_reg_address_6,
	datad => \command_2_local[7]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14530\);

\command_3_local[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_3_local[7]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_3_local[0]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_7,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_3_local[0]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_3_local[7]\);

\command_1_local[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_1_local[7]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_1_local[18]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_7,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_1_local[18]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_1_local[7]\);

\i~14531_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14531\ = \command_3_local[7]\ & (\command_1_local[7]\ # reg_address_5) # !\command_3_local[7]\ & \command_1_local[7]\ & !reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CCF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \command_3_local[7]\,
	datac => \command_1_local[7]\,
	datad => ww_reg_address_5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14531\);

\i~14532_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14532\ = reg_address_6 & !reg_address_5 & atwd0_timestamp_7 # !reg_address_6 & \i~14531\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "50CC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => \i~14531\,
	datac => ww_atwd0_timestamp_7,
	datad => ww_reg_address_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14532\);

\i~4838_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~4838\ = reg_address_6 & !reg_address_5 & atwd0_timestamp_39

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0C00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_6,
	datac => ww_reg_address_5,
	datad => ww_atwd0_timestamp_39,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~4838\);

\i~5210_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5210\ = reg_address_2 & (reg_address_4 # \i~4838\) # !reg_address_2 & !reg_address_4 & \i~14532\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DC98",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_4,
	datab => ww_reg_address_2,
	datac => \i~14532\,
	datad => \i~4838\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5210\);

\i~5211_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5211\ = \i~5210\ & (\i~14533\ # !reg_address_4) # !\i~5210\ & reg_address_4 & \i~14530\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BBC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14533\,
	datab => ww_reg_address_4,
	datac => \i~14530\,
	datad => \i~5210\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5211\);

\i~14535_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14535\ = multiSPEcnt_7 & (atwd1_timestamp_39 # !reg_address_6) # !multiSPEcnt_7 & reg_address_6 & atwd1_timestamp_39

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_multiSPEcnt_71,
	datac => ww_reg_address_6,
	datad => ww_atwd1_timestamp_39,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14535\);

\i~14536_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14536\ = reg_address_5 & inst16_7 & reg_address_6 # !reg_address_5 & \i~14535\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B380",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_inst16_7,
	datab => ww_reg_address_5,
	datac => ww_reg_address_6,
	datad => \i~14535\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14536\);

\com_ctrl_local[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- \com_ctrl_local[7]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \com_ctrl_local[2]~124\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_7,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \com_ctrl_local[2]~124\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \com_ctrl_local[7]\);

\i~5208_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5208\ = reg_address_6 & (reg_address_5 # atwd1_timestamp_7) # !reg_address_6 & oneSPEcnt_7 & !reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AEA4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_6,
	datab => ww_oneSPEcnt_7,
	datac => ww_reg_address_5,
	datad => ww_atwd1_timestamp_7,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5208\);

\i~5209_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5209\ = \i~5208\ & (tx_dpr_wadr_local_7 # !reg_address_5) # !\i~5208\ & \com_ctrl_local[7]\ & reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AFC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_tx_dpr_wadr_local_7,
	datab => \com_ctrl_local[7]\,
	datac => ww_reg_address_5,
	datad => \i~5208\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5209\);

\command_4_local[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_4_local[7]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_4_local[3]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_7,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_4_local[3]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_4_local[7]\);

\command_0_local[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_0_local[7]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_0_local[30]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_7,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_0_local[30]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_0_local[7]\);

\i~5206_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5206\ = reg_address_6 & (reg_address_5 # sload_path_7) # !reg_address_6 & \command_0_local[7]\ & !reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F2C2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \command_0_local[7]\,
	datab => ww_reg_address_5,
	datac => ww_reg_address_6,
	datad => ww_sload_path_71,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5206\);

\i~5207_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5207\ = \i~5206\ & (\command_4_local[7]\ # !reg_address_5) # !\i~5206\ & oneSPEcnt_7 & reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F388",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_oneSPEcnt_71,
	datab => ww_reg_address_5,
	datac => \command_4_local[7]\,
	datad => \i~5206\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5207\);

\i~5204_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5204\ = reg_address_4 & (reg_address_2 # \i~5209\) # !reg_address_4 & !reg_address_2 & \i~5207\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E5E0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datab => \i~5209\,
	datac => ww_reg_address_4,
	datad => \i~5207\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5204\);

\i~14534_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14534\ = reg_address_5 & multiSPEcnt_7 & !reg_address_6 # !reg_address_5 & reg_address_6 & sload_path_39

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3808",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_multiSPEcnt_7,
	datab => ww_reg_address_5,
	datac => ww_reg_address_6,
	datad => ww_sload_path_39,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14534\);

\i~5205_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5205\ = \i~5204\ & (\i~14536\ # !reg_address_2) # !\i~5204\ & reg_address_2 & \i~14534\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DAD0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datab => \i~14536\,
	datac => \i~5204\,
	datad => \i~14534\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5205\);

\i~14537_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14537\ = \i~5211\ & (reg_address_3 # \i~5205\) # !\i~5211\ & !reg_address_3 & \i~5205\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AFA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5211\,
	datac => ww_reg_address_3,
	datad => \i~5205\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14537\);

\i~5292_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5292\ = reg_address_14 & (reg_address_12 # q) # !reg_address_14 & q & !reg_address_12

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AEA4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_14,
	datab => \srom|q[7]\,
	datac => ww_reg_address_12,
	datad => ww_q_72,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5292\);

\i~5293_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5293\ = \i~5292\ & (q # !reg_address_12) # !\i~5292\ & reg_address_12 & \i~14537\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DDA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_12,
	datab => ww_q_73,
	datac => \i~14537\,
	datad => \i~5292\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5293\);

\i~14539_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14539\ = i3329 & q & (reg_address_19 # reg_address_18)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C800",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_19,
	datab => ww_i3329,
	datac => ww_reg_address_18,
	datad => ww_q_81,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14539\);

\i~14540_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14540\ = !reg_address_18 & q & !reg_address_19

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0050",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_18,
	datac => \srom|q[8]\,
	datad => ww_reg_address_19,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14540\);

\i~5218_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5218\ = reg_address_6 & (command_4_local_8 # reg_address_4) # !reg_address_6 & !reg_address_4 & oneSPEcnt_8

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E3E0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_4_local_8,
	datab => ww_reg_address_4,
	datac => ww_reg_address_6,
	datad => ww_oneSPEcnt_8,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5218\);

\com_ctrl_local[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- \com_ctrl_local[8]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \com_ctrl_local[2]~124\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_8,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \com_ctrl_local[2]~124\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \com_ctrl_local[8]\);

\i~5219_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5219\ = \i~5218\ & (tx_dpr_wadr_local_8 # !reg_address_4) # !\i~5218\ & reg_address_4 & \com_ctrl_local[8]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E6A2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5218\,
	datab => ww_reg_address_4,
	datac => ww_tx_dpr_wadr_local_8,
	datad => \com_ctrl_local[8]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5219\);

\i~5214_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5214\ = reg_address_6 & (reg_address_4 # sload_path_8) # !reg_address_6 & command_0_local_8 & !reg_address_4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F2C2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_0_local_8,
	datab => ww_reg_address_4,
	datac => ww_reg_address_6,
	datad => ww_sload_path_81,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5214\);

\i~5215_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5215\ = \i~5214\ & (atwd1_timestamp_8 # !reg_address_4) # !\i~5214\ & reg_address_4 & oneSPEcnt_8

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EC64",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_4,
	datab => \i~5214\,
	datac => ww_oneSPEcnt_81,
	datad => ww_atwd1_timestamp_8,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5215\);

\i~5212_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5212\ = reg_address_5 & (\i~5219\ # reg_address_2) # !reg_address_5 & !reg_address_2 & \i~5215\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E3E0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5219\,
	datab => ww_reg_address_2,
	datac => ww_reg_address_5,
	datad => \i~5215\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5212\);

\i~14547_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14547\ = reg_address_4 & inst16_8 & reg_address_6 # !reg_address_4 & multiSPEcnt_8 & !reg_address_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8830",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_inst16_8,
	datab => ww_reg_address_4,
	datac => ww_multiSPEcnt_81,
	datad => ww_reg_address_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14547\);

\i~5216_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5216\ = reg_address_6 & (sload_path_40 # reg_address_4) # !reg_address_6 & !reg_address_4 & done

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E3E0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_40,
	datab => ww_reg_address_4,
	datac => ww_reg_address_6,
	datad => ww_done1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5216\);

\i~5217_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5217\ = \i~5216\ & (atwd1_timestamp_40 # !reg_address_4) # !\i~5216\ & reg_address_4 & multiSPEcnt_8

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DDA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_4,
	datab => ww_atwd1_timestamp_40,
	datac => ww_multiSPEcnt_8,
	datad => \i~5216\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5217\);

\i~5213_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5213\ = \i~5212\ & (\i~14547\ # !reg_address_2) # !\i~5212\ & reg_address_2 & \i~5217\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E6C4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datab => \i~5212\,
	datac => \i~14547\,
	datad => \i~5217\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5213\);

\i~14545_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14545\ = reg_address_6 & q_8 # !reg_address_6 & sload_path_8

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3C0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_6,
	datac => ww_q_8,
	datad => ww_sload_path_8,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14545\);

\i~14546_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14546\ = reg_address_2 & \i~14545\ # !reg_address_2 & rx_dpr_radr_local_8 & reg_address_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F808",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_rx_dpr_radr_local_8,
	datab => ww_reg_address_6,
	datac => ww_reg_address_2,
	datad => \i~14545\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14546\);

\i~14541_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14541\ = \COINC_DOWN_A~combout\ & (FF_down_a # !\command_2_local[2]\) # !\COINC_DOWN_A~combout\ & FF_down_a & \command_2_local[2]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0CC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_COINC_DOWN_A,
	datac => ww_FF_down_a,
	datad => \command_2_local[2]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14541\);

\i~14542_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14542\ = !reg_address_6 & (reg_address_2 & \i~14541\ # !reg_address_2 & command_2_local_8)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0D08",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datab => \i~14541\,
	datac => ww_reg_address_6,
	datad => ww_command_2_local_8,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14542\);

\command_3_local[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_3_local[8]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_3_local[0]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_8,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_3_local[0]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_3_local[8]\);

\i~4840_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~4840\ = !reg_address_2 & !reg_address_6 & \command_3_local[8]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "1010",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datab => ww_reg_address_6,
	datac => \command_3_local[8]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~4840\);

\command_1_local[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_1_local[8]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_1_local[18]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_8,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_1_local[18]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_1_local[8]\);

\i~14543_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14543\ = \command_1_local[8]\ & (atwd0_timestamp_8 # !reg_address_6) # !\command_1_local[8]\ & reg_address_6 & atwd0_timestamp_8

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \command_1_local[8]\,
	datac => ww_reg_address_6,
	datad => ww_atwd0_timestamp_8,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14543\);

\i~14544_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14544\ = reg_address_2 & reg_address_6 & atwd0_timestamp_40 # !reg_address_2 & \i~14543\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E222",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14543\,
	datab => ww_reg_address_2,
	datac => ww_reg_address_6,
	datad => ww_atwd0_timestamp_40,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14544\);

\i~5220_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5220\ = reg_address_5 & (\i~4840\ # reg_address_4) # !reg_address_5 & !reg_address_4 & \i~14544\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CBC8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~4840\,
	datab => ww_reg_address_5,
	datac => ww_reg_address_4,
	datad => \i~14544\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5220\);

\i~5221_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5221\ = \i~5220\ & (\i~14546\ # !reg_address_4) # !\i~5220\ & \i~14542\ & reg_address_4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AFC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14546\,
	datab => \i~14542\,
	datac => ww_reg_address_4,
	datad => \i~5220\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5221\);

\i~14548_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14548\ = \i~5213\ & (\i~5221\ # !reg_address_3) # !\i~5213\ & reg_address_3 & \i~5221\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5213\,
	datac => ww_reg_address_3,
	datad => \i~5221\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14548\);

\i~5294_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5294\ = reg_address_12 & (reg_address_14 # \i~14548\) # !reg_address_12 & q & !reg_address_14

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F2C2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \srom|q[8]\,
	datab => ww_reg_address_14,
	datac => ww_reg_address_12,
	datad => \i~14548\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5294\);

\i~5295_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5295\ = \i~5294\ & (q # !reg_address_14) # !\i~5294\ & q & reg_address_14

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F388",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_82,
	datab => ww_reg_address_14,
	datac => ww_q_83,
	datad => \i~5294\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5295\);

\i~14550_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14550\ = i3329 & q & (reg_address_19 # reg_address_18)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C800",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_19,
	datab => ww_i3329,
	datac => ww_reg_address_18,
	datad => ww_q_91,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14550\);

\i~14551_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14551\ = !reg_address_19 & !reg_address_18 & q

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0500",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_19,
	datac => ww_reg_address_18,
	datad => \srom|q[9]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14551\);

\i~5296_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5296\ = reg_address_14 & (reg_address_12 # q) # !reg_address_14 & q & !reg_address_12

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CEC2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \srom|q[9]\,
	datab => ww_reg_address_14,
	datac => ww_reg_address_12,
	datad => ww_q_92,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5296\);

\i~14552_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14552\ = \command_2_local[2]\ & !FF_down_abar # !\command_2_local[2]\ & \COINC_DOWN_ABAR~combout\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "30FC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \command_2_local[2]\,
	datac => ww_COINC_DOWN_ABAR,
	datad => ww_FF_down_abar,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14552\);

\i~14553_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14553\ = !reg_address_6 & (reg_address_2 & \i~14552\ # !reg_address_2 & command_2_local_9)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "4540",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_6,
	datab => \i~14552\,
	datac => ww_reg_address_2,
	datad => ww_command_2_local_9,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14553\);

\i~14556_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14556\ = q_9 & (reg_address_6 # sload_path_9) # !q_9 & !reg_address_6 & sload_path_9

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BB88",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_9,
	datab => ww_reg_address_6,
	datad => ww_sload_path_9,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14556\);

\i~14557_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14557\ = reg_address_2 & \i~14556\ # !reg_address_2 & reg_address_6 & rx_dpr_radr_local_9

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F808",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_6,
	datab => ww_rx_dpr_radr_local_9,
	datac => ww_reg_address_2,
	datad => \i~14556\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14557\);

\command_3_local[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_3_local[9]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_3_local[0]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_9,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_3_local[0]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_3_local[9]\);

\i~4842_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~4842\ = !reg_address_2 & !reg_address_6 & \command_3_local[9]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_2,
	datac => ww_reg_address_6,
	datad => \command_3_local[9]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~4842\);

\command_1_local[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_1_local[9]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_1_local[18]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_9,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_1_local[18]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_1_local[9]\);

\i~14554_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14554\ = \command_1_local[9]\ & (atwd0_timestamp_9 # !reg_address_6) # !\command_1_local[9]\ & reg_address_6 & atwd0_timestamp_9

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \command_1_local[9]\,
	datac => ww_reg_address_6,
	datad => ww_atwd0_timestamp_9,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14554\);

\i~14555_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14555\ = reg_address_2 & atwd0_timestamp_41 & reg_address_6 # !reg_address_2 & \i~14554\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B380",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_atwd0_timestamp_41,
	datab => ww_reg_address_2,
	datac => ww_reg_address_6,
	datad => \i~14554\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14555\);

\i~5228_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5228\ = reg_address_5 & (\i~4842\ # reg_address_4) # !reg_address_5 & !reg_address_4 & \i~14555\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E3E0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~4842\,
	datab => ww_reg_address_4,
	datac => ww_reg_address_5,
	datad => \i~14555\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5228\);

\i~5229_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5229\ = \i~5228\ & (\i~14557\ # !reg_address_4) # !\i~5228\ & \i~14553\ & reg_address_4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F388",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14553\,
	datab => ww_reg_address_4,
	datac => \i~14557\,
	datad => \i~5228\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5229\);

\command_4_local[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_4_local[9]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_4_local[3]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_9,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_4_local[3]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_4_local[9]\);

\i~5224_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5224\ = reg_address_6 & (reg_address_5 # sload_path_9) # !reg_address_6 & command_0_local_9 & !reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F2C2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_0_local_9,
	datab => ww_reg_address_5,
	datac => ww_reg_address_6,
	datad => ww_sload_path_91,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5224\);

\i~5225_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5225\ = \i~5224\ & (\command_4_local[9]\ # !reg_address_5) # !\i~5224\ & reg_address_5 & oneSPEcnt_9

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DDA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => \command_4_local[9]\,
	datac => ww_oneSPEcnt_91,
	datad => \i~5224\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5225\);

\com_ctrl_local[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- \com_ctrl_local[9]\ = DFFE(!MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \com_ctrl_local[2]~124\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F0F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_9,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \com_ctrl_local[2]~124\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \com_ctrl_local[9]\);

\i~5226_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5226\ = reg_address_6 & (reg_address_5 # atwd1_timestamp_9) # !reg_address_6 & oneSPEcnt_9 & !reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F2C2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_oneSPEcnt_9,
	datab => ww_reg_address_5,
	datac => ww_reg_address_6,
	datad => ww_atwd1_timestamp_9,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5226\);

\i~5227_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5227\ = \i~5226\ & (tx_dpr_wadr_local_9 # !reg_address_5) # !\i~5226\ & !\com_ctrl_local[9]\ & reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F344",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \com_ctrl_local[9]\,
	datab => ww_reg_address_5,
	datac => ww_tx_dpr_wadr_local_9,
	datad => \i~5226\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5227\);

\i~5222_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5222\ = reg_address_4 & (reg_address_2 # \i~5227\) # !reg_address_4 & \i~5225\ & !reg_address_2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AEA4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_4,
	datab => \i~5225\,
	datac => ww_reg_address_2,
	datad => \i~5227\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5222\);

\i~14558_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14558\ = reg_address_5 & multiSPEcnt_9 & !reg_address_6 # !reg_address_5 & sload_path_41 & reg_address_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3088",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_multiSPEcnt_9,
	datab => ww_reg_address_5,
	datac => ww_sload_path_41,
	datad => ww_reg_address_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14558\);

\i~14559_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14559\ = reg_address_6 & atwd1_timestamp_41 # !reg_address_6 & multiSPEcnt_9

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC30",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_6,
	datac => ww_multiSPEcnt_91,
	datad => ww_atwd1_timestamp_41,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14559\);

\i~14560_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14560\ = reg_address_5 & inst16_9 & reg_address_6 # !reg_address_5 & \i~14559\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8F80",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_inst16_9,
	datab => ww_reg_address_6,
	datac => ww_reg_address_5,
	datad => \i~14559\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14560\);

\i~5223_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5223\ = \i~5222\ & (\i~14560\ # !reg_address_2) # !\i~5222\ & \i~14558\ & reg_address_2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EA4A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5222\,
	datab => \i~14558\,
	datac => ww_reg_address_2,
	datad => \i~14560\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5223\);

\i~14561_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14561\ = \i~5229\ & (reg_address_3 # \i~5223\) # !\i~5229\ & !reg_address_3 & \i~5223\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AFA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5229\,
	datac => ww_reg_address_3,
	datad => \i~5223\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14561\);

\i~5297_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5297\ = \i~5296\ & (q # !reg_address_12) # !\i~5296\ & reg_address_12 & \i~14561\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DA8A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5296\,
	datab => ww_q_93,
	datac => ww_reg_address_12,
	datad => \i~14561\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5297\);

\i~14569_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14569\ = q_10 & (reg_address_6 # sload_path_10) # !q_10 & !reg_address_6 & sload_path_10

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BB88",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_10,
	datab => ww_reg_address_6,
	datad => ww_sload_path_10,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14569\);

\i~14570_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14570\ = reg_address_2 & \i~14569\ # !reg_address_2 & rx_dpr_radr_local_10 & reg_address_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F808",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_rx_dpr_radr_local_10,
	datab => ww_reg_address_6,
	datac => ww_reg_address_2,
	datad => \i~14569\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14570\);

\i~14565_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14565\ = FF_down_b & (\COINC_DOWN_B~combout\ # \command_2_local[2]\) # !FF_down_b & \COINC_DOWN_B~combout\ & !\command_2_local[2]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AAF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_FF_down_b,
	datac => ww_COINC_DOWN_B,
	datad => \command_2_local[2]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14565\);

\i~14566_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14566\ = !reg_address_6 & (reg_address_2 & \i~14565\ # !reg_address_2 & command_2_local_10)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0E02",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_2_local_10,
	datab => ww_reg_address_2,
	datac => ww_reg_address_6,
	datad => \i~14565\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14566\);

\command_3_local[10]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_3_local[10]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_3_local[0]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_10,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_3_local[0]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_3_local[10]\);

\i~4844_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~4844\ = !reg_address_6 & !reg_address_2 & \command_3_local[10]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "1010",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_6,
	datab => ww_reg_address_2,
	datac => \command_3_local[10]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~4844\);

\command_1_local[10]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_1_local[10]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_1_local[18]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_10,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_1_local[18]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_1_local[10]\);

\i~14567_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14567\ = reg_address_6 & atwd0_timestamp_10 # !reg_address_6 & \command_1_local[10]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA50",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_6,
	datac => \command_1_local[10]\,
	datad => ww_atwd0_timestamp_10,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14567\);

\i~14568_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14568\ = reg_address_2 & atwd0_timestamp_42 & reg_address_6 # !reg_address_2 & \i~14567\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "D580",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datab => ww_atwd0_timestamp_42,
	datac => ww_reg_address_6,
	datad => \i~14567\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14568\);

\i~5236_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5236\ = reg_address_5 & (\i~4844\ # reg_address_4) # !reg_address_5 & !reg_address_4 & \i~14568\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E3E0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~4844\,
	datab => ww_reg_address_4,
	datac => ww_reg_address_5,
	datad => \i~14568\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5236\);

\i~5237_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5237\ = \i~5236\ & (\i~14570\ # !reg_address_4) # !\i~5236\ & reg_address_4 & \i~14566\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BBC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14570\,
	datab => ww_reg_address_4,
	datac => \i~14566\,
	datad => \i~5236\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5237\);

\i~14571_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14571\ = reg_address_5 & multiSPEcnt_10 & !reg_address_6 # !reg_address_5 & reg_address_6 & sload_path_42

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3808",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_multiSPEcnt_10,
	datab => ww_reg_address_5,
	datac => ww_reg_address_6,
	datad => ww_sload_path_42,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14571\);

\i~14572_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14572\ = multiSPEcnt_10 & (atwd1_timestamp_42 # !reg_address_6) # !multiSPEcnt_10 & reg_address_6 & atwd1_timestamp_42

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_multiSPEcnt_101,
	datac => ww_reg_address_6,
	datad => ww_atwd1_timestamp_42,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14572\);

\i~14573_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14573\ = reg_address_5 & inst16_10 & reg_address_6 # !reg_address_5 & \i~14572\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B380",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_inst16_10,
	datab => ww_reg_address_5,
	datac => ww_reg_address_6,
	datad => \i~14572\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14573\);

\com_ctrl_local[10]~I\ : apex20ke_lcell 
-- Equation(s):
-- \com_ctrl_local[10]\ = DFFE(!MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \com_ctrl_local[2]~124\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00FF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_10,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \com_ctrl_local[2]~124\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \com_ctrl_local[10]\);

\i~5234_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5234\ = reg_address_6 & (reg_address_5 # atwd1_timestamp_10) # !reg_address_6 & !reg_address_5 & oneSPEcnt_10

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F4A4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => ww_oneSPEcnt_10,
	datac => ww_reg_address_6,
	datad => ww_atwd1_timestamp_10,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5234\);

\i~5235_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5235\ = \i~5234\ & (tx_dpr_wadr_local_10 # !reg_address_5) # !\i~5234\ & reg_address_5 & !\com_ctrl_local[10]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F522",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => \com_ctrl_local[10]\,
	datac => ww_tx_dpr_wadr_local_10,
	datad => \i~5234\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5235\);

\command_4_local[10]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_4_local[10]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_4_local[3]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_10,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_4_local[3]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_4_local[10]\);

\i~5232_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5232\ = reg_address_6 & (reg_address_5 # sload_path_10) # !reg_address_6 & !reg_address_5 & command_0_local_10

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F4A4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => ww_command_0_local_10,
	datac => ww_reg_address_6,
	datad => ww_sload_path_101,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5232\);

\i~5233_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5233\ = \i~5232\ & (\command_4_local[10]\ # !reg_address_5) # !\i~5232\ & reg_address_5 & oneSPEcnt_10

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DDA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => \command_4_local[10]\,
	datac => ww_oneSPEcnt_101,
	datad => \i~5232\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5233\);

\i~5230_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5230\ = reg_address_4 & (reg_address_2 # \i~5235\) # !reg_address_4 & !reg_address_2 & \i~5233\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "D9C8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datab => ww_reg_address_4,
	datac => \i~5235\,
	datad => \i~5233\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5230\);

\i~5231_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5231\ = \i~5230\ & (\i~14573\ # !reg_address_2) # !\i~5230\ & reg_address_2 & \i~14571\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F588",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datab => \i~14571\,
	datac => \i~14573\,
	datad => \i~5230\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5231\);

\i~14574_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14574\ = reg_address_3 & \i~5237\ # !reg_address_3 & \i~5231\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3C0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_3,
	datac => \i~5237\,
	datad => \i~5231\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14574\);

\i~5298_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5298\ = reg_address_12 & (reg_address_14 # \i~14574\) # !reg_address_12 & q & !reg_address_14

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F2C2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \srom|q[10]\,
	datab => ww_reg_address_14,
	datac => ww_reg_address_12,
	datad => \i~14574\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5298\);

\i~5299_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5299\ = \i~5298\ & (q # !reg_address_14) # !\i~5298\ & q & reg_address_14

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F388",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_102,
	datab => ww_reg_address_14,
	datac => ww_q_103,
	datad => \i~5298\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5299\);

\i~14564_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14564\ = q & !reg_address_19 & !reg_address_18

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "000A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \srom|q[10]\,
	datac => ww_reg_address_19,
	datad => ww_reg_address_18,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14564\);

\i~14563_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14563\ = i3329 & q & (reg_address_18 # reg_address_19)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C800",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_18,
	datab => ww_i3329,
	datac => ww_reg_address_19,
	datad => ww_q_101,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14563\);

\i~14582_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14582\ = reg_address_6 & q_11 # !reg_address_6 & sload_path_11

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F5A0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_6,
	datac => ww_q_11,
	datad => ww_sload_path_11,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14582\);

\i~14583_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14583\ = reg_address_2 & \i~14582\ # !reg_address_2 & rx_dpr_radr_local_11 & reg_address_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AAC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14582\,
	datab => ww_rx_dpr_radr_local_11,
	datac => ww_reg_address_6,
	datad => ww_reg_address_2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14583\);

\i~14578_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14578\ = \COINC_DOWN_BBAR~combout\ & (!\command_2_local[2]\ # !FF_down_bbar) # !\COINC_DOWN_BBAR~combout\ & !FF_down_bbar & \command_2_local[2]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0FCC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_COINC_DOWN_BBAR,
	datac => ww_FF_down_bbar,
	datad => \command_2_local[2]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14578\);

\i~14579_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14579\ = !reg_address_6 & (reg_address_2 & \i~14578\ # !reg_address_2 & command_2_local_11)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0E02",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_2_local_11,
	datab => ww_reg_address_2,
	datac => ww_reg_address_6,
	datad => \i~14578\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14579\);

\command_3_local[11]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_3_local[11]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_3_local[0]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_11,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_3_local[0]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_3_local[11]\);

\i~4846_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~4846\ = !reg_address_2 & \command_3_local[11]\ & !reg_address_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0050",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datac => \command_3_local[11]\,
	datad => ww_reg_address_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~4846\);

\command_1_local[11]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_1_local[11]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_1_local[18]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_11,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_1_local[18]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_1_local[11]\);

\i~14580_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14580\ = \command_1_local[11]\ & (atwd0_timestamp_11 # !reg_address_6) # !\command_1_local[11]\ & reg_address_6 & atwd0_timestamp_11

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \command_1_local[11]\,
	datac => ww_reg_address_6,
	datad => ww_atwd0_timestamp_11,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14580\);

\i~14581_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14581\ = reg_address_2 & reg_address_6 & atwd0_timestamp_43 # !reg_address_2 & \i~14580\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AC0C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_6,
	datab => \i~14580\,
	datac => ww_reg_address_2,
	datad => ww_atwd0_timestamp_43,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14581\);

\i~5244_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5244\ = reg_address_5 & (\i~4846\ # reg_address_4) # !reg_address_5 & !reg_address_4 & \i~14581\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CBC8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~4846\,
	datab => ww_reg_address_5,
	datac => ww_reg_address_4,
	datad => \i~14581\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5244\);

\i~5245_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5245\ = \i~5244\ & (\i~14583\ # !reg_address_4) # !\i~5244\ & reg_address_4 & \i~14579\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BBC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14583\,
	datab => ww_reg_address_4,
	datac => \i~14579\,
	datad => \i~5244\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5245\);

\i~14585_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14585\ = multiSPEcnt_11 & (atwd1_timestamp_43 # !reg_address_6) # !multiSPEcnt_11 & reg_address_6 & atwd1_timestamp_43

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_multiSPEcnt_112,
	datac => ww_reg_address_6,
	datad => ww_atwd1_timestamp_43,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14585\);

\i~14586_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14586\ = reg_address_5 & inst16_11 & reg_address_6 # !reg_address_5 & \i~14585\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B380",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_inst16_11,
	datab => ww_reg_address_5,
	datac => ww_reg_address_6,
	datad => \i~14585\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14586\);

\i~14584_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14584\ = reg_address_6 & !reg_address_5 & sload_path_43 # !reg_address_6 & multiSPEcnt_11 & reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "2C20",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_multiSPEcnt_111,
	datab => ww_reg_address_6,
	datac => ww_reg_address_5,
	datad => ww_sload_path_43,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14584\);

\com_ctrl_local[11]~I\ : apex20ke_lcell 
-- Equation(s):
-- \com_ctrl_local[11]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \com_ctrl_local[2]~124\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_11,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \com_ctrl_local[2]~124\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \com_ctrl_local[11]\);

\i~5242_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5242\ = reg_address_6 & (reg_address_5 # atwd1_timestamp_11) # !reg_address_6 & oneSPEcnt_11 & !reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F2C2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_oneSPEcnt_111,
	datab => ww_reg_address_5,
	datac => ww_reg_address_6,
	datad => ww_atwd1_timestamp_11,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5242\);

\i~5243_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5243\ = \i~5242\ & (tx_dpr_wadr_local_11 # !reg_address_5) # !\i~5242\ & reg_address_5 & \com_ctrl_local[11]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BBC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_tx_dpr_wadr_local_11,
	datab => ww_reg_address_5,
	datac => \com_ctrl_local[11]\,
	datad => \i~5242\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5243\);

\command_4_local[11]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_4_local[11]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_4_local[3]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_11,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_4_local[3]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_4_local[11]\);

\i~5240_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5240\ = reg_address_6 & (reg_address_5 # sload_path_11) # !reg_address_6 & command_0_local_11 & !reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CEC2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_0_local_11,
	datab => ww_reg_address_6,
	datac => ww_reg_address_5,
	datad => ww_sload_path_111,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5240\);

\i~5241_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5241\ = \i~5240\ & (\command_4_local[11]\ # !reg_address_5) # !\i~5240\ & reg_address_5 & oneSPEcnt_11

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BBC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \command_4_local[11]\,
	datab => ww_reg_address_5,
	datac => ww_oneSPEcnt_112,
	datad => \i~5240\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5241\);

\i~5238_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5238\ = reg_address_4 & (reg_address_2 # \i~5243\) # !reg_address_4 & !reg_address_2 & \i~5241\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E5E0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datab => \i~5243\,
	datac => ww_reg_address_4,
	datad => \i~5241\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5238\);

\i~5239_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5239\ = \i~5238\ & (\i~14586\ # !reg_address_2) # !\i~5238\ & reg_address_2 & \i~14584\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DDA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datab => \i~14586\,
	datac => \i~14584\,
	datad => \i~5238\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5239\);

\i~14587_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14587\ = \i~5245\ & (reg_address_3 # \i~5239\) # !\i~5245\ & !reg_address_3 & \i~5239\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \i~5245\,
	datac => ww_reg_address_3,
	datad => \i~5239\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14587\);

\i~5300_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5300\ = reg_address_14 & (reg_address_12 # q) # !reg_address_14 & q & !reg_address_12

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CEC2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \srom|q[11]\,
	datab => ww_reg_address_14,
	datac => ww_reg_address_12,
	datad => ww_q_112,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5300\);

\i~5301_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5301\ = \i~5300\ & (q # !reg_address_12) # !\i~5300\ & reg_address_12 & \i~14587\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F588",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_12,
	datab => \i~14587\,
	datac => ww_q_113,
	datad => \i~5300\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5301\);

\i~14577_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14577\ = !reg_address_19 & !reg_address_18 & q

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_19,
	datac => ww_reg_address_18,
	datad => \srom|q[11]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14577\);

\i~14576_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14576\ = i3329 & q & (reg_address_18 # reg_address_19)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_18,
	datab => ww_reg_address_19,
	datac => ww_i3329,
	datad => ww_q_111,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14576\);

\i~14589_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14589\ = i3329 & q & (reg_address_19 # reg_address_18)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C800",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_19,
	datab => ww_i3329,
	datac => ww_reg_address_18,
	datad => ww_q_121,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14589\);

\i~14590_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14590\ = !reg_address_19 & !reg_address_18 & q

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_19,
	datac => ww_reg_address_18,
	datad => \srom|q[12]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14590\);

\i~14595_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14595\ = sload_path_12 & (q_12 # !reg_address_6) # !sload_path_12 & reg_address_6 & q_12

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EE22",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_12,
	datab => ww_reg_address_6,
	datad => ww_q_12,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14595\);

\i~14596_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14596\ = reg_address_2 & \i~14595\ # !reg_address_2 & rx_dpr_radr_local_12 & reg_address_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F808",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_rx_dpr_radr_local_12,
	datab => ww_reg_address_6,
	datac => ww_reg_address_2,
	datad => \i~14595\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14596\);

\i~14591_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14591\ = FF_up_a & (\COINC_UP_A~combout\ # \command_2_local[2]\) # !FF_up_a & \COINC_UP_A~combout\ & !\command_2_local[2]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CCF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_FF_up_a,
	datac => ww_COINC_UP_A,
	datad => \command_2_local[2]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14591\);

\i~14592_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14592\ = !reg_address_6 & (reg_address_2 & \i~14591\ # !reg_address_2 & command_2_local_12)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0E02",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_2_local_12,
	datab => ww_reg_address_2,
	datac => ww_reg_address_6,
	datad => \i~14591\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14592\);

\command_3_local[12]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_3_local[12]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_3_local[0]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_12,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_3_local[0]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_3_local[12]\);

\i~4848_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~4848\ = \command_3_local[12]\ & !reg_address_2 & !reg_address_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "000A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \command_3_local[12]\,
	datac => ww_reg_address_2,
	datad => ww_reg_address_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~4848\);

\command_1_local[12]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_1_local[12]\ = DFFE(!MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_1_local[18]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00FF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_12,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_1_local[18]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_1_local[12]\);

\i~14593_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14593\ = reg_address_6 & atwd0_timestamp_12 # !reg_address_6 & !\command_1_local[12]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CF03",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_6,
	datac => \command_1_local[12]\,
	datad => ww_atwd0_timestamp_12,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14593\);

\i~14594_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14594\ = reg_address_2 & atwd0_timestamp_44 & reg_address_6 # !reg_address_2 & \i~14593\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "D580",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datab => ww_atwd0_timestamp_44,
	datac => ww_reg_address_6,
	datad => \i~14593\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14594\);

\i~5252_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5252\ = reg_address_5 & (\i~4848\ # reg_address_4) # !reg_address_5 & !reg_address_4 & \i~14594\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E3E0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~4848\,
	datab => ww_reg_address_4,
	datac => ww_reg_address_5,
	datad => \i~14594\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5252\);

\i~5253_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5253\ = \i~5252\ & (\i~14596\ # !reg_address_4) # !\i~5252\ & reg_address_4 & \i~14592\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BBC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14596\,
	datab => ww_reg_address_4,
	datac => \i~14592\,
	datad => \i~5252\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5253\);

\i~14597_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14597\ = reg_address_6 & !reg_address_5 & sload_path_44 # !reg_address_6 & multiSPEcnt_12 & reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "2C20",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_multiSPEcnt_12,
	datab => ww_reg_address_6,
	datac => ww_reg_address_5,
	datad => ww_sload_path_44,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14597\);

\i~14598_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14598\ = multiSPEcnt_12 & (atwd1_timestamp_44 # !reg_address_6) # !multiSPEcnt_12 & reg_address_6 & atwd1_timestamp_44

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_multiSPEcnt_121,
	datac => ww_reg_address_6,
	datad => ww_atwd1_timestamp_44,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14598\);

\i~14599_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14599\ = reg_address_5 & inst16_12 & reg_address_6 # !reg_address_5 & \i~14598\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8F80",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_inst16_12,
	datab => ww_reg_address_6,
	datac => ww_reg_address_5,
	datad => \i~14598\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14599\);

\com_ctrl_local[12]~I\ : apex20ke_lcell 
-- Equation(s):
-- \com_ctrl_local[12]\ = DFFE(!MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \com_ctrl_local[2]~124\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00FF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_12,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \com_ctrl_local[2]~124\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \com_ctrl_local[12]\);

\i~5250_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5250\ = reg_address_6 & (reg_address_5 # atwd1_timestamp_12) # !reg_address_6 & oneSPEcnt_12 & !reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F2C2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_oneSPEcnt_12,
	datab => ww_reg_address_5,
	datac => ww_reg_address_6,
	datad => ww_atwd1_timestamp_12,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5250\);

\i~5251_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5251\ = \i~5250\ & (tx_dpr_wadr_local_12 # !reg_address_5) # !\i~5250\ & !\com_ctrl_local[12]\ & reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F344",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \com_ctrl_local[12]\,
	datab => ww_reg_address_5,
	datac => ww_tx_dpr_wadr_local_12,
	datad => \i~5250\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5251\);

\command_0_local[12]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_0_local[12]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_0_local[30]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_12,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_0_local[30]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_0_local[12]\);

\i~5248_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5248\ = reg_address_6 & (reg_address_5 # sload_path_12) # !reg_address_6 & \command_0_local[12]\ & !reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CEC2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \command_0_local[12]\,
	datab => ww_reg_address_6,
	datac => ww_reg_address_5,
	datad => ww_sload_path_121,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5248\);

\i~5249_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5249\ = \i~5248\ & (command_4_local_12 # !reg_address_5) # !\i~5248\ & oneSPEcnt_12 & reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_oneSPEcnt_121,
	datab => ww_command_4_local_12,
	datac => ww_reg_address_5,
	datad => \i~5248\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5249\);

\i~5246_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5246\ = reg_address_4 & (reg_address_2 # \i~5251\) # !reg_address_4 & !reg_address_2 & \i~5249\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E5E0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datab => \i~5251\,
	datac => ww_reg_address_4,
	datad => \i~5249\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5246\);

\i~5247_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5247\ = \i~5246\ & (\i~14599\ # !reg_address_2) # !\i~5246\ & \i~14597\ & reg_address_2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14597\,
	datab => \i~14599\,
	datac => ww_reg_address_2,
	datad => \i~5246\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5247\);

\i~14600_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14600\ = \i~5253\ & (reg_address_3 # \i~5247\) # !\i~5253\ & !reg_address_3 & \i~5247\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \i~5253\,
	datac => ww_reg_address_3,
	datad => \i~5247\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14600\);

\i~5302_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5302\ = reg_address_12 & (reg_address_14 # \i~14600\) # !reg_address_12 & q & !reg_address_14

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F2C2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \srom|q[12]\,
	datab => ww_reg_address_14,
	datac => ww_reg_address_12,
	datad => \i~14600\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5302\);

\i~5303_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5303\ = \i~5302\ & (q # !reg_address_14) # !\i~5302\ & q & reg_address_14

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F388",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_122,
	datab => ww_reg_address_14,
	datac => ww_q_123,
	datad => \i~5302\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5303\);

\i~5304_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5304\ = reg_address_14 & (reg_address_12 # q) # !reg_address_14 & !reg_address_12 & q

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BA98",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_14,
	datab => ww_reg_address_12,
	datac => \srom|q[13]\,
	datad => ww_q_132,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5304\);

\i~14610_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14610\ = reg_address_5 & multiSPEcnt_13 & !reg_address_6 # !reg_address_5 & reg_address_6 & sload_path_45

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5808",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => ww_multiSPEcnt_13,
	datac => ww_reg_address_6,
	datad => ww_sload_path_45,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14610\);

\i~14611_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14611\ = reg_address_6 & atwd1_timestamp_45 # !reg_address_6 & multiSPEcnt_13

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC30",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_6,
	datac => ww_multiSPEcnt_131,
	datad => ww_atwd1_timestamp_45,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14611\);

\i~14612_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14612\ = reg_address_5 & inst16_13 & reg_address_6 # !reg_address_5 & \i~14611\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B380",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_inst16_13,
	datab => ww_reg_address_5,
	datac => ww_reg_address_6,
	datad => \i~14611\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14612\);

\com_ctrl_local[13]~I\ : apex20ke_lcell 
-- Equation(s):
-- \com_ctrl_local[13]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \com_ctrl_local[2]~124\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_13,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \com_ctrl_local[2]~124\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \com_ctrl_local[13]\);

\i~5258_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5258\ = reg_address_6 & (reg_address_5 # atwd1_timestamp_13) # !reg_address_6 & oneSPEcnt_13 & !reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CEC2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_oneSPEcnt_13,
	datab => ww_reg_address_6,
	datac => ww_reg_address_5,
	datad => ww_atwd1_timestamp_13,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5258\);

\i~5259_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5259\ = \i~5258\ & (tx_dpr_wadr_local_13 # !reg_address_5) # !\i~5258\ & \com_ctrl_local[13]\ & reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AFC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_tx_dpr_wadr_local_13,
	datab => \com_ctrl_local[13]\,
	datac => ww_reg_address_5,
	datad => \i~5258\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5259\);

\command_0_local[13]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_0_local[13]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_0_local[30]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_13,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_0_local[30]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_0_local[13]\);

\i~5256_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5256\ = reg_address_6 & (reg_address_5 # sload_path_13) # !reg_address_6 & !reg_address_5 & \command_0_local[13]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F4A4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => \command_0_local[13]\,
	datac => ww_reg_address_6,
	datad => ww_sload_path_131,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5256\);

\i~5257_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5257\ = \i~5256\ & (command_4_local_13 # !reg_address_5) # !\i~5256\ & oneSPEcnt_13 & reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F388",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_oneSPEcnt_131,
	datab => ww_reg_address_5,
	datac => ww_command_4_local_13,
	datad => \i~5256\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5257\);

\i~5254_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5254\ = reg_address_4 & (\i~5259\ # reg_address_2) # !reg_address_4 & !reg_address_2 & \i~5257\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ADA8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_4,
	datab => \i~5259\,
	datac => ww_reg_address_2,
	datad => \i~5257\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5254\);

\i~5255_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5255\ = \i~5254\ & (\i~14612\ # !reg_address_2) # !\i~5254\ & reg_address_2 & \i~14610\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F588",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datab => \i~14610\,
	datac => \i~14612\,
	datad => \i~5254\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5255\);

\i~14604_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14604\ = \COINC_UP_ABAR~combout\ & (!\command_2_local[2]\ # !FF_up_abar) # !\COINC_UP_ABAR~combout\ & !FF_up_abar & \command_2_local[2]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0FCC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_COINC_UP_ABAR,
	datac => ww_FF_up_abar,
	datad => \command_2_local[2]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14604\);

\i~14605_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14605\ = !reg_address_6 & (reg_address_2 & \i~14604\ # !reg_address_2 & command_2_local_13)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00B8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14604\,
	datab => ww_reg_address_2,
	datac => ww_command_2_local_13,
	datad => ww_reg_address_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14605\);

\i~14608_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14608\ = reg_address_6 & q_13 # !reg_address_6 & sload_path_13

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC30",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_6,
	datac => ww_sload_path_13,
	datad => ww_q_13,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14608\);

\i~14609_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14609\ = reg_address_2 & \i~14608\ # !reg_address_2 & rx_dpr_radr_local_13 & reg_address_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F808",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_rx_dpr_radr_local_13,
	datab => ww_reg_address_6,
	datac => ww_reg_address_2,
	datad => \i~14608\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14609\);

\command_3_local[13]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_3_local[13]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_3_local[0]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_13,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_3_local[0]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_3_local[13]\);

\i~4850_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~4850\ = !reg_address_2 & !reg_address_6 & \command_3_local[13]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0500",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datac => ww_reg_address_6,
	datad => \command_3_local[13]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~4850\);

\command_1_local[13]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_1_local[13]\ = DFFE(!MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_1_local[18]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00FF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_13,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_1_local[18]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_1_local[13]\);

\i~14606_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14606\ = \command_1_local[13]\ & reg_address_6 & atwd0_timestamp_13 # !\command_1_local[13]\ & (atwd0_timestamp_13 # !reg_address_6)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F303",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \command_1_local[13]\,
	datac => ww_reg_address_6,
	datad => ww_atwd0_timestamp_13,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14606\);

\i~14607_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14607\ = reg_address_2 & reg_address_6 & atwd0_timestamp_45 # !reg_address_2 & \i~14606\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E444",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datab => \i~14606\,
	datac => ww_reg_address_6,
	datad => ww_atwd0_timestamp_45,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14607\);

\i~5260_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5260\ = reg_address_5 & (\i~4850\ # reg_address_4) # !reg_address_5 & !reg_address_4 & \i~14607\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ADA8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => \i~4850\,
	datac => ww_reg_address_4,
	datad => \i~14607\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5260\);

\i~5261_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5261\ = \i~5260\ & (\i~14609\ # !reg_address_4) # !\i~5260\ & reg_address_4 & \i~14605\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F588",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_4,
	datab => \i~14605\,
	datac => \i~14609\,
	datad => \i~5260\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5261\);

\i~14613_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14613\ = \i~5255\ & (\i~5261\ # !reg_address_3) # !\i~5255\ & reg_address_3 & \i~5261\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5255\,
	datac => ww_reg_address_3,
	datad => \i~5261\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14613\);

\i~5305_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5305\ = \i~5304\ & (q # !reg_address_12) # !\i~5304\ & reg_address_12 & \i~14613\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BC8C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_133,
	datab => \i~5304\,
	datac => ww_reg_address_12,
	datad => \i~14613\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5305\);

\i~14603_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14603\ = !reg_address_19 & !reg_address_18 & q

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_19,
	datac => ww_reg_address_18,
	datad => \srom|q[13]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14603\);

\i~14602_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14602\ = i3329 & q & (reg_address_18 # reg_address_19)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_18,
	datab => ww_reg_address_19,
	datac => ww_i3329,
	datad => ww_q_131,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14602\);

\i~14623_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14623\ = reg_address_6 & !reg_address_5 & sload_path_46 # !reg_address_6 & multiSPEcnt_14 & reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "2C20",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_multiSPEcnt_14,
	datab => ww_reg_address_6,
	datac => ww_reg_address_5,
	datad => ww_sload_path_46,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14623\);

\i~14624_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14624\ = multiSPEcnt_14 & (atwd1_timestamp_46 # !reg_address_6) # !multiSPEcnt_14 & reg_address_6 & atwd1_timestamp_46

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_multiSPEcnt_141,
	datac => ww_reg_address_6,
	datad => ww_atwd1_timestamp_46,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14624\);

\i~14625_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14625\ = reg_address_5 & inst16_14 & reg_address_6 # !reg_address_5 & \i~14624\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B380",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_inst16_14,
	datab => ww_reg_address_5,
	datac => ww_reg_address_6,
	datad => \i~14624\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14625\);

\command_0_local[14]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_0_local[14]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_0_local[30]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_14,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_0_local[30]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_0_local[14]\);

\i~5264_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5264\ = reg_address_6 & (reg_address_5 # sload_path_14) # !reg_address_6 & \command_0_local[14]\ & !reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F2C2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \command_0_local[14]\,
	datab => ww_reg_address_5,
	datac => ww_reg_address_6,
	datad => ww_sload_path_141,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5264\);

\i~5265_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5265\ = \i~5264\ & (command_4_local_14 # !reg_address_5) # !\i~5264\ & oneSPEcnt_14 & reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F388",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_oneSPEcnt_141,
	datab => ww_reg_address_5,
	datac => ww_command_4_local_14,
	datad => \i~5264\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5265\);

\com_ctrl_local[14]~I\ : apex20ke_lcell 
-- Equation(s):
-- \com_ctrl_local[14]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \com_ctrl_local[2]~124\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_14,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \com_ctrl_local[2]~124\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \com_ctrl_local[14]\);

\i~5266_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5266\ = reg_address_6 & (reg_address_5 # atwd1_timestamp_14) # !reg_address_6 & !reg_address_5 & oneSPEcnt_14

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F4A4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => ww_oneSPEcnt_14,
	datac => ww_reg_address_6,
	datad => ww_atwd1_timestamp_14,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5266\);

\i~5267_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5267\ = \i~5266\ & (tx_dpr_wadr_local_14 # !reg_address_5) # !\i~5266\ & reg_address_5 & \com_ctrl_local[14]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F588",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => \com_ctrl_local[14]\,
	datac => ww_tx_dpr_wadr_local_14,
	datad => \i~5266\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5267\);

\i~5262_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5262\ = reg_address_4 & (reg_address_2 # \i~5267\) # !reg_address_4 & !reg_address_2 & \i~5265\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BA98",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_4,
	datab => ww_reg_address_2,
	datac => \i~5265\,
	datad => \i~5267\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5262\);

\i~5263_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5263\ = \i~5262\ & (\i~14625\ # !reg_address_2) # !\i~5262\ & reg_address_2 & \i~14623\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F588",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datab => \i~14623\,
	datac => \i~14625\,
	datad => \i~5262\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5263\);

\i~14621_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14621\ = q_14 & (sload_path_14 # reg_address_6) # !q_14 & sload_path_14 & !reg_address_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CCF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_q_14,
	datac => ww_sload_path_14,
	datad => ww_reg_address_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14621\);

\i~14622_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14622\ = reg_address_2 & \i~14621\ # !reg_address_2 & rx_dpr_radr_local_14 & reg_address_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F808",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_rx_dpr_radr_local_14,
	datab => ww_reg_address_6,
	datac => ww_reg_address_2,
	datad => \i~14621\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14622\);

\i~14617_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14617\ = \COINC_UP_B~combout\ & (FF_up_b # !\command_2_local[2]\) # !\COINC_UP_B~combout\ & \command_2_local[2]\ & FF_up_b

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_COINC_UP_B,
	datac => \command_2_local[2]\,
	datad => ww_FF_up_b,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14617\);

\i~14618_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14618\ = !reg_address_6 & (reg_address_2 & \i~14617\ # !reg_address_2 & command_2_local_14)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0C0A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_2_local_14,
	datab => \i~14617\,
	datac => ww_reg_address_6,
	datad => ww_reg_address_2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14618\);

\command_3_local[14]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_3_local[14]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_3_local[0]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_14,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_3_local[0]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_3_local[14]\);

\i~4852_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~4852\ = !reg_address_2 & !reg_address_6 & \command_3_local[14]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "1010",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datab => ww_reg_address_6,
	datac => \command_3_local[14]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~4852\);

\command_1_local[14]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_1_local[14]\ = DFFE(!MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_1_local[18]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00FF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_14,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_1_local[18]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_1_local[14]\);

\i~14619_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14619\ = \command_1_local[14]\ & reg_address_6 & atwd0_timestamp_14 # !\command_1_local[14]\ & (atwd0_timestamp_14 # !reg_address_6)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F505",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \command_1_local[14]\,
	datac => ww_reg_address_6,
	datad => ww_atwd0_timestamp_14,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14619\);

\i~14620_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14620\ = reg_address_2 & reg_address_6 & atwd0_timestamp_46 # !reg_address_2 & \i~14619\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AC0C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_6,
	datab => \i~14619\,
	datac => ww_reg_address_2,
	datad => ww_atwd0_timestamp_46,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14620\);

\i~5268_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5268\ = reg_address_5 & (reg_address_4 # \i~4852\) # !reg_address_5 & !reg_address_4 & \i~14620\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E5E0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_4,
	datab => \i~4852\,
	datac => ww_reg_address_5,
	datad => \i~14620\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5268\);

\i~5269_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5269\ = \i~5268\ & (\i~14622\ # !reg_address_4) # !\i~5268\ & reg_address_4 & \i~14618\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DDA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_4,
	datab => \i~14622\,
	datac => \i~14618\,
	datad => \i~5268\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5269\);

\i~14626_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14626\ = \i~5263\ & (\i~5269\ # !reg_address_3) # !\i~5263\ & reg_address_3 & \i~5269\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \i~5263\,
	datac => ww_reg_address_3,
	datad => \i~5269\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14626\);

\i~5306_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5306\ = reg_address_12 & (reg_address_14 # \i~14626\) # !reg_address_12 & !reg_address_14 & q

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F4A4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_14,
	datab => \srom|q[14]\,
	datac => ww_reg_address_12,
	datad => \i~14626\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5306\);

\i~5307_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5307\ = \i~5306\ & (q # !reg_address_14) # !\i~5306\ & q & reg_address_14

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_142,
	datab => ww_q_143,
	datac => ww_reg_address_14,
	datad => \i~5306\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5307\);

\i~14616_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14616\ = !reg_address_18 & q & !reg_address_19

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0050",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_18,
	datac => \srom|q[14]\,
	datad => ww_reg_address_19,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14616\);

\i~14615_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14615\ = i3329 & q & (reg_address_19 # reg_address_18)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "A800",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_i3329,
	datab => ww_reg_address_19,
	datac => ww_reg_address_18,
	datad => ww_q_141,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14615\);

\i~14628_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14628\ = i3329 & q & (reg_address_18 # reg_address_19)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_18,
	datab => ww_reg_address_19,
	datac => ww_i3329,
	datad => ww_q_151,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14628\);

\i~14629_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14629\ = !reg_address_18 & !reg_address_19 & q

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0500",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_18,
	datac => ww_reg_address_19,
	datad => \srom|q[15]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14629\);

\i~5308_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5308\ = reg_address_14 & (reg_address_12 # q) # !reg_address_14 & !reg_address_12 & q

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F4A4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_12,
	datab => \srom|q[15]\,
	datac => ww_reg_address_14,
	datad => ww_q_152,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5308\);

\i~14634_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14634\ = reg_address_6 & q_15 # !reg_address_6 & sload_path_15

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3C0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_6,
	datac => ww_q_15,
	datad => ww_sload_path_15,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14634\);

\i~14635_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14635\ = reg_address_2 & \i~14634\ # !reg_address_2 & rx_dpr_radr_local_15 & reg_address_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F808",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_rx_dpr_radr_local_15,
	datab => ww_reg_address_6,
	datac => ww_reg_address_2,
	datad => \i~14634\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14635\);

\i~14630_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14630\ = \COINC_UP_BBAR~combout\ & (!FF_up_bbar # !\command_2_local[2]\) # !\COINC_UP_BBAR~combout\ & \command_2_local[2]\ & !FF_up_bbar

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0CFC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_COINC_UP_BBAR,
	datac => \command_2_local[2]\,
	datad => ww_FF_up_bbar,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14630\);

\i~14631_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14631\ = !reg_address_6 & (reg_address_2 & \i~14630\ # !reg_address_2 & command_2_local_15)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0C0A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_2_local_15,
	datab => \i~14630\,
	datac => ww_reg_address_6,
	datad => ww_reg_address_2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14631\);

\command_3_local[15]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_3_local[15]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_3_local[0]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_15,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_3_local[0]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_3_local[15]\);

\i~4854_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~4854\ = !reg_address_2 & \command_3_local[15]\ & !reg_address_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0050",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datac => \command_3_local[15]\,
	datad => ww_reg_address_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~4854\);

\command_1_local[15]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_1_local[15]\ = DFFE(!MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_1_local[18]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00FF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_15,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_1_local[18]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_1_local[15]\);

\i~14632_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14632\ = \command_1_local[15]\ & reg_address_6 & atwd0_timestamp_15 # !\command_1_local[15]\ & (atwd0_timestamp_15 # !reg_address_6)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F303",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \command_1_local[15]\,
	datac => ww_reg_address_6,
	datad => ww_atwd0_timestamp_15,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14632\);

\i~14633_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14633\ = reg_address_2 & reg_address_6 & atwd0_timestamp_47 # !reg_address_2 & \i~14632\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "D580",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datab => ww_reg_address_6,
	datac => ww_atwd0_timestamp_47,
	datad => \i~14632\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14633\);

\i~5276_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5276\ = reg_address_5 & (\i~4854\ # reg_address_4) # !reg_address_5 & !reg_address_4 & \i~14633\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CBC8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~4854\,
	datab => ww_reg_address_5,
	datac => ww_reg_address_4,
	datad => \i~14633\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5276\);

\i~5277_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5277\ = \i~5276\ & (\i~14635\ # !reg_address_4) # !\i~5276\ & reg_address_4 & \i~14631\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DDA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_4,
	datab => \i~14635\,
	datac => \i~14631\,
	datad => \i~5276\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5277\);

\i~14636_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14636\ = reg_address_5 & multiSPEcnt_15 & !reg_address_6 # !reg_address_5 & reg_address_6 & sload_path_47

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5808",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => ww_multiSPEcnt_15,
	datac => ww_reg_address_6,
	datad => ww_sload_path_47,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14636\);

\i~14637_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14637\ = reg_address_6 & atwd1_timestamp_47 # !reg_address_6 & multiSPEcnt_15

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC30",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_6,
	datac => ww_multiSPEcnt_151,
	datad => ww_atwd1_timestamp_47,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14637\);

\i~14638_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14638\ = reg_address_5 & inst16_15 & reg_address_6 # !reg_address_5 & \i~14637\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B380",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_inst16_15,
	datab => ww_reg_address_5,
	datac => ww_reg_address_6,
	datad => \i~14637\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14638\);

\com_ctrl_local[15]~I\ : apex20ke_lcell 
-- Equation(s):
-- \com_ctrl_local[15]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \com_ctrl_local[2]~124\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_15,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \com_ctrl_local[2]~124\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \com_ctrl_local[15]\);

\i~5274_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5274\ = reg_address_6 & (reg_address_5 # atwd1_timestamp_15) # !reg_address_6 & !reg_address_5 & oneSPEcnt_15

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DC98",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => ww_reg_address_6,
	datac => ww_oneSPEcnt_15,
	datad => ww_atwd1_timestamp_15,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5274\);

\i~5275_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5275\ = \i~5274\ & (tx_dpr_wadr_local_15 # !reg_address_5) # !\i~5274\ & \com_ctrl_local[15]\ & reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \com_ctrl_local[15]\,
	datab => ww_tx_dpr_wadr_local_15,
	datac => ww_reg_address_5,
	datad => \i~5274\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5275\);

\i~5272_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5272\ = reg_address_6 & (reg_address_5 # sload_path_15) # !reg_address_6 & command_0_local_15 & !reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CEC2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_0_local_15,
	datab => ww_reg_address_6,
	datac => ww_reg_address_5,
	datad => ww_sload_path_151,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5272\);

\i~5273_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5273\ = \i~5272\ & (command_4_local_15 # !reg_address_5) # !\i~5272\ & oneSPEcnt_15 & reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_oneSPEcnt_151,
	datab => ww_command_4_local_15,
	datac => ww_reg_address_5,
	datad => \i~5272\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5273\);

\i~5270_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5270\ = reg_address_4 & (\i~5275\ # reg_address_2) # !reg_address_4 & !reg_address_2 & \i~5273\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ADA8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_4,
	datab => \i~5275\,
	datac => ww_reg_address_2,
	datad => \i~5273\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5270\);

\i~5271_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5271\ = \i~5270\ & (\i~14638\ # !reg_address_2) # !\i~5270\ & reg_address_2 & \i~14636\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F588",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datab => \i~14636\,
	datac => \i~14638\,
	datad => \i~5270\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5271\);

\i~14639_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14639\ = \i~5277\ & (reg_address_3 # \i~5271\) # !\i~5277\ & !reg_address_3 & \i~5271\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B8B8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5277\,
	datab => ww_reg_address_3,
	datac => \i~5271\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14639\);

\i~5309_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5309\ = \i~5308\ & (q # !reg_address_12) # !\i~5308\ & reg_address_12 & \i~14639\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DA8A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5308\,
	datab => ww_q_153,
	datac => ww_reg_address_12,
	datad => \i~14639\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5309\);

\dom_id[0]~232_I\ : apex20ke_lcell 
-- Equation(s):
-- \dom_id[0]~232\ = reg_address_4 & reg_address_3 & reg_address_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8080",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_4,
	datab => ww_reg_address_3,
	datac => ww_reg_address_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \dom_id[0]~232\);

\rx_dpr_radr_local[15]~75_I\ : apex20ke_lcell 
-- Equation(s):
-- \rx_dpr_radr_local[15]~75\ = !reg_address_2 & \dom_id[48]~288\ & reg_address_5 & \dom_id[0]~232\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "4000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datab => \dom_id[48]~288\,
	datac => ww_reg_address_5,
	datad => \dom_id[0]~232\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \rx_dpr_radr_local[15]~75\);

\rx_dpr_radr_local[16]~I\ : apex20ke_lcell 
-- Equation(s):
-- \rx_dpr_radr_local[16]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \rx_dpr_radr_local[15]~75\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_16,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \rx_dpr_radr_local[15]~75\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \rx_dpr_radr_local[16]\);

\com_ctrl_local[16]~I\ : apex20ke_lcell 
-- Equation(s):
-- \com_ctrl_local[16]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \com_ctrl_local[2]~124\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_16,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \com_ctrl_local[2]~124\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \com_ctrl_local[16]\);

\i~14691_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14691\ = reg_address_5 & reg_address_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C0C0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_5,
	datac => ww_reg_address_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14691\);

\tx_dpr_wadr_local[0]~74_I\ : apex20ke_lcell 
-- Equation(s):
-- \tx_dpr_wadr_local[0]~74\ = \command_2_local[26]~127\ & reg_address_4 & !reg_address_3 & \i~14691\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0800",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \command_2_local[26]~127\,
	datab => ww_reg_address_4,
	datac => ww_reg_address_3,
	datad => \i~14691\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \tx_dpr_wadr_local[0]~74\);

\tx_dpr_wadr_local[16]~I\ : apex20ke_lcell 
-- Equation(s):
-- \tx_dpr_wadr_local[16]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \tx_dpr_wadr_local[0]~74\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_16,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \tx_dpr_wadr_local[0]~74\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \tx_dpr_wadr_local[16]\);

\i~14645_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14645\ = reg_address_6 & \tx_dpr_wadr_local[16]\ # !reg_address_6 & \com_ctrl_local[16]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E4E4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_6,
	datab => \com_ctrl_local[16]\,
	datac => \tx_dpr_wadr_local[16]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14645\);

\i~14433_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14433\ = reg_address_3 & \rx_dpr_radr_local[16]\ & reg_address_6 # !reg_address_3 & \i~14645\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "D580",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datab => \rx_dpr_radr_local[16]\,
	datac => ww_reg_address_6,
	datad => \i~14645\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14433\);

\command_2_local[16]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_2_local[16]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_2_local[26]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_16,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_2_local[26]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_2_local[16]\);

\i~14642_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14642\ = reg_address_3 & \command_2_local[16]\ & !reg_address_6 # !reg_address_3 & reg_address_6 & atwd1_timestamp_16

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3808",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \command_2_local[16]\,
	datab => ww_reg_address_3,
	datac => ww_reg_address_6,
	datad => ww_atwd1_timestamp_16,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14642\);

\command_3_local[16]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_3_local[16]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_3_local[0]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_16,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_3_local[0]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_3_local[16]\);

\command_4_local[16]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_4_local[16]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_4_local[3]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_16,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_4_local[3]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_4_local[16]\);

\i~14643_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14643\ = reg_address_6 & \command_4_local[16]\ & !reg_address_3 # !reg_address_6 & \command_3_local[16]\ & reg_address_3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "22C0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \command_3_local[16]\,
	datab => ww_reg_address_6,
	datac => \command_4_local[16]\,
	datad => ww_reg_address_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14643\);

\i~5072_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5072\ = reg_address_6 & (reg_address_3 # sload_path_16) # !reg_address_6 & command_0_local_16 & !reg_address_3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F2C2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_0_local_16,
	datab => ww_reg_address_3,
	datac => ww_reg_address_6,
	datad => ww_sload_path_16,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5072\);

\i~5073_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5073\ = \i~5072\ & (atwd0_timestamp_16 # !reg_address_3) # !\i~5072\ & reg_address_3 & command_1_local_16

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EA62",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5072\,
	datab => ww_reg_address_3,
	datac => ww_command_1_local_16,
	datad => ww_atwd0_timestamp_16,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5073\);

\i~5070_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5070\ = reg_address_5 & (\i~14643\ # reg_address_4) # !reg_address_5 & !reg_address_4 & \i~5073\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CBC8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14643\,
	datab => ww_reg_address_5,
	datac => ww_reg_address_4,
	datad => \i~5073\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5070\);

\i~5071_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5071\ = \i~5070\ & (\i~14433\ # !reg_address_4) # !\i~5070\ & \i~14642\ & reg_address_4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AFC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14433\,
	datab => \i~14642\,
	datac => ww_reg_address_4,
	datad => \i~5070\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5071\);

\i1166~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \i1166~0\ = !reg_address_13 & i & (reg_address_18 # reg_address_19)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0E00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_18,
	datab => ww_reg_address_19,
	datac => ww_reg_address_13,
	datad => ww_i,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i1166~0\);

\i1166~115_I\ : apex20ke_lcell 
-- Equation(s):
-- \i1166~115\ = !reg_address_6 & !reg_address_3 & !reg_address_4 & !reg_address_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_6,
	datab => ww_reg_address_3,
	datac => ww_reg_address_4,
	datad => ww_reg_address_5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \i1166~115\);

\i1166~117_I\ : apex20ke_lcell 
-- Equation(s):
-- \i1166~117\ = (reg_address_2 & done) & CASCADE(\i1166~115\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CC00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_2,
	datad => ww_done2,
	cascin => \i1166~115\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i1166~117\);

\rx_dpr_radr_local[17]~I\ : apex20ke_lcell 
-- Equation(s):
-- \rx_dpr_radr_local[17]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \rx_dpr_radr_local[15]~75\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_17,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \rx_dpr_radr_local[15]~75\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \rx_dpr_radr_local[17]\);

\tx_dpr_wadr_local[17]~I\ : apex20ke_lcell 
-- Equation(s):
-- \tx_dpr_wadr_local[17]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \tx_dpr_wadr_local[0]~74\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_17,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \tx_dpr_wadr_local[0]~74\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \tx_dpr_wadr_local[17]\);

\com_ctrl_local[17]~I\ : apex20ke_lcell 
-- Equation(s):
-- \com_ctrl_local[17]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \com_ctrl_local[2]~124\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_17,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \com_ctrl_local[2]~124\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \com_ctrl_local[17]\);

\i~14648_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14648\ = \tx_dpr_wadr_local[17]\ & (reg_address_6 # \com_ctrl_local[17]\) # !\tx_dpr_wadr_local[17]\ & !reg_address_6 & \com_ctrl_local[17]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \tx_dpr_wadr_local[17]\,
	datac => ww_reg_address_6,
	datad => \com_ctrl_local[17]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14648\);

\i~14435_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14435\ = reg_address_3 & reg_address_6 & \rx_dpr_radr_local[17]\ # !reg_address_3 & \i~14648\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "D580",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datab => ww_reg_address_6,
	datac => \rx_dpr_radr_local[17]\,
	datad => \i~14648\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14435\);

\command_2_local[17]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_2_local[17]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_2_local[26]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_17,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_2_local[26]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_2_local[17]\);

\i~14646_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14646\ = reg_address_6 & !reg_address_3 & atwd1_timestamp_17 # !reg_address_6 & \command_2_local[17]\ & reg_address_3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "2C20",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \command_2_local[17]\,
	datab => ww_reg_address_6,
	datac => ww_reg_address_3,
	datad => ww_atwd1_timestamp_17,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14646\);

\command_3_local[17]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_3_local[17]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_3_local[0]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_17,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_3_local[0]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_3_local[17]\);

\command_4_local[17]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_4_local[17]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_4_local[3]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_17,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_4_local[3]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_4_local[17]\);

\i~14647_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14647\ = reg_address_6 & !reg_address_3 & \command_4_local[17]\ # !reg_address_6 & \command_3_local[17]\ & reg_address_3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "4A40",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_6,
	datab => \command_3_local[17]\,
	datac => ww_reg_address_3,
	datad => \command_4_local[17]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14647\);

\i~5076_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5076\ = reg_address_6 & (reg_address_3 # sload_path_17) # !reg_address_6 & command_0_local_17 & !reg_address_3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F2C2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_0_local_17,
	datab => ww_reg_address_3,
	datac => ww_reg_address_6,
	datad => ww_sload_path_17,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5076\);

\i~5077_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5077\ = \i~5076\ & (atwd0_timestamp_17 # !reg_address_3) # !\i~5076\ & command_1_local_17 & reg_address_3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F388",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_1_local_17,
	datab => ww_reg_address_3,
	datac => ww_atwd0_timestamp_17,
	datad => \i~5076\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5077\);

\i~5074_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5074\ = reg_address_5 & (\i~14647\ # reg_address_4) # !reg_address_5 & !reg_address_4 & \i~5077\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ADA8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => \i~14647\,
	datac => ww_reg_address_4,
	datad => \i~5077\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5074\);

\i~5075_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5075\ = \i~5074\ & (\i~14435\ # !reg_address_4) # !\i~5074\ & \i~14646\ & reg_address_4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AFC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14435\,
	datab => \i~14646\,
	datac => ww_reg_address_4,
	datad => \i~5074\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5075\);

\command_2_local[18]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_2_local[18]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_2_local[26]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_18,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_2_local[26]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_2_local[18]\);

\i~14649_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14649\ = reg_address_3 & \command_2_local[18]\ & !reg_address_6 # !reg_address_3 & atwd1_timestamp_18 & reg_address_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3088",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \command_2_local[18]\,
	datab => ww_reg_address_3,
	datac => ww_atwd1_timestamp_18,
	datad => ww_reg_address_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14649\);

\com_ctrl_local[18]~I\ : apex20ke_lcell 
-- Equation(s):
-- \com_ctrl_local[18]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \com_ctrl_local[2]~124\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_18,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \com_ctrl_local[2]~124\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \com_ctrl_local[18]\);

\tx_dpr_wadr_local[18]~I\ : apex20ke_lcell 
-- Equation(s):
-- \tx_dpr_wadr_local[18]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \tx_dpr_wadr_local[0]~74\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_18,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \tx_dpr_wadr_local[0]~74\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \tx_dpr_wadr_local[18]\);

\i~14651_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14651\ = \com_ctrl_local[18]\ & (\tx_dpr_wadr_local[18]\ # !reg_address_6) # !\com_ctrl_local[18]\ & reg_address_6 & \tx_dpr_wadr_local[18]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \com_ctrl_local[18]\,
	datac => ww_reg_address_6,
	datad => \tx_dpr_wadr_local[18]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14651\);

\rx_dpr_radr_local[18]~I\ : apex20ke_lcell 
-- Equation(s):
-- \rx_dpr_radr_local[18]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \rx_dpr_radr_local[15]~75\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_18,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \rx_dpr_radr_local[15]~75\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \rx_dpr_radr_local[18]\);

\i~14437_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14437\ = reg_address_3 & reg_address_6 & \rx_dpr_radr_local[18]\ # !reg_address_3 & \i~14651\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CA0A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14651\,
	datab => ww_reg_address_6,
	datac => ww_reg_address_3,
	datad => \rx_dpr_radr_local[18]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14437\);

\command_3_local[18]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_3_local[18]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_3_local[0]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_18,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_3_local[0]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_3_local[18]\);

\command_4_local[18]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_4_local[18]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_4_local[3]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_18,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_4_local[3]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_4_local[18]\);

\i~14650_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14650\ = reg_address_3 & \command_3_local[18]\ & !reg_address_6 # !reg_address_3 & reg_address_6 & \command_4_local[18]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3808",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \command_3_local[18]\,
	datab => ww_reg_address_3,
	datac => ww_reg_address_6,
	datad => \command_4_local[18]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14650\);

\command_0_local[18]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_0_local[18]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_0_local[30]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_18,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_0_local[30]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_0_local[18]\);

\i~5080_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5080\ = reg_address_6 & (reg_address_3 # sload_path_18) # !reg_address_6 & \command_0_local[18]\ & !reg_address_3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F2C2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \command_0_local[18]\,
	datab => ww_reg_address_3,
	datac => ww_reg_address_6,
	datad => ww_sload_path_18,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5080\);

\i~5081_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5081\ = \i~5080\ & (atwd0_timestamp_18 # !reg_address_3) # !\i~5080\ & command_1_local_18 & reg_address_3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_1_local_18,
	datab => ww_atwd0_timestamp_18,
	datac => ww_reg_address_3,
	datad => \i~5080\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5081\);

\i~5078_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5078\ = reg_address_5 & (\i~14650\ # reg_address_4) # !reg_address_5 & !reg_address_4 & \i~5081\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E3E0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14650\,
	datab => ww_reg_address_4,
	datac => ww_reg_address_5,
	datad => \i~5081\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5078\);

\i~5079_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5079\ = \i~5078\ & (\i~14437\ # !reg_address_4) # !\i~5078\ & reg_address_4 & \i~14649\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F588",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_4,
	datab => \i~14649\,
	datac => \i~14437\,
	datad => \i~5078\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5079\);

\rx_dpr_radr_local[19]~I\ : apex20ke_lcell 
-- Equation(s):
-- \rx_dpr_radr_local[19]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \rx_dpr_radr_local[15]~75\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_19,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \rx_dpr_radr_local[15]~75\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \rx_dpr_radr_local[19]\);

\tx_dpr_wadr_local[19]~I\ : apex20ke_lcell 
-- Equation(s):
-- \tx_dpr_wadr_local[19]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \tx_dpr_wadr_local[0]~74\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_19,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \tx_dpr_wadr_local[0]~74\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \tx_dpr_wadr_local[19]\);

\com_ctrl_local[19]~I\ : apex20ke_lcell 
-- Equation(s):
-- \com_ctrl_local[19]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \com_ctrl_local[2]~124\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_19,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \com_ctrl_local[2]~124\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \com_ctrl_local[19]\);

\i~14654_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14654\ = \tx_dpr_wadr_local[19]\ & (reg_address_6 # \com_ctrl_local[19]\) # !\tx_dpr_wadr_local[19]\ & !reg_address_6 & \com_ctrl_local[19]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \tx_dpr_wadr_local[19]\,
	datac => ww_reg_address_6,
	datad => \com_ctrl_local[19]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14654\);

\i~14439_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14439\ = reg_address_3 & \rx_dpr_radr_local[19]\ & reg_address_6 # !reg_address_3 & \i~14654\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8F80",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \rx_dpr_radr_local[19]\,
	datab => ww_reg_address_6,
	datac => ww_reg_address_3,
	datad => \i~14654\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14439\);

\command_2_local[19]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_2_local[19]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_2_local[26]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_19,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_2_local[26]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_2_local[19]\);

\i~14652_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14652\ = reg_address_6 & !reg_address_3 & atwd1_timestamp_19 # !reg_address_6 & reg_address_3 & \command_2_local[19]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "6240",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_6,
	datab => ww_reg_address_3,
	datac => \command_2_local[19]\,
	datad => ww_atwd1_timestamp_19,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14652\);

\command_3_local[19]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_3_local[19]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_3_local[0]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_19,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_3_local[0]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_3_local[19]\);

\command_4_local[19]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_4_local[19]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_4_local[3]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_19,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_4_local[3]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_4_local[19]\);

\i~14653_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14653\ = reg_address_3 & \command_3_local[19]\ & !reg_address_6 # !reg_address_3 & reg_address_6 & \command_4_local[19]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5808",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datab => \command_3_local[19]\,
	datac => ww_reg_address_6,
	datad => \command_4_local[19]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14653\);

\command_0_local[19]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_0_local[19]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_0_local[30]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_19,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_0_local[30]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_0_local[19]\);

\i~5084_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5084\ = reg_address_6 & (reg_address_3 # sload_path_19) # !reg_address_6 & \command_0_local[19]\ & !reg_address_3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F2C2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \command_0_local[19]\,
	datab => ww_reg_address_3,
	datac => ww_reg_address_6,
	datad => ww_sload_path_19,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5084\);

\i~5085_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5085\ = \i~5084\ & (atwd0_timestamp_19 # !reg_address_3) # !\i~5084\ & command_1_local_19 & reg_address_3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_1_local_19,
	datab => ww_atwd0_timestamp_19,
	datac => ww_reg_address_3,
	datad => \i~5084\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5085\);

\i~5082_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5082\ = reg_address_5 & (reg_address_4 # \i~14653\) # !reg_address_5 & !reg_address_4 & \i~5085\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B9A8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => ww_reg_address_4,
	datac => \i~14653\,
	datad => \i~5085\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5082\);

\i~5083_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5083\ = \i~5082\ & (\i~14439\ # !reg_address_4) # !\i~5082\ & reg_address_4 & \i~14652\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DDA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_4,
	datab => \i~14439\,
	datac => \i~14652\,
	datad => \i~5082\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5083\);

\rx_dpr_radr_local[20]~I\ : apex20ke_lcell 
-- Equation(s):
-- \rx_dpr_radr_local[20]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \rx_dpr_radr_local[15]~75\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_20,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \rx_dpr_radr_local[15]~75\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \rx_dpr_radr_local[20]\);

\com_ctrl_local[20]~I\ : apex20ke_lcell 
-- Equation(s):
-- \com_ctrl_local[20]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \com_ctrl_local[2]~124\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_20,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \com_ctrl_local[2]~124\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \com_ctrl_local[20]\);

\tx_dpr_wadr_local[20]~I\ : apex20ke_lcell 
-- Equation(s):
-- \tx_dpr_wadr_local[20]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \tx_dpr_wadr_local[0]~74\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_20,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \tx_dpr_wadr_local[0]~74\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \tx_dpr_wadr_local[20]\);

\i~14657_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14657\ = reg_address_6 & \tx_dpr_wadr_local[20]\ # !reg_address_6 & \com_ctrl_local[20]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC30",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_6,
	datac => \com_ctrl_local[20]\,
	datad => \tx_dpr_wadr_local[20]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14657\);

\i~14441_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14441\ = reg_address_3 & \rx_dpr_radr_local[20]\ & reg_address_6 # !reg_address_3 & \i~14657\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B380",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \rx_dpr_radr_local[20]\,
	datab => ww_reg_address_3,
	datac => ww_reg_address_6,
	datad => \i~14657\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14441\);

\command_2_local[20]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_2_local[20]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_2_local[26]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_20,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_2_local[26]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_2_local[20]\);

\i~14655_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14655\ = reg_address_3 & !reg_address_6 & \command_2_local[20]\ # !reg_address_3 & reg_address_6 & atwd1_timestamp_20

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "6420",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datab => ww_reg_address_6,
	datac => \command_2_local[20]\,
	datad => ww_atwd1_timestamp_20,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14655\);

\command_4_local[20]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_4_local[20]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_4_local[3]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_20,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_4_local[3]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_4_local[20]\);

\command_3_local[20]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_3_local[20]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_3_local[0]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_20,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_3_local[0]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_3_local[20]\);

\i~14656_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14656\ = reg_address_6 & \command_4_local[20]\ & !reg_address_3 # !reg_address_6 & reg_address_3 & \command_3_local[20]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5808",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_6,
	datab => \command_4_local[20]\,
	datac => ww_reg_address_3,
	datad => \command_3_local[20]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14656\);

\command_1_local[20]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_1_local[20]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_1_local[18]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_20,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_1_local[18]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_1_local[20]\);

\command_0_local[20]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_0_local[20]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_0_local[30]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_20,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_0_local[30]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_0_local[20]\);

\i~5088_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5088\ = reg_address_6 & (reg_address_3 # sload_path_20) # !reg_address_6 & !reg_address_3 & \command_0_local[20]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DC98",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datab => ww_reg_address_6,
	datac => \command_0_local[20]\,
	datad => ww_sload_path_20,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5088\);

\i~5089_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5089\ = \i~5088\ & (atwd0_timestamp_20 # !reg_address_3) # !\i~5088\ & reg_address_3 & \command_1_local[20]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DDA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datab => ww_atwd0_timestamp_20,
	datac => \command_1_local[20]\,
	datad => \i~5088\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5089\);

\i~5086_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5086\ = reg_address_5 & (\i~14656\ # reg_address_4) # !reg_address_5 & !reg_address_4 & \i~5089\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E3E0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14656\,
	datab => ww_reg_address_4,
	datac => ww_reg_address_5,
	datad => \i~5089\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5086\);

\i~5087_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5087\ = \i~5086\ & (\i~14441\ # !reg_address_4) # !\i~5086\ & \i~14655\ & reg_address_4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AFC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14441\,
	datab => \i~14655\,
	datac => ww_reg_address_4,
	datad => \i~5086\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5087\);

\command_2_local[21]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_2_local[21]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_2_local[26]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_21,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_2_local[26]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_2_local[21]\);

\i~14658_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14658\ = reg_address_6 & !reg_address_3 & atwd1_timestamp_21 # !reg_address_6 & \command_2_local[21]\ & reg_address_3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "2C20",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \command_2_local[21]\,
	datab => ww_reg_address_6,
	datac => ww_reg_address_3,
	datad => ww_atwd1_timestamp_21,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14658\);

\rx_dpr_radr_local[21]~I\ : apex20ke_lcell 
-- Equation(s):
-- \rx_dpr_radr_local[21]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \rx_dpr_radr_local[15]~75\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_21,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \rx_dpr_radr_local[15]~75\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \rx_dpr_radr_local[21]\);

\com_ctrl_local[21]~I\ : apex20ke_lcell 
-- Equation(s):
-- \com_ctrl_local[21]\ = DFFE(!MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \com_ctrl_local[2]~124\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00FF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_21,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \com_ctrl_local[2]~124\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \com_ctrl_local[21]\);

\tx_dpr_wadr_local[21]~I\ : apex20ke_lcell 
-- Equation(s):
-- \tx_dpr_wadr_local[21]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \tx_dpr_wadr_local[0]~74\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_21,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \tx_dpr_wadr_local[0]~74\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \tx_dpr_wadr_local[21]\);

\i~14660_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14660\ = reg_address_6 & \tx_dpr_wadr_local[21]\ # !reg_address_6 & !\com_ctrl_local[21]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CF03",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_6,
	datac => \com_ctrl_local[21]\,
	datad => \tx_dpr_wadr_local[21]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14660\);

\i~14443_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14443\ = reg_address_3 & reg_address_6 & \rx_dpr_radr_local[21]\ # !reg_address_3 & \i~14660\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "D580",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datab => ww_reg_address_6,
	datac => \rx_dpr_radr_local[21]\,
	datad => \i~14660\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14443\);

\command_3_local[21]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_3_local[21]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_3_local[0]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_21,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_3_local[0]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_3_local[21]\);

\command_4_local[21]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_4_local[21]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_4_local[3]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_21,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_4_local[3]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_4_local[21]\);

\i~14659_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14659\ = reg_address_3 & \command_3_local[21]\ & !reg_address_6 # !reg_address_3 & reg_address_6 & \command_4_local[21]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5808",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datab => \command_3_local[21]\,
	datac => ww_reg_address_6,
	datad => \command_4_local[21]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14659\);

\command_1_local[21]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_1_local[21]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_1_local[18]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_21,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_1_local[18]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_1_local[21]\);

\command_0_local[21]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_0_local[21]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_0_local[30]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_21,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_0_local[30]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_0_local[21]\);

\i~5092_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5092\ = reg_address_6 & (reg_address_3 # sload_path_21) # !reg_address_6 & !reg_address_3 & \command_0_local[21]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F4A4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datab => \command_0_local[21]\,
	datac => ww_reg_address_6,
	datad => ww_sload_path_21,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5092\);

\i~5093_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5093\ = \i~5092\ & (atwd0_timestamp_21 # !reg_address_3) # !\i~5092\ & \command_1_local[21]\ & reg_address_3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AFC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_atwd0_timestamp_21,
	datab => \command_1_local[21]\,
	datac => ww_reg_address_3,
	datad => \i~5092\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5093\);

\i~5090_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5090\ = reg_address_5 & (\i~14659\ # reg_address_4) # !reg_address_5 & !reg_address_4 & \i~5093\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CBC8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14659\,
	datab => ww_reg_address_5,
	datac => ww_reg_address_4,
	datad => \i~5093\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5090\);

\i~5091_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5091\ = \i~5090\ & (\i~14443\ # !reg_address_4) # !\i~5090\ & reg_address_4 & \i~14658\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F588",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_4,
	datab => \i~14658\,
	datac => \i~14443\,
	datad => \i~5090\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5091\);

\tx_dpr_wadr_local[22]~I\ : apex20ke_lcell 
-- Equation(s):
-- \tx_dpr_wadr_local[22]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \tx_dpr_wadr_local[0]~74\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_22,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \tx_dpr_wadr_local[0]~74\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \tx_dpr_wadr_local[22]\);

\com_ctrl_local[22]~I\ : apex20ke_lcell 
-- Equation(s):
-- \com_ctrl_local[22]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \com_ctrl_local[2]~124\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_22,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \com_ctrl_local[2]~124\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \com_ctrl_local[22]\);

\i~14663_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14663\ = reg_address_6 & \tx_dpr_wadr_local[22]\ # !reg_address_6 & \com_ctrl_local[22]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3C0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_6,
	datac => \tx_dpr_wadr_local[22]\,
	datad => \com_ctrl_local[22]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14663\);

\rx_dpr_radr_local[22]~I\ : apex20ke_lcell 
-- Equation(s):
-- \rx_dpr_radr_local[22]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \rx_dpr_radr_local[15]~75\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_22,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \rx_dpr_radr_local[15]~75\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \rx_dpr_radr_local[22]\);

\i~14445_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14445\ = reg_address_3 & reg_address_6 & \rx_dpr_radr_local[22]\ # !reg_address_3 & \i~14663\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "D850",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datab => ww_reg_address_6,
	datac => \i~14663\,
	datad => \rx_dpr_radr_local[22]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14445\);

\command_2_local[22]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_2_local[22]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_2_local[26]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_22,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_2_local[26]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_2_local[22]\);

\i~14661_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14661\ = reg_address_3 & !reg_address_6 & \command_2_local[22]\ # !reg_address_3 & reg_address_6 & atwd1_timestamp_22

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "6420",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datab => ww_reg_address_6,
	datac => \command_2_local[22]\,
	datad => ww_atwd1_timestamp_22,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14661\);

\command_4_local[22]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_4_local[22]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_4_local[3]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_22,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_4_local[3]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_4_local[22]\);

\command_3_local[22]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_3_local[22]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_3_local[0]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_22,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_3_local[0]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_3_local[22]\);

\i~14662_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14662\ = reg_address_6 & \command_4_local[22]\ & !reg_address_3 # !reg_address_6 & reg_address_3 & \command_3_local[22]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5808",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_6,
	datab => \command_4_local[22]\,
	datac => ww_reg_address_3,
	datad => \command_3_local[22]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14662\);

\command_1_local[22]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_1_local[22]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_1_local[18]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_22,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_1_local[18]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_1_local[22]\);

\command_0_local[22]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_0_local[22]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_0_local[30]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_22,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_0_local[30]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_0_local[22]\);

\i~5096_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5096\ = reg_address_6 & (reg_address_3 # sload_path_22) # !reg_address_6 & !reg_address_3 & \command_0_local[22]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F4A4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datab => \command_0_local[22]\,
	datac => ww_reg_address_6,
	datad => ww_sload_path_22,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5096\);

\i~5097_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5097\ = \i~5096\ & (atwd0_timestamp_22 # !reg_address_3) # !\i~5096\ & reg_address_3 & \command_1_local[22]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DDA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datab => ww_atwd0_timestamp_22,
	datac => \command_1_local[22]\,
	datad => \i~5096\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5097\);

\i~5094_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5094\ = reg_address_5 & (\i~14662\ # reg_address_4) # !reg_address_5 & !reg_address_4 & \i~5097\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E3E0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14662\,
	datab => ww_reg_address_4,
	datac => ww_reg_address_5,
	datad => \i~5097\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5094\);

\i~5095_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5095\ = \i~5094\ & (\i~14445\ # !reg_address_4) # !\i~5094\ & \i~14661\ & reg_address_4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AFC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14445\,
	datab => \i~14661\,
	datac => ww_reg_address_4,
	datad => \i~5094\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5095\);

\command_2_local[23]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_2_local[23]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_2_local[26]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_23,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_2_local[26]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_2_local[23]\);

\i~14664_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14664\ = reg_address_6 & !reg_address_3 & atwd1_timestamp_23 # !reg_address_6 & \command_2_local[23]\ & reg_address_3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "2C20",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \command_2_local[23]\,
	datab => ww_reg_address_6,
	datac => ww_reg_address_3,
	datad => ww_atwd1_timestamp_23,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14664\);

\rx_dpr_radr_local[23]~I\ : apex20ke_lcell 
-- Equation(s):
-- \rx_dpr_radr_local[23]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \rx_dpr_radr_local[15]~75\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_23,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \rx_dpr_radr_local[15]~75\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \rx_dpr_radr_local[23]\);

\com_ctrl_local[23]~I\ : apex20ke_lcell 
-- Equation(s):
-- \com_ctrl_local[23]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \com_ctrl_local[2]~124\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_23,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \com_ctrl_local[2]~124\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \com_ctrl_local[23]\);

\tx_dpr_wadr_local[23]~I\ : apex20ke_lcell 
-- Equation(s):
-- \tx_dpr_wadr_local[23]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \tx_dpr_wadr_local[0]~74\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_23,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \tx_dpr_wadr_local[0]~74\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \tx_dpr_wadr_local[23]\);

\i~14666_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14666\ = reg_address_6 & \tx_dpr_wadr_local[23]\ # !reg_address_6 & \com_ctrl_local[23]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC30",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_6,
	datac => \com_ctrl_local[23]\,
	datad => \tx_dpr_wadr_local[23]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14666\);

\i~14447_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14447\ = reg_address_3 & reg_address_6 & \rx_dpr_radr_local[23]\ # !reg_address_3 & \i~14666\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "D580",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datab => ww_reg_address_6,
	datac => \rx_dpr_radr_local[23]\,
	datad => \i~14666\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14447\);

\command_3_local[23]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_3_local[23]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_3_local[0]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_23,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_3_local[0]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_3_local[23]\);

\command_4_local[23]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_4_local[23]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_4_local[3]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_23,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_4_local[3]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_4_local[23]\);

\i~14665_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14665\ = reg_address_6 & !reg_address_3 & \command_4_local[23]\ # !reg_address_6 & reg_address_3 & \command_3_local[23]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "6240",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_6,
	datab => ww_reg_address_3,
	datac => \command_3_local[23]\,
	datad => \command_4_local[23]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14665\);

\command_1_local[23]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_1_local[23]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_1_local[18]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_23,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_1_local[18]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_1_local[23]\);

\command_0_local[23]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_0_local[23]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_0_local[30]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_23,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_0_local[30]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_0_local[23]\);

\i~5100_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5100\ = reg_address_6 & (reg_address_3 # sload_path_23) # !reg_address_6 & \command_0_local[23]\ & !reg_address_3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AEA4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_6,
	datab => \command_0_local[23]\,
	datac => ww_reg_address_3,
	datad => ww_sload_path_23,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5100\);

\i~5101_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5101\ = \i~5100\ & (atwd0_timestamp_23 # !reg_address_3) # !\i~5100\ & reg_address_3 & \command_1_local[23]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DDA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datab => ww_atwd0_timestamp_23,
	datac => \command_1_local[23]\,
	datad => \i~5100\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5101\);

\i~5098_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5098\ = reg_address_5 & (reg_address_4 # \i~14665\) # !reg_address_5 & !reg_address_4 & \i~5101\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "D9C8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_4,
	datab => ww_reg_address_5,
	datac => \i~14665\,
	datad => \i~5101\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5098\);

\i~5099_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5099\ = \i~5098\ & (\i~14447\ # !reg_address_4) # !\i~5098\ & \i~14664\ & reg_address_4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F388",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14664\,
	datab => ww_reg_address_4,
	datac => \i~14447\,
	datad => \i~5098\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5099\);

\i1158~70_I\ : apex20ke_lcell 
-- Equation(s):
-- \i1158~70\ = reg_address_2 & \command_2_local[26]~126\ & \FL_ATTN~combout\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_2,
	datac => \command_2_local[26]~126\,
	datad => ww_FL_ATTN,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i1158~70\);

\i~14667_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14667\ = reg_address_6 & !reg_address_3 & atwd1_timestamp_24 # !reg_address_6 & reg_address_3 & command_2_local_24

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "6240",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_6,
	datab => ww_reg_address_3,
	datac => ww_command_2_local_24,
	datad => ww_atwd1_timestamp_24,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14667\);

\com_ctrl_local[24]~I\ : apex20ke_lcell 
-- Equation(s):
-- \com_ctrl_local[24]\ = DFFE(!MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \com_ctrl_local[2]~124\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F0F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_24,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \com_ctrl_local[2]~124\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \com_ctrl_local[24]\);

\tx_dpr_wadr_local[24]~I\ : apex20ke_lcell 
-- Equation(s):
-- \tx_dpr_wadr_local[24]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \tx_dpr_wadr_local[0]~74\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_24,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \tx_dpr_wadr_local[0]~74\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \tx_dpr_wadr_local[24]\);

\i~14669_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14669\ = \com_ctrl_local[24]\ & \tx_dpr_wadr_local[24]\ & reg_address_6 # !\com_ctrl_local[24]\ & (\tx_dpr_wadr_local[24]\ # !reg_address_6)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F033",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \com_ctrl_local[24]\,
	datac => \tx_dpr_wadr_local[24]\,
	datad => ww_reg_address_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14669\);

\rx_dpr_radr_local[24]~I\ : apex20ke_lcell 
-- Equation(s):
-- \rx_dpr_radr_local[24]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \rx_dpr_radr_local[15]~75\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_24,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \rx_dpr_radr_local[15]~75\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \rx_dpr_radr_local[24]\);

\i~14449_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14449\ = reg_address_3 & reg_address_6 & \rx_dpr_radr_local[24]\ # !reg_address_3 & \i~14669\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E222",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14669\,
	datab => ww_reg_address_3,
	datac => ww_reg_address_6,
	datad => \rx_dpr_radr_local[24]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14449\);

\command_4_local[24]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_4_local[24]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_4_local[3]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_24,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_4_local[3]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_4_local[24]\);

\command_3_local[24]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_3_local[24]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_3_local[0]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_24,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_3_local[0]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_3_local[24]\);

\i~14668_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14668\ = reg_address_3 & \command_3_local[24]\ & !reg_address_6 # !reg_address_3 & \command_4_local[24]\ & reg_address_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "22C0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \command_4_local[24]\,
	datab => ww_reg_address_3,
	datac => \command_3_local[24]\,
	datad => ww_reg_address_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14668\);

\command_1_local[24]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_1_local[24]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_1_local[18]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_24,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_1_local[18]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_1_local[24]\);

\i~5104_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5104\ = reg_address_6 & (reg_address_3 # sload_path_24) # !reg_address_6 & command_0_local_24 & !reg_address_3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CEC2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_0_local_24,
	datab => ww_reg_address_6,
	datac => ww_reg_address_3,
	datad => ww_sload_path_24,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5104\);

\i~5105_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5105\ = \i~5104\ & (atwd0_timestamp_24 # !reg_address_3) # !\i~5104\ & reg_address_3 & \command_1_local[24]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DDA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datab => ww_atwd0_timestamp_24,
	datac => \command_1_local[24]\,
	datad => \i~5104\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5105\);

\i~5102_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5102\ = reg_address_5 & (reg_address_4 # \i~14668\) # !reg_address_5 & !reg_address_4 & \i~5105\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B9A8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_5,
	datab => ww_reg_address_4,
	datac => \i~14668\,
	datad => \i~5105\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5102\);

\i~5103_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5103\ = \i~5102\ & (\i~14449\ # !reg_address_4) # !\i~5102\ & \i~14667\ & reg_address_4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F388",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14667\,
	datab => ww_reg_address_4,
	datac => \i~14449\,
	datad => \i~5102\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5103\);

\command_2_local[25]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_2_local[25]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_2_local[26]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_25,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_2_local[26]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_2_local[25]\);

\i~14670_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14670\ = reg_address_6 & !reg_address_3 & atwd1_timestamp_25 # !reg_address_6 & \command_2_local[25]\ & reg_address_3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "2C20",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \command_2_local[25]\,
	datab => ww_reg_address_6,
	datac => ww_reg_address_3,
	datad => ww_atwd1_timestamp_25,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14670\);

\com_ctrl_local[25]~I\ : apex20ke_lcell 
-- Equation(s):
-- \com_ctrl_local[25]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \com_ctrl_local[2]~124\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_25,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \com_ctrl_local[2]~124\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \com_ctrl_local[25]\);

\tx_dpr_wadr_local[25]~I\ : apex20ke_lcell 
-- Equation(s):
-- \tx_dpr_wadr_local[25]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \tx_dpr_wadr_local[0]~74\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_25,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \tx_dpr_wadr_local[0]~74\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \tx_dpr_wadr_local[25]\);

\i~14672_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14672\ = \com_ctrl_local[25]\ & (\tx_dpr_wadr_local[25]\ # !reg_address_6) # !\com_ctrl_local[25]\ & reg_address_6 & \tx_dpr_wadr_local[25]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \com_ctrl_local[25]\,
	datac => ww_reg_address_6,
	datad => \tx_dpr_wadr_local[25]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14672\);

\rx_dpr_radr_local[25]~I\ : apex20ke_lcell 
-- Equation(s):
-- \rx_dpr_radr_local[25]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \rx_dpr_radr_local[15]~75\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_25,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \rx_dpr_radr_local[15]~75\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \rx_dpr_radr_local[25]\);

\i~14451_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14451\ = reg_address_3 & reg_address_6 & \rx_dpr_radr_local[25]\ # !reg_address_3 & \i~14672\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B830",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_6,
	datab => ww_reg_address_3,
	datac => \i~14672\,
	datad => \rx_dpr_radr_local[25]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14451\);

\command_3_local[25]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_3_local[25]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_3_local[0]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_25,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_3_local[0]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_3_local[25]\);

\command_4_local[25]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_4_local[25]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_4_local[3]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_25,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_4_local[3]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_4_local[25]\);

\i~14671_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14671\ = reg_address_6 & !reg_address_3 & \command_4_local[25]\ # !reg_address_6 & reg_address_3 & \command_3_local[25]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "6240",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_6,
	datab => ww_reg_address_3,
	datac => \command_3_local[25]\,
	datad => \command_4_local[25]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14671\);

\command_1_local[25]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_1_local[25]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_1_local[18]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_25,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_1_local[18]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_1_local[25]\);

\command_0_local[25]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_0_local[25]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_0_local[30]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_25,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_0_local[30]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_0_local[25]\);

\i~5108_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5108\ = reg_address_6 & (reg_address_3 # sload_path_25) # !reg_address_6 & \command_0_local[25]\ & !reg_address_3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AEA4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_6,
	datab => \command_0_local[25]\,
	datac => ww_reg_address_3,
	datad => ww_sload_path_25,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5108\);

\i~5109_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5109\ = \i~5108\ & (atwd0_timestamp_25 # !reg_address_3) # !\i~5108\ & reg_address_3 & \command_1_local[25]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DDA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datab => ww_atwd0_timestamp_25,
	datac => \command_1_local[25]\,
	datad => \i~5108\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5109\);

\i~5106_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5106\ = reg_address_5 & (reg_address_4 # \i~14671\) # !reg_address_5 & !reg_address_4 & \i~5109\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "D9C8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_4,
	datab => ww_reg_address_5,
	datac => \i~14671\,
	datad => \i~5109\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5106\);

\i~5107_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5107\ = \i~5106\ & (\i~14451\ # !reg_address_4) # !\i~5106\ & \i~14670\ & reg_address_4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F388",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14670\,
	datab => ww_reg_address_4,
	datac => \i~14451\,
	datad => \i~5106\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5107\);

\i~14673_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14673\ = reg_address_3 & !reg_address_6 & command_2_local_26 # !reg_address_3 & reg_address_6 & atwd1_timestamp_26

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "6420",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datab => ww_reg_address_6,
	datac => ww_command_2_local_26,
	datad => ww_atwd1_timestamp_26,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14673\);

\rx_dpr_radr_local[26]~I\ : apex20ke_lcell 
-- Equation(s):
-- \rx_dpr_radr_local[26]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \rx_dpr_radr_local[15]~75\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_26,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \rx_dpr_radr_local[15]~75\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \rx_dpr_radr_local[26]\);

\tx_dpr_wadr_local[26]~I\ : apex20ke_lcell 
-- Equation(s):
-- \tx_dpr_wadr_local[26]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \tx_dpr_wadr_local[0]~74\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_26,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \tx_dpr_wadr_local[0]~74\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \tx_dpr_wadr_local[26]\);

\com_ctrl_local[26]~I\ : apex20ke_lcell 
-- Equation(s):
-- \com_ctrl_local[26]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \com_ctrl_local[2]~124\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_26,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \com_ctrl_local[2]~124\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \com_ctrl_local[26]\);

\i~14675_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14675\ = \tx_dpr_wadr_local[26]\ & (reg_address_6 # \com_ctrl_local[26]\) # !\tx_dpr_wadr_local[26]\ & !reg_address_6 & \com_ctrl_local[26]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AFA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \tx_dpr_wadr_local[26]\,
	datac => ww_reg_address_6,
	datad => \com_ctrl_local[26]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14675\);

\i~14453_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14453\ = reg_address_3 & \rx_dpr_radr_local[26]\ & reg_address_6 # !reg_address_3 & \i~14675\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "D580",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datab => \rx_dpr_radr_local[26]\,
	datac => ww_reg_address_6,
	datad => \i~14675\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14453\);

\command_4_local[26]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_4_local[26]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_4_local[3]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_26,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_4_local[3]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_4_local[26]\);

\command_3_local[26]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_3_local[26]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_3_local[0]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_26,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_3_local[0]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_3_local[26]\);

\i~14674_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14674\ = reg_address_3 & !reg_address_6 & \command_3_local[26]\ # !reg_address_3 & reg_address_6 & \command_4_local[26]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "6240",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datab => ww_reg_address_6,
	datac => \command_4_local[26]\,
	datad => \command_3_local[26]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14674\);

\command_1_local[26]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_1_local[26]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_1_local[18]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_26,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_1_local[18]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_1_local[26]\);

\i~5112_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5112\ = reg_address_6 & (reg_address_3 # sload_path_26) # !reg_address_6 & !reg_address_3 & command_0_local_26

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F4A4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datab => ww_command_0_local_26,
	datac => ww_reg_address_6,
	datad => ww_sload_path_26,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5112\);

\i~5113_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5113\ = \i~5112\ & (atwd0_timestamp_26 # !reg_address_3) # !\i~5112\ & reg_address_3 & \command_1_local[26]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F588",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datab => \command_1_local[26]\,
	datac => ww_atwd0_timestamp_26,
	datad => \i~5112\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5113\);

\i~5110_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5110\ = reg_address_5 & (\i~14674\ # reg_address_4) # !reg_address_5 & !reg_address_4 & \i~5113\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E3E0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14674\,
	datab => ww_reg_address_4,
	datac => ww_reg_address_5,
	datad => \i~5113\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5110\);

\i~5111_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5111\ = \i~5110\ & (\i~14453\ # !reg_address_4) # !\i~5110\ & \i~14673\ & reg_address_4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14673\,
	datab => \i~14453\,
	datac => ww_reg_address_4,
	datad => \i~5110\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5111\);

\command_4_local[27]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_4_local[27]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_4_local[3]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_27,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_4_local[3]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_4_local[27]\);

\command_3_local[27]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_3_local[27]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_3_local[0]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_27,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_3_local[0]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_3_local[27]\);

\i~14677_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14677\ = reg_address_6 & !reg_address_3 & \command_4_local[27]\ # !reg_address_6 & reg_address_3 & \command_3_local[27]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "6420",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_6,
	datab => ww_reg_address_3,
	datac => \command_4_local[27]\,
	datad => \command_3_local[27]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14677\);

\command_1_local[27]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_1_local[27]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_1_local[18]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_27,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_1_local[18]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_1_local[27]\);

\command_0_local[27]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_0_local[27]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_0_local[30]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_27,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_0_local[30]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_0_local[27]\);

\i~5116_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5116\ = reg_address_6 & (reg_address_3 # sload_path_27) # !reg_address_6 & !reg_address_3 & \command_0_local[27]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F4A4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datab => \command_0_local[27]\,
	datac => ww_reg_address_6,
	datad => ww_sload_path_27,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5116\);

\i~5117_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5117\ = \i~5116\ & (atwd0_timestamp_27 # !reg_address_3) # !\i~5116\ & reg_address_3 & \command_1_local[27]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DDA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datab => ww_atwd0_timestamp_27,
	datac => \command_1_local[27]\,
	datad => \i~5116\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5117\);

\i~5114_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5114\ = reg_address_5 & (\i~14677\ # reg_address_4) # !reg_address_5 & !reg_address_4 & \i~5117\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E3E0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14677\,
	datab => ww_reg_address_4,
	datac => ww_reg_address_5,
	datad => \i~5117\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5114\);

\rx_dpr_radr_local[27]~I\ : apex20ke_lcell 
-- Equation(s):
-- \rx_dpr_radr_local[27]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \rx_dpr_radr_local[15]~75\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_27,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \rx_dpr_radr_local[15]~75\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \rx_dpr_radr_local[27]\);

\tx_dpr_wadr_local[27]~I\ : apex20ke_lcell 
-- Equation(s):
-- \tx_dpr_wadr_local[27]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \tx_dpr_wadr_local[0]~74\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_27,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \tx_dpr_wadr_local[0]~74\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \tx_dpr_wadr_local[27]\);

\com_ctrl_local[27]~I\ : apex20ke_lcell 
-- Equation(s):
-- \com_ctrl_local[27]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \com_ctrl_local[2]~124\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_27,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \com_ctrl_local[2]~124\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \com_ctrl_local[27]\);

\i~14678_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14678\ = \tx_dpr_wadr_local[27]\ & (\com_ctrl_local[27]\ # reg_address_6) # !\tx_dpr_wadr_local[27]\ & \com_ctrl_local[27]\ & !reg_address_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AAF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \tx_dpr_wadr_local[27]\,
	datac => \com_ctrl_local[27]\,
	datad => ww_reg_address_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14678\);

\i~14455_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14455\ = reg_address_3 & \rx_dpr_radr_local[27]\ & reg_address_6 # !reg_address_3 & \i~14678\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B830",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \rx_dpr_radr_local[27]\,
	datab => ww_reg_address_3,
	datac => \i~14678\,
	datad => ww_reg_address_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14455\);

\command_2_local[27]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_2_local[27]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_2_local[26]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_27,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_2_local[26]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_2_local[27]\);

\i~14676_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14676\ = reg_address_3 & \command_2_local[27]\ & !reg_address_6 # !reg_address_3 & reg_address_6 & atwd1_timestamp_27

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5808",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datab => \command_2_local[27]\,
	datac => ww_reg_address_6,
	datad => ww_atwd1_timestamp_27,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14676\);

\i~5115_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5115\ = \i~5114\ & (\i~14455\ # !reg_address_4) # !\i~5114\ & reg_address_4 & \i~14676\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E6A2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5114\,
	datab => ww_reg_address_4,
	datac => \i~14455\,
	datad => \i~14676\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5115\);

\i1154~69_I\ : apex20ke_lcell 
-- Equation(s):
-- \i1154~69\ = \FL_TDO~combout\ & reg_address_2 & \command_2_local[26]~126\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "A000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_FL_TDO,
	datac => ww_reg_address_2,
	datad => \command_2_local[26]~126\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i1154~69\);

\rx_dpr_radr_local[28]~I\ : apex20ke_lcell 
-- Equation(s):
-- \rx_dpr_radr_local[28]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \rx_dpr_radr_local[15]~75\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_28,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \rx_dpr_radr_local[15]~75\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \rx_dpr_radr_local[28]\);

\com_ctrl_local[28]~I\ : apex20ke_lcell 
-- Equation(s):
-- \com_ctrl_local[28]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \com_ctrl_local[2]~124\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_28,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \com_ctrl_local[2]~124\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \com_ctrl_local[28]\);

\tx_dpr_wadr_local[28]~I\ : apex20ke_lcell 
-- Equation(s):
-- \tx_dpr_wadr_local[28]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \tx_dpr_wadr_local[0]~74\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_28,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \tx_dpr_wadr_local[0]~74\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \tx_dpr_wadr_local[28]\);

\i~14681_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14681\ = \com_ctrl_local[28]\ & (\tx_dpr_wadr_local[28]\ # !reg_address_6) # !\com_ctrl_local[28]\ & reg_address_6 & \tx_dpr_wadr_local[28]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \com_ctrl_local[28]\,
	datac => ww_reg_address_6,
	datad => \tx_dpr_wadr_local[28]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14681\);

\i~14457_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14457\ = reg_address_3 & reg_address_6 & \rx_dpr_radr_local[28]\ # !reg_address_3 & \i~14681\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8F80",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_6,
	datab => \rx_dpr_radr_local[28]\,
	datac => ww_reg_address_3,
	datad => \i~14681\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14457\);

\command_4_local[28]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_4_local[28]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_4_local[3]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_28,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_4_local[3]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_4_local[28]\);

\command_3_local[28]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_3_local[28]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_3_local[0]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_28,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_3_local[0]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_3_local[28]\);

\i~14680_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14680\ = reg_address_3 & !reg_address_6 & \command_3_local[28]\ # !reg_address_3 & \command_4_local[28]\ & reg_address_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "2C20",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \command_4_local[28]\,
	datab => ww_reg_address_3,
	datac => ww_reg_address_6,
	datad => \command_3_local[28]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14680\);

\command_1_local[28]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_1_local[28]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_1_local[18]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_28,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_1_local[18]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_1_local[28]\);

\i~5120_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5120\ = reg_address_6 & (reg_address_3 # sload_path_28) # !reg_address_6 & !reg_address_3 & command_0_local_28

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DC98",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datab => ww_reg_address_6,
	datac => ww_command_0_local_28,
	datad => ww_sload_path_28,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5120\);

\i~5121_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5121\ = \i~5120\ & (atwd0_timestamp_28 # !reg_address_3) # !\i~5120\ & reg_address_3 & \command_1_local[28]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DDA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datab => ww_atwd0_timestamp_28,
	datac => \command_1_local[28]\,
	datad => \i~5120\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5121\);

\i~5118_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5118\ = reg_address_5 & (\i~14680\ # reg_address_4) # !reg_address_5 & !reg_address_4 & \i~5121\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E3E0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14680\,
	datab => ww_reg_address_4,
	datac => ww_reg_address_5,
	datad => \i~5121\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5118\);

\i~14679_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14679\ = reg_address_6 & !reg_address_3 & atwd1_timestamp_28 # !reg_address_6 & command_2_local_28 & reg_address_3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "4A40",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_6,
	datab => ww_command_2_local_28,
	datac => ww_reg_address_3,
	datad => ww_atwd1_timestamp_28,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14679\);

\i~5119_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5119\ = \i~5118\ & (\i~14457\ # !reg_address_4) # !\i~5118\ & reg_address_4 & \i~14679\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DAD0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_4,
	datab => \i~14457\,
	datac => \i~5118\,
	datad => \i~14679\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5119\);

\i~14682_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14682\ = reg_address_3 & !reg_address_6 & command_2_local_29 # !reg_address_3 & reg_address_6 & atwd1_timestamp_29

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "6420",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datab => ww_reg_address_6,
	datac => ww_command_2_local_29,
	datad => ww_atwd1_timestamp_29,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14682\);

\rx_dpr_radr_local[29]~I\ : apex20ke_lcell 
-- Equation(s):
-- \rx_dpr_radr_local[29]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \rx_dpr_radr_local[15]~75\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_29,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \rx_dpr_radr_local[15]~75\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \rx_dpr_radr_local[29]\);

\com_ctrl_local[29]~I\ : apex20ke_lcell 
-- Equation(s):
-- \com_ctrl_local[29]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \com_ctrl_local[2]~124\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_29,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \com_ctrl_local[2]~124\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \com_ctrl_local[29]\);

\tx_dpr_wadr_local[29]~I\ : apex20ke_lcell 
-- Equation(s):
-- \tx_dpr_wadr_local[29]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \tx_dpr_wadr_local[0]~74\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_29,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \tx_dpr_wadr_local[0]~74\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \tx_dpr_wadr_local[29]\);

\i~14684_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14684\ = \com_ctrl_local[29]\ & (\tx_dpr_wadr_local[29]\ # !reg_address_6) # !\com_ctrl_local[29]\ & \tx_dpr_wadr_local[29]\ & reg_address_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0AA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \com_ctrl_local[29]\,
	datac => \tx_dpr_wadr_local[29]\,
	datad => ww_reg_address_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14684\);

\i~14459_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14459\ = reg_address_3 & reg_address_6 & \rx_dpr_radr_local[29]\ # !reg_address_3 & \i~14684\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B380",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_6,
	datab => ww_reg_address_3,
	datac => \rx_dpr_radr_local[29]\,
	datad => \i~14684\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14459\);

\command_4_local[29]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_4_local[29]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_4_local[3]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_29,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_4_local[3]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_4_local[29]\);

\command_3_local[29]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_3_local[29]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_3_local[0]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_29,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_3_local[0]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_3_local[29]\);

\i~14683_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14683\ = reg_address_3 & !reg_address_6 & \command_3_local[29]\ # !reg_address_3 & \command_4_local[29]\ & reg_address_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "2C20",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \command_4_local[29]\,
	datab => ww_reg_address_3,
	datac => ww_reg_address_6,
	datad => \command_3_local[29]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14683\);

\command_1_local[29]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_1_local[29]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_1_local[18]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_29,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_1_local[18]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_1_local[29]\);

\command_0_local[29]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_0_local[29]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_0_local[30]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_29,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_0_local[30]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_0_local[29]\);

\i~5124_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5124\ = reg_address_6 & (reg_address_3 # sload_path_29) # !reg_address_6 & !reg_address_3 & \command_0_local[29]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F4A4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datab => \command_0_local[29]\,
	datac => ww_reg_address_6,
	datad => ww_sload_path_29,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5124\);

\i~5125_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5125\ = \i~5124\ & (atwd0_timestamp_29 # !reg_address_3) # !\i~5124\ & reg_address_3 & \command_1_local[29]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DDA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datab => ww_atwd0_timestamp_29,
	datac => \command_1_local[29]\,
	datad => \i~5124\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5125\);

\i~5122_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5122\ = reg_address_5 & (\i~14683\ # reg_address_4) # !reg_address_5 & !reg_address_4 & \i~5125\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E3E0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14683\,
	datab => ww_reg_address_4,
	datac => ww_reg_address_5,
	datad => \i~5125\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5122\);

\i~5123_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5123\ = \i~5122\ & (\i~14459\ # !reg_address_4) # !\i~5122\ & \i~14682\ & reg_address_4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F388",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14682\,
	datab => ww_reg_address_4,
	datac => \i~14459\,
	datad => \i~5122\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5123\);

\i~14685_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14685\ = reg_address_3 & !reg_address_6 & command_2_local_30 # !reg_address_3 & reg_address_6 & atwd1_timestamp_30

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "6420",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datab => ww_reg_address_6,
	datac => ww_command_2_local_30,
	datad => ww_atwd1_timestamp_30,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14685\);

\com_ctrl_local[30]~I\ : apex20ke_lcell 
-- Equation(s):
-- \com_ctrl_local[30]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \com_ctrl_local[2]~124\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_30,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \com_ctrl_local[2]~124\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \com_ctrl_local[30]\);

\tx_dpr_wadr_local[30]~I\ : apex20ke_lcell 
-- Equation(s):
-- \tx_dpr_wadr_local[30]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \tx_dpr_wadr_local[0]~74\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_30,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \tx_dpr_wadr_local[0]~74\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \tx_dpr_wadr_local[30]\);

\i~14687_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14687\ = \com_ctrl_local[30]\ & (\tx_dpr_wadr_local[30]\ # !reg_address_6) # !\com_ctrl_local[30]\ & reg_address_6 & \tx_dpr_wadr_local[30]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \com_ctrl_local[30]\,
	datac => ww_reg_address_6,
	datad => \tx_dpr_wadr_local[30]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14687\);

\rx_dpr_radr_local[30]~I\ : apex20ke_lcell 
-- Equation(s):
-- \rx_dpr_radr_local[30]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \rx_dpr_radr_local[15]~75\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_30,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \rx_dpr_radr_local[15]~75\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \rx_dpr_radr_local[30]\);

\i~14461_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14461\ = reg_address_3 & \rx_dpr_radr_local[30]\ & reg_address_6 # !reg_address_3 & \i~14687\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C0AA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14687\,
	datab => \rx_dpr_radr_local[30]\,
	datac => ww_reg_address_6,
	datad => ww_reg_address_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14461\);

\command_3_local[30]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_3_local[30]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_3_local[0]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_30,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_3_local[0]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_3_local[30]\);

\command_4_local[30]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_4_local[30]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_4_local[3]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_30,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_4_local[3]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_4_local[30]\);

\i~14686_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14686\ = reg_address_3 & !reg_address_6 & \command_3_local[30]\ # !reg_address_3 & reg_address_6 & \command_4_local[30]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "6420",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datab => ww_reg_address_6,
	datac => \command_3_local[30]\,
	datad => \command_4_local[30]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14686\);

\command_1_local[30]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_1_local[30]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_1_local[18]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_30,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_1_local[18]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_1_local[30]\);

\i~5128_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5128\ = reg_address_6 & (reg_address_3 # sload_path_30) # !reg_address_6 & command_0_local_30 & !reg_address_3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F2C2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_0_local_30,
	datab => ww_reg_address_3,
	datac => ww_reg_address_6,
	datad => ww_sload_path_30,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5128\);

\i~5129_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5129\ = \i~5128\ & (atwd0_timestamp_30 # !reg_address_3) # !\i~5128\ & reg_address_3 & \command_1_local[30]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DDA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_3,
	datab => ww_atwd0_timestamp_30,
	datac => \command_1_local[30]\,
	datad => \i~5128\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5129\);

\i~5126_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5126\ = reg_address_5 & (reg_address_4 # \i~14686\) # !reg_address_5 & !reg_address_4 & \i~5129\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E5E0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_4,
	datab => \i~14686\,
	datac => ww_reg_address_5,
	datad => \i~5129\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5126\);

\i~5127_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5127\ = \i~5126\ & (\i~14461\ # !reg_address_4) # !\i~5126\ & reg_address_4 & \i~14685\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F588",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_4,
	datab => \i~14685\,
	datac => \i~14461\,
	datad => \i~5126\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5127\);

\com_ctrl_local[31]~I\ : apex20ke_lcell 
-- Equation(s):
-- \com_ctrl_local[31]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \com_ctrl_local[2]~124\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_31,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \com_ctrl_local[2]~124\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \com_ctrl_local[31]\);

\tx_dpr_wadr_local[31]~I\ : apex20ke_lcell 
-- Equation(s):
-- \tx_dpr_wadr_local[31]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \tx_dpr_wadr_local[0]~74\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_31,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \tx_dpr_wadr_local[0]~74\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \tx_dpr_wadr_local[31]\);

\i~14690_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14690\ = \com_ctrl_local[31]\ & (\tx_dpr_wadr_local[31]\ # !reg_address_6) # !\com_ctrl_local[31]\ & \tx_dpr_wadr_local[31]\ & reg_address_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0CC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \com_ctrl_local[31]\,
	datac => \tx_dpr_wadr_local[31]\,
	datad => ww_reg_address_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14690\);

\rx_dpr_radr_local[31]~I\ : apex20ke_lcell 
-- Equation(s):
-- \rx_dpr_radr_local[31]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \rx_dpr_radr_local[15]~75\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_31,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \rx_dpr_radr_local[15]~75\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \rx_dpr_radr_local[31]\);

\i~14463_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14463\ = reg_address_3 & reg_address_6 & \rx_dpr_radr_local[31]\ # !reg_address_3 & \i~14690\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B830",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_6,
	datab => ww_reg_address_3,
	datac => \i~14690\,
	datad => \rx_dpr_radr_local[31]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14463\);

\i~14688_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14688\ = reg_address_6 & atwd1_timestamp_31 & !reg_address_3 # !reg_address_6 & command_2_local_31 & reg_address_3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0CA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_atwd1_timestamp_31,
	datab => ww_command_2_local_31,
	datac => ww_reg_address_6,
	datad => ww_reg_address_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14688\);

\command_4_local[31]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_4_local[31]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_4_local[3]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_31,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_4_local[3]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_4_local[31]\);

\command_3_local[31]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_3_local[31]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_3_local[0]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_31,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_3_local[0]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_3_local[31]\);

\i~14689_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14689\ = reg_address_6 & \command_4_local[31]\ & !reg_address_3 # !reg_address_6 & \command_3_local[31]\ & reg_address_3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5088",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_6,
	datab => \command_4_local[31]\,
	datac => \command_3_local[31]\,
	datad => ww_reg_address_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14689\);

\command_1_local[31]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_1_local[31]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_1_local[18]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MASTERHWDATA_31,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_1_local[18]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_1_local[31]\);

\command_0_local[31]~I\ : apex20ke_lcell 
-- Equation(s):
-- \command_0_local[31]\ = DFFE(MASTERHWDATA, GLOBAL(outclock0), !GLOBAL(RST), , \command_0_local[30]~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_MASTERHWDATA_31,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \command_0_local[30]~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \command_0_local[31]\);

\i~5132_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5132\ = reg_address_6 & (reg_address_3 # sload_path_31) # !reg_address_6 & \command_0_local[31]\ & !reg_address_3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AEA4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_6,
	datab => \command_0_local[31]\,
	datac => ww_reg_address_3,
	datad => ww_sload_path_31,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5132\);

\i~5133_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5133\ = \i~5132\ & (atwd0_timestamp_31 # !reg_address_3) # !\i~5132\ & \command_1_local[31]\ & reg_address_3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F388",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \command_1_local[31]\,
	datab => ww_reg_address_3,
	datac => ww_atwd0_timestamp_31,
	datad => \i~5132\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5133\);

\i~5130_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5130\ = reg_address_5 & (\i~14689\ # reg_address_4) # !reg_address_5 & !reg_address_4 & \i~5133\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CBC8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14689\,
	datab => ww_reg_address_5,
	datac => ww_reg_address_4,
	datad => \i~5133\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5130\);

\i~5131_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5131\ = \i~5130\ & (\i~14463\ # !reg_address_4) # !\i~5130\ & \i~14688\ & reg_address_4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AFC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~14463\,
	datab => \i~14688\,
	datac => ww_reg_address_4,
	datad => \i~5130\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5131\);

\i2215~51_I\ : apex20ke_lcell 
-- Equation(s):
-- \i2215~51\ = (reg_address_5 & reg_address_4) & CASCADE(\command_2_local[26]~161\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	datac => ww_reg_address_5,
	datad => ww_reg_address_4,
	cascin => \command_2_local[26]~161\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \i2215~51\);

\i~14644_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14644\ = reg_address_3 & reg_address_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C0C0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reg_address_3,
	datac => ww_reg_address_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14644\);

\dom_id[48]~289_I\ : apex20ke_lcell 
-- Equation(s):
-- \dom_id[48]~289\ = (reg_address_4 & !reg_address_5 & reg_address_2 & \i~14644\) & CASCADE(\dom_id[48]~291\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "2000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_4,
	datab => ww_reg_address_5,
	datac => ww_reg_address_2,
	datad => \i~14644\,
	cascin => \dom_id[48]~291\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \dom_id[48]~289\);

\dom_id[0]~114_I\ : apex20ke_lcell 
-- Equation(s):
-- \dom_id[0]~114\ = !reg_address_2 & \dom_id[48]~288\ & !reg_address_5 & \dom_id[0]~232\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0400",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_2,
	datab => \dom_id[48]~288\,
	datac => ww_reg_address_5,
	datad => \dom_id[0]~232\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \dom_id[0]~114\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	altdpram_3 IS
    PORT (
	inclock : IN std_logic;
	outclock : IN std_logic;
	rdaddress : IN std_logic_vector(8 DOWNTO 0);
	data : IN std_logic_vector(15 DOWNTO 0);
	wren : IN std_logic;
	wraddress : IN std_logic_vector(8 DOWNTO 0);
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q : OUT std_logic_vector(15 DOWNTO 0)
	);
END altdpram_3;

ARCHITECTURE structure OF altdpram_3 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_inclock : std_logic;
SIGNAL ww_outclock : std_logic;
SIGNAL ww_rdaddress : std_logic_vector(8 DOWNTO 0);
SIGNAL ww_data : std_logic_vector(15 DOWNTO 0);
SIGNAL ww_wren : std_logic;
SIGNAL ww_wraddress : std_logic_vector(8 DOWNTO 0);
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_q : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][0]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][0]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][1]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][1]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][2]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][2]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][3]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][3]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][4]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][4]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][5]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][5]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][6]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][6]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][7]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][7]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][8]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][8]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][9]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][9]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][10]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][10]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][11]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][11]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][12]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][12]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][13]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][13]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][14]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][14]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][15]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][15]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \segment[0][0]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][1]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][2]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][3]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][4]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][5]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][6]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][7]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][8]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][9]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][10]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][11]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][12]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][13]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][14]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][15]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";

BEGIN

ww_inclock <= inclock;
ww_outclock <= outclock;
ww_rdaddress <= rdaddress;
ww_data <= data;
ww_wren <= wren;
ww_wraddress <= wraddress;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
q <= ww_q;

\ww_segment[0][0]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][0]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][1]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][1]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][2]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][2]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][3]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][3]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][4]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][4]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][5]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][5]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][6]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][6]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][7]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][7]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][8]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][8]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][9]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][9]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][10]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][10]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][11]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][11]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][12]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][12]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][13]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][13]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][14]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][14]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][15]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][15]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\segment[0][0]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "flash_ADC:inst_flash_ADC|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 0,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(0),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][0]_waddr\,
	raddr => \ww_segment[0][0]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][0]_modesel\,
	dataout => ww_q(0));

\segment[0][1]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "flash_ADC:inst_flash_ADC|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 1,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(1),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][1]_waddr\,
	raddr => \ww_segment[0][1]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][1]_modesel\,
	dataout => ww_q(1));

\segment[0][2]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "flash_ADC:inst_flash_ADC|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 2,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(2),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][2]_waddr\,
	raddr => \ww_segment[0][2]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][2]_modesel\,
	dataout => ww_q(2));

\segment[0][3]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "flash_ADC:inst_flash_ADC|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 3,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(3),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][3]_waddr\,
	raddr => \ww_segment[0][3]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][3]_modesel\,
	dataout => ww_q(3));

\segment[0][4]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "flash_ADC:inst_flash_ADC|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 4,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(4),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][4]_waddr\,
	raddr => \ww_segment[0][4]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][4]_modesel\,
	dataout => ww_q(4));

\segment[0][5]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "flash_ADC:inst_flash_ADC|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 5,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(5),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][5]_waddr\,
	raddr => \ww_segment[0][5]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][5]_modesel\,
	dataout => ww_q(5));

\segment[0][6]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "flash_ADC:inst_flash_ADC|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 6,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(6),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][6]_waddr\,
	raddr => \ww_segment[0][6]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][6]_modesel\,
	dataout => ww_q(6));

\segment[0][7]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "flash_ADC:inst_flash_ADC|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 7,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(7),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][7]_waddr\,
	raddr => \ww_segment[0][7]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][7]_modesel\,
	dataout => ww_q(7));

\segment[0][8]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "flash_ADC:inst_flash_ADC|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 8,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(8),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][8]_waddr\,
	raddr => \ww_segment[0][8]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][8]_modesel\,
	dataout => ww_q(8));

\segment[0][9]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "flash_ADC:inst_flash_ADC|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 9,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(9),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][9]_waddr\,
	raddr => \ww_segment[0][9]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][9]_modesel\,
	dataout => ww_q(9));

\segment[0][10]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "flash_ADC:inst_flash_ADC|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 10,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(10),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][10]_waddr\,
	raddr => \ww_segment[0][10]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][10]_modesel\,
	dataout => ww_q(10));

\segment[0][11]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "flash_ADC:inst_flash_ADC|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 11,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(11),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][11]_waddr\,
	raddr => \ww_segment[0][11]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][11]_modesel\,
	dataout => ww_q(11));

\segment[0][12]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "flash_ADC:inst_flash_ADC|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 12,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(12),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][12]_waddr\,
	raddr => \ww_segment[0][12]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][12]_modesel\,
	dataout => ww_q(12));

\segment[0][13]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "flash_ADC:inst_flash_ADC|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 13,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(13),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][13]_waddr\,
	raddr => \ww_segment[0][13]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][13]_modesel\,
	dataout => ww_q(13));

\segment[0][14]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "flash_ADC:inst_flash_ADC|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 14,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(14),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][14]_waddr\,
	raddr => \ww_segment[0][14]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][14]_modesel\,
	dataout => ww_q(14));

\segment[0][15]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "flash_ADC:inst_flash_ADC|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 15,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(15),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][15]_waddr\,
	raddr => \ww_segment[0][15]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][15]_modesel\,
	dataout => ww_q(15));
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_ram_dp_2 IS
    PORT (
	wrclock : IN std_logic;
	rdaddress : IN std_logic_vector(8 DOWNTO 0);
	data : IN std_logic_vector(15 DOWNTO 0);
	wren : IN std_logic;
	wraddress : IN std_logic_vector(8 DOWNTO 0);
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q : OUT std_logic_vector(15 DOWNTO 0)
	);
END lpm_ram_dp_2;

ARCHITECTURE structure OF lpm_ram_dp_2 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_wrclock : std_logic;
SIGNAL ww_rdaddress : std_logic_vector(8 DOWNTO 0);
SIGNAL ww_data : std_logic_vector(15 DOWNTO 0);
SIGNAL ww_wren : std_logic;
SIGNAL ww_wraddress : std_logic_vector(8 DOWNTO 0);
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_q : std_logic_vector(15 DOWNTO 0);
SIGNAL ww_sram_rdaddress : std_logic_vector(8 DOWNTO 0);
SIGNAL ww_sram_data : std_logic_vector(15 DOWNTO 0);
SIGNAL ww_sram_wraddress : std_logic_vector(8 DOWNTO 0);
SIGNAL ww_sram_q : std_logic_vector(15 DOWNTO 0);

COMPONENT altdpram_3
    PORT (
	inclock : IN std_logic;
	outclock : IN std_logic;
	rdaddress : IN std_logic_vector(8 DOWNTO 0);
	data : IN std_logic_vector(15 DOWNTO 0);
	wren : IN std_logic;
	wraddress : IN std_logic_vector(8 DOWNTO 0);
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q : OUT std_logic_vector(15 DOWNTO 0));
END COMPONENT;

BEGIN

ww_wrclock <= wrclock;
ww_rdaddress <= rdaddress;
ww_data <= data;
ww_wren <= wren;
ww_wraddress <= wraddress;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
q <= ww_q;

ww_sram_rdaddress <= (ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

ww_sram_data <= (ww_data(15) & ww_data(14) & ww_data(13) & ww_data(12) & ww_data(11) & ww_data(10) & ww_data(9) & ww_data(8) & ww_data(7) & ww_data(6) & ww_data(5) & ww_data(4) & ww_data(3) & ww_data(2) & ww_data(1) & ww_data(0)
);

ww_sram_wraddress <= (ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

ww_q(0) <= ww_sram_q(0);
ww_q(1) <= ww_sram_q(1);
ww_q(2) <= ww_sram_q(2);
ww_q(3) <= ww_sram_q(3);
ww_q(4) <= ww_sram_q(4);
ww_q(5) <= ww_sram_q(5);
ww_q(6) <= ww_sram_q(6);
ww_q(7) <= ww_sram_q(7);
ww_q(8) <= ww_sram_q(8);
ww_q(9) <= ww_sram_q(9);
ww_q(10) <= ww_sram_q(10);
ww_q(11) <= ww_sram_q(11);
ww_q(12) <= ww_sram_q(12);
ww_q(13) <= ww_sram_q(13);
ww_q(14) <= ww_sram_q(14);
ww_q(15) <= ww_sram_q(15);
sram : altdpram_3
PORT MAP (
	inclock => ww_wrclock,
	outclock => ww_wrclock,
	rdaddress => ww_sram_rdaddress,
	data => ww_sram_data,
	wren => ww_wren,
	wraddress => ww_sram_wraddress,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	q => ww_sram_q);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	com_adc_mem_2 IS
    PORT (
	outclock1 : IN std_logic;
	reg_address_3 : IN std_logic;
	reg_address_4 : IN std_logic;
	reg_address_5 : IN std_logic;
	reg_address_6 : IN std_logic;
	reg_address_2 : IN std_logic;
	i135 : IN std_logic;
	i180 : IN std_logic;
	i169 : IN std_logic;
	i168 : IN std_logic;
	i167 : IN std_logic;
	i166 : IN std_logic;
	i165 : IN std_logic;
	reg_address_7 : IN std_logic;
	i164 : IN std_logic;
	reg_address_8 : IN std_logic;
	i163 : IN std_logic;
	reg_address_9 : IN std_logic;
	i162 : IN std_logic;
	reg_address_10 : IN std_logic;
	i161 : IN std_logic;
	i134 : IN std_logic;
	i133 : IN std_logic;
	i132 : IN std_logic;
	i131 : IN std_logic;
	i130 : IN std_logic;
	i129 : IN std_logic;
	i128 : IN std_logic;
	i127 : IN std_logic;
	i126 : IN std_logic;
	i147 : IN std_logic;
	i154 : IN std_logic;
	i153 : IN std_logic;
	i152 : IN std_logic;
	i151 : IN std_logic;
	i150 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q_0 : OUT std_logic;
	q_1 : OUT std_logic;
	q_2 : OUT std_logic;
	q_3 : OUT std_logic;
	q_4 : OUT std_logic;
	q_5 : OUT std_logic;
	q_6 : OUT std_logic;
	q_7 : OUT std_logic;
	q_8 : OUT std_logic;
	q_9 : OUT std_logic;
	q_10 : OUT std_logic;
	q_11 : OUT std_logic;
	q_12 : OUT std_logic;
	q_13 : OUT std_logic;
	q_14 : OUT std_logic;
	q_15 : OUT std_logic
	);
END com_adc_mem_2;

ARCHITECTURE structure OF com_adc_mem_2 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_outclock1 : std_logic;
SIGNAL ww_reg_address_3 : std_logic;
SIGNAL ww_reg_address_4 : std_logic;
SIGNAL ww_reg_address_5 : std_logic;
SIGNAL ww_reg_address_6 : std_logic;
SIGNAL ww_reg_address_2 : std_logic;
SIGNAL ww_i135 : std_logic;
SIGNAL ww_i180 : std_logic;
SIGNAL ww_i169 : std_logic;
SIGNAL ww_i168 : std_logic;
SIGNAL ww_i167 : std_logic;
SIGNAL ww_i166 : std_logic;
SIGNAL ww_i165 : std_logic;
SIGNAL ww_reg_address_7 : std_logic;
SIGNAL ww_i164 : std_logic;
SIGNAL ww_reg_address_8 : std_logic;
SIGNAL ww_i163 : std_logic;
SIGNAL ww_reg_address_9 : std_logic;
SIGNAL ww_i162 : std_logic;
SIGNAL ww_reg_address_10 : std_logic;
SIGNAL ww_i161 : std_logic;
SIGNAL ww_i134 : std_logic;
SIGNAL ww_i133 : std_logic;
SIGNAL ww_i132 : std_logic;
SIGNAL ww_i131 : std_logic;
SIGNAL ww_i130 : std_logic;
SIGNAL ww_i129 : std_logic;
SIGNAL ww_i128 : std_logic;
SIGNAL ww_i127 : std_logic;
SIGNAL ww_i126 : std_logic;
SIGNAL ww_i147 : std_logic;
SIGNAL ww_i154 : std_logic;
SIGNAL ww_i153 : std_logic;
SIGNAL ww_i152 : std_logic;
SIGNAL ww_i151 : std_logic;
SIGNAL ww_i150 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_q_0 : std_logic;
SIGNAL ww_q_1 : std_logic;
SIGNAL ww_q_2 : std_logic;
SIGNAL ww_q_3 : std_logic;
SIGNAL ww_q_4 : std_logic;
SIGNAL ww_q_5 : std_logic;
SIGNAL ww_q_6 : std_logic;
SIGNAL ww_q_7 : std_logic;
SIGNAL ww_q_8 : std_logic;
SIGNAL ww_q_9 : std_logic;
SIGNAL ww_q_10 : std_logic;
SIGNAL ww_q_11 : std_logic;
SIGNAL ww_q_12 : std_logic;
SIGNAL ww_q_13 : std_logic;
SIGNAL ww_q_14 : std_logic;
SIGNAL ww_q_15 : std_logic;
SIGNAL ww_lpm_ram_dp_component_rdaddress : std_logic_vector(8 DOWNTO 0);
SIGNAL ww_lpm_ram_dp_component_data : std_logic_vector(15 DOWNTO 0);
SIGNAL ww_lpm_ram_dp_component_wraddress : std_logic_vector(8 DOWNTO 0);
SIGNAL ww_lpm_ram_dp_component_q : std_logic_vector(15 DOWNTO 0);

COMPONENT lpm_ram_dp_2
    PORT (
	wrclock : IN std_logic;
	rdaddress : IN std_logic_vector(8 DOWNTO 0);
	data : IN std_logic_vector(15 DOWNTO 0);
	wren : IN std_logic;
	wraddress : IN std_logic_vector(8 DOWNTO 0);
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q : OUT std_logic_vector(15 DOWNTO 0));
END COMPONENT;

BEGIN

ww_outclock1 <= outclock1;
ww_reg_address_3 <= reg_address_3;
ww_reg_address_4 <= reg_address_4;
ww_reg_address_5 <= reg_address_5;
ww_reg_address_6 <= reg_address_6;
ww_reg_address_2 <= reg_address_2;
ww_i135 <= i135;
ww_i180 <= i180;
ww_i169 <= i169;
ww_i168 <= i168;
ww_i167 <= i167;
ww_i166 <= i166;
ww_i165 <= i165;
ww_reg_address_7 <= reg_address_7;
ww_i164 <= i164;
ww_reg_address_8 <= reg_address_8;
ww_i163 <= i163;
ww_reg_address_9 <= reg_address_9;
ww_i162 <= i162;
ww_reg_address_10 <= reg_address_10;
ww_i161 <= i161;
ww_i134 <= i134;
ww_i133 <= i133;
ww_i132 <= i132;
ww_i131 <= i131;
ww_i130 <= i130;
ww_i129 <= i129;
ww_i128 <= i128;
ww_i127 <= i127;
ww_i126 <= i126;
ww_i147 <= i147;
ww_i154 <= i154;
ww_i153 <= i153;
ww_i152 <= i152;
ww_i151 <= i151;
ww_i150 <= i150;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
q_0 <= ww_q_0;
q_1 <= ww_q_1;
q_2 <= ww_q_2;
q_3 <= ww_q_3;
q_4 <= ww_q_4;
q_5 <= ww_q_5;
q_6 <= ww_q_6;
q_7 <= ww_q_7;
q_8 <= ww_q_8;
q_9 <= ww_q_9;
q_10 <= ww_q_10;
q_11 <= ww_q_11;
q_12 <= ww_q_12;
q_13 <= ww_q_13;
q_14 <= ww_q_14;
q_15 <= ww_q_15;

ww_lpm_ram_dp_component_rdaddress <= (ww_reg_address_10 & ww_reg_address_9 & ww_reg_address_8 & ww_reg_address_7 & ww_reg_address_6 & ww_reg_address_5 & ww_reg_address_4 & ww_reg_address_3 & ww_reg_address_2);

ww_lpm_ram_dp_component_data <= (ww_i150 & ww_i151 & ww_i152 & ww_i153 & ww_i154 & ww_i147 & ww_i126 & ww_i127 & ww_i128 & ww_i129 & ww_i130 & ww_i131 & ww_i132 & ww_i133 & ww_i134 & ww_i135);

ww_lpm_ram_dp_component_wraddress <= (ww_i161 & ww_i162 & ww_i163 & ww_i164 & ww_i165 & ww_i166 & ww_i167 & ww_i168 & ww_i169);

ww_q_0 <= ww_lpm_ram_dp_component_q(0);
ww_q_1 <= ww_lpm_ram_dp_component_q(1);
ww_q_2 <= ww_lpm_ram_dp_component_q(2);
ww_q_3 <= ww_lpm_ram_dp_component_q(3);
ww_q_4 <= ww_lpm_ram_dp_component_q(4);
ww_q_5 <= ww_lpm_ram_dp_component_q(5);
ww_q_6 <= ww_lpm_ram_dp_component_q(6);
ww_q_7 <= ww_lpm_ram_dp_component_q(7);
ww_q_8 <= ww_lpm_ram_dp_component_q(8);
ww_q_9 <= ww_lpm_ram_dp_component_q(9);
ww_q_10 <= ww_lpm_ram_dp_component_q(10);
ww_q_11 <= ww_lpm_ram_dp_component_q(11);
ww_q_12 <= ww_lpm_ram_dp_component_q(12);
ww_q_13 <= ww_lpm_ram_dp_component_q(13);
ww_q_14 <= ww_lpm_ram_dp_component_q(14);
ww_q_15 <= ww_lpm_ram_dp_component_q(15);
lpm_ram_dp_component : lpm_ram_dp_2
PORT MAP (
	wrclock => ww_outclock1,
	rdaddress => ww_lpm_ram_dp_component_rdaddress,
	data => ww_lpm_ram_dp_component_data,
	wren => ww_i180,
	wraddress => ww_lpm_ram_dp_component_wraddress,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	q => ww_lpm_ram_dp_component_q);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	flash_ADC IS
    PORT (
	CLK : IN std_logic;
	MASTERHWDATA_0 : IN std_logic;
	MASTERHWDATA_1 : IN std_logic;
	MASTERHWDATA_2 : IN std_logic;
	MASTERHWDATA_3 : IN std_logic;
	MASTERHWDATA_4 : IN std_logic;
	MASTERHWDATA_5 : IN std_logic;
	MASTERHWDATA_6 : IN std_logic;
	MASTERHWDATA_7 : IN std_logic;
	MASTERHWDATA_8 : IN std_logic;
	MASTERHWDATA_9 : IN std_logic;
	MASTERHWDATA_10 : IN std_logic;
	MASTERHWDATA_11 : IN std_logic;
	MASTERHWDATA_12 : IN std_logic;
	MASTERHWDATA_13 : IN std_logic;
	MASTERHWDATA_14 : IN std_logic;
	MASTERHWDATA_15 : IN std_logic;
	RST : IN std_logic;
	reg_address_3 : IN std_logic;
	reg_address_4 : IN std_logic;
	reg_address_5 : IN std_logic;
	reg_address_6 : IN std_logic;
	reg_address_2 : IN std_logic;
	reg_address_13 : IN std_logic;
	i3329 : IN std_logic;
	i : IN std_logic;
	command_0_local_16 : IN std_logic;
	enable_disc : IN std_logic;
	i33291 : IN std_logic;
	reg_address_7 : IN std_logic;
	reg_address_8 : IN std_logic;
	reg_address_9 : IN std_logic;
	reg_address_10 : IN std_logic;
	OneSPE : IN std_logic;
	FLASH_AD_D_0 : IN std_logic;
	FLASH_AD_D_1 : IN std_logic;
	FLASH_AD_D_2 : IN std_logic;
	FLASH_AD_D_3 : IN std_logic;
	FLASH_AD_D_4 : IN std_logic;
	FLASH_AD_D_5 : IN std_logic;
	FLASH_AD_D_6 : IN std_logic;
	FLASH_AD_D_7 : IN std_logic;
	FLASH_AD_D_8 : IN std_logic;
	FLASH_AD_D_9 : IN std_logic;
	FLASH_NCO : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q_0 : OUT std_logic;
	q_1 : OUT std_logic;
	q_2 : OUT std_logic;
	q_3 : OUT std_logic;
	q_4 : OUT std_logic;
	q_5 : OUT std_logic;
	q_6 : OUT std_logic;
	q_7 : OUT std_logic;
	q_8 : OUT std_logic;
	q_9 : OUT std_logic;
	q_10 : OUT std_logic;
	q_11 : OUT std_logic;
	q_12 : OUT std_logic;
	q_13 : OUT std_logic;
	q_14 : OUT std_logic;
	q_15 : OUT std_logic;
	done : OUT std_logic
	);
END flash_ADC;

ARCHITECTURE structure OF flash_ADC IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK : std_logic;
SIGNAL ww_MASTERHWDATA_0 : std_logic;
SIGNAL ww_MASTERHWDATA_1 : std_logic;
SIGNAL ww_MASTERHWDATA_2 : std_logic;
SIGNAL ww_MASTERHWDATA_3 : std_logic;
SIGNAL ww_MASTERHWDATA_4 : std_logic;
SIGNAL ww_MASTERHWDATA_5 : std_logic;
SIGNAL ww_MASTERHWDATA_6 : std_logic;
SIGNAL ww_MASTERHWDATA_7 : std_logic;
SIGNAL ww_MASTERHWDATA_8 : std_logic;
SIGNAL ww_MASTERHWDATA_9 : std_logic;
SIGNAL ww_MASTERHWDATA_10 : std_logic;
SIGNAL ww_MASTERHWDATA_11 : std_logic;
SIGNAL ww_MASTERHWDATA_12 : std_logic;
SIGNAL ww_MASTERHWDATA_13 : std_logic;
SIGNAL ww_MASTERHWDATA_14 : std_logic;
SIGNAL ww_MASTERHWDATA_15 : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_reg_address_3 : std_logic;
SIGNAL ww_reg_address_4 : std_logic;
SIGNAL ww_reg_address_5 : std_logic;
SIGNAL ww_reg_address_6 : std_logic;
SIGNAL ww_reg_address_2 : std_logic;
SIGNAL ww_reg_address_13 : std_logic;
SIGNAL ww_i3329 : std_logic;
SIGNAL ww_i : std_logic;
SIGNAL ww_command_0_local_16 : std_logic;
SIGNAL ww_enable_disc : std_logic;
SIGNAL ww_i33291 : std_logic;
SIGNAL ww_reg_address_7 : std_logic;
SIGNAL ww_reg_address_8 : std_logic;
SIGNAL ww_reg_address_9 : std_logic;
SIGNAL ww_reg_address_10 : std_logic;
SIGNAL ww_OneSPE : std_logic;
SIGNAL ww_FLASH_AD_D_0 : std_logic;
SIGNAL ww_FLASH_AD_D_1 : std_logic;
SIGNAL ww_FLASH_AD_D_2 : std_logic;
SIGNAL ww_FLASH_AD_D_3 : std_logic;
SIGNAL ww_FLASH_AD_D_4 : std_logic;
SIGNAL ww_FLASH_AD_D_5 : std_logic;
SIGNAL ww_FLASH_AD_D_6 : std_logic;
SIGNAL ww_FLASH_AD_D_7 : std_logic;
SIGNAL ww_FLASH_AD_D_8 : std_logic;
SIGNAL ww_FLASH_AD_D_9 : std_logic;
SIGNAL ww_FLASH_NCO : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_q_0 : std_logic;
SIGNAL ww_q_1 : std_logic;
SIGNAL ww_q_2 : std_logic;
SIGNAL ww_q_3 : std_logic;
SIGNAL ww_q_4 : std_logic;
SIGNAL ww_q_5 : std_logic;
SIGNAL ww_q_6 : std_logic;
SIGNAL ww_q_7 : std_logic;
SIGNAL ww_q_8 : std_logic;
SIGNAL ww_q_9 : std_logic;
SIGNAL ww_q_10 : std_logic;
SIGNAL ww_q_11 : std_logic;
SIGNAL ww_q_12 : std_logic;
SIGNAL ww_q_13 : std_logic;
SIGNAL ww_q_14 : std_logic;
SIGNAL ww_q_15 : std_logic;
SIGNAL ww_done : std_logic;
SIGNAL \wysi_counter|sload_path[0]\ : std_logic;
SIGNAL \i135~55\ : std_logic;
SIGNAL wren : std_logic;
SIGNAL \i180~2\ : std_logic;
SIGNAL \wraddress[0]\ : std_logic;
SIGNAL \i169~55\ : std_logic;
SIGNAL \wraddress[1]\ : std_logic;
SIGNAL \i168~55\ : std_logic;
SIGNAL \wraddress[2]\ : std_logic;
SIGNAL \i167~55\ : std_logic;
SIGNAL \wraddress[3]\ : std_logic;
SIGNAL \i166~55\ : std_logic;
SIGNAL \wraddress[4]\ : std_logic;
SIGNAL \i165~55\ : std_logic;
SIGNAL \wraddress[5]\ : std_logic;
SIGNAL \i164~55\ : std_logic;
SIGNAL \wraddress[6]\ : std_logic;
SIGNAL \i163~55\ : std_logic;
SIGNAL \wraddress[7]\ : std_logic;
SIGNAL \i162~55\ : std_logic;
SIGNAL \wraddress[8]\ : std_logic;
SIGNAL \i161~55\ : std_logic;
SIGNAL \i134~55\ : std_logic;
SIGNAL \i133~55\ : std_logic;
SIGNAL \i132~55\ : std_logic;
SIGNAL \i131~55\ : std_logic;
SIGNAL \i130~55\ : std_logic;
SIGNAL \i129~55\ : std_logic;
SIGNAL \i128~55\ : std_logic;
SIGNAL \i127~55\ : std_logic;
SIGNAL \i126~55\ : std_logic;
SIGNAL \i147~55\ : std_logic;
SIGNAL \i154~0\ : std_logic;
SIGNAL \i153~0\ : std_logic;
SIGNAL \i152~0\ : std_logic;
SIGNAL \i151~0\ : std_logic;
SIGNAL \i150~0\ : std_logic;
SIGNAL disc : std_logic;
SIGNAL \wraddress[0]~31\ : std_logic;
SIGNAL i16 : std_logic;
SIGNAL \wysi_counter|counter_cell[0]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[1]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[1]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[2]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[2]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[3]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[3]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[4]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[4]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[5]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[5]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[6]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[6]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[7]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[7]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[8]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[8]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[9]\ : std_logic;
SIGNAL i18 : std_logic;
SIGNAL ALT_NOT_ww_enable_disc : std_logic;

COMPONENT com_adc_mem_2
    PORT (
	outclock1 : IN std_logic;
	reg_address_3 : IN std_logic;
	reg_address_4 : IN std_logic;
	reg_address_5 : IN std_logic;
	reg_address_6 : IN std_logic;
	reg_address_2 : IN std_logic;
	i135 : IN std_logic;
	i180 : IN std_logic;
	i169 : IN std_logic;
	i168 : IN std_logic;
	i167 : IN std_logic;
	i166 : IN std_logic;
	i165 : IN std_logic;
	reg_address_7 : IN std_logic;
	i164 : IN std_logic;
	reg_address_8 : IN std_logic;
	i163 : IN std_logic;
	reg_address_9 : IN std_logic;
	i162 : IN std_logic;
	reg_address_10 : IN std_logic;
	i161 : IN std_logic;
	i134 : IN std_logic;
	i133 : IN std_logic;
	i132 : IN std_logic;
	i131 : IN std_logic;
	i130 : IN std_logic;
	i129 : IN std_logic;
	i128 : IN std_logic;
	i127 : IN std_logic;
	i126 : IN std_logic;
	i147 : IN std_logic;
	i154 : IN std_logic;
	i153 : IN std_logic;
	i152 : IN std_logic;
	i151 : IN std_logic;
	i150 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q_0 : OUT std_logic;
	q_1 : OUT std_logic;
	q_2 : OUT std_logic;
	q_3 : OUT std_logic;
	q_4 : OUT std_logic;
	q_5 : OUT std_logic;
	q_6 : OUT std_logic;
	q_7 : OUT std_logic;
	q_8 : OUT std_logic;
	q_9 : OUT std_logic;
	q_10 : OUT std_logic;
	q_11 : OUT std_logic;
	q_12 : OUT std_logic;
	q_13 : OUT std_logic;
	q_14 : OUT std_logic;
	q_15 : OUT std_logic);
END COMPONENT;

BEGIN

ww_CLK <= CLK;
ww_MASTERHWDATA_0 <= MASTERHWDATA_0;
ww_MASTERHWDATA_1 <= MASTERHWDATA_1;
ww_MASTERHWDATA_2 <= MASTERHWDATA_2;
ww_MASTERHWDATA_3 <= MASTERHWDATA_3;
ww_MASTERHWDATA_4 <= MASTERHWDATA_4;
ww_MASTERHWDATA_5 <= MASTERHWDATA_5;
ww_MASTERHWDATA_6 <= MASTERHWDATA_6;
ww_MASTERHWDATA_7 <= MASTERHWDATA_7;
ww_MASTERHWDATA_8 <= MASTERHWDATA_8;
ww_MASTERHWDATA_9 <= MASTERHWDATA_9;
ww_MASTERHWDATA_10 <= MASTERHWDATA_10;
ww_MASTERHWDATA_11 <= MASTERHWDATA_11;
ww_MASTERHWDATA_12 <= MASTERHWDATA_12;
ww_MASTERHWDATA_13 <= MASTERHWDATA_13;
ww_MASTERHWDATA_14 <= MASTERHWDATA_14;
ww_MASTERHWDATA_15 <= MASTERHWDATA_15;
ww_RST <= RST;
ww_reg_address_3 <= reg_address_3;
ww_reg_address_4 <= reg_address_4;
ww_reg_address_5 <= reg_address_5;
ww_reg_address_6 <= reg_address_6;
ww_reg_address_2 <= reg_address_2;
ww_reg_address_13 <= reg_address_13;
ww_i3329 <= i3329;
ww_i <= i;
ww_command_0_local_16 <= command_0_local_16;
ww_enable_disc <= enable_disc;
ww_i33291 <= i33291;
ww_reg_address_7 <= reg_address_7;
ww_reg_address_8 <= reg_address_8;
ww_reg_address_9 <= reg_address_9;
ww_reg_address_10 <= reg_address_10;
ww_OneSPE <= OneSPE;
ww_FLASH_AD_D_0 <= FLASH_AD_D_0;
ww_FLASH_AD_D_1 <= FLASH_AD_D_1;
ww_FLASH_AD_D_2 <= FLASH_AD_D_2;
ww_FLASH_AD_D_3 <= FLASH_AD_D_3;
ww_FLASH_AD_D_4 <= FLASH_AD_D_4;
ww_FLASH_AD_D_5 <= FLASH_AD_D_5;
ww_FLASH_AD_D_6 <= FLASH_AD_D_6;
ww_FLASH_AD_D_7 <= FLASH_AD_D_7;
ww_FLASH_AD_D_8 <= FLASH_AD_D_8;
ww_FLASH_AD_D_9 <= FLASH_AD_D_9;
ww_FLASH_NCO <= FLASH_NCO;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
q_0 <= ww_q_0;
q_1 <= ww_q_1;
q_2 <= ww_q_2;
q_3 <= ww_q_3;
q_4 <= ww_q_4;
q_5 <= ww_q_5;
q_6 <= ww_q_6;
q_7 <= ww_q_7;
q_8 <= ww_q_8;
q_9 <= ww_q_9;
q_10 <= ww_q_10;
q_11 <= ww_q_11;
q_12 <= ww_q_12;
q_13 <= ww_q_13;
q_14 <= ww_q_14;
q_15 <= ww_q_15;
done <= ww_done;
ALT_NOT_ww_enable_disc <= NOT ww_enable_disc;
inst_com_adc_mem : com_adc_mem_2
PORT MAP (
	outclock1 => ww_CLK,
	reg_address_3 => ww_reg_address_3,
	reg_address_4 => ww_reg_address_4,
	reg_address_5 => ww_reg_address_5,
	reg_address_6 => ww_reg_address_6,
	reg_address_2 => ww_reg_address_2,
	i135 => \i135~55\,
	i180 => \i180~2\,
	i169 => \i169~55\,
	i168 => \i168~55\,
	i167 => \i167~55\,
	i166 => \i166~55\,
	i165 => \i165~55\,
	reg_address_7 => ww_reg_address_7,
	i164 => \i164~55\,
	reg_address_8 => ww_reg_address_8,
	i163 => \i163~55\,
	reg_address_9 => ww_reg_address_9,
	i162 => \i162~55\,
	reg_address_10 => ww_reg_address_10,
	i161 => \i161~55\,
	i134 => \i134~55\,
	i133 => \i133~55\,
	i132 => \i132~55\,
	i131 => \i131~55\,
	i130 => \i130~55\,
	i129 => \i129~55\,
	i128 => \i128~55\,
	i127 => \i127~55\,
	i126 => \i126~55\,
	i147 => \i147~55\,
	i154 => \i154~0\,
	i153 => \i153~0\,
	i152 => \i152~0\,
	i151 => \i151~0\,
	i150 => \i150~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	q_0 => ww_q_0,
	q_1 => ww_q_1,
	q_2 => ww_q_2,
	q_3 => ww_q_3,
	q_4 => ww_q_4,
	q_5 => ww_q_5,
	q_6 => ww_q_6,
	q_7 => ww_q_7,
	q_8 => ww_q_8,
	q_9 => ww_q_9,
	q_10 => ww_q_10,
	q_11 => ww_q_11,
	q_12 => ww_q_12,
	q_13 => ww_q_13,
	q_14 => ww_q_14,
	q_15 => ww_q_15);

\wysi_counter|counter_cell[0]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[0]\ = DFFE(!i16 & \wraddress[0]~31\ $ \wysi_counter|sload_path[0]\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[0]~COUT\ = CARRY(\wysi_counter|sload_path[0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "qfbk_counter",
	packed_mode => "false",
	lut_mask => "5AF0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wraddress[0]~31\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => i16,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[0]\,
	cout => \wysi_counter|counter_cell[0]~COUT\);

\i135~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i135~55\ = i33291 & (i3329 & MASTERHWDATA # !i3329 & \FLASH_AD_D[0]~combout\) # !i33291 & \FLASH_AD_D[0]~combout\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EA2A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_FLASH_AD_D_0,
	datab => ww_i33291,
	datac => ww_i3329,
	datad => ww_MASTERHWDATA_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i135~55\);

\wren~I\ : apex20ke_lcell 
-- Equation(s):
-- wren = DFFE(!i16 & (\wraddress[0]~31\ # !i18 & wren), GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "4544",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i16,
	datab => \wraddress[0]~31\,
	datac => i18,
	datad => wren,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => wren);

\i180~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \i180~2\ = wren # reg_address_13 & i33291 & i

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F8F0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_13,
	datab => ww_i33291,
	datac => wren,
	datad => ww_i,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i180~2\);

\wraddress[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wraddress[0]\ = DFFE(\wysi_counter|sload_path[0]\, GLOBAL(outclock1), !GLOBAL(RST), , \wraddress[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|sload_path[0]\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \wraddress[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wraddress[0]\);

\i169~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i169~55\ = i3329 & (i33291 & reg_address_2 # !i33291 & \wraddress[0]\) # !i3329 & \wraddress[0]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "D8F0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_i3329,
	datab => ww_reg_address_2,
	datac => \wraddress[0]\,
	datad => ww_i33291,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i169~55\);

\wraddress[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wraddress[1]\ = DFFE(\wysi_counter|sload_path[1]\, GLOBAL(outclock1), !GLOBAL(RST), , \wraddress[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|sload_path[1]\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \wraddress[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wraddress[1]\);

\i168~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i168~55\ = i3329 & (i33291 & reg_address_3 # !i33291 & \wraddress[1]\) # !i3329 & \wraddress[1]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "D8F0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_i3329,
	datab => ww_reg_address_3,
	datac => \wraddress[1]\,
	datad => ww_i33291,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i168~55\);

\wraddress[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wraddress[2]\ = DFFE(\wysi_counter|sload_path[2]\, GLOBAL(outclock1), !GLOBAL(RST), , \wraddress[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|sload_path[2]\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \wraddress[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wraddress[2]\);

\i167~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i167~55\ = i3329 & (i33291 & reg_address_4 # !i33291 & \wraddress[2]\) # !i3329 & \wraddress[2]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E4CC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_i3329,
	datab => \wraddress[2]\,
	datac => ww_reg_address_4,
	datad => ww_i33291,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i167~55\);

\wraddress[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wraddress[3]\ = DFFE(\wysi_counter|sload_path[3]\, GLOBAL(outclock1), !GLOBAL(RST), , \wraddress[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[3]\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \wraddress[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wraddress[3]\);

\i166~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i166~55\ = i3329 & (i33291 & reg_address_5 # !i33291 & \wraddress[3]\) # !i3329 & \wraddress[3]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CAAA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wraddress[3]\,
	datab => ww_reg_address_5,
	datac => ww_i3329,
	datad => ww_i33291,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i166~55\);

\wraddress[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wraddress[4]\ = DFFE(\wysi_counter|sload_path[4]\, GLOBAL(outclock1), !GLOBAL(RST), , \wraddress[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[4]\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \wraddress[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wraddress[4]\);

\i165~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i165~55\ = i33291 & (i3329 & reg_address_6 # !i3329 & \wraddress[4]\) # !i33291 & \wraddress[4]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F870",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_i33291,
	datab => ww_i3329,
	datac => \wraddress[4]\,
	datad => ww_reg_address_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i165~55\);

\wraddress[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wraddress[5]\ = DFFE(\wysi_counter|sload_path[5]\, GLOBAL(outclock1), !GLOBAL(RST), , \wraddress[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[5]\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \wraddress[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wraddress[5]\);

\i164~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i164~55\ = i3329 & (i33291 & reg_address_7 # !i33291 & \wraddress[5]\) # !i3329 & \wraddress[5]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F780",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_i3329,
	datab => ww_i33291,
	datac => ww_reg_address_7,
	datad => \wraddress[5]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i164~55\);

\wraddress[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wraddress[6]\ = DFFE(\wysi_counter|sload_path[6]\, GLOBAL(outclock1), !GLOBAL(RST), , \wraddress[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|sload_path[6]\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \wraddress[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wraddress[6]\);

\i163~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i163~55\ = i3329 & (i33291 & reg_address_8 # !i33291 & \wraddress[6]\) # !i3329 & \wraddress[6]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "D8F0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_i3329,
	datab => ww_reg_address_8,
	datac => \wraddress[6]\,
	datad => ww_i33291,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i163~55\);

\wraddress[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wraddress[7]\ = DFFE(\wysi_counter|sload_path[7]\, GLOBAL(outclock1), !GLOBAL(RST), , \wraddress[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|sload_path[7]\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \wraddress[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wraddress[7]\);

\i162~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i162~55\ = i3329 & (i33291 & reg_address_9 # !i33291 & \wraddress[7]\) # !i3329 & \wraddress[7]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "D8F0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_i3329,
	datab => ww_reg_address_9,
	datac => \wraddress[7]\,
	datad => ww_i33291,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i162~55\);

\wraddress[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wraddress[8]\ = DFFE(\wysi_counter|sload_path[8]\, GLOBAL(outclock1), !GLOBAL(RST), , \wraddress[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[8]\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \wraddress[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wraddress[8]\);

\i161~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i161~55\ = i3329 & (i33291 & reg_address_10 # !i33291 & \wraddress[8]\) # !i3329 & \wraddress[8]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EA2A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wraddress[8]\,
	datab => ww_i3329,
	datac => ww_i33291,
	datad => ww_reg_address_10,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i161~55\);

\i134~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i134~55\ = i3329 & (i33291 & MASTERHWDATA # !i33291 & \FLASH_AD_D[1]~combout\) # !i3329 & \FLASH_AD_D[1]~combout\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EA2A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_FLASH_AD_D_1,
	datab => ww_i3329,
	datac => ww_i33291,
	datad => ww_MASTERHWDATA_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i134~55\);

\i133~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i133~55\ = i33291 & (i3329 & MASTERHWDATA # !i3329 & \FLASH_AD_D[2]~combout\) # !i33291 & \FLASH_AD_D[2]~combout\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EA2A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_FLASH_AD_D_2,
	datab => ww_i33291,
	datac => ww_i3329,
	datad => ww_MASTERHWDATA_2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i133~55\);

\i132~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i132~55\ = i3329 & (i33291 & MASTERHWDATA # !i33291 & \FLASH_AD_D[3]~combout\) # !i3329 & \FLASH_AD_D[3]~combout\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EA2A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_FLASH_AD_D_3,
	datab => ww_i3329,
	datac => ww_i33291,
	datad => ww_MASTERHWDATA_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i132~55\);

\i131~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i131~55\ = i33291 & (i3329 & MASTERHWDATA # !i3329 & \FLASH_AD_D[4]~combout\) # !i33291 & \FLASH_AD_D[4]~combout\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EA2A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_FLASH_AD_D_4,
	datab => ww_i33291,
	datac => ww_i3329,
	datad => ww_MASTERHWDATA_4,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i131~55\);

\i130~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i130~55\ = i3329 & (i33291 & MASTERHWDATA # !i33291 & \FLASH_AD_D[5]~combout\) # !i3329 & \FLASH_AD_D[5]~combout\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EA2A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_FLASH_AD_D_5,
	datab => ww_i3329,
	datac => ww_i33291,
	datad => ww_MASTERHWDATA_5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i130~55\);

\i129~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i129~55\ = i3329 & (i33291 & MASTERHWDATA # !i33291 & \FLASH_AD_D[6]~combout\) # !i3329 & \FLASH_AD_D[6]~combout\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F870",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_i3329,
	datab => ww_i33291,
	datac => ww_FLASH_AD_D_6,
	datad => ww_MASTERHWDATA_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i129~55\);

\i128~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i128~55\ = i3329 & (i33291 & MASTERHWDATA # !i33291 & \FLASH_AD_D[7]~combout\) # !i3329 & \FLASH_AD_D[7]~combout\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EA2A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_FLASH_AD_D_7,
	datab => ww_i3329,
	datac => ww_i33291,
	datad => ww_MASTERHWDATA_7,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i128~55\);

\i127~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i127~55\ = i3329 & (i33291 & MASTERHWDATA # !i33291 & \FLASH_AD_D[8]~combout\) # !i3329 & \FLASH_AD_D[8]~combout\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EA2A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_FLASH_AD_D_8,
	datab => ww_i3329,
	datac => ww_i33291,
	datad => ww_MASTERHWDATA_8,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i127~55\);

\i126~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i126~55\ = i33291 & (i3329 & MASTERHWDATA # !i3329 & \FLASH_AD_D[9]~combout\) # !i33291 & \FLASH_AD_D[9]~combout\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EA2A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_FLASH_AD_D_9,
	datab => ww_i33291,
	datac => ww_i3329,
	datad => ww_MASTERHWDATA_9,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i126~55\);

\i147~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i147~55\ = i3329 & (i33291 & MASTERHWDATA # !i33291 & \FLASH_NCO~combout\) # !i3329 & \FLASH_NCO~combout\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EA2A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_FLASH_NCO,
	datab => ww_i3329,
	datac => ww_i33291,
	datad => ww_MASTERHWDATA_10,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i147~55\);

\i154~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \i154~0\ = reg_address_13 & i & i33291 & MASTERHWDATA

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_13,
	datab => ww_i,
	datac => ww_i33291,
	datad => ww_MASTERHWDATA_11,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i154~0\);

\i153~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \i153~0\ = reg_address_13 & i & i33291 & MASTERHWDATA

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_13,
	datab => ww_i,
	datac => ww_i33291,
	datad => ww_MASTERHWDATA_12,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i153~0\);

\i152~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \i152~0\ = reg_address_13 & i & i33291 & MASTERHWDATA

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_13,
	datab => ww_i,
	datac => ww_i33291,
	datad => ww_MASTERHWDATA_13,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i152~0\);

\i151~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \i151~0\ = reg_address_13 & i & i33291 & MASTERHWDATA

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_13,
	datab => ww_i,
	datac => ww_i33291,
	datad => ww_MASTERHWDATA_14,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i151~0\);

\i150~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \i150~0\ = reg_address_13 & i & i33291 & MASTERHWDATA

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_13,
	datab => ww_i,
	datac => ww_i33291,
	datad => ww_MASTERHWDATA_15,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i150~0\);

\done~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- done = DFFE(!i16 & (i18 & \wysi_counter|sload_path[9]\ # !i18 & done), GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0C0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_done,
	datab => \wysi_counter|sload_path[9]\,
	datac => i16,
	datad => i18,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_done);

\disc~I\ : apex20ke_lcell 
-- Equation(s):
-- disc = DFFE(VCC, GLOBAL(\OneSPE~combout\), command_0_local_17, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	clk => ww_OneSPE,
	aclr => ALT_NOT_ww_enable_disc,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => disc);

\wraddress[0]~31_I\ : apex20ke_lcell 
-- Equation(s):
-- \wraddress[0]~31\ = !\wysi_counter|sload_path[9]\ & (command_0_local_16 # disc & command_0_local_17)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0E0A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_0_local_16,
	datab => disc,
	datac => \wysi_counter|sload_path[9]\,
	datad => ww_enable_disc,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \wraddress[0]~31\);

\i16~I\ : apex20ke_lcell 
-- Equation(s):
-- i16 = !command_0_local_16 & !command_0_local_17

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "000F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_command_0_local_16,
	datad => ww_enable_disc,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i16);

\wysi_counter|counter_cell[1]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[1]\ = DFFE(!i16 & \wysi_counter|sload_path[1]\ $ (\wraddress[0]~31\ & \wysi_counter|counter_cell[0]~COUT\), GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[1]~COUT\ = CARRY(!\wysi_counter|counter_cell[0]~COUT\ # !\wysi_counter|sload_path[1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wraddress[0]~31\,
	datab => \wysi_counter|sload_path[1]\,
	cin => \wysi_counter|counter_cell[0]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => i16,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[1]\,
	cout => \wysi_counter|counter_cell[1]~COUT\);

\wysi_counter|counter_cell[2]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[2]\ = DFFE(!i16 & \wysi_counter|sload_path[2]\ $ (\wraddress[0]~31\ & !\wysi_counter|counter_cell[1]~COUT\), GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[2]~COUT\ = CARRY(\wysi_counter|sload_path[2]\ & !\wysi_counter|counter_cell[1]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C60C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wraddress[0]~31\,
	datab => \wysi_counter|sload_path[2]\,
	cin => \wysi_counter|counter_cell[1]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => i16,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[2]\,
	cout => \wysi_counter|counter_cell[2]~COUT\);

\wysi_counter|counter_cell[3]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[3]\ = DFFE(!i16 & \wysi_counter|sload_path[3]\ $ (\wraddress[0]~31\ & \wysi_counter|counter_cell[2]~COUT\), GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[3]~COUT\ = CARRY(!\wysi_counter|counter_cell[2]~COUT\ # !\wysi_counter|sload_path[3]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wraddress[0]~31\,
	datab => \wysi_counter|sload_path[3]\,
	cin => \wysi_counter|counter_cell[2]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => i16,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[3]\,
	cout => \wysi_counter|counter_cell[3]~COUT\);

\wysi_counter|counter_cell[4]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[4]\ = DFFE(!i16 & \wysi_counter|sload_path[4]\ $ (\wraddress[0]~31\ & !\wysi_counter|counter_cell[3]~COUT\), GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[4]~COUT\ = CARRY(\wysi_counter|sload_path[4]\ & !\wysi_counter|counter_cell[3]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C60C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wraddress[0]~31\,
	datab => \wysi_counter|sload_path[4]\,
	cin => \wysi_counter|counter_cell[3]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => i16,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[4]\,
	cout => \wysi_counter|counter_cell[4]~COUT\);

\wysi_counter|counter_cell[5]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[5]\ = DFFE(!i16 & \wysi_counter|sload_path[5]\ $ (\wraddress[0]~31\ & \wysi_counter|counter_cell[4]~COUT\), GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[5]~COUT\ = CARRY(!\wysi_counter|counter_cell[4]~COUT\ # !\wysi_counter|sload_path[5]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wraddress[0]~31\,
	datab => \wysi_counter|sload_path[5]\,
	cin => \wysi_counter|counter_cell[4]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => i16,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[5]\,
	cout => \wysi_counter|counter_cell[5]~COUT\);

\wysi_counter|counter_cell[6]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[6]\ = DFFE(!i16 & \wysi_counter|sload_path[6]\ $ (\wraddress[0]~31\ & !\wysi_counter|counter_cell[5]~COUT\), GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[6]~COUT\ = CARRY(\wysi_counter|sload_path[6]\ & !\wysi_counter|counter_cell[5]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C60C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wraddress[0]~31\,
	datab => \wysi_counter|sload_path[6]\,
	cin => \wysi_counter|counter_cell[5]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => i16,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[6]\,
	cout => \wysi_counter|counter_cell[6]~COUT\);

\wysi_counter|counter_cell[7]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[7]\ = DFFE(!i16 & \wysi_counter|sload_path[7]\ $ (\wraddress[0]~31\ & \wysi_counter|counter_cell[6]~COUT\), GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[7]~COUT\ = CARRY(!\wysi_counter|counter_cell[6]~COUT\ # !\wysi_counter|sload_path[7]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wraddress[0]~31\,
	datab => \wysi_counter|sload_path[7]\,
	cin => \wysi_counter|counter_cell[6]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => i16,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[7]\,
	cout => \wysi_counter|counter_cell[7]~COUT\);

\wysi_counter|counter_cell[8]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[8]\ = DFFE(!i16 & \wysi_counter|sload_path[8]\ $ (\wraddress[0]~31\ & !\wysi_counter|counter_cell[7]~COUT\), GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[8]~COUT\ = CARRY(\wysi_counter|sload_path[8]\ & !\wysi_counter|counter_cell[7]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C60C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wraddress[0]~31\,
	datab => \wysi_counter|sload_path[8]\,
	cin => \wysi_counter|counter_cell[7]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => i16,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[8]\,
	cout => \wysi_counter|counter_cell[8]~COUT\);

\wysi_counter|counter_cell[9]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[9]\ = DFFE(!i16 & \wysi_counter|sload_path[9]\ $ (\wraddress[0]~31\ & \wysi_counter|counter_cell[8]~COUT\), GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5FA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wraddress[0]~31\,
	datad => \wysi_counter|sload_path[9]\,
	cin => \wysi_counter|counter_cell[8]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => i16,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[9]\);

\i18~I\ : apex20ke_lcell 
-- Equation(s):
-- i18 = command_0_local_16 # disc & command_0_local_17

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EEAA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_0_local_16,
	datab => disc,
	datad => ww_enable_disc,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i18);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	fe_testpulse IS
    PORT (
	CLK : IN std_logic;
	RST : IN std_logic;
	command_1_local_16 : IN std_logic;
	command_1_local_17 : IN std_logic;
	command_1_local_18 : IN std_logic;
	command_1_local_19 : IN std_logic;
	command_0_local_24 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	FE_TEST_PULSE : OUT std_logic
	);
END fe_testpulse;

ARCHITECTURE structure OF fe_testpulse IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_command_1_local_16 : std_logic;
SIGNAL ww_command_1_local_17 : std_logic;
SIGNAL ww_command_1_local_18 : std_logic;
SIGNAL ww_command_1_local_19 : std_logic;
SIGNAL ww_command_0_local_24 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_FE_TEST_PULSE : std_logic;
SIGNAL \wysi_counter|counter_cell[0]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[1]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[1]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[2]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[2]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[3]\ : std_logic;
SIGNAL \wysi_counter|sload_path[0]\ : std_logic;
SIGNAL \i~19\ : std_logic;
SIGNAL \i~20\ : std_logic;
SIGNAL \wysi_counter|counter_cell[3]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[4]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[4]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[5]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[5]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[6]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[6]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[7]\ : std_logic;
SIGNAL \i~21\ : std_logic;
SIGNAL \i~22\ : std_logic;
SIGNAL \wysi_counter|counter_cell[7]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[8]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[8]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[9]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[9]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[10]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[10]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[11]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[11]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[12]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[12]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[13]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[13]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[14]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[14]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[15]\ : std_logic;
SIGNAL \i~17\ : std_logic;
SIGNAL \i~18\ : std_logic;
SIGNAL \i~15\ : std_logic;
SIGNAL \i~16\ : std_logic;
SIGNAL \i~13\ : std_logic;
SIGNAL cnt_o : std_logic;
SIGNAL cnt_oo : std_logic;
SIGNAL tick_old : std_logic;
SIGNAL i4 : std_logic;
SIGNAL tick_old0 : std_logic;
SIGNAL tick_old1 : std_logic;

BEGIN

ww_CLK <= CLK;
ww_RST <= RST;
ww_command_1_local_16 <= command_1_local_16;
ww_command_1_local_17 <= command_1_local_17;
ww_command_1_local_18 <= command_1_local_18;
ww_command_1_local_19 <= command_1_local_19;
ww_command_0_local_24 <= command_0_local_24;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
FE_TEST_PULSE <= ww_FE_TEST_PULSE;

\FE_TEST_PULSE~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- FE_TEST_PULSE = DFFE(tick_old # i4 # tick_old1 # tick_old0, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => tick_old,
	datab => i4,
	datac => tick_old1,
	datad => tick_old0,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_FE_TEST_PULSE);

\wysi_counter|counter_cell[0]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[0]\ = DFFE(!\wysi_counter|sload_path[0]\, GLOBAL(outclock0), !GLOBAL(RST), , command_0_local_24)
-- \wysi_counter|counter_cell[0]~COUT\ = CARRY(\wysi_counter|sload_path[0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "qfbk_counter",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	clk => ww_CLK,
	aclr => ww_RST,
	ena => ww_command_0_local_24,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[0]\,
	cout => \wysi_counter|counter_cell[0]~COUT\);

\wysi_counter|counter_cell[1]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[1]\ = DFFE(\wysi_counter|sload_path[1]\ $ \wysi_counter|counter_cell[0]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , command_0_local_24)
-- \wysi_counter|counter_cell[1]~COUT\ = CARRY(!\wysi_counter|counter_cell[0]~COUT\ # !\wysi_counter|sload_path[1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[1]\,
	cin => \wysi_counter|counter_cell[0]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => ww_command_0_local_24,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[1]\,
	cout => \wysi_counter|counter_cell[1]~COUT\);

\wysi_counter|counter_cell[2]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[2]\ = DFFE(\wysi_counter|sload_path[2]\ $ !\wysi_counter|counter_cell[1]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , command_0_local_24)
-- \wysi_counter|counter_cell[2]~COUT\ = CARRY(\wysi_counter|sload_path[2]\ & !\wysi_counter|counter_cell[1]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[2]\,
	cin => \wysi_counter|counter_cell[1]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => ww_command_0_local_24,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[2]\,
	cout => \wysi_counter|counter_cell[2]~COUT\);

\wysi_counter|counter_cell[3]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[3]\ = DFFE(\wysi_counter|sload_path[3]\ $ \wysi_counter|counter_cell[2]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , command_0_local_24)
-- \wysi_counter|counter_cell[3]~COUT\ = CARRY(!\wysi_counter|counter_cell[2]~COUT\ # !\wysi_counter|sload_path[3]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[3]\,
	cin => \wysi_counter|counter_cell[2]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => ww_command_0_local_24,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[3]\,
	cout => \wysi_counter|counter_cell[3]~COUT\);

\i~19_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~19\ = command_1_local_16 & (\wysi_counter|sload_path[1]\ # command_1_local_17) # !command_1_local_16 & \wysi_counter|sload_path[0]\ & !command_1_local_17

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CCB8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[1]\,
	datab => ww_command_1_local_16,
	datac => \wysi_counter|sload_path[0]\,
	datad => ww_command_1_local_17,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~19\);

\i~20_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~20\ = \i~19\ & (\wysi_counter|sload_path[3]\ # !command_1_local_17) # !\i~19\ & command_1_local_17 & \wysi_counter|sload_path[2]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BBC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[3]\,
	datab => ww_command_1_local_17,
	datac => \wysi_counter|sload_path[2]\,
	datad => \i~19\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~20\);

\wysi_counter|counter_cell[4]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[4]\ = DFFE(\wysi_counter|sload_path[4]\ $ !\wysi_counter|counter_cell[3]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , command_0_local_24)
-- \wysi_counter|counter_cell[4]~COUT\ = CARRY(\wysi_counter|sload_path[4]\ & !\wysi_counter|counter_cell[3]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[4]\,
	cin => \wysi_counter|counter_cell[3]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => ww_command_0_local_24,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[4]\,
	cout => \wysi_counter|counter_cell[4]~COUT\);

\wysi_counter|counter_cell[5]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[5]\ = DFFE(\wysi_counter|sload_path[5]\ $ \wysi_counter|counter_cell[4]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , command_0_local_24)
-- \wysi_counter|counter_cell[5]~COUT\ = CARRY(!\wysi_counter|counter_cell[4]~COUT\ # !\wysi_counter|sload_path[5]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[5]\,
	cin => \wysi_counter|counter_cell[4]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => ww_command_0_local_24,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[5]\,
	cout => \wysi_counter|counter_cell[5]~COUT\);

\wysi_counter|counter_cell[6]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[6]\ = DFFE(\wysi_counter|sload_path[6]\ $ !\wysi_counter|counter_cell[5]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , command_0_local_24)
-- \wysi_counter|counter_cell[6]~COUT\ = CARRY(\wysi_counter|sload_path[6]\ & !\wysi_counter|counter_cell[5]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[6]\,
	cin => \wysi_counter|counter_cell[5]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => ww_command_0_local_24,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[6]\,
	cout => \wysi_counter|counter_cell[6]~COUT\);

\wysi_counter|counter_cell[7]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[7]\ = DFFE(\wysi_counter|sload_path[7]\ $ \wysi_counter|counter_cell[6]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , command_0_local_24)
-- \wysi_counter|counter_cell[7]~COUT\ = CARRY(!\wysi_counter|counter_cell[6]~COUT\ # !\wysi_counter|sload_path[7]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[7]\,
	cin => \wysi_counter|counter_cell[6]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => ww_command_0_local_24,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[7]\,
	cout => \wysi_counter|counter_cell[7]~COUT\);

\i~21_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~21\ = command_1_local_17 & (\wysi_counter|sload_path[6]\ # command_1_local_16) # !command_1_local_17 & !command_1_local_16 & \wysi_counter|sload_path[4]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EE30",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[6]\,
	datab => ww_command_1_local_16,
	datac => \wysi_counter|sload_path[4]\,
	datad => ww_command_1_local_17,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~21\);

\i~22_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~22\ = \i~21\ & (\wysi_counter|sload_path[7]\ # !command_1_local_16) # !\i~21\ & command_1_local_16 & \wysi_counter|sload_path[5]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BBC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[7]\,
	datab => ww_command_1_local_16,
	datac => \wysi_counter|sload_path[5]\,
	datad => \i~21\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~22\);

\wysi_counter|counter_cell[8]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[8]\ = DFFE(\wysi_counter|sload_path[8]\ $ !\wysi_counter|counter_cell[7]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , command_0_local_24)
-- \wysi_counter|counter_cell[8]~COUT\ = CARRY(\wysi_counter|sload_path[8]\ & !\wysi_counter|counter_cell[7]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[8]\,
	cin => \wysi_counter|counter_cell[7]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => ww_command_0_local_24,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[8]\,
	cout => \wysi_counter|counter_cell[8]~COUT\);

\wysi_counter|counter_cell[9]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[9]\ = DFFE(\wysi_counter|sload_path[9]\ $ \wysi_counter|counter_cell[8]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , command_0_local_24)
-- \wysi_counter|counter_cell[9]~COUT\ = CARRY(!\wysi_counter|counter_cell[8]~COUT\ # !\wysi_counter|sload_path[9]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[9]\,
	cin => \wysi_counter|counter_cell[8]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => ww_command_0_local_24,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[9]\,
	cout => \wysi_counter|counter_cell[9]~COUT\);

\wysi_counter|counter_cell[10]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[10]\ = DFFE(\wysi_counter|sload_path[10]\ $ !\wysi_counter|counter_cell[9]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , command_0_local_24)
-- \wysi_counter|counter_cell[10]~COUT\ = CARRY(\wysi_counter|sload_path[10]\ & !\wysi_counter|counter_cell[9]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[10]\,
	cin => \wysi_counter|counter_cell[9]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => ww_command_0_local_24,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[10]\,
	cout => \wysi_counter|counter_cell[10]~COUT\);

\wysi_counter|counter_cell[11]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[11]\ = DFFE(\wysi_counter|sload_path[11]\ $ \wysi_counter|counter_cell[10]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , command_0_local_24)
-- \wysi_counter|counter_cell[11]~COUT\ = CARRY(!\wysi_counter|counter_cell[10]~COUT\ # !\wysi_counter|sload_path[11]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[11]\,
	cin => \wysi_counter|counter_cell[10]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => ww_command_0_local_24,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[11]\,
	cout => \wysi_counter|counter_cell[11]~COUT\);

\wysi_counter|counter_cell[12]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[12]\ = DFFE(\wysi_counter|sload_path[12]\ $ !\wysi_counter|counter_cell[11]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , command_0_local_24)
-- \wysi_counter|counter_cell[12]~COUT\ = CARRY(\wysi_counter|sload_path[12]\ & !\wysi_counter|counter_cell[11]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[12]\,
	cin => \wysi_counter|counter_cell[11]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => ww_command_0_local_24,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[12]\,
	cout => \wysi_counter|counter_cell[12]~COUT\);

\wysi_counter|counter_cell[13]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[13]\ = DFFE(\wysi_counter|sload_path[13]\ $ \wysi_counter|counter_cell[12]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , command_0_local_24)
-- \wysi_counter|counter_cell[13]~COUT\ = CARRY(!\wysi_counter|counter_cell[12]~COUT\ # !\wysi_counter|sload_path[13]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[13]\,
	cin => \wysi_counter|counter_cell[12]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => ww_command_0_local_24,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[13]\,
	cout => \wysi_counter|counter_cell[13]~COUT\);

\wysi_counter|counter_cell[14]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[14]\ = DFFE(\wysi_counter|sload_path[14]\ $ !\wysi_counter|counter_cell[13]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , command_0_local_24)
-- \wysi_counter|counter_cell[14]~COUT\ = CARRY(\wysi_counter|sload_path[14]\ & !\wysi_counter|counter_cell[13]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[14]\,
	cin => \wysi_counter|counter_cell[13]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => ww_command_0_local_24,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[14]\,
	cout => \wysi_counter|counter_cell[14]~COUT\);

\wysi_counter|counter_cell[15]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[15]\ = DFFE(\wysi_counter|sload_path[15]\ $ \wysi_counter|counter_cell[14]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , command_0_local_24)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[15]\,
	cin => \wysi_counter|counter_cell[14]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => ww_command_0_local_24,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[15]\);

\i~17_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~17\ = command_1_local_17 & (command_1_local_16 # \wysi_counter|sload_path[14]\) # !command_1_local_17 & !command_1_local_16 & \wysi_counter|sload_path[12]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DC98",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_1_local_16,
	datab => ww_command_1_local_17,
	datac => \wysi_counter|sload_path[12]\,
	datad => \wysi_counter|sload_path[14]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~17\);

\i~18_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~18\ = \i~17\ & (\wysi_counter|sload_path[15]\ # !command_1_local_16) # !\i~17\ & command_1_local_16 & \wysi_counter|sload_path[13]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DAD0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_1_local_16,
	datab => \wysi_counter|sload_path[15]\,
	datac => \i~17\,
	datad => \wysi_counter|sload_path[13]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~18\);

\i~15_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~15\ = command_1_local_16 & (\wysi_counter|sload_path[9]\ # command_1_local_17) # !command_1_local_16 & \wysi_counter|sload_path[8]\ & !command_1_local_17

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CCB8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[9]\,
	datab => ww_command_1_local_16,
	datac => \wysi_counter|sload_path[8]\,
	datad => ww_command_1_local_17,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~15\);

\i~16_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~16\ = \i~15\ & (\wysi_counter|sload_path[11]\ # !command_1_local_17) # !\i~15\ & command_1_local_17 & \wysi_counter|sload_path[10]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BBC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[11]\,
	datab => ww_command_1_local_17,
	datac => \wysi_counter|sload_path[10]\,
	datad => \i~15\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~16\);

\i~13_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~13\ = command_1_local_18 & (command_1_local_19 # \i~18\) # !command_1_local_18 & !command_1_local_19 & \i~16\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B9A8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_1_local_18,
	datab => ww_command_1_local_19,
	datac => \i~18\,
	datad => \i~16\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~13\);

\cnt_o~I\ : apex20ke_lcell 
-- Equation(s):
-- cnt_o = DFFE(\i~13\ & (\i~22\ # !command_1_local_19) # !\i~13\ & \i~20\ & command_1_local_19, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~20\,
	datab => \i~22\,
	datac => ww_command_1_local_19,
	datad => \i~13\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => cnt_o);

\cnt_oo~I\ : apex20ke_lcell 
-- Equation(s):
-- cnt_oo = DFFE(cnt_o, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => cnt_o,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => cnt_oo);

\tick_old~I\ : apex20ke_lcell 
-- Equation(s):
-- tick_old = DFFE(cnt_o $ cnt_oo, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => cnt_o,
	datad => cnt_oo,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => tick_old);

\i4~I\ : apex20ke_lcell 
-- Equation(s):
-- i4 = cnt_o $ cnt_oo

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => cnt_o,
	datad => cnt_oo,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i4);

\tick_old0~I\ : apex20ke_lcell 
-- Equation(s):
-- tick_old0 = DFFE(tick_old, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => tick_old,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => tick_old0);

\tick_old1~I\ : apex20ke_lcell 
-- Equation(s):
-- tick_old1 = DFFE(tick_old0, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => tick_old0,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => tick_old1);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	single_led IS
    PORT (
	CLK : IN std_logic;
	RST : IN std_logic;
	command_0_local_26 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	SingleLED_TRIGGER : OUT std_logic;
	LEDdelay_0 : OUT std_logic
	);
END single_led;

ARCHITECTURE structure OF single_led IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_command_0_local_26 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_SingleLED_TRIGGER : std_logic;
SIGNAL ww_LEDdelay_0 : std_logic;
SIGNAL \wysi_counter|sload_path[0]\ : std_logic;
SIGNAL \LEDdelay[1]\ : std_logic;
SIGNAL \LEDdelay[2]\ : std_logic;
SIGNAL \LEDdelay[3]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[0]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[1]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[1]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[2]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[2]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[3]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[3]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[4]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[4]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[5]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[5]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[6]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[6]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[7]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[7]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[8]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[8]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[9]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[9]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[10]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[10]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[11]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[11]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[12]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[12]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[13]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[13]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[14]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[14]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[15]\ : std_logic;
SIGNAL \cnt_old[15]\ : std_logic;
SIGNAL tick : std_logic;
SIGNAL ALT_NOT_ww_command_0_local_26 : std_logic;

BEGIN

ww_CLK <= CLK;
ww_RST <= RST;
ww_command_0_local_26 <= command_0_local_26;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
SingleLED_TRIGGER <= ww_SingleLED_TRIGGER;
LEDdelay_0 <= ww_LEDdelay_0;
ALT_NOT_ww_command_0_local_26 <= NOT ww_command_0_local_26;

\SingleLED_TRIGGER~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- SingleLED_TRIGGER = DFFE(\LEDdelay[3]\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \LEDdelay[3]\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SingleLED_TRIGGER);

\LEDdelay[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- LEDdelay_0 = DFFE(tick # \cnt_old[15]\ $ \wysi_counter|sload_path[15]\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3FC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cnt_old[15]\,
	datac => tick,
	datad => \wysi_counter|sload_path[15]\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_LEDdelay_0);

\LEDdelay[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \LEDdelay[1]\ = DFFE(LEDdelay_0, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_LEDdelay_0,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \LEDdelay[1]\);

\LEDdelay[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \LEDdelay[2]\ = DFFE(\LEDdelay[1]\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \LEDdelay[1]\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \LEDdelay[2]\);

\LEDdelay[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \LEDdelay[3]\ = DFFE(\LEDdelay[2]\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \LEDdelay[2]\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \LEDdelay[3]\);

\wysi_counter|counter_cell[0]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|counter_cell[0]~COUT\ = CARRY()

-- pragma translate_off
GENERIC MAP (
	operation_mode => "qfbk_counter",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => ALT_NOT_ww_command_0_local_26,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \wysi_counter|counter_cell[0]~COUT\);

\wysi_counter|counter_cell[1]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[1]\ = DFFE(command_0_local_26 & \wysi_counter|sload_path[1]\ $ \wysi_counter|counter_cell[0]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[1]~COUT\ = CARRY(!\wysi_counter|counter_cell[0]~COUT\ # !\wysi_counter|sload_path[1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[1]\,
	cin => \wysi_counter|counter_cell[0]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => ALT_NOT_ww_command_0_local_26,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[1]\,
	cout => \wysi_counter|counter_cell[1]~COUT\);

\wysi_counter|counter_cell[2]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[2]\ = DFFE(command_0_local_26 & \wysi_counter|sload_path[2]\ $ !\wysi_counter|counter_cell[1]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[2]~COUT\ = CARRY(\wysi_counter|sload_path[2]\ & !\wysi_counter|counter_cell[1]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[2]\,
	cin => \wysi_counter|counter_cell[1]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => ALT_NOT_ww_command_0_local_26,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[2]\,
	cout => \wysi_counter|counter_cell[2]~COUT\);

\wysi_counter|counter_cell[3]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[3]\ = DFFE(command_0_local_26 & \wysi_counter|sload_path[3]\ $ \wysi_counter|counter_cell[2]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[3]~COUT\ = CARRY(!\wysi_counter|counter_cell[2]~COUT\ # !\wysi_counter|sload_path[3]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[3]\,
	cin => \wysi_counter|counter_cell[2]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => ALT_NOT_ww_command_0_local_26,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[3]\,
	cout => \wysi_counter|counter_cell[3]~COUT\);

\wysi_counter|counter_cell[4]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[4]\ = DFFE(command_0_local_26 & \wysi_counter|sload_path[4]\ $ !\wysi_counter|counter_cell[3]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[4]~COUT\ = CARRY(\wysi_counter|sload_path[4]\ & !\wysi_counter|counter_cell[3]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[4]\,
	cin => \wysi_counter|counter_cell[3]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => ALT_NOT_ww_command_0_local_26,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[4]\,
	cout => \wysi_counter|counter_cell[4]~COUT\);

\wysi_counter|counter_cell[5]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[5]\ = DFFE(command_0_local_26 & \wysi_counter|sload_path[5]\ $ \wysi_counter|counter_cell[4]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[5]~COUT\ = CARRY(!\wysi_counter|counter_cell[4]~COUT\ # !\wysi_counter|sload_path[5]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[5]\,
	cin => \wysi_counter|counter_cell[4]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => ALT_NOT_ww_command_0_local_26,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[5]\,
	cout => \wysi_counter|counter_cell[5]~COUT\);

\wysi_counter|counter_cell[6]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[6]\ = DFFE(command_0_local_26 & \wysi_counter|sload_path[6]\ $ !\wysi_counter|counter_cell[5]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[6]~COUT\ = CARRY(\wysi_counter|sload_path[6]\ & !\wysi_counter|counter_cell[5]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[6]\,
	cin => \wysi_counter|counter_cell[5]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => ALT_NOT_ww_command_0_local_26,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[6]\,
	cout => \wysi_counter|counter_cell[6]~COUT\);

\wysi_counter|counter_cell[7]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[7]\ = DFFE(command_0_local_26 & \wysi_counter|sload_path[7]\ $ \wysi_counter|counter_cell[6]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[7]~COUT\ = CARRY(!\wysi_counter|counter_cell[6]~COUT\ # !\wysi_counter|sload_path[7]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[7]\,
	cin => \wysi_counter|counter_cell[6]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => ALT_NOT_ww_command_0_local_26,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[7]\,
	cout => \wysi_counter|counter_cell[7]~COUT\);

\wysi_counter|counter_cell[8]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[8]\ = DFFE(command_0_local_26 & \wysi_counter|sload_path[8]\ $ !\wysi_counter|counter_cell[7]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[8]~COUT\ = CARRY(\wysi_counter|sload_path[8]\ & !\wysi_counter|counter_cell[7]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[8]\,
	cin => \wysi_counter|counter_cell[7]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => ALT_NOT_ww_command_0_local_26,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[8]\,
	cout => \wysi_counter|counter_cell[8]~COUT\);

\wysi_counter|counter_cell[9]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[9]\ = DFFE(command_0_local_26 & \wysi_counter|sload_path[9]\ $ \wysi_counter|counter_cell[8]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[9]~COUT\ = CARRY(!\wysi_counter|counter_cell[8]~COUT\ # !\wysi_counter|sload_path[9]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[9]\,
	cin => \wysi_counter|counter_cell[8]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => ALT_NOT_ww_command_0_local_26,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[9]\,
	cout => \wysi_counter|counter_cell[9]~COUT\);

\wysi_counter|counter_cell[10]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[10]\ = DFFE(command_0_local_26 & \wysi_counter|sload_path[10]\ $ !\wysi_counter|counter_cell[9]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[10]~COUT\ = CARRY(\wysi_counter|sload_path[10]\ & !\wysi_counter|counter_cell[9]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[10]\,
	cin => \wysi_counter|counter_cell[9]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => ALT_NOT_ww_command_0_local_26,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[10]\,
	cout => \wysi_counter|counter_cell[10]~COUT\);

\wysi_counter|counter_cell[11]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[11]\ = DFFE(command_0_local_26 & \wysi_counter|sload_path[11]\ $ \wysi_counter|counter_cell[10]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[11]~COUT\ = CARRY(!\wysi_counter|counter_cell[10]~COUT\ # !\wysi_counter|sload_path[11]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[11]\,
	cin => \wysi_counter|counter_cell[10]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => ALT_NOT_ww_command_0_local_26,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[11]\,
	cout => \wysi_counter|counter_cell[11]~COUT\);

\wysi_counter|counter_cell[12]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[12]\ = DFFE(command_0_local_26 & \wysi_counter|sload_path[12]\ $ !\wysi_counter|counter_cell[11]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[12]~COUT\ = CARRY(\wysi_counter|sload_path[12]\ & !\wysi_counter|counter_cell[11]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[12]\,
	cin => \wysi_counter|counter_cell[11]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => ALT_NOT_ww_command_0_local_26,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[12]\,
	cout => \wysi_counter|counter_cell[12]~COUT\);

\wysi_counter|counter_cell[13]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[13]\ = DFFE(command_0_local_26 & \wysi_counter|sload_path[13]\ $ \wysi_counter|counter_cell[12]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[13]~COUT\ = CARRY(!\wysi_counter|counter_cell[12]~COUT\ # !\wysi_counter|sload_path[13]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[13]\,
	cin => \wysi_counter|counter_cell[12]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => ALT_NOT_ww_command_0_local_26,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[13]\,
	cout => \wysi_counter|counter_cell[13]~COUT\);

\wysi_counter|counter_cell[14]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[14]\ = DFFE(command_0_local_26 & \wysi_counter|sload_path[14]\ $ !\wysi_counter|counter_cell[13]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[14]~COUT\ = CARRY(\wysi_counter|sload_path[14]\ & !\wysi_counter|counter_cell[13]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[14]\,
	cin => \wysi_counter|counter_cell[13]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => ALT_NOT_ww_command_0_local_26,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[14]\,
	cout => \wysi_counter|counter_cell[14]~COUT\);

\wysi_counter|counter_cell[15]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[15]\ = DFFE(command_0_local_26 & \wysi_counter|sload_path[15]\ $ \wysi_counter|counter_cell[14]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[15]\,
	cin => \wysi_counter|counter_cell[14]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => ALT_NOT_ww_command_0_local_26,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[15]\);

\cnt_old[15]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt_old[15]\ = DFFE(\wysi_counter|sload_path[15]\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[15]\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt_old[15]\);

\tick~I\ : apex20ke_lcell 
-- Equation(s):
-- tick = DFFE(\wysi_counter|sload_path[15]\ $ \cnt_old[15]\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "33CC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[15]\,
	datad => \cnt_old[15]\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => tick);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	coinc IS
    PORT (
	CLK : IN std_logic;
	RST : IN std_logic;
	coinc_latch : IN std_logic_vector(3 DOWNTO 0);
	command_2_local_0 : IN std_logic;
	command_2_local_1 : IN std_logic;
	command_2_local_8 : IN std_logic;
	command_2_local_9 : IN std_logic;
	command_2_local_10 : IN std_logic;
	command_2_local_11 : IN std_logic;
	COINC_DOWN_A : IN std_logic;
	COINC_DOWN_ABAR : IN std_logic;
	COINC_DOWN_B : IN std_logic;
	COINC_DOWN_BBAR : IN std_logic;
	COINC_UP_A : IN std_logic;
	COINC_UP_ABAR : IN std_logic;
	COINC_UP_B : IN std_logic;
	COINC_UP_BBAR : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	COINCIDENCE_OUT_DOWN : OUT std_logic;
	i563 : OUT std_logic;
	COINCIDENCE_OUT_UP : OUT std_logic;
	i565 : OUT std_logic;
	FF_down_a : OUT std_logic;
	FF_down_abar : OUT std_logic;
	FF_down_b : OUT std_logic;
	FF_down_bbar : OUT std_logic;
	FF_up_a : OUT std_logic;
	FF_up_abar : OUT std_logic;
	FF_up_b : OUT std_logic;
	FF_up_bbar : OUT std_logic
	);
END coinc;

ARCHITECTURE structure OF coinc IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_coinc_latch : std_logic_vector(3 DOWNTO 0);
SIGNAL ww_command_2_local_0 : std_logic;
SIGNAL ww_command_2_local_1 : std_logic;
SIGNAL ww_command_2_local_8 : std_logic;
SIGNAL ww_command_2_local_9 : std_logic;
SIGNAL ww_command_2_local_10 : std_logic;
SIGNAL ww_command_2_local_11 : std_logic;
SIGNAL ww_COINC_DOWN_A : std_logic;
SIGNAL ww_COINC_DOWN_ABAR : std_logic;
SIGNAL ww_COINC_DOWN_B : std_logic;
SIGNAL ww_COINC_DOWN_BBAR : std_logic;
SIGNAL ww_COINC_UP_A : std_logic;
SIGNAL ww_COINC_UP_ABAR : std_logic;
SIGNAL ww_COINC_UP_B : std_logic;
SIGNAL ww_COINC_UP_BBAR : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_COINCIDENCE_OUT_DOWN : std_logic;
SIGNAL ww_i563 : std_logic;
SIGNAL ww_COINCIDENCE_OUT_UP : std_logic;
SIGNAL ww_i565 : std_logic;
SIGNAL ww_FF_down_a : std_logic;
SIGNAL ww_FF_down_abar : std_logic;
SIGNAL ww_FF_down_b : std_logic;
SIGNAL ww_FF_down_bbar : std_logic;
SIGNAL ww_FF_up_a : std_logic;
SIGNAL ww_FF_up_abar : std_logic;
SIGNAL ww_FF_up_b : std_logic;
SIGNAL ww_FF_up_bbar : std_logic;
SIGNAL \coinc_down_high_delay[0]\ : std_logic;
SIGNAL i48 : std_logic;
SIGNAL \i~1910\ : std_logic;
SIGNAL \last_up_pol~24\ : std_logic;
SIGNAL \state~20\ : std_logic;
SIGNAL \i~401\ : std_logic;
SIGNAL \cnt[0]\ : std_logic;
SIGNAL \i~401COUT\ : std_logic;
SIGNAL \i~402\ : std_logic;
SIGNAL \cnt[1]\ : std_logic;
SIGNAL \i~402COUT\ : std_logic;
SIGNAL \i~403\ : std_logic;
SIGNAL \cnt[2]\ : std_logic;
SIGNAL \i~403COUT\ : std_logic;
SIGNAL \i~404\ : std_logic;
SIGNAL \cnt[3]\ : std_logic;
SIGNAL \i~404COUT\ : std_logic;
SIGNAL \i~405\ : std_logic;
SIGNAL \cnt[4]\ : std_logic;
SIGNAL \i~405COUT\ : std_logic;
SIGNAL \i~406\ : std_logic;
SIGNAL \cnt[5]\ : std_logic;
SIGNAL \i~406COUT\ : std_logic;
SIGNAL \i~407\ : std_logic;
SIGNAL \cnt[6]\ : std_logic;
SIGNAL \i~407COUT\ : std_logic;
SIGNAL \i~408\ : std_logic;
SIGNAL \cnt[7]\ : std_logic;
SIGNAL \i~1868\ : std_logic;
SIGNAL \i~1869\ : std_logic;
SIGNAL \i~408COUT\ : std_logic;
SIGNAL \i~409\ : std_logic;
SIGNAL \cnt[8]\ : std_logic;
SIGNAL \i~409COUT\ : std_logic;
SIGNAL \i~410\ : std_logic;
SIGNAL \cnt[9]\ : std_logic;
SIGNAL \i~410COUT\ : std_logic;
SIGNAL \i~411\ : std_logic;
SIGNAL \cnt[10]\ : std_logic;
SIGNAL \i~411COUT\ : std_logic;
SIGNAL \i~412\ : std_logic;
SIGNAL \cnt[11]\ : std_logic;
SIGNAL \i~1867\ : std_logic;
SIGNAL \i~412COUT\ : std_logic;
SIGNAL \i~413\ : std_logic;
SIGNAL \cnt[12]\ : std_logic;
SIGNAL \i~413COUT\ : std_logic;
SIGNAL \i~414\ : std_logic;
SIGNAL \cnt[13]\ : std_logic;
SIGNAL \i~414COUT\ : std_logic;
SIGNAL \i~415\ : std_logic;
SIGNAL \cnt[14]\ : std_logic;
SIGNAL \i~415COUT\ : std_logic;
SIGNAL \i~416\ : std_logic;
SIGNAL \cnt[15]\ : std_logic;
SIGNAL \i~1866\ : std_logic;
SIGNAL \i~1870\ : std_logic;
SIGNAL \i~416COUT\ : std_logic;
SIGNAL \i~417\ : std_logic;
SIGNAL \cnt[16]\ : std_logic;
SIGNAL \i~417COUT\ : std_logic;
SIGNAL \i~418\ : std_logic;
SIGNAL \cnt[17]\ : std_logic;
SIGNAL \i~418COUT\ : std_logic;
SIGNAL \i~419\ : std_logic;
SIGNAL \cnt[18]\ : std_logic;
SIGNAL \i~419COUT\ : std_logic;
SIGNAL \i~420\ : std_logic;
SIGNAL \cnt[19]\ : std_logic;
SIGNAL \i~420COUT\ : std_logic;
SIGNAL \i~421\ : std_logic;
SIGNAL \cnt[20]\ : std_logic;
SIGNAL \i~421COUT\ : std_logic;
SIGNAL \i~422\ : std_logic;
SIGNAL \cnt[21]\ : std_logic;
SIGNAL \i~422COUT\ : std_logic;
SIGNAL \i~423\ : std_logic;
SIGNAL \cnt[22]\ : std_logic;
SIGNAL \i~423COUT\ : std_logic;
SIGNAL \i~424\ : std_logic;
SIGNAL \cnt[23]\ : std_logic;
SIGNAL \i~1863\ : std_logic;
SIGNAL \i~1864\ : std_logic;
SIGNAL \i~424COUT\ : std_logic;
SIGNAL \i~425\ : std_logic;
SIGNAL \cnt[24]\ : std_logic;
SIGNAL \i~425COUT\ : std_logic;
SIGNAL \i~426\ : std_logic;
SIGNAL \cnt[25]\ : std_logic;
SIGNAL \i~426COUT\ : std_logic;
SIGNAL \i~427\ : std_logic;
SIGNAL \cnt[26]\ : std_logic;
SIGNAL \i~427COUT\ : std_logic;
SIGNAL \i~428\ : std_logic;
SIGNAL \cnt[27]\ : std_logic;
SIGNAL \i~1862\ : std_logic;
SIGNAL \i~428COUT\ : std_logic;
SIGNAL \i~429\ : std_logic;
SIGNAL \cnt[28]\ : std_logic;
SIGNAL \i~429COUT\ : std_logic;
SIGNAL \i~430\ : std_logic;
SIGNAL \cnt[29]\ : std_logic;
SIGNAL \i~430COUT\ : std_logic;
SIGNAL \i~431\ : std_logic;
SIGNAL \cnt[30]\ : std_logic;
SIGNAL \i~431COUT\ : std_logic;
SIGNAL \i~432\ : std_logic;
SIGNAL \cnt[31]\ : std_logic;
SIGNAL \i~1861\ : std_logic;
SIGNAL \i~1865\ : std_logic;
SIGNAL \i~0\ : std_logic;
SIGNAL \state~488\ : std_logic;
SIGNAL \state~21\ : std_logic;
SIGNAL \i~1872\ : std_logic;
SIGNAL \i~1871\ : std_logic;
SIGNAL \i490~159\ : std_logic;
SIGNAL \i~369\ : std_logic;
SIGNAL \wait_cnt[30]~0\ : std_logic;
SIGNAL \wait_cnt[0]\ : std_logic;
SIGNAL \i~369COUT\ : std_logic;
SIGNAL \i~370\ : std_logic;
SIGNAL \wait_cnt[1]\ : std_logic;
SIGNAL \i~370COUT\ : std_logic;
SIGNAL \i~371\ : std_logic;
SIGNAL \i~354\ : std_logic;
SIGNAL \i~1908\ : std_logic;
SIGNAL \wait_cnt[2]\ : std_logic;
SIGNAL \i~371COUT\ : std_logic;
SIGNAL \i~372\ : std_logic;
SIGNAL \i~1897\ : std_logic;
SIGNAL \wait_cnt[3]\ : std_logic;
SIGNAL \i~372COUT\ : std_logic;
SIGNAL \i~373COUT\ : std_logic;
SIGNAL \i~374\ : std_logic;
SIGNAL \i~1901\ : std_logic;
SIGNAL \wait_cnt[5]\ : std_logic;
SIGNAL \i~374COUT\ : std_logic;
SIGNAL \i~375\ : std_logic;
SIGNAL \i~1903\ : std_logic;
SIGNAL \wait_cnt[6]\ : std_logic;
SIGNAL \i~375COUT\ : std_logic;
SIGNAL \i~376\ : std_logic;
SIGNAL \wait_cnt[7]\ : std_logic;
SIGNAL \i~376COUT\ : std_logic;
SIGNAL \i~377\ : std_logic;
SIGNAL \wait_cnt[8]\ : std_logic;
SIGNAL \i~377COUT\ : std_logic;
SIGNAL \i~378\ : std_logic;
SIGNAL \wait_cnt[9]\ : std_logic;
SIGNAL \i~378COUT\ : std_logic;
SIGNAL \i~379\ : std_logic;
SIGNAL \wait_cnt[10]\ : std_logic;
SIGNAL \i~379COUT\ : std_logic;
SIGNAL \i~380\ : std_logic;
SIGNAL \wait_cnt[11]\ : std_logic;
SIGNAL \i~380COUT\ : std_logic;
SIGNAL \i~381\ : std_logic;
SIGNAL \wait_cnt[12]\ : std_logic;
SIGNAL \i~381COUT\ : std_logic;
SIGNAL \i~382\ : std_logic;
SIGNAL \wait_cnt[13]\ : std_logic;
SIGNAL \i~382COUT\ : std_logic;
SIGNAL \i~383\ : std_logic;
SIGNAL \wait_cnt[14]\ : std_logic;
SIGNAL \i~383COUT\ : std_logic;
SIGNAL \i~384\ : std_logic;
SIGNAL \wait_cnt[15]\ : std_logic;
SIGNAL \i~384COUT\ : std_logic;
SIGNAL \i~385\ : std_logic;
SIGNAL \wait_cnt[16]\ : std_logic;
SIGNAL \i~385COUT\ : std_logic;
SIGNAL \i~386\ : std_logic;
SIGNAL \wait_cnt[17]\ : std_logic;
SIGNAL \i~386COUT\ : std_logic;
SIGNAL \i~387\ : std_logic;
SIGNAL \wait_cnt[18]\ : std_logic;
SIGNAL \i~387COUT\ : std_logic;
SIGNAL \i~388\ : std_logic;
SIGNAL \wait_cnt[19]\ : std_logic;
SIGNAL \i~388COUT\ : std_logic;
SIGNAL \i~389\ : std_logic;
SIGNAL \wait_cnt[20]\ : std_logic;
SIGNAL \i~389COUT\ : std_logic;
SIGNAL \i~390\ : std_logic;
SIGNAL \wait_cnt[21]\ : std_logic;
SIGNAL \i~390COUT\ : std_logic;
SIGNAL \i~391\ : std_logic;
SIGNAL \wait_cnt[22]\ : std_logic;
SIGNAL \i~391COUT\ : std_logic;
SIGNAL \i~392\ : std_logic;
SIGNAL \wait_cnt[23]\ : std_logic;
SIGNAL \i~392COUT\ : std_logic;
SIGNAL \i~393\ : std_logic;
SIGNAL \wait_cnt[24]\ : std_logic;
SIGNAL \i~393COUT\ : std_logic;
SIGNAL \i~394\ : std_logic;
SIGNAL \wait_cnt[25]\ : std_logic;
SIGNAL \i~394COUT\ : std_logic;
SIGNAL \i~395\ : std_logic;
SIGNAL \wait_cnt[26]\ : std_logic;
SIGNAL \i~1852\ : std_logic;
SIGNAL \i~1854\ : std_logic;
SIGNAL \i~1853\ : std_logic;
SIGNAL \i~395COUT\ : std_logic;
SIGNAL \i~396\ : std_logic;
SIGNAL \wait_cnt[27]\ : std_logic;
SIGNAL \i~396COUT\ : std_logic;
SIGNAL \i~397\ : std_logic;
SIGNAL \wait_cnt[28]\ : std_logic;
SIGNAL \i~397COUT\ : std_logic;
SIGNAL \i~398\ : std_logic;
SIGNAL \wait_cnt[29]\ : std_logic;
SIGNAL \i~398COUT\ : std_logic;
SIGNAL \i~399\ : std_logic;
SIGNAL \wait_cnt[30]\ : std_logic;
SIGNAL \i~1851\ : std_logic;
SIGNAL \i~1855\ : std_logic;
SIGNAL \i~373\ : std_logic;
SIGNAL \i~1899\ : std_logic;
SIGNAL \wait_cnt[4]\ : std_logic;
SIGNAL \i~1858\ : std_logic;
SIGNAL \i~1856\ : std_logic;
SIGNAL \i~399COUT\ : std_logic;
SIGNAL \i~400\ : std_logic;
SIGNAL \wait_cnt[31]\ : std_logic;
SIGNAL \i~1859\ : std_logic;
SIGNAL \i~1857\ : std_logic;
SIGNAL \i~1860\ : std_logic;
SIGNAL \i~2\ : std_logic;
SIGNAL \state~22\ : std_logic;
SIGNAL last_down : std_logic;
SIGNAL \i52~0\ : std_logic;
SIGNAL \last_down_pol~0\ : std_logic;
SIGNAL last_down_pol : std_logic;
SIGNAL \i489~117\ : std_logic;
SIGNAL \coinc_down_low_delay[0]\ : std_logic;
SIGNAL \i490~158\ : std_logic;
SIGNAL \last_up_pol~0\ : std_logic;
SIGNAL last_up_pol : std_logic;
SIGNAL \i491~119\ : std_logic;
SIGNAL \i491~118\ : std_logic;
SIGNAL \coinc_up_high_delay[0]\ : std_logic;
SIGNAL \i491~117\ : std_logic;
SIGNAL \coinc_up_low_delay[0]\ : std_logic;
SIGNAL \i492~157\ : std_logic;
SIGNAL ALT_NOT_ww_RST : std_logic;
SIGNAL ALT_NOT_ww_coinc_latch : std_logic_vector(1 DOWNTO 0);
SIGNAL ALT_NOT_ww_COINC_DOWN_ABAR : std_logic;
SIGNAL ALT_NOT_ww_COINC_DOWN_BBAR : std_logic;
SIGNAL ALT_NOT_ww_COINC_UP_ABAR : std_logic;
SIGNAL ALT_NOT_ww_COINC_UP_BBAR : std_logic;

BEGIN

ww_CLK <= CLK;
ww_RST <= RST;
ww_coinc_latch <= coinc_latch;
ww_command_2_local_0 <= command_2_local_0;
ww_command_2_local_1 <= command_2_local_1;
ww_command_2_local_8 <= command_2_local_8;
ww_command_2_local_9 <= command_2_local_9;
ww_command_2_local_10 <= command_2_local_10;
ww_command_2_local_11 <= command_2_local_11;
ww_COINC_DOWN_A <= COINC_DOWN_A;
ww_COINC_DOWN_ABAR <= COINC_DOWN_ABAR;
ww_COINC_DOWN_B <= COINC_DOWN_B;
ww_COINC_DOWN_BBAR <= COINC_DOWN_BBAR;
ww_COINC_UP_A <= COINC_UP_A;
ww_COINC_UP_ABAR <= COINC_UP_ABAR;
ww_COINC_UP_B <= COINC_UP_B;
ww_COINC_UP_BBAR <= COINC_UP_BBAR;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
COINCIDENCE_OUT_DOWN <= ww_COINCIDENCE_OUT_DOWN;
i563 <= ww_i563;
COINCIDENCE_OUT_UP <= ww_COINCIDENCE_OUT_UP;
i565 <= ww_i565;
FF_down_a <= ww_FF_down_a;
FF_down_abar <= ww_FF_down_abar;
FF_down_b <= ww_FF_down_b;
FF_down_bbar <= ww_FF_down_bbar;
FF_up_a <= ww_FF_up_a;
FF_up_abar <= ww_FF_up_abar;
FF_up_b <= ww_FF_up_b;
FF_up_bbar <= ww_FF_up_bbar;
ALT_NOT_ww_RST <= NOT ww_RST;
ALT_NOT_ww_coinc_latch(0) <= NOT ww_coinc_latch(0);
ALT_NOT_ww_coinc_latch(1) <= NOT ww_coinc_latch(1);
ALT_NOT_ww_COINC_DOWN_ABAR <= NOT ww_COINC_DOWN_ABAR;
ALT_NOT_ww_COINC_DOWN_BBAR <= NOT ww_COINC_DOWN_BBAR;
ALT_NOT_ww_COINC_UP_ABAR <= NOT ww_COINC_UP_ABAR;
ALT_NOT_ww_COINC_UP_BBAR <= NOT ww_COINC_UP_BBAR;

\COINCIDENCE_OUT_DOWN~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- COINCIDENCE_OUT_DOWN = DFFE(i48 & \i489~117\ # !i48 & !\coinc_down_high_delay[0]\ & command_2_local_8, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DC10",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \coinc_down_high_delay[0]\,
	datab => i48,
	datac => ww_command_2_local_8,
	datad => \i489~117\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_COINCIDENCE_OUT_DOWN);

\i563~I\ : apex20ke_lcell 
-- Equation(s):
-- i563 = DFFE(i48 & \i490~159\ & !\i52~0\ # !i48 & \i490~158\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0ACA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i490~158\,
	datab => \i490~159\,
	datac => i48,
	datad => \i52~0\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_i563);

\COINCIDENCE_OUT_UP~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- COINCIDENCE_OUT_UP = DFFE(i48 & (\i491~119\ # \i491~118\) # !i48 & \i491~117\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FBC8",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i491~119\,
	datab => i48,
	datac => \i491~118\,
	datad => \i491~117\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_COINCIDENCE_OUT_UP);

\i565~I\ : apex20ke_lcell 
-- Equation(s):
-- i565 = DFFE(i48 & \i490~159\ & \i52~0\ # !i48 & \i492~157\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8F80",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i490~159\,
	datab => \i52~0\,
	datac => i48,
	datad => \i492~157\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_i565);

\FF_down_a~I\ : apex20ke_lcell 
-- Equation(s):
-- FF_down_a = DFFE(VCC, \COINC_DOWN_A~combout\, command_2_local_12, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	clk => ww_COINC_DOWN_A,
	aclr => ALT_NOT_ww_coinc_latch(0),
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_FF_down_a);

\FF_down_abar~I\ : apex20ke_lcell 
-- Equation(s):
-- FF_down_abar = DFFE(VCC, !\COINC_DOWN_ABAR~combout\, command_2_local_12, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	clk => ALT_NOT_ww_COINC_DOWN_ABAR,
	aclr => ALT_NOT_ww_coinc_latch(0),
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_FF_down_abar);

\FF_down_b~I\ : apex20ke_lcell 
-- Equation(s):
-- FF_down_b = DFFE(VCC, \COINC_DOWN_B~combout\, command_2_local_13, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	clk => ww_COINC_DOWN_B,
	aclr => ALT_NOT_ww_coinc_latch(1),
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_FF_down_b);

\FF_down_bbar~I\ : apex20ke_lcell 
-- Equation(s):
-- FF_down_bbar = DFFE(VCC, !\COINC_DOWN_BBAR~combout\, command_2_local_13, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	clk => ALT_NOT_ww_COINC_DOWN_BBAR,
	aclr => ALT_NOT_ww_coinc_latch(1),
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_FF_down_bbar);

\FF_up_a~I\ : apex20ke_lcell 
-- Equation(s):
-- FF_up_a = DFFE(VCC, \COINC_UP_A~combout\, command_2_local_12, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	clk => ww_COINC_UP_A,
	aclr => ALT_NOT_ww_coinc_latch(0),
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_FF_up_a);

\FF_up_abar~I\ : apex20ke_lcell 
-- Equation(s):
-- FF_up_abar = DFFE(VCC, !\COINC_UP_ABAR~combout\, command_2_local_12, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	clk => ALT_NOT_ww_COINC_UP_ABAR,
	aclr => ALT_NOT_ww_coinc_latch(0),
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_FF_up_abar);

\FF_up_b~I\ : apex20ke_lcell 
-- Equation(s):
-- FF_up_b = DFFE(VCC, \COINC_UP_B~combout\, command_2_local_13, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	clk => ww_COINC_UP_B,
	aclr => ALT_NOT_ww_coinc_latch(1),
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_FF_up_b);

\FF_up_bbar~I\ : apex20ke_lcell 
-- Equation(s):
-- FF_up_bbar = DFFE(VCC, !\COINC_UP_BBAR~combout\, command_2_local_13, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	clk => ALT_NOT_ww_COINC_UP_BBAR,
	aclr => ALT_NOT_ww_coinc_latch(1),
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_FF_up_bbar);

\coinc_down_high_delay[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \coinc_down_high_delay[0]\ = DFFE(command_2_local_8, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_command_2_local_8,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \coinc_down_high_delay[0]\);

\i48~I\ : apex20ke_lcell 
-- Equation(s):
-- i48 = command_2_local_1 # command_2_local_0

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFCC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_command_2_local_1,
	datad => ww_command_2_local_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i48);

\i~1910_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1910\ = \state~21\ # \state~22\ & (\i~1860\ # \i~1855\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFC8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1860\,
	datab => \state~22\,
	datac => \i~1855\,
	datad => \state~21\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~1910\);

\last_up_pol~24_I\ : apex20ke_lcell 
-- Equation(s):
-- \last_up_pol~24\ = !\i~1855\ & i48 & \state~22\ & !\i~1860\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0040",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1855\,
	datab => i48,
	datac => \state~22\,
	datad => \i~1860\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \last_up_pol~24\);

\state~20_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~20\ = DFFE(!\last_up_pol~24\ & (\state~20\ # !\i~0\ & i48), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00F4",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~0\,
	datab => i48,
	datac => \state~20\,
	datad => \last_up_pol~24\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~20\);

\i~401_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~401\ = \i~0\ $ \cnt[0]\
-- \i~401COUT\ = CARRY(\i~0\ & \cnt[0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "6688",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~0\,
	datab => \cnt[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~401\,
	cout => \i~401COUT\);

\cnt[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[0]\ = DFFE(\i~1910\ & (\cnt[0]\ # !\state~20\ & \i~401\) # !\i~1910\ & !\state~20\ & \i~401\, GLOBAL(outclock0), !GLOBAL(RST), , i48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BA30",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1910\,
	datab => \state~20\,
	datac => \i~401\,
	datad => \cnt[0]\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => i48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[0]\);

\i~402_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~402\ = \cnt[1]\ $ \i~401COUT\
-- \i~402COUT\ = CARRY(!\i~401COUT\ # !\cnt[1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \cnt[1]\,
	cin => \i~401COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~402\,
	cout => \i~402COUT\);

\cnt[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[1]\ = DFFE(\cnt[1]\ & (\i~1910\ # \i~402\ & !\state~20\) # !\cnt[1]\ & \i~402\ & !\state~20\, GLOBAL(outclock0), !GLOBAL(RST), , i48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "A0EC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[1]\,
	datab => \i~402\,
	datac => \i~1910\,
	datad => \state~20\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => i48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[1]\);

\i~403_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~403\ = \cnt[2]\ $ !\i~402COUT\
-- \i~403COUT\ = CARRY(\cnt[2]\ & !\i~402COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \cnt[2]\,
	cin => \i~402COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~403\,
	cout => \i~403COUT\);

\cnt[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[2]\ = DFFE(\i~1910\ & (\cnt[2]\ # !\state~20\ & \i~403\) # !\i~1910\ & !\state~20\ & \i~403\, GLOBAL(outclock0), !GLOBAL(RST), , i48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BA30",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1910\,
	datab => \state~20\,
	datac => \i~403\,
	datad => \cnt[2]\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => i48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[2]\);

\i~404_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~404\ = \cnt[3]\ $ \i~403COUT\
-- \i~404COUT\ = CARRY(!\i~403COUT\ # !\cnt[3]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \cnt[3]\,
	cin => \i~403COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~404\,
	cout => \i~404COUT\);

\cnt[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[3]\ = DFFE(\cnt[3]\ & (\i~1910\ # \i~404\ & !\state~20\) # !\cnt[3]\ & \i~404\ & !\state~20\, GLOBAL(outclock0), !GLOBAL(RST), , i48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "88F8",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[3]\,
	datab => \i~1910\,
	datac => \i~404\,
	datad => \state~20\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => i48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[3]\);

\i~405_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~405\ = \cnt[4]\ $ !\i~404COUT\
-- \i~405COUT\ = CARRY(\cnt[4]\ & !\i~404COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[4]\,
	cin => \i~404COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~405\,
	cout => \i~405COUT\);

\cnt[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[4]\ = DFFE(\cnt[4]\ & (\i~1910\ # \i~405\ & !\state~20\) # !\cnt[4]\ & \i~405\ & !\state~20\, GLOBAL(outclock0), !GLOBAL(RST), , i48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "88F8",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[4]\,
	datab => \i~1910\,
	datac => \i~405\,
	datad => \state~20\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => i48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[4]\);

\i~406_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~406\ = \cnt[5]\ $ \i~405COUT\
-- \i~406COUT\ = CARRY(!\i~405COUT\ # !\cnt[5]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[5]\,
	cin => \i~405COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~406\,
	cout => \i~406COUT\);

\cnt[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[5]\ = DFFE(\i~406\ & (\cnt[5]\ & \i~1910\ # !\state~20\) # !\i~406\ & \cnt[5]\ & \i~1910\, GLOBAL(outclock0), !GLOBAL(RST), , i48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F222",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~406\,
	datab => \state~20\,
	datac => \cnt[5]\,
	datad => \i~1910\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => i48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[5]\);

\i~407_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~407\ = \cnt[6]\ $ !\i~406COUT\
-- \i~407COUT\ = CARRY(\cnt[6]\ & !\i~406COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[6]\,
	cin => \i~406COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~407\,
	cout => \i~407COUT\);

\cnt[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[6]\ = DFFE(\cnt[6]\ & (\i~1910\ # !\state~20\ & \i~407\) # !\cnt[6]\ & !\state~20\ & \i~407\, GLOBAL(outclock0), !GLOBAL(RST), , i48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B3A0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[6]\,
	datab => \state~20\,
	datac => \i~1910\,
	datad => \i~407\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => i48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[6]\);

\i~408_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~408\ = \cnt[7]\ $ \i~407COUT\
-- \i~408COUT\ = CARRY(!\i~407COUT\ # !\cnt[7]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[7]\,
	cin => \i~407COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~408\,
	cout => \i~408COUT\);

\cnt[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[7]\ = DFFE(\cnt[7]\ & (\i~1910\ # !\state~20\ & \i~408\) # !\cnt[7]\ & !\state~20\ & \i~408\, GLOBAL(outclock0), !GLOBAL(RST), , i48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B3A0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[7]\,
	datab => \state~20\,
	datac => \i~1910\,
	datad => \i~408\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => i48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[7]\);

\i~1868_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1868\ = \cnt[5]\ # !\cnt[7]\ # !\cnt[4]\ # !\cnt[6]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BFFF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[5]\,
	datab => \cnt[6]\,
	datac => \cnt[4]\,
	datad => \cnt[7]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~1868\);

\i~1869_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1869\ = \cnt[3]\ # \cnt[2]\ # \cnt[1]\ # \cnt[0]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[3]\,
	datab => \cnt[2]\,
	datac => \cnt[1]\,
	datad => \cnt[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~1869\);

\i~409_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~409\ = \cnt[8]\ $ !\i~408COUT\
-- \i~409COUT\ = CARRY(\cnt[8]\ & !\i~408COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \cnt[8]\,
	cin => \i~408COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~409\,
	cout => \i~409COUT\);

\cnt[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[8]\ = DFFE(\state~20\ & \i~1910\ & \cnt[8]\ # !\state~20\ & (\i~409\ # \i~1910\ & \cnt[8]\), GLOBAL(outclock0), !GLOBAL(RST), , i48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "D5C0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~20\,
	datab => \i~1910\,
	datac => \cnt[8]\,
	datad => \i~409\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => i48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[8]\);

\i~410_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~410\ = \cnt[9]\ $ \i~409COUT\
-- \i~410COUT\ = CARRY(!\i~409COUT\ # !\cnt[9]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \cnt[9]\,
	cin => \i~409COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~410\,
	cout => \i~410COUT\);

\cnt[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[9]\ = DFFE(\state~20\ & \i~1910\ & \cnt[9]\ # !\state~20\ & (\i~410\ # \i~1910\ & \cnt[9]\), GLOBAL(outclock0), !GLOBAL(RST), , i48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "D5C0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~20\,
	datab => \i~1910\,
	datac => \cnt[9]\,
	datad => \i~410\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => i48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[9]\);

\i~411_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~411\ = \cnt[10]\ $ !\i~410COUT\
-- \i~411COUT\ = CARRY(\cnt[10]\ & !\i~410COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[10]\,
	cin => \i~410COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~411\,
	cout => \i~411COUT\);

\cnt[10]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[10]\ = DFFE(\state~20\ & \cnt[10]\ & \i~1910\ # !\state~20\ & (\i~411\ # \cnt[10]\ & \i~1910\), GLOBAL(outclock0), !GLOBAL(RST), , i48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "D5C0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~20\,
	datab => \cnt[10]\,
	datac => \i~1910\,
	datad => \i~411\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => i48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[10]\);

\i~412_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~412\ = \cnt[11]\ $ \i~411COUT\
-- \i~412COUT\ = CARRY(!\i~411COUT\ # !\cnt[11]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[11]\,
	cin => \i~411COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~412\,
	cout => \i~412COUT\);

\cnt[11]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[11]\ = DFFE(\state~20\ & \cnt[11]\ & \i~1910\ # !\state~20\ & (\i~412\ # \cnt[11]\ & \i~1910\), GLOBAL(outclock0), !GLOBAL(RST), , i48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "D5C0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~20\,
	datab => \cnt[11]\,
	datac => \i~1910\,
	datad => \i~412\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => i48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[11]\);

\i~1867_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1867\ = \cnt[11]\ # !\cnt[8]\ # !\cnt[10]\ # !\cnt[9]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BFFF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[11]\,
	datab => \cnt[9]\,
	datac => \cnt[10]\,
	datad => \cnt[8]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~1867\);

\i~413_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~413\ = \cnt[12]\ $ !\i~412COUT\
-- \i~413COUT\ = CARRY(\cnt[12]\ & !\i~412COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \cnt[12]\,
	cin => \i~412COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~413\,
	cout => \i~413COUT\);

\cnt[12]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[12]\ = DFFE(\i~1910\ & (\cnt[12]\ # !\state~20\ & \i~413\) # !\i~1910\ & !\state~20\ & \i~413\, GLOBAL(outclock0), !GLOBAL(RST), , i48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BA30",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1910\,
	datab => \state~20\,
	datac => \i~413\,
	datad => \cnt[12]\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => i48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[12]\);

\i~414_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~414\ = \cnt[13]\ $ \i~413COUT\
-- \i~414COUT\ = CARRY(!\i~413COUT\ # !\cnt[13]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \cnt[13]\,
	cin => \i~413COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~414\,
	cout => \i~414COUT\);

\cnt[13]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[13]\ = DFFE(\cnt[13]\ & (\i~1910\ # \i~414\ & !\state~20\) # !\cnt[13]\ & \i~414\ & !\state~20\, GLOBAL(outclock0), !GLOBAL(RST), , i48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "88F8",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[13]\,
	datab => \i~1910\,
	datac => \i~414\,
	datad => \state~20\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => i48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[13]\);

\i~415_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~415\ = \cnt[14]\ $ !\i~414COUT\
-- \i~415COUT\ = CARRY(\cnt[14]\ & !\i~414COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \cnt[14]\,
	cin => \i~414COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~415\,
	cout => \i~415COUT\);

\cnt[14]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[14]\ = DFFE(\i~1910\ & (\cnt[14]\ # !\state~20\ & \i~415\) # !\i~1910\ & !\state~20\ & \i~415\, GLOBAL(outclock0), !GLOBAL(RST), , i48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BA30",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1910\,
	datab => \state~20\,
	datac => \i~415\,
	datad => \cnt[14]\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => i48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[14]\);

\i~416_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~416\ = \cnt[15]\ $ \i~415COUT\
-- \i~416COUT\ = CARRY(!\i~415COUT\ # !\cnt[15]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \cnt[15]\,
	cin => \i~415COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~416\,
	cout => \i~416COUT\);

\cnt[15]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[15]\ = DFFE(\cnt[15]\ & (\i~1910\ # \i~416\ & !\state~20\) # !\cnt[15]\ & \i~416\ & !\state~20\, GLOBAL(outclock0), !GLOBAL(RST), , i48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "88F8",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[15]\,
	datab => \i~1910\,
	datac => \i~416\,
	datad => \state~20\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => i48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[15]\);

\i~1866_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1866\ = \cnt[13]\ # \cnt[14]\ # \cnt[15]\ # \cnt[12]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[13]\,
	datab => \cnt[14]\,
	datac => \cnt[15]\,
	datad => \cnt[12]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~1866\);

\i~1870_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1870\ = \i~1868\ # \i~1869\ # \i~1867\ # \i~1866\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1868\,
	datab => \i~1869\,
	datac => \i~1867\,
	datad => \i~1866\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~1870\);

\i~417_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~417\ = \cnt[16]\ $ !\i~416COUT\
-- \i~417COUT\ = CARRY(\cnt[16]\ & !\i~416COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \cnt[16]\,
	cin => \i~416COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~417\,
	cout => \i~417COUT\);

\cnt[16]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[16]\ = DFFE(\state~20\ & \i~1910\ & \cnt[16]\ # !\state~20\ & (\i~417\ # \i~1910\ & \cnt[16]\), GLOBAL(outclock0), !GLOBAL(RST), , i48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "D5C0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~20\,
	datab => \i~1910\,
	datac => \cnt[16]\,
	datad => \i~417\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => i48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[16]\);

\i~418_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~418\ = \cnt[17]\ $ \i~417COUT\
-- \i~418COUT\ = CARRY(!\i~417COUT\ # !\cnt[17]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \cnt[17]\,
	cin => \i~417COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~418\,
	cout => \i~418COUT\);

\cnt[17]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[17]\ = DFFE(\state~20\ & \i~1910\ & \cnt[17]\ # !\state~20\ & (\i~418\ # \i~1910\ & \cnt[17]\), GLOBAL(outclock0), !GLOBAL(RST), , i48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "D5C0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~20\,
	datab => \i~1910\,
	datac => \cnt[17]\,
	datad => \i~418\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => i48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[17]\);

\i~419_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~419\ = \cnt[18]\ $ !\i~418COUT\
-- \i~419COUT\ = CARRY(\cnt[18]\ & !\i~418COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \cnt[18]\,
	cin => \i~418COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~419\,
	cout => \i~419COUT\);

\cnt[18]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[18]\ = DFFE(\state~20\ & \i~1910\ & \cnt[18]\ # !\state~20\ & (\i~419\ # \i~1910\ & \cnt[18]\), GLOBAL(outclock0), !GLOBAL(RST), , i48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "D5C0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~20\,
	datab => \i~1910\,
	datac => \cnt[18]\,
	datad => \i~419\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => i48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[18]\);

\i~420_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~420\ = \cnt[19]\ $ \i~419COUT\
-- \i~420COUT\ = CARRY(!\i~419COUT\ # !\cnt[19]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \cnt[19]\,
	cin => \i~419COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~420\,
	cout => \i~420COUT\);

\cnt[19]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[19]\ = DFFE(\state~20\ & \i~1910\ & \cnt[19]\ # !\state~20\ & (\i~420\ # \i~1910\ & \cnt[19]\), GLOBAL(outclock0), !GLOBAL(RST), , i48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "D5C0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~20\,
	datab => \i~1910\,
	datac => \cnt[19]\,
	datad => \i~420\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => i48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[19]\);

\i~421_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~421\ = \cnt[20]\ $ !\i~420COUT\
-- \i~421COUT\ = CARRY(\cnt[20]\ & !\i~420COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[20]\,
	cin => \i~420COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~421\,
	cout => \i~421COUT\);

\cnt[20]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[20]\ = DFFE(\cnt[20]\ & (\i~1910\ # !\state~20\ & \i~421\) # !\cnt[20]\ & !\state~20\ & \i~421\, GLOBAL(outclock0), !GLOBAL(RST), , i48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B3A0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[20]\,
	datab => \state~20\,
	datac => \i~1910\,
	datad => \i~421\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => i48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[20]\);

\i~422_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~422\ = \cnt[21]\ $ \i~421COUT\
-- \i~422COUT\ = CARRY(!\i~421COUT\ # !\cnt[21]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[21]\,
	cin => \i~421COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~422\,
	cout => \i~422COUT\);

\cnt[21]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[21]\ = DFFE(\state~20\ & \cnt[21]\ & \i~1910\ # !\state~20\ & (\i~422\ # \cnt[21]\ & \i~1910\), GLOBAL(outclock0), !GLOBAL(RST), , i48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "D5C0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~20\,
	datab => \cnt[21]\,
	datac => \i~1910\,
	datad => \i~422\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => i48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[21]\);

\i~423_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~423\ = \cnt[22]\ $ !\i~422COUT\
-- \i~423COUT\ = CARRY(\cnt[22]\ & !\i~422COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[22]\,
	cin => \i~422COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~423\,
	cout => \i~423COUT\);

\cnt[22]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[22]\ = DFFE(\state~20\ & \cnt[22]\ & \i~1910\ # !\state~20\ & (\i~423\ # \cnt[22]\ & \i~1910\), GLOBAL(outclock0), !GLOBAL(RST), , i48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "D5C0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~20\,
	datab => \cnt[22]\,
	datac => \i~1910\,
	datad => \i~423\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => i48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[22]\);

\i~424_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~424\ = \cnt[23]\ $ \i~423COUT\
-- \i~424COUT\ = CARRY(!\i~423COUT\ # !\cnt[23]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[23]\,
	cin => \i~423COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~424\,
	cout => \i~424COUT\);

\cnt[23]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[23]\ = DFFE(\cnt[23]\ & (\i~1910\ # !\state~20\ & \i~424\) # !\cnt[23]\ & !\state~20\ & \i~424\, GLOBAL(outclock0), !GLOBAL(RST), , i48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B3A0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[23]\,
	datab => \state~20\,
	datac => \i~1910\,
	datad => \i~424\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => i48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[23]\);

\i~1863_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1863\ = \cnt[20]\ # \cnt[22]\ # \cnt[23]\ # \cnt[21]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[20]\,
	datab => \cnt[22]\,
	datac => \cnt[23]\,
	datad => \cnt[21]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~1863\);

\i~1864_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1864\ = \cnt[18]\ # \cnt[16]\ # \cnt[17]\ # \cnt[19]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[18]\,
	datab => \cnt[16]\,
	datac => \cnt[17]\,
	datad => \cnt[19]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~1864\);

\i~425_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~425\ = \cnt[24]\ $ !\i~424COUT\
-- \i~425COUT\ = CARRY(\cnt[24]\ & !\i~424COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \cnt[24]\,
	cin => \i~424COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~425\,
	cout => \i~425COUT\);

\cnt[24]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[24]\ = DFFE(\cnt[24]\ & (\i~1910\ # !\state~20\ & \i~425\) # !\cnt[24]\ & !\state~20\ & \i~425\, GLOBAL(outclock0), !GLOBAL(RST), , i48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BA30",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[24]\,
	datab => \state~20\,
	datac => \i~425\,
	datad => \i~1910\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => i48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[24]\);

\i~426_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~426\ = \cnt[25]\ $ \i~425COUT\
-- \i~426COUT\ = CARRY(!\i~425COUT\ # !\cnt[25]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \cnt[25]\,
	cin => \i~425COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~426\,
	cout => \i~426COUT\);

\cnt[25]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[25]\ = DFFE(\cnt[25]\ & (\i~1910\ # !\state~20\ & \i~426\) # !\cnt[25]\ & !\state~20\ & \i~426\, GLOBAL(outclock0), !GLOBAL(RST), , i48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BA30",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[25]\,
	datab => \state~20\,
	datac => \i~426\,
	datad => \i~1910\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => i48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[25]\);

\i~427_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~427\ = \cnt[26]\ $ !\i~426COUT\
-- \i~427COUT\ = CARRY(\cnt[26]\ & !\i~426COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[26]\,
	cin => \i~426COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~427\,
	cout => \i~427COUT\);

\cnt[26]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[26]\ = DFFE(\state~20\ & \cnt[26]\ & \i~1910\ # !\state~20\ & (\i~427\ # \cnt[26]\ & \i~1910\), GLOBAL(outclock0), !GLOBAL(RST), , i48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F444",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~20\,
	datab => \i~427\,
	datac => \cnt[26]\,
	datad => \i~1910\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => i48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[26]\);

\i~428_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~428\ = \cnt[27]\ $ \i~427COUT\
-- \i~428COUT\ = CARRY(!\i~427COUT\ # !\cnt[27]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[27]\,
	cin => \i~427COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~428\,
	cout => \i~428COUT\);

\cnt[27]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[27]\ = DFFE(\state~20\ & \i~1910\ & \cnt[27]\ # !\state~20\ & (\i~428\ # \i~1910\ & \cnt[27]\), GLOBAL(outclock0), !GLOBAL(RST), , i48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "D5C0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~20\,
	datab => \i~1910\,
	datac => \cnt[27]\,
	datad => \i~428\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => i48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[27]\);

\i~1862_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1862\ = \cnt[24]\ # \cnt[27]\ # \cnt[25]\ # \cnt[26]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[24]\,
	datab => \cnt[27]\,
	datac => \cnt[25]\,
	datad => \cnt[26]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~1862\);

\i~429_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~429\ = \cnt[28]\ $ !\i~428COUT\
-- \i~429COUT\ = CARRY(\cnt[28]\ & !\i~428COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[28]\,
	cin => \i~428COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~429\,
	cout => \i~429COUT\);

\cnt[28]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[28]\ = DFFE(\cnt[28]\ & (\i~1910\ # !\state~20\ & \i~429\) # !\cnt[28]\ & !\state~20\ & \i~429\, GLOBAL(outclock0), !GLOBAL(RST), , i48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B3A0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[28]\,
	datab => \state~20\,
	datac => \i~1910\,
	datad => \i~429\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => i48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[28]\);

\i~430_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~430\ = \cnt[29]\ $ \i~429COUT\
-- \i~430COUT\ = CARRY(!\i~429COUT\ # !\cnt[29]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[29]\,
	cin => \i~429COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~430\,
	cout => \i~430COUT\);

\cnt[29]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[29]\ = DFFE(\state~20\ & \cnt[29]\ & \i~1910\ # !\state~20\ & (\i~430\ # \cnt[29]\ & \i~1910\), GLOBAL(outclock0), !GLOBAL(RST), , i48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F444",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~20\,
	datab => \i~430\,
	datac => \cnt[29]\,
	datad => \i~1910\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => i48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[29]\);

\i~431_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~431\ = \cnt[30]\ $ !\i~430COUT\
-- \i~431COUT\ = CARRY(\cnt[30]\ & !\i~430COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[30]\,
	cin => \i~430COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~431\,
	cout => \i~431COUT\);

\cnt[30]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[30]\ = DFFE(\cnt[30]\ & (\i~1910\ # !\state~20\ & \i~431\) # !\cnt[30]\ & !\state~20\ & \i~431\, GLOBAL(outclock0), !GLOBAL(RST), , i48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B3A0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[30]\,
	datab => \state~20\,
	datac => \i~1910\,
	datad => \i~431\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => i48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[30]\);

\i~432_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~432\ = \cnt[31]\ $ \i~431COUT\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[31]\,
	cin => \i~431COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~432\);

\cnt[31]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[31]\ = DFFE(\state~20\ & \i~1910\ & \cnt[31]\ # !\state~20\ & (\i~432\ # \i~1910\ & \cnt[31]\), GLOBAL(outclock0), !GLOBAL(RST), , i48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "D5C0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~20\,
	datab => \i~1910\,
	datac => \cnt[31]\,
	datad => \i~432\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => i48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[31]\);

\i~1861_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1861\ = \cnt[28]\ # \cnt[31]\ # \cnt[30]\ # \cnt[29]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[28]\,
	datab => \cnt[31]\,
	datac => \cnt[30]\,
	datad => \cnt[29]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~1861\);

\i~1865_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1865\ = \i~1863\ # \i~1864\ # \i~1862\ # \i~1861\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1863\,
	datab => \i~1864\,
	datac => \i~1862\,
	datad => \i~1861\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~1865\);

\i~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~0\ = \i~1870\ # \i~1865\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \i~1870\,
	datad => \i~1865\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~0\);

\state~488_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~488\ = \state~21\ & (\i~1860\ # \i~1855\ # !i48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FB00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1860\,
	datab => i48,
	datac => \i~1855\,
	datad => \state~21\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \state~488\);

\state~21_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~21\ = DFFE(\state~488\ # !\i~0\ & i48 & !\state~20\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF04",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~0\,
	datab => i48,
	datac => \state~20\,
	datad => \state~488\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~21\);

\i~1872_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1872\ = \i~1855\ & (\state~22\ # \state~21\) # !\i~1855\ & \i~1860\ & (\state~22\ # \state~21\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EEE0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1855\,
	datab => \i~1860\,
	datac => \state~22\,
	datad => \state~21\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~1872\);

\i~1871_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1871\ = !\state~20\ & (\i~1870\ # \i~1865\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00EE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1870\,
	datab => \i~1865\,
	datad => \state~20\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~1871\);

\i490~159_I\ : apex20ke_lcell 
-- Equation(s):
-- \i490~159\ = \state~22\ # \state~21\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \state~22\,
	datad => \state~21\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i490~159\);

\i~369_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~369\ = !\wait_cnt[0]\
-- \i~369COUT\ = CARRY(\wait_cnt[0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "55AA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~369\,
	cout => \i~369COUT\);

\wait_cnt[30]~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \wait_cnt[30]~0\ = !RST & (command_2_local_1 # command_2_local_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F0C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_command_2_local_1,
	datac => ww_RST,
	datad => ww_command_2_local_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \wait_cnt[30]~0\);

\wait_cnt[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wait_cnt[0]\ = DFFE(\i~1871\ & (\wait_cnt[0]\ # \i~1872\ & \i~369\) # !\i~1871\ & \i~1872\ & \i~369\, GLOBAL(outclock0), , , \wait_cnt[30]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1871\,
	datab => \wait_cnt[0]\,
	datac => \i~1872\,
	datad => \i~369\,
	clk => ww_CLK,
	ena => \wait_cnt[30]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wait_cnt[0]\);

\i~370_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~370\ = \wait_cnt[1]\ $ \i~369COUT\
-- \i~370COUT\ = CARRY(!\i~369COUT\ # !\wait_cnt[1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[1]\,
	cin => \i~369COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~370\,
	cout => \i~370COUT\);

\wait_cnt[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wait_cnt[1]\ = DFFE(\i~1871\ & (\wait_cnt[1]\ # \i~1872\ & \i~370\) # !\i~1871\ & \i~1872\ & \i~370\, GLOBAL(outclock0), , , \wait_cnt[30]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1871\,
	datab => \wait_cnt[1]\,
	datac => \i~1872\,
	datad => \i~370\,
	clk => ww_CLK,
	ena => \wait_cnt[30]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wait_cnt[1]\);

\i~371_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~371\ = \wait_cnt[2]\ $ !\i~370COUT\
-- \i~371COUT\ = CARRY(\wait_cnt[2]\ & !\i~370COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \wait_cnt[2]\,
	cin => \i~370COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~371\,
	cout => \i~371COUT\);

\i~354_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~354\ = \state~21\ & \i~371\ & (\i~1855\ # \i~1860\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C080",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1855\,
	datab => \state~21\,
	datac => \i~371\,
	datad => \i~1860\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~354\);

\i~1908_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1908\ = \state~22\ & (\i~371\ # !\i~1860\ & !\i~1855\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "A0A2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datab => \i~1860\,
	datac => \i~371\,
	datad => \i~1855\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~1908\);

\wait_cnt[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wait_cnt[2]\ = DFFE(\i~354\ # \i~1908\ # \i~1871\ & \wait_cnt[2]\, GLOBAL(outclock0), , , \wait_cnt[30]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEEE",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~354\,
	datab => \i~1908\,
	datac => \i~1871\,
	datad => \wait_cnt[2]\,
	clk => ww_CLK,
	ena => \wait_cnt[30]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wait_cnt[2]\);

\i~372_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~372\ = \wait_cnt[3]\ $ \i~371COUT\
-- \i~372COUT\ = CARRY(!\i~371COUT\ # !\wait_cnt[3]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \wait_cnt[3]\,
	cin => \i~371COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~372\,
	cout => \i~372COUT\);

\i~1897_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1897\ = \i490~159\ & \i~372\ & (\i~1860\ # \i~1855\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1860\,
	datab => \i~1855\,
	datac => \i490~159\,
	datad => \i~372\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~1897\);

\wait_cnt[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wait_cnt[3]\ = DFFE(\i~1897\ # !\state~20\ & \i~0\ & \wait_cnt[3]\, GLOBAL(outclock0), , , \wait_cnt[30]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BAAA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1897\,
	datab => \state~20\,
	datac => \i~0\,
	datad => \wait_cnt[3]\,
	clk => ww_CLK,
	ena => \wait_cnt[30]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wait_cnt[3]\);

\i~373_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~373\ = \wait_cnt[4]\ $ !\i~372COUT\
-- \i~373COUT\ = CARRY(\wait_cnt[4]\ & !\i~372COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[4]\,
	cin => \i~372COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~373\,
	cout => \i~373COUT\);

\i~374_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~374\ = \wait_cnt[5]\ $ \i~373COUT\
-- \i~374COUT\ = CARRY(!\i~373COUT\ # !\wait_cnt[5]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[5]\,
	cin => \i~373COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~374\,
	cout => \i~374COUT\);

\i~1901_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1901\ = \i490~159\ & \i~374\ & (\i~1860\ # \i~1855\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1860\,
	datab => \i~1855\,
	datac => \i490~159\,
	datad => \i~374\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~1901\);

\wait_cnt[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wait_cnt[5]\ = DFFE(\i~1901\ # \i~0\ & \wait_cnt[5]\ & !\state~20\, GLOBAL(outclock0), , , \wait_cnt[30]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF08",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~0\,
	datab => \wait_cnt[5]\,
	datac => \state~20\,
	datad => \i~1901\,
	clk => ww_CLK,
	ena => \wait_cnt[30]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wait_cnt[5]\);

\i~375_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~375\ = \wait_cnt[6]\ $ !\i~374COUT\
-- \i~375COUT\ = CARRY(\wait_cnt[6]\ & !\i~374COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[6]\,
	cin => \i~374COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~375\,
	cout => \i~375COUT\);

\i~1903_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1903\ = \i490~159\ & \i~375\ & (\i~1855\ # \i~1860\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C080",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1855\,
	datab => \i490~159\,
	datac => \i~375\,
	datad => \i~1860\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~1903\);

\wait_cnt[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wait_cnt[6]\ = DFFE(\i~1903\ # \i~0\ & !\state~20\ & \wait_cnt[6]\, GLOBAL(outclock0), , , \wait_cnt[30]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F2F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~0\,
	datab => \state~20\,
	datac => \i~1903\,
	datad => \wait_cnt[6]\,
	clk => ww_CLK,
	ena => \wait_cnt[30]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wait_cnt[6]\);

\i~376_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~376\ = \wait_cnt[7]\ $ \i~375COUT\
-- \i~376COUT\ = CARRY(!\i~375COUT\ # !\wait_cnt[7]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \wait_cnt[7]\,
	cin => \i~375COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~376\,
	cout => \i~376COUT\);

\wait_cnt[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wait_cnt[7]\ = DFFE(\wait_cnt[7]\ & (\i~1871\ # \i~1872\ & \i~376\) # !\wait_cnt[7]\ & \i~1872\ & \i~376\, GLOBAL(outclock0), , , \wait_cnt[30]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[7]\,
	datab => \i~1871\,
	datac => \i~1872\,
	datad => \i~376\,
	clk => ww_CLK,
	ena => \wait_cnt[30]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wait_cnt[7]\);

\i~377_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~377\ = \wait_cnt[8]\ $ !\i~376COUT\
-- \i~377COUT\ = CARRY(\wait_cnt[8]\ & !\i~376COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[8]\,
	cin => \i~376COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~377\,
	cout => \i~377COUT\);

\wait_cnt[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wait_cnt[8]\ = DFFE(\wait_cnt[8]\ & (\i~1871\ # \i~377\ & \i~1872\) # !\wait_cnt[8]\ & \i~377\ & \i~1872\, GLOBAL(outclock0), , , \wait_cnt[30]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[8]\,
	datab => \i~377\,
	datac => \i~1872\,
	datad => \i~1871\,
	clk => ww_CLK,
	ena => \wait_cnt[30]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wait_cnt[8]\);

\i~378_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~378\ = \wait_cnt[9]\ $ \i~377COUT\
-- \i~378COUT\ = CARRY(!\i~377COUT\ # !\wait_cnt[9]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[9]\,
	cin => \i~377COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~378\,
	cout => \i~378COUT\);

\wait_cnt[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wait_cnt[9]\ = DFFE(\wait_cnt[9]\ & (\i~1871\ # \i~1872\ & \i~378\) # !\wait_cnt[9]\ & \i~1872\ & \i~378\, GLOBAL(outclock0), , , \wait_cnt[30]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[9]\,
	datab => \i~1871\,
	datac => \i~1872\,
	datad => \i~378\,
	clk => ww_CLK,
	ena => \wait_cnt[30]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wait_cnt[9]\);

\i~379_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~379\ = \wait_cnt[10]\ $ !\i~378COUT\
-- \i~379COUT\ = CARRY(\wait_cnt[10]\ & !\i~378COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[10]\,
	cin => \i~378COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~379\,
	cout => \i~379COUT\);

\wait_cnt[10]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wait_cnt[10]\ = DFFE(\i~1871\ & (\wait_cnt[10]\ # \i~1872\ & \i~379\) # !\i~1871\ & \i~1872\ & \i~379\, GLOBAL(outclock0), , , \wait_cnt[30]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1871\,
	datab => \wait_cnt[10]\,
	datac => \i~1872\,
	datad => \i~379\,
	clk => ww_CLK,
	ena => \wait_cnt[30]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wait_cnt[10]\);

\i~380_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~380\ = \wait_cnt[11]\ $ \i~379COUT\
-- \i~380COUT\ = CARRY(!\i~379COUT\ # !\wait_cnt[11]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[11]\,
	cin => \i~379COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~380\,
	cout => \i~380COUT\);

\wait_cnt[11]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wait_cnt[11]\ = DFFE(\i~380\ & (\i~1872\ # \wait_cnt[11]\ & \i~1871\) # !\i~380\ & \wait_cnt[11]\ & \i~1871\, GLOBAL(outclock0), , , \wait_cnt[30]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~380\,
	datab => \wait_cnt[11]\,
	datac => \i~1872\,
	datad => \i~1871\,
	clk => ww_CLK,
	ena => \wait_cnt[30]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wait_cnt[11]\);

\i~381_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~381\ = \wait_cnt[12]\ $ !\i~380COUT\
-- \i~381COUT\ = CARRY(\wait_cnt[12]\ & !\i~380COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[12]\,
	cin => \i~380COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~381\,
	cout => \i~381COUT\);

\wait_cnt[12]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wait_cnt[12]\ = DFFE(\wait_cnt[12]\ & (\i~1871\ # \i~1872\ & \i~381\) # !\wait_cnt[12]\ & \i~1872\ & \i~381\, GLOBAL(outclock0), , , \wait_cnt[30]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[12]\,
	datab => \i~1871\,
	datac => \i~1872\,
	datad => \i~381\,
	clk => ww_CLK,
	ena => \wait_cnt[30]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wait_cnt[12]\);

\i~382_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~382\ = \wait_cnt[13]\ $ \i~381COUT\
-- \i~382COUT\ = CARRY(!\i~381COUT\ # !\wait_cnt[13]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[13]\,
	cin => \i~381COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~382\,
	cout => \i~382COUT\);

\wait_cnt[13]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wait_cnt[13]\ = DFFE(\i~1871\ & (\wait_cnt[13]\ # \i~1872\ & \i~382\) # !\i~1871\ & \i~1872\ & \i~382\, GLOBAL(outclock0), , , \wait_cnt[30]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1871\,
	datab => \wait_cnt[13]\,
	datac => \i~1872\,
	datad => \i~382\,
	clk => ww_CLK,
	ena => \wait_cnt[30]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wait_cnt[13]\);

\i~383_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~383\ = \wait_cnt[14]\ $ !\i~382COUT\
-- \i~383COUT\ = CARRY(\wait_cnt[14]\ & !\i~382COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[14]\,
	cin => \i~382COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~383\,
	cout => \i~383COUT\);

\wait_cnt[14]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wait_cnt[14]\ = DFFE(\wait_cnt[14]\ & (\i~1871\ # \i~1872\ & \i~383\) # !\wait_cnt[14]\ & \i~1872\ & \i~383\, GLOBAL(outclock0), , , \wait_cnt[30]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[14]\,
	datab => \i~1871\,
	datac => \i~1872\,
	datad => \i~383\,
	clk => ww_CLK,
	ena => \wait_cnt[30]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wait_cnt[14]\);

\i~384_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~384\ = \wait_cnt[15]\ $ \i~383COUT\
-- \i~384COUT\ = CARRY(!\i~383COUT\ # !\wait_cnt[15]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \wait_cnt[15]\,
	cin => \i~383COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~384\,
	cout => \i~384COUT\);

\wait_cnt[15]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wait_cnt[15]\ = DFFE(\wait_cnt[15]\ & (\i~1871\ # \i~384\ & \i~1872\) # !\wait_cnt[15]\ & \i~384\ & \i~1872\, GLOBAL(outclock0), , , \wait_cnt[30]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[15]\,
	datab => \i~1871\,
	datac => \i~384\,
	datad => \i~1872\,
	clk => ww_CLK,
	ena => \wait_cnt[30]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wait_cnt[15]\);

\i~385_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~385\ = \wait_cnt[16]\ $ !\i~384COUT\
-- \i~385COUT\ = CARRY(\wait_cnt[16]\ & !\i~384COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[16]\,
	cin => \i~384COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~385\,
	cout => \i~385COUT\);

\wait_cnt[16]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wait_cnt[16]\ = DFFE(\i~1872\ & (\i~385\ # \wait_cnt[16]\ & \i~1871\) # !\i~1872\ & \wait_cnt[16]\ & \i~1871\, GLOBAL(outclock0), , , \wait_cnt[30]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1872\,
	datab => \wait_cnt[16]\,
	datac => \i~1871\,
	datad => \i~385\,
	clk => ww_CLK,
	ena => \wait_cnt[30]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wait_cnt[16]\);

\i~386_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~386\ = \wait_cnt[17]\ $ \i~385COUT\
-- \i~386COUT\ = CARRY(!\i~385COUT\ # !\wait_cnt[17]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[17]\,
	cin => \i~385COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~386\,
	cout => \i~386COUT\);

\wait_cnt[17]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wait_cnt[17]\ = DFFE(\i~1872\ & (\i~386\ # \wait_cnt[17]\ & \i~1871\) # !\i~1872\ & \wait_cnt[17]\ & \i~1871\, GLOBAL(outclock0), , , \wait_cnt[30]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1872\,
	datab => \wait_cnt[17]\,
	datac => \i~1871\,
	datad => \i~386\,
	clk => ww_CLK,
	ena => \wait_cnt[30]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wait_cnt[17]\);

\i~387_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~387\ = \wait_cnt[18]\ $ !\i~386COUT\
-- \i~387COUT\ = CARRY(\wait_cnt[18]\ & !\i~386COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[18]\,
	cin => \i~386COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~387\,
	cout => \i~387COUT\);

\wait_cnt[18]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wait_cnt[18]\ = DFFE(\wait_cnt[18]\ & (\i~1871\ # \i~387\ & \i~1872\) # !\wait_cnt[18]\ & \i~387\ & \i~1872\, GLOBAL(outclock0), , , \wait_cnt[30]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[18]\,
	datab => \i~387\,
	datac => \i~1871\,
	datad => \i~1872\,
	clk => ww_CLK,
	ena => \wait_cnt[30]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wait_cnt[18]\);

\i~388_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~388\ = \wait_cnt[19]\ $ \i~387COUT\
-- \i~388COUT\ = CARRY(!\i~387COUT\ # !\wait_cnt[19]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \wait_cnt[19]\,
	cin => \i~387COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~388\,
	cout => \i~388COUT\);

\wait_cnt[19]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wait_cnt[19]\ = DFFE(\wait_cnt[19]\ & (\i~1871\ # \i~388\ & \i~1872\) # !\wait_cnt[19]\ & \i~388\ & \i~1872\, GLOBAL(outclock0), , , \wait_cnt[30]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[19]\,
	datab => \i~1871\,
	datac => \i~388\,
	datad => \i~1872\,
	clk => ww_CLK,
	ena => \wait_cnt[30]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wait_cnt[19]\);

\i~389_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~389\ = \wait_cnt[20]\ $ !\i~388COUT\
-- \i~389COUT\ = CARRY(\wait_cnt[20]\ & !\i~388COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \wait_cnt[20]\,
	cin => \i~388COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~389\,
	cout => \i~389COUT\);

\wait_cnt[20]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wait_cnt[20]\ = DFFE(\wait_cnt[20]\ & (\i~1871\ # \i~389\ & \i~1872\) # !\wait_cnt[20]\ & \i~389\ & \i~1872\, GLOBAL(outclock0), , , \wait_cnt[30]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[20]\,
	datab => \i~1871\,
	datac => \i~389\,
	datad => \i~1872\,
	clk => ww_CLK,
	ena => \wait_cnt[30]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wait_cnt[20]\);

\i~390_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~390\ = \wait_cnt[21]\ $ \i~389COUT\
-- \i~390COUT\ = CARRY(!\i~389COUT\ # !\wait_cnt[21]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \wait_cnt[21]\,
	cin => \i~389COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~390\,
	cout => \i~390COUT\);

\wait_cnt[21]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wait_cnt[21]\ = DFFE(\i~1872\ & (\i~390\ # \i~1871\ & \wait_cnt[21]\) # !\i~1872\ & \i~1871\ & \wait_cnt[21]\, GLOBAL(outclock0), , , \wait_cnt[30]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1872\,
	datab => \i~1871\,
	datac => \i~390\,
	datad => \wait_cnt[21]\,
	clk => ww_CLK,
	ena => \wait_cnt[30]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wait_cnt[21]\);

\i~391_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~391\ = \wait_cnt[22]\ $ !\i~390COUT\
-- \i~391COUT\ = CARRY(\wait_cnt[22]\ & !\i~390COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \wait_cnt[22]\,
	cin => \i~390COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~391\,
	cout => \i~391COUT\);

\wait_cnt[22]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wait_cnt[22]\ = DFFE(\wait_cnt[22]\ & (\i~1871\ # \i~391\ & \i~1872\) # !\wait_cnt[22]\ & \i~391\ & \i~1872\, GLOBAL(outclock0), , , \wait_cnt[30]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[22]\,
	datab => \i~1871\,
	datac => \i~391\,
	datad => \i~1872\,
	clk => ww_CLK,
	ena => \wait_cnt[30]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wait_cnt[22]\);

\i~392_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~392\ = \wait_cnt[23]\ $ \i~391COUT\
-- \i~392COUT\ = CARRY(!\i~391COUT\ # !\wait_cnt[23]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[23]\,
	cin => \i~391COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~392\,
	cout => \i~392COUT\);

\wait_cnt[23]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wait_cnt[23]\ = DFFE(\i~1872\ & (\i~392\ # \wait_cnt[23]\ & \i~1871\) # !\i~1872\ & \wait_cnt[23]\ & \i~1871\, GLOBAL(outclock0), , , \wait_cnt[30]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1872\,
	datab => \wait_cnt[23]\,
	datac => \i~392\,
	datad => \i~1871\,
	clk => ww_CLK,
	ena => \wait_cnt[30]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wait_cnt[23]\);

\i~393_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~393\ = \wait_cnt[24]\ $ !\i~392COUT\
-- \i~393COUT\ = CARRY(\wait_cnt[24]\ & !\i~392COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[24]\,
	cin => \i~392COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~393\,
	cout => \i~393COUT\);

\wait_cnt[24]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wait_cnt[24]\ = DFFE(\wait_cnt[24]\ & (\i~1871\ # \i~1872\ & \i~393\) # !\wait_cnt[24]\ & \i~1872\ & \i~393\, GLOBAL(outclock0), , , \wait_cnt[30]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[24]\,
	datab => \i~1872\,
	datac => \i~1871\,
	datad => \i~393\,
	clk => ww_CLK,
	ena => \wait_cnt[30]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wait_cnt[24]\);

\i~394_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~394\ = \wait_cnt[25]\ $ \i~393COUT\
-- \i~394COUT\ = CARRY(!\i~393COUT\ # !\wait_cnt[25]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[25]\,
	cin => \i~393COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~394\,
	cout => \i~394COUT\);

\wait_cnt[25]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wait_cnt[25]\ = DFFE(\wait_cnt[25]\ & (\i~1871\ # \i~1872\ & \i~394\) # !\wait_cnt[25]\ & \i~1872\ & \i~394\, GLOBAL(outclock0), , , \wait_cnt[30]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[25]\,
	datab => \i~1872\,
	datac => \i~1871\,
	datad => \i~394\,
	clk => ww_CLK,
	ena => \wait_cnt[30]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wait_cnt[25]\);

\i~395_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~395\ = \wait_cnt[26]\ $ !\i~394COUT\
-- \i~395COUT\ = CARRY(\wait_cnt[26]\ & !\i~394COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \wait_cnt[26]\,
	cin => \i~394COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~395\,
	cout => \i~395COUT\);

\wait_cnt[26]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wait_cnt[26]\ = DFFE(\i~1872\ & (\i~395\ # \i~1871\ & \wait_cnt[26]\) # !\i~1872\ & \i~1871\ & \wait_cnt[26]\, GLOBAL(outclock0), , , \wait_cnt[30]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1872\,
	datab => \i~1871\,
	datac => \i~395\,
	datad => \wait_cnt[26]\,
	clk => ww_CLK,
	ena => \wait_cnt[30]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wait_cnt[26]\);

\i~1852_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1852\ = \wait_cnt[25]\ # \wait_cnt[23]\ # \wait_cnt[24]\ # \wait_cnt[26]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[25]\,
	datab => \wait_cnt[23]\,
	datac => \wait_cnt[24]\,
	datad => \wait_cnt[26]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~1852\);

\i~1854_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1854\ = \wait_cnt[15]\ # \wait_cnt[17]\ # \wait_cnt[18]\ # \wait_cnt[16]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[15]\,
	datab => \wait_cnt[17]\,
	datac => \wait_cnt[18]\,
	datad => \wait_cnt[16]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~1854\);

\i~1853_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1853\ = \wait_cnt[19]\ # \wait_cnt[21]\ # \wait_cnt[22]\ # \wait_cnt[20]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[19]\,
	datab => \wait_cnt[21]\,
	datac => \wait_cnt[22]\,
	datad => \wait_cnt[20]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~1853\);

\i~396_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~396\ = \wait_cnt[27]\ $ \i~395COUT\
-- \i~396COUT\ = CARRY(!\i~395COUT\ # !\wait_cnt[27]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \wait_cnt[27]\,
	cin => \i~395COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~396\,
	cout => \i~396COUT\);

\wait_cnt[27]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wait_cnt[27]\ = DFFE(\i~1872\ & (\i~396\ # \i~1871\ & \wait_cnt[27]\) # !\i~1872\ & \i~1871\ & \wait_cnt[27]\, GLOBAL(outclock0), , , \wait_cnt[30]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1872\,
	datab => \i~1871\,
	datac => \i~396\,
	datad => \wait_cnt[27]\,
	clk => ww_CLK,
	ena => \wait_cnt[30]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wait_cnt[27]\);

\i~397_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~397\ = \wait_cnt[28]\ $ !\i~396COUT\
-- \i~397COUT\ = CARRY(\wait_cnt[28]\ & !\i~396COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \wait_cnt[28]\,
	cin => \i~396COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~397\,
	cout => \i~397COUT\);

\wait_cnt[28]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wait_cnt[28]\ = DFFE(\i~397\ & (\i~1872\ # \wait_cnt[28]\ & \i~1871\) # !\i~397\ & \wait_cnt[28]\ & \i~1871\, GLOBAL(outclock0), , , \wait_cnt[30]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~397\,
	datab => \wait_cnt[28]\,
	datac => \i~1871\,
	datad => \i~1872\,
	clk => ww_CLK,
	ena => \wait_cnt[30]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wait_cnt[28]\);

\i~398_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~398\ = \wait_cnt[29]\ $ \i~397COUT\
-- \i~398COUT\ = CARRY(!\i~397COUT\ # !\wait_cnt[29]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \wait_cnt[29]\,
	cin => \i~397COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~398\,
	cout => \i~398COUT\);

\wait_cnt[29]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wait_cnt[29]\ = DFFE(\i~1872\ & (\i~398\ # \i~1871\ & \wait_cnt[29]\) # !\i~1872\ & \i~1871\ & \wait_cnt[29]\, GLOBAL(outclock0), , , \wait_cnt[30]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1872\,
	datab => \i~1871\,
	datac => \i~398\,
	datad => \wait_cnt[29]\,
	clk => ww_CLK,
	ena => \wait_cnt[30]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wait_cnt[29]\);

\i~399_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~399\ = \wait_cnt[30]\ $ !\i~398COUT\
-- \i~399COUT\ = CARRY(\wait_cnt[30]\ & !\i~398COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \wait_cnt[30]\,
	cin => \i~398COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~399\,
	cout => \i~399COUT\);

\wait_cnt[30]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wait_cnt[30]\ = DFFE(\i~399\ & (\i~1872\ # \wait_cnt[30]\ & \i~1871\) # !\i~399\ & \wait_cnt[30]\ & \i~1871\, GLOBAL(outclock0), , , \wait_cnt[30]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~399\,
	datab => \wait_cnt[30]\,
	datac => \i~1871\,
	datad => \i~1872\,
	clk => ww_CLK,
	ena => \wait_cnt[30]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wait_cnt[30]\);

\i~1851_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1851\ = \wait_cnt[30]\ # \wait_cnt[29]\ # \wait_cnt[28]\ # \wait_cnt[27]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[30]\,
	datab => \wait_cnt[29]\,
	datac => \wait_cnt[28]\,
	datad => \wait_cnt[27]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~1851\);

\i~1855_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1855\ = \i~1852\ # \i~1854\ # \i~1853\ # \i~1851\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1852\,
	datab => \i~1854\,
	datac => \i~1853\,
	datad => \i~1851\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~1855\);

\i~1899_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1899\ = \i490~159\ & \i~373\ & (\i~1860\ # \i~1855\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1860\,
	datab => \i~1855\,
	datac => \i490~159\,
	datad => \i~373\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~1899\);

\wait_cnt[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wait_cnt[4]\ = DFFE(\i~1899\ # !\state~20\ & \i~0\ & \wait_cnt[4]\, GLOBAL(outclock0), , , \wait_cnt[30]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BAAA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1899\,
	datab => \state~20\,
	datac => \i~0\,
	datad => \wait_cnt[4]\,
	clk => ww_CLK,
	ena => \wait_cnt[30]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wait_cnt[4]\);

\i~1858_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1858\ = \wait_cnt[4]\ # \wait_cnt[3]\ # \wait_cnt[5]\ # \wait_cnt[6]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[4]\,
	datab => \wait_cnt[3]\,
	datac => \wait_cnt[5]\,
	datad => \wait_cnt[6]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~1858\);

\i~1856_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1856\ = \wait_cnt[12]\ # \wait_cnt[13]\ # \wait_cnt[14]\ # \wait_cnt[11]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[12]\,
	datab => \wait_cnt[13]\,
	datac => \wait_cnt[14]\,
	datad => \wait_cnt[11]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~1856\);

\i~400_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~400\ = \wait_cnt[31]\ $ \i~399COUT\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[31]\,
	cin => \i~399COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~400\);

\wait_cnt[31]~I\ : apex20ke_lcell 
-- Equation(s):
-- \wait_cnt[31]\ = DFFE(\i~1871\ & (\wait_cnt[31]\ # \i~1872\ & \i~400\) # !\i~1871\ & \i~1872\ & \i~400\, GLOBAL(outclock0), , , \wait_cnt[30]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1871\,
	datab => \i~1872\,
	datac => \wait_cnt[31]\,
	datad => \i~400\,
	clk => ww_CLK,
	ena => \wait_cnt[30]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wait_cnt[31]\);

\i~1859_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1859\ = \wait_cnt[1]\ # \wait_cnt[0]\ # \wait_cnt[31]\ # !\wait_cnt[2]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFB",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[1]\,
	datab => \wait_cnt[2]\,
	datac => \wait_cnt[0]\,
	datad => \wait_cnt[31]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~1859\);

\i~1857_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1857\ = \wait_cnt[9]\ # \wait_cnt[10]\ # \wait_cnt[8]\ # \wait_cnt[7]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wait_cnt[9]\,
	datab => \wait_cnt[10]\,
	datac => \wait_cnt[8]\,
	datad => \wait_cnt[7]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~1857\);

\i~1860_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1860\ = \i~1858\ # \i~1856\ # \i~1859\ # \i~1857\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1858\,
	datab => \i~1856\,
	datac => \i~1859\,
	datad => \i~1857\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~1860\);

\i~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~2\ = \i~1860\ # \i~1855\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFCC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \i~1860\,
	datad => \i~1855\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~2\);

\state~22_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~22\ = DFFE(\i~2\ & \state~22\ # !\i~2\ & (i48 & \state~21\ # !i48 & \state~22\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F4B0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~2\,
	datab => i48,
	datac => \state~22\,
	datad => \state~21\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~22\);

\last_down~I\ : apex20ke_lcell 
-- Equation(s):
-- last_down = DFFE(\i52~0\ $ (!\i~1855\ & !\i~1860\ & \state~22\), GLOBAL(outclock0), !GLOBAL(RST), , i48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EF10",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1855\,
	datab => \i~1860\,
	datac => \state~22\,
	datad => \i52~0\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => i48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => last_down);

\i52~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \i52~0\ = last_down & command_2_local_0 # !command_2_local_1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CF0F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => last_down,
	datac => ww_command_2_local_1,
	datad => ww_command_2_local_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i52~0\);

\last_down_pol~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \last_down_pol~0\ = !\i52~0\ & !\i~1855\ & !\i~1860\ & \state~22\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0100",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i52~0\,
	datab => \i~1855\,
	datac => \i~1860\,
	datad => \state~22\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \last_down_pol~0\);

\last_down_pol~I\ : apex20ke_lcell 
-- Equation(s):
-- last_down_pol = DFFE(!last_down_pol, GLOBAL(outclock0), !GLOBAL(RST), , \last_down_pol~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00FF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => last_down_pol,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \last_down_pol~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => last_down_pol);

\i489~117_I\ : apex20ke_lcell 
-- Equation(s):
-- \i489~117\ = \state~22\ & (\state~21\ # last_down_pol) # !\state~22\ & \state~21\ & !last_down_pol

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CCF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \state~22\,
	datac => \state~21\,
	datad => last_down_pol,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i489~117\);

\coinc_down_low_delay[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \coinc_down_low_delay[0]\ = DFFE(command_2_local_9, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_command_2_local_9,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \coinc_down_low_delay[0]\);

\i490~158_I\ : apex20ke_lcell 
-- Equation(s):
-- \i490~158\ = \coinc_down_low_delay[0]\ & !\coinc_down_high_delay[0]\ & command_2_local_8 # !\coinc_down_low_delay[0]\ & (command_2_local_9 # !\coinc_down_high_delay[0]\ & command_2_local_8)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "4F44",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \coinc_down_low_delay[0]\,
	datab => ww_command_2_local_9,
	datac => \coinc_down_high_delay[0]\,
	datad => ww_command_2_local_8,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i490~158\);

\last_up_pol~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \last_up_pol~0\ = \last_up_pol~24\ & (command_2_local_0 & last_down # !command_2_local_1)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8C0C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_2_local_0,
	datab => \last_up_pol~24\,
	datac => ww_command_2_local_1,
	datad => last_down,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \last_up_pol~0\);

\last_up_pol~I\ : apex20ke_lcell 
-- Equation(s):
-- last_up_pol = DFFE(!last_up_pol, GLOBAL(outclock0), !GLOBAL(RST), , \last_up_pol~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F0F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => last_up_pol,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => \last_up_pol~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => last_up_pol);

\i491~119_I\ : apex20ke_lcell 
-- Equation(s):
-- \i491~119\ = \state~21\ & !last_up_pol

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00CC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \state~21\,
	datad => last_up_pol,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i491~119\);

\i491~118_I\ : apex20ke_lcell 
-- Equation(s):
-- \i491~118\ = \state~22\ & last_up_pol

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \state~22\,
	datad => last_up_pol,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i491~118\);

\coinc_up_high_delay[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \coinc_up_high_delay[0]\ = DFFE(command_2_local_10, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_command_2_local_10,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \coinc_up_high_delay[0]\);

\i491~117_I\ : apex20ke_lcell 
-- Equation(s):
-- \i491~117\ = command_2_local_10 & !\coinc_up_high_delay[0]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00AA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_2_local_10,
	datad => \coinc_up_high_delay[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i491~117\);

\coinc_up_low_delay[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \coinc_up_low_delay[0]\ = DFFE(command_2_local_11, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_command_2_local_11,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \coinc_up_low_delay[0]\);

\i492~157_I\ : apex20ke_lcell 
-- Equation(s):
-- \i492~157\ = \coinc_up_low_delay[0]\ & !\coinc_up_high_delay[0]\ & command_2_local_10 # !\coinc_up_low_delay[0]\ & (command_2_local_11 # !\coinc_up_high_delay[0]\ & command_2_local_10)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "4F44",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \coinc_up_low_delay[0]\,
	datab => ww_command_2_local_11,
	datac => \coinc_up_high_delay[0]\,
	datad => ww_command_2_local_10,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i492~157\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	hit_counter IS
    PORT (
	CLK : IN std_logic;
	RST : IN std_logic;
	command_4_local_8 : IN std_logic;
	GND_port : IN std_logic;
	OneSPE : IN std_logic;
	MultiSPE : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	MultiSPE_nl : OUT std_logic;
	OneSPE_nl : OUT std_logic;
	multiSPEcnt_0 : OUT std_logic;
	oneSPEcnt_0 : OUT std_logic;
	oneSPEcnt_1 : OUT std_logic;
	multiSPEcnt_1 : OUT std_logic;
	oneSPEcnt_2 : OUT std_logic;
	multiSPEcnt_2 : OUT std_logic;
	oneSPEcnt_3 : OUT std_logic;
	multiSPEcnt_3 : OUT std_logic;
	oneSPEcnt_4 : OUT std_logic;
	multiSPEcnt_4 : OUT std_logic;
	oneSPEcnt_5 : OUT std_logic;
	multiSPEcnt_5 : OUT std_logic;
	oneSPEcnt_6 : OUT std_logic;
	multiSPEcnt_6 : OUT std_logic;
	oneSPEcnt_7 : OUT std_logic;
	multiSPEcnt_7 : OUT std_logic;
	multiSPEcnt_8 : OUT std_logic;
	oneSPEcnt_8 : OUT std_logic;
	oneSPEcnt_9 : OUT std_logic;
	multiSPEcnt_9 : OUT std_logic;
	oneSPEcnt_10 : OUT std_logic;
	multiSPEcnt_10 : OUT std_logic;
	oneSPEcnt_11 : OUT std_logic;
	multiSPEcnt_11 : OUT std_logic;
	oneSPEcnt_12 : OUT std_logic;
	multiSPEcnt_12 : OUT std_logic;
	oneSPEcnt_13 : OUT std_logic;
	multiSPEcnt_13 : OUT std_logic;
	oneSPEcnt_14 : OUT std_logic;
	multiSPEcnt_14 : OUT std_logic;
	oneSPEcnt_15 : OUT std_logic;
	multiSPEcnt_15 : OUT std_logic
	);
END hit_counter;

ARCHITECTURE structure OF hit_counter IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_command_4_local_8 : std_logic;
SIGNAL ww_GND_port : std_logic;
SIGNAL ww_OneSPE : std_logic;
SIGNAL ww_MultiSPE : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_MultiSPE_nl : std_logic;
SIGNAL ww_OneSPE_nl : std_logic;
SIGNAL ww_multiSPEcnt_0 : std_logic;
SIGNAL ww_oneSPEcnt_0 : std_logic;
SIGNAL ww_oneSPEcnt_1 : std_logic;
SIGNAL ww_multiSPEcnt_1 : std_logic;
SIGNAL ww_oneSPEcnt_2 : std_logic;
SIGNAL ww_multiSPEcnt_2 : std_logic;
SIGNAL ww_oneSPEcnt_3 : std_logic;
SIGNAL ww_multiSPEcnt_3 : std_logic;
SIGNAL ww_oneSPEcnt_4 : std_logic;
SIGNAL ww_multiSPEcnt_4 : std_logic;
SIGNAL ww_oneSPEcnt_5 : std_logic;
SIGNAL ww_multiSPEcnt_5 : std_logic;
SIGNAL ww_oneSPEcnt_6 : std_logic;
SIGNAL ww_multiSPEcnt_6 : std_logic;
SIGNAL ww_oneSPEcnt_7 : std_logic;
SIGNAL ww_multiSPEcnt_7 : std_logic;
SIGNAL ww_multiSPEcnt_8 : std_logic;
SIGNAL ww_oneSPEcnt_8 : std_logic;
SIGNAL ww_oneSPEcnt_9 : std_logic;
SIGNAL ww_multiSPEcnt_9 : std_logic;
SIGNAL ww_oneSPEcnt_10 : std_logic;
SIGNAL ww_multiSPEcnt_10 : std_logic;
SIGNAL ww_oneSPEcnt_11 : std_logic;
SIGNAL ww_multiSPEcnt_11 : std_logic;
SIGNAL ww_oneSPEcnt_12 : std_logic;
SIGNAL ww_multiSPEcnt_12 : std_logic;
SIGNAL ww_oneSPEcnt_13 : std_logic;
SIGNAL ww_multiSPEcnt_13 : std_logic;
SIGNAL ww_oneSPEcnt_14 : std_logic;
SIGNAL ww_multiSPEcnt_14 : std_logic;
SIGNAL ww_oneSPEcnt_15 : std_logic;
SIGNAL ww_multiSPEcnt_15 : std_logic;
SIGNAL MultiSPE0 : std_logic;
SIGNAL MultiSPE1 : std_logic;
SIGNAL OneSPE0 : std_logic;
SIGNAL OneSPE1 : std_logic;
SIGNAL MultiSPE2 : std_logic;
SIGNAL i19 : std_logic;
SIGNAL \cntXms[0]\ : std_logic;
SIGNAL \cntXms[0]~COUT\ : std_logic;
SIGNAL \cntXms[1]\ : std_logic;
SIGNAL \cntXms[1]~COUT\ : std_logic;
SIGNAL \cntXms[2]\ : std_logic;
SIGNAL \cntXms[2]~COUT\ : std_logic;
SIGNAL \cntXms[3]\ : std_logic;
SIGNAL \cntXms[3]~COUT\ : std_logic;
SIGNAL \cntXms[4]\ : std_logic;
SIGNAL \cntXms[4]~COUT\ : std_logic;
SIGNAL \cntXms[5]\ : std_logic;
SIGNAL \cntXms[5]~COUT\ : std_logic;
SIGNAL \cntXms[6]\ : std_logic;
SIGNAL \cntXms[6]~COUT\ : std_logic;
SIGNAL \cntXms[7]\ : std_logic;
SIGNAL \cntXms[7]~COUT\ : std_logic;
SIGNAL \cntXms[8]\ : std_logic;
SIGNAL \cntXms[8]~COUT\ : std_logic;
SIGNAL \cntXms[9]\ : std_logic;
SIGNAL \cntXms[9]~COUT\ : std_logic;
SIGNAL \cntXms[10]\ : std_logic;
SIGNAL \cntXms[10]~COUT\ : std_logic;
SIGNAL \cntXms[11]\ : std_logic;
SIGNAL \cntXms[11]~COUT\ : std_logic;
SIGNAL \cntXms[12]\ : std_logic;
SIGNAL \cntXms[12]~COUT\ : std_logic;
SIGNAL \cntXms[13]\ : std_logic;
SIGNAL \cntXms[13]~COUT\ : std_logic;
SIGNAL \cntXms[14]\ : std_logic;
SIGNAL \cntXms[14]~COUT\ : std_logic;
SIGNAL \cntXms[15]\ : std_logic;
SIGNAL \i~327\ : std_logic;
SIGNAL \i~326\ : std_logic;
SIGNAL \i~324\ : std_logic;
SIGNAL \i~325\ : std_logic;
SIGNAL \i~328\ : std_logic;
SIGNAL \cntXms[15]~COUT\ : std_logic;
SIGNAL \cntXms[16]\ : std_logic;
SIGNAL \cntXms[16]~COUT\ : std_logic;
SIGNAL \cntXms[17]\ : std_logic;
SIGNAL \cntXms[17]~COUT\ : std_logic;
SIGNAL \cntXms[18]\ : std_logic;
SIGNAL \cntXms[18]~COUT\ : std_logic;
SIGNAL \cntXms[19]\ : std_logic;
SIGNAL \cntXms[19]~COUT\ : std_logic;
SIGNAL \cntXms[20]\ : std_logic;
SIGNAL \cntXms[20]~COUT\ : std_logic;
SIGNAL \cntXms[21]\ : std_logic;
SIGNAL \cntXms[21]~COUT\ : std_logic;
SIGNAL \cntXms[22]\ : std_logic;
SIGNAL \cntXms[22]~COUT\ : std_logic;
SIGNAL \cntXms[23]\ : std_logic;
SIGNAL \i~330\ : std_logic;
SIGNAL \cntXms[23]~COUT\ : std_logic;
SIGNAL \cntXms[24]\ : std_logic;
SIGNAL \cntXms[24]~COUT\ : std_logic;
SIGNAL \cntXms[25]\ : std_logic;
SIGNAL \cntXms[25]~COUT\ : std_logic;
SIGNAL \cntXms[26]\ : std_logic;
SIGNAL \cntXms[26]~COUT\ : std_logic;
SIGNAL \cntXms[27]\ : std_logic;
SIGNAL \i~331\ : std_logic;
SIGNAL \i~329\ : std_logic;
SIGNAL \cntXms[27]~COUT\ : std_logic;
SIGNAL \cntXms[28]\ : std_logic;
SIGNAL \cntXms[28]~COUT\ : std_logic;
SIGNAL \cntXms[29]\ : std_logic;
SIGNAL \cntXms[29]~COUT\ : std_logic;
SIGNAL \cntXms[30]\ : std_logic;
SIGNAL \cntXms[30]~COUT\ : std_logic;
SIGNAL \cntXms[31]\ : std_logic;
SIGNAL \i~332\ : std_logic;
SIGNAL \i~333\ : std_logic;
SIGNAL \i~0\ : std_logic;
SIGNAL \wysi_counter|sload_path[0]\ : std_logic;
SIGNAL \oneSPEcnt[0]~31\ : std_logic;
SIGNAL OneSPE2 : std_logic;
SIGNAL i38 : std_logic;
SIGNAL \wysi_counter|sload_path[0]~1\ : std_logic;
SIGNAL \wysi_counter|counter_cell[0]~COUT_1\ : std_logic;
SIGNAL \wysi_counter|sload_path[1]~1\ : std_logic;
SIGNAL \wysi_counter|counter_cell[0]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[1]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[1]~COUT_1\ : std_logic;
SIGNAL \wysi_counter|sload_path[2]~1\ : std_logic;
SIGNAL \wysi_counter|counter_cell[1]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[2]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[2]~COUT_1\ : std_logic;
SIGNAL \wysi_counter|sload_path[3]~1\ : std_logic;
SIGNAL \wysi_counter|counter_cell[2]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[3]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[3]~COUT_1\ : std_logic;
SIGNAL \wysi_counter|sload_path[4]~1\ : std_logic;
SIGNAL \wysi_counter|counter_cell[3]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[4]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[4]~COUT_1\ : std_logic;
SIGNAL \wysi_counter|sload_path[5]~1\ : std_logic;
SIGNAL \wysi_counter|counter_cell[4]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[5]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[5]~COUT_1\ : std_logic;
SIGNAL \wysi_counter|sload_path[6]~1\ : std_logic;
SIGNAL \wysi_counter|counter_cell[5]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[6]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[6]~COUT_1\ : std_logic;
SIGNAL \wysi_counter|sload_path[7]~1\ : std_logic;
SIGNAL \wysi_counter|counter_cell[6]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[7]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[7]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[8]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[7]~COUT_1\ : std_logic;
SIGNAL \wysi_counter|sload_path[8]~1\ : std_logic;
SIGNAL \wysi_counter|counter_cell[8]~COUT_1\ : std_logic;
SIGNAL \wysi_counter|sload_path[9]~1\ : std_logic;
SIGNAL \wysi_counter|counter_cell[8]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[9]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[9]~COUT_1\ : std_logic;
SIGNAL \wysi_counter|sload_path[10]~1\ : std_logic;
SIGNAL \wysi_counter|counter_cell[9]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[10]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[10]~COUT_1\ : std_logic;
SIGNAL \wysi_counter|sload_path[11]~1\ : std_logic;
SIGNAL \wysi_counter|counter_cell[10]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[11]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[11]~COUT_1\ : std_logic;
SIGNAL \wysi_counter|sload_path[12]~1\ : std_logic;
SIGNAL \wysi_counter|counter_cell[11]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[12]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[12]~COUT_1\ : std_logic;
SIGNAL \wysi_counter|sload_path[13]~1\ : std_logic;
SIGNAL \wysi_counter|counter_cell[12]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[13]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[13]~COUT_1\ : std_logic;
SIGNAL \wysi_counter|sload_path[14]~1\ : std_logic;
SIGNAL \wysi_counter|counter_cell[13]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[14]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[14]~COUT_1\ : std_logic;
SIGNAL \wysi_counter|sload_path[15]~1\ : std_logic;
SIGNAL \wysi_counter|counter_cell[14]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[15]\ : std_logic;
SIGNAL ALT_NOT_ww_RST : std_logic;

BEGIN

ww_CLK <= CLK;
ww_RST <= RST;
ww_command_4_local_8 <= command_4_local_8;
ww_GND_port <= GND_port;
ww_OneSPE <= OneSPE;
ww_MultiSPE <= MultiSPE;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
MultiSPE_nl <= ww_MultiSPE_nl;
OneSPE_nl <= ww_OneSPE_nl;
multiSPEcnt_0 <= ww_multiSPEcnt_0;
oneSPEcnt_0 <= ww_oneSPEcnt_0;
oneSPEcnt_1 <= ww_oneSPEcnt_1;
multiSPEcnt_1 <= ww_multiSPEcnt_1;
oneSPEcnt_2 <= ww_oneSPEcnt_2;
multiSPEcnt_2 <= ww_multiSPEcnt_2;
oneSPEcnt_3 <= ww_oneSPEcnt_3;
multiSPEcnt_3 <= ww_multiSPEcnt_3;
oneSPEcnt_4 <= ww_oneSPEcnt_4;
multiSPEcnt_4 <= ww_multiSPEcnt_4;
oneSPEcnt_5 <= ww_oneSPEcnt_5;
multiSPEcnt_5 <= ww_multiSPEcnt_5;
oneSPEcnt_6 <= ww_oneSPEcnt_6;
multiSPEcnt_6 <= ww_multiSPEcnt_6;
oneSPEcnt_7 <= ww_oneSPEcnt_7;
multiSPEcnt_7 <= ww_multiSPEcnt_7;
multiSPEcnt_8 <= ww_multiSPEcnt_8;
oneSPEcnt_8 <= ww_oneSPEcnt_8;
oneSPEcnt_9 <= ww_oneSPEcnt_9;
multiSPEcnt_9 <= ww_multiSPEcnt_9;
oneSPEcnt_10 <= ww_oneSPEcnt_10;
multiSPEcnt_10 <= ww_multiSPEcnt_10;
oneSPEcnt_11 <= ww_oneSPEcnt_11;
multiSPEcnt_11 <= ww_multiSPEcnt_11;
oneSPEcnt_12 <= ww_oneSPEcnt_12;
multiSPEcnt_12 <= ww_multiSPEcnt_12;
oneSPEcnt_13 <= ww_oneSPEcnt_13;
multiSPEcnt_13 <= ww_multiSPEcnt_13;
oneSPEcnt_14 <= ww_oneSPEcnt_14;
multiSPEcnt_14 <= ww_multiSPEcnt_14;
oneSPEcnt_15 <= ww_oneSPEcnt_15;
multiSPEcnt_15 <= ww_multiSPEcnt_15;
ALT_NOT_ww_RST <= NOT ww_RST;

\MultiSPE_nl~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- MultiSPE_nl = DFFE(!MultiSPE1, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F0F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => MultiSPE1,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_MultiSPE_nl);

\OneSPE_nl~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- OneSPE_nl = DFFE(!OneSPE1, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00FF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => OneSPE1,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_OneSPE_nl);

\multiSPEcnt[0]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- multiSPEcnt_0 = DFFE(\wysi_counter|sload_path[0]\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[0]\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_multiSPEcnt_0);

\oneSPEcnt[0]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- oneSPEcnt_0 = DFFE(\wysi_counter|sload_path[0]~1\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[0]~1\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_oneSPEcnt_0);

\oneSPEcnt[1]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- oneSPEcnt_1 = DFFE(\wysi_counter|sload_path[1]~1\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[1]~1\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_oneSPEcnt_1);

\multiSPEcnt[1]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- multiSPEcnt_1 = DFFE(\wysi_counter|sload_path[1]\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[1]\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_multiSPEcnt_1);

\oneSPEcnt[2]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- oneSPEcnt_2 = DFFE(\wysi_counter|sload_path[2]~1\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[2]~1\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_oneSPEcnt_2);

\multiSPEcnt[2]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- multiSPEcnt_2 = DFFE(\wysi_counter|sload_path[2]\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[2]\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_multiSPEcnt_2);

\oneSPEcnt[3]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- oneSPEcnt_3 = DFFE(\wysi_counter|sload_path[3]~1\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|sload_path[3]~1\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_oneSPEcnt_3);

\multiSPEcnt[3]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- multiSPEcnt_3 = DFFE(\wysi_counter|sload_path[3]\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|sload_path[3]\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_multiSPEcnt_3);

\oneSPEcnt[4]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- oneSPEcnt_4 = DFFE(\wysi_counter|sload_path[4]~1\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[4]~1\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_oneSPEcnt_4);

\multiSPEcnt[4]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- multiSPEcnt_4 = DFFE(\wysi_counter|sload_path[4]\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[4]\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_multiSPEcnt_4);

\oneSPEcnt[5]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- oneSPEcnt_5 = DFFE(\wysi_counter|sload_path[5]~1\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[5]~1\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_oneSPEcnt_5);

\multiSPEcnt[5]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- multiSPEcnt_5 = DFFE(\wysi_counter|sload_path[5]\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|sload_path[5]\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_multiSPEcnt_5);

\oneSPEcnt[6]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- oneSPEcnt_6 = DFFE(\wysi_counter|sload_path[6]~1\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[6]~1\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_oneSPEcnt_6);

\multiSPEcnt[6]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- multiSPEcnt_6 = DFFE(\wysi_counter|sload_path[6]\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[6]\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_multiSPEcnt_6);

\oneSPEcnt[7]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- oneSPEcnt_7 = DFFE(\wysi_counter|sload_path[7]~1\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[7]~1\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_oneSPEcnt_7);

\multiSPEcnt[7]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- multiSPEcnt_7 = DFFE(\wysi_counter|sload_path[7]\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[7]\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_multiSPEcnt_7);

\multiSPEcnt[8]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- multiSPEcnt_8 = DFFE(\wysi_counter|sload_path[8]\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|sload_path[8]\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_multiSPEcnt_8);

\oneSPEcnt[8]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- oneSPEcnt_8 = DFFE(\wysi_counter|sload_path[8]~1\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[8]~1\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_oneSPEcnt_8);

\oneSPEcnt[9]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- oneSPEcnt_9 = DFFE(\wysi_counter|sload_path[9]~1\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|sload_path[9]~1\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_oneSPEcnt_9);

\multiSPEcnt[9]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- multiSPEcnt_9 = DFFE(\wysi_counter|sload_path[9]\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|sload_path[9]\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_multiSPEcnt_9);

\oneSPEcnt[10]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- oneSPEcnt_10 = DFFE(\wysi_counter|sload_path[10]~1\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[10]~1\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_oneSPEcnt_10);

\multiSPEcnt[10]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- multiSPEcnt_10 = DFFE(\wysi_counter|sload_path[10]\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[10]\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_multiSPEcnt_10);

\oneSPEcnt[11]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- oneSPEcnt_11 = DFFE(\wysi_counter|sload_path[11]~1\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[11]~1\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_oneSPEcnt_11);

\multiSPEcnt[11]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- multiSPEcnt_11 = DFFE(\wysi_counter|sload_path[11]\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[11]\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_multiSPEcnt_11);

\oneSPEcnt[12]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- oneSPEcnt_12 = DFFE(\wysi_counter|sload_path[12]~1\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[12]~1\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_oneSPEcnt_12);

\multiSPEcnt[12]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- multiSPEcnt_12 = DFFE(\wysi_counter|sload_path[12]\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[12]\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_multiSPEcnt_12);

\oneSPEcnt[13]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- oneSPEcnt_13 = DFFE(\wysi_counter|sload_path[13]~1\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[13]~1\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_oneSPEcnt_13);

\multiSPEcnt[13]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- multiSPEcnt_13 = DFFE(\wysi_counter|sload_path[13]\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[13]\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_multiSPEcnt_13);

\oneSPEcnt[14]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- oneSPEcnt_14 = DFFE(\wysi_counter|sload_path[14]~1\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|sload_path[14]~1\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_oneSPEcnt_14);

\multiSPEcnt[14]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- multiSPEcnt_14 = DFFE(\wysi_counter|sload_path[14]\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[14]\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_multiSPEcnt_14);

\oneSPEcnt[15]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- oneSPEcnt_15 = DFFE(\wysi_counter|sload_path[15]~1\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|sload_path[15]~1\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_oneSPEcnt_15);

\multiSPEcnt[15]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- multiSPEcnt_15 = DFFE(\wysi_counter|sload_path[15]\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[15]\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_multiSPEcnt_15);

\MultiSPE0~I\ : apex20ke_lcell 
-- Equation(s):
-- MultiSPE0 = DFFE(\MultiSPE~combout\, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_MultiSPE,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => MultiSPE0);

\MultiSPE1~I\ : apex20ke_lcell 
-- Equation(s):
-- MultiSPE1 = DFFE(MultiSPE0, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => MultiSPE0,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => MultiSPE1);

\OneSPE0~I\ : apex20ke_lcell 
-- Equation(s):
-- OneSPE0 = DFFE(\OneSPE~combout\, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_OneSPE,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => OneSPE0);

\OneSPE1~I\ : apex20ke_lcell 
-- Equation(s):
-- OneSPE1 = DFFE(OneSPE0, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => OneSPE0,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => OneSPE1);

\MultiSPE2~I\ : apex20ke_lcell 
-- Equation(s):
-- MultiSPE2 = DFFE(MultiSPE1, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => MultiSPE1,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => MultiSPE2);

\i19~I\ : apex20ke_lcell 
-- Equation(s):
-- i19 = !MultiSPE2 & MultiSPE1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3300",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => MultiSPE2,
	datad => MultiSPE1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i19);

\cntXms[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[0]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & !\cntXms[0]\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[0]~COUT\ = CARRY(\cntXms[0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	packed_mode => "false",
	lut_mask => "33CC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cntXms[0]\,
	datac => ww_GND_port,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[0]\,
	cout => \cntXms[0]~COUT\);

\cntXms[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[1]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[1]\ $ !\cntXms[0]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[1]~COUT\ = CARRY(!\cntXms[1]\ & !\cntXms[0]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C303",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cntXms[1]\,
	datac => ww_GND_port,
	cin => \cntXms[0]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[1]\,
	cout => \cntXms[1]~COUT\);

\cntXms[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[2]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[2]\ $ \cntXms[1]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[2]~COUT\ = CARRY(\cntXms[2]\ # !\cntXms[1]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5AAF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[2]\,
	datac => ww_GND_port,
	cin => \cntXms[1]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[2]\,
	cout => \cntXms[2]~COUT\);

\cntXms[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[3]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[3]\ $ !\cntXms[2]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[3]~COUT\ = CARRY(!\cntXms[3]\ & !\cntXms[2]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A505",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[3]\,
	datac => ww_GND_port,
	cin => \cntXms[2]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[3]\,
	cout => \cntXms[3]~COUT\);

\cntXms[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[4]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[4]\ $ \cntXms[3]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[4]~COUT\ = CARRY(\cntXms[4]\ # !\cntXms[3]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3CCF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cntXms[4]\,
	datac => ww_GND_port,
	cin => \cntXms[3]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[4]\,
	cout => \cntXms[4]~COUT\);

\cntXms[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[5]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[5]\ $ !\cntXms[4]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[5]~COUT\ = CARRY(!\cntXms[5]\ & !\cntXms[4]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C303",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cntXms[5]\,
	datac => ww_GND_port,
	cin => \cntXms[4]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[5]\,
	cout => \cntXms[5]~COUT\);

\cntXms[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[6]\ = DFFE((\i~0\ & command_4_local_8) # (!\i~0\ & \cntXms[6]\ $ \cntXms[5]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[6]~COUT\ = CARRY(\cntXms[6]\ # !\cntXms[5]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5AAF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[6]\,
	datac => ww_command_4_local_8,
	cin => \cntXms[5]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[6]\,
	cout => \cntXms[6]~COUT\);

\cntXms[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[7]\ = DFFE((\i~0\ & command_4_local_8) # (!\i~0\ & \cntXms[7]\ $ !\cntXms[6]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[7]~COUT\ = CARRY(\cntXms[7]\ & !\cntXms[6]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[7]\,
	datac => ww_command_4_local_8,
	cin => \cntXms[6]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[7]\,
	cout => \cntXms[7]~COUT\);

\cntXms[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[8]\ = DFFE((\i~0\ & command_4_local_8) # (!\i~0\ & \cntXms[8]\ $ \cntXms[7]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[8]~COUT\ = CARRY(\cntXms[8]\ # !\cntXms[7]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5AAF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[8]\,
	datac => ww_command_4_local_8,
	cin => \cntXms[7]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[8]\,
	cout => \cntXms[8]~COUT\);

\cntXms[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[9]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[9]\ $ !\cntXms[8]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[9]~COUT\ = CARRY(!\cntXms[9]\ & !\cntXms[8]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A505",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[9]\,
	datac => ww_GND_port,
	cin => \cntXms[8]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[9]\,
	cout => \cntXms[9]~COUT\);

\cntXms[10]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[10]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[10]\ $ \cntXms[9]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[10]~COUT\ = CARRY(!\cntXms[9]~COUT\ # !\cntXms[10]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[10]\,
	datac => ww_GND_port,
	cin => \cntXms[9]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[10]\,
	cout => \cntXms[10]~COUT\);

\cntXms[11]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[11]\ = DFFE((\i~0\ & command_4_local_8) # (!\i~0\ & \cntXms[11]\ $ !\cntXms[10]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[11]~COUT\ = CARRY(!\cntXms[11]\ & !\cntXms[10]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C303",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cntXms[11]\,
	datac => ww_command_4_local_8,
	cin => \cntXms[10]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[11]\,
	cout => \cntXms[11]~COUT\);

\cntXms[12]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[12]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[12]\ $ \cntXms[11]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[12]~COUT\ = CARRY(\cntXms[12]\ # !\cntXms[11]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5AAF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[12]\,
	datac => ww_GND_port,
	cin => \cntXms[11]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[12]\,
	cout => \cntXms[12]~COUT\);

\cntXms[13]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[13]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[13]\ $ !\cntXms[12]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[13]~COUT\ = CARRY(!\cntXms[13]\ & !\cntXms[12]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A505",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[13]\,
	datac => ww_GND_port,
	cin => \cntXms[12]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[13]\,
	cout => \cntXms[13]~COUT\);

\cntXms[14]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[14]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[14]\ $ \cntXms[13]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[14]~COUT\ = CARRY(\cntXms[14]\ # !\cntXms[13]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5AAF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[14]\,
	datac => ww_GND_port,
	cin => \cntXms[13]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[14]\,
	cout => \cntXms[14]~COUT\);

\cntXms[15]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[15]\ = DFFE((\i~0\ & command_4_local_8) # (!\i~0\ & \cntXms[15]\ $ !\cntXms[14]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[15]~COUT\ = CARRY(\cntXms[15]\ & !\cntXms[14]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cntXms[15]\,
	datac => ww_command_4_local_8,
	cin => \cntXms[14]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[15]\,
	cout => \cntXms[15]~COUT\);

\i~327_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~327\ = \cntXms[13]\ # \cntXms[14]\ # \cntXms[12]\ # !\cntXms[15]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFEF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[13]\,
	datab => \cntXms[14]\,
	datac => \cntXms[15]\,
	datad => \cntXms[12]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~327\);

\i~326_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~326\ = \cntXms[9]\ # \cntXms[11]\ # \cntXms[8]\ # !\cntXms[10]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFB",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[9]\,
	datab => \cntXms[10]\,
	datac => \cntXms[11]\,
	datad => \cntXms[8]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~326\);

\i~324_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~324\ = \cntXms[2]\ # \cntXms[1]\ # \cntXms[3]\ # \cntXms[0]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[2]\,
	datab => \cntXms[1]\,
	datac => \cntXms[3]\,
	datad => \cntXms[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~324\);

\i~325_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~325\ = \cntXms[5]\ # \cntXms[4]\ # \cntXms[6]\ # !\cntXms[7]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFB",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[5]\,
	datab => \cntXms[7]\,
	datac => \cntXms[4]\,
	datad => \cntXms[6]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~325\);

\i~328_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~328\ = \i~327\ # \i~326\ # \i~324\ # \i~325\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~327\,
	datab => \i~326\,
	datac => \i~324\,
	datad => \i~325\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~328\);

\cntXms[16]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[16]\ = DFFE((\i~0\ & command_4_local_8) # (!\i~0\ & \cntXms[16]\ $ \cntXms[15]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[16]~COUT\ = CARRY(\cntXms[16]\ # !\cntXms[15]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3CCF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cntXms[16]\,
	datac => ww_command_4_local_8,
	cin => \cntXms[15]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[16]\,
	cout => \cntXms[16]~COUT\);

\cntXms[17]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[17]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[17]\ $ !\cntXms[16]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[17]~COUT\ = CARRY(\cntXms[17]\ & !\cntXms[16]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cntXms[17]\,
	datac => ww_GND_port,
	cin => \cntXms[16]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[17]\,
	cout => \cntXms[17]~COUT\);

\cntXms[18]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[18]\ = DFFE((\i~0\ & command_4_local_8) # (!\i~0\ & \cntXms[18]\ $ \cntXms[17]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[18]~COUT\ = CARRY(!\cntXms[17]~COUT\ # !\cntXms[18]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cntXms[18]\,
	datac => ww_command_4_local_8,
	cin => \cntXms[17]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[18]\,
	cout => \cntXms[18]~COUT\);

\cntXms[19]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[19]\ = DFFE((\i~0\ & command_4_local_8) # (!\i~0\ & \cntXms[19]\ $ !\cntXms[18]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[19]~COUT\ = CARRY(\cntXms[19]\ & !\cntXms[18]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[19]\,
	datac => ww_command_4_local_8,
	cin => \cntXms[18]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[19]\,
	cout => \cntXms[19]~COUT\);

\cntXms[20]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[20]\ = DFFE((\i~0\ & command_4_local_8) # (!\i~0\ & \cntXms[20]\ $ \cntXms[19]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[20]~COUT\ = CARRY(!\cntXms[19]~COUT\ # !\cntXms[20]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cntXms[20]\,
	datac => ww_command_4_local_8,
	cin => \cntXms[19]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[20]\,
	cout => \cntXms[20]~COUT\);

\cntXms[21]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[21]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[21]\ $ !\cntXms[20]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[21]~COUT\ = CARRY(!\cntXms[21]\ & !\cntXms[20]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C303",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cntXms[21]\,
	datac => ww_GND_port,
	cin => \cntXms[20]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[21]\,
	cout => \cntXms[21]~COUT\);

\cntXms[22]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[22]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[22]\ $ \cntXms[21]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[22]~COUT\ = CARRY(\cntXms[22]\ # !\cntXms[21]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3CCF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cntXms[22]\,
	datac => ww_GND_port,
	cin => \cntXms[21]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[22]\,
	cout => \cntXms[22]~COUT\);

\cntXms[23]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[23]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[23]\ $ !\cntXms[22]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[23]~COUT\ = CARRY(!\cntXms[23]\ & !\cntXms[22]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A505",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[23]\,
	datac => ww_GND_port,
	cin => \cntXms[22]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[23]\,
	cout => \cntXms[23]~COUT\);

\i~330_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~330\ = \cntXms[22]\ # \cntXms[21]\ # \cntXms[23]\ # !\cntXms[20]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFEF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[22]\,
	datab => \cntXms[21]\,
	datac => \cntXms[20]\,
	datad => \cntXms[23]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~330\);

\cntXms[24]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[24]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[24]\ $ \cntXms[23]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[24]~COUT\ = CARRY(\cntXms[24]\ # !\cntXms[23]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5AAF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[24]\,
	datac => ww_GND_port,
	cin => \cntXms[23]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[24]\,
	cout => \cntXms[24]~COUT\);

\cntXms[25]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[25]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[25]\ $ !\cntXms[24]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[25]~COUT\ = CARRY(!\cntXms[25]\ & !\cntXms[24]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C303",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cntXms[25]\,
	datac => ww_GND_port,
	cin => \cntXms[24]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[25]\,
	cout => \cntXms[25]~COUT\);

\cntXms[26]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[26]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[26]\ $ \cntXms[25]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[26]~COUT\ = CARRY(\cntXms[26]\ # !\cntXms[25]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3CCF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cntXms[26]\,
	datac => ww_GND_port,
	cin => \cntXms[25]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[26]\,
	cout => \cntXms[26]~COUT\);

\cntXms[27]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[27]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[27]\ $ !\cntXms[26]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[27]~COUT\ = CARRY(!\cntXms[27]\ & !\cntXms[26]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C303",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cntXms[27]\,
	datac => ww_GND_port,
	cin => \cntXms[26]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[27]\,
	cout => \cntXms[27]~COUT\);

\i~331_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~331\ = \cntXms[27]\ # \cntXms[24]\ # \cntXms[26]\ # \cntXms[25]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[27]\,
	datab => \cntXms[24]\,
	datac => \cntXms[26]\,
	datad => \cntXms[25]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~331\);

\i~329_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~329\ = \cntXms[16]\ # !\cntXms[19]\ # !\cntXms[17]\ # !\cntXms[18]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F7FF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[18]\,
	datab => \cntXms[17]\,
	datac => \cntXms[16]\,
	datad => \cntXms[19]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~329\);

\cntXms[28]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[28]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[28]\ $ \cntXms[27]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[28]~COUT\ = CARRY(\cntXms[28]\ # !\cntXms[27]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3CCF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cntXms[28]\,
	datac => ww_GND_port,
	cin => \cntXms[27]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[28]\,
	cout => \cntXms[28]~COUT\);

\cntXms[29]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[29]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[29]\ $ !\cntXms[28]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[29]~COUT\ = CARRY(!\cntXms[29]\ & !\cntXms[28]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A505",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[29]\,
	datac => ww_GND_port,
	cin => \cntXms[28]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[29]\,
	cout => \cntXms[29]~COUT\);

\cntXms[30]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[30]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[30]\ $ \cntXms[29]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[30]~COUT\ = CARRY(\cntXms[30]\ # !\cntXms[29]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3CCF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cntXms[30]\,
	datac => ww_GND_port,
	cin => \cntXms[29]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[30]\,
	cout => \cntXms[30]~COUT\);

\cntXms[31]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[31]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[31]\ $ !\cntXms[30]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A5A5",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[31]\,
	datac => ww_GND_port,
	cin => \cntXms[30]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[31]\);

\i~332_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~332\ = \cntXms[29]\ # \cntXms[30]\ # \cntXms[31]\ # \cntXms[28]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[29]\,
	datab => \cntXms[30]\,
	datac => \cntXms[31]\,
	datad => \cntXms[28]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~332\);

\i~333_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~333\ = \i~330\ # \i~331\ # \i~329\ # \i~332\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~330\,
	datab => \i~331\,
	datac => \i~329\,
	datad => \i~332\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~333\);

\i~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~0\ = !\i~328\ & !\i~333\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "000F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \i~328\,
	datad => \i~333\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~0\);

\wysi_counter|counter_cell[0]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[0]\ = DFFE(!\i~0\ & i19 $ \wysi_counter|sload_path[0]\, GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[0]~COUT\ = CARRY(\wysi_counter|sload_path[0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "qfbk_counter",
	packed_mode => "false",
	lut_mask => "3CF0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => i19,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[0]\,
	cout => \wysi_counter|counter_cell[0]~COUT\);

\oneSPEcnt[0]~31_I\ : apex20ke_lcell 
-- Equation(s):
-- \oneSPEcnt[0]~31\ = !\i~328\ & !RST & !\i~333\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0003",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \i~328\,
	datac => ww_RST,
	datad => \i~333\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \oneSPEcnt[0]~31\);

\OneSPE2~I\ : apex20ke_lcell 
-- Equation(s):
-- OneSPE2 = DFFE(OneSPE1, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => OneSPE1,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => OneSPE2);

\i38~I\ : apex20ke_lcell 
-- Equation(s):
-- i38 = !OneSPE2 & OneSPE1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => OneSPE2,
	datad => OneSPE1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i38);

\wysi_counter|counter_cell[0]~1\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[0]~1\ = DFFE(!\i~0\ & i38 $ \wysi_counter|sload_path[0]~1\, GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[0]~COUT_1\ = CARRY(\wysi_counter|sload_path[0]~1\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "qfbk_counter",
	packed_mode => "false",
	lut_mask => "5AF0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i38,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[0]~1\,
	cout => \wysi_counter|counter_cell[0]~COUT_1\);

\wysi_counter|counter_cell[1]~1\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[1]~1\ = DFFE(!\i~0\ & \wysi_counter|sload_path[1]~1\ $ (i38 & \wysi_counter|counter_cell[0]~COUT_1\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[1]~COUT_1\ = CARRY(!\wysi_counter|counter_cell[0]~COUT_1\ # !\wysi_counter|sload_path[1]~1\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[1]~1\,
	datab => i38,
	cin => \wysi_counter|counter_cell[0]~COUT_1\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[1]~1\,
	cout => \wysi_counter|counter_cell[1]~COUT_1\);

\wysi_counter|counter_cell[1]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[1]\ = DFFE(!\i~0\ & \wysi_counter|sload_path[1]\ $ (i19 & \wysi_counter|counter_cell[0]~COUT\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[1]~COUT\ = CARRY(!\wysi_counter|counter_cell[0]~COUT\ # !\wysi_counter|sload_path[1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[1]\,
	datab => i19,
	cin => \wysi_counter|counter_cell[0]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[1]\,
	cout => \wysi_counter|counter_cell[1]~COUT\);

\wysi_counter|counter_cell[2]~1\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[2]~1\ = DFFE(!\i~0\ & \wysi_counter|sload_path[2]~1\ $ (i38 & !\wysi_counter|counter_cell[1]~COUT_1\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[2]~COUT_1\ = CARRY(\wysi_counter|sload_path[2]~1\ & !\wysi_counter|counter_cell[1]~COUT_1\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A60A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[2]~1\,
	datab => i38,
	cin => \wysi_counter|counter_cell[1]~COUT_1\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[2]~1\,
	cout => \wysi_counter|counter_cell[2]~COUT_1\);

\wysi_counter|counter_cell[2]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[2]\ = DFFE(!\i~0\ & \wysi_counter|sload_path[2]\ $ (i19 & !\wysi_counter|counter_cell[1]~COUT\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[2]~COUT\ = CARRY(\wysi_counter|sload_path[2]\ & !\wysi_counter|counter_cell[1]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C60C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i19,
	datab => \wysi_counter|sload_path[2]\,
	cin => \wysi_counter|counter_cell[1]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[2]\,
	cout => \wysi_counter|counter_cell[2]~COUT\);

\wysi_counter|counter_cell[3]~1\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[3]~1\ = DFFE(!\i~0\ & \wysi_counter|sload_path[3]~1\ $ (i38 & \wysi_counter|counter_cell[2]~COUT_1\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[3]~COUT_1\ = CARRY(!\wysi_counter|counter_cell[2]~COUT_1\ # !\wysi_counter|sload_path[3]~1\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i38,
	datab => \wysi_counter|sload_path[3]~1\,
	cin => \wysi_counter|counter_cell[2]~COUT_1\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[3]~1\,
	cout => \wysi_counter|counter_cell[3]~COUT_1\);

\wysi_counter|counter_cell[3]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[3]\ = DFFE(!\i~0\ & \wysi_counter|sload_path[3]\ $ (i19 & \wysi_counter|counter_cell[2]~COUT\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[3]~COUT\ = CARRY(!\wysi_counter|counter_cell[2]~COUT\ # !\wysi_counter|sload_path[3]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i19,
	datab => \wysi_counter|sload_path[3]\,
	cin => \wysi_counter|counter_cell[2]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[3]\,
	cout => \wysi_counter|counter_cell[3]~COUT\);

\wysi_counter|counter_cell[4]~1\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[4]~1\ = DFFE(!\i~0\ & \wysi_counter|sload_path[4]~1\ $ (i38 & !\wysi_counter|counter_cell[3]~COUT_1\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[4]~COUT_1\ = CARRY(\wysi_counter|sload_path[4]~1\ & !\wysi_counter|counter_cell[3]~COUT_1\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A60A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[4]~1\,
	datab => i38,
	cin => \wysi_counter|counter_cell[3]~COUT_1\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[4]~1\,
	cout => \wysi_counter|counter_cell[4]~COUT_1\);

\wysi_counter|counter_cell[4]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[4]\ = DFFE(!\i~0\ & \wysi_counter|sload_path[4]\ $ (i19 & !\wysi_counter|counter_cell[3]~COUT\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[4]~COUT\ = CARRY(\wysi_counter|sload_path[4]\ & !\wysi_counter|counter_cell[3]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A60A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[4]\,
	datab => i19,
	cin => \wysi_counter|counter_cell[3]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[4]\,
	cout => \wysi_counter|counter_cell[4]~COUT\);

\wysi_counter|counter_cell[5]~1\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[5]~1\ = DFFE(!\i~0\ & \wysi_counter|sload_path[5]~1\ $ (i38 & \wysi_counter|counter_cell[4]~COUT_1\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[5]~COUT_1\ = CARRY(!\wysi_counter|counter_cell[4]~COUT_1\ # !\wysi_counter|sload_path[5]~1\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i38,
	datab => \wysi_counter|sload_path[5]~1\,
	cin => \wysi_counter|counter_cell[4]~COUT_1\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[5]~1\,
	cout => \wysi_counter|counter_cell[5]~COUT_1\);

\wysi_counter|counter_cell[5]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[5]\ = DFFE(!\i~0\ & \wysi_counter|sload_path[5]\ $ (i19 & \wysi_counter|counter_cell[4]~COUT\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[5]~COUT\ = CARRY(!\wysi_counter|counter_cell[4]~COUT\ # !\wysi_counter|sload_path[5]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[5]\,
	datab => i19,
	cin => \wysi_counter|counter_cell[4]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[5]\,
	cout => \wysi_counter|counter_cell[5]~COUT\);

\wysi_counter|counter_cell[6]~1\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[6]~1\ = DFFE(!\i~0\ & \wysi_counter|sload_path[6]~1\ $ (i38 & !\wysi_counter|counter_cell[5]~COUT_1\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[6]~COUT_1\ = CARRY(\wysi_counter|sload_path[6]~1\ & !\wysi_counter|counter_cell[5]~COUT_1\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A60A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[6]~1\,
	datab => i38,
	cin => \wysi_counter|counter_cell[5]~COUT_1\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[6]~1\,
	cout => \wysi_counter|counter_cell[6]~COUT_1\);

\wysi_counter|counter_cell[6]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[6]\ = DFFE(!\i~0\ & \wysi_counter|sload_path[6]\ $ (i19 & !\wysi_counter|counter_cell[5]~COUT\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[6]~COUT\ = CARRY(\wysi_counter|sload_path[6]\ & !\wysi_counter|counter_cell[5]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C60C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i19,
	datab => \wysi_counter|sload_path[6]\,
	cin => \wysi_counter|counter_cell[5]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[6]\,
	cout => \wysi_counter|counter_cell[6]~COUT\);

\wysi_counter|counter_cell[7]~1\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[7]~1\ = DFFE(!\i~0\ & \wysi_counter|sload_path[7]~1\ $ (i38 & \wysi_counter|counter_cell[6]~COUT_1\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[7]~COUT_1\ = CARRY(!\wysi_counter|counter_cell[6]~COUT_1\ # !\wysi_counter|sload_path[7]~1\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[7]~1\,
	datab => i38,
	cin => \wysi_counter|counter_cell[6]~COUT_1\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[7]~1\,
	cout => \wysi_counter|counter_cell[7]~COUT_1\);

\wysi_counter|counter_cell[7]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[7]\ = DFFE(!\i~0\ & \wysi_counter|sload_path[7]\ $ (i19 & \wysi_counter|counter_cell[6]~COUT\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[7]~COUT\ = CARRY(!\wysi_counter|counter_cell[6]~COUT\ # !\wysi_counter|sload_path[7]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[7]\,
	datab => i19,
	cin => \wysi_counter|counter_cell[6]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[7]\,
	cout => \wysi_counter|counter_cell[7]~COUT\);

\wysi_counter|counter_cell[8]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[8]\ = DFFE(!\i~0\ & \wysi_counter|sload_path[8]\ $ (i19 & !\wysi_counter|counter_cell[7]~COUT\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[8]~COUT\ = CARRY(\wysi_counter|sload_path[8]\ & !\wysi_counter|counter_cell[7]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C60C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i19,
	datab => \wysi_counter|sload_path[8]\,
	cin => \wysi_counter|counter_cell[7]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[8]\,
	cout => \wysi_counter|counter_cell[8]~COUT\);

\wysi_counter|counter_cell[8]~1\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[8]~1\ = DFFE(!\i~0\ & \wysi_counter|sload_path[8]~1\ $ (i38 & !\wysi_counter|counter_cell[7]~COUT_1\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[8]~COUT_1\ = CARRY(\wysi_counter|sload_path[8]~1\ & !\wysi_counter|counter_cell[7]~COUT_1\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A60A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[8]~1\,
	datab => i38,
	cin => \wysi_counter|counter_cell[7]~COUT_1\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[8]~1\,
	cout => \wysi_counter|counter_cell[8]~COUT_1\);

\wysi_counter|counter_cell[9]~1\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[9]~1\ = DFFE(!\i~0\ & \wysi_counter|sload_path[9]~1\ $ (i38 & \wysi_counter|counter_cell[8]~COUT_1\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[9]~COUT_1\ = CARRY(!\wysi_counter|counter_cell[8]~COUT_1\ # !\wysi_counter|sload_path[9]~1\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i38,
	datab => \wysi_counter|sload_path[9]~1\,
	cin => \wysi_counter|counter_cell[8]~COUT_1\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[9]~1\,
	cout => \wysi_counter|counter_cell[9]~COUT_1\);

\wysi_counter|counter_cell[9]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[9]\ = DFFE(!\i~0\ & \wysi_counter|sload_path[9]\ $ (i19 & \wysi_counter|counter_cell[8]~COUT\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[9]~COUT\ = CARRY(!\wysi_counter|counter_cell[8]~COUT\ # !\wysi_counter|sload_path[9]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i19,
	datab => \wysi_counter|sload_path[9]\,
	cin => \wysi_counter|counter_cell[8]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[9]\,
	cout => \wysi_counter|counter_cell[9]~COUT\);

\wysi_counter|counter_cell[10]~1\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[10]~1\ = DFFE(!\i~0\ & \wysi_counter|sload_path[10]~1\ $ (i38 & !\wysi_counter|counter_cell[9]~COUT_1\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[10]~COUT_1\ = CARRY(\wysi_counter|sload_path[10]~1\ & !\wysi_counter|counter_cell[9]~COUT_1\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A60A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[10]~1\,
	datab => i38,
	cin => \wysi_counter|counter_cell[9]~COUT_1\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[10]~1\,
	cout => \wysi_counter|counter_cell[10]~COUT_1\);

\wysi_counter|counter_cell[10]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[10]\ = DFFE(!\i~0\ & \wysi_counter|sload_path[10]\ $ (i19 & !\wysi_counter|counter_cell[9]~COUT\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[10]~COUT\ = CARRY(\wysi_counter|sload_path[10]\ & !\wysi_counter|counter_cell[9]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A60A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[10]\,
	datab => i19,
	cin => \wysi_counter|counter_cell[9]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[10]\,
	cout => \wysi_counter|counter_cell[10]~COUT\);

\wysi_counter|counter_cell[11]~1\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[11]~1\ = DFFE(!\i~0\ & \wysi_counter|sload_path[11]~1\ $ (i38 & \wysi_counter|counter_cell[10]~COUT_1\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[11]~COUT_1\ = CARRY(!\wysi_counter|counter_cell[10]~COUT_1\ # !\wysi_counter|sload_path[11]~1\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[11]~1\,
	datab => i38,
	cin => \wysi_counter|counter_cell[10]~COUT_1\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[11]~1\,
	cout => \wysi_counter|counter_cell[11]~COUT_1\);

\wysi_counter|counter_cell[11]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[11]\ = DFFE(!\i~0\ & \wysi_counter|sload_path[11]\ $ (i19 & \wysi_counter|counter_cell[10]~COUT\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[11]~COUT\ = CARRY(!\wysi_counter|counter_cell[10]~COUT\ # !\wysi_counter|sload_path[11]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[11]\,
	datab => i19,
	cin => \wysi_counter|counter_cell[10]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[11]\,
	cout => \wysi_counter|counter_cell[11]~COUT\);

\wysi_counter|counter_cell[12]~1\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[12]~1\ = DFFE(!\i~0\ & \wysi_counter|sload_path[12]~1\ $ (i38 & !\wysi_counter|counter_cell[11]~COUT_1\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[12]~COUT_1\ = CARRY(\wysi_counter|sload_path[12]~1\ & !\wysi_counter|counter_cell[11]~COUT_1\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A60A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[12]~1\,
	datab => i38,
	cin => \wysi_counter|counter_cell[11]~COUT_1\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[12]~1\,
	cout => \wysi_counter|counter_cell[12]~COUT_1\);

\wysi_counter|counter_cell[12]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[12]\ = DFFE(!\i~0\ & \wysi_counter|sload_path[12]\ $ (i19 & !\wysi_counter|counter_cell[11]~COUT\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[12]~COUT\ = CARRY(\wysi_counter|sload_path[12]\ & !\wysi_counter|counter_cell[11]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C60C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i19,
	datab => \wysi_counter|sload_path[12]\,
	cin => \wysi_counter|counter_cell[11]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[12]\,
	cout => \wysi_counter|counter_cell[12]~COUT\);

\wysi_counter|counter_cell[13]~1\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[13]~1\ = DFFE(!\i~0\ & \wysi_counter|sload_path[13]~1\ $ (i38 & \wysi_counter|counter_cell[12]~COUT_1\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[13]~COUT_1\ = CARRY(!\wysi_counter|counter_cell[12]~COUT_1\ # !\wysi_counter|sload_path[13]~1\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[13]~1\,
	datab => i38,
	cin => \wysi_counter|counter_cell[12]~COUT_1\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[13]~1\,
	cout => \wysi_counter|counter_cell[13]~COUT_1\);

\wysi_counter|counter_cell[13]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[13]\ = DFFE(!\i~0\ & \wysi_counter|sload_path[13]\ $ (i19 & \wysi_counter|counter_cell[12]~COUT\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[13]~COUT\ = CARRY(!\wysi_counter|counter_cell[12]~COUT\ # !\wysi_counter|sload_path[13]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i19,
	datab => \wysi_counter|sload_path[13]\,
	cin => \wysi_counter|counter_cell[12]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[13]\,
	cout => \wysi_counter|counter_cell[13]~COUT\);

\wysi_counter|counter_cell[14]~1\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[14]~1\ = DFFE(!\i~0\ & \wysi_counter|sload_path[14]~1\ $ (i38 & !\wysi_counter|counter_cell[13]~COUT_1\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[14]~COUT_1\ = CARRY(\wysi_counter|sload_path[14]~1\ & !\wysi_counter|counter_cell[13]~COUT_1\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C60C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i38,
	datab => \wysi_counter|sload_path[14]~1\,
	cin => \wysi_counter|counter_cell[13]~COUT_1\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[14]~1\,
	cout => \wysi_counter|counter_cell[14]~COUT_1\);

\wysi_counter|counter_cell[14]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[14]\ = DFFE(!\i~0\ & \wysi_counter|sload_path[14]\ $ (i19 & !\wysi_counter|counter_cell[13]~COUT\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[14]~COUT\ = CARRY(\wysi_counter|sload_path[14]\ & !\wysi_counter|counter_cell[13]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A60A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[14]\,
	datab => i19,
	cin => \wysi_counter|counter_cell[13]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[14]\,
	cout => \wysi_counter|counter_cell[14]~COUT\);

\wysi_counter|counter_cell[15]~1\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[15]~1\ = DFFE(!\i~0\ & \wysi_counter|sload_path[15]~1\ $ (i38 & \wysi_counter|counter_cell[14]~COUT_1\), GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5FA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i38,
	datad => \wysi_counter|sload_path[15]~1\,
	cin => \wysi_counter|counter_cell[14]~COUT_1\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[15]~1\);

\wysi_counter|counter_cell[15]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[15]\ = DFFE(!\i~0\ & \wysi_counter|sload_path[15]\ $ (i19 & \wysi_counter|counter_cell[14]~COUT\), GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3FC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => i19,
	datad => \wysi_counter|sload_path[15]\,
	cin => \wysi_counter|counter_cell[14]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[15]\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	hit_counter_ff IS
    PORT (
	CLK : IN std_logic;
	FE_TEST_PULSE : IN std_logic;
	RST : IN std_logic;
	command_4_local_8 : IN std_logic;
	command_4_local_12 : IN std_logic;
	command_4_local_13 : IN std_logic;
	command_4_local_14 : IN std_logic;
	command_4_local_15 : IN std_logic;
	GND_port : IN std_logic;
	OneSPE : IN std_logic;
	MultiSPE : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	multiSPEcnt_0 : OUT std_logic;
	oneSPEcnt_0 : OUT std_logic;
	multiSPEcnt_1 : OUT std_logic;
	oneSPEcnt_1 : OUT std_logic;
	multiSPEcnt_2 : OUT std_logic;
	oneSPEcnt_2 : OUT std_logic;
	multiSPEcnt_3 : OUT std_logic;
	oneSPEcnt_3 : OUT std_logic;
	multiSPEcnt_4 : OUT std_logic;
	oneSPEcnt_4 : OUT std_logic;
	multiSPEcnt_5 : OUT std_logic;
	oneSPEcnt_5 : OUT std_logic;
	multiSPEcnt_6 : OUT std_logic;
	oneSPEcnt_6 : OUT std_logic;
	multiSPEcnt_7 : OUT std_logic;
	oneSPEcnt_7 : OUT std_logic;
	oneSPEcnt_8 : OUT std_logic;
	multiSPEcnt_8 : OUT std_logic;
	multiSPEcnt_9 : OUT std_logic;
	oneSPEcnt_9 : OUT std_logic;
	multiSPEcnt_10 : OUT std_logic;
	oneSPEcnt_10 : OUT std_logic;
	multiSPEcnt_11 : OUT std_logic;
	oneSPEcnt_11 : OUT std_logic;
	multiSPEcnt_12 : OUT std_logic;
	oneSPEcnt_12 : OUT std_logic;
	multiSPEcnt_13 : OUT std_logic;
	oneSPEcnt_13 : OUT std_logic;
	multiSPEcnt_14 : OUT std_logic;
	oneSPEcnt_14 : OUT std_logic;
	multiSPEcnt_15 : OUT std_logic;
	oneSPEcnt_15 : OUT std_logic
	);
END hit_counter_ff;

ARCHITECTURE structure OF hit_counter_ff IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK : std_logic;
SIGNAL ww_FE_TEST_PULSE : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_command_4_local_8 : std_logic;
SIGNAL ww_command_4_local_12 : std_logic;
SIGNAL ww_command_4_local_13 : std_logic;
SIGNAL ww_command_4_local_14 : std_logic;
SIGNAL ww_command_4_local_15 : std_logic;
SIGNAL ww_GND_port : std_logic;
SIGNAL ww_OneSPE : std_logic;
SIGNAL ww_MultiSPE : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_multiSPEcnt_0 : std_logic;
SIGNAL ww_oneSPEcnt_0 : std_logic;
SIGNAL ww_multiSPEcnt_1 : std_logic;
SIGNAL ww_oneSPEcnt_1 : std_logic;
SIGNAL ww_multiSPEcnt_2 : std_logic;
SIGNAL ww_oneSPEcnt_2 : std_logic;
SIGNAL ww_multiSPEcnt_3 : std_logic;
SIGNAL ww_oneSPEcnt_3 : std_logic;
SIGNAL ww_multiSPEcnt_4 : std_logic;
SIGNAL ww_oneSPEcnt_4 : std_logic;
SIGNAL ww_multiSPEcnt_5 : std_logic;
SIGNAL ww_oneSPEcnt_5 : std_logic;
SIGNAL ww_multiSPEcnt_6 : std_logic;
SIGNAL ww_oneSPEcnt_6 : std_logic;
SIGNAL ww_multiSPEcnt_7 : std_logic;
SIGNAL ww_oneSPEcnt_7 : std_logic;
SIGNAL ww_oneSPEcnt_8 : std_logic;
SIGNAL ww_multiSPEcnt_8 : std_logic;
SIGNAL ww_multiSPEcnt_9 : std_logic;
SIGNAL ww_oneSPEcnt_9 : std_logic;
SIGNAL ww_multiSPEcnt_10 : std_logic;
SIGNAL ww_oneSPEcnt_10 : std_logic;
SIGNAL ww_multiSPEcnt_11 : std_logic;
SIGNAL ww_oneSPEcnt_11 : std_logic;
SIGNAL ww_multiSPEcnt_12 : std_logic;
SIGNAL ww_oneSPEcnt_12 : std_logic;
SIGNAL ww_multiSPEcnt_13 : std_logic;
SIGNAL ww_oneSPEcnt_13 : std_logic;
SIGNAL ww_multiSPEcnt_14 : std_logic;
SIGNAL ww_oneSPEcnt_14 : std_logic;
SIGNAL ww_multiSPEcnt_15 : std_logic;
SIGNAL ww_oneSPEcnt_15 : std_logic;
SIGNAL FE_pulse_local : std_logic;
SIGNAL \MultiSPEreset_cnt[0]\ : std_logic;
SIGNAL \i~581\ : std_logic;
SIGNAL \MultiSPEreset_cnt[0]~COUT\ : std_logic;
SIGNAL \MultiSPEreset_cnt[1]\ : std_logic;
SIGNAL \MultiSPEreset_cnt[1]~COUT\ : std_logic;
SIGNAL \MultiSPEreset_cnt[2]\ : std_logic;
SIGNAL \MultiSPEreset_cnt[2]~COUT\ : std_logic;
SIGNAL \MultiSPEreset_cnt[3]\ : std_logic;
SIGNAL \MultiSPEreset_cnt[3]~COUT\ : std_logic;
SIGNAL \MultiSPEreset_cnt[4]\ : std_logic;
SIGNAL \MultiSPEreset_cnt[4]~COUT\ : std_logic;
SIGNAL \MultiSPEreset_cnt[5]\ : std_logic;
SIGNAL \MultiSPEreset_cnt[5]~COUT\ : std_logic;
SIGNAL \MultiSPEreset_cnt[6]\ : std_logic;
SIGNAL \MultiSPEreset_cnt[6]~COUT\ : std_logic;
SIGNAL \MultiSPEreset_cnt[7]\ : std_logic;
SIGNAL \MultiSPEreset_cnt[7]~COUT\ : std_logic;
SIGNAL \MultiSPEreset_cnt[8]\ : std_logic;
SIGNAL \i~50\ : std_logic;
SIGNAL \i~51\ : std_logic;
SIGNAL \i~48\ : std_logic;
SIGNAL \i~49\ : std_logic;
SIGNAL \MultiSPEreset_cnt[8]~COUT\ : std_logic;
SIGNAL \MultiSPEreset_cnt[9]\ : std_logic;
SIGNAL \MultiSPEreset_cnt[9]~COUT\ : std_logic;
SIGNAL \MultiSPEreset_cnt[10]\ : std_logic;
SIGNAL \MultiSPEreset_cnt[10]~COUT\ : std_logic;
SIGNAL \MultiSPEreset_cnt[11]\ : std_logic;
SIGNAL \i~579\ : std_logic;
SIGNAL \i~580\ : std_logic;
SIGNAL \i~46\ : std_logic;
SIGNAL \i~47\ : std_logic;
SIGNAL MultiSPErst : std_logic;
SIGNAL MultiSPE_latch : std_logic;
SIGNAL MultiSPE0 : std_logic;
SIGNAL MultiSPE1 : std_logic;
SIGNAL MultiSPE2 : std_logic;
SIGNAL i19 : std_logic;
SIGNAL \cntXms[0]\ : std_logic;
SIGNAL \cntXms[0]~COUT\ : std_logic;
SIGNAL \cntXms[1]\ : std_logic;
SIGNAL \cntXms[1]~COUT\ : std_logic;
SIGNAL \cntXms[2]\ : std_logic;
SIGNAL \cntXms[2]~COUT\ : std_logic;
SIGNAL \cntXms[3]\ : std_logic;
SIGNAL \i~569\ : std_logic;
SIGNAL \cntXms[3]~COUT\ : std_logic;
SIGNAL \cntXms[4]\ : std_logic;
SIGNAL \cntXms[4]~COUT\ : std_logic;
SIGNAL \cntXms[5]\ : std_logic;
SIGNAL \cntXms[5]~COUT\ : std_logic;
SIGNAL \cntXms[6]\ : std_logic;
SIGNAL \cntXms[6]~COUT\ : std_logic;
SIGNAL \cntXms[7]\ : std_logic;
SIGNAL \i~570\ : std_logic;
SIGNAL \cntXms[7]~COUT\ : std_logic;
SIGNAL \cntXms[8]\ : std_logic;
SIGNAL \cntXms[8]~COUT\ : std_logic;
SIGNAL \cntXms[9]\ : std_logic;
SIGNAL \cntXms[9]~COUT\ : std_logic;
SIGNAL \cntXms[10]\ : std_logic;
SIGNAL \cntXms[10]~COUT\ : std_logic;
SIGNAL \cntXms[11]\ : std_logic;
SIGNAL \i~571\ : std_logic;
SIGNAL \cntXms[11]~COUT\ : std_logic;
SIGNAL \cntXms[12]\ : std_logic;
SIGNAL \cntXms[12]~COUT\ : std_logic;
SIGNAL \cntXms[13]\ : std_logic;
SIGNAL \cntXms[13]~COUT\ : std_logic;
SIGNAL \cntXms[14]\ : std_logic;
SIGNAL \cntXms[14]~COUT\ : std_logic;
SIGNAL \cntXms[15]\ : std_logic;
SIGNAL \i~572\ : std_logic;
SIGNAL \i~573\ : std_logic;
SIGNAL \cntXms[15]~COUT\ : std_logic;
SIGNAL \cntXms[16]\ : std_logic;
SIGNAL \cntXms[16]~COUT\ : std_logic;
SIGNAL \cntXms[17]\ : std_logic;
SIGNAL \cntXms[17]~COUT\ : std_logic;
SIGNAL \cntXms[18]\ : std_logic;
SIGNAL \cntXms[18]~COUT\ : std_logic;
SIGNAL \cntXms[19]\ : std_logic;
SIGNAL \cntXms[19]~COUT\ : std_logic;
SIGNAL \cntXms[20]\ : std_logic;
SIGNAL \cntXms[20]~COUT\ : std_logic;
SIGNAL \cntXms[21]\ : std_logic;
SIGNAL \cntXms[21]~COUT\ : std_logic;
SIGNAL \cntXms[22]\ : std_logic;
SIGNAL \cntXms[22]~COUT\ : std_logic;
SIGNAL \cntXms[23]\ : std_logic;
SIGNAL \i~575\ : std_logic;
SIGNAL \cntXms[23]~COUT\ : std_logic;
SIGNAL \cntXms[24]\ : std_logic;
SIGNAL \cntXms[24]~COUT\ : std_logic;
SIGNAL \cntXms[25]\ : std_logic;
SIGNAL \cntXms[25]~COUT\ : std_logic;
SIGNAL \cntXms[26]\ : std_logic;
SIGNAL \cntXms[26]~COUT\ : std_logic;
SIGNAL \cntXms[27]\ : std_logic;
SIGNAL \i~576\ : std_logic;
SIGNAL \i~574\ : std_logic;
SIGNAL \cntXms[27]~COUT\ : std_logic;
SIGNAL \cntXms[28]\ : std_logic;
SIGNAL \cntXms[28]~COUT\ : std_logic;
SIGNAL \cntXms[29]\ : std_logic;
SIGNAL \cntXms[29]~COUT\ : std_logic;
SIGNAL \cntXms[30]\ : std_logic;
SIGNAL \cntXms[30]~COUT\ : std_logic;
SIGNAL \cntXms[31]\ : std_logic;
SIGNAL \i~577\ : std_logic;
SIGNAL \i~578\ : std_logic;
SIGNAL \i~0\ : std_logic;
SIGNAL \wysi_counter|sload_path[0]\ : std_logic;
SIGNAL \oneSPEcnt[0]~31\ : std_logic;
SIGNAL \OneSPEreset_cnt[0]\ : std_logic;
SIGNAL \i~584\ : std_logic;
SIGNAL \OneSPEreset_cnt[0]~COUT\ : std_logic;
SIGNAL \OneSPEreset_cnt[1]\ : std_logic;
SIGNAL \OneSPEreset_cnt[1]~COUT\ : std_logic;
SIGNAL \OneSPEreset_cnt[2]\ : std_logic;
SIGNAL \i~42\ : std_logic;
SIGNAL \OneSPEreset_cnt[2]~COUT\ : std_logic;
SIGNAL \OneSPEreset_cnt[3]\ : std_logic;
SIGNAL \OneSPEreset_cnt[3]~COUT\ : std_logic;
SIGNAL \OneSPEreset_cnt[4]\ : std_logic;
SIGNAL \i~43\ : std_logic;
SIGNAL \OneSPEreset_cnt[4]~COUT\ : std_logic;
SIGNAL \OneSPEreset_cnt[5]\ : std_logic;
SIGNAL \OneSPEreset_cnt[5]~COUT\ : std_logic;
SIGNAL \OneSPEreset_cnt[6]\ : std_logic;
SIGNAL \OneSPEreset_cnt[6]~COUT\ : std_logic;
SIGNAL \OneSPEreset_cnt[7]\ : std_logic;
SIGNAL \OneSPEreset_cnt[7]~COUT\ : std_logic;
SIGNAL \OneSPEreset_cnt[8]\ : std_logic;
SIGNAL \i~44\ : std_logic;
SIGNAL \i~45\ : std_logic;
SIGNAL \i~40\ : std_logic;
SIGNAL \OneSPEreset_cnt[8]~COUT\ : std_logic;
SIGNAL \OneSPEreset_cnt[9]\ : std_logic;
SIGNAL \OneSPEreset_cnt[9]~COUT\ : std_logic;
SIGNAL \OneSPEreset_cnt[10]\ : std_logic;
SIGNAL \OneSPEreset_cnt[10]~COUT\ : std_logic;
SIGNAL \OneSPEreset_cnt[11]\ : std_logic;
SIGNAL \i~582\ : std_logic;
SIGNAL \i~583\ : std_logic;
SIGNAL \i~41\ : std_logic;
SIGNAL OneSPErst : std_logic;
SIGNAL OneSPE_latch : std_logic;
SIGNAL OneSPE0 : std_logic;
SIGNAL OneSPE1 : std_logic;
SIGNAL OneSPE2 : std_logic;
SIGNAL i38 : std_logic;
SIGNAL \wysi_counter|sload_path[0]~1\ : std_logic;
SIGNAL \wysi_counter|counter_cell[0]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[1]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[0]~COUT_1\ : std_logic;
SIGNAL \wysi_counter|sload_path[1]~1\ : std_logic;
SIGNAL \wysi_counter|counter_cell[1]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[2]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[1]~COUT_1\ : std_logic;
SIGNAL \wysi_counter|sload_path[2]~1\ : std_logic;
SIGNAL \wysi_counter|counter_cell[2]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[3]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[2]~COUT_1\ : std_logic;
SIGNAL \wysi_counter|sload_path[3]~1\ : std_logic;
SIGNAL \wysi_counter|counter_cell[3]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[4]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[3]~COUT_1\ : std_logic;
SIGNAL \wysi_counter|sload_path[4]~1\ : std_logic;
SIGNAL \wysi_counter|counter_cell[4]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[5]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[4]~COUT_1\ : std_logic;
SIGNAL \wysi_counter|sload_path[5]~1\ : std_logic;
SIGNAL \wysi_counter|counter_cell[5]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[6]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[5]~COUT_1\ : std_logic;
SIGNAL \wysi_counter|sload_path[6]~1\ : std_logic;
SIGNAL \wysi_counter|counter_cell[6]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[7]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[6]~COUT_1\ : std_logic;
SIGNAL \wysi_counter|sload_path[7]~1\ : std_logic;
SIGNAL \wysi_counter|counter_cell[7]~COUT_1\ : std_logic;
SIGNAL \wysi_counter|sload_path[8]~1\ : std_logic;
SIGNAL \wysi_counter|counter_cell[7]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[8]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[8]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[9]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[8]~COUT_1\ : std_logic;
SIGNAL \wysi_counter|sload_path[9]~1\ : std_logic;
SIGNAL \wysi_counter|counter_cell[9]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[10]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[9]~COUT_1\ : std_logic;
SIGNAL \wysi_counter|sload_path[10]~1\ : std_logic;
SIGNAL \wysi_counter|counter_cell[10]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[11]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[10]~COUT_1\ : std_logic;
SIGNAL \wysi_counter|sload_path[11]~1\ : std_logic;
SIGNAL \wysi_counter|counter_cell[11]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[12]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[11]~COUT_1\ : std_logic;
SIGNAL \wysi_counter|sload_path[12]~1\ : std_logic;
SIGNAL \wysi_counter|counter_cell[12]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[13]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[12]~COUT_1\ : std_logic;
SIGNAL \wysi_counter|sload_path[13]~1\ : std_logic;
SIGNAL \wysi_counter|counter_cell[13]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[14]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[13]~COUT_1\ : std_logic;
SIGNAL \wysi_counter|sload_path[14]~1\ : std_logic;
SIGNAL \wysi_counter|counter_cell[14]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[15]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[14]~COUT_1\ : std_logic;
SIGNAL \wysi_counter|sload_path[15]~1\ : std_logic;
SIGNAL ALT_NOT_ww_RST : std_logic;
SIGNAL ALT_NOT_MultiSPE_latch : std_logic;
SIGNAL ALT_NOT_OneSPE_latch : std_logic;
SIGNAL ALT_NOT_MultiSPErst : std_logic;
SIGNAL ALT_NOT_OneSPErst : std_logic;

BEGIN

ww_CLK <= CLK;
ww_FE_TEST_PULSE <= FE_TEST_PULSE;
ww_RST <= RST;
ww_command_4_local_8 <= command_4_local_8;
ww_command_4_local_12 <= command_4_local_12;
ww_command_4_local_13 <= command_4_local_13;
ww_command_4_local_14 <= command_4_local_14;
ww_command_4_local_15 <= command_4_local_15;
ww_GND_port <= GND_port;
ww_OneSPE <= OneSPE;
ww_MultiSPE <= MultiSPE;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
multiSPEcnt_0 <= ww_multiSPEcnt_0;
oneSPEcnt_0 <= ww_oneSPEcnt_0;
multiSPEcnt_1 <= ww_multiSPEcnt_1;
oneSPEcnt_1 <= ww_oneSPEcnt_1;
multiSPEcnt_2 <= ww_multiSPEcnt_2;
oneSPEcnt_2 <= ww_oneSPEcnt_2;
multiSPEcnt_3 <= ww_multiSPEcnt_3;
oneSPEcnt_3 <= ww_oneSPEcnt_3;
multiSPEcnt_4 <= ww_multiSPEcnt_4;
oneSPEcnt_4 <= ww_oneSPEcnt_4;
multiSPEcnt_5 <= ww_multiSPEcnt_5;
oneSPEcnt_5 <= ww_oneSPEcnt_5;
multiSPEcnt_6 <= ww_multiSPEcnt_6;
oneSPEcnt_6 <= ww_oneSPEcnt_6;
multiSPEcnt_7 <= ww_multiSPEcnt_7;
oneSPEcnt_7 <= ww_oneSPEcnt_7;
oneSPEcnt_8 <= ww_oneSPEcnt_8;
multiSPEcnt_8 <= ww_multiSPEcnt_8;
multiSPEcnt_9 <= ww_multiSPEcnt_9;
oneSPEcnt_9 <= ww_oneSPEcnt_9;
multiSPEcnt_10 <= ww_multiSPEcnt_10;
oneSPEcnt_10 <= ww_oneSPEcnt_10;
multiSPEcnt_11 <= ww_multiSPEcnt_11;
oneSPEcnt_11 <= ww_oneSPEcnt_11;
multiSPEcnt_12 <= ww_multiSPEcnt_12;
oneSPEcnt_12 <= ww_oneSPEcnt_12;
multiSPEcnt_13 <= ww_multiSPEcnt_13;
oneSPEcnt_13 <= ww_oneSPEcnt_13;
multiSPEcnt_14 <= ww_multiSPEcnt_14;
oneSPEcnt_14 <= ww_oneSPEcnt_14;
multiSPEcnt_15 <= ww_multiSPEcnt_15;
oneSPEcnt_15 <= ww_oneSPEcnt_15;
ALT_NOT_ww_RST <= NOT ww_RST;
ALT_NOT_MultiSPE_latch <= NOT MultiSPE_latch;
ALT_NOT_OneSPE_latch <= NOT OneSPE_latch;
ALT_NOT_MultiSPErst <= NOT MultiSPErst;
ALT_NOT_OneSPErst <= NOT OneSPErst;

\multiSPEcnt[0]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- multiSPEcnt_0 = DFFE(\wysi_counter|sload_path[0]\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[0]\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_multiSPEcnt_0);

\oneSPEcnt[0]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- oneSPEcnt_0 = DFFE(\wysi_counter|sload_path[0]~1\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[0]~1\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_oneSPEcnt_0);

\multiSPEcnt[1]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- multiSPEcnt_1 = DFFE(\wysi_counter|sload_path[1]\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|sload_path[1]\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_multiSPEcnt_1);

\oneSPEcnt[1]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- oneSPEcnt_1 = DFFE(\wysi_counter|sload_path[1]~1\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|sload_path[1]~1\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_oneSPEcnt_1);

\multiSPEcnt[2]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- multiSPEcnt_2 = DFFE(\wysi_counter|sload_path[2]\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[2]\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_multiSPEcnt_2);

\oneSPEcnt[2]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- oneSPEcnt_2 = DFFE(\wysi_counter|sload_path[2]~1\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[2]~1\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_oneSPEcnt_2);

\multiSPEcnt[3]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- multiSPEcnt_3 = DFFE(\wysi_counter|sload_path[3]\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|sload_path[3]\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_multiSPEcnt_3);

\oneSPEcnt[3]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- oneSPEcnt_3 = DFFE(\wysi_counter|sload_path[3]~1\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|sload_path[3]~1\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_oneSPEcnt_3);

\multiSPEcnt[4]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- multiSPEcnt_4 = DFFE(\wysi_counter|sload_path[4]\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[4]\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_multiSPEcnt_4);

\oneSPEcnt[4]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- oneSPEcnt_4 = DFFE(\wysi_counter|sload_path[4]~1\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|sload_path[4]~1\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_oneSPEcnt_4);

\multiSPEcnt[5]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- multiSPEcnt_5 = DFFE(\wysi_counter|sload_path[5]\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[5]\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_multiSPEcnt_5);

\oneSPEcnt[5]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- oneSPEcnt_5 = DFFE(\wysi_counter|sload_path[5]~1\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[5]~1\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_oneSPEcnt_5);

\multiSPEcnt[6]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- multiSPEcnt_6 = DFFE(\wysi_counter|sload_path[6]\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|sload_path[6]\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_multiSPEcnt_6);

\oneSPEcnt[6]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- oneSPEcnt_6 = DFFE(\wysi_counter|sload_path[6]~1\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|sload_path[6]~1\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_oneSPEcnt_6);

\multiSPEcnt[7]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- multiSPEcnt_7 = DFFE(\wysi_counter|sload_path[7]\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[7]\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_multiSPEcnt_7);

\oneSPEcnt[7]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- oneSPEcnt_7 = DFFE(\wysi_counter|sload_path[7]~1\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|sload_path[7]~1\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_oneSPEcnt_7);

\oneSPEcnt[8]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- oneSPEcnt_8 = DFFE(\wysi_counter|sload_path[8]~1\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|sload_path[8]~1\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_oneSPEcnt_8);

\multiSPEcnt[8]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- multiSPEcnt_8 = DFFE(\wysi_counter|sload_path[8]\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|sload_path[8]\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_multiSPEcnt_8);

\multiSPEcnt[9]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- multiSPEcnt_9 = DFFE(\wysi_counter|sload_path[9]\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[9]\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_multiSPEcnt_9);

\oneSPEcnt[9]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- oneSPEcnt_9 = DFFE(\wysi_counter|sload_path[9]~1\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|sload_path[9]~1\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_oneSPEcnt_9);

\multiSPEcnt[10]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- multiSPEcnt_10 = DFFE(\wysi_counter|sload_path[10]\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[10]\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_multiSPEcnt_10);

\oneSPEcnt[10]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- oneSPEcnt_10 = DFFE(\wysi_counter|sload_path[10]~1\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|sload_path[10]~1\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_oneSPEcnt_10);

\multiSPEcnt[11]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- multiSPEcnt_11 = DFFE(\wysi_counter|sload_path[11]\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[11]\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_multiSPEcnt_11);

\oneSPEcnt[11]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- oneSPEcnt_11 = DFFE(\wysi_counter|sload_path[11]~1\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|sload_path[11]~1\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_oneSPEcnt_11);

\multiSPEcnt[12]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- multiSPEcnt_12 = DFFE(\wysi_counter|sload_path[12]\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[12]\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_multiSPEcnt_12);

\oneSPEcnt[12]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- oneSPEcnt_12 = DFFE(\wysi_counter|sload_path[12]~1\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|sload_path[12]~1\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_oneSPEcnt_12);

\multiSPEcnt[13]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- multiSPEcnt_13 = DFFE(\wysi_counter|sload_path[13]\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[13]\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_multiSPEcnt_13);

\oneSPEcnt[13]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- oneSPEcnt_13 = DFFE(\wysi_counter|sload_path[13]~1\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|sload_path[13]~1\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_oneSPEcnt_13);

\multiSPEcnt[14]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- multiSPEcnt_14 = DFFE(\wysi_counter|sload_path[14]\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[14]\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_multiSPEcnt_14);

\oneSPEcnt[14]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- oneSPEcnt_14 = DFFE(\wysi_counter|sload_path[14]~1\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|sload_path[14]~1\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_oneSPEcnt_14);

\multiSPEcnt[15]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- multiSPEcnt_15 = DFFE(\wysi_counter|sload_path[15]\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[15]\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_multiSPEcnt_15);

\oneSPEcnt[15]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- oneSPEcnt_15 = DFFE(\wysi_counter|sload_path[15]~1\, GLOBAL(outclock0), , , \oneSPEcnt[0]~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[15]~1\,
	clk => ww_CLK,
	ena => \oneSPEcnt[0]~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_oneSPEcnt_15);

\FE_pulse_local~I\ : apex20ke_lcell 
-- Equation(s):
-- FE_pulse_local = DFFE(FE_TEST_PULSE, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_FE_TEST_PULSE,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => FE_pulse_local);

\MultiSPEreset_cnt[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \MultiSPEreset_cnt[0]\ = DFFE((!MultiSPE_latch & \~GND\) # (MultiSPE_latch & !\MultiSPEreset_cnt[0]\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \MultiSPEreset_cnt[0]~COUT\ = CARRY(!\MultiSPEreset_cnt[0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	packed_mode => "false",
	lut_mask => "5555",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \MultiSPEreset_cnt[0]\,
	datac => ww_GND_port,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => ALT_NOT_MultiSPE_latch,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \MultiSPEreset_cnt[0]\,
	cout => \MultiSPEreset_cnt[0]~COUT\);

\i~581_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~581\ = command_4_local_13 & command_4_local_12 & !\MultiSPEreset_cnt[0]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00C0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_command_4_local_13,
	datac => ww_command_4_local_12,
	datad => \MultiSPEreset_cnt[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~581\);

\MultiSPEreset_cnt[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \MultiSPEreset_cnt[1]\ = DFFE((!MultiSPE_latch & \~GND\) # (MultiSPE_latch & \MultiSPEreset_cnt[1]\ $ \MultiSPEreset_cnt[0]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \MultiSPEreset_cnt[1]~COUT\ = CARRY(!\MultiSPEreset_cnt[0]~COUT\ # !\MultiSPEreset_cnt[1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \MultiSPEreset_cnt[1]\,
	datac => ww_GND_port,
	cin => \MultiSPEreset_cnt[0]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => ALT_NOT_MultiSPE_latch,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \MultiSPEreset_cnt[1]\,
	cout => \MultiSPEreset_cnt[1]~COUT\);

\MultiSPEreset_cnt[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \MultiSPEreset_cnt[2]\ = DFFE((!MultiSPE_latch & \~GND\) # (MultiSPE_latch & \MultiSPEreset_cnt[2]\ $ !\MultiSPEreset_cnt[1]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \MultiSPEreset_cnt[2]~COUT\ = CARRY(\MultiSPEreset_cnt[2]\ & !\MultiSPEreset_cnt[1]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \MultiSPEreset_cnt[2]\,
	datac => ww_GND_port,
	cin => \MultiSPEreset_cnt[1]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => ALT_NOT_MultiSPE_latch,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \MultiSPEreset_cnt[2]\,
	cout => \MultiSPEreset_cnt[2]~COUT\);

\MultiSPEreset_cnt[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \MultiSPEreset_cnt[3]\ = DFFE((!MultiSPE_latch & \~GND\) # (MultiSPE_latch & \MultiSPEreset_cnt[3]\ $ \MultiSPEreset_cnt[2]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \MultiSPEreset_cnt[3]~COUT\ = CARRY(!\MultiSPEreset_cnt[2]~COUT\ # !\MultiSPEreset_cnt[3]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \MultiSPEreset_cnt[3]\,
	datac => ww_GND_port,
	cin => \MultiSPEreset_cnt[2]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => ALT_NOT_MultiSPE_latch,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \MultiSPEreset_cnt[3]\,
	cout => \MultiSPEreset_cnt[3]~COUT\);

\MultiSPEreset_cnt[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \MultiSPEreset_cnt[4]\ = DFFE((!MultiSPE_latch & \~GND\) # (MultiSPE_latch & \MultiSPEreset_cnt[4]\ $ !\MultiSPEreset_cnt[3]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \MultiSPEreset_cnt[4]~COUT\ = CARRY(\MultiSPEreset_cnt[4]\ & !\MultiSPEreset_cnt[3]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \MultiSPEreset_cnt[4]\,
	datac => ww_GND_port,
	cin => \MultiSPEreset_cnt[3]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => ALT_NOT_MultiSPE_latch,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \MultiSPEreset_cnt[4]\,
	cout => \MultiSPEreset_cnt[4]~COUT\);

\MultiSPEreset_cnt[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \MultiSPEreset_cnt[5]\ = DFFE((!MultiSPE_latch & \~GND\) # (MultiSPE_latch & \MultiSPEreset_cnt[5]\ $ \MultiSPEreset_cnt[4]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \MultiSPEreset_cnt[5]~COUT\ = CARRY(!\MultiSPEreset_cnt[4]~COUT\ # !\MultiSPEreset_cnt[5]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \MultiSPEreset_cnt[5]\,
	datac => ww_GND_port,
	cin => \MultiSPEreset_cnt[4]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => ALT_NOT_MultiSPE_latch,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \MultiSPEreset_cnt[5]\,
	cout => \MultiSPEreset_cnt[5]~COUT\);

\MultiSPEreset_cnt[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \MultiSPEreset_cnt[6]\ = DFFE((!MultiSPE_latch & \~GND\) # (MultiSPE_latch & \MultiSPEreset_cnt[6]\ $ !\MultiSPEreset_cnt[5]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \MultiSPEreset_cnt[6]~COUT\ = CARRY(\MultiSPEreset_cnt[6]\ & !\MultiSPEreset_cnt[5]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \MultiSPEreset_cnt[6]\,
	datac => ww_GND_port,
	cin => \MultiSPEreset_cnt[5]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => ALT_NOT_MultiSPE_latch,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \MultiSPEreset_cnt[6]\,
	cout => \MultiSPEreset_cnt[6]~COUT\);

\MultiSPEreset_cnt[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- \MultiSPEreset_cnt[7]\ = DFFE((!MultiSPE_latch & \~GND\) # (MultiSPE_latch & \MultiSPEreset_cnt[7]\ $ \MultiSPEreset_cnt[6]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \MultiSPEreset_cnt[7]~COUT\ = CARRY(!\MultiSPEreset_cnt[6]~COUT\ # !\MultiSPEreset_cnt[7]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \MultiSPEreset_cnt[7]\,
	datac => ww_GND_port,
	cin => \MultiSPEreset_cnt[6]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => ALT_NOT_MultiSPE_latch,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \MultiSPEreset_cnt[7]\,
	cout => \MultiSPEreset_cnt[7]~COUT\);

\MultiSPEreset_cnt[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- \MultiSPEreset_cnt[8]\ = DFFE((!MultiSPE_latch & \~GND\) # (MultiSPE_latch & \MultiSPEreset_cnt[8]\ $ !\MultiSPEreset_cnt[7]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \MultiSPEreset_cnt[8]~COUT\ = CARRY(\MultiSPEreset_cnt[8]\ & !\MultiSPEreset_cnt[7]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \MultiSPEreset_cnt[8]\,
	datac => ww_GND_port,
	cin => \MultiSPEreset_cnt[7]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => ALT_NOT_MultiSPE_latch,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \MultiSPEreset_cnt[8]\,
	cout => \MultiSPEreset_cnt[8]~COUT\);

\i~50_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~50\ = command_4_local_13 & (command_4_local_12 # \MultiSPEreset_cnt[7]\) # !command_4_local_13 & !command_4_local_12 & \MultiSPEreset_cnt[5]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BA98",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_4_local_13,
	datab => ww_command_4_local_12,
	datac => \MultiSPEreset_cnt[5]\,
	datad => \MultiSPEreset_cnt[7]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~50\);

\i~51_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~51\ = \i~50\ & (\MultiSPEreset_cnt[8]\ # !command_4_local_12) # !\i~50\ & command_4_local_12 & \MultiSPEreset_cnt[6]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DAD0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_4_local_12,
	datab => \MultiSPEreset_cnt[8]\,
	datac => \i~50\,
	datad => \MultiSPEreset_cnt[6]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~51\);

\i~48_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~48\ = command_4_local_12 & (\MultiSPEreset_cnt[2]\ # command_4_local_13) # !command_4_local_12 & !command_4_local_13 & \MultiSPEreset_cnt[1]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EE30",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \MultiSPEreset_cnt[2]\,
	datab => ww_command_4_local_13,
	datac => \MultiSPEreset_cnt[1]\,
	datad => ww_command_4_local_12,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~48\);

\i~49_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~49\ = \i~48\ & (\MultiSPEreset_cnt[4]\ # !command_4_local_13) # !\i~48\ & \MultiSPEreset_cnt[3]\ & command_4_local_13

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F388",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \MultiSPEreset_cnt[3]\,
	datab => ww_command_4_local_13,
	datac => \MultiSPEreset_cnt[4]\,
	datad => \i~48\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~49\);

\MultiSPEreset_cnt[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- \MultiSPEreset_cnt[9]\ = DFFE((!MultiSPE_latch & \~GND\) # (MultiSPE_latch & \MultiSPEreset_cnt[9]\ $ \MultiSPEreset_cnt[8]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \MultiSPEreset_cnt[9]~COUT\ = CARRY(!\MultiSPEreset_cnt[8]~COUT\ # !\MultiSPEreset_cnt[9]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \MultiSPEreset_cnt[9]\,
	datac => ww_GND_port,
	cin => \MultiSPEreset_cnt[8]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => ALT_NOT_MultiSPE_latch,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \MultiSPEreset_cnt[9]\,
	cout => \MultiSPEreset_cnt[9]~COUT\);

\MultiSPEreset_cnt[10]~I\ : apex20ke_lcell 
-- Equation(s):
-- \MultiSPEreset_cnt[10]\ = DFFE((!MultiSPE_latch & \~GND\) # (MultiSPE_latch & \MultiSPEreset_cnt[10]\ $ !\MultiSPEreset_cnt[9]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \MultiSPEreset_cnt[10]~COUT\ = CARRY(\MultiSPEreset_cnt[10]\ & !\MultiSPEreset_cnt[9]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \MultiSPEreset_cnt[10]\,
	datac => ww_GND_port,
	cin => \MultiSPEreset_cnt[9]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => ALT_NOT_MultiSPE_latch,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \MultiSPEreset_cnt[10]\,
	cout => \MultiSPEreset_cnt[10]~COUT\);

\MultiSPEreset_cnt[11]~I\ : apex20ke_lcell 
-- Equation(s):
-- \MultiSPEreset_cnt[11]\ = DFFE((!MultiSPE_latch & \~GND\) # (MultiSPE_latch & \MultiSPEreset_cnt[11]\ $ \MultiSPEreset_cnt[10]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \MultiSPEreset_cnt[11]\,
	datac => ww_GND_port,
	cin => \MultiSPEreset_cnt[10]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => ALT_NOT_MultiSPE_latch,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \MultiSPEreset_cnt[11]\);

\i~579_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~579\ = \MultiSPEreset_cnt[11]\ & (command_4_local_13 # \MultiSPEreset_cnt[9]\) # !\MultiSPEreset_cnt[11]\ & !command_4_local_13 & \MultiSPEreset_cnt[9]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \MultiSPEreset_cnt[11]\,
	datac => ww_command_4_local_13,
	datad => \MultiSPEreset_cnt[9]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~579\);

\i~580_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~580\ = command_4_local_12 & !command_4_local_13 & \MultiSPEreset_cnt[10]\ # !command_4_local_12 & \i~579\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "2E22",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~579\,
	datab => ww_command_4_local_12,
	datac => ww_command_4_local_13,
	datad => \MultiSPEreset_cnt[10]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~580\);

\i~46_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~46\ = command_4_local_15 & (\i~580\ # command_4_local_14) # !command_4_local_15 & \i~49\ & !command_4_local_14

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0CA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~49\,
	datab => \i~580\,
	datac => ww_command_4_local_15,
	datad => ww_command_4_local_14,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~46\);

\i~47_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~47\ = \i~46\ & (\i~581\ # !command_4_local_14) # !\i~46\ & command_4_local_14 & \i~51\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BBC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~581\,
	datab => ww_command_4_local_14,
	datac => \i~51\,
	datad => \i~46\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~47\);

\MultiSPErst~I\ : apex20ke_lcell 
-- Equation(s):
-- MultiSPErst = DFFE(!\i~47\ # !MultiSPE_latch, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0FFF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => MultiSPE_latch,
	datad => \i~47\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => MultiSPErst);

\MultiSPE_latch~I\ : apex20ke_lcell 
-- Equation(s):
-- MultiSPE_latch = DFFE(FE_TEST_PULSE # !FE_pulse_local, GLOBAL(\MultiSPE~combout\), MultiSPErst, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CCFF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_FE_TEST_PULSE,
	datad => FE_pulse_local,
	clk => ww_MultiSPE,
	aclr => ALT_NOT_MultiSPErst,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => MultiSPE_latch);

\MultiSPE0~I\ : apex20ke_lcell 
-- Equation(s):
-- MultiSPE0 = DFFE(MultiSPE_latch, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => MultiSPE_latch,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => MultiSPE0);

\MultiSPE1~I\ : apex20ke_lcell 
-- Equation(s):
-- MultiSPE1 = DFFE(!MultiSPE0, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00FF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => MultiSPE0,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => MultiSPE1);

\MultiSPE2~I\ : apex20ke_lcell 
-- Equation(s):
-- MultiSPE2 = DFFE(!MultiSPE1, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F0F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => MultiSPE1,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => MultiSPE2);

\i19~I\ : apex20ke_lcell 
-- Equation(s):
-- i19 = !MultiSPE1 & !MultiSPE2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0033",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => MultiSPE1,
	datad => MultiSPE2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i19);

\cntXms[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[0]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & !\cntXms[0]\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[0]~COUT\ = CARRY(\cntXms[0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	packed_mode => "false",
	lut_mask => "33CC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cntXms[0]\,
	datac => ww_GND_port,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[0]\,
	cout => \cntXms[0]~COUT\);

\cntXms[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[1]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[1]\ $ !\cntXms[0]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[1]~COUT\ = CARRY(!\cntXms[1]\ & !\cntXms[0]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A505",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[1]\,
	datac => ww_GND_port,
	cin => \cntXms[0]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[1]\,
	cout => \cntXms[1]~COUT\);

\cntXms[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[2]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[2]\ $ \cntXms[1]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[2]~COUT\ = CARRY(\cntXms[2]\ # !\cntXms[1]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5AAF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[2]\,
	datac => ww_GND_port,
	cin => \cntXms[1]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[2]\,
	cout => \cntXms[2]~COUT\);

\cntXms[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[3]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[3]\ $ !\cntXms[2]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[3]~COUT\ = CARRY(!\cntXms[3]\ & !\cntXms[2]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C303",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cntXms[3]\,
	datac => ww_GND_port,
	cin => \cntXms[2]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[3]\,
	cout => \cntXms[3]~COUT\);

\i~569_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~569\ = \cntXms[1]\ # \cntXms[3]\ # \cntXms[2]\ # \cntXms[0]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[1]\,
	datab => \cntXms[3]\,
	datac => \cntXms[2]\,
	datad => \cntXms[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~569\);

\cntXms[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[4]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[4]\ $ \cntXms[3]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[4]~COUT\ = CARRY(\cntXms[4]\ # !\cntXms[3]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3CCF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cntXms[4]\,
	datac => ww_GND_port,
	cin => \cntXms[3]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[4]\,
	cout => \cntXms[4]~COUT\);

\cntXms[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[5]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[5]\ $ !\cntXms[4]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[5]~COUT\ = CARRY(!\cntXms[5]\ & !\cntXms[4]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C303",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cntXms[5]\,
	datac => ww_GND_port,
	cin => \cntXms[4]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[5]\,
	cout => \cntXms[5]~COUT\);

\cntXms[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[6]\ = DFFE((\i~0\ & command_4_local_8) # (!\i~0\ & \cntXms[6]\ $ \cntXms[5]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[6]~COUT\ = CARRY(\cntXms[6]\ # !\cntXms[5]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5AAF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[6]\,
	datac => ww_command_4_local_8,
	cin => \cntXms[5]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[6]\,
	cout => \cntXms[6]~COUT\);

\cntXms[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[7]\ = DFFE((\i~0\ & command_4_local_8) # (!\i~0\ & \cntXms[7]\ $ !\cntXms[6]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[7]~COUT\ = CARRY(\cntXms[7]\ & !\cntXms[6]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[7]\,
	datac => ww_command_4_local_8,
	cin => \cntXms[6]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[7]\,
	cout => \cntXms[7]~COUT\);

\i~570_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~570\ = \cntXms[5]\ # \cntXms[4]\ # \cntXms[6]\ # !\cntXms[7]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFB",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[5]\,
	datab => \cntXms[7]\,
	datac => \cntXms[4]\,
	datad => \cntXms[6]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~570\);

\cntXms[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[8]\ = DFFE((\i~0\ & command_4_local_8) # (!\i~0\ & \cntXms[8]\ $ \cntXms[7]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[8]~COUT\ = CARRY(\cntXms[8]\ # !\cntXms[7]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3CCF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cntXms[8]\,
	datac => ww_command_4_local_8,
	cin => \cntXms[7]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[8]\,
	cout => \cntXms[8]~COUT\);

\cntXms[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[9]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[9]\ $ !\cntXms[8]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[9]~COUT\ = CARRY(!\cntXms[9]\ & !\cntXms[8]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A505",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[9]\,
	datac => ww_GND_port,
	cin => \cntXms[8]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[9]\,
	cout => \cntXms[9]~COUT\);

\cntXms[10]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[10]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[10]\ $ \cntXms[9]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[10]~COUT\ = CARRY(!\cntXms[9]~COUT\ # !\cntXms[10]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cntXms[10]\,
	datac => ww_GND_port,
	cin => \cntXms[9]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[10]\,
	cout => \cntXms[10]~COUT\);

\cntXms[11]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[11]\ = DFFE((\i~0\ & command_4_local_8) # (!\i~0\ & \cntXms[11]\ $ !\cntXms[10]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[11]~COUT\ = CARRY(!\cntXms[11]\ & !\cntXms[10]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A505",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[11]\,
	datac => ww_command_4_local_8,
	cin => \cntXms[10]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[11]\,
	cout => \cntXms[11]~COUT\);

\i~571_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~571\ = \cntXms[9]\ # \cntXms[8]\ # \cntXms[11]\ # !\cntXms[10]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFD",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[10]\,
	datab => \cntXms[9]\,
	datac => \cntXms[8]\,
	datad => \cntXms[11]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~571\);

\cntXms[12]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[12]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[12]\ $ \cntXms[11]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[12]~COUT\ = CARRY(\cntXms[12]\ # !\cntXms[11]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3CCF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cntXms[12]\,
	datac => ww_GND_port,
	cin => \cntXms[11]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[12]\,
	cout => \cntXms[12]~COUT\);

\cntXms[13]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[13]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[13]\ $ !\cntXms[12]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[13]~COUT\ = CARRY(!\cntXms[13]\ & !\cntXms[12]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A505",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[13]\,
	datac => ww_GND_port,
	cin => \cntXms[12]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[13]\,
	cout => \cntXms[13]~COUT\);

\cntXms[14]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[14]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[14]\ $ \cntXms[13]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[14]~COUT\ = CARRY(\cntXms[14]\ # !\cntXms[13]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3CCF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cntXms[14]\,
	datac => ww_GND_port,
	cin => \cntXms[13]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[14]\,
	cout => \cntXms[14]~COUT\);

\cntXms[15]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[15]\ = DFFE((\i~0\ & command_4_local_8) # (!\i~0\ & \cntXms[15]\ $ !\cntXms[14]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[15]~COUT\ = CARRY(\cntXms[15]\ & !\cntXms[14]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[15]\,
	datac => ww_command_4_local_8,
	cin => \cntXms[14]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[15]\,
	cout => \cntXms[15]~COUT\);

\i~572_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~572\ = \cntXms[14]\ # \cntXms[13]\ # \cntXms[12]\ # !\cntXms[15]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEFF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[14]\,
	datab => \cntXms[13]\,
	datac => \cntXms[12]\,
	datad => \cntXms[15]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~572\);

\i~573_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~573\ = \i~569\ # \i~570\ # \i~571\ # \i~572\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~569\,
	datab => \i~570\,
	datac => \i~571\,
	datad => \i~572\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~573\);

\cntXms[16]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[16]\ = DFFE((\i~0\ & command_4_local_8) # (!\i~0\ & \cntXms[16]\ $ \cntXms[15]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[16]~COUT\ = CARRY(\cntXms[16]\ # !\cntXms[15]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3CCF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cntXms[16]\,
	datac => ww_command_4_local_8,
	cin => \cntXms[15]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[16]\,
	cout => \cntXms[16]~COUT\);

\cntXms[17]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[17]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[17]\ $ !\cntXms[16]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[17]~COUT\ = CARRY(\cntXms[17]\ & !\cntXms[16]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[17]\,
	datac => ww_GND_port,
	cin => \cntXms[16]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[17]\,
	cout => \cntXms[17]~COUT\);

\cntXms[18]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[18]\ = DFFE((\i~0\ & command_4_local_8) # (!\i~0\ & \cntXms[18]\ $ \cntXms[17]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[18]~COUT\ = CARRY(!\cntXms[17]~COUT\ # !\cntXms[18]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cntXms[18]\,
	datac => ww_command_4_local_8,
	cin => \cntXms[17]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[18]\,
	cout => \cntXms[18]~COUT\);

\cntXms[19]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[19]\ = DFFE((\i~0\ & command_4_local_8) # (!\i~0\ & \cntXms[19]\ $ !\cntXms[18]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[19]~COUT\ = CARRY(\cntXms[19]\ & !\cntXms[18]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cntXms[19]\,
	datac => ww_command_4_local_8,
	cin => \cntXms[18]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[19]\,
	cout => \cntXms[19]~COUT\);

\cntXms[20]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[20]\ = DFFE((\i~0\ & command_4_local_8) # (!\i~0\ & \cntXms[20]\ $ \cntXms[19]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[20]~COUT\ = CARRY(!\cntXms[19]~COUT\ # !\cntXms[20]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[20]\,
	datac => ww_command_4_local_8,
	cin => \cntXms[19]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[20]\,
	cout => \cntXms[20]~COUT\);

\cntXms[21]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[21]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[21]\ $ !\cntXms[20]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[21]~COUT\ = CARRY(!\cntXms[21]\ & !\cntXms[20]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C303",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cntXms[21]\,
	datac => ww_GND_port,
	cin => \cntXms[20]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[21]\,
	cout => \cntXms[21]~COUT\);

\cntXms[22]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[22]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[22]\ $ \cntXms[21]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[22]~COUT\ = CARRY(\cntXms[22]\ # !\cntXms[21]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3CCF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cntXms[22]\,
	datac => ww_GND_port,
	cin => \cntXms[21]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[22]\,
	cout => \cntXms[22]~COUT\);

\cntXms[23]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[23]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[23]\ $ !\cntXms[22]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[23]~COUT\ = CARRY(!\cntXms[23]\ & !\cntXms[22]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C303",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cntXms[23]\,
	datac => ww_GND_port,
	cin => \cntXms[22]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[23]\,
	cout => \cntXms[23]~COUT\);

\i~575_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~575\ = \cntXms[22]\ # \cntXms[23]\ # \cntXms[21]\ # !\cntXms[20]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEFF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[22]\,
	datab => \cntXms[23]\,
	datac => \cntXms[21]\,
	datad => \cntXms[20]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~575\);

\cntXms[24]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[24]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[24]\ $ \cntXms[23]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[24]~COUT\ = CARRY(\cntXms[24]\ # !\cntXms[23]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3CCF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cntXms[24]\,
	datac => ww_GND_port,
	cin => \cntXms[23]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[24]\,
	cout => \cntXms[24]~COUT\);

\cntXms[25]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[25]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[25]\ $ !\cntXms[24]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[25]~COUT\ = CARRY(!\cntXms[25]\ & !\cntXms[24]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C303",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cntXms[25]\,
	datac => ww_GND_port,
	cin => \cntXms[24]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[25]\,
	cout => \cntXms[25]~COUT\);

\cntXms[26]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[26]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[26]\ $ \cntXms[25]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[26]~COUT\ = CARRY(\cntXms[26]\ # !\cntXms[25]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5AAF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[26]\,
	datac => ww_GND_port,
	cin => \cntXms[25]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[26]\,
	cout => \cntXms[26]~COUT\);

\cntXms[27]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[27]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[27]\ $ !\cntXms[26]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[27]~COUT\ = CARRY(!\cntXms[27]\ & !\cntXms[26]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A505",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[27]\,
	datac => ww_GND_port,
	cin => \cntXms[26]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[27]\,
	cout => \cntXms[27]~COUT\);

\i~576_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~576\ = \cntXms[25]\ # \cntXms[27]\ # \cntXms[24]\ # \cntXms[26]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[25]\,
	datab => \cntXms[27]\,
	datac => \cntXms[24]\,
	datad => \cntXms[26]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~576\);

\i~574_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~574\ = \cntXms[16]\ # !\cntXms[19]\ # !\cntXms[17]\ # !\cntXms[18]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF7F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[18]\,
	datab => \cntXms[17]\,
	datac => \cntXms[19]\,
	datad => \cntXms[16]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~574\);

\cntXms[28]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[28]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[28]\ $ \cntXms[27]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[28]~COUT\ = CARRY(\cntXms[28]\ # !\cntXms[27]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5AAF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[28]\,
	datac => ww_GND_port,
	cin => \cntXms[27]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[28]\,
	cout => \cntXms[28]~COUT\);

\cntXms[29]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[29]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[29]\ $ !\cntXms[28]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[29]~COUT\ = CARRY(!\cntXms[29]\ & !\cntXms[28]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A505",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[29]\,
	datac => ww_GND_port,
	cin => \cntXms[28]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[29]\,
	cout => \cntXms[29]~COUT\);

\cntXms[30]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[30]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[30]\ $ \cntXms[29]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \cntXms[30]~COUT\ = CARRY(\cntXms[30]\ # !\cntXms[29]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3CCF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cntXms[30]\,
	datac => ww_GND_port,
	cin => \cntXms[29]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[30]\,
	cout => \cntXms[30]~COUT\);

\cntXms[31]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntXms[31]\ = DFFE((\i~0\ & \~GND\) # (!\i~0\ & \cntXms[31]\ $ !\cntXms[30]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A5A5",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[31]\,
	datac => ww_GND_port,
	cin => \cntXms[30]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntXms[31]\);

\i~577_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~577\ = \cntXms[30]\ # \cntXms[29]\ # \cntXms[31]\ # \cntXms[28]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntXms[30]\,
	datab => \cntXms[29]\,
	datac => \cntXms[31]\,
	datad => \cntXms[28]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~577\);

\i~578_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~578\ = \i~575\ # \i~576\ # \i~574\ # \i~577\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~575\,
	datab => \i~576\,
	datac => \i~574\,
	datad => \i~577\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~578\);

\i~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~0\ = !\i~573\ & !\i~578\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0033",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \i~573\,
	datad => \i~578\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~0\);

\wysi_counter|counter_cell[0]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[0]\ = DFFE(!\i~0\ & i19 $ \wysi_counter|sload_path[0]\, GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[0]~COUT\ = CARRY(\wysi_counter|sload_path[0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "qfbk_counter",
	packed_mode => "false",
	lut_mask => "3CF0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => i19,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[0]\,
	cout => \wysi_counter|counter_cell[0]~COUT\);

\oneSPEcnt[0]~31_I\ : apex20ke_lcell 
-- Equation(s):
-- \oneSPEcnt[0]~31\ = !\i~578\ & !RST & !\i~573\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0003",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \i~578\,
	datac => ww_RST,
	datad => \i~573\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \oneSPEcnt[0]~31\);

\OneSPEreset_cnt[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \OneSPEreset_cnt[0]\ = DFFE((!OneSPE_latch & \~GND\) # (OneSPE_latch & !\OneSPEreset_cnt[0]\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \OneSPEreset_cnt[0]~COUT\ = CARRY(!\OneSPEreset_cnt[0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	packed_mode => "false",
	lut_mask => "3333",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \OneSPEreset_cnt[0]\,
	datac => ww_GND_port,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => ALT_NOT_OneSPE_latch,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \OneSPEreset_cnt[0]\,
	cout => \OneSPEreset_cnt[0]~COUT\);

\i~584_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~584\ = command_4_local_13 & command_4_local_12 & !\OneSPEreset_cnt[0]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00C0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_command_4_local_13,
	datac => ww_command_4_local_12,
	datad => \OneSPEreset_cnt[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~584\);

\OneSPEreset_cnt[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \OneSPEreset_cnt[1]\ = DFFE((!OneSPE_latch & \~GND\) # (OneSPE_latch & \OneSPEreset_cnt[1]\ $ \OneSPEreset_cnt[0]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \OneSPEreset_cnt[1]~COUT\ = CARRY(!\OneSPEreset_cnt[0]~COUT\ # !\OneSPEreset_cnt[1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \OneSPEreset_cnt[1]\,
	datac => ww_GND_port,
	cin => \OneSPEreset_cnt[0]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => ALT_NOT_OneSPE_latch,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \OneSPEreset_cnt[1]\,
	cout => \OneSPEreset_cnt[1]~COUT\);

\OneSPEreset_cnt[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \OneSPEreset_cnt[2]\ = DFFE((!OneSPE_latch & \~GND\) # (OneSPE_latch & \OneSPEreset_cnt[2]\ $ !\OneSPEreset_cnt[1]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \OneSPEreset_cnt[2]~COUT\ = CARRY(\OneSPEreset_cnt[2]\ & !\OneSPEreset_cnt[1]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \OneSPEreset_cnt[2]\,
	datac => ww_GND_port,
	cin => \OneSPEreset_cnt[1]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => ALT_NOT_OneSPE_latch,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \OneSPEreset_cnt[2]\,
	cout => \OneSPEreset_cnt[2]~COUT\);

\i~42_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~42\ = command_4_local_12 & (\OneSPEreset_cnt[2]\ # command_4_local_13) # !command_4_local_12 & !command_4_local_13 & \OneSPEreset_cnt[1]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E3E0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \OneSPEreset_cnt[2]\,
	datab => ww_command_4_local_13,
	datac => ww_command_4_local_12,
	datad => \OneSPEreset_cnt[1]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~42\);

\OneSPEreset_cnt[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \OneSPEreset_cnt[3]\ = DFFE((!OneSPE_latch & \~GND\) # (OneSPE_latch & \OneSPEreset_cnt[3]\ $ \OneSPEreset_cnt[2]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \OneSPEreset_cnt[3]~COUT\ = CARRY(!\OneSPEreset_cnt[2]~COUT\ # !\OneSPEreset_cnt[3]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \OneSPEreset_cnt[3]\,
	datac => ww_GND_port,
	cin => \OneSPEreset_cnt[2]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => ALT_NOT_OneSPE_latch,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \OneSPEreset_cnt[3]\,
	cout => \OneSPEreset_cnt[3]~COUT\);

\OneSPEreset_cnt[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \OneSPEreset_cnt[4]\ = DFFE((!OneSPE_latch & \~GND\) # (OneSPE_latch & \OneSPEreset_cnt[4]\ $ !\OneSPEreset_cnt[3]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \OneSPEreset_cnt[4]~COUT\ = CARRY(\OneSPEreset_cnt[4]\ & !\OneSPEreset_cnt[3]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \OneSPEreset_cnt[4]\,
	datac => ww_GND_port,
	cin => \OneSPEreset_cnt[3]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => ALT_NOT_OneSPE_latch,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \OneSPEreset_cnt[4]\,
	cout => \OneSPEreset_cnt[4]~COUT\);

\i~43_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~43\ = \i~42\ & (\OneSPEreset_cnt[4]\ # !command_4_local_13) # !\i~42\ & \OneSPEreset_cnt[3]\ & command_4_local_13

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E4AA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~42\,
	datab => \OneSPEreset_cnt[3]\,
	datac => \OneSPEreset_cnt[4]\,
	datad => ww_command_4_local_13,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~43\);

\OneSPEreset_cnt[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \OneSPEreset_cnt[5]\ = DFFE((!OneSPE_latch & \~GND\) # (OneSPE_latch & \OneSPEreset_cnt[5]\ $ \OneSPEreset_cnt[4]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \OneSPEreset_cnt[5]~COUT\ = CARRY(!\OneSPEreset_cnt[4]~COUT\ # !\OneSPEreset_cnt[5]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \OneSPEreset_cnt[5]\,
	datac => ww_GND_port,
	cin => \OneSPEreset_cnt[4]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => ALT_NOT_OneSPE_latch,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \OneSPEreset_cnt[5]\,
	cout => \OneSPEreset_cnt[5]~COUT\);

\OneSPEreset_cnt[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \OneSPEreset_cnt[6]\ = DFFE((!OneSPE_latch & \~GND\) # (OneSPE_latch & \OneSPEreset_cnt[6]\ $ !\OneSPEreset_cnt[5]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \OneSPEreset_cnt[6]~COUT\ = CARRY(\OneSPEreset_cnt[6]\ & !\OneSPEreset_cnt[5]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \OneSPEreset_cnt[6]\,
	datac => ww_GND_port,
	cin => \OneSPEreset_cnt[5]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => ALT_NOT_OneSPE_latch,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \OneSPEreset_cnt[6]\,
	cout => \OneSPEreset_cnt[6]~COUT\);

\OneSPEreset_cnt[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- \OneSPEreset_cnt[7]\ = DFFE((!OneSPE_latch & \~GND\) # (OneSPE_latch & \OneSPEreset_cnt[7]\ $ \OneSPEreset_cnt[6]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \OneSPEreset_cnt[7]~COUT\ = CARRY(!\OneSPEreset_cnt[6]~COUT\ # !\OneSPEreset_cnt[7]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \OneSPEreset_cnt[7]\,
	datac => ww_GND_port,
	cin => \OneSPEreset_cnt[6]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => ALT_NOT_OneSPE_latch,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \OneSPEreset_cnt[7]\,
	cout => \OneSPEreset_cnt[7]~COUT\);

\OneSPEreset_cnt[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- \OneSPEreset_cnt[8]\ = DFFE((!OneSPE_latch & \~GND\) # (OneSPE_latch & \OneSPEreset_cnt[8]\ $ !\OneSPEreset_cnt[7]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \OneSPEreset_cnt[8]~COUT\ = CARRY(\OneSPEreset_cnt[8]\ & !\OneSPEreset_cnt[7]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \OneSPEreset_cnt[8]\,
	datac => ww_GND_port,
	cin => \OneSPEreset_cnt[7]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => ALT_NOT_OneSPE_latch,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \OneSPEreset_cnt[8]\,
	cout => \OneSPEreset_cnt[8]~COUT\);

\i~44_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~44\ = command_4_local_13 & (\OneSPEreset_cnt[7]\ # command_4_local_12) # !command_4_local_13 & \OneSPEreset_cnt[5]\ & !command_4_local_12

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AAD8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_4_local_13,
	datab => \OneSPEreset_cnt[7]\,
	datac => \OneSPEreset_cnt[5]\,
	datad => ww_command_4_local_12,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~44\);

\i~45_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~45\ = \i~44\ & (\OneSPEreset_cnt[8]\ # !command_4_local_12) # !\i~44\ & command_4_local_12 & \OneSPEreset_cnt[6]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DAD0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_4_local_12,
	datab => \OneSPEreset_cnt[8]\,
	datac => \i~44\,
	datad => \OneSPEreset_cnt[6]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~45\);

\i~40_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~40\ = command_4_local_14 & (command_4_local_15 # \i~45\) # !command_4_local_14 & !command_4_local_15 & \i~43\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BA98",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_4_local_14,
	datab => ww_command_4_local_15,
	datac => \i~43\,
	datad => \i~45\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~40\);

\OneSPEreset_cnt[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- \OneSPEreset_cnt[9]\ = DFFE((!OneSPE_latch & \~GND\) # (OneSPE_latch & \OneSPEreset_cnt[9]\ $ \OneSPEreset_cnt[8]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \OneSPEreset_cnt[9]~COUT\ = CARRY(!\OneSPEreset_cnt[8]~COUT\ # !\OneSPEreset_cnt[9]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \OneSPEreset_cnt[9]\,
	datac => ww_GND_port,
	cin => \OneSPEreset_cnt[8]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => ALT_NOT_OneSPE_latch,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \OneSPEreset_cnt[9]\,
	cout => \OneSPEreset_cnt[9]~COUT\);

\OneSPEreset_cnt[10]~I\ : apex20ke_lcell 
-- Equation(s):
-- \OneSPEreset_cnt[10]\ = DFFE((!OneSPE_latch & \~GND\) # (OneSPE_latch & \OneSPEreset_cnt[10]\ $ !\OneSPEreset_cnt[9]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )
-- \OneSPEreset_cnt[10]~COUT\ = CARRY(\OneSPEreset_cnt[10]\ & !\OneSPEreset_cnt[9]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \OneSPEreset_cnt[10]\,
	datac => ww_GND_port,
	cin => \OneSPEreset_cnt[9]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => ALT_NOT_OneSPE_latch,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \OneSPEreset_cnt[10]\,
	cout => \OneSPEreset_cnt[10]~COUT\);

\OneSPEreset_cnt[11]~I\ : apex20ke_lcell 
-- Equation(s):
-- \OneSPEreset_cnt[11]\ = DFFE((!OneSPE_latch & \~GND\) # (OneSPE_latch & \OneSPEreset_cnt[11]\ $ \OneSPEreset_cnt[10]~COUT\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \OneSPEreset_cnt[11]\,
	datac => ww_GND_port,
	cin => \OneSPEreset_cnt[10]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sload => ALT_NOT_OneSPE_latch,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \OneSPEreset_cnt[11]\);

\i~582_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~582\ = \OneSPEreset_cnt[11]\ & (command_4_local_13 # \OneSPEreset_cnt[9]\) # !\OneSPEreset_cnt[11]\ & !command_4_local_13 & \OneSPEreset_cnt[9]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \OneSPEreset_cnt[11]\,
	datac => ww_command_4_local_13,
	datad => \OneSPEreset_cnt[9]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~582\);

\i~583_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~583\ = command_4_local_12 & !command_4_local_13 & \OneSPEreset_cnt[10]\ # !command_4_local_12 & \i~582\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "2E22",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~582\,
	datab => ww_command_4_local_12,
	datac => ww_command_4_local_13,
	datad => \OneSPEreset_cnt[10]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~583\);

\i~41_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~41\ = \i~40\ & (\i~584\ # !command_4_local_15) # !\i~40\ & command_4_local_15 & \i~583\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BC8C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~584\,
	datab => \i~40\,
	datac => ww_command_4_local_15,
	datad => \i~583\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~41\);

\OneSPErst~I\ : apex20ke_lcell 
-- Equation(s):
-- OneSPErst = DFFE(!\i~41\ # !OneSPE_latch, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0FFF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => OneSPE_latch,
	datad => \i~41\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => OneSPErst);

\OneSPE_latch~I\ : apex20ke_lcell 
-- Equation(s):
-- OneSPE_latch = DFFE(FE_TEST_PULSE # !FE_pulse_local, GLOBAL(\OneSPE~combout\), OneSPErst, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AFAF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_FE_TEST_PULSE,
	datac => FE_pulse_local,
	clk => ww_OneSPE,
	aclr => ALT_NOT_OneSPErst,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => OneSPE_latch);

\OneSPE0~I\ : apex20ke_lcell 
-- Equation(s):
-- OneSPE0 = DFFE(OneSPE_latch, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => OneSPE_latch,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => OneSPE0);

\OneSPE1~I\ : apex20ke_lcell 
-- Equation(s):
-- OneSPE1 = DFFE(!OneSPE0, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00FF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => OneSPE0,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => OneSPE1);

\OneSPE2~I\ : apex20ke_lcell 
-- Equation(s):
-- OneSPE2 = DFFE(!OneSPE1, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F0F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => OneSPE1,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => OneSPE2);

\i38~I\ : apex20ke_lcell 
-- Equation(s):
-- i38 = !OneSPE1 & !OneSPE2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0033",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => OneSPE1,
	datad => OneSPE2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i38);

\wysi_counter|counter_cell[0]~1\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[0]~1\ = DFFE(!\i~0\ & i38 $ \wysi_counter|sload_path[0]~1\, GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[0]~COUT_1\ = CARRY(\wysi_counter|sload_path[0]~1\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "qfbk_counter",
	packed_mode => "false",
	lut_mask => "3CF0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => i38,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[0]~1\,
	cout => \wysi_counter|counter_cell[0]~COUT_1\);

\wysi_counter|counter_cell[1]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[1]\ = DFFE(!\i~0\ & \wysi_counter|sload_path[1]\ $ (i19 & \wysi_counter|counter_cell[0]~COUT\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[1]~COUT\ = CARRY(!\wysi_counter|counter_cell[0]~COUT\ # !\wysi_counter|sload_path[1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[1]\,
	datab => i19,
	cin => \wysi_counter|counter_cell[0]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[1]\,
	cout => \wysi_counter|counter_cell[1]~COUT\);

\wysi_counter|counter_cell[1]~1\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[1]~1\ = DFFE(!\i~0\ & \wysi_counter|sload_path[1]~1\ $ (i38 & \wysi_counter|counter_cell[0]~COUT_1\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[1]~COUT_1\ = CARRY(!\wysi_counter|counter_cell[0]~COUT_1\ # !\wysi_counter|sload_path[1]~1\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[1]~1\,
	datab => i38,
	cin => \wysi_counter|counter_cell[0]~COUT_1\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[1]~1\,
	cout => \wysi_counter|counter_cell[1]~COUT_1\);

\wysi_counter|counter_cell[2]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[2]\ = DFFE(!\i~0\ & \wysi_counter|sload_path[2]\ $ (i19 & !\wysi_counter|counter_cell[1]~COUT\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[2]~COUT\ = CARRY(\wysi_counter|sload_path[2]\ & !\wysi_counter|counter_cell[1]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A60A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[2]\,
	datab => i19,
	cin => \wysi_counter|counter_cell[1]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[2]\,
	cout => \wysi_counter|counter_cell[2]~COUT\);

\wysi_counter|counter_cell[2]~1\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[2]~1\ = DFFE(!\i~0\ & \wysi_counter|sload_path[2]~1\ $ (i38 & !\wysi_counter|counter_cell[1]~COUT_1\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[2]~COUT_1\ = CARRY(\wysi_counter|sload_path[2]~1\ & !\wysi_counter|counter_cell[1]~COUT_1\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A60A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[2]~1\,
	datab => i38,
	cin => \wysi_counter|counter_cell[1]~COUT_1\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[2]~1\,
	cout => \wysi_counter|counter_cell[2]~COUT_1\);

\wysi_counter|counter_cell[3]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[3]\ = DFFE(!\i~0\ & \wysi_counter|sload_path[3]\ $ (i19 & \wysi_counter|counter_cell[2]~COUT\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[3]~COUT\ = CARRY(!\wysi_counter|counter_cell[2]~COUT\ # !\wysi_counter|sload_path[3]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i19,
	datab => \wysi_counter|sload_path[3]\,
	cin => \wysi_counter|counter_cell[2]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[3]\,
	cout => \wysi_counter|counter_cell[3]~COUT\);

\wysi_counter|counter_cell[3]~1\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[3]~1\ = DFFE(!\i~0\ & \wysi_counter|sload_path[3]~1\ $ (i38 & \wysi_counter|counter_cell[2]~COUT_1\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[3]~COUT_1\ = CARRY(!\wysi_counter|counter_cell[2]~COUT_1\ # !\wysi_counter|sload_path[3]~1\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i38,
	datab => \wysi_counter|sload_path[3]~1\,
	cin => \wysi_counter|counter_cell[2]~COUT_1\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[3]~1\,
	cout => \wysi_counter|counter_cell[3]~COUT_1\);

\wysi_counter|counter_cell[4]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[4]\ = DFFE(!\i~0\ & \wysi_counter|sload_path[4]\ $ (i19 & !\wysi_counter|counter_cell[3]~COUT\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[4]~COUT\ = CARRY(\wysi_counter|sload_path[4]\ & !\wysi_counter|counter_cell[3]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A60A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[4]\,
	datab => i19,
	cin => \wysi_counter|counter_cell[3]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[4]\,
	cout => \wysi_counter|counter_cell[4]~COUT\);

\wysi_counter|counter_cell[4]~1\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[4]~1\ = DFFE(!\i~0\ & \wysi_counter|sload_path[4]~1\ $ (i38 & !\wysi_counter|counter_cell[3]~COUT_1\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[4]~COUT_1\ = CARRY(\wysi_counter|sload_path[4]~1\ & !\wysi_counter|counter_cell[3]~COUT_1\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C60C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i38,
	datab => \wysi_counter|sload_path[4]~1\,
	cin => \wysi_counter|counter_cell[3]~COUT_1\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[4]~1\,
	cout => \wysi_counter|counter_cell[4]~COUT_1\);

\wysi_counter|counter_cell[5]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[5]\ = DFFE(!\i~0\ & \wysi_counter|sload_path[5]\ $ (i19 & \wysi_counter|counter_cell[4]~COUT\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[5]~COUT\ = CARRY(!\wysi_counter|counter_cell[4]~COUT\ # !\wysi_counter|sload_path[5]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[5]\,
	datab => i19,
	cin => \wysi_counter|counter_cell[4]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[5]\,
	cout => \wysi_counter|counter_cell[5]~COUT\);

\wysi_counter|counter_cell[5]~1\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[5]~1\ = DFFE(!\i~0\ & \wysi_counter|sload_path[5]~1\ $ (i38 & \wysi_counter|counter_cell[4]~COUT_1\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[5]~COUT_1\ = CARRY(!\wysi_counter|counter_cell[4]~COUT_1\ # !\wysi_counter|sload_path[5]~1\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[5]~1\,
	datab => i38,
	cin => \wysi_counter|counter_cell[4]~COUT_1\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[5]~1\,
	cout => \wysi_counter|counter_cell[5]~COUT_1\);

\wysi_counter|counter_cell[6]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[6]\ = DFFE(!\i~0\ & \wysi_counter|sload_path[6]\ $ (i19 & !\wysi_counter|counter_cell[5]~COUT\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[6]~COUT\ = CARRY(\wysi_counter|sload_path[6]\ & !\wysi_counter|counter_cell[5]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C60C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i19,
	datab => \wysi_counter|sload_path[6]\,
	cin => \wysi_counter|counter_cell[5]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[6]\,
	cout => \wysi_counter|counter_cell[6]~COUT\);

\wysi_counter|counter_cell[6]~1\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[6]~1\ = DFFE(!\i~0\ & \wysi_counter|sload_path[6]~1\ $ (i38 & !\wysi_counter|counter_cell[5]~COUT_1\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[6]~COUT_1\ = CARRY(\wysi_counter|sload_path[6]~1\ & !\wysi_counter|counter_cell[5]~COUT_1\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C60C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i38,
	datab => \wysi_counter|sload_path[6]~1\,
	cin => \wysi_counter|counter_cell[5]~COUT_1\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[6]~1\,
	cout => \wysi_counter|counter_cell[6]~COUT_1\);

\wysi_counter|counter_cell[7]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[7]\ = DFFE(!\i~0\ & \wysi_counter|sload_path[7]\ $ (i19 & \wysi_counter|counter_cell[6]~COUT\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[7]~COUT\ = CARRY(!\wysi_counter|counter_cell[6]~COUT\ # !\wysi_counter|sload_path[7]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[7]\,
	datab => i19,
	cin => \wysi_counter|counter_cell[6]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[7]\,
	cout => \wysi_counter|counter_cell[7]~COUT\);

\wysi_counter|counter_cell[7]~1\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[7]~1\ = DFFE(!\i~0\ & \wysi_counter|sload_path[7]~1\ $ (i38 & \wysi_counter|counter_cell[6]~COUT_1\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[7]~COUT_1\ = CARRY(!\wysi_counter|counter_cell[6]~COUT_1\ # !\wysi_counter|sload_path[7]~1\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i38,
	datab => \wysi_counter|sload_path[7]~1\,
	cin => \wysi_counter|counter_cell[6]~COUT_1\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[7]~1\,
	cout => \wysi_counter|counter_cell[7]~COUT_1\);

\wysi_counter|counter_cell[8]~1\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[8]~1\ = DFFE(!\i~0\ & \wysi_counter|sload_path[8]~1\ $ (i38 & !\wysi_counter|counter_cell[7]~COUT_1\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[8]~COUT_1\ = CARRY(\wysi_counter|sload_path[8]~1\ & !\wysi_counter|counter_cell[7]~COUT_1\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C60C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i38,
	datab => \wysi_counter|sload_path[8]~1\,
	cin => \wysi_counter|counter_cell[7]~COUT_1\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[8]~1\,
	cout => \wysi_counter|counter_cell[8]~COUT_1\);

\wysi_counter|counter_cell[8]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[8]\ = DFFE(!\i~0\ & \wysi_counter|sload_path[8]\ $ (i19 & !\wysi_counter|counter_cell[7]~COUT\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[8]~COUT\ = CARRY(\wysi_counter|sload_path[8]\ & !\wysi_counter|counter_cell[7]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C60C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i19,
	datab => \wysi_counter|sload_path[8]\,
	cin => \wysi_counter|counter_cell[7]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[8]\,
	cout => \wysi_counter|counter_cell[8]~COUT\);

\wysi_counter|counter_cell[9]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[9]\ = DFFE(!\i~0\ & \wysi_counter|sload_path[9]\ $ (i19 & \wysi_counter|counter_cell[8]~COUT\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[9]~COUT\ = CARRY(!\wysi_counter|counter_cell[8]~COUT\ # !\wysi_counter|sload_path[9]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[9]\,
	datab => i19,
	cin => \wysi_counter|counter_cell[8]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[9]\,
	cout => \wysi_counter|counter_cell[9]~COUT\);

\wysi_counter|counter_cell[9]~1\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[9]~1\ = DFFE(!\i~0\ & \wysi_counter|sload_path[9]~1\ $ (i38 & \wysi_counter|counter_cell[8]~COUT_1\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[9]~COUT_1\ = CARRY(!\wysi_counter|counter_cell[8]~COUT_1\ # !\wysi_counter|sload_path[9]~1\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i38,
	datab => \wysi_counter|sload_path[9]~1\,
	cin => \wysi_counter|counter_cell[8]~COUT_1\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[9]~1\,
	cout => \wysi_counter|counter_cell[9]~COUT_1\);

\wysi_counter|counter_cell[10]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[10]\ = DFFE(!\i~0\ & \wysi_counter|sload_path[10]\ $ (i19 & !\wysi_counter|counter_cell[9]~COUT\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[10]~COUT\ = CARRY(\wysi_counter|sload_path[10]\ & !\wysi_counter|counter_cell[9]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A60A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[10]\,
	datab => i19,
	cin => \wysi_counter|counter_cell[9]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[10]\,
	cout => \wysi_counter|counter_cell[10]~COUT\);

\wysi_counter|counter_cell[10]~1\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[10]~1\ = DFFE(!\i~0\ & \wysi_counter|sload_path[10]~1\ $ (i38 & !\wysi_counter|counter_cell[9]~COUT_1\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[10]~COUT_1\ = CARRY(\wysi_counter|sload_path[10]~1\ & !\wysi_counter|counter_cell[9]~COUT_1\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C60C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i38,
	datab => \wysi_counter|sload_path[10]~1\,
	cin => \wysi_counter|counter_cell[9]~COUT_1\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[10]~1\,
	cout => \wysi_counter|counter_cell[10]~COUT_1\);

\wysi_counter|counter_cell[11]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[11]\ = DFFE(!\i~0\ & \wysi_counter|sload_path[11]\ $ (i19 & \wysi_counter|counter_cell[10]~COUT\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[11]~COUT\ = CARRY(!\wysi_counter|counter_cell[10]~COUT\ # !\wysi_counter|sload_path[11]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[11]\,
	datab => i19,
	cin => \wysi_counter|counter_cell[10]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[11]\,
	cout => \wysi_counter|counter_cell[11]~COUT\);

\wysi_counter|counter_cell[11]~1\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[11]~1\ = DFFE(!\i~0\ & \wysi_counter|sload_path[11]~1\ $ (i38 & \wysi_counter|counter_cell[10]~COUT_1\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[11]~COUT_1\ = CARRY(!\wysi_counter|counter_cell[10]~COUT_1\ # !\wysi_counter|sload_path[11]~1\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i38,
	datab => \wysi_counter|sload_path[11]~1\,
	cin => \wysi_counter|counter_cell[10]~COUT_1\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[11]~1\,
	cout => \wysi_counter|counter_cell[11]~COUT_1\);

\wysi_counter|counter_cell[12]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[12]\ = DFFE(!\i~0\ & \wysi_counter|sload_path[12]\ $ (i19 & !\wysi_counter|counter_cell[11]~COUT\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[12]~COUT\ = CARRY(\wysi_counter|sload_path[12]\ & !\wysi_counter|counter_cell[11]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A60A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[12]\,
	datab => i19,
	cin => \wysi_counter|counter_cell[11]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[12]\,
	cout => \wysi_counter|counter_cell[12]~COUT\);

\wysi_counter|counter_cell[12]~1\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[12]~1\ = DFFE(!\i~0\ & \wysi_counter|sload_path[12]~1\ $ (i38 & !\wysi_counter|counter_cell[11]~COUT_1\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[12]~COUT_1\ = CARRY(\wysi_counter|sload_path[12]~1\ & !\wysi_counter|counter_cell[11]~COUT_1\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C60C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i38,
	datab => \wysi_counter|sload_path[12]~1\,
	cin => \wysi_counter|counter_cell[11]~COUT_1\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[12]~1\,
	cout => \wysi_counter|counter_cell[12]~COUT_1\);

\wysi_counter|counter_cell[13]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[13]\ = DFFE(!\i~0\ & \wysi_counter|sload_path[13]\ $ (i19 & \wysi_counter|counter_cell[12]~COUT\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[13]~COUT\ = CARRY(!\wysi_counter|counter_cell[12]~COUT\ # !\wysi_counter|sload_path[13]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i19,
	datab => \wysi_counter|sload_path[13]\,
	cin => \wysi_counter|counter_cell[12]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[13]\,
	cout => \wysi_counter|counter_cell[13]~COUT\);

\wysi_counter|counter_cell[13]~1\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[13]~1\ = DFFE(!\i~0\ & \wysi_counter|sload_path[13]~1\ $ (i38 & \wysi_counter|counter_cell[12]~COUT_1\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[13]~COUT_1\ = CARRY(!\wysi_counter|counter_cell[12]~COUT_1\ # !\wysi_counter|sload_path[13]~1\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i38,
	datab => \wysi_counter|sload_path[13]~1\,
	cin => \wysi_counter|counter_cell[12]~COUT_1\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[13]~1\,
	cout => \wysi_counter|counter_cell[13]~COUT_1\);

\wysi_counter|counter_cell[14]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[14]\ = DFFE(!\i~0\ & \wysi_counter|sload_path[14]\ $ (i19 & !\wysi_counter|counter_cell[13]~COUT\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[14]~COUT\ = CARRY(\wysi_counter|sload_path[14]\ & !\wysi_counter|counter_cell[13]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A60A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[14]\,
	datab => i19,
	cin => \wysi_counter|counter_cell[13]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[14]\,
	cout => \wysi_counter|counter_cell[14]~COUT\);

\wysi_counter|counter_cell[14]~1\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[14]~1\ = DFFE(!\i~0\ & \wysi_counter|sload_path[14]~1\ $ (i38 & !\wysi_counter|counter_cell[13]~COUT_1\), GLOBAL(outclock0), , , !RST)
-- \wysi_counter|counter_cell[14]~COUT_1\ = CARRY(\wysi_counter|sload_path[14]~1\ & !\wysi_counter|counter_cell[13]~COUT_1\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C60C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i38,
	datab => \wysi_counter|sload_path[14]~1\,
	cin => \wysi_counter|counter_cell[13]~COUT_1\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[14]~1\,
	cout => \wysi_counter|counter_cell[14]~COUT_1\);

\wysi_counter|counter_cell[15]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[15]\ = DFFE(!\i~0\ & \wysi_counter|sload_path[15]\ $ (\wysi_counter|counter_cell[14]~COUT\ & i19), GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5AAA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[15]\,
	datad => i19,
	cin => \wysi_counter|counter_cell[14]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[15]\);

\wysi_counter|counter_cell[15]~1\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[15]~1\ = DFFE(!\i~0\ & \wysi_counter|sload_path[15]~1\ $ (\wysi_counter|counter_cell[14]~COUT_1\ & i38), GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5AAA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[15]~1\,
	datad => i38,
	cin => \wysi_counter|counter_cell[14]~COUT_1\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => \i~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[15]~1\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	atwd_ping_pong IS
    PORT (
	CLK40 : IN std_logic;
	RST : IN std_logic;
	command_0_local_1 : IN std_logic;
	command_0_local_2 : IN std_logic;
	command_0_local_9 : IN std_logic;
	command_0_local_10 : IN std_logic;
	command_0_local_15 : IN std_logic;
	TriggerComplete_in_sync : IN std_logic;
	TriggerComplete_in_sync1 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	atwd0_pong_enable : OUT std_logic;
	i122 : OUT std_logic;
	atwd1_pong_enable : OUT std_logic;
	i124 : OUT std_logic
	);
END atwd_ping_pong;

ARCHITECTURE structure OF atwd_ping_pong IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK40 : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_command_0_local_1 : std_logic;
SIGNAL ww_command_0_local_2 : std_logic;
SIGNAL ww_command_0_local_9 : std_logic;
SIGNAL ww_command_0_local_10 : std_logic;
SIGNAL ww_command_0_local_15 : std_logic;
SIGNAL ww_TriggerComplete_in_sync : std_logic;
SIGNAL ww_TriggerComplete_in_sync1 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_atwd0_pong_enable : std_logic;
SIGNAL ww_i122 : std_logic;
SIGNAL ww_atwd1_pong_enable : std_logic;
SIGNAL ww_i124 : std_logic;
SIGNAL \i~208\ : std_logic;
SIGNAL \atwd0_state~20\ : std_logic;
SIGNAL atwd1_read_done_dly : std_logic;
SIGNAL \i~215\ : std_logic;
SIGNAL \atwd1_state~22\ : std_logic;
SIGNAL \i~220\ : std_logic;
SIGNAL \atwd1_state~23\ : std_logic;
SIGNAL \i~213\ : std_logic;
SIGNAL \atwd1_state~21\ : std_logic;
SIGNAL atwd0_read_done_dly : std_logic;
SIGNAL \i~217\ : std_logic;
SIGNAL \i~218\ : std_logic;
SIGNAL \atwd0_state~23\ : std_logic;
SIGNAL \i~209\ : std_logic;
SIGNAL \atwd0_state~21\ : std_logic;
SIGNAL \i~211\ : std_logic;
SIGNAL \atwd0_state~22\ : std_logic;
SIGNAL ALT_NOT_ww_RST : std_logic;

BEGIN

ww_CLK40 <= CLK40;
ww_RST <= RST;
ww_command_0_local_1 <= command_0_local_1;
ww_command_0_local_2 <= command_0_local_2;
ww_command_0_local_9 <= command_0_local_9;
ww_command_0_local_10 <= command_0_local_10;
ww_command_0_local_15 <= command_0_local_15;
ww_TriggerComplete_in_sync <= TriggerComplete_in_sync;
ww_TriggerComplete_in_sync1 <= TriggerComplete_in_sync1;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
atwd0_pong_enable <= ww_atwd0_pong_enable;
i122 <= ww_i122;
atwd1_pong_enable <= ww_atwd1_pong_enable;
i124 <= ww_i124;
ALT_NOT_ww_RST <= NOT ww_RST;

\atwd0_pong_enable~I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_pong_enable = DFFE(\atwd0_state~21\ # \atwd0_state~22\ & atwd0_pong_enable, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FAF0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \atwd0_state~22\,
	datac => \atwd0_state~21\,
	datad => ww_atwd0_pong_enable,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_pong_enable);

\i122~19_I\ : apex20ke_lcell 
-- Equation(s):
-- i122 = atwd0_pong_enable & !command_0_local_15 & !command_0_local_1 # !atwd0_pong_enable & (command_0_local_15 # !command_0_local_1)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "303F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_atwd0_pong_enable,
	datac => ww_command_0_local_15,
	datad => ww_command_0_local_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_i122);

\atwd1_pong_enable~I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_pong_enable = DFFE(\atwd1_state~21\ # atwd1_pong_enable & \atwd1_state~22\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_atwd1_pong_enable,
	datac => \atwd1_state~22\,
	datad => \atwd1_state~21\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_pong_enable);

\i124~19_I\ : apex20ke_lcell 
-- Equation(s):
-- i124 = atwd1_pong_enable & !command_0_local_15 & !command_0_local_9 # !atwd1_pong_enable & (command_0_local_15 # !command_0_local_9)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "303F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_atwd1_pong_enable,
	datac => ww_command_0_local_15,
	datad => ww_command_0_local_9,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_i124);

\i~208_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~208\ = !TriggerComplete_in_sync & \atwd0_state~21\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_TriggerComplete_in_sync,
	datad => \atwd0_state~21\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~208\);

\atwd0_state~20_I\ : apex20ke_lcell 
-- Equation(s):
-- \atwd0_state~20\ = DFFE(command_0_local_15, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_command_0_local_15,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \atwd0_state~20\);

\atwd1_read_done_dly~I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_read_done_dly = DFFE(command_0_local_10, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_command_0_local_10,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => atwd1_read_done_dly);

\i~215_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~215\ = \atwd1_state~22\ & (atwd1_read_done_dly # !command_0_local_10)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F030",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_command_0_local_10,
	datac => \atwd1_state~22\,
	datad => atwd1_read_done_dly,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~215\);

\atwd1_state~22_I\ : apex20ke_lcell 
-- Equation(s):
-- \atwd1_state~22\ = DFFE(command_0_local_15 & (\i~215\ # TriggerComplete_in_sync & \atwd1_state~21\), GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CC80",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_TriggerComplete_in_sync1,
	datab => ww_command_0_local_15,
	datac => \atwd1_state~21\,
	datad => \i~215\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \atwd1_state~22\);

\i~220_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~220\ = \atwd1_state~22\ & command_0_local_10 & !atwd1_read_done_dly # !\atwd0_state~20\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F8F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \atwd1_state~22\,
	datab => ww_command_0_local_10,
	datac => \atwd0_state~20\,
	datad => atwd1_read_done_dly,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~220\);

\atwd1_state~23_I\ : apex20ke_lcell 
-- Equation(s):
-- \atwd1_state~23\ = DFFE(command_0_local_15 & (\i~220\ # \i~208\ & \atwd1_state~23\), GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F080",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~208\,
	datab => \atwd1_state~23\,
	datac => ww_command_0_local_15,
	datad => \i~220\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \atwd1_state~23\);

\i~213_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~213\ = \atwd1_state~23\ & (TriggerComplete_in_sync # !\atwd0_state~21\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F300",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \atwd0_state~21\,
	datac => ww_TriggerComplete_in_sync,
	datad => \atwd1_state~23\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~213\);

\atwd1_state~21_I\ : apex20ke_lcell 
-- Equation(s):
-- \atwd1_state~21\ = DFFE(command_0_local_15 & (\i~213\ # !TriggerComplete_in_sync & \atwd1_state~21\), GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CC40",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_TriggerComplete_in_sync1,
	datab => ww_command_0_local_15,
	datac => \atwd1_state~21\,
	datad => \i~213\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \atwd1_state~21\);

\atwd0_read_done_dly~I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_read_done_dly = DFFE(command_0_local_2, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_command_0_local_2,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => atwd0_read_done_dly);

\i~217_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~217\ = !atwd0_read_done_dly & command_0_local_2 & \atwd0_state~22\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "4040",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => atwd0_read_done_dly,
	datab => ww_command_0_local_2,
	datac => \atwd0_state~22\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~217\);

\i~218_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~218\ = \atwd1_state~21\ & !TriggerComplete_in_sync

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0A0A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \atwd1_state~21\,
	datac => ww_TriggerComplete_in_sync1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~218\);

\atwd0_state~23_I\ : apex20ke_lcell 
-- Equation(s):
-- \atwd0_state~23\ = DFFE(command_0_local_15 & (\i~217\ # \atwd0_state~23\ & \i~218\), GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E0A0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~217\,
	datab => \atwd0_state~23\,
	datac => ww_command_0_local_15,
	datad => \i~218\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \atwd0_state~23\);

\i~209_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~209\ = \atwd0_state~23\ & (TriggerComplete_in_sync # !\atwd1_state~21\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C4C4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \atwd1_state~21\,
	datab => \atwd0_state~23\,
	datac => ww_TriggerComplete_in_sync1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~209\);

\atwd0_state~21_I\ : apex20ke_lcell 
-- Equation(s):
-- \atwd0_state~21\ = DFFE(command_0_local_15 & (\i~208\ # \i~209\ # !\atwd0_state~20\), GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0B0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~208\,
	datab => \atwd0_state~20\,
	datac => ww_command_0_local_15,
	datad => \i~209\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \atwd0_state~21\);

\i~211_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~211\ = \atwd0_state~22\ & (atwd0_read_done_dly # !command_0_local_2)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B0B0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => atwd0_read_done_dly,
	datab => ww_command_0_local_2,
	datac => \atwd0_state~22\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~211\);

\atwd0_state~22_I\ : apex20ke_lcell 
-- Equation(s):
-- \atwd0_state~22\ = DFFE(command_0_local_15 & (\i~211\ # TriggerComplete_in_sync & \atwd0_state~21\), GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F080",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_TriggerComplete_in_sync,
	datab => \atwd0_state~21\,
	datac => ww_command_0_local_15,
	datad => \i~211\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \atwd0_state~22\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	atwd_timestamp IS
    PORT (
	CLK40 : IN std_logic;
	sload_path_47 : IN std_logic;
	sload_path_46 : IN std_logic;
	sload_path_45 : IN std_logic;
	sload_path_44 : IN std_logic;
	sload_path_43 : IN std_logic;
	sload_path_42 : IN std_logic;
	sload_path_41 : IN std_logic;
	sload_path_40 : IN std_logic;
	sload_path_39 : IN std_logic;
	sload_path_38 : IN std_logic;
	sload_path_37 : IN std_logic;
	sload_path_36 : IN std_logic;
	sload_path_35 : IN std_logic;
	sload_path_34 : IN std_logic;
	sload_path_33 : IN std_logic;
	sload_path_32 : IN std_logic;
	sload_path_31 : IN std_logic;
	sload_path_30 : IN std_logic;
	sload_path_29 : IN std_logic;
	sload_path_28 : IN std_logic;
	sload_path_27 : IN std_logic;
	sload_path_26 : IN std_logic;
	sload_path_25 : IN std_logic;
	sload_path_24 : IN std_logic;
	sload_path_23 : IN std_logic;
	sload_path_22 : IN std_logic;
	sload_path_21 : IN std_logic;
	sload_path_20 : IN std_logic;
	sload_path_19 : IN std_logic;
	sload_path_18 : IN std_logic;
	sload_path_17 : IN std_logic;
	sload_path_16 : IN std_logic;
	sload_path_15 : IN std_logic;
	sload_path_14 : IN std_logic;
	sload_path_13 : IN std_logic;
	sload_path_12 : IN std_logic;
	sload_path_11 : IN std_logic;
	sload_path_10 : IN std_logic;
	sload_path_9 : IN std_logic;
	sload_path_8 : IN std_logic;
	sload_path_7 : IN std_logic;
	sload_path_6 : IN std_logic;
	sload_path_5 : IN std_logic;
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	RST : IN std_logic;
	ATWDTrigger_sig : IN std_logic;
	ATWDTrigger_sig1 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	atwd0_timestamp_32 : OUT std_logic;
	atwd0_timestamp_0 : OUT std_logic;
	atwd1_timestamp_0 : OUT std_logic;
	atwd1_timestamp_32 : OUT std_logic;
	atwd0_timestamp_33 : OUT std_logic;
	atwd0_timestamp_1 : OUT std_logic;
	atwd1_timestamp_1 : OUT std_logic;
	atwd1_timestamp_33 : OUT std_logic;
	atwd0_timestamp_34 : OUT std_logic;
	atwd0_timestamp_2 : OUT std_logic;
	atwd1_timestamp_2 : OUT std_logic;
	atwd1_timestamp_34 : OUT std_logic;
	atwd0_timestamp_35 : OUT std_logic;
	atwd0_timestamp_3 : OUT std_logic;
	atwd1_timestamp_3 : OUT std_logic;
	atwd1_timestamp_35 : OUT std_logic;
	atwd0_timestamp_36 : OUT std_logic;
	atwd0_timestamp_4 : OUT std_logic;
	atwd1_timestamp_4 : OUT std_logic;
	atwd1_timestamp_36 : OUT std_logic;
	atwd0_timestamp_37 : OUT std_logic;
	atwd0_timestamp_5 : OUT std_logic;
	atwd1_timestamp_5 : OUT std_logic;
	atwd1_timestamp_37 : OUT std_logic;
	atwd0_timestamp_38 : OUT std_logic;
	atwd0_timestamp_6 : OUT std_logic;
	atwd1_timestamp_6 : OUT std_logic;
	atwd1_timestamp_38 : OUT std_logic;
	atwd0_timestamp_39 : OUT std_logic;
	atwd0_timestamp_7 : OUT std_logic;
	atwd1_timestamp_7 : OUT std_logic;
	atwd1_timestamp_39 : OUT std_logic;
	atwd0_timestamp_40 : OUT std_logic;
	atwd0_timestamp_8 : OUT std_logic;
	atwd1_timestamp_40 : OUT std_logic;
	atwd1_timestamp_8 : OUT std_logic;
	atwd0_timestamp_41 : OUT std_logic;
	atwd0_timestamp_9 : OUT std_logic;
	atwd1_timestamp_9 : OUT std_logic;
	atwd1_timestamp_41 : OUT std_logic;
	atwd0_timestamp_42 : OUT std_logic;
	atwd0_timestamp_10 : OUT std_logic;
	atwd1_timestamp_10 : OUT std_logic;
	atwd1_timestamp_42 : OUT std_logic;
	atwd0_timestamp_43 : OUT std_logic;
	atwd0_timestamp_11 : OUT std_logic;
	atwd1_timestamp_11 : OUT std_logic;
	atwd1_timestamp_43 : OUT std_logic;
	atwd0_timestamp_44 : OUT std_logic;
	atwd0_timestamp_12 : OUT std_logic;
	atwd1_timestamp_12 : OUT std_logic;
	atwd1_timestamp_44 : OUT std_logic;
	atwd0_timestamp_45 : OUT std_logic;
	atwd0_timestamp_13 : OUT std_logic;
	atwd1_timestamp_13 : OUT std_logic;
	atwd1_timestamp_45 : OUT std_logic;
	atwd0_timestamp_46 : OUT std_logic;
	atwd0_timestamp_14 : OUT std_logic;
	atwd1_timestamp_14 : OUT std_logic;
	atwd1_timestamp_46 : OUT std_logic;
	atwd0_timestamp_47 : OUT std_logic;
	atwd0_timestamp_15 : OUT std_logic;
	atwd1_timestamp_15 : OUT std_logic;
	atwd1_timestamp_47 : OUT std_logic;
	atwd1_timestamp_16 : OUT std_logic;
	atwd0_timestamp_16 : OUT std_logic;
	atwd1_timestamp_17 : OUT std_logic;
	atwd0_timestamp_17 : OUT std_logic;
	atwd1_timestamp_18 : OUT std_logic;
	atwd0_timestamp_18 : OUT std_logic;
	atwd1_timestamp_19 : OUT std_logic;
	atwd0_timestamp_19 : OUT std_logic;
	atwd1_timestamp_20 : OUT std_logic;
	atwd0_timestamp_20 : OUT std_logic;
	atwd1_timestamp_21 : OUT std_logic;
	atwd0_timestamp_21 : OUT std_logic;
	atwd1_timestamp_22 : OUT std_logic;
	atwd0_timestamp_22 : OUT std_logic;
	atwd1_timestamp_23 : OUT std_logic;
	atwd0_timestamp_23 : OUT std_logic;
	atwd1_timestamp_24 : OUT std_logic;
	atwd0_timestamp_24 : OUT std_logic;
	atwd1_timestamp_25 : OUT std_logic;
	atwd0_timestamp_25 : OUT std_logic;
	atwd1_timestamp_26 : OUT std_logic;
	atwd0_timestamp_26 : OUT std_logic;
	atwd1_timestamp_27 : OUT std_logic;
	atwd0_timestamp_27 : OUT std_logic;
	atwd1_timestamp_28 : OUT std_logic;
	atwd0_timestamp_28 : OUT std_logic;
	atwd1_timestamp_29 : OUT std_logic;
	atwd0_timestamp_29 : OUT std_logic;
	atwd1_timestamp_30 : OUT std_logic;
	atwd0_timestamp_30 : OUT std_logic;
	atwd1_timestamp_31 : OUT std_logic;
	atwd0_timestamp_31 : OUT std_logic
	);
END atwd_timestamp;

ARCHITECTURE structure OF atwd_timestamp IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK40 : std_logic;
SIGNAL ww_sload_path_47 : std_logic;
SIGNAL ww_sload_path_46 : std_logic;
SIGNAL ww_sload_path_45 : std_logic;
SIGNAL ww_sload_path_44 : std_logic;
SIGNAL ww_sload_path_43 : std_logic;
SIGNAL ww_sload_path_42 : std_logic;
SIGNAL ww_sload_path_41 : std_logic;
SIGNAL ww_sload_path_40 : std_logic;
SIGNAL ww_sload_path_39 : std_logic;
SIGNAL ww_sload_path_38 : std_logic;
SIGNAL ww_sload_path_37 : std_logic;
SIGNAL ww_sload_path_36 : std_logic;
SIGNAL ww_sload_path_35 : std_logic;
SIGNAL ww_sload_path_34 : std_logic;
SIGNAL ww_sload_path_33 : std_logic;
SIGNAL ww_sload_path_32 : std_logic;
SIGNAL ww_sload_path_31 : std_logic;
SIGNAL ww_sload_path_30 : std_logic;
SIGNAL ww_sload_path_29 : std_logic;
SIGNAL ww_sload_path_28 : std_logic;
SIGNAL ww_sload_path_27 : std_logic;
SIGNAL ww_sload_path_26 : std_logic;
SIGNAL ww_sload_path_25 : std_logic;
SIGNAL ww_sload_path_24 : std_logic;
SIGNAL ww_sload_path_23 : std_logic;
SIGNAL ww_sload_path_22 : std_logic;
SIGNAL ww_sload_path_21 : std_logic;
SIGNAL ww_sload_path_20 : std_logic;
SIGNAL ww_sload_path_19 : std_logic;
SIGNAL ww_sload_path_18 : std_logic;
SIGNAL ww_sload_path_17 : std_logic;
SIGNAL ww_sload_path_16 : std_logic;
SIGNAL ww_sload_path_15 : std_logic;
SIGNAL ww_sload_path_14 : std_logic;
SIGNAL ww_sload_path_13 : std_logic;
SIGNAL ww_sload_path_12 : std_logic;
SIGNAL ww_sload_path_11 : std_logic;
SIGNAL ww_sload_path_10 : std_logic;
SIGNAL ww_sload_path_9 : std_logic;
SIGNAL ww_sload_path_8 : std_logic;
SIGNAL ww_sload_path_7 : std_logic;
SIGNAL ww_sload_path_6 : std_logic;
SIGNAL ww_sload_path_5 : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_ATWDTrigger_sig : std_logic;
SIGNAL ww_ATWDTrigger_sig1 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_atwd0_timestamp_32 : std_logic;
SIGNAL ww_atwd0_timestamp_0 : std_logic;
SIGNAL ww_atwd1_timestamp_0 : std_logic;
SIGNAL ww_atwd1_timestamp_32 : std_logic;
SIGNAL ww_atwd0_timestamp_33 : std_logic;
SIGNAL ww_atwd0_timestamp_1 : std_logic;
SIGNAL ww_atwd1_timestamp_1 : std_logic;
SIGNAL ww_atwd1_timestamp_33 : std_logic;
SIGNAL ww_atwd0_timestamp_34 : std_logic;
SIGNAL ww_atwd0_timestamp_2 : std_logic;
SIGNAL ww_atwd1_timestamp_2 : std_logic;
SIGNAL ww_atwd1_timestamp_34 : std_logic;
SIGNAL ww_atwd0_timestamp_35 : std_logic;
SIGNAL ww_atwd0_timestamp_3 : std_logic;
SIGNAL ww_atwd1_timestamp_3 : std_logic;
SIGNAL ww_atwd1_timestamp_35 : std_logic;
SIGNAL ww_atwd0_timestamp_36 : std_logic;
SIGNAL ww_atwd0_timestamp_4 : std_logic;
SIGNAL ww_atwd1_timestamp_4 : std_logic;
SIGNAL ww_atwd1_timestamp_36 : std_logic;
SIGNAL ww_atwd0_timestamp_37 : std_logic;
SIGNAL ww_atwd0_timestamp_5 : std_logic;
SIGNAL ww_atwd1_timestamp_5 : std_logic;
SIGNAL ww_atwd1_timestamp_37 : std_logic;
SIGNAL ww_atwd0_timestamp_38 : std_logic;
SIGNAL ww_atwd0_timestamp_6 : std_logic;
SIGNAL ww_atwd1_timestamp_6 : std_logic;
SIGNAL ww_atwd1_timestamp_38 : std_logic;
SIGNAL ww_atwd0_timestamp_39 : std_logic;
SIGNAL ww_atwd0_timestamp_7 : std_logic;
SIGNAL ww_atwd1_timestamp_7 : std_logic;
SIGNAL ww_atwd1_timestamp_39 : std_logic;
SIGNAL ww_atwd0_timestamp_40 : std_logic;
SIGNAL ww_atwd0_timestamp_8 : std_logic;
SIGNAL ww_atwd1_timestamp_40 : std_logic;
SIGNAL ww_atwd1_timestamp_8 : std_logic;
SIGNAL ww_atwd0_timestamp_41 : std_logic;
SIGNAL ww_atwd0_timestamp_9 : std_logic;
SIGNAL ww_atwd1_timestamp_9 : std_logic;
SIGNAL ww_atwd1_timestamp_41 : std_logic;
SIGNAL ww_atwd0_timestamp_42 : std_logic;
SIGNAL ww_atwd0_timestamp_10 : std_logic;
SIGNAL ww_atwd1_timestamp_10 : std_logic;
SIGNAL ww_atwd1_timestamp_42 : std_logic;
SIGNAL ww_atwd0_timestamp_43 : std_logic;
SIGNAL ww_atwd0_timestamp_11 : std_logic;
SIGNAL ww_atwd1_timestamp_11 : std_logic;
SIGNAL ww_atwd1_timestamp_43 : std_logic;
SIGNAL ww_atwd0_timestamp_44 : std_logic;
SIGNAL ww_atwd0_timestamp_12 : std_logic;
SIGNAL ww_atwd1_timestamp_12 : std_logic;
SIGNAL ww_atwd1_timestamp_44 : std_logic;
SIGNAL ww_atwd0_timestamp_45 : std_logic;
SIGNAL ww_atwd0_timestamp_13 : std_logic;
SIGNAL ww_atwd1_timestamp_13 : std_logic;
SIGNAL ww_atwd1_timestamp_45 : std_logic;
SIGNAL ww_atwd0_timestamp_46 : std_logic;
SIGNAL ww_atwd0_timestamp_14 : std_logic;
SIGNAL ww_atwd1_timestamp_14 : std_logic;
SIGNAL ww_atwd1_timestamp_46 : std_logic;
SIGNAL ww_atwd0_timestamp_47 : std_logic;
SIGNAL ww_atwd0_timestamp_15 : std_logic;
SIGNAL ww_atwd1_timestamp_15 : std_logic;
SIGNAL ww_atwd1_timestamp_47 : std_logic;
SIGNAL ww_atwd1_timestamp_16 : std_logic;
SIGNAL ww_atwd0_timestamp_16 : std_logic;
SIGNAL ww_atwd1_timestamp_17 : std_logic;
SIGNAL ww_atwd0_timestamp_17 : std_logic;
SIGNAL ww_atwd1_timestamp_18 : std_logic;
SIGNAL ww_atwd0_timestamp_18 : std_logic;
SIGNAL ww_atwd1_timestamp_19 : std_logic;
SIGNAL ww_atwd0_timestamp_19 : std_logic;
SIGNAL ww_atwd1_timestamp_20 : std_logic;
SIGNAL ww_atwd0_timestamp_20 : std_logic;
SIGNAL ww_atwd1_timestamp_21 : std_logic;
SIGNAL ww_atwd0_timestamp_21 : std_logic;
SIGNAL ww_atwd1_timestamp_22 : std_logic;
SIGNAL ww_atwd0_timestamp_22 : std_logic;
SIGNAL ww_atwd1_timestamp_23 : std_logic;
SIGNAL ww_atwd0_timestamp_23 : std_logic;
SIGNAL ww_atwd1_timestamp_24 : std_logic;
SIGNAL ww_atwd0_timestamp_24 : std_logic;
SIGNAL ww_atwd1_timestamp_25 : std_logic;
SIGNAL ww_atwd0_timestamp_25 : std_logic;
SIGNAL ww_atwd1_timestamp_26 : std_logic;
SIGNAL ww_atwd0_timestamp_26 : std_logic;
SIGNAL ww_atwd1_timestamp_27 : std_logic;
SIGNAL ww_atwd0_timestamp_27 : std_logic;
SIGNAL ww_atwd1_timestamp_28 : std_logic;
SIGNAL ww_atwd0_timestamp_28 : std_logic;
SIGNAL ww_atwd1_timestamp_29 : std_logic;
SIGNAL ww_atwd0_timestamp_29 : std_logic;
SIGNAL ww_atwd1_timestamp_30 : std_logic;
SIGNAL ww_atwd0_timestamp_30 : std_logic;
SIGNAL ww_atwd1_timestamp_31 : std_logic;
SIGNAL ww_atwd0_timestamp_31 : std_logic;
SIGNAL atwd0_trigger_last : std_logic;
SIGNAL i5 : std_logic;
SIGNAL atwd1_trigger_last : std_logic;
SIGNAL i55 : std_logic;
SIGNAL ALT_NOT_ww_RST : std_logic;

BEGIN

ww_CLK40 <= CLK40;
ww_sload_path_47 <= sload_path_47;
ww_sload_path_46 <= sload_path_46;
ww_sload_path_45 <= sload_path_45;
ww_sload_path_44 <= sload_path_44;
ww_sload_path_43 <= sload_path_43;
ww_sload_path_42 <= sload_path_42;
ww_sload_path_41 <= sload_path_41;
ww_sload_path_40 <= sload_path_40;
ww_sload_path_39 <= sload_path_39;
ww_sload_path_38 <= sload_path_38;
ww_sload_path_37 <= sload_path_37;
ww_sload_path_36 <= sload_path_36;
ww_sload_path_35 <= sload_path_35;
ww_sload_path_34 <= sload_path_34;
ww_sload_path_33 <= sload_path_33;
ww_sload_path_32 <= sload_path_32;
ww_sload_path_31 <= sload_path_31;
ww_sload_path_30 <= sload_path_30;
ww_sload_path_29 <= sload_path_29;
ww_sload_path_28 <= sload_path_28;
ww_sload_path_27 <= sload_path_27;
ww_sload_path_26 <= sload_path_26;
ww_sload_path_25 <= sload_path_25;
ww_sload_path_24 <= sload_path_24;
ww_sload_path_23 <= sload_path_23;
ww_sload_path_22 <= sload_path_22;
ww_sload_path_21 <= sload_path_21;
ww_sload_path_20 <= sload_path_20;
ww_sload_path_19 <= sload_path_19;
ww_sload_path_18 <= sload_path_18;
ww_sload_path_17 <= sload_path_17;
ww_sload_path_16 <= sload_path_16;
ww_sload_path_15 <= sload_path_15;
ww_sload_path_14 <= sload_path_14;
ww_sload_path_13 <= sload_path_13;
ww_sload_path_12 <= sload_path_12;
ww_sload_path_11 <= sload_path_11;
ww_sload_path_10 <= sload_path_10;
ww_sload_path_9 <= sload_path_9;
ww_sload_path_8 <= sload_path_8;
ww_sload_path_7 <= sload_path_7;
ww_sload_path_6 <= sload_path_6;
ww_sload_path_5 <= sload_path_5;
ww_sload_path_4 <= sload_path_4;
ww_sload_path_3 <= sload_path_3;
ww_sload_path_2 <= sload_path_2;
ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_RST <= RST;
ww_ATWDTrigger_sig <= ATWDTrigger_sig;
ww_ATWDTrigger_sig1 <= ATWDTrigger_sig1;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
atwd0_timestamp_32 <= ww_atwd0_timestamp_32;
atwd0_timestamp_0 <= ww_atwd0_timestamp_0;
atwd1_timestamp_0 <= ww_atwd1_timestamp_0;
atwd1_timestamp_32 <= ww_atwd1_timestamp_32;
atwd0_timestamp_33 <= ww_atwd0_timestamp_33;
atwd0_timestamp_1 <= ww_atwd0_timestamp_1;
atwd1_timestamp_1 <= ww_atwd1_timestamp_1;
atwd1_timestamp_33 <= ww_atwd1_timestamp_33;
atwd0_timestamp_34 <= ww_atwd0_timestamp_34;
atwd0_timestamp_2 <= ww_atwd0_timestamp_2;
atwd1_timestamp_2 <= ww_atwd1_timestamp_2;
atwd1_timestamp_34 <= ww_atwd1_timestamp_34;
atwd0_timestamp_35 <= ww_atwd0_timestamp_35;
atwd0_timestamp_3 <= ww_atwd0_timestamp_3;
atwd1_timestamp_3 <= ww_atwd1_timestamp_3;
atwd1_timestamp_35 <= ww_atwd1_timestamp_35;
atwd0_timestamp_36 <= ww_atwd0_timestamp_36;
atwd0_timestamp_4 <= ww_atwd0_timestamp_4;
atwd1_timestamp_4 <= ww_atwd1_timestamp_4;
atwd1_timestamp_36 <= ww_atwd1_timestamp_36;
atwd0_timestamp_37 <= ww_atwd0_timestamp_37;
atwd0_timestamp_5 <= ww_atwd0_timestamp_5;
atwd1_timestamp_5 <= ww_atwd1_timestamp_5;
atwd1_timestamp_37 <= ww_atwd1_timestamp_37;
atwd0_timestamp_38 <= ww_atwd0_timestamp_38;
atwd0_timestamp_6 <= ww_atwd0_timestamp_6;
atwd1_timestamp_6 <= ww_atwd1_timestamp_6;
atwd1_timestamp_38 <= ww_atwd1_timestamp_38;
atwd0_timestamp_39 <= ww_atwd0_timestamp_39;
atwd0_timestamp_7 <= ww_atwd0_timestamp_7;
atwd1_timestamp_7 <= ww_atwd1_timestamp_7;
atwd1_timestamp_39 <= ww_atwd1_timestamp_39;
atwd0_timestamp_40 <= ww_atwd0_timestamp_40;
atwd0_timestamp_8 <= ww_atwd0_timestamp_8;
atwd1_timestamp_40 <= ww_atwd1_timestamp_40;
atwd1_timestamp_8 <= ww_atwd1_timestamp_8;
atwd0_timestamp_41 <= ww_atwd0_timestamp_41;
atwd0_timestamp_9 <= ww_atwd0_timestamp_9;
atwd1_timestamp_9 <= ww_atwd1_timestamp_9;
atwd1_timestamp_41 <= ww_atwd1_timestamp_41;
atwd0_timestamp_42 <= ww_atwd0_timestamp_42;
atwd0_timestamp_10 <= ww_atwd0_timestamp_10;
atwd1_timestamp_10 <= ww_atwd1_timestamp_10;
atwd1_timestamp_42 <= ww_atwd1_timestamp_42;
atwd0_timestamp_43 <= ww_atwd0_timestamp_43;
atwd0_timestamp_11 <= ww_atwd0_timestamp_11;
atwd1_timestamp_11 <= ww_atwd1_timestamp_11;
atwd1_timestamp_43 <= ww_atwd1_timestamp_43;
atwd0_timestamp_44 <= ww_atwd0_timestamp_44;
atwd0_timestamp_12 <= ww_atwd0_timestamp_12;
atwd1_timestamp_12 <= ww_atwd1_timestamp_12;
atwd1_timestamp_44 <= ww_atwd1_timestamp_44;
atwd0_timestamp_45 <= ww_atwd0_timestamp_45;
atwd0_timestamp_13 <= ww_atwd0_timestamp_13;
atwd1_timestamp_13 <= ww_atwd1_timestamp_13;
atwd1_timestamp_45 <= ww_atwd1_timestamp_45;
atwd0_timestamp_46 <= ww_atwd0_timestamp_46;
atwd0_timestamp_14 <= ww_atwd0_timestamp_14;
atwd1_timestamp_14 <= ww_atwd1_timestamp_14;
atwd1_timestamp_46 <= ww_atwd1_timestamp_46;
atwd0_timestamp_47 <= ww_atwd0_timestamp_47;
atwd0_timestamp_15 <= ww_atwd0_timestamp_15;
atwd1_timestamp_15 <= ww_atwd1_timestamp_15;
atwd1_timestamp_47 <= ww_atwd1_timestamp_47;
atwd1_timestamp_16 <= ww_atwd1_timestamp_16;
atwd0_timestamp_16 <= ww_atwd0_timestamp_16;
atwd1_timestamp_17 <= ww_atwd1_timestamp_17;
atwd0_timestamp_17 <= ww_atwd0_timestamp_17;
atwd1_timestamp_18 <= ww_atwd1_timestamp_18;
atwd0_timestamp_18 <= ww_atwd0_timestamp_18;
atwd1_timestamp_19 <= ww_atwd1_timestamp_19;
atwd0_timestamp_19 <= ww_atwd0_timestamp_19;
atwd1_timestamp_20 <= ww_atwd1_timestamp_20;
atwd0_timestamp_20 <= ww_atwd0_timestamp_20;
atwd1_timestamp_21 <= ww_atwd1_timestamp_21;
atwd0_timestamp_21 <= ww_atwd0_timestamp_21;
atwd1_timestamp_22 <= ww_atwd1_timestamp_22;
atwd0_timestamp_22 <= ww_atwd0_timestamp_22;
atwd1_timestamp_23 <= ww_atwd1_timestamp_23;
atwd0_timestamp_23 <= ww_atwd0_timestamp_23;
atwd1_timestamp_24 <= ww_atwd1_timestamp_24;
atwd0_timestamp_24 <= ww_atwd0_timestamp_24;
atwd1_timestamp_25 <= ww_atwd1_timestamp_25;
atwd0_timestamp_25 <= ww_atwd0_timestamp_25;
atwd1_timestamp_26 <= ww_atwd1_timestamp_26;
atwd0_timestamp_26 <= ww_atwd0_timestamp_26;
atwd1_timestamp_27 <= ww_atwd1_timestamp_27;
atwd0_timestamp_27 <= ww_atwd0_timestamp_27;
atwd1_timestamp_28 <= ww_atwd1_timestamp_28;
atwd0_timestamp_28 <= ww_atwd0_timestamp_28;
atwd1_timestamp_29 <= ww_atwd1_timestamp_29;
atwd0_timestamp_29 <= ww_atwd0_timestamp_29;
atwd1_timestamp_30 <= ww_atwd1_timestamp_30;
atwd0_timestamp_30 <= ww_atwd0_timestamp_30;
atwd1_timestamp_31 <= ww_atwd1_timestamp_31;
atwd0_timestamp_31 <= ww_atwd0_timestamp_31;
ALT_NOT_ww_RST <= NOT ww_RST;

\atwd0_timestamp[32]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_32 = DFFE(sload_path_32, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_32,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_32);

\atwd0_timestamp[0]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_0 = DFFE(sload_path_0, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_0,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_0);

\atwd1_timestamp[0]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_0 = DFFE(sload_path_0, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_0,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_0);

\atwd1_timestamp[32]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_32 = DFFE(sload_path_32, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_32,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_32);

\atwd0_timestamp[33]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_33 = DFFE(sload_path_33, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_33,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_33);

\atwd0_timestamp[1]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_1 = DFFE(sload_path_1, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_1,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_1);

\atwd1_timestamp[1]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_1 = DFFE(sload_path_1, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_1,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_1);

\atwd1_timestamp[33]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_33 = DFFE(sload_path_33, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_33,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_33);

\atwd0_timestamp[34]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_34 = DFFE(sload_path_34, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_34,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_34);

\atwd0_timestamp[2]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_2 = DFFE(sload_path_2, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_2,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_2);

\atwd1_timestamp[2]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_2 = DFFE(sload_path_2, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_2,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_2);

\atwd1_timestamp[34]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_34 = DFFE(sload_path_34, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_34,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_34);

\atwd0_timestamp[35]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_35 = DFFE(sload_path_35, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_35,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_35);

\atwd0_timestamp[3]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_3 = DFFE(sload_path_3, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_3,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_3);

\atwd1_timestamp[3]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_3 = DFFE(sload_path_3, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_3,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_3);

\atwd1_timestamp[35]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_35 = DFFE(sload_path_35, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_35,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_35);

\atwd0_timestamp[36]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_36 = DFFE(sload_path_36, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_36,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_36);

\atwd0_timestamp[4]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_4 = DFFE(sload_path_4, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_4,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_4);

\atwd1_timestamp[4]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_4 = DFFE(sload_path_4, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_4,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_4);

\atwd1_timestamp[36]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_36 = DFFE(sload_path_36, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_36,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_36);

\atwd0_timestamp[37]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_37 = DFFE(sload_path_37, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_37,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_37);

\atwd0_timestamp[5]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_5 = DFFE(sload_path_5, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_5,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_5);

\atwd1_timestamp[5]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_5 = DFFE(sload_path_5, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_5,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_5);

\atwd1_timestamp[37]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_37 = DFFE(sload_path_37, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_37,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_37);

\atwd0_timestamp[38]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_38 = DFFE(sload_path_38, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_sload_path_38,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_38);

\atwd0_timestamp[6]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_6 = DFFE(sload_path_6, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_6,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_6);

\atwd1_timestamp[6]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_6 = DFFE(sload_path_6, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_6,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_6);

\atwd1_timestamp[38]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_38 = DFFE(sload_path_38, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_38,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_38);

\atwd0_timestamp[39]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_39 = DFFE(sload_path_39, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_39,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_39);

\atwd0_timestamp[7]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_7 = DFFE(sload_path_7, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_7,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_7);

\atwd1_timestamp[7]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_7 = DFFE(sload_path_7, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_sload_path_7,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_7);

\atwd1_timestamp[39]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_39 = DFFE(sload_path_39, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_sload_path_39,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_39);

\atwd0_timestamp[40]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_40 = DFFE(sload_path_40, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_sload_path_40,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_40);

\atwd0_timestamp[8]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_8 = DFFE(sload_path_8, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_8,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_8);

\atwd1_timestamp[40]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_40 = DFFE(sload_path_40, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_40,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_40);

\atwd1_timestamp[8]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_8 = DFFE(sload_path_8, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_sload_path_8,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_8);

\atwd0_timestamp[41]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_41 = DFFE(sload_path_41, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_41,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_41);

\atwd0_timestamp[9]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_9 = DFFE(sload_path_9, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_9,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_9);

\atwd1_timestamp[9]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_9 = DFFE(sload_path_9, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_9,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_9);

\atwd1_timestamp[41]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_41 = DFFE(sload_path_41, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_41,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_41);

\atwd0_timestamp[42]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_42 = DFFE(sload_path_42, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_42,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_42);

\atwd0_timestamp[10]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_10 = DFFE(sload_path_10, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_10,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_10);

\atwd1_timestamp[10]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_10 = DFFE(sload_path_10, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_10,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_10);

\atwd1_timestamp[42]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_42 = DFFE(sload_path_42, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_sload_path_42,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_42);

\atwd0_timestamp[43]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_43 = DFFE(sload_path_43, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_43,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_43);

\atwd0_timestamp[11]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_11 = DFFE(sload_path_11, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_11,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_11);

\atwd1_timestamp[11]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_11 = DFFE(sload_path_11, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_11,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_11);

\atwd1_timestamp[43]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_43 = DFFE(sload_path_43, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_43,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_43);

\atwd0_timestamp[44]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_44 = DFFE(sload_path_44, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_sload_path_44,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_44);

\atwd0_timestamp[12]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_12 = DFFE(sload_path_12, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_12,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_12);

\atwd1_timestamp[12]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_12 = DFFE(sload_path_12, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_12,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_12);

\atwd1_timestamp[44]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_44 = DFFE(sload_path_44, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_44,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_44);

\atwd0_timestamp[45]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_45 = DFFE(sload_path_45, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_45,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_45);

\atwd0_timestamp[13]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_13 = DFFE(sload_path_13, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_13,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_13);

\atwd1_timestamp[13]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_13 = DFFE(sload_path_13, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_sload_path_13,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_13);

\atwd1_timestamp[45]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_45 = DFFE(sload_path_45, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_45,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_45);

\atwd0_timestamp[46]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_46 = DFFE(sload_path_46, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_46,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_46);

\atwd0_timestamp[14]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_14 = DFFE(sload_path_14, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_14,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_14);

\atwd1_timestamp[14]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_14 = DFFE(sload_path_14, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_14,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_14);

\atwd1_timestamp[46]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_46 = DFFE(sload_path_46, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_46,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_46);

\atwd0_timestamp[47]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_47 = DFFE(sload_path_47, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_sload_path_47,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_47);

\atwd0_timestamp[15]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_15 = DFFE(sload_path_15, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_sload_path_15,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_15);

\atwd1_timestamp[15]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_15 = DFFE(sload_path_15, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_15,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_15);

\atwd1_timestamp[47]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_47 = DFFE(sload_path_47, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_47,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_47);

\atwd1_timestamp[16]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_16 = DFFE(sload_path_16, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_16,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_16);

\atwd0_timestamp[16]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_16 = DFFE(sload_path_16, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_sload_path_16,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_16);

\atwd1_timestamp[17]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_17 = DFFE(sload_path_17, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_sload_path_17,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_17);

\atwd0_timestamp[17]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_17 = DFFE(sload_path_17, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_17,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_17);

\atwd1_timestamp[18]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_18 = DFFE(sload_path_18, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_18,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_18);

\atwd0_timestamp[18]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_18 = DFFE(sload_path_18, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_sload_path_18,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_18);

\atwd1_timestamp[19]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_19 = DFFE(sload_path_19, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_19,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_19);

\atwd0_timestamp[19]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_19 = DFFE(sload_path_19, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_19,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_19);

\atwd1_timestamp[20]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_20 = DFFE(sload_path_20, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_20,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_20);

\atwd0_timestamp[20]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_20 = DFFE(sload_path_20, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_20,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_20);

\atwd1_timestamp[21]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_21 = DFFE(sload_path_21, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_21,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_21);

\atwd0_timestamp[21]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_21 = DFFE(sload_path_21, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_21,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_21);

\atwd1_timestamp[22]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_22 = DFFE(sload_path_22, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_22,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_22);

\atwd0_timestamp[22]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_22 = DFFE(sload_path_22, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_22,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_22);

\atwd1_timestamp[23]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_23 = DFFE(sload_path_23, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_23,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_23);

\atwd0_timestamp[23]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_23 = DFFE(sload_path_23, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_23,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_23);

\atwd1_timestamp[24]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_24 = DFFE(sload_path_24, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_24,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_24);

\atwd0_timestamp[24]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_24 = DFFE(sload_path_24, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_24,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_24);

\atwd1_timestamp[25]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_25 = DFFE(sload_path_25, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_25,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_25);

\atwd0_timestamp[25]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_25 = DFFE(sload_path_25, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_25,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_25);

\atwd1_timestamp[26]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_26 = DFFE(sload_path_26, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_26,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_26);

\atwd0_timestamp[26]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_26 = DFFE(sload_path_26, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_26,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_26);

\atwd1_timestamp[27]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_27 = DFFE(sload_path_27, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_27,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_27);

\atwd0_timestamp[27]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_27 = DFFE(sload_path_27, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_27,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_27);

\atwd1_timestamp[28]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_28 = DFFE(sload_path_28, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_28,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_28);

\atwd0_timestamp[28]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_28 = DFFE(sload_path_28, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_28,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_28);

\atwd1_timestamp[29]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_29 = DFFE(sload_path_29, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_29,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_29);

\atwd0_timestamp[29]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_29 = DFFE(sload_path_29, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_29,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_29);

\atwd1_timestamp[30]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_30 = DFFE(sload_path_30, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_30,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_30);

\atwd0_timestamp[30]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_30 = DFFE(sload_path_30, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_30,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_30);

\atwd1_timestamp[31]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_timestamp_31 = DFFE(sload_path_31, GLOBAL(outclock1), !GLOBAL(RST), , i55)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_sload_path_31,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i55,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd1_timestamp_31);

\atwd0_timestamp[31]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_timestamp_31 = DFFE(sload_path_31, GLOBAL(outclock1), !GLOBAL(RST), , i5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_31,
	clk => ww_CLK40,
	aclr => ww_RST,
	ena => i5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_atwd0_timestamp_31);

\atwd0_trigger_last~I\ : apex20ke_lcell 
-- Equation(s):
-- atwd0_trigger_last = DFFE(\inst_atwd_trigger|ATWDTrigger_sig\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_ATWDTrigger_sig,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => atwd0_trigger_last);

\i5~I\ : apex20ke_lcell 
-- Equation(s):
-- i5 = \inst_atwd_trigger|ATWDTrigger_sig\ & !atwd0_trigger_last

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00F0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_ATWDTrigger_sig,
	datad => atwd0_trigger_last,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i5);

\atwd1_trigger_last~I\ : apex20ke_lcell 
-- Equation(s):
-- atwd1_trigger_last = DFFE(\inst_atwd_trigger|ATWDTrigger_sig~1\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_ATWDTrigger_sig1,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => atwd1_trigger_last);

\i55~I\ : apex20ke_lcell 
-- Equation(s):
-- i55 = \inst_atwd_trigger|ATWDTrigger_sig~1\ & !atwd1_trigger_last

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00F0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_ATWDTrigger_sig1,
	datad => atwd1_trigger_last,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i55);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	atwd_control IS
    PORT (
	CLK80 : IN std_logic;
	CLK40 : IN std_logic;
	RST : IN std_logic;
	state1 : IN std_logic;
	readout_done : IN std_logic;
	TriggerComplete_in_sync : IN std_logic;
	ATWDTrigger_sig : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	OutputEnable : OUT std_logic;
	CounterClock : OUT std_logic;
	RampSet : OUT std_logic;
	channel_1 : OUT std_logic;
	channel_0 : OUT std_logic;
	ReadWrite : OUT std_logic;
	AnalogReset : OUT std_logic;
	DigitalReset : OUT std_logic;
	DigitalSet : OUT std_logic;
	state : OUT std_logic;
	busy : OUT std_logic;
	reset_trig : OUT std_logic;
	start_readout : OUT std_logic
	);
END atwd_control;

ARCHITECTURE structure OF atwd_control IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK80 : std_logic;
SIGNAL ww_CLK40 : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_state1 : std_logic;
SIGNAL ww_readout_done : std_logic;
SIGNAL ww_TriggerComplete_in_sync : std_logic;
SIGNAL ww_ATWDTrigger_sig : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_OutputEnable : std_logic;
SIGNAL ww_CounterClock : std_logic;
SIGNAL ww_RampSet : std_logic;
SIGNAL ww_channel_1 : std_logic;
SIGNAL ww_channel_0 : std_logic;
SIGNAL ww_ReadWrite : std_logic;
SIGNAL ww_AnalogReset : std_logic;
SIGNAL ww_DigitalReset : std_logic;
SIGNAL ww_DigitalSet : std_logic;
SIGNAL ww_state : std_logic;
SIGNAL ww_busy : std_logic;
SIGNAL ww_reset_trig : std_logic;
SIGNAL ww_start_readout : std_logic;
SIGNAL \i~5868\ : std_logic;
SIGNAL \state~28\ : std_logic;
SIGNAL \state~29\ : std_logic;
SIGNAL \state~25\ : std_logic;
SIGNAL \state~22\ : std_logic;
SIGNAL \state~24\ : std_logic;
SIGNAL \i~5845\ : std_logic;
SIGNAL \state~31\ : std_logic;
SIGNAL \i~5874\ : std_logic;
SIGNAL \i~53\ : std_logic;
SIGNAL \i~526\ : std_logic;
SIGNAL \settle_cnt[0]\ : std_logic;
SIGNAL \i~526COUT\ : std_logic;
SIGNAL \i~527\ : std_logic;
SIGNAL \settle_cnt[1]\ : std_logic;
SIGNAL \i~527COUT\ : std_logic;
SIGNAL \i~528\ : std_logic;
SIGNAL \settle_cnt[2]\ : std_logic;
SIGNAL \i~528COUT\ : std_logic;
SIGNAL \i~529\ : std_logic;
SIGNAL \settle_cnt[3]\ : std_logic;
SIGNAL \i~5866\ : std_logic;
SIGNAL \i~529COUT\ : std_logic;
SIGNAL \i~530\ : std_logic;
SIGNAL \settle_cnt[4]\ : std_logic;
SIGNAL \i~530COUT\ : std_logic;
SIGNAL \i~531\ : std_logic;
SIGNAL \settle_cnt[5]\ : std_logic;
SIGNAL \i~531COUT\ : std_logic;
SIGNAL \i~532\ : std_logic;
SIGNAL \settle_cnt[6]\ : std_logic;
SIGNAL \i~532COUT\ : std_logic;
SIGNAL \i~533\ : std_logic;
SIGNAL \settle_cnt[7]\ : std_logic;
SIGNAL \i~533COUT\ : std_logic;
SIGNAL \i~534\ : std_logic;
SIGNAL \settle_cnt[8]\ : std_logic;
SIGNAL \i~534COUT\ : std_logic;
SIGNAL \i~535\ : std_logic;
SIGNAL \settle_cnt[9]\ : std_logic;
SIGNAL \i~535COUT\ : std_logic;
SIGNAL \i~536\ : std_logic;
SIGNAL \settle_cnt[10]\ : std_logic;
SIGNAL \i~536COUT\ : std_logic;
SIGNAL \i~537\ : std_logic;
SIGNAL \settle_cnt[11]\ : std_logic;
SIGNAL \i~5864\ : std_logic;
SIGNAL \i~537COUT\ : std_logic;
SIGNAL \i~538\ : std_logic;
SIGNAL \settle_cnt[12]\ : std_logic;
SIGNAL \i~538COUT\ : std_logic;
SIGNAL \i~539\ : std_logic;
SIGNAL \settle_cnt[13]\ : std_logic;
SIGNAL \i~539COUT\ : std_logic;
SIGNAL \i~540\ : std_logic;
SIGNAL \settle_cnt[14]\ : std_logic;
SIGNAL \i~540COUT\ : std_logic;
SIGNAL \i~541\ : std_logic;
SIGNAL \settle_cnt[15]\ : std_logic;
SIGNAL \i~5863\ : std_logic;
SIGNAL \i~5865\ : std_logic;
SIGNAL \i~5867\ : std_logic;
SIGNAL \i~541COUT\ : std_logic;
SIGNAL \i~542\ : std_logic;
SIGNAL \settle_cnt[16]\ : std_logic;
SIGNAL \i~542COUT\ : std_logic;
SIGNAL \i~543\ : std_logic;
SIGNAL \settle_cnt[17]\ : std_logic;
SIGNAL \i~543COUT\ : std_logic;
SIGNAL \i~544\ : std_logic;
SIGNAL \settle_cnt[18]\ : std_logic;
SIGNAL \i~544COUT\ : std_logic;
SIGNAL \i~545\ : std_logic;
SIGNAL \settle_cnt[19]\ : std_logic;
SIGNAL \i~5861\ : std_logic;
SIGNAL \i~545COUT\ : std_logic;
SIGNAL \i~546\ : std_logic;
SIGNAL \settle_cnt[20]\ : std_logic;
SIGNAL \i~546COUT\ : std_logic;
SIGNAL \i~547\ : std_logic;
SIGNAL \settle_cnt[21]\ : std_logic;
SIGNAL \i~547COUT\ : std_logic;
SIGNAL \i~548\ : std_logic;
SIGNAL \settle_cnt[22]\ : std_logic;
SIGNAL \i~548COUT\ : std_logic;
SIGNAL \i~549\ : std_logic;
SIGNAL \settle_cnt[23]\ : std_logic;
SIGNAL \i~549COUT\ : std_logic;
SIGNAL \i~550\ : std_logic;
SIGNAL \settle_cnt[24]\ : std_logic;
SIGNAL \i~550COUT\ : std_logic;
SIGNAL \i~551\ : std_logic;
SIGNAL \settle_cnt[25]\ : std_logic;
SIGNAL \i~551COUT\ : std_logic;
SIGNAL \i~552\ : std_logic;
SIGNAL \settle_cnt[26]\ : std_logic;
SIGNAL \i~552COUT\ : std_logic;
SIGNAL \i~553\ : std_logic;
SIGNAL \settle_cnt[27]\ : std_logic;
SIGNAL \i~5859\ : std_logic;
SIGNAL \i~5860\ : std_logic;
SIGNAL \i~553COUT\ : std_logic;
SIGNAL \i~554\ : std_logic;
SIGNAL \settle_cnt[28]\ : std_logic;
SIGNAL \i~554COUT\ : std_logic;
SIGNAL \i~555\ : std_logic;
SIGNAL \settle_cnt[29]\ : std_logic;
SIGNAL \i~555COUT\ : std_logic;
SIGNAL \i~556\ : std_logic;
SIGNAL \settle_cnt[30]\ : std_logic;
SIGNAL \i~556COUT\ : std_logic;
SIGNAL \i~557\ : std_logic;
SIGNAL \settle_cnt[31]\ : std_logic;
SIGNAL \i~5858\ : std_logic;
SIGNAL \i~5862\ : std_logic;
SIGNAL \state~23\ : std_logic;
SIGNAL \state~30\ : std_logic;
SIGNAL \i~5832\ : std_logic;
SIGNAL \i~5873\ : std_logic;
SIGNAL \i~494\ : std_logic;
SIGNAL \i~5835\ : std_logic;
SIGNAL \i~490\ : std_logic;
SIGNAL \digitize_cnt[0]\ : std_logic;
SIGNAL \i~494COUT\ : std_logic;
SIGNAL \i~495\ : std_logic;
SIGNAL \digitize_cnt[1]\ : std_logic;
SIGNAL \i~495COUT\ : std_logic;
SIGNAL \i~496\ : std_logic;
SIGNAL \digitize_cnt[2]\ : std_logic;
SIGNAL \i~496COUT\ : std_logic;
SIGNAL \i~497\ : std_logic;
SIGNAL \digitize_cnt[3]\ : std_logic;
SIGNAL \i~497COUT\ : std_logic;
SIGNAL \i~498\ : std_logic;
SIGNAL \digitize_cnt[4]\ : std_logic;
SIGNAL \i~498COUT\ : std_logic;
SIGNAL \i~499\ : std_logic;
SIGNAL \digitize_cnt[5]\ : std_logic;
SIGNAL \i~499COUT\ : std_logic;
SIGNAL \i~500\ : std_logic;
SIGNAL \digitize_cnt[6]\ : std_logic;
SIGNAL \i~500COUT\ : std_logic;
SIGNAL \i~501\ : std_logic;
SIGNAL \digitize_cnt[7]\ : std_logic;
SIGNAL \i~501COUT\ : std_logic;
SIGNAL \i~502\ : std_logic;
SIGNAL \digitize_cnt[8]\ : std_logic;
SIGNAL \i~502COUT\ : std_logic;
SIGNAL \i~503\ : std_logic;
SIGNAL \digitize_cnt[9]\ : std_logic;
SIGNAL \i~503COUT\ : std_logic;
SIGNAL \i~504\ : std_logic;
SIGNAL \digitize_cnt[10]\ : std_logic;
SIGNAL \i~504COUT\ : std_logic;
SIGNAL \i~505\ : std_logic;
SIGNAL \digitize_cnt[11]\ : std_logic;
SIGNAL \i~505COUT\ : std_logic;
SIGNAL \i~506\ : std_logic;
SIGNAL \digitize_cnt[12]\ : std_logic;
SIGNAL \i~506COUT\ : std_logic;
SIGNAL \i~507\ : std_logic;
SIGNAL \digitize_cnt[13]\ : std_logic;
SIGNAL \i~507COUT\ : std_logic;
SIGNAL \i~508\ : std_logic;
SIGNAL \digitize_cnt[14]\ : std_logic;
SIGNAL \i~508COUT\ : std_logic;
SIGNAL \i~509\ : std_logic;
SIGNAL \digitize_cnt[15]\ : std_logic;
SIGNAL \i~509COUT\ : std_logic;
SIGNAL \i~510\ : std_logic;
SIGNAL \digitize_cnt[16]\ : std_logic;
SIGNAL \i~510COUT\ : std_logic;
SIGNAL \i~511\ : std_logic;
SIGNAL \digitize_cnt[17]\ : std_logic;
SIGNAL \i~511COUT\ : std_logic;
SIGNAL \i~512\ : std_logic;
SIGNAL \digitize_cnt[18]\ : std_logic;
SIGNAL \i~512COUT\ : std_logic;
SIGNAL \i~513\ : std_logic;
SIGNAL \digitize_cnt[19]\ : std_logic;
SIGNAL \i~5851\ : std_logic;
SIGNAL \i~513COUT\ : std_logic;
SIGNAL \i~514\ : std_logic;
SIGNAL \digitize_cnt[20]\ : std_logic;
SIGNAL \i~514COUT\ : std_logic;
SIGNAL \i~515\ : std_logic;
SIGNAL \digitize_cnt[21]\ : std_logic;
SIGNAL \i~515COUT\ : std_logic;
SIGNAL \i~516\ : std_logic;
SIGNAL \digitize_cnt[22]\ : std_logic;
SIGNAL \i~516COUT\ : std_logic;
SIGNAL \i~517\ : std_logic;
SIGNAL \digitize_cnt[23]\ : std_logic;
SIGNAL \i~517COUT\ : std_logic;
SIGNAL \i~518\ : std_logic;
SIGNAL \digitize_cnt[24]\ : std_logic;
SIGNAL \i~518COUT\ : std_logic;
SIGNAL \i~519\ : std_logic;
SIGNAL \digitize_cnt[25]\ : std_logic;
SIGNAL \i~519COUT\ : std_logic;
SIGNAL \i~520\ : std_logic;
SIGNAL \digitize_cnt[26]\ : std_logic;
SIGNAL \i~520COUT\ : std_logic;
SIGNAL \i~521\ : std_logic;
SIGNAL \digitize_cnt[27]\ : std_logic;
SIGNAL \i~521COUT\ : std_logic;
SIGNAL \i~522\ : std_logic;
SIGNAL \digitize_cnt[28]\ : std_logic;
SIGNAL \i~522COUT\ : std_logic;
SIGNAL \i~523\ : std_logic;
SIGNAL \digitize_cnt[29]\ : std_logic;
SIGNAL \i~523COUT\ : std_logic;
SIGNAL \i~524\ : std_logic;
SIGNAL \digitize_cnt[30]\ : std_logic;
SIGNAL \i~524COUT\ : std_logic;
SIGNAL \i~525\ : std_logic;
SIGNAL \digitize_cnt[31]\ : std_logic;
SIGNAL \i~5848\ : std_logic;
SIGNAL \i~5850\ : std_logic;
SIGNAL \i~5849\ : std_logic;
SIGNAL \i~5852\ : std_logic;
SIGNAL \i~5856\ : std_logic;
SIGNAL \i~5853\ : std_logic;
SIGNAL \i~5854\ : std_logic;
SIGNAL \i~5855\ : std_logic;
SIGNAL \i~5857\ : std_logic;
SIGNAL \i~2\ : std_logic;
SIGNAL \i~0\ : std_logic;
SIGNAL \state~21\ : std_logic;
SIGNAL \i~466\ : std_logic;
SIGNAL \state~27\ : std_logic;
SIGNAL \i~5831\ : std_logic;
SIGNAL \i~44\ : std_logic;
SIGNAL \i~5870\ : std_logic;
SIGNAL counterclk_high : std_logic;
SIGNAL \i~5871\ : std_logic;
SIGNAL counterclk_low : std_logic;
SIGNAL cclk : std_logic;
SIGNAL \i~5833\ : std_logic;
SIGNAL \i~5834\ : std_logic;
SIGNAL \i~214\ : std_logic;
SIGNAL \i~5836\ : std_logic;
SIGNAL \i~5840\ : std_logic;
SIGNAL \i~5838\ : std_logic;
SIGNAL \i~5839\ : std_logic;
SIGNAL \i~5841\ : std_logic;
SIGNAL \i~5842\ : std_logic;
SIGNAL \i~5844\ : std_logic;
SIGNAL \i~5872\ : std_logic;
SIGNAL \i~42\ : std_logic;
SIGNAL ALT_NOT_ww_RST : std_logic;

BEGIN

ww_CLK80 <= CLK80;
ww_CLK40 <= CLK40;
ww_RST <= RST;
ww_state1 <= state1;
ww_readout_done <= readout_done;
ww_TriggerComplete_in_sync <= TriggerComplete_in_sync;
ww_ATWDTrigger_sig <= ATWDTrigger_sig;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
OutputEnable <= ww_OutputEnable;
CounterClock <= ww_CounterClock;
RampSet <= ww_RampSet;
channel_1 <= ww_channel_1;
channel_0 <= ww_channel_0;
ReadWrite <= ww_ReadWrite;
AnalogReset <= ww_AnalogReset;
DigitalReset <= ww_DigitalReset;
DigitalSet <= ww_DigitalSet;
state <= ww_state;
busy <= ww_busy;
reset_trig <= ww_reset_trig;
start_readout <= ww_start_readout;
ALT_NOT_ww_RST <= NOT ww_RST;

\OutputEnable~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- OutputEnable = DFFE(\state~27\ # OutputEnable & \i~44\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FCCC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \state~27\,
	datac => ww_OutputEnable,
	datad => \i~44\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_OutputEnable);

\CounterClock~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- CounterClock = DFFE(counterclk_high # !counterclk_low & !cclk, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CCCF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => counterclk_high,
	datac => counterclk_low,
	datad => cclk,
	clk => ww_CLK80,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_CounterClock);

\RampSet~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- RampSet = DFFE(RampSet & (!\i~5833\ # !\i~5831\) # !\i~5834\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "4CFF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5831\,
	datab => ww_RampSet,
	datac => \i~5833\,
	datad => \i~5834\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_RampSet);

\channel[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- channel_1 = DFFE(\i~214\ # channel_1 & (\state~29\ # !\i~5836\), GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F8FA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_channel_1,
	datab => \state~29\,
	datac => \i~214\,
	datad => \i~5836\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_channel_1);

\channel[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- channel_0 = DFFE(channel_0 & (\state~29\ # !\i~5836\) # !channel_0 & \state~24\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E4EE",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_channel_0,
	datab => \state~24\,
	datac => \state~29\,
	datad => \i~5836\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_channel_0);

\ReadWrite~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- ReadWrite = DFFE(\state~30\ # ReadWrite & (!\i~5839\ # !\i~5840\), GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DCFC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5840\,
	datab => \state~30\,
	datac => ww_ReadWrite,
	datad => \i~5839\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_ReadWrite);

\AnalogReset~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- AnalogReset = DFFE(\i~5841\ # AnalogReset & (\i~5842\ # !\i~5832\), GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAEE",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5841\,
	datab => ww_AnalogReset,
	datac => \i~5842\,
	datad => \i~5832\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_AnalogReset);

\DigitalReset~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- DigitalReset = DFFE(DigitalReset & (\i~5844\ # !\i~5835\) # !\i~5845\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F575",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5845\,
	datab => \i~5835\,
	datac => ww_DigitalReset,
	datad => \i~5844\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_DigitalReset);

\DigitalSet~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- DigitalSet = DFFE(DigitalSet & (\state~21\ # !\i~5833\) # !\i~5835\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "D5F5",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5835\,
	datab => \state~21\,
	datac => ww_DigitalSet,
	datad => \i~5833\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_DigitalSet);

\state~26_I\ : apex20ke_lcell 
-- Equation(s):
-- state = DFFE(!state1, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00FF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_state1,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_state);

\busy~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- busy = DFFE(\state~31\ # busy & \i~42\ # !state1, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FDDD",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_state1,
	datab => \state~31\,
	datac => ww_busy,
	datad => \i~42\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_busy);

\reset_trig~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reset_trig = DFFE(\state~29\ # reset_trig & (\state~24\ # !\i~5836\), GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAFA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~29\,
	datab => \state~24\,
	datac => ww_reset_trig,
	datad => \i~5836\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reset_trig);

\start_readout~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- start_readout = DFFE(\state~27\ # start_readout & \i~44\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FCF0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_start_readout,
	datac => \state~27\,
	datad => \i~44\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_start_readout);

\i~5868_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5868\ = channel_0 & channel_1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CC00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_channel_0,
	datad => ww_channel_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5868\);

\state~28_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~28\ = DFFE(\state~27\ & readout_done, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "A0A0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~27\,
	datac => ww_readout_done,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~28\);

\state~29_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~29\ = DFFE(TriggerComplete_in_sync & (\state~29\ # \i~5868\ & \state~28\) # !TriggerComplete_in_sync & \i~5868\ & \state~28\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_TriggerComplete_in_sync,
	datab => \state~29\,
	datac => \i~5868\,
	datad => \state~28\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~29\);

\state~25_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~25\ = DFFE(\state~29\ & !TriggerComplete_in_sync, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \state~29\,
	datad => ww_TriggerComplete_in_sync,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~25\);

\state~22_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~22\ = DFFE(state # \state~25\ # \state~22\ & !\inst_atwd_trigger|ATWDTrigger_sig\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFCE",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datab => ww_state,
	datac => ww_ATWDTrigger_sig,
	datad => \state~25\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~22\);

\state~24_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~24\ = DFFE(\state~28\ & (!channel_0 # !channel_1), GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5F00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_channel_1,
	datac => ww_channel_0,
	datad => \state~28\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~24\);

\i~5845_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5845\ = !\state~22\ & !\state~24\ & !\state~29\ & state1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0100",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datab => \state~24\,
	datac => \state~29\,
	datad => ww_state1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5845\);

\state~31_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~31\ = DFFE(\state~22\ & (\inst_atwd_trigger|ATWDTrigger_sig\ # \state~31\ & !TriggerComplete_in_sync) # !\state~22\ & \state~31\ & !TriggerComplete_in_sync, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "A0EC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datab => \state~31\,
	datac => ww_ATWDTrigger_sig,
	datad => ww_TriggerComplete_in_sync,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~31\);

\i~5874_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5874\ = !\state~27\ & !state & !\state~28\ & !\state~25\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~27\,
	datab => ww_state,
	datac => \state~28\,
	datad => \state~25\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5874\);

\i~53_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~53\ = \state~31\ # \state~21\ # !\i~5874\ # !\i~5845\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FDFF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5845\,
	datab => \state~31\,
	datac => \state~21\,
	datad => \i~5874\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~53\);

\i~526_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~526\ = !\settle_cnt[0]\
-- \i~526COUT\ = CARRY(\settle_cnt[0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "33CC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \settle_cnt[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~526\,
	cout => \i~526COUT\);

\settle_cnt[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[0]\ = DFFE(\settle_cnt[0]\ & (\i~53\ # \i~526\ & \state~30\) # !\settle_cnt[0]\ & \i~526\ & \state~30\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[0]\,
	datab => \i~526\,
	datac => \state~30\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[0]\);

\i~527_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~527\ = \settle_cnt[1]\ $ \i~526COUT\
-- \i~527COUT\ = CARRY(!\i~526COUT\ # !\settle_cnt[1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[1]\,
	cin => \i~526COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~527\,
	cout => \i~527COUT\);

\settle_cnt[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[1]\ = DFFE(\state~30\ & (\i~527\ # \settle_cnt[1]\ & \i~53\) # !\state~30\ & \settle_cnt[1]\ & \i~53\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~30\,
	datab => \settle_cnt[1]\,
	datac => \i~53\,
	datad => \i~527\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[1]\);

\i~528_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~528\ = \settle_cnt[2]\ $ !\i~527COUT\
-- \i~528COUT\ = CARRY(\settle_cnt[2]\ & !\i~527COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \settle_cnt[2]\,
	cin => \i~527COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~528\,
	cout => \i~528COUT\);

\settle_cnt[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[2]\ = DFFE(\i~528\ & (\state~30\ # \settle_cnt[2]\ & \i~53\) # !\i~528\ & \settle_cnt[2]\ & \i~53\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~528\,
	datab => \settle_cnt[2]\,
	datac => \state~30\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[2]\);

\i~529_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~529\ = \settle_cnt[3]\ $ \i~528COUT\
-- \i~529COUT\ = CARRY(!\i~528COUT\ # !\settle_cnt[3]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \settle_cnt[3]\,
	cin => \i~528COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~529\,
	cout => \i~529COUT\);

\settle_cnt[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[3]\ = DFFE(\i~529\ & (\state~30\ # \settle_cnt[3]\ & \i~53\) # !\i~529\ & \settle_cnt[3]\ & \i~53\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~529\,
	datab => \settle_cnt[3]\,
	datac => \state~30\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[3]\);

\i~5866_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5866\ = \settle_cnt[3]\ # \settle_cnt[1]\ # \settle_cnt[2]\ # \settle_cnt[0]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[3]\,
	datab => \settle_cnt[1]\,
	datac => \settle_cnt[2]\,
	datad => \settle_cnt[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5866\);

\i~530_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~530\ = \settle_cnt[4]\ $ !\i~529COUT\
-- \i~530COUT\ = CARRY(\settle_cnt[4]\ & !\i~529COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \settle_cnt[4]\,
	cin => \i~529COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~530\,
	cout => \i~530COUT\);

\settle_cnt[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[4]\ = DFFE(\settle_cnt[4]\ & (\i~53\ # \state~30\ & \i~530\) # !\settle_cnt[4]\ & \state~30\ & \i~530\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[4]\,
	datab => \state~30\,
	datac => \i~530\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[4]\);

\i~531_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~531\ = \settle_cnt[5]\ $ \i~530COUT\
-- \i~531COUT\ = CARRY(!\i~530COUT\ # !\settle_cnt[5]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \settle_cnt[5]\,
	cin => \i~530COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~531\,
	cout => \i~531COUT\);

\settle_cnt[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[5]\ = DFFE(\settle_cnt[5]\ & (\i~53\ # \state~30\ & \i~531\) # !\settle_cnt[5]\ & \state~30\ & \i~531\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[5]\,
	datab => \state~30\,
	datac => \i~531\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[5]\);

\i~532_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~532\ = \settle_cnt[6]\ $ !\i~531COUT\
-- \i~532COUT\ = CARRY(\settle_cnt[6]\ & !\i~531COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[6]\,
	cin => \i~531COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~532\,
	cout => \i~532COUT\);

\settle_cnt[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[6]\ = DFFE(\state~30\ & (\i~532\ # \settle_cnt[6]\ & \i~53\) # !\state~30\ & \settle_cnt[6]\ & \i~53\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~30\,
	datab => \settle_cnt[6]\,
	datac => \i~53\,
	datad => \i~532\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[6]\);

\i~533_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~533\ = \settle_cnt[7]\ $ \i~532COUT\
-- \i~533COUT\ = CARRY(!\i~532COUT\ # !\settle_cnt[7]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[7]\,
	cin => \i~532COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~533\,
	cout => \i~533COUT\);

\settle_cnt[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[7]\ = DFFE(\i~53\ & (\settle_cnt[7]\ # \i~533\ & \state~30\) # !\i~53\ & \i~533\ & \state~30\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~53\,
	datab => \i~533\,
	datac => \state~30\,
	datad => \settle_cnt[7]\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[7]\);

\i~534_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~534\ = \settle_cnt[8]\ $ !\i~533COUT\
-- \i~534COUT\ = CARRY(\settle_cnt[8]\ & !\i~533COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[8]\,
	cin => \i~533COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~534\,
	cout => \i~534COUT\);

\settle_cnt[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[8]\ = DFFE(\state~30\ & (\i~534\ # \settle_cnt[8]\ & \i~53\) # !\state~30\ & \settle_cnt[8]\ & \i~53\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~30\,
	datab => \settle_cnt[8]\,
	datac => \i~53\,
	datad => \i~534\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[8]\);

\i~535_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~535\ = \settle_cnt[9]\ $ \i~534COUT\
-- \i~535COUT\ = CARRY(!\i~534COUT\ # !\settle_cnt[9]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[9]\,
	cin => \i~534COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~535\,
	cout => \i~535COUT\);

\settle_cnt[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[9]\ = DFFE(\state~30\ & (\i~535\ # \settle_cnt[9]\ & \i~53\) # !\state~30\ & \settle_cnt[9]\ & \i~53\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~30\,
	datab => \settle_cnt[9]\,
	datac => \i~53\,
	datad => \i~535\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[9]\);

\i~536_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~536\ = \settle_cnt[10]\ $ !\i~535COUT\
-- \i~536COUT\ = CARRY(\settle_cnt[10]\ & !\i~535COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[10]\,
	cin => \i~535COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~536\,
	cout => \i~536COUT\);

\settle_cnt[10]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[10]\ = DFFE(\state~30\ & (\i~536\ # \settle_cnt[10]\ & \i~53\) # !\state~30\ & \settle_cnt[10]\ & \i~53\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~30\,
	datab => \settle_cnt[10]\,
	datac => \i~53\,
	datad => \i~536\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[10]\);

\i~537_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~537\ = \settle_cnt[11]\ $ \i~536COUT\
-- \i~537COUT\ = CARRY(!\i~536COUT\ # !\settle_cnt[11]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[11]\,
	cin => \i~536COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~537\,
	cout => \i~537COUT\);

\settle_cnt[11]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[11]\ = DFFE(\state~30\ & (\i~537\ # \settle_cnt[11]\ & \i~53\) # !\state~30\ & \settle_cnt[11]\ & \i~53\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~30\,
	datab => \settle_cnt[11]\,
	datac => \i~53\,
	datad => \i~537\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[11]\);

\i~5864_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5864\ = \settle_cnt[11]\ # \settle_cnt[9]\ # \settle_cnt[10]\ # \settle_cnt[8]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[11]\,
	datab => \settle_cnt[9]\,
	datac => \settle_cnt[10]\,
	datad => \settle_cnt[8]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5864\);

\i~538_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~538\ = \settle_cnt[12]\ $ !\i~537COUT\
-- \i~538COUT\ = CARRY(\settle_cnt[12]\ & !\i~537COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \settle_cnt[12]\,
	cin => \i~537COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~538\,
	cout => \i~538COUT\);

\settle_cnt[12]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[12]\ = DFFE(\settle_cnt[12]\ & (\i~53\ # \state~30\ & \i~538\) # !\settle_cnt[12]\ & \state~30\ & \i~538\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[12]\,
	datab => \state~30\,
	datac => \i~538\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[12]\);

\i~539_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~539\ = \settle_cnt[13]\ $ \i~538COUT\
-- \i~539COUT\ = CARRY(!\i~538COUT\ # !\settle_cnt[13]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \settle_cnt[13]\,
	cin => \i~538COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~539\,
	cout => \i~539COUT\);

\settle_cnt[13]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[13]\ = DFFE(\settle_cnt[13]\ & (\i~53\ # \state~30\ & \i~539\) # !\settle_cnt[13]\ & \state~30\ & \i~539\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[13]\,
	datab => \state~30\,
	datac => \i~539\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[13]\);

\i~540_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~540\ = \settle_cnt[14]\ $ !\i~539COUT\
-- \i~540COUT\ = CARRY(\settle_cnt[14]\ & !\i~539COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \settle_cnt[14]\,
	cin => \i~539COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~540\,
	cout => \i~540COUT\);

\settle_cnt[14]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[14]\ = DFFE(\settle_cnt[14]\ & (\i~53\ # \state~30\ & \i~540\) # !\settle_cnt[14]\ & \state~30\ & \i~540\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[14]\,
	datab => \state~30\,
	datac => \i~53\,
	datad => \i~540\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[14]\);

\i~541_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~541\ = \settle_cnt[15]\ $ \i~540COUT\
-- \i~541COUT\ = CARRY(!\i~540COUT\ # !\settle_cnt[15]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \settle_cnt[15]\,
	cin => \i~540COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~541\,
	cout => \i~541COUT\);

\settle_cnt[15]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[15]\ = DFFE(\settle_cnt[15]\ & (\i~53\ # \state~30\ & \i~541\) # !\settle_cnt[15]\ & \state~30\ & \i~541\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[15]\,
	datab => \state~30\,
	datac => \i~541\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[15]\);

\i~5863_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5863\ = \settle_cnt[15]\ # \settle_cnt[13]\ # \settle_cnt[14]\ # \settle_cnt[12]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[15]\,
	datab => \settle_cnt[13]\,
	datac => \settle_cnt[14]\,
	datad => \settle_cnt[12]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5863\);

\i~5865_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5865\ = \settle_cnt[5]\ # \settle_cnt[4]\ # \settle_cnt[6]\ # !\settle_cnt[7]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFB",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[5]\,
	datab => \settle_cnt[7]\,
	datac => \settle_cnt[4]\,
	datad => \settle_cnt[6]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5865\);

\i~5867_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5867\ = \i~5866\ # \i~5864\ # \i~5863\ # \i~5865\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5866\,
	datab => \i~5864\,
	datac => \i~5863\,
	datad => \i~5865\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5867\);

\i~542_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~542\ = \settle_cnt[16]\ $ !\i~541COUT\
-- \i~542COUT\ = CARRY(\settle_cnt[16]\ & !\i~541COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \settle_cnt[16]\,
	cin => \i~541COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~542\,
	cout => \i~542COUT\);

\settle_cnt[16]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[16]\ = DFFE(\settle_cnt[16]\ & (\i~53\ # \state~30\ & \i~542\) # !\settle_cnt[16]\ & \state~30\ & \i~542\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[16]\,
	datab => \state~30\,
	datac => \i~542\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[16]\);

\i~543_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~543\ = \settle_cnt[17]\ $ \i~542COUT\
-- \i~543COUT\ = CARRY(!\i~542COUT\ # !\settle_cnt[17]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \settle_cnt[17]\,
	cin => \i~542COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~543\,
	cout => \i~543COUT\);

\settle_cnt[17]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[17]\ = DFFE(\settle_cnt[17]\ & (\i~53\ # \state~30\ & \i~543\) # !\settle_cnt[17]\ & \state~30\ & \i~543\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[17]\,
	datab => \state~30\,
	datac => \i~543\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[17]\);

\i~544_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~544\ = \settle_cnt[18]\ $ !\i~543COUT\
-- \i~544COUT\ = CARRY(\settle_cnt[18]\ & !\i~543COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \settle_cnt[18]\,
	cin => \i~543COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~544\,
	cout => \i~544COUT\);

\settle_cnt[18]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[18]\ = DFFE(\settle_cnt[18]\ & (\i~53\ # \state~30\ & \i~544\) # !\settle_cnt[18]\ & \state~30\ & \i~544\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[18]\,
	datab => \state~30\,
	datac => \i~544\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[18]\);

\i~545_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~545\ = \settle_cnt[19]\ $ \i~544COUT\
-- \i~545COUT\ = CARRY(!\i~544COUT\ # !\settle_cnt[19]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \settle_cnt[19]\,
	cin => \i~544COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~545\,
	cout => \i~545COUT\);

\settle_cnt[19]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[19]\ = DFFE(\settle_cnt[19]\ & (\i~53\ # \state~30\ & \i~545\) # !\settle_cnt[19]\ & \state~30\ & \i~545\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[19]\,
	datab => \state~30\,
	datac => \i~545\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[19]\);

\i~5861_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5861\ = \settle_cnt[17]\ # \settle_cnt[18]\ # \settle_cnt[19]\ # \settle_cnt[16]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[17]\,
	datab => \settle_cnt[18]\,
	datac => \settle_cnt[19]\,
	datad => \settle_cnt[16]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5861\);

\i~546_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~546\ = \settle_cnt[20]\ $ !\i~545COUT\
-- \i~546COUT\ = CARRY(\settle_cnt[20]\ & !\i~545COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[20]\,
	cin => \i~545COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~546\,
	cout => \i~546COUT\);

\settle_cnt[20]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[20]\ = DFFE(\i~546\ & (\state~30\ # \settle_cnt[20]\ & \i~53\) # !\i~546\ & \settle_cnt[20]\ & \i~53\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~546\,
	datab => \settle_cnt[20]\,
	datac => \state~30\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[20]\);

\i~547_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~547\ = \settle_cnt[21]\ $ \i~546COUT\
-- \i~547COUT\ = CARRY(!\i~546COUT\ # !\settle_cnt[21]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[21]\,
	cin => \i~546COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~547\,
	cout => \i~547COUT\);

\settle_cnt[21]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[21]\ = DFFE(\state~30\ & (\i~547\ # \settle_cnt[21]\ & \i~53\) # !\state~30\ & \settle_cnt[21]\ & \i~53\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~30\,
	datab => \i~547\,
	datac => \settle_cnt[21]\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[21]\);

\i~548_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~548\ = \settle_cnt[22]\ $ !\i~547COUT\
-- \i~548COUT\ = CARRY(\settle_cnt[22]\ & !\i~547COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[22]\,
	cin => \i~547COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~548\,
	cout => \i~548COUT\);

\settle_cnt[22]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[22]\ = DFFE(\state~30\ & (\i~548\ # \settle_cnt[22]\ & \i~53\) # !\state~30\ & \settle_cnt[22]\ & \i~53\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~30\,
	datab => \settle_cnt[22]\,
	datac => \i~548\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[22]\);

\i~549_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~549\ = \settle_cnt[23]\ $ \i~548COUT\
-- \i~549COUT\ = CARRY(!\i~548COUT\ # !\settle_cnt[23]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[23]\,
	cin => \i~548COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~549\,
	cout => \i~549COUT\);

\settle_cnt[23]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[23]\ = DFFE(\state~30\ & (\i~549\ # \settle_cnt[23]\ & \i~53\) # !\state~30\ & \settle_cnt[23]\ & \i~53\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~30\,
	datab => \i~549\,
	datac => \settle_cnt[23]\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[23]\);

\i~550_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~550\ = \settle_cnt[24]\ $ !\i~549COUT\
-- \i~550COUT\ = CARRY(\settle_cnt[24]\ & !\i~549COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \settle_cnt[24]\,
	cin => \i~549COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~550\,
	cout => \i~550COUT\);

\settle_cnt[24]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[24]\ = DFFE(\settle_cnt[24]\ & (\i~53\ # \state~30\ & \i~550\) # !\settle_cnt[24]\ & \state~30\ & \i~550\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[24]\,
	datab => \state~30\,
	datac => \i~550\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[24]\);

\i~551_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~551\ = \settle_cnt[25]\ $ \i~550COUT\
-- \i~551COUT\ = CARRY(!\i~550COUT\ # !\settle_cnt[25]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \settle_cnt[25]\,
	cin => \i~550COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~551\,
	cout => \i~551COUT\);

\settle_cnt[25]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[25]\ = DFFE(\settle_cnt[25]\ & (\i~53\ # \state~30\ & \i~551\) # !\settle_cnt[25]\ & \state~30\ & \i~551\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[25]\,
	datab => \state~30\,
	datac => \i~551\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[25]\);

\i~552_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~552\ = \settle_cnt[26]\ $ !\i~551COUT\
-- \i~552COUT\ = CARRY(\settle_cnt[26]\ & !\i~551COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[26]\,
	cin => \i~551COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~552\,
	cout => \i~552COUT\);

\settle_cnt[26]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[26]\ = DFFE(\i~53\ & (\settle_cnt[26]\ # \state~30\ & \i~552\) # !\i~53\ & \state~30\ & \i~552\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~53\,
	datab => \state~30\,
	datac => \settle_cnt[26]\,
	datad => \i~552\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[26]\);

\i~553_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~553\ = \settle_cnt[27]\ $ \i~552COUT\
-- \i~553COUT\ = CARRY(!\i~552COUT\ # !\settle_cnt[27]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \settle_cnt[27]\,
	cin => \i~552COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~553\,
	cout => \i~553COUT\);

\settle_cnt[27]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[27]\ = DFFE(\settle_cnt[27]\ & (\i~53\ # \state~30\ & \i~553\) # !\settle_cnt[27]\ & \state~30\ & \i~553\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[27]\,
	datab => \state~30\,
	datac => \i~553\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[27]\);

\i~5859_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5859\ = \settle_cnt[26]\ # \settle_cnt[25]\ # \settle_cnt[27]\ # \settle_cnt[24]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[26]\,
	datab => \settle_cnt[25]\,
	datac => \settle_cnt[27]\,
	datad => \settle_cnt[24]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5859\);

\i~5860_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5860\ = \settle_cnt[21]\ # \settle_cnt[22]\ # \settle_cnt[23]\ # \settle_cnt[20]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[21]\,
	datab => \settle_cnt[22]\,
	datac => \settle_cnt[23]\,
	datad => \settle_cnt[20]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5860\);

\i~554_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~554\ = \settle_cnt[28]\ $ !\i~553COUT\
-- \i~554COUT\ = CARRY(\settle_cnt[28]\ & !\i~553COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[28]\,
	cin => \i~553COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~554\,
	cout => \i~554COUT\);

\settle_cnt[28]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[28]\ = DFFE(\settle_cnt[28]\ & (\i~53\ # \i~554\ & \state~30\) # !\settle_cnt[28]\ & \i~554\ & \state~30\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[28]\,
	datab => \i~554\,
	datac => \state~30\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[28]\);

\i~555_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~555\ = \settle_cnt[29]\ $ \i~554COUT\
-- \i~555COUT\ = CARRY(!\i~554COUT\ # !\settle_cnt[29]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \settle_cnt[29]\,
	cin => \i~554COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~555\,
	cout => \i~555COUT\);

\settle_cnt[29]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[29]\ = DFFE(\settle_cnt[29]\ & (\i~53\ # \state~30\ & \i~555\) # !\settle_cnt[29]\ & \state~30\ & \i~555\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[29]\,
	datab => \state~30\,
	datac => \i~555\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[29]\);

\i~556_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~556\ = \settle_cnt[30]\ $ !\i~555COUT\
-- \i~556COUT\ = CARRY(\settle_cnt[30]\ & !\i~555COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[30]\,
	cin => \i~555COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~556\,
	cout => \i~556COUT\);

\settle_cnt[30]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[30]\ = DFFE(\settle_cnt[30]\ & (\i~53\ # \i~556\ & \state~30\) # !\settle_cnt[30]\ & \i~556\ & \state~30\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[30]\,
	datab => \i~556\,
	datac => \state~30\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[30]\);

\i~557_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~557\ = \i~556COUT\ $ \settle_cnt[31]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datad => \settle_cnt[31]\,
	cin => \i~556COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~557\);

\settle_cnt[31]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[31]\ = DFFE(\i~53\ & (\settle_cnt[31]\ # \i~557\ & \state~30\) # !\i~53\ & \i~557\ & \state~30\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~53\,
	datab => \i~557\,
	datac => \state~30\,
	datad => \settle_cnt[31]\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[31]\);

\i~5858_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5858\ = \settle_cnt[30]\ # \settle_cnt[31]\ # \settle_cnt[28]\ # \settle_cnt[29]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[30]\,
	datab => \settle_cnt[31]\,
	datac => \settle_cnt[28]\,
	datad => \settle_cnt[29]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5858\);

\i~5862_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5862\ = \i~5861\ # \i~5859\ # \i~5860\ # \i~5858\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5861\,
	datab => \i~5859\,
	datac => \i~5860\,
	datad => \i~5858\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5862\);

\state~23_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~23\ = DFFE(\state~24\ # \state~31\ & TriggerComplete_in_sync, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FAAA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~24\,
	datac => \state~31\,
	datad => ww_TriggerComplete_in_sync,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~23\);

\state~30_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~30\ = DFFE(\state~23\ # \state~30\ & (\i~5867\ # \i~5862\), GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFC8",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5867\,
	datab => \state~30\,
	datac => \i~5862\,
	datad => \state~23\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~30\);

\i~5832_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5832\ = !\state~30\ & !\state~25\ & !state & !\state~31\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~30\,
	datab => \state~25\,
	datac => ww_state,
	datad => \state~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5832\);

\i~5873_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5873\ = \state~28\ # \state~27\ # !\i~5832\ # !\i~5845\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FBFF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~28\,
	datab => \i~5845\,
	datac => \state~27\,
	datad => \i~5832\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5873\);

\i~494_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~494\ = !\digitize_cnt[0]\
-- \i~494COUT\ = CARRY(\digitize_cnt[0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "33CC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \digitize_cnt[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~494\,
	cout => \i~494COUT\);

\i~5835_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5835\ = !\state~27\ & !\state~28\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0033",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \state~27\,
	datad => \state~28\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5835\);

\i~490_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~490\ = \digitize_cnt[0]\ & (!\i~5832\ # !\i~5835\ # !\i~5845\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "2AAA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[0]\,
	datab => \i~5845\,
	datac => \i~5835\,
	datad => \i~5832\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~490\);

\digitize_cnt[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[0]\ = DFFE(\state~23\ # \i~490\ # \state~21\ & \i~494\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFEA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~23\,
	datab => \state~21\,
	datac => \i~494\,
	datad => \i~490\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[0]\);

\i~495_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~495\ = \digitize_cnt[1]\ $ \i~494COUT\
-- \i~495COUT\ = CARRY(!\i~494COUT\ # !\digitize_cnt[1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \digitize_cnt[1]\,
	cin => \i~494COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~495\,
	cout => \i~495COUT\);

\digitize_cnt[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[1]\ = DFFE(\digitize_cnt[1]\ & (\i~5873\ # \i~495\ & \state~21\) # !\digitize_cnt[1]\ & \i~495\ & \state~21\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[1]\,
	datab => \i~495\,
	datac => \state~21\,
	datad => \i~5873\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[1]\);

\i~496_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~496\ = \digitize_cnt[2]\ $ !\i~495COUT\
-- \i~496COUT\ = CARRY(\digitize_cnt[2]\ & !\i~495COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \digitize_cnt[2]\,
	cin => \i~495COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~496\,
	cout => \i~496COUT\);

\digitize_cnt[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[2]\ = DFFE(\digitize_cnt[2]\ & (\i~5873\ # \i~496\ & \state~21\) # !\digitize_cnt[2]\ & \i~496\ & \state~21\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[2]\,
	datab => \i~496\,
	datac => \state~21\,
	datad => \i~5873\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[2]\);

\i~497_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~497\ = \digitize_cnt[3]\ $ \i~496COUT\
-- \i~497COUT\ = CARRY(!\i~496COUT\ # !\digitize_cnt[3]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \digitize_cnt[3]\,
	cin => \i~496COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~497\,
	cout => \i~497COUT\);

\digitize_cnt[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[3]\ = DFFE(\i~497\ & (\state~21\ # \digitize_cnt[3]\ & \i~5873\) # !\i~497\ & \digitize_cnt[3]\ & \i~5873\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~497\,
	datab => \digitize_cnt[3]\,
	datac => \state~21\,
	datad => \i~5873\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[3]\);

\i~498_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~498\ = \digitize_cnt[4]\ $ !\i~497COUT\
-- \i~498COUT\ = CARRY(\digitize_cnt[4]\ & !\i~497COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \digitize_cnt[4]\,
	cin => \i~497COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~498\,
	cout => \i~498COUT\);

\digitize_cnt[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[4]\ = DFFE(\digitize_cnt[4]\ & (\i~5873\ # \i~498\ & \state~21\) # !\digitize_cnt[4]\ & \i~498\ & \state~21\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[4]\,
	datab => \i~498\,
	datac => \state~21\,
	datad => \i~5873\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[4]\);

\i~499_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~499\ = \digitize_cnt[5]\ $ \i~498COUT\
-- \i~499COUT\ = CARRY(!\i~498COUT\ # !\digitize_cnt[5]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[5]\,
	cin => \i~498COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~499\,
	cout => \i~499COUT\);

\digitize_cnt[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[5]\ = DFFE(\state~21\ & (\i~499\ # \digitize_cnt[5]\ & \i~5873\) # !\state~21\ & \digitize_cnt[5]\ & \i~5873\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~21\,
	datab => \digitize_cnt[5]\,
	datac => \i~5873\,
	datad => \i~499\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[5]\);

\i~500_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~500\ = \digitize_cnt[6]\ $ !\i~499COUT\
-- \i~500COUT\ = CARRY(\digitize_cnt[6]\ & !\i~499COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \digitize_cnt[6]\,
	cin => \i~499COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~500\,
	cout => \i~500COUT\);

\digitize_cnt[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[6]\ = DFFE(\digitize_cnt[6]\ & (\i~5873\ # \state~21\ & \i~500\) # !\digitize_cnt[6]\ & \state~21\ & \i~500\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[6]\,
	datab => \state~21\,
	datac => \i~500\,
	datad => \i~5873\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[6]\);

\i~501_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~501\ = \digitize_cnt[7]\ $ \i~500COUT\
-- \i~501COUT\ = CARRY(!\i~500COUT\ # !\digitize_cnt[7]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \digitize_cnt[7]\,
	cin => \i~500COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~501\,
	cout => \i~501COUT\);

\digitize_cnt[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[7]\ = DFFE(\digitize_cnt[7]\ & (\i~5873\ # \state~21\ & \i~501\) # !\digitize_cnt[7]\ & \state~21\ & \i~501\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[7]\,
	datab => \state~21\,
	datac => \i~501\,
	datad => \i~5873\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[7]\);

\i~502_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~502\ = \digitize_cnt[8]\ $ !\i~501COUT\
-- \i~502COUT\ = CARRY(\digitize_cnt[8]\ & !\i~501COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \digitize_cnt[8]\,
	cin => \i~501COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~502\,
	cout => \i~502COUT\);

\digitize_cnt[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[8]\ = DFFE(\digitize_cnt[8]\ & (\i~5873\ # \state~21\ & \i~502\) # !\digitize_cnt[8]\ & \state~21\ & \i~502\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[8]\,
	datab => \state~21\,
	datac => \i~502\,
	datad => \i~5873\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[8]\);

\i~503_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~503\ = \digitize_cnt[9]\ $ \i~502COUT\
-- \i~503COUT\ = CARRY(!\i~502COUT\ # !\digitize_cnt[9]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[9]\,
	cin => \i~502COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~503\,
	cout => \i~503COUT\);

\digitize_cnt[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[9]\ = DFFE(\state~21\ & (\i~503\ # \digitize_cnt[9]\ & \i~5873\) # !\state~21\ & \digitize_cnt[9]\ & \i~5873\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~21\,
	datab => \digitize_cnt[9]\,
	datac => \i~5873\,
	datad => \i~503\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[9]\);

\i~504_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~504\ = \digitize_cnt[10]\ $ !\i~503COUT\
-- \i~504COUT\ = CARRY(\digitize_cnt[10]\ & !\i~503COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[10]\,
	cin => \i~503COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~504\,
	cout => \i~504COUT\);

\digitize_cnt[10]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[10]\ = DFFE(\state~21\ & (\i~504\ # \digitize_cnt[10]\ & \i~5873\) # !\state~21\ & \digitize_cnt[10]\ & \i~5873\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~21\,
	datab => \digitize_cnt[10]\,
	datac => \i~5873\,
	datad => \i~504\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[10]\);

\i~505_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~505\ = \digitize_cnt[11]\ $ \i~504COUT\
-- \i~505COUT\ = CARRY(!\i~504COUT\ # !\digitize_cnt[11]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[11]\,
	cin => \i~504COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~505\,
	cout => \i~505COUT\);

\digitize_cnt[11]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[11]\ = DFFE(\state~21\ & (\i~505\ # \digitize_cnt[11]\ & \i~5873\) # !\state~21\ & \digitize_cnt[11]\ & \i~5873\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~21\,
	datab => \digitize_cnt[11]\,
	datac => \i~5873\,
	datad => \i~505\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[11]\);

\i~506_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~506\ = \digitize_cnt[12]\ $ !\i~505COUT\
-- \i~506COUT\ = CARRY(\digitize_cnt[12]\ & !\i~505COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[12]\,
	cin => \i~505COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~506\,
	cout => \i~506COUT\);

\digitize_cnt[12]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[12]\ = DFFE(\state~21\ & (\i~506\ # \digitize_cnt[12]\ & \i~5873\) # !\state~21\ & \digitize_cnt[12]\ & \i~5873\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~21\,
	datab => \digitize_cnt[12]\,
	datac => \i~5873\,
	datad => \i~506\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[12]\);

\i~507_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~507\ = \digitize_cnt[13]\ $ \i~506COUT\
-- \i~507COUT\ = CARRY(!\i~506COUT\ # !\digitize_cnt[13]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[13]\,
	cin => \i~506COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~507\,
	cout => \i~507COUT\);

\digitize_cnt[13]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[13]\ = DFFE(\state~21\ & (\i~507\ # \digitize_cnt[13]\ & \i~5873\) # !\state~21\ & \digitize_cnt[13]\ & \i~5873\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~21\,
	datab => \digitize_cnt[13]\,
	datac => \i~5873\,
	datad => \i~507\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[13]\);

\i~508_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~508\ = \digitize_cnt[14]\ $ !\i~507COUT\
-- \i~508COUT\ = CARRY(\digitize_cnt[14]\ & !\i~507COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[14]\,
	cin => \i~507COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~508\,
	cout => \i~508COUT\);

\digitize_cnt[14]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[14]\ = DFFE(\state~21\ & (\i~508\ # \digitize_cnt[14]\ & \i~5873\) # !\state~21\ & \digitize_cnt[14]\ & \i~5873\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~21\,
	datab => \digitize_cnt[14]\,
	datac => \i~5873\,
	datad => \i~508\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[14]\);

\i~509_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~509\ = \digitize_cnt[15]\ $ \i~508COUT\
-- \i~509COUT\ = CARRY(!\i~508COUT\ # !\digitize_cnt[15]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[15]\,
	cin => \i~508COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~509\,
	cout => \i~509COUT\);

\digitize_cnt[15]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[15]\ = DFFE(\state~21\ & (\i~509\ # \digitize_cnt[15]\ & \i~5873\) # !\state~21\ & \digitize_cnt[15]\ & \i~5873\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~21\,
	datab => \digitize_cnt[15]\,
	datac => \i~5873\,
	datad => \i~509\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[15]\);

\i~510_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~510\ = \digitize_cnt[16]\ $ !\i~509COUT\
-- \i~510COUT\ = CARRY(\digitize_cnt[16]\ & !\i~509COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \digitize_cnt[16]\,
	cin => \i~509COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~510\,
	cout => \i~510COUT\);

\digitize_cnt[16]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[16]\ = DFFE(\digitize_cnt[16]\ & (\i~5873\ # \state~21\ & \i~510\) # !\digitize_cnt[16]\ & \state~21\ & \i~510\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[16]\,
	datab => \state~21\,
	datac => \i~510\,
	datad => \i~5873\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[16]\);

\i~511_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~511\ = \digitize_cnt[17]\ $ \i~510COUT\
-- \i~511COUT\ = CARRY(!\i~510COUT\ # !\digitize_cnt[17]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \digitize_cnt[17]\,
	cin => \i~510COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~511\,
	cout => \i~511COUT\);

\digitize_cnt[17]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[17]\ = DFFE(\digitize_cnt[17]\ & (\i~5873\ # \state~21\ & \i~511\) # !\digitize_cnt[17]\ & \state~21\ & \i~511\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[17]\,
	datab => \state~21\,
	datac => \i~511\,
	datad => \i~5873\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[17]\);

\i~512_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~512\ = \digitize_cnt[18]\ $ !\i~511COUT\
-- \i~512COUT\ = CARRY(\digitize_cnt[18]\ & !\i~511COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \digitize_cnt[18]\,
	cin => \i~511COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~512\,
	cout => \i~512COUT\);

\digitize_cnt[18]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[18]\ = DFFE(\digitize_cnt[18]\ & (\i~5873\ # \state~21\ & \i~512\) # !\digitize_cnt[18]\ & \state~21\ & \i~512\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[18]\,
	datab => \state~21\,
	datac => \i~512\,
	datad => \i~5873\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[18]\);

\i~513_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~513\ = \digitize_cnt[19]\ $ \i~512COUT\
-- \i~513COUT\ = CARRY(!\i~512COUT\ # !\digitize_cnt[19]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \digitize_cnt[19]\,
	cin => \i~512COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~513\,
	cout => \i~513COUT\);

\digitize_cnt[19]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[19]\ = DFFE(\digitize_cnt[19]\ & (\i~5873\ # \state~21\ & \i~513\) # !\digitize_cnt[19]\ & \state~21\ & \i~513\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[19]\,
	datab => \state~21\,
	datac => \i~513\,
	datad => \i~5873\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[19]\);

\i~5851_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5851\ = \digitize_cnt[18]\ # \digitize_cnt[17]\ # \digitize_cnt[16]\ # \digitize_cnt[19]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[18]\,
	datab => \digitize_cnt[17]\,
	datac => \digitize_cnt[16]\,
	datad => \digitize_cnt[19]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5851\);

\i~514_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~514\ = \digitize_cnt[20]\ $ !\i~513COUT\
-- \i~514COUT\ = CARRY(\digitize_cnt[20]\ & !\i~513COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[20]\,
	cin => \i~513COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~514\,
	cout => \i~514COUT\);

\digitize_cnt[20]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[20]\ = DFFE(\i~5873\ & (\digitize_cnt[20]\ # \i~514\ & \state~21\) # !\i~5873\ & \i~514\ & \state~21\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5873\,
	datab => \i~514\,
	datac => \state~21\,
	datad => \digitize_cnt[20]\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[20]\);

\i~515_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~515\ = \digitize_cnt[21]\ $ \i~514COUT\
-- \i~515COUT\ = CARRY(!\i~514COUT\ # !\digitize_cnt[21]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[21]\,
	cin => \i~514COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~515\,
	cout => \i~515COUT\);

\digitize_cnt[21]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[21]\ = DFFE(\i~5873\ & (\digitize_cnt[21]\ # \i~515\ & \state~21\) # !\i~5873\ & \i~515\ & \state~21\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5873\,
	datab => \i~515\,
	datac => \state~21\,
	datad => \digitize_cnt[21]\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[21]\);

\i~516_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~516\ = \digitize_cnt[22]\ $ !\i~515COUT\
-- \i~516COUT\ = CARRY(\digitize_cnt[22]\ & !\i~515COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[22]\,
	cin => \i~515COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~516\,
	cout => \i~516COUT\);

\digitize_cnt[22]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[22]\ = DFFE(\digitize_cnt[22]\ & (\i~5873\ # \i~516\ & \state~21\) # !\digitize_cnt[22]\ & \i~516\ & \state~21\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[22]\,
	datab => \i~516\,
	datac => \state~21\,
	datad => \i~5873\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[22]\);

\i~517_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~517\ = \digitize_cnt[23]\ $ \i~516COUT\
-- \i~517COUT\ = CARRY(!\i~516COUT\ # !\digitize_cnt[23]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[23]\,
	cin => \i~516COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~517\,
	cout => \i~517COUT\);

\digitize_cnt[23]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[23]\ = DFFE(\digitize_cnt[23]\ & (\i~5873\ # \i~517\ & \state~21\) # !\digitize_cnt[23]\ & \i~517\ & \state~21\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[23]\,
	datab => \i~517\,
	datac => \state~21\,
	datad => \i~5873\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[23]\);

\i~518_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~518\ = \digitize_cnt[24]\ $ !\i~517COUT\
-- \i~518COUT\ = CARRY(\digitize_cnt[24]\ & !\i~517COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \digitize_cnt[24]\,
	cin => \i~517COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~518\,
	cout => \i~518COUT\);

\digitize_cnt[24]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[24]\ = DFFE(\digitize_cnt[24]\ & (\i~5873\ # \state~21\ & \i~518\) # !\digitize_cnt[24]\ & \state~21\ & \i~518\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[24]\,
	datab => \state~21\,
	datac => \i~518\,
	datad => \i~5873\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[24]\);

\i~519_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~519\ = \digitize_cnt[25]\ $ \i~518COUT\
-- \i~519COUT\ = CARRY(!\i~518COUT\ # !\digitize_cnt[25]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \digitize_cnt[25]\,
	cin => \i~518COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~519\,
	cout => \i~519COUT\);

\digitize_cnt[25]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[25]\ = DFFE(\i~519\ & (\state~21\ # \digitize_cnt[25]\ & \i~5873\) # !\i~519\ & \digitize_cnt[25]\ & \i~5873\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~519\,
	datab => \state~21\,
	datac => \digitize_cnt[25]\,
	datad => \i~5873\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[25]\);

\i~520_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~520\ = \digitize_cnt[26]\ $ !\i~519COUT\
-- \i~520COUT\ = CARRY(\digitize_cnt[26]\ & !\i~519COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[26]\,
	cin => \i~519COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~520\,
	cout => \i~520COUT\);

\digitize_cnt[26]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[26]\ = DFFE(\digitize_cnt[26]\ & (\i~5873\ # \i~520\ & \state~21\) # !\digitize_cnt[26]\ & \i~520\ & \state~21\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[26]\,
	datab => \i~520\,
	datac => \state~21\,
	datad => \i~5873\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[26]\);

\i~521_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~521\ = \digitize_cnt[27]\ $ \i~520COUT\
-- \i~521COUT\ = CARRY(!\i~520COUT\ # !\digitize_cnt[27]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[27]\,
	cin => \i~520COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~521\,
	cout => \i~521COUT\);

\digitize_cnt[27]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[27]\ = DFFE(\digitize_cnt[27]\ & (\i~5873\ # \i~521\ & \state~21\) # !\digitize_cnt[27]\ & \i~521\ & \state~21\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[27]\,
	datab => \i~521\,
	datac => \state~21\,
	datad => \i~5873\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[27]\);

\i~522_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~522\ = \digitize_cnt[28]\ $ !\i~521COUT\
-- \i~522COUT\ = CARRY(\digitize_cnt[28]\ & !\i~521COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \digitize_cnt[28]\,
	cin => \i~521COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~522\,
	cout => \i~522COUT\);

\digitize_cnt[28]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[28]\ = DFFE(\i~5873\ & (\digitize_cnt[28]\ # \i~522\ & \state~21\) # !\i~5873\ & \i~522\ & \state~21\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5873\,
	datab => \i~522\,
	datac => \state~21\,
	datad => \digitize_cnt[28]\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[28]\);

\i~523_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~523\ = \digitize_cnt[29]\ $ \i~522COUT\
-- \i~523COUT\ = CARRY(!\i~522COUT\ # !\digitize_cnt[29]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \digitize_cnt[29]\,
	cin => \i~522COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~523\,
	cout => \i~523COUT\);

\digitize_cnt[29]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[29]\ = DFFE(\i~523\ & (\state~21\ # \digitize_cnt[29]\ & \i~5873\) # !\i~523\ & \digitize_cnt[29]\ & \i~5873\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~523\,
	datab => \digitize_cnt[29]\,
	datac => \state~21\,
	datad => \i~5873\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[29]\);

\i~524_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~524\ = \digitize_cnt[30]\ $ !\i~523COUT\
-- \i~524COUT\ = CARRY(\digitize_cnt[30]\ & !\i~523COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[30]\,
	cin => \i~523COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~524\,
	cout => \i~524COUT\);

\digitize_cnt[30]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[30]\ = DFFE(\i~524\ & (\state~21\ # \digitize_cnt[30]\ & \i~5873\) # !\i~524\ & \digitize_cnt[30]\ & \i~5873\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~524\,
	datab => \state~21\,
	datac => \digitize_cnt[30]\,
	datad => \i~5873\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[30]\);

\i~525_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~525\ = \digitize_cnt[31]\ $ \i~524COUT\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[31]\,
	cin => \i~524COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~525\);

\digitize_cnt[31]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[31]\ = DFFE(\state~21\ & (\i~525\ # \digitize_cnt[31]\ & \i~5873\) # !\state~21\ & \digitize_cnt[31]\ & \i~5873\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~21\,
	datab => \i~525\,
	datac => \digitize_cnt[31]\,
	datad => \i~5873\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[31]\);

\i~5848_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5848\ = \digitize_cnt[31]\ # \digitize_cnt[29]\ # \digitize_cnt[30]\ # \digitize_cnt[28]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[31]\,
	datab => \digitize_cnt[29]\,
	datac => \digitize_cnt[30]\,
	datad => \digitize_cnt[28]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5848\);

\i~5850_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5850\ = \digitize_cnt[22]\ # \digitize_cnt[21]\ # \digitize_cnt[23]\ # \digitize_cnt[20]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[22]\,
	datab => \digitize_cnt[21]\,
	datac => \digitize_cnt[23]\,
	datad => \digitize_cnt[20]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5850\);

\i~5849_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5849\ = \digitize_cnt[25]\ # \digitize_cnt[27]\ # \digitize_cnt[24]\ # \digitize_cnt[26]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[25]\,
	datab => \digitize_cnt[27]\,
	datac => \digitize_cnt[24]\,
	datad => \digitize_cnt[26]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5849\);

\i~5852_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5852\ = \i~5851\ # \i~5848\ # \i~5850\ # \i~5849\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5851\,
	datab => \i~5848\,
	datac => \i~5850\,
	datad => \i~5849\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5852\);

\i~5856_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5856\ = \digitize_cnt[3]\ # \digitize_cnt[2]\ # \digitize_cnt[0]\ # \digitize_cnt[1]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[3]\,
	datab => \digitize_cnt[2]\,
	datac => \digitize_cnt[0]\,
	datad => \digitize_cnt[1]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5856\);

\i~5853_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5853\ = \digitize_cnt[15]\ # \digitize_cnt[13]\ # \digitize_cnt[14]\ # \digitize_cnt[12]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[15]\,
	datab => \digitize_cnt[13]\,
	datac => \digitize_cnt[14]\,
	datad => \digitize_cnt[12]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5853\);

\i~5854_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5854\ = \digitize_cnt[11]\ # \digitize_cnt[10]\ # \digitize_cnt[8]\ # !\digitize_cnt[9]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEFF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[11]\,
	datab => \digitize_cnt[10]\,
	datac => \digitize_cnt[8]\,
	datad => \digitize_cnt[9]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5854\);

\i~5855_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5855\ = \digitize_cnt[7]\ # \digitize_cnt[5]\ # \digitize_cnt[6]\ # \digitize_cnt[4]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[7]\,
	datab => \digitize_cnt[5]\,
	datac => \digitize_cnt[6]\,
	datad => \digitize_cnt[4]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5855\);

\i~5857_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5857\ = \i~5856\ # \i~5853\ # \i~5854\ # \i~5855\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5856\,
	datab => \i~5853\,
	datac => \i~5854\,
	datad => \i~5855\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5857\);

\i~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~2\ = \i~5852\ # \i~5857\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FAFA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5852\,
	datac => \i~5857\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~2\);

\i~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~0\ = \i~5862\ # \i~5867\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FAFA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5862\,
	datac => \i~5867\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~0\);

\state~21_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~21\ = DFFE(\state~30\ & (\state~21\ & \i~2\ # !\i~0\) # !\state~30\ & \state~21\ & \i~2\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C0EA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~30\,
	datab => \state~21\,
	datac => \i~2\,
	datad => \i~0\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~21\);

\i~466_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~466\ = \state~27\ & !readout_done

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00CC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \state~27\,
	datad => ww_readout_done,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~466\);

\state~27_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~27\ = DFFE(\i~466\ # \state~21\ & !\i~5852\ & !\i~5857\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F2",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~21\,
	datab => \i~5852\,
	datac => \i~466\,
	datad => \i~5857\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~27\);

\i~5831_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5831\ = !\state~29\ & !\state~24\ & !\state~22\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0003",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \state~29\,
	datac => \state~24\,
	datad => \state~22\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5831\);

\i~44_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~44\ = \state~23\ # \state~21\ # !\i~5831\ # !\i~5832\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFF7",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5832\,
	datab => \i~5831\,
	datac => \state~23\,
	datad => \state~21\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~44\);

\i~5870_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5870\ = !\state~29\ & !\state~24\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0505",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~29\,
	datac => \state~24\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5870\);

\counterclk_high~I\ : apex20ke_lcell 
-- Equation(s):
-- counterclk_high = DFFE(\state~27\ # counterclk_high & (!\i~5870\ # !\i~5832\), GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F7F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5832\,
	datab => \i~5870\,
	datac => \state~27\,
	datad => counterclk_high,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => counterclk_high);

\i~5871_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5871\ = \state~28\ # \state~23\ # \state~22\ # !state1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEFF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~28\,
	datab => \state~23\,
	datac => \state~22\,
	datad => ww_state1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5871\);

\counterclk_low~I\ : apex20ke_lcell 
-- Equation(s):
-- counterclk_low = DFFE(\i~5871\ # counterclk_low & (!\i~5832\ # !\i~5870\), GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F4FC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5870\,
	datab => counterclk_low,
	datac => \i~5871\,
	datad => \i~5832\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => counterclk_low);

\cclk~I\ : apex20ke_lcell 
-- Equation(s):
-- cclk = DFFE(counterclk_high # !counterclk_low & !cclk, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CCCF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => counterclk_high,
	datac => counterclk_low,
	datad => cclk,
	clk => ww_CLK80,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => cclk);

\i~5833_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5833\ = !\state~23\ & \i~5832\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \state~23\,
	datad => \i~5832\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5833\);

\i~5834_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5834\ = !\state~27\ & state1 & !\state~28\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0404",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~27\,
	datab => ww_state1,
	datac => \state~28\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5834\);

\i~214_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~214\ = \state~24\ & (channel_0 $ channel_1)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "30C0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_channel_0,
	datac => \state~24\,
	datad => ww_channel_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~214\);

\i~5836_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5836\ = !\state~23\ & \i~5832\ & !\state~21\ & \i~5835\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0400",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~23\,
	datab => \i~5832\,
	datac => \state~21\,
	datad => \i~5835\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5836\);

\i~5840_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5840\ = !\state~23\ & !\state~22\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0033",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \state~23\,
	datad => \state~22\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5840\);

\i~5838_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5838\ = !state & !\state~25\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0303",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_state,
	datac => \state~25\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5838\);

\i~5839_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5839\ = \i~5838\ & !\state~21\ & !\state~31\ & \i~5835\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0200",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5838\,
	datab => \state~21\,
	datac => \state~31\,
	datad => \i~5835\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5839\);

\i~5841_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5841\ = \state~24\ # \state~27\ # \state~28\ # !state1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFEF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~24\,
	datab => \state~27\,
	datac => ww_state1,
	datad => \state~28\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5841\);

\i~5842_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5842\ = \state~21\ # \state~29\ # \state~22\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFEE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~21\,
	datab => \state~29\,
	datad => \state~22\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5842\);

\i~5844_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5844\ = \state~31\ # \state~25\ # \state~23\ # \state~30\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~31\,
	datab => \state~25\,
	datac => \state~23\,
	datad => \state~30\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5844\);

\i~5872_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5872\ = \state~24\ # \state~23\ # \state~29\ # \state~30\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~24\,
	datab => \state~23\,
	datac => \state~29\,
	datad => \state~30\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5872\);

\i~42_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~42\ = \i~5872\ # \state~21\ # !\i~5838\ # !\i~5835\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFBF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5872\,
	datab => \i~5835\,
	datac => \i~5838\,
	datad => \state~21\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~42\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	atwd_readout IS
    PORT (
	CLK40 : IN std_logic;
	RST : IN std_logic;
	busy : IN std_logic;
	start_readout : IN std_logic;
	ATWD0_D_0 : IN std_logic;
	ATWD0_D_3 : IN std_logic;
	ATWD0_D_2 : IN std_logic;
	ATWD0_D_1 : IN std_logic;
	ATWD0_D_5 : IN std_logic;
	ATWD0_D_4 : IN std_logic;
	ATWD0_D_8 : IN std_logic;
	ATWD0_D_9 : IN std_logic;
	ATWD0_D_7 : IN std_logic;
	ATWD0_D_6 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	ShiftClock : OUT std_logic;
	readout_done : OUT std_logic;
	ATWD_D_gray_0 : OUT std_logic;
	ATWD_D_gray_3 : OUT std_logic;
	ATWD_D_gray_2 : OUT std_logic;
	ATWD_D_gray_1 : OUT std_logic;
	ATWD_D_gray_5 : OUT std_logic;
	ATWD_D_gray_4 : OUT std_logic;
	ATWD_D_gray_8 : OUT std_logic;
	ATWD_D_gray_9 : OUT std_logic;
	ATWD_D_gray_7 : OUT std_logic;
	ATWD_D_gray_6 : OUT std_logic;
	data_valid : OUT std_logic;
	addr_cnt_0 : OUT std_logic;
	addr_cnt_1 : OUT std_logic;
	addr_cnt_2 : OUT std_logic;
	addr_cnt_3 : OUT std_logic;
	addr_cnt_4 : OUT std_logic;
	addr_cnt_5 : OUT std_logic;
	addr_cnt_6 : OUT std_logic;
	addr_cnt_7 : OUT std_logic;
	addr_cnt_8 : OUT std_logic
	);
END atwd_readout;

ARCHITECTURE structure OF atwd_readout IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK40 : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_busy : std_logic;
SIGNAL ww_start_readout : std_logic;
SIGNAL ww_ATWD0_D_0 : std_logic;
SIGNAL ww_ATWD0_D_3 : std_logic;
SIGNAL ww_ATWD0_D_2 : std_logic;
SIGNAL ww_ATWD0_D_1 : std_logic;
SIGNAL ww_ATWD0_D_5 : std_logic;
SIGNAL ww_ATWD0_D_4 : std_logic;
SIGNAL ww_ATWD0_D_8 : std_logic;
SIGNAL ww_ATWD0_D_9 : std_logic;
SIGNAL ww_ATWD0_D_7 : std_logic;
SIGNAL ww_ATWD0_D_6 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_ShiftClock : std_logic;
SIGNAL ww_readout_done : std_logic;
SIGNAL ww_ATWD_D_gray_0 : std_logic;
SIGNAL ww_ATWD_D_gray_3 : std_logic;
SIGNAL ww_ATWD_D_gray_2 : std_logic;
SIGNAL ww_ATWD_D_gray_1 : std_logic;
SIGNAL ww_ATWD_D_gray_5 : std_logic;
SIGNAL ww_ATWD_D_gray_4 : std_logic;
SIGNAL ww_ATWD_D_gray_8 : std_logic;
SIGNAL ww_ATWD_D_gray_9 : std_logic;
SIGNAL ww_ATWD_D_gray_7 : std_logic;
SIGNAL ww_ATWD_D_gray_6 : std_logic;
SIGNAL ww_data_valid : std_logic;
SIGNAL ww_addr_cnt_0 : std_logic;
SIGNAL ww_addr_cnt_1 : std_logic;
SIGNAL ww_addr_cnt_2 : std_logic;
SIGNAL ww_addr_cnt_3 : std_logic;
SIGNAL ww_addr_cnt_4 : std_logic;
SIGNAL ww_addr_cnt_5 : std_logic;
SIGNAL ww_addr_cnt_6 : std_logic;
SIGNAL ww_addr_cnt_7 : std_logic;
SIGNAL ww_addr_cnt_8 : std_logic;
SIGNAL \i~3181_1\ : std_logic;
SIGNAL \i~3183_1\ : std_logic;
SIGNAL \i~3185_1\ : std_logic;
SIGNAL \i~3187_1\ : std_logic;
SIGNAL \state~23\ : std_logic;
SIGNAL \i~3140\ : std_logic;
SIGNAL \i~289\ : std_logic;
SIGNAL \i~402\ : std_logic;
SIGNAL \readout_cnt[0]\ : std_logic;
SIGNAL \i~289COUT\ : std_logic;
SIGNAL \i~290\ : std_logic;
SIGNAL \i~401\ : std_logic;
SIGNAL \readout_cnt[1]\ : std_logic;
SIGNAL \i~290COUT\ : std_logic;
SIGNAL \i~291\ : std_logic;
SIGNAL \readout_cnt[2]\ : std_logic;
SIGNAL \i~291COUT\ : std_logic;
SIGNAL \i~292\ : std_logic;
SIGNAL \readout_cnt[3]\ : std_logic;
SIGNAL \i~292COUT\ : std_logic;
SIGNAL \i~293\ : std_logic;
SIGNAL \readout_cnt[4]\ : std_logic;
SIGNAL \i~293COUT\ : std_logic;
SIGNAL \i~294\ : std_logic;
SIGNAL \readout_cnt[5]\ : std_logic;
SIGNAL \i~294COUT\ : std_logic;
SIGNAL \i~295\ : std_logic;
SIGNAL \readout_cnt[6]\ : std_logic;
SIGNAL \i~295COUT\ : std_logic;
SIGNAL \i~296\ : std_logic;
SIGNAL \readout_cnt[7]\ : std_logic;
SIGNAL \i~296COUT\ : std_logic;
SIGNAL \i~297\ : std_logic;
SIGNAL \readout_cnt[8]\ : std_logic;
SIGNAL \i~297COUT\ : std_logic;
SIGNAL \i~298\ : std_logic;
SIGNAL \readout_cnt[9]\ : std_logic;
SIGNAL \i~298COUT\ : std_logic;
SIGNAL \i~299COUT\ : std_logic;
SIGNAL \i~300\ : std_logic;
SIGNAL \readout_cnt[11]\ : std_logic;
SIGNAL \i~300COUT\ : std_logic;
SIGNAL \i~301\ : std_logic;
SIGNAL \readout_cnt[12]\ : std_logic;
SIGNAL \i~301COUT\ : std_logic;
SIGNAL \i~302\ : std_logic;
SIGNAL \readout_cnt[13]\ : std_logic;
SIGNAL \i~302COUT\ : std_logic;
SIGNAL \i~303\ : std_logic;
SIGNAL \readout_cnt[14]\ : std_logic;
SIGNAL \i~303COUT\ : std_logic;
SIGNAL \i~304\ : std_logic;
SIGNAL \readout_cnt[15]\ : std_logic;
SIGNAL \i~304COUT\ : std_logic;
SIGNAL \i~305\ : std_logic;
SIGNAL \readout_cnt[16]\ : std_logic;
SIGNAL \i~305COUT\ : std_logic;
SIGNAL \i~306\ : std_logic;
SIGNAL \readout_cnt[17]\ : std_logic;
SIGNAL \i~306COUT\ : std_logic;
SIGNAL \i~307\ : std_logic;
SIGNAL \readout_cnt[18]\ : std_logic;
SIGNAL \i~307COUT\ : std_logic;
SIGNAL \i~308\ : std_logic;
SIGNAL \readout_cnt[19]\ : std_logic;
SIGNAL \i~308COUT\ : std_logic;
SIGNAL \i~309\ : std_logic;
SIGNAL \readout_cnt[20]\ : std_logic;
SIGNAL \i~309COUT\ : std_logic;
SIGNAL \i~310\ : std_logic;
SIGNAL \readout_cnt[21]\ : std_logic;
SIGNAL \i~310COUT\ : std_logic;
SIGNAL \i~311\ : std_logic;
SIGNAL \readout_cnt[22]\ : std_logic;
SIGNAL \i~311COUT\ : std_logic;
SIGNAL \i~312\ : std_logic;
SIGNAL \readout_cnt[23]\ : std_logic;
SIGNAL \i~3183\ : std_logic;
SIGNAL \i~3191\ : std_logic;
SIGNAL \i~3187\ : std_logic;
SIGNAL \i~3193\ : std_logic;
SIGNAL \i~312COUT\ : std_logic;
SIGNAL \i~313\ : std_logic;
SIGNAL \readout_cnt[24]\ : std_logic;
SIGNAL \i~313COUT\ : std_logic;
SIGNAL \i~314\ : std_logic;
SIGNAL \readout_cnt[25]\ : std_logic;
SIGNAL \i~314COUT\ : std_logic;
SIGNAL \i~315\ : std_logic;
SIGNAL \readout_cnt[26]\ : std_logic;
SIGNAL \i~315COUT\ : std_logic;
SIGNAL \i~316\ : std_logic;
SIGNAL \readout_cnt[27]\ : std_logic;
SIGNAL \i~316COUT\ : std_logic;
SIGNAL \i~317\ : std_logic;
SIGNAL \readout_cnt[28]\ : std_logic;
SIGNAL \i~317COUT\ : std_logic;
SIGNAL \i~318\ : std_logic;
SIGNAL \readout_cnt[29]\ : std_logic;
SIGNAL \i~318COUT\ : std_logic;
SIGNAL \i~319\ : std_logic;
SIGNAL \readout_cnt[30]\ : std_logic;
SIGNAL \i~319COUT\ : std_logic;
SIGNAL \i~320\ : std_logic;
SIGNAL \readout_cnt[31]\ : std_logic;
SIGNAL \i~3181\ : std_logic;
SIGNAL \i~3190\ : std_logic;
SIGNAL \i~2\ : std_logic;
SIGNAL \i~3134\ : std_logic;
SIGNAL \state~21\ : std_logic;
SIGNAL \i~3130\ : std_logic;
SIGNAL \i~55\ : std_logic;
SIGNAL \i~299\ : std_logic;
SIGNAL \readout_cnt[10]\ : std_logic;
SIGNAL \i~3185\ : std_logic;
SIGNAL \i~3192\ : std_logic;
SIGNAL \i~3194\ : std_logic;
SIGNAL \state~24\ : std_logic;
SIGNAL \state~25\ : std_logic;
SIGNAL \state~26\ : std_logic;
SIGNAL \state~20\ : std_logic;
SIGNAL \i~3132\ : std_logic;
SIGNAL rst_divide : std_logic;
SIGNAL \divide_cnt[0]\ : std_logic;
SIGNAL \divide_cnt[1]\ : std_logic;
SIGNAL \state~22\ : std_logic;
SIGNAL \ATWD_D_gray[0]~19\ : std_logic;
SIGNAL \i~321\ : std_logic;
SIGNAL \i~3139\ : std_logic;
SIGNAL \i~3141\ : std_logic;
SIGNAL \i~3143\ : std_logic;
SIGNAL \i~3144\ : std_logic;
SIGNAL \i~321COUT\ : std_logic;
SIGNAL \i~322\ : std_logic;
SIGNAL \i~3146\ : std_logic;
SIGNAL \i~3147\ : std_logic;
SIGNAL \i~322COUT\ : std_logic;
SIGNAL \i~323\ : std_logic;
SIGNAL \i~3149\ : std_logic;
SIGNAL \i~3150\ : std_logic;
SIGNAL \i~323COUT\ : std_logic;
SIGNAL \i~324\ : std_logic;
SIGNAL \i~324COUT\ : std_logic;
SIGNAL \i~325\ : std_logic;
SIGNAL \i~3152\ : std_logic;
SIGNAL \i~3153\ : std_logic;
SIGNAL \i~325COUT\ : std_logic;
SIGNAL \i~326\ : std_logic;
SIGNAL \i~3155\ : std_logic;
SIGNAL \i~3156\ : std_logic;
SIGNAL \i~326COUT\ : std_logic;
SIGNAL \i~327\ : std_logic;
SIGNAL \i~3158\ : std_logic;
SIGNAL \i~3159\ : std_logic;
SIGNAL \i~327COUT\ : std_logic;
SIGNAL \i~328\ : std_logic;
SIGNAL \i~3161\ : std_logic;
SIGNAL \i~3162\ : std_logic;
SIGNAL \i~328COUT\ : std_logic;
SIGNAL \i~329\ : std_logic;
SIGNAL \i~3164\ : std_logic;
SIGNAL \i~3165\ : std_logic;
SIGNAL ALT_NOT_ww_RST : std_logic;

BEGIN

ww_CLK40 <= CLK40;
ww_RST <= RST;
ww_busy <= busy;
ww_start_readout <= start_readout;
ww_ATWD0_D_0 <= ATWD0_D_0;
ww_ATWD0_D_3 <= ATWD0_D_3;
ww_ATWD0_D_2 <= ATWD0_D_2;
ww_ATWD0_D_1 <= ATWD0_D_1;
ww_ATWD0_D_5 <= ATWD0_D_5;
ww_ATWD0_D_4 <= ATWD0_D_4;
ww_ATWD0_D_8 <= ATWD0_D_8;
ww_ATWD0_D_9 <= ATWD0_D_9;
ww_ATWD0_D_7 <= ATWD0_D_7;
ww_ATWD0_D_6 <= ATWD0_D_6;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
ShiftClock <= ww_ShiftClock;
readout_done <= ww_readout_done;
ATWD_D_gray_0 <= ww_ATWD_D_gray_0;
ATWD_D_gray_3 <= ww_ATWD_D_gray_3;
ATWD_D_gray_2 <= ww_ATWD_D_gray_2;
ATWD_D_gray_1 <= ww_ATWD_D_gray_1;
ATWD_D_gray_5 <= ww_ATWD_D_gray_5;
ATWD_D_gray_4 <= ww_ATWD_D_gray_4;
ATWD_D_gray_8 <= ww_ATWD_D_gray_8;
ATWD_D_gray_9 <= ww_ATWD_D_gray_9;
ATWD_D_gray_7 <= ww_ATWD_D_gray_7;
ATWD_D_gray_6 <= ww_ATWD_D_gray_6;
data_valid <= ww_data_valid;
addr_cnt_0 <= ww_addr_cnt_0;
addr_cnt_1 <= ww_addr_cnt_1;
addr_cnt_2 <= ww_addr_cnt_2;
addr_cnt_3 <= ww_addr_cnt_3;
addr_cnt_4 <= ww_addr_cnt_4;
addr_cnt_5 <= ww_addr_cnt_5;
addr_cnt_6 <= ww_addr_cnt_6;
addr_cnt_7 <= ww_addr_cnt_7;
addr_cnt_8 <= ww_addr_cnt_8;
ALT_NOT_ww_RST <= NOT ww_RST;

\ShiftClock~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- ShiftClock = DFFE(\state~22\ # ShiftClock & (\state~23\ # !\i~3130\), GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EEAE",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datab => ww_ShiftClock,
	datac => \i~3130\,
	datad => \state~23\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_ShiftClock);

\readout_done~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- readout_done = DFFE(\state~24\ # readout_done & (\state~21\ # !\i~3132\), GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAEE",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~24\,
	datab => ww_readout_done,
	datac => \state~21\,
	datad => \i~3132\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_readout_done);

\ATWD_D_gray[0]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- ATWD_D_gray_0 = DFFE(\ATWD0_D[0]~combout\, GLOBAL(outclock1), , , \ATWD_D_gray[0]~19\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_ATWD0_D_0,
	clk => ww_CLK40,
	ena => \ATWD_D_gray[0]~19\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_ATWD_D_gray_0);

\ATWD_D_gray[3]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- ATWD_D_gray_3 = DFFE(\ATWD0_D[3]~combout\, GLOBAL(outclock1), , , \ATWD_D_gray[0]~19\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_ATWD0_D_3,
	clk => ww_CLK40,
	ena => \ATWD_D_gray[0]~19\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_ATWD_D_gray_3);

\ATWD_D_gray[2]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- ATWD_D_gray_2 = DFFE(\ATWD0_D[2]~combout\, GLOBAL(outclock1), , , \ATWD_D_gray[0]~19\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_ATWD0_D_2,
	clk => ww_CLK40,
	ena => \ATWD_D_gray[0]~19\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_ATWD_D_gray_2);

\ATWD_D_gray[1]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- ATWD_D_gray_1 = DFFE(\ATWD0_D[1]~combout\, GLOBAL(outclock1), , , \ATWD_D_gray[0]~19\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_ATWD0_D_1,
	clk => ww_CLK40,
	ena => \ATWD_D_gray[0]~19\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_ATWD_D_gray_1);

\ATWD_D_gray[5]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- ATWD_D_gray_5 = DFFE(\ATWD0_D[5]~combout\, GLOBAL(outclock1), , , \ATWD_D_gray[0]~19\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_ATWD0_D_5,
	clk => ww_CLK40,
	ena => \ATWD_D_gray[0]~19\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_ATWD_D_gray_5);

\ATWD_D_gray[4]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- ATWD_D_gray_4 = DFFE(\ATWD0_D[4]~combout\, GLOBAL(outclock1), , , \ATWD_D_gray[0]~19\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_ATWD0_D_4,
	clk => ww_CLK40,
	ena => \ATWD_D_gray[0]~19\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_ATWD_D_gray_4);

\ATWD_D_gray[8]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- ATWD_D_gray_8 = DFFE(\ATWD0_D[8]~combout\, GLOBAL(outclock1), , , \ATWD_D_gray[0]~19\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_ATWD0_D_8,
	clk => ww_CLK40,
	ena => \ATWD_D_gray[0]~19\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_ATWD_D_gray_8);

\ATWD_D_gray[9]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- ATWD_D_gray_9 = DFFE(\ATWD0_D[9]~combout\, GLOBAL(outclock1), , , \ATWD_D_gray[0]~19\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_ATWD0_D_9,
	clk => ww_CLK40,
	ena => \ATWD_D_gray[0]~19\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_ATWD_D_gray_9);

\ATWD_D_gray[7]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- ATWD_D_gray_7 = DFFE(\ATWD0_D[7]~combout\, GLOBAL(outclock1), , , \ATWD_D_gray[0]~19\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_ATWD0_D_7,
	clk => ww_CLK40,
	ena => \ATWD_D_gray[0]~19\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_ATWD_D_gray_7);

\ATWD_D_gray[6]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- ATWD_D_gray_6 = DFFE(\ATWD0_D[6]~combout\, GLOBAL(outclock1), , , \ATWD_D_gray[0]~19\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_ATWD0_D_6,
	clk => ww_CLK40,
	ena => \ATWD_D_gray[0]~19\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_ATWD_D_gray_6);

\data_valid~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- data_valid = DFFE(\state~23\ # data_valid & (\state~22\ # !\i~3130\), GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF8C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datab => ww_data_valid,
	datac => \i~3130\,
	datad => \state~23\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_data_valid);

\addr_cnt[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- addr_cnt_0 = DFFE(\i~3141\ # \i~321\ & \state~22\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~321\,
	datac => \state~22\,
	datad => \i~3141\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_addr_cnt_0);

\addr_cnt[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- addr_cnt_1 = DFFE(\i~3144\ # \state~22\ & \i~322\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FCCC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~3144\,
	datac => \state~22\,
	datad => \i~322\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_addr_cnt_1);

\addr_cnt[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- addr_cnt_2 = DFFE(\i~3147\ # \i~323\ & \state~22\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAEA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~3147\,
	datab => \i~323\,
	datac => \state~22\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_addr_cnt_2);

\addr_cnt[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- addr_cnt_3 = DFFE(\i~3150\ # \state~22\ & \i~324\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FCCC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~3150\,
	datac => \state~22\,
	datad => \i~324\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_addr_cnt_3);

\addr_cnt[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- addr_cnt_4 = DFFE(\i~3153\ # \state~22\ & \i~325\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datac => \i~325\,
	datad => \i~3153\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_addr_cnt_4);

\addr_cnt[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- addr_cnt_5 = DFFE(\i~3156\ # \state~22\ & \i~326\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datac => \i~326\,
	datad => \i~3156\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_addr_cnt_5);

\addr_cnt[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- addr_cnt_6 = DFFE(\i~3159\ # \state~22\ & \i~327\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datac => \i~327\,
	datad => \i~3159\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_addr_cnt_6);

\addr_cnt[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- addr_cnt_7 = DFFE(\i~3162\ # \i~328\ & \state~22\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~328\,
	datac => \state~22\,
	datad => \i~3162\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_addr_cnt_7);

\addr_cnt[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- addr_cnt_8 = DFFE(\i~3165\ # \i~329\ & \state~22\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~329\,
	datac => \state~22\,
	datad => \i~3165\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_addr_cnt_8);

\state~23_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~23\ = DFFE(\state~22\ # \state~23\ & \divide_cnt[1]\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FCCC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \state~22\,
	datac => \state~23\,
	datad => \divide_cnt[1]\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~23\);

\i~3140_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3140\ = \state~26\ # \state~23\ # \state~25\ # \state~21\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~26\,
	datab => \state~23\,
	datac => \state~25\,
	datad => \state~21\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3140\);

\i~289_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~289\ = !\readout_cnt[0]\
-- \i~289COUT\ = CARRY(\readout_cnt[0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "33CC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \readout_cnt[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~289\,
	cout => \i~289COUT\);

\i~402_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~402\ = \state~22\ & \i~289\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \state~22\,
	datad => \i~289\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~402\);

\readout_cnt[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[0]\ = DFFE(\i~402\ # \readout_cnt[0]\ & (\state~24\ # \i~3140\), GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFE0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~24\,
	datab => \i~3140\,
	datac => \readout_cnt[0]\,
	datad => \i~402\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[0]\);

\i~290_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~290\ = \readout_cnt[1]\ $ \i~289COUT\
-- \i~290COUT\ = CARRY(!\i~289COUT\ # !\readout_cnt[1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \readout_cnt[1]\,
	cin => \i~289COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~290\,
	cout => \i~290COUT\);

\i~401_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~401\ = \state~22\ & \i~290\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \state~22\,
	datad => \i~290\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~401\);

\readout_cnt[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[1]\ = DFFE(\i~401\ # \readout_cnt[1]\ & (\i~3140\ # \state~24\), GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFC8",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~3140\,
	datab => \readout_cnt[1]\,
	datac => \state~24\,
	datad => \i~401\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[1]\);

\i~291_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~291\ = \readout_cnt[2]\ $ !\i~290COUT\
-- \i~291COUT\ = CARRY(\readout_cnt[2]\ & !\i~290COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \readout_cnt[2]\,
	cin => \i~290COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~291\,
	cout => \i~291COUT\);

\readout_cnt[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[2]\ = DFFE(\state~22\ & (\i~291\ # \readout_cnt[2]\ & \i~55\) # !\state~22\ & \readout_cnt[2]\ & \i~55\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datab => \readout_cnt[2]\,
	datac => \i~55\,
	datad => \i~291\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[2]\);

\i~292_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~292\ = \readout_cnt[3]\ $ \i~291COUT\
-- \i~292COUT\ = CARRY(!\i~291COUT\ # !\readout_cnt[3]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \readout_cnt[3]\,
	cin => \i~291COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~292\,
	cout => \i~292COUT\);

\readout_cnt[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[3]\ = DFFE(\state~22\ & (\i~292\ # \readout_cnt[3]\ & \i~55\) # !\state~22\ & \readout_cnt[3]\ & \i~55\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datab => \readout_cnt[3]\,
	datac => \i~55\,
	datad => \i~292\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[3]\);

\i~293_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~293\ = \readout_cnt[4]\ $ !\i~292COUT\
-- \i~293COUT\ = CARRY(\readout_cnt[4]\ & !\i~292COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[4]\,
	cin => \i~292COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~293\,
	cout => \i~293COUT\);

\readout_cnt[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[4]\ = DFFE(\state~22\ & (\i~293\ # \readout_cnt[4]\ & \i~55\) # !\state~22\ & \readout_cnt[4]\ & \i~55\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datab => \readout_cnt[4]\,
	datac => \i~55\,
	datad => \i~293\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[4]\);

\i~294_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~294\ = \readout_cnt[5]\ $ \i~293COUT\
-- \i~294COUT\ = CARRY(!\i~293COUT\ # !\readout_cnt[5]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \readout_cnt[5]\,
	cin => \i~293COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~294\,
	cout => \i~294COUT\);

\readout_cnt[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[5]\ = DFFE(\state~22\ & (\i~294\ # \readout_cnt[5]\ & \i~55\) # !\state~22\ & \readout_cnt[5]\ & \i~55\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datab => \readout_cnt[5]\,
	datac => \i~55\,
	datad => \i~294\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[5]\);

\i~295_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~295\ = \readout_cnt[6]\ $ !\i~294COUT\
-- \i~295COUT\ = CARRY(\readout_cnt[6]\ & !\i~294COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[6]\,
	cin => \i~294COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~295\,
	cout => \i~295COUT\);

\readout_cnt[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[6]\ = DFFE(\i~55\ & (\readout_cnt[6]\ # \state~22\ & \i~295\) # !\i~55\ & \state~22\ & \i~295\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~55\,
	datab => \readout_cnt[6]\,
	datac => \state~22\,
	datad => \i~295\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[6]\);

\i~296_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~296\ = \readout_cnt[7]\ $ \i~295COUT\
-- \i~296COUT\ = CARRY(!\i~295COUT\ # !\readout_cnt[7]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[7]\,
	cin => \i~295COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~296\,
	cout => \i~296COUT\);

\readout_cnt[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[7]\ = DFFE(\i~55\ & (\readout_cnt[7]\ # \state~22\ & \i~296\) # !\i~55\ & \state~22\ & \i~296\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~55\,
	datab => \state~22\,
	datac => \readout_cnt[7]\,
	datad => \i~296\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[7]\);

\i~297_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~297\ = \readout_cnt[8]\ $ !\i~296COUT\
-- \i~297COUT\ = CARRY(\readout_cnt[8]\ & !\i~296COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[8]\,
	cin => \i~296COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~297\,
	cout => \i~297COUT\);

\readout_cnt[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[8]\ = DFFE(\i~55\ & (\readout_cnt[8]\ # \state~22\ & \i~297\) # !\i~55\ & \state~22\ & \i~297\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~55\,
	datab => \state~22\,
	datac => \readout_cnt[8]\,
	datad => \i~297\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[8]\);

\i~298_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~298\ = \readout_cnt[9]\ $ \i~297COUT\
-- \i~298COUT\ = CARRY(!\i~297COUT\ # !\readout_cnt[9]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[9]\,
	cin => \i~297COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~298\,
	cout => \i~298COUT\);

\readout_cnt[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[9]\ = DFFE(\i~55\ & (\readout_cnt[9]\ # \state~22\ & \i~298\) # !\i~55\ & \state~22\ & \i~298\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~55\,
	datab => \readout_cnt[9]\,
	datac => \state~22\,
	datad => \i~298\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[9]\);

\i~299_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~299\ = \readout_cnt[10]\ $ !\i~298COUT\
-- \i~299COUT\ = CARRY(\readout_cnt[10]\ & !\i~298COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[10]\,
	cin => \i~298COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~299\,
	cout => \i~299COUT\);

\i~300_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~300\ = \readout_cnt[11]\ $ \i~299COUT\
-- \i~300COUT\ = CARRY(!\i~299COUT\ # !\readout_cnt[11]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[11]\,
	cin => \i~299COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~300\,
	cout => \i~300COUT\);

\readout_cnt[11]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[11]\ = DFFE(\i~55\ & (\readout_cnt[11]\ # \state~22\ & \i~300\) # !\i~55\ & \state~22\ & \i~300\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~55\,
	datab => \readout_cnt[11]\,
	datac => \state~22\,
	datad => \i~300\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[11]\);

\i~301_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~301\ = \readout_cnt[12]\ $ !\i~300COUT\
-- \i~301COUT\ = CARRY(\readout_cnt[12]\ & !\i~300COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[12]\,
	cin => \i~300COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~301\,
	cout => \i~301COUT\);

\readout_cnt[12]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[12]\ = DFFE(\i~55\ & (\readout_cnt[12]\ # \state~22\ & \i~301\) # !\i~55\ & \state~22\ & \i~301\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~55\,
	datab => \readout_cnt[12]\,
	datac => \state~22\,
	datad => \i~301\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[12]\);

\i~302_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~302\ = \readout_cnt[13]\ $ \i~301COUT\
-- \i~302COUT\ = CARRY(!\i~301COUT\ # !\readout_cnt[13]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[13]\,
	cin => \i~301COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~302\,
	cout => \i~302COUT\);

\readout_cnt[13]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[13]\ = DFFE(\i~55\ & (\readout_cnt[13]\ # \state~22\ & \i~302\) # !\i~55\ & \state~22\ & \i~302\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~55\,
	datab => \state~22\,
	datac => \readout_cnt[13]\,
	datad => \i~302\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[13]\);

\i~303_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~303\ = \readout_cnt[14]\ $ !\i~302COUT\
-- \i~303COUT\ = CARRY(\readout_cnt[14]\ & !\i~302COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[14]\,
	cin => \i~302COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~303\,
	cout => \i~303COUT\);

\readout_cnt[14]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[14]\ = DFFE(\i~55\ & (\readout_cnt[14]\ # \state~22\ & \i~303\) # !\i~55\ & \state~22\ & \i~303\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~55\,
	datab => \state~22\,
	datac => \readout_cnt[14]\,
	datad => \i~303\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[14]\);

\i~304_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~304\ = \readout_cnt[15]\ $ \i~303COUT\
-- \i~304COUT\ = CARRY(!\i~303COUT\ # !\readout_cnt[15]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[15]\,
	cin => \i~303COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~304\,
	cout => \i~304COUT\);

\readout_cnt[15]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[15]\ = DFFE(\readout_cnt[15]\ & (\i~55\ # \state~22\ & \i~304\) # !\readout_cnt[15]\ & \state~22\ & \i~304\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[15]\,
	datab => \state~22\,
	datac => \i~55\,
	datad => \i~304\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[15]\);

\i~305_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~305\ = \readout_cnt[16]\ $ !\i~304COUT\
-- \i~305COUT\ = CARRY(\readout_cnt[16]\ & !\i~304COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \readout_cnt[16]\,
	cin => \i~304COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~305\,
	cout => \i~305COUT\);

\readout_cnt[16]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[16]\ = DFFE(\readout_cnt[16]\ & (\i~55\ # \state~22\ & \i~305\) # !\readout_cnt[16]\ & \state~22\ & \i~305\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[16]\,
	datab => \state~22\,
	datac => \i~305\,
	datad => \i~55\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[16]\);

\i~306_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~306\ = \readout_cnt[17]\ $ \i~305COUT\
-- \i~306COUT\ = CARRY(!\i~305COUT\ # !\readout_cnt[17]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[17]\,
	cin => \i~305COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~306\,
	cout => \i~306COUT\);

\readout_cnt[17]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[17]\ = DFFE(\i~55\ & (\readout_cnt[17]\ # \state~22\ & \i~306\) # !\i~55\ & \state~22\ & \i~306\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~55\,
	datab => \readout_cnt[17]\,
	datac => \state~22\,
	datad => \i~306\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[17]\);

\i~307_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~307\ = \readout_cnt[18]\ $ !\i~306COUT\
-- \i~307COUT\ = CARRY(\readout_cnt[18]\ & !\i~306COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[18]\,
	cin => \i~306COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~307\,
	cout => \i~307COUT\);

\readout_cnt[18]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[18]\ = DFFE(\i~55\ & (\readout_cnt[18]\ # \state~22\ & \i~307\) # !\i~55\ & \state~22\ & \i~307\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~55\,
	datab => \readout_cnt[18]\,
	datac => \state~22\,
	datad => \i~307\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[18]\);

\i~308_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~308\ = \readout_cnt[19]\ $ \i~307COUT\
-- \i~308COUT\ = CARRY(!\i~307COUT\ # !\readout_cnt[19]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[19]\,
	cin => \i~307COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~308\,
	cout => \i~308COUT\);

\readout_cnt[19]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[19]\ = DFFE(\state~22\ & (\i~308\ # \i~55\ & \readout_cnt[19]\) # !\state~22\ & \i~55\ & \readout_cnt[19]\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datab => \i~55\,
	datac => \readout_cnt[19]\,
	datad => \i~308\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[19]\);

\i~309_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~309\ = \readout_cnt[20]\ $ !\i~308COUT\
-- \i~309COUT\ = CARRY(\readout_cnt[20]\ & !\i~308COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[20]\,
	cin => \i~308COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~309\,
	cout => \i~309COUT\);

\readout_cnt[20]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[20]\ = DFFE(\state~22\ & (\i~309\ # \i~55\ & \readout_cnt[20]\) # !\state~22\ & \i~55\ & \readout_cnt[20]\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datab => \i~55\,
	datac => \readout_cnt[20]\,
	datad => \i~309\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[20]\);

\i~310_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~310\ = \readout_cnt[21]\ $ \i~309COUT\
-- \i~310COUT\ = CARRY(!\i~309COUT\ # !\readout_cnt[21]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[21]\,
	cin => \i~309COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~310\,
	cout => \i~310COUT\);

\readout_cnt[21]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[21]\ = DFFE(\readout_cnt[21]\ & (\i~55\ # \state~22\ & \i~310\) # !\readout_cnt[21]\ & \state~22\ & \i~310\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[21]\,
	datab => \i~55\,
	datac => \state~22\,
	datad => \i~310\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[21]\);

\i~311_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~311\ = \readout_cnt[22]\ $ !\i~310COUT\
-- \i~311COUT\ = CARRY(\readout_cnt[22]\ & !\i~310COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[22]\,
	cin => \i~310COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~311\,
	cout => \i~311COUT\);

\readout_cnt[22]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[22]\ = DFFE(\readout_cnt[22]\ & (\i~55\ # \state~22\ & \i~311\) # !\readout_cnt[22]\ & \state~22\ & \i~311\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[22]\,
	datab => \i~55\,
	datac => \state~22\,
	datad => \i~311\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[22]\);

\i~312_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~312\ = \readout_cnt[23]\ $ \i~311COUT\
-- \i~312COUT\ = CARRY(!\i~311COUT\ # !\readout_cnt[23]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[23]\,
	cin => \i~311COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~312\,
	cout => \i~312COUT\);

\readout_cnt[23]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[23]\ = DFFE(\state~22\ & (\i~312\ # \readout_cnt[23]\ & \i~55\) # !\state~22\ & \readout_cnt[23]\ & \i~55\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datab => \readout_cnt[23]\,
	datac => \i~55\,
	datad => \i~312\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[23]\);

\i~3183_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3183\ = !\readout_cnt[21]\ & !\readout_cnt[22]\ & !\readout_cnt[20]\ & !\readout_cnt[23]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[21]\,
	datab => \readout_cnt[22]\,
	datac => \readout_cnt[20]\,
	datad => \readout_cnt[23]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \i~3183\);

\i~3191_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3191\ = (!\readout_cnt[19]\ & !\readout_cnt[18]\ & !\readout_cnt[16]\ & !\readout_cnt[17]\) & CASCADE(\i~3183\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[19]\,
	datab => \readout_cnt[18]\,
	datac => \readout_cnt[16]\,
	datad => \readout_cnt[17]\,
	cascin => \i~3183\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3191\);

\i~3187_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3187\ = !\readout_cnt[6]\ & !\readout_cnt[4]\ & \readout_cnt[7]\ & !\readout_cnt[5]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0010",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[6]\,
	datab => \readout_cnt[4]\,
	datac => \readout_cnt[7]\,
	datad => \readout_cnt[5]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \i~3187\);

\i~3193_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3193\ = (!\readout_cnt[1]\ & !\readout_cnt[3]\ & !\readout_cnt[0]\ & !\readout_cnt[2]\) & CASCADE(\i~3187\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[1]\,
	datab => \readout_cnt[3]\,
	datac => \readout_cnt[0]\,
	datad => \readout_cnt[2]\,
	cascin => \i~3187\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3193\);

\i~313_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~313\ = \readout_cnt[24]\ $ !\i~312COUT\
-- \i~313COUT\ = CARRY(\readout_cnt[24]\ & !\i~312COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \readout_cnt[24]\,
	cin => \i~312COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~313\,
	cout => \i~313COUT\);

\readout_cnt[24]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[24]\ = DFFE(\readout_cnt[24]\ & (\i~55\ # \state~22\ & \i~313\) # !\readout_cnt[24]\ & \state~22\ & \i~313\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[24]\,
	datab => \state~22\,
	datac => \i~313\,
	datad => \i~55\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[24]\);

\i~314_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~314\ = \readout_cnt[25]\ $ \i~313COUT\
-- \i~314COUT\ = CARRY(!\i~313COUT\ # !\readout_cnt[25]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \readout_cnt[25]\,
	cin => \i~313COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~314\,
	cout => \i~314COUT\);

\readout_cnt[25]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[25]\ = DFFE(\readout_cnt[25]\ & (\i~55\ # \state~22\ & \i~314\) # !\readout_cnt[25]\ & \state~22\ & \i~314\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[25]\,
	datab => \i~55\,
	datac => \state~22\,
	datad => \i~314\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[25]\);

\i~315_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~315\ = \readout_cnt[26]\ $ !\i~314COUT\
-- \i~315COUT\ = CARRY(\readout_cnt[26]\ & !\i~314COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[26]\,
	cin => \i~314COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~315\,
	cout => \i~315COUT\);

\readout_cnt[26]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[26]\ = DFFE(\i~55\ & (\readout_cnt[26]\ # \state~22\ & \i~315\) # !\i~55\ & \state~22\ & \i~315\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~55\,
	datab => \state~22\,
	datac => \readout_cnt[26]\,
	datad => \i~315\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[26]\);

\i~316_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~316\ = \readout_cnt[27]\ $ \i~315COUT\
-- \i~316COUT\ = CARRY(!\i~315COUT\ # !\readout_cnt[27]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[27]\,
	cin => \i~315COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~316\,
	cout => \i~316COUT\);

\readout_cnt[27]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[27]\ = DFFE(\i~55\ & (\readout_cnt[27]\ # \state~22\ & \i~316\) # !\i~55\ & \state~22\ & \i~316\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~55\,
	datab => \state~22\,
	datac => \readout_cnt[27]\,
	datad => \i~316\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[27]\);

\i~317_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~317\ = \readout_cnt[28]\ $ !\i~316COUT\
-- \i~317COUT\ = CARRY(\readout_cnt[28]\ & !\i~316COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[28]\,
	cin => \i~316COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~317\,
	cout => \i~317COUT\);

\readout_cnt[28]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[28]\ = DFFE(\i~55\ & (\readout_cnt[28]\ # \state~22\ & \i~317\) # !\i~55\ & \state~22\ & \i~317\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~55\,
	datab => \state~22\,
	datac => \readout_cnt[28]\,
	datad => \i~317\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[28]\);

\i~318_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~318\ = \readout_cnt[29]\ $ \i~317COUT\
-- \i~318COUT\ = CARRY(!\i~317COUT\ # !\readout_cnt[29]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[29]\,
	cin => \i~317COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~318\,
	cout => \i~318COUT\);

\readout_cnt[29]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[29]\ = DFFE(\i~55\ & (\readout_cnt[29]\ # \state~22\ & \i~318\) # !\i~55\ & \state~22\ & \i~318\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~55\,
	datab => \state~22\,
	datac => \readout_cnt[29]\,
	datad => \i~318\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[29]\);

\i~319_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~319\ = \readout_cnt[30]\ $ !\i~318COUT\
-- \i~319COUT\ = CARRY(\readout_cnt[30]\ & !\i~318COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[30]\,
	cin => \i~318COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~319\,
	cout => \i~319COUT\);

\readout_cnt[30]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[30]\ = DFFE(\readout_cnt[30]\ & (\i~55\ # \state~22\ & \i~319\) # !\readout_cnt[30]\ & \state~22\ & \i~319\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[30]\,
	datab => \i~55\,
	datac => \state~22\,
	datad => \i~319\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[30]\);

\i~320_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~320\ = \i~319COUT\ $ \readout_cnt[31]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datad => \readout_cnt[31]\,
	cin => \i~319COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~320\);

\readout_cnt[31]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[31]\ = DFFE(\state~22\ & (\i~320\ # \i~55\ & \readout_cnt[31]\) # !\state~22\ & \i~55\ & \readout_cnt[31]\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datab => \i~55\,
	datac => \readout_cnt[31]\,
	datad => \i~320\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[31]\);

\i~3181_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3181\ = !\readout_cnt[30]\ & !\readout_cnt[29]\ & !\readout_cnt[31]\ & !\readout_cnt[28]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[30]\,
	datab => \readout_cnt[29]\,
	datac => \readout_cnt[31]\,
	datad => \readout_cnt[28]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \i~3181\);

\i~3190_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3190\ = (!\readout_cnt[24]\ & !\readout_cnt[26]\ & !\readout_cnt[25]\ & !\readout_cnt[27]\) & CASCADE(\i~3181\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[24]\,
	datab => \readout_cnt[26]\,
	datac => \readout_cnt[25]\,
	datad => \readout_cnt[27]\,
	cascin => \i~3181\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3190\);

\i~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~2\ = \i~3192\ & \i~3191\ & \i~3193\ & \i~3190\
-- \i~3194\ = \i~3192\ & \i~3191\ & \i~3193\ & \i~3190\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~3192\,
	datab => \i~3191\,
	datac => \i~3193\,
	datad => \i~3190\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~2\,
	cascout => \i~3194\);

\i~3134_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3134\ = \state~21\ # \state~23\ & !\i~2\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AAFA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~21\,
	datac => \state~23\,
	datad => \i~2\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3134\);

\state~21_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~21\ = DFFE(start_readout & (\i~3134\ & !\divide_cnt[1]\ # !\state~20\) # !start_readout & \i~3134\ & !\divide_cnt[1]\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "22F2",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_start_readout,
	datab => \state~20\,
	datac => \i~3134\,
	datad => \divide_cnt[1]\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~21\);

\i~3130_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3130\ = !\state~25\ & !\state~26\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0033",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \state~25\,
	datad => \state~26\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3130\);

\i~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~55\ = \state~24\ # \state~21\ # \state~23\ # !\i~3130\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFEF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~24\,
	datab => \state~21\,
	datac => \i~3130\,
	datad => \state~23\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~55\);

\readout_cnt[10]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[10]\ = DFFE(\i~55\ & (\readout_cnt[10]\ # \state~22\ & \i~299\) # !\i~55\ & \state~22\ & \i~299\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~55\,
	datab => \readout_cnt[10]\,
	datac => \state~22\,
	datad => \i~299\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[10]\);

\i~3185_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3185\ = !\readout_cnt[14]\ & !\readout_cnt[15]\ & !\readout_cnt[13]\ & !\readout_cnt[12]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[14]\,
	datab => \readout_cnt[15]\,
	datac => \readout_cnt[13]\,
	datad => \readout_cnt[12]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \i~3185\);

\i~3192_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3192\ = (!\readout_cnt[10]\ & !\readout_cnt[8]\ & !\readout_cnt[9]\ & !\readout_cnt[11]\) & CASCADE(\i~3185\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[10]\,
	datab => \readout_cnt[8]\,
	datac => \readout_cnt[9]\,
	datad => \readout_cnt[11]\,
	cascin => \i~3185\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3192\);

\state~24_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~24\ = DFFE((!\divide_cnt[1]\ & \state~23\) & CASCADE(\i~3194\), GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5050",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \divide_cnt[1]\,
	datac => \state~23\,
	cascin => \i~3194\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~24\);

\state~25_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~25\ = DFFE(\state~24\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \state~24\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~25\);

\state~26_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~26\ = DFFE(\state~25\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \state~25\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~26\);

\state~20_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~20\ = DFFE(!\state~26\ & (\state~20\ # start_readout), GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \state~20\,
	datac => \state~26\,
	datad => ww_start_readout,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~20\);

\i~3132_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3132\ = !\state~23\ & !\state~25\ & !\state~26\ & !\state~22\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~23\,
	datab => \state~25\,
	datac => \state~26\,
	datad => \state~22\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3132\);

\rst_divide~I\ : apex20ke_lcell 
-- Equation(s):
-- rst_divide = DFFE(rst_divide & (\state~24\ # !\i~3132\) # !\state~20\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B3BB",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => rst_divide,
	datab => \state~20\,
	datac => \state~24\,
	datad => \i~3132\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => rst_divide);

\divide_cnt[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \divide_cnt[0]\ = DFFE(!rst_divide & !\divide_cnt[0]\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "000F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => rst_divide,
	datad => \divide_cnt[0]\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \divide_cnt[0]\);

\divide_cnt[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \divide_cnt[1]\ = DFFE(!rst_divide & (\divide_cnt[0]\ $ \divide_cnt[1]\), GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "030C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \divide_cnt[0]\,
	datac => rst_divide,
	datad => \divide_cnt[1]\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \divide_cnt[1]\);

\state~22_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~22\ = DFFE(\divide_cnt[1]\ & \state~21\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \divide_cnt[1]\,
	datad => \state~21\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~22\);

\ATWD_D_gray[0]~19_I\ : apex20ke_lcell 
-- Equation(s):
-- \ATWD_D_gray[0]~19\ = \state~22\ & !RST

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0A0A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datac => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \ATWD_D_gray[0]~19\);

\i~321_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~321\ = !addr_cnt_0
-- \i~321COUT\ = CARRY(addr_cnt_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "33CC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_addr_cnt_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~321\,
	cout => \i~321COUT\);

\i~3139_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3139\ = !\state~20\ & (addr_cnt_0 # !busy)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "2323",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_addr_cnt_0,
	datab => \state~20\,
	datac => ww_busy,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3139\);

\i~3141_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3141\ = \i~3139\ # addr_cnt_0 & (\i~3140\ # \state~24\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFC8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~3140\,
	datab => ww_addr_cnt_0,
	datac => \state~24\,
	datad => \i~3139\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3141\);

\i~3143_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3143\ = !\state~20\ & (addr_cnt_1 # !busy)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "4545",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~20\,
	datab => ww_addr_cnt_1,
	datac => ww_busy,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3143\);

\i~3144_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3144\ = \i~3143\ # addr_cnt_1 & (\state~24\ # \i~3140\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EEEA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~3143\,
	datab => ww_addr_cnt_1,
	datac => \state~24\,
	datad => \i~3140\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3144\);

\i~322_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~322\ = addr_cnt_1 $ \i~321COUT\
-- \i~322COUT\ = CARRY(!\i~321COUT\ # !addr_cnt_1)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_addr_cnt_1,
	cin => \i~321COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~322\,
	cout => \i~322COUT\);

\i~3146_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3146\ = !\state~20\ & (addr_cnt_2 # !busy)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "4545",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~20\,
	datab => ww_addr_cnt_2,
	datac => ww_busy,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3146\);

\i~3147_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3147\ = \i~3146\ # addr_cnt_2 & (\state~24\ # \i~3140\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FCF8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~24\,
	datab => ww_addr_cnt_2,
	datac => \i~3146\,
	datad => \i~3140\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3147\);

\i~323_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~323\ = addr_cnt_2 $ !\i~322COUT\
-- \i~323COUT\ = CARRY(addr_cnt_2 & !\i~322COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_addr_cnt_2,
	cin => \i~322COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~323\,
	cout => \i~323COUT\);

\i~3149_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3149\ = !\state~20\ & (addr_cnt_3 # !busy)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "4545",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~20\,
	datab => ww_addr_cnt_3,
	datac => ww_busy,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3149\);

\i~3150_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3150\ = \i~3149\ # addr_cnt_3 & (\state~24\ # \i~3140\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FCF8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~24\,
	datab => ww_addr_cnt_3,
	datac => \i~3149\,
	datad => \i~3140\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3150\);

\i~324_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~324\ = addr_cnt_3 $ \i~323COUT\
-- \i~324COUT\ = CARRY(!\i~323COUT\ # !addr_cnt_3)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_addr_cnt_3,
	cin => \i~323COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~324\,
	cout => \i~324COUT\);

\i~325_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~325\ = addr_cnt_4 $ !\i~324COUT\
-- \i~325COUT\ = CARRY(addr_cnt_4 & !\i~324COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_addr_cnt_4,
	cin => \i~324COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~325\,
	cout => \i~325COUT\);

\i~3152_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3152\ = !\state~20\ & (addr_cnt_4 # !busy)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3131",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_busy,
	datab => \state~20\,
	datac => ww_addr_cnt_4,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3152\);

\i~3153_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3153\ = \i~3152\ # addr_cnt_4 & (\state~24\ # \i~3140\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFE0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~24\,
	datab => \i~3140\,
	datac => ww_addr_cnt_4,
	datad => \i~3152\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3153\);

\i~326_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~326\ = addr_cnt_5 $ \i~325COUT\
-- \i~326COUT\ = CARRY(!\i~325COUT\ # !addr_cnt_5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_addr_cnt_5,
	cin => \i~325COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~326\,
	cout => \i~326COUT\);

\i~3155_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3155\ = !\state~20\ & (addr_cnt_5 # !busy)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3131",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_busy,
	datab => \state~20\,
	datac => ww_addr_cnt_5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3155\);

\i~3156_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3156\ = \i~3155\ # addr_cnt_5 & (\state~24\ # \i~3140\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFE0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~24\,
	datab => \i~3140\,
	datac => ww_addr_cnt_5,
	datad => \i~3155\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3156\);

\i~327_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~327\ = addr_cnt_6 $ !\i~326COUT\
-- \i~327COUT\ = CARRY(addr_cnt_6 & !\i~326COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_addr_cnt_6,
	cin => \i~326COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~327\,
	cout => \i~327COUT\);

\i~3158_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3158\ = !\state~20\ & (addr_cnt_6 # !busy)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3131",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_busy,
	datab => \state~20\,
	datac => ww_addr_cnt_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3158\);

\i~3159_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3159\ = \i~3158\ # addr_cnt_6 & (\state~24\ # \i~3140\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFE0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~24\,
	datab => \i~3140\,
	datac => ww_addr_cnt_6,
	datad => \i~3158\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3159\);

\i~328_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~328\ = addr_cnt_7 $ \i~327COUT\
-- \i~328COUT\ = CARRY(!\i~327COUT\ # !addr_cnt_7)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_addr_cnt_7,
	cin => \i~327COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~328\,
	cout => \i~328COUT\);

\i~3161_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3161\ = !\state~20\ & (addr_cnt_7 # !busy)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5151",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~20\,
	datab => ww_busy,
	datac => ww_addr_cnt_7,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3161\);

\i~3162_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3162\ = \i~3161\ # addr_cnt_7 & (\state~24\ # \i~3140\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFE0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~24\,
	datab => \i~3140\,
	datac => ww_addr_cnt_7,
	datad => \i~3161\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3162\);

\i~329_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~329\ = \i~328COUT\ $ !addr_cnt_8

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "F00F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datad => ww_addr_cnt_8,
	cin => \i~328COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~329\);

\i~3164_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3164\ = !\state~20\ & (addr_cnt_8 # !busy)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5151",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~20\,
	datab => ww_busy,
	datac => ww_addr_cnt_8,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3164\);

\i~3165_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3165\ = \i~3164\ # addr_cnt_8 & (\state~24\ # \i~3140\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFE0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~24\,
	datab => \i~3140\,
	datac => ww_addr_cnt_8,
	datad => \i~3164\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3165\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	gray2bin IS
    PORT (
	ATWD_D_gray_3 : IN std_logic;
	ATWD_D_gray_2 : IN std_logic;
	ATWD_D_gray_1 : IN std_logic;
	ATWD_D_gray_5 : IN std_logic;
	ATWD_D_gray_4 : IN std_logic;
	ATWD_D_gray_8 : IN std_logic;
	ATWD_D_gray_9 : IN std_logic;
	ATWD_D_gray_7 : IN std_logic;
	ATWD_D_gray_6 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	i6 : OUT std_logic;
	i8 : OUT std_logic;
	i11 : OUT std_logic;
	i9 : OUT std_logic;
	i5 : OUT std_logic
	);
END gray2bin;

ARCHITECTURE structure OF gray2bin IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_ATWD_D_gray_3 : std_logic;
SIGNAL ww_ATWD_D_gray_2 : std_logic;
SIGNAL ww_ATWD_D_gray_1 : std_logic;
SIGNAL ww_ATWD_D_gray_5 : std_logic;
SIGNAL ww_ATWD_D_gray_4 : std_logic;
SIGNAL ww_ATWD_D_gray_8 : std_logic;
SIGNAL ww_ATWD_D_gray_9 : std_logic;
SIGNAL ww_ATWD_D_gray_7 : std_logic;
SIGNAL ww_ATWD_D_gray_6 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_i6 : std_logic;
SIGNAL ww_i8 : std_logic;
SIGNAL ww_i11 : std_logic;
SIGNAL ww_i9 : std_logic;
SIGNAL ww_i5 : std_logic;

BEGIN

ww_ATWD_D_gray_3 <= ATWD_D_gray_3;
ww_ATWD_D_gray_2 <= ATWD_D_gray_2;
ww_ATWD_D_gray_1 <= ATWD_D_gray_1;
ww_ATWD_D_gray_5 <= ATWD_D_gray_5;
ww_ATWD_D_gray_4 <= ATWD_D_gray_4;
ww_ATWD_D_gray_8 <= ATWD_D_gray_8;
ww_ATWD_D_gray_9 <= ATWD_D_gray_9;
ww_ATWD_D_gray_7 <= ATWD_D_gray_7;
ww_ATWD_D_gray_6 <= ATWD_D_gray_6;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
i6 <= ww_i6;
i8 <= ww_i8;
i11 <= ww_i11;
i9 <= ww_i9;
i5 <= ww_i5;

\i6~I\ : apex20ke_lcell 
-- Equation(s):
-- i6 = ATWD_D_gray_7 $ ATWD_D_gray_6 $ ATWD_D_gray_9 $ ATWD_D_gray_8

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "6996",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_ATWD_D_gray_7,
	datab => ww_ATWD_D_gray_6,
	datac => ww_ATWD_D_gray_9,
	datad => ww_ATWD_D_gray_8,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_i6);

\i8~I\ : apex20ke_lcell 
-- Equation(s):
-- i8 = ATWD_D_gray_5 $ i6 $ ATWD_D_gray_4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C33C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_ATWD_D_gray_5,
	datac => ww_i6,
	datad => ww_ATWD_D_gray_4,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_i8);

\i11~I\ : apex20ke_lcell 
-- Equation(s):
-- i11 = i8 $ ATWD_D_gray_1 $ ATWD_D_gray_3 $ ATWD_D_gray_2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "6996",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_i8,
	datab => ww_ATWD_D_gray_1,
	datac => ww_ATWD_D_gray_3,
	datad => ww_ATWD_D_gray_2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_i11);

\i9~I\ : apex20ke_lcell 
-- Equation(s):
-- i9 = i6 $ ATWD_D_gray_5 $ ATWD_D_gray_3 $ ATWD_D_gray_4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "6996",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_i6,
	datab => ww_ATWD_D_gray_5,
	datac => ww_ATWD_D_gray_3,
	datad => ww_ATWD_D_gray_4,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_i9);

\i5~I\ : apex20ke_lcell 
-- Equation(s):
-- i5 = ATWD_D_gray_9 $ ATWD_D_gray_8 $ ATWD_D_gray_7

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "9696",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_ATWD_D_gray_9,
	datab => ww_ATWD_D_gray_8,
	datac => ww_ATWD_D_gray_7,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_i5);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	atwd_trigger IS
    PORT (
	CLK40 : IN std_logic;
	RST : IN std_logic;
	command_0_local_0 : IN std_logic;
	command_0_local_1 : IN std_logic;
	command_0_local_3 : IN std_logic;
	command_0_local_15 : IN std_logic;
	i : IN std_logic;
	busy : IN std_logic;
	reset_trig : IN std_logic;
	atwd0_pong_enable : IN std_logic;
	enable_disc : IN std_logic;
	OneSPE : IN std_logic;
	TriggerComplete_0 : IN std_logic;
	ATWDTrigger_sig1 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	ATWDTrigger_sig : OUT std_logic;
	done : OUT std_logic;
	TriggerComplete_in_sync : OUT std_logic
	);
END atwd_trigger;

ARCHITECTURE structure OF atwd_trigger IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK40 : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_command_0_local_0 : std_logic;
SIGNAL ww_command_0_local_1 : std_logic;
SIGNAL ww_command_0_local_3 : std_logic;
SIGNAL ww_command_0_local_15 : std_logic;
SIGNAL ww_i : std_logic;
SIGNAL ww_busy : std_logic;
SIGNAL ww_reset_trig : std_logic;
SIGNAL ww_atwd0_pong_enable : std_logic;
SIGNAL ww_enable_disc : std_logic;
SIGNAL ww_OneSPE : std_logic;
SIGNAL ww_TriggerComplete_0 : std_logic;
SIGNAL ww_ATWDTrigger_sig1 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_ATWDTrigger_sig : std_logic;
SIGNAL ww_done : std_logic;
SIGNAL ww_TriggerComplete_in_sync : std_logic;
SIGNAL enable_old : std_logic;
SIGNAL \i51~30\ : std_logic;
SIGNAL enable_LED_old : std_logic;
SIGNAL enable_LED_sig : std_logic;
SIGNAL \i52~8\ : std_logic;
SIGNAL \launch_mode[0]\ : std_logic;
SIGNAL discFF : std_logic;
SIGNAL enable_disc_old : std_logic;
SIGNAL enable_disc_sig : std_logic;
SIGNAL \i61~76\ : std_logic;
SIGNAL \launch_mode[1]\ : std_logic;
SIGNAL \i11~84\ : std_logic;
SIGNAL TriggerComplete_in_0 : std_logic;
SIGNAL ALT_NOT_ww_RST : std_logic;
SIGNAL ALT_NOT_ww_CLK40 : std_logic;

BEGIN

ww_CLK40 <= CLK40;
ww_RST <= RST;
ww_command_0_local_0 <= command_0_local_0;
ww_command_0_local_1 <= command_0_local_1;
ww_command_0_local_3 <= command_0_local_3;
ww_command_0_local_15 <= command_0_local_15;
ww_i <= i;
ww_busy <= busy;
ww_reset_trig <= reset_trig;
ww_atwd0_pong_enable <= atwd0_pong_enable;
ww_enable_disc <= enable_disc;
ww_OneSPE <= OneSPE;
ww_TriggerComplete_0 <= TriggerComplete_0;
ww_ATWDTrigger_sig1 <= ATWDTrigger_sig1;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
ATWDTrigger_sig <= ww_ATWDTrigger_sig;
done <= ww_done;
TriggerComplete_in_sync <= ww_TriggerComplete_in_sync;
ALT_NOT_ww_RST <= NOT ww_RST;
ALT_NOT_ww_CLK40 <= NOT ww_CLK40;

\ATWDTrigger_sig~COMB_I\ : apex20ke_lcell 
-- Equation(s):
-- ATWDTrigger_sig = \launch_mode[0]\ # discFF & \launch_mode[1]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FCCC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \launch_mode[0]\,
	datac => discFF,
	datad => \launch_mode[1]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_ATWDTrigger_sig);

\done~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- done = DFFE(!busy & (\i11~84\ # !i122 & !enable_disc_sig), GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F01",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_enable_disc,
	datab => enable_disc_sig,
	datac => ww_busy,
	datad => \i11~84\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_done);

\TriggerComplete_in_sync~I\ : apex20ke_lcell 
-- Equation(s):
-- TriggerComplete_in_sync = DFFE(TriggerComplete_in_0, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => TriggerComplete_in_0,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_TriggerComplete_in_sync);

\enable_old~I\ : apex20ke_lcell 
-- Equation(s):
-- enable_old = DFFE(command_0_local_0, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_command_0_local_0,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => enable_old);

\i51~30_I\ : apex20ke_lcell 
-- Equation(s):
-- \i51~30\ = command_0_local_0 & !busy & !enable_old

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "000C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_command_0_local_0,
	datac => ww_busy,
	datad => enable_old,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i51~30\);

\enable_LED_old~I\ : apex20ke_lcell 
-- Equation(s):
-- enable_LED_old = DFFE(command_0_local_3, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_command_0_local_3,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => enable_LED_old);

\enable_LED_sig~I\ : apex20ke_lcell 
-- Equation(s):
-- enable_LED_sig = DFFE(command_0_local_3 & (enable_LED_sig & !\inst_atwd_trigger|ATWDTrigger_sig\ # !enable_LED_old) # !command_0_local_3 & enable_LED_sig & !\inst_atwd_trigger|ATWDTrigger_sig\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0CAE",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_0_local_3,
	datab => enable_LED_sig,
	datac => ww_ATWDTrigger_sig1,
	datad => enable_LED_old,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => enable_LED_sig);

\i52~8_I\ : apex20ke_lcell 
-- Equation(s):
-- \i52~8\ = \inst_atwd_trigger|ATWDTrigger_sig\ # !busy & i & enable_LED_sig

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BAAA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_ATWDTrigger_sig1,
	datab => ww_busy,
	datac => ww_i,
	datad => enable_LED_sig,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i52~8\);

\launch_mode[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \launch_mode[0]\ = DFFE(!reset_trig & (\i51~30\ # \i52~8\), !GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i51~30\,
	datac => ww_reset_trig,
	datad => \i52~8\,
	clk => ALT_NOT_ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \launch_mode[0]\);

\discFF~I\ : apex20ke_lcell 
-- Equation(s):
-- discFF = DFFE(VCC, GLOBAL(\OneSPE~combout\), !i122, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	clk => ww_OneSPE,
	aclr => ww_enable_disc,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => discFF);

\enable_disc_old~I\ : apex20ke_lcell 
-- Equation(s):
-- enable_disc_old = DFFE(atwd0_pong_enable & (command_0_local_15 # command_0_local_1) # !atwd0_pong_enable & !command_0_local_15 & command_0_local_1, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_atwd0_pong_enable,
	datac => ww_command_0_local_15,
	datad => ww_command_0_local_1,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => enable_disc_old);

\enable_disc_sig~I\ : apex20ke_lcell 
-- Equation(s):
-- enable_disc_sig = DFFE(enable_disc_sig & (!enable_disc_old & !i122 # !\inst_atwd_trigger|ATWDTrigger_sig\) # !enable_disc_sig & !enable_disc_old & !i122, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0A3B",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => enable_disc_sig,
	datab => enable_disc_old,
	datac => ww_ATWDTrigger_sig1,
	datad => ww_enable_disc,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => enable_disc_sig);

\i61~76_I\ : apex20ke_lcell 
-- Equation(s):
-- \i61~76\ = busy # !enable_disc_sig

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CCFF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_busy,
	datad => enable_disc_sig,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i61~76\);

\launch_mode[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \launch_mode[1]\ = DFFE(!reset_trig & (\i51~30\ # \i52~8\ # !\i61~76\), !GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5545",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reset_trig,
	datab => \i51~30\,
	datac => \i61~76\,
	datad => \i52~8\,
	clk => ALT_NOT_ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \launch_mode[1]\);

\i11~84_I\ : apex20ke_lcell 
-- Equation(s):
-- \i11~84\ = command_0_local_0 # !enable_LED_sig & command_0_local_3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF30",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => enable_LED_sig,
	datac => ww_command_0_local_3,
	datad => ww_command_0_local_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i11~84\);

\TriggerComplete_in_0~I\ : apex20ke_lcell 
-- Equation(s):
-- TriggerComplete_in_0 = DFFE(!\TriggerComplete_0~combout\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00FF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_TriggerComplete_0,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => TriggerComplete_in_0);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	altdpram IS
    PORT (
	inclock : IN std_logic;
	outclock : IN std_logic;
	rdaddress : IN std_logic_vector(8 DOWNTO 0);
	data : IN std_logic_vector(15 DOWNTO 0);
	wren : IN std_logic;
	wraddress : IN std_logic_vector(8 DOWNTO 0);
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q : OUT std_logic_vector(15 DOWNTO 0)
	);
END altdpram;

ARCHITECTURE structure OF altdpram IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_inclock : std_logic;
SIGNAL ww_outclock : std_logic;
SIGNAL ww_rdaddress : std_logic_vector(8 DOWNTO 0);
SIGNAL ww_data : std_logic_vector(15 DOWNTO 0);
SIGNAL ww_wren : std_logic;
SIGNAL ww_wraddress : std_logic_vector(8 DOWNTO 0);
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_q : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][0]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][0]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][1]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][1]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][2]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][2]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][3]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][3]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][4]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][4]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][5]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][5]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][6]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][6]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][7]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][7]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][8]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][8]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][9]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][9]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][10]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][10]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][11]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][11]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][12]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][12]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][13]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][13]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][14]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][14]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][15]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][15]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \segment[0][0]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][1]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][2]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][3]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][4]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][5]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][6]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][7]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][8]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][9]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][10]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][11]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][12]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][13]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][14]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][15]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";

BEGIN

ww_inclock <= inclock;
ww_outclock <= outclock;
ww_rdaddress <= rdaddress;
ww_data <= data;
ww_wren <= wren;
ww_wraddress <= wraddress;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
q <= ww_q;

\ww_segment[0][0]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][0]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][1]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][1]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][2]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][2]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][3]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][3]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][4]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][4]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][5]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][5]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][6]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][6]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][7]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][7]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][8]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][8]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][9]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][9]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][10]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][10]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][11]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][11]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][12]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][12]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][13]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][13]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][14]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][14]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][15]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][15]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\segment[0][0]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "atwd:atwd0|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 0,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(0),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][0]_waddr\,
	raddr => \ww_segment[0][0]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][0]_modesel\,
	dataout => ww_q(0));

\segment[0][1]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "atwd:atwd0|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 1,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(1),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][1]_waddr\,
	raddr => \ww_segment[0][1]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][1]_modesel\,
	dataout => ww_q(1));

\segment[0][2]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "atwd:atwd0|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 2,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(2),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][2]_waddr\,
	raddr => \ww_segment[0][2]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][2]_modesel\,
	dataout => ww_q(2));

\segment[0][3]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "atwd:atwd0|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 3,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(3),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][3]_waddr\,
	raddr => \ww_segment[0][3]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][3]_modesel\,
	dataout => ww_q(3));

\segment[0][4]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "atwd:atwd0|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 4,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(4),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][4]_waddr\,
	raddr => \ww_segment[0][4]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][4]_modesel\,
	dataout => ww_q(4));

\segment[0][5]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "atwd:atwd0|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 5,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(5),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][5]_waddr\,
	raddr => \ww_segment[0][5]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][5]_modesel\,
	dataout => ww_q(5));

\segment[0][6]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "atwd:atwd0|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 6,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(6),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][6]_waddr\,
	raddr => \ww_segment[0][6]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][6]_modesel\,
	dataout => ww_q(6));

\segment[0][7]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "atwd:atwd0|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 7,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(7),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][7]_waddr\,
	raddr => \ww_segment[0][7]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][7]_modesel\,
	dataout => ww_q(7));

\segment[0][8]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "atwd:atwd0|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 8,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(8),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][8]_waddr\,
	raddr => \ww_segment[0][8]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][8]_modesel\,
	dataout => ww_q(8));

\segment[0][9]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "atwd:atwd0|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 9,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(9),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][9]_waddr\,
	raddr => \ww_segment[0][9]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][9]_modesel\,
	dataout => ww_q(9));

\segment[0][10]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "atwd:atwd0|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 10,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(10),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][10]_waddr\,
	raddr => \ww_segment[0][10]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][10]_modesel\,
	dataout => ww_q(10));

\segment[0][11]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "atwd:atwd0|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 11,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(11),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][11]_waddr\,
	raddr => \ww_segment[0][11]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][11]_modesel\,
	dataout => ww_q(11));

\segment[0][12]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "atwd:atwd0|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 12,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(12),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][12]_waddr\,
	raddr => \ww_segment[0][12]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][12]_modesel\,
	dataout => ww_q(12));

\segment[0][13]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "atwd:atwd0|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 13,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(13),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][13]_waddr\,
	raddr => \ww_segment[0][13]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][13]_modesel\,
	dataout => ww_q(13));

\segment[0][14]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "atwd:atwd0|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 14,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(14),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][14]_waddr\,
	raddr => \ww_segment[0][14]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][14]_modesel\,
	dataout => ww_q(14));

\segment[0][15]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "atwd:atwd0|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 15,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(15),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][15]_waddr\,
	raddr => \ww_segment[0][15]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][15]_modesel\,
	dataout => ww_q(15));
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_ram_dp IS
    PORT (
	wrclock : IN std_logic;
	rdaddress : IN std_logic_vector(8 DOWNTO 0);
	data : IN std_logic_vector(15 DOWNTO 0);
	wren : IN std_logic;
	wraddress : IN std_logic_vector(8 DOWNTO 0);
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q : OUT std_logic_vector(15 DOWNTO 0)
	);
END lpm_ram_dp;

ARCHITECTURE structure OF lpm_ram_dp IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_wrclock : std_logic;
SIGNAL ww_rdaddress : std_logic_vector(8 DOWNTO 0);
SIGNAL ww_data : std_logic_vector(15 DOWNTO 0);
SIGNAL ww_wren : std_logic;
SIGNAL ww_wraddress : std_logic_vector(8 DOWNTO 0);
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_q : std_logic_vector(15 DOWNTO 0);
SIGNAL ww_sram_rdaddress : std_logic_vector(8 DOWNTO 0);
SIGNAL ww_sram_data : std_logic_vector(15 DOWNTO 0);
SIGNAL ww_sram_wraddress : std_logic_vector(8 DOWNTO 0);
SIGNAL ww_sram_q : std_logic_vector(15 DOWNTO 0);

COMPONENT altdpram
    PORT (
	inclock : IN std_logic;
	outclock : IN std_logic;
	rdaddress : IN std_logic_vector(8 DOWNTO 0);
	data : IN std_logic_vector(15 DOWNTO 0);
	wren : IN std_logic;
	wraddress : IN std_logic_vector(8 DOWNTO 0);
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q : OUT std_logic_vector(15 DOWNTO 0));
END COMPONENT;

BEGIN

ww_wrclock <= wrclock;
ww_rdaddress <= rdaddress;
ww_data <= data;
ww_wren <= wren;
ww_wraddress <= wraddress;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
q <= ww_q;

ww_sram_rdaddress <= (ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

ww_sram_data <= (ww_data(15) & ww_data(14) & ww_data(13) & ww_data(12) & ww_data(11) & ww_data(10) & ww_data(9) & ww_data(8) & ww_data(7) & ww_data(6) & ww_data(5) & ww_data(4) & ww_data(3) & ww_data(2) & ww_data(1) & ww_data(0)
);

ww_sram_wraddress <= (ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

ww_q(0) <= ww_sram_q(0);
ww_q(1) <= ww_sram_q(1);
ww_q(2) <= ww_sram_q(2);
ww_q(3) <= ww_sram_q(3);
ww_q(4) <= ww_sram_q(4);
ww_q(5) <= ww_sram_q(5);
ww_q(6) <= ww_sram_q(6);
ww_q(7) <= ww_sram_q(7);
ww_q(8) <= ww_sram_q(8);
ww_q(9) <= ww_sram_q(9);
ww_q(10) <= ww_sram_q(10);
ww_q(11) <= ww_sram_q(11);
ww_q(12) <= ww_sram_q(12);
ww_q(13) <= ww_sram_q(13);
ww_q(14) <= ww_sram_q(14);
ww_q(15) <= ww_sram_q(15);
sram : altdpram
PORT MAP (
	inclock => ww_wrclock,
	outclock => ww_wrclock,
	rdaddress => ww_sram_rdaddress,
	data => ww_sram_data,
	wren => ww_wren,
	wraddress => ww_sram_wraddress,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	q => ww_sram_q);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	com_adc_mem IS
    PORT (
	outclock1 : IN std_logic;
	reg_address_3 : IN std_logic;
	reg_address_4 : IN std_logic;
	reg_address_5 : IN std_logic;
	reg_address_6 : IN std_logic;
	reg_address_2 : IN std_logic;
	reg_address_7 : IN std_logic;
	reg_address_8 : IN std_logic;
	reg_address_9 : IN std_logic;
	reg_address_10 : IN std_logic;
	i25 : IN std_logic;
	i69 : IN std_logic;
	i58 : IN std_logic;
	i57 : IN std_logic;
	i56 : IN std_logic;
	i55 : IN std_logic;
	i54 : IN std_logic;
	i53 : IN std_logic;
	i52 : IN std_logic;
	i51 : IN std_logic;
	i50 : IN std_logic;
	i24 : IN std_logic;
	i23 : IN std_logic;
	i22 : IN std_logic;
	i21 : IN std_logic;
	i20 : IN std_logic;
	i19 : IN std_logic;
	i18 : IN std_logic;
	i17 : IN std_logic;
	i16 : IN std_logic;
	i42 : IN std_logic;
	i41 : IN std_logic;
	i40 : IN std_logic;
	i39 : IN std_logic;
	i38 : IN std_logic;
	i37 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q_0 : OUT std_logic;
	q_1 : OUT std_logic;
	q_2 : OUT std_logic;
	q_3 : OUT std_logic;
	q_4 : OUT std_logic;
	q_5 : OUT std_logic;
	q_6 : OUT std_logic;
	q_7 : OUT std_logic;
	q_8 : OUT std_logic;
	q_9 : OUT std_logic;
	q_10 : OUT std_logic;
	q_11 : OUT std_logic;
	q_12 : OUT std_logic;
	q_13 : OUT std_logic;
	q_14 : OUT std_logic;
	q_15 : OUT std_logic
	);
END com_adc_mem;

ARCHITECTURE structure OF com_adc_mem IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_outclock1 : std_logic;
SIGNAL ww_reg_address_3 : std_logic;
SIGNAL ww_reg_address_4 : std_logic;
SIGNAL ww_reg_address_5 : std_logic;
SIGNAL ww_reg_address_6 : std_logic;
SIGNAL ww_reg_address_2 : std_logic;
SIGNAL ww_reg_address_7 : std_logic;
SIGNAL ww_reg_address_8 : std_logic;
SIGNAL ww_reg_address_9 : std_logic;
SIGNAL ww_reg_address_10 : std_logic;
SIGNAL ww_i25 : std_logic;
SIGNAL ww_i69 : std_logic;
SIGNAL ww_i58 : std_logic;
SIGNAL ww_i57 : std_logic;
SIGNAL ww_i56 : std_logic;
SIGNAL ww_i55 : std_logic;
SIGNAL ww_i54 : std_logic;
SIGNAL ww_i53 : std_logic;
SIGNAL ww_i52 : std_logic;
SIGNAL ww_i51 : std_logic;
SIGNAL ww_i50 : std_logic;
SIGNAL ww_i24 : std_logic;
SIGNAL ww_i23 : std_logic;
SIGNAL ww_i22 : std_logic;
SIGNAL ww_i21 : std_logic;
SIGNAL ww_i20 : std_logic;
SIGNAL ww_i19 : std_logic;
SIGNAL ww_i18 : std_logic;
SIGNAL ww_i17 : std_logic;
SIGNAL ww_i16 : std_logic;
SIGNAL ww_i42 : std_logic;
SIGNAL ww_i41 : std_logic;
SIGNAL ww_i40 : std_logic;
SIGNAL ww_i39 : std_logic;
SIGNAL ww_i38 : std_logic;
SIGNAL ww_i37 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_q_0 : std_logic;
SIGNAL ww_q_1 : std_logic;
SIGNAL ww_q_2 : std_logic;
SIGNAL ww_q_3 : std_logic;
SIGNAL ww_q_4 : std_logic;
SIGNAL ww_q_5 : std_logic;
SIGNAL ww_q_6 : std_logic;
SIGNAL ww_q_7 : std_logic;
SIGNAL ww_q_8 : std_logic;
SIGNAL ww_q_9 : std_logic;
SIGNAL ww_q_10 : std_logic;
SIGNAL ww_q_11 : std_logic;
SIGNAL ww_q_12 : std_logic;
SIGNAL ww_q_13 : std_logic;
SIGNAL ww_q_14 : std_logic;
SIGNAL ww_q_15 : std_logic;
SIGNAL ww_lpm_ram_dp_component_rdaddress : std_logic_vector(8 DOWNTO 0);
SIGNAL ww_lpm_ram_dp_component_data : std_logic_vector(15 DOWNTO 0);
SIGNAL ww_lpm_ram_dp_component_wraddress : std_logic_vector(8 DOWNTO 0);
SIGNAL ww_lpm_ram_dp_component_q : std_logic_vector(15 DOWNTO 0);

COMPONENT lpm_ram_dp
    PORT (
	wrclock : IN std_logic;
	rdaddress : IN std_logic_vector(8 DOWNTO 0);
	data : IN std_logic_vector(15 DOWNTO 0);
	wren : IN std_logic;
	wraddress : IN std_logic_vector(8 DOWNTO 0);
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q : OUT std_logic_vector(15 DOWNTO 0));
END COMPONENT;

BEGIN

ww_outclock1 <= outclock1;
ww_reg_address_3 <= reg_address_3;
ww_reg_address_4 <= reg_address_4;
ww_reg_address_5 <= reg_address_5;
ww_reg_address_6 <= reg_address_6;
ww_reg_address_2 <= reg_address_2;
ww_reg_address_7 <= reg_address_7;
ww_reg_address_8 <= reg_address_8;
ww_reg_address_9 <= reg_address_9;
ww_reg_address_10 <= reg_address_10;
ww_i25 <= i25;
ww_i69 <= i69;
ww_i58 <= i58;
ww_i57 <= i57;
ww_i56 <= i56;
ww_i55 <= i55;
ww_i54 <= i54;
ww_i53 <= i53;
ww_i52 <= i52;
ww_i51 <= i51;
ww_i50 <= i50;
ww_i24 <= i24;
ww_i23 <= i23;
ww_i22 <= i22;
ww_i21 <= i21;
ww_i20 <= i20;
ww_i19 <= i19;
ww_i18 <= i18;
ww_i17 <= i17;
ww_i16 <= i16;
ww_i42 <= i42;
ww_i41 <= i41;
ww_i40 <= i40;
ww_i39 <= i39;
ww_i38 <= i38;
ww_i37 <= i37;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
q_0 <= ww_q_0;
q_1 <= ww_q_1;
q_2 <= ww_q_2;
q_3 <= ww_q_3;
q_4 <= ww_q_4;
q_5 <= ww_q_5;
q_6 <= ww_q_6;
q_7 <= ww_q_7;
q_8 <= ww_q_8;
q_9 <= ww_q_9;
q_10 <= ww_q_10;
q_11 <= ww_q_11;
q_12 <= ww_q_12;
q_13 <= ww_q_13;
q_14 <= ww_q_14;
q_15 <= ww_q_15;

ww_lpm_ram_dp_component_rdaddress <= (ww_reg_address_10 & ww_reg_address_9 & ww_reg_address_8 & ww_reg_address_7 & ww_reg_address_6 & ww_reg_address_5 & ww_reg_address_4 & ww_reg_address_3 & ww_reg_address_2);

ww_lpm_ram_dp_component_data <= (ww_i37 & ww_i38 & ww_i39 & ww_i40 & ww_i41 & ww_i42 & ww_i16 & ww_i17 & ww_i18 & ww_i19 & ww_i20 & ww_i21 & ww_i22 & ww_i23 & ww_i24 & ww_i25);

ww_lpm_ram_dp_component_wraddress <= (ww_i50 & ww_i51 & ww_i52 & ww_i53 & ww_i54 & ww_i55 & ww_i56 & ww_i57 & ww_i58);

ww_q_0 <= ww_lpm_ram_dp_component_q(0);
ww_q_1 <= ww_lpm_ram_dp_component_q(1);
ww_q_2 <= ww_lpm_ram_dp_component_q(2);
ww_q_3 <= ww_lpm_ram_dp_component_q(3);
ww_q_4 <= ww_lpm_ram_dp_component_q(4);
ww_q_5 <= ww_lpm_ram_dp_component_q(5);
ww_q_6 <= ww_lpm_ram_dp_component_q(6);
ww_q_7 <= ww_lpm_ram_dp_component_q(7);
ww_q_8 <= ww_lpm_ram_dp_component_q(8);
ww_q_9 <= ww_lpm_ram_dp_component_q(9);
ww_q_10 <= ww_lpm_ram_dp_component_q(10);
ww_q_11 <= ww_lpm_ram_dp_component_q(11);
ww_q_12 <= ww_lpm_ram_dp_component_q(12);
ww_q_13 <= ww_lpm_ram_dp_component_q(13);
ww_q_14 <= ww_lpm_ram_dp_component_q(14);
ww_q_15 <= ww_lpm_ram_dp_component_q(15);
lpm_ram_dp_component : lpm_ram_dp
PORT MAP (
	wrclock => ww_outclock1,
	rdaddress => ww_lpm_ram_dp_component_rdaddress,
	data => ww_lpm_ram_dp_component_data,
	wren => ww_i69,
	wraddress => ww_lpm_ram_dp_component_wraddress,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	q => ww_lpm_ram_dp_component_q);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	atwd IS
    PORT (
	CLK80 : IN std_logic;
	CLK40 : IN std_logic;
	MASTERHWDATA_0 : IN std_logic;
	MASTERHWDATA_1 : IN std_logic;
	MASTERHWDATA_2 : IN std_logic;
	MASTERHWDATA_3 : IN std_logic;
	MASTERHWDATA_4 : IN std_logic;
	MASTERHWDATA_5 : IN std_logic;
	MASTERHWDATA_6 : IN std_logic;
	MASTERHWDATA_7 : IN std_logic;
	MASTERHWDATA_8 : IN std_logic;
	MASTERHWDATA_9 : IN std_logic;
	MASTERHWDATA_10 : IN std_logic;
	MASTERHWDATA_11 : IN std_logic;
	MASTERHWDATA_12 : IN std_logic;
	MASTERHWDATA_13 : IN std_logic;
	MASTERHWDATA_14 : IN std_logic;
	MASTERHWDATA_15 : IN std_logic;
	RST : IN std_logic;
	state1 : IN std_logic;
	reg_address_3 : IN std_logic;
	reg_address_4 : IN std_logic;
	reg_address_5 : IN std_logic;
	reg_address_6 : IN std_logic;
	reg_address_2 : IN std_logic;
	reg_address_12 : IN std_logic;
	reg_address_14 : IN std_logic;
	command_0_local_0 : IN std_logic;
	command_0_local_1 : IN std_logic;
	command_0_local_3 : IN std_logic;
	command_0_local_15 : IN std_logic;
	i : IN std_logic;
	atwd0_pong_enable : IN std_logic;
	enable_disc : IN std_logic;
	reg_address_7 : IN std_logic;
	reg_address_8 : IN std_logic;
	reg_address_9 : IN std_logic;
	reg_address_10 : IN std_logic;
	i3335 : IN std_logic;
	dom_id_48 : IN std_logic;
	i33351 : IN std_logic;
	OneSPE : IN std_logic;
	ATWD0_D_0 : IN std_logic;
	ATWD0_D_3 : IN std_logic;
	ATWD0_D_2 : IN std_logic;
	ATWD0_D_1 : IN std_logic;
	ATWD0_D_5 : IN std_logic;
	ATWD0_D_4 : IN std_logic;
	ATWD0_D_8 : IN std_logic;
	ATWD0_D_9 : IN std_logic;
	ATWD0_D_7 : IN std_logic;
	ATWD0_D_6 : IN std_logic;
	TriggerComplete_0 : IN std_logic;
	ATWDTrigger_sig1 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	ATWDTrigger_sig : OUT std_logic;
	OutputEnable : OUT std_logic;
	CounterClock : OUT std_logic;
	ShiftClock : OUT std_logic;
	RampSet : OUT std_logic;
	channel_1 : OUT std_logic;
	channel_0 : OUT std_logic;
	ReadWrite : OUT std_logic;
	AnalogReset : OUT std_logic;
	DigitalReset : OUT std_logic;
	DigitalSet : OUT std_logic;
	state : OUT std_logic;
	q_0 : OUT std_logic;
	done : OUT std_logic;
	q_1 : OUT std_logic;
	q_2 : OUT std_logic;
	q_3 : OUT std_logic;
	q_4 : OUT std_logic;
	q_5 : OUT std_logic;
	q_6 : OUT std_logic;
	q_7 : OUT std_logic;
	q_8 : OUT std_logic;
	q_9 : OUT std_logic;
	q_10 : OUT std_logic;
	q_11 : OUT std_logic;
	q_12 : OUT std_logic;
	q_13 : OUT std_logic;
	q_14 : OUT std_logic;
	q_15 : OUT std_logic;
	TriggerComplete_in_sync : OUT std_logic
	);
END atwd;

ARCHITECTURE structure OF atwd IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK80 : std_logic;
SIGNAL ww_CLK40 : std_logic;
SIGNAL ww_MASTERHWDATA_0 : std_logic;
SIGNAL ww_MASTERHWDATA_1 : std_logic;
SIGNAL ww_MASTERHWDATA_2 : std_logic;
SIGNAL ww_MASTERHWDATA_3 : std_logic;
SIGNAL ww_MASTERHWDATA_4 : std_logic;
SIGNAL ww_MASTERHWDATA_5 : std_logic;
SIGNAL ww_MASTERHWDATA_6 : std_logic;
SIGNAL ww_MASTERHWDATA_7 : std_logic;
SIGNAL ww_MASTERHWDATA_8 : std_logic;
SIGNAL ww_MASTERHWDATA_9 : std_logic;
SIGNAL ww_MASTERHWDATA_10 : std_logic;
SIGNAL ww_MASTERHWDATA_11 : std_logic;
SIGNAL ww_MASTERHWDATA_12 : std_logic;
SIGNAL ww_MASTERHWDATA_13 : std_logic;
SIGNAL ww_MASTERHWDATA_14 : std_logic;
SIGNAL ww_MASTERHWDATA_15 : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_state1 : std_logic;
SIGNAL ww_reg_address_3 : std_logic;
SIGNAL ww_reg_address_4 : std_logic;
SIGNAL ww_reg_address_5 : std_logic;
SIGNAL ww_reg_address_6 : std_logic;
SIGNAL ww_reg_address_2 : std_logic;
SIGNAL ww_reg_address_12 : std_logic;
SIGNAL ww_reg_address_14 : std_logic;
SIGNAL ww_command_0_local_0 : std_logic;
SIGNAL ww_command_0_local_1 : std_logic;
SIGNAL ww_command_0_local_3 : std_logic;
SIGNAL ww_command_0_local_15 : std_logic;
SIGNAL ww_i : std_logic;
SIGNAL ww_atwd0_pong_enable : std_logic;
SIGNAL ww_enable_disc : std_logic;
SIGNAL ww_reg_address_7 : std_logic;
SIGNAL ww_reg_address_8 : std_logic;
SIGNAL ww_reg_address_9 : std_logic;
SIGNAL ww_reg_address_10 : std_logic;
SIGNAL ww_i3335 : std_logic;
SIGNAL ww_dom_id_48 : std_logic;
SIGNAL ww_i33351 : std_logic;
SIGNAL ww_OneSPE : std_logic;
SIGNAL ww_ATWD0_D_0 : std_logic;
SIGNAL ww_ATWD0_D_3 : std_logic;
SIGNAL ww_ATWD0_D_2 : std_logic;
SIGNAL ww_ATWD0_D_1 : std_logic;
SIGNAL ww_ATWD0_D_5 : std_logic;
SIGNAL ww_ATWD0_D_4 : std_logic;
SIGNAL ww_ATWD0_D_8 : std_logic;
SIGNAL ww_ATWD0_D_9 : std_logic;
SIGNAL ww_ATWD0_D_7 : std_logic;
SIGNAL ww_ATWD0_D_6 : std_logic;
SIGNAL ww_TriggerComplete_0 : std_logic;
SIGNAL ww_ATWDTrigger_sig1 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_ATWDTrigger_sig : std_logic;
SIGNAL ww_OutputEnable : std_logic;
SIGNAL ww_CounterClock : std_logic;
SIGNAL ww_ShiftClock : std_logic;
SIGNAL ww_RampSet : std_logic;
SIGNAL ww_channel_1 : std_logic;
SIGNAL ww_channel_0 : std_logic;
SIGNAL ww_ReadWrite : std_logic;
SIGNAL ww_AnalogReset : std_logic;
SIGNAL ww_DigitalReset : std_logic;
SIGNAL ww_DigitalSet : std_logic;
SIGNAL ww_state : std_logic;
SIGNAL ww_q_0 : std_logic;
SIGNAL ww_done : std_logic;
SIGNAL ww_q_1 : std_logic;
SIGNAL ww_q_2 : std_logic;
SIGNAL ww_q_3 : std_logic;
SIGNAL ww_q_4 : std_logic;
SIGNAL ww_q_5 : std_logic;
SIGNAL ww_q_6 : std_logic;
SIGNAL ww_q_7 : std_logic;
SIGNAL ww_q_8 : std_logic;
SIGNAL ww_q_9 : std_logic;
SIGNAL ww_q_10 : std_logic;
SIGNAL ww_q_11 : std_logic;
SIGNAL ww_q_12 : std_logic;
SIGNAL ww_q_13 : std_logic;
SIGNAL ww_q_14 : std_logic;
SIGNAL ww_q_15 : std_logic;
SIGNAL ww_TriggerComplete_in_sync : std_logic;
SIGNAL \inst_atwd_control|busy~reg0\ : std_logic;
SIGNAL \inst_atwd_control|reset_trig~reg0\ : std_logic;
SIGNAL \inst_atwd_readout|readout_done~reg0\ : std_logic;
SIGNAL \inst_atwd_readout|ATWD_D_gray[0]~reg0\ : std_logic;
SIGNAL \inst_atwd_readout|ATWD_D_gray[3]~reg0\ : std_logic;
SIGNAL \inst_atwd_readout|ATWD_D_gray[2]~reg0\ : std_logic;
SIGNAL \inst_atwd_readout|ATWD_D_gray[1]~reg0\ : std_logic;
SIGNAL \inst_atwd_readout|ATWD_D_gray[5]~reg0\ : std_logic;
SIGNAL \inst_atwd_readout|ATWD_D_gray[4]~reg0\ : std_logic;
SIGNAL \inst_atwd_readout|ATWD_D_gray[8]~reg0\ : std_logic;
SIGNAL \inst_atwd_readout|ATWD_D_gray[9]~reg0\ : std_logic;
SIGNAL \inst_atwd_readout|ATWD_D_gray[7]~reg0\ : std_logic;
SIGNAL \inst_atwd_readout|ATWD_D_gray[6]~reg0\ : std_logic;
SIGNAL \inst_gray2bin|i6\ : std_logic;
SIGNAL \inst_gray2bin|i8\ : std_logic;
SIGNAL \inst_gray2bin|i11\ : std_logic;
SIGNAL \i25~57\ : std_logic;
SIGNAL \inst_atwd_readout|data_valid~reg0\ : std_logic;
SIGNAL \i69~2\ : std_logic;
SIGNAL \inst_atwd_readout|addr_cnt[0]\ : std_logic;
SIGNAL \i58~55\ : std_logic;
SIGNAL \inst_atwd_readout|addr_cnt[1]\ : std_logic;
SIGNAL \i57~55\ : std_logic;
SIGNAL \inst_atwd_readout|addr_cnt[2]\ : std_logic;
SIGNAL \i56~55\ : std_logic;
SIGNAL \inst_atwd_readout|addr_cnt[3]\ : std_logic;
SIGNAL \i55~55\ : std_logic;
SIGNAL \inst_atwd_readout|addr_cnt[4]\ : std_logic;
SIGNAL \i54~55\ : std_logic;
SIGNAL \inst_atwd_readout|addr_cnt[5]\ : std_logic;
SIGNAL \i53~55\ : std_logic;
SIGNAL \inst_atwd_readout|addr_cnt[6]\ : std_logic;
SIGNAL \i52~55\ : std_logic;
SIGNAL \inst_atwd_readout|addr_cnt[7]\ : std_logic;
SIGNAL \i51~55\ : std_logic;
SIGNAL \inst_atwd_readout|addr_cnt[8]\ : std_logic;
SIGNAL \i50~55\ : std_logic;
SIGNAL \i24~9\ : std_logic;
SIGNAL \inst_gray2bin|i9\ : std_logic;
SIGNAL \i23~9\ : std_logic;
SIGNAL \i22~9\ : std_logic;
SIGNAL \i21~9\ : std_logic;
SIGNAL \i20~9\ : std_logic;
SIGNAL \i19~9\ : std_logic;
SIGNAL \inst_gray2bin|i5\ : std_logic;
SIGNAL \i18~9\ : std_logic;
SIGNAL \i17~59\ : std_logic;
SIGNAL \i16~55\ : std_logic;
SIGNAL \i42~0\ : std_logic;
SIGNAL \i41~0\ : std_logic;
SIGNAL \i40~0\ : std_logic;
SIGNAL \i39~0\ : std_logic;
SIGNAL \i38~0\ : std_logic;
SIGNAL \i37~0\ : std_logic;
SIGNAL \inst_atwd_control|start_readout~reg0\ : std_logic;

COMPONENT atwd_control
    PORT (
	CLK80 : IN std_logic;
	CLK40 : IN std_logic;
	RST : IN std_logic;
	state1 : IN std_logic;
	readout_done : IN std_logic;
	TriggerComplete_in_sync : IN std_logic;
	ATWDTrigger_sig : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	OutputEnable : OUT std_logic;
	CounterClock : OUT std_logic;
	RampSet : OUT std_logic;
	channel_1 : OUT std_logic;
	channel_0 : OUT std_logic;
	ReadWrite : OUT std_logic;
	AnalogReset : OUT std_logic;
	DigitalReset : OUT std_logic;
	DigitalSet : OUT std_logic;
	state : OUT std_logic;
	busy : OUT std_logic;
	reset_trig : OUT std_logic;
	start_readout : OUT std_logic);
END COMPONENT;

COMPONENT atwd_readout
    PORT (
	CLK40 : IN std_logic;
	RST : IN std_logic;
	busy : IN std_logic;
	start_readout : IN std_logic;
	ATWD0_D_0 : IN std_logic;
	ATWD0_D_3 : IN std_logic;
	ATWD0_D_2 : IN std_logic;
	ATWD0_D_1 : IN std_logic;
	ATWD0_D_5 : IN std_logic;
	ATWD0_D_4 : IN std_logic;
	ATWD0_D_8 : IN std_logic;
	ATWD0_D_9 : IN std_logic;
	ATWD0_D_7 : IN std_logic;
	ATWD0_D_6 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	ShiftClock : OUT std_logic;
	readout_done : OUT std_logic;
	ATWD_D_gray_0 : OUT std_logic;
	ATWD_D_gray_3 : OUT std_logic;
	ATWD_D_gray_2 : OUT std_logic;
	ATWD_D_gray_1 : OUT std_logic;
	ATWD_D_gray_5 : OUT std_logic;
	ATWD_D_gray_4 : OUT std_logic;
	ATWD_D_gray_8 : OUT std_logic;
	ATWD_D_gray_9 : OUT std_logic;
	ATWD_D_gray_7 : OUT std_logic;
	ATWD_D_gray_6 : OUT std_logic;
	data_valid : OUT std_logic;
	addr_cnt_0 : OUT std_logic;
	addr_cnt_1 : OUT std_logic;
	addr_cnt_2 : OUT std_logic;
	addr_cnt_3 : OUT std_logic;
	addr_cnt_4 : OUT std_logic;
	addr_cnt_5 : OUT std_logic;
	addr_cnt_6 : OUT std_logic;
	addr_cnt_7 : OUT std_logic;
	addr_cnt_8 : OUT std_logic);
END COMPONENT;

COMPONENT gray2bin
    PORT (
	ATWD_D_gray_3 : IN std_logic;
	ATWD_D_gray_2 : IN std_logic;
	ATWD_D_gray_1 : IN std_logic;
	ATWD_D_gray_5 : IN std_logic;
	ATWD_D_gray_4 : IN std_logic;
	ATWD_D_gray_8 : IN std_logic;
	ATWD_D_gray_9 : IN std_logic;
	ATWD_D_gray_7 : IN std_logic;
	ATWD_D_gray_6 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	i6 : OUT std_logic;
	i8 : OUT std_logic;
	i11 : OUT std_logic;
	i9 : OUT std_logic;
	i5 : OUT std_logic);
END COMPONENT;

COMPONENT atwd_trigger
    PORT (
	CLK40 : IN std_logic;
	RST : IN std_logic;
	command_0_local_0 : IN std_logic;
	command_0_local_1 : IN std_logic;
	command_0_local_3 : IN std_logic;
	command_0_local_15 : IN std_logic;
	i : IN std_logic;
	busy : IN std_logic;
	reset_trig : IN std_logic;
	atwd0_pong_enable : IN std_logic;
	enable_disc : IN std_logic;
	OneSPE : IN std_logic;
	TriggerComplete_0 : IN std_logic;
	ATWDTrigger_sig1 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	ATWDTrigger_sig : OUT std_logic;
	done : OUT std_logic;
	TriggerComplete_in_sync : OUT std_logic);
END COMPONENT;

COMPONENT com_adc_mem
    PORT (
	outclock1 : IN std_logic;
	reg_address_3 : IN std_logic;
	reg_address_4 : IN std_logic;
	reg_address_5 : IN std_logic;
	reg_address_6 : IN std_logic;
	reg_address_2 : IN std_logic;
	reg_address_7 : IN std_logic;
	reg_address_8 : IN std_logic;
	reg_address_9 : IN std_logic;
	reg_address_10 : IN std_logic;
	i25 : IN std_logic;
	i69 : IN std_logic;
	i58 : IN std_logic;
	i57 : IN std_logic;
	i56 : IN std_logic;
	i55 : IN std_logic;
	i54 : IN std_logic;
	i53 : IN std_logic;
	i52 : IN std_logic;
	i51 : IN std_logic;
	i50 : IN std_logic;
	i24 : IN std_logic;
	i23 : IN std_logic;
	i22 : IN std_logic;
	i21 : IN std_logic;
	i20 : IN std_logic;
	i19 : IN std_logic;
	i18 : IN std_logic;
	i17 : IN std_logic;
	i16 : IN std_logic;
	i42 : IN std_logic;
	i41 : IN std_logic;
	i40 : IN std_logic;
	i39 : IN std_logic;
	i38 : IN std_logic;
	i37 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q_0 : OUT std_logic;
	q_1 : OUT std_logic;
	q_2 : OUT std_logic;
	q_3 : OUT std_logic;
	q_4 : OUT std_logic;
	q_5 : OUT std_logic;
	q_6 : OUT std_logic;
	q_7 : OUT std_logic;
	q_8 : OUT std_logic;
	q_9 : OUT std_logic;
	q_10 : OUT std_logic;
	q_11 : OUT std_logic;
	q_12 : OUT std_logic;
	q_13 : OUT std_logic;
	q_14 : OUT std_logic;
	q_15 : OUT std_logic);
END COMPONENT;

BEGIN

ww_CLK80 <= CLK80;
ww_CLK40 <= CLK40;
ww_MASTERHWDATA_0 <= MASTERHWDATA_0;
ww_MASTERHWDATA_1 <= MASTERHWDATA_1;
ww_MASTERHWDATA_2 <= MASTERHWDATA_2;
ww_MASTERHWDATA_3 <= MASTERHWDATA_3;
ww_MASTERHWDATA_4 <= MASTERHWDATA_4;
ww_MASTERHWDATA_5 <= MASTERHWDATA_5;
ww_MASTERHWDATA_6 <= MASTERHWDATA_6;
ww_MASTERHWDATA_7 <= MASTERHWDATA_7;
ww_MASTERHWDATA_8 <= MASTERHWDATA_8;
ww_MASTERHWDATA_9 <= MASTERHWDATA_9;
ww_MASTERHWDATA_10 <= MASTERHWDATA_10;
ww_MASTERHWDATA_11 <= MASTERHWDATA_11;
ww_MASTERHWDATA_12 <= MASTERHWDATA_12;
ww_MASTERHWDATA_13 <= MASTERHWDATA_13;
ww_MASTERHWDATA_14 <= MASTERHWDATA_14;
ww_MASTERHWDATA_15 <= MASTERHWDATA_15;
ww_RST <= RST;
ww_state1 <= state1;
ww_reg_address_3 <= reg_address_3;
ww_reg_address_4 <= reg_address_4;
ww_reg_address_5 <= reg_address_5;
ww_reg_address_6 <= reg_address_6;
ww_reg_address_2 <= reg_address_2;
ww_reg_address_12 <= reg_address_12;
ww_reg_address_14 <= reg_address_14;
ww_command_0_local_0 <= command_0_local_0;
ww_command_0_local_1 <= command_0_local_1;
ww_command_0_local_3 <= command_0_local_3;
ww_command_0_local_15 <= command_0_local_15;
ww_i <= i;
ww_atwd0_pong_enable <= atwd0_pong_enable;
ww_enable_disc <= enable_disc;
ww_reg_address_7 <= reg_address_7;
ww_reg_address_8 <= reg_address_8;
ww_reg_address_9 <= reg_address_9;
ww_reg_address_10 <= reg_address_10;
ww_i3335 <= i3335;
ww_dom_id_48 <= dom_id_48;
ww_i33351 <= i33351;
ww_OneSPE <= OneSPE;
ww_ATWD0_D_0 <= ATWD0_D_0;
ww_ATWD0_D_3 <= ATWD0_D_3;
ww_ATWD0_D_2 <= ATWD0_D_2;
ww_ATWD0_D_1 <= ATWD0_D_1;
ww_ATWD0_D_5 <= ATWD0_D_5;
ww_ATWD0_D_4 <= ATWD0_D_4;
ww_ATWD0_D_8 <= ATWD0_D_8;
ww_ATWD0_D_9 <= ATWD0_D_9;
ww_ATWD0_D_7 <= ATWD0_D_7;
ww_ATWD0_D_6 <= ATWD0_D_6;
ww_TriggerComplete_0 <= TriggerComplete_0;
ww_ATWDTrigger_sig1 <= ATWDTrigger_sig1;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
ATWDTrigger_sig <= ww_ATWDTrigger_sig;
OutputEnable <= ww_OutputEnable;
CounterClock <= ww_CounterClock;
ShiftClock <= ww_ShiftClock;
RampSet <= ww_RampSet;
channel_1 <= ww_channel_1;
channel_0 <= ww_channel_0;
ReadWrite <= ww_ReadWrite;
AnalogReset <= ww_AnalogReset;
DigitalReset <= ww_DigitalReset;
DigitalSet <= ww_DigitalSet;
state <= ww_state;
q_0 <= ww_q_0;
done <= ww_done;
q_1 <= ww_q_1;
q_2 <= ww_q_2;
q_3 <= ww_q_3;
q_4 <= ww_q_4;
q_5 <= ww_q_5;
q_6 <= ww_q_6;
q_7 <= ww_q_7;
q_8 <= ww_q_8;
q_9 <= ww_q_9;
q_10 <= ww_q_10;
q_11 <= ww_q_11;
q_12 <= ww_q_12;
q_13 <= ww_q_13;
q_14 <= ww_q_14;
q_15 <= ww_q_15;
TriggerComplete_in_sync <= ww_TriggerComplete_in_sync;
inst_atwd_control : atwd_control
PORT MAP (
	CLK80 => ww_CLK80,
	CLK40 => ww_CLK40,
	RST => ww_RST,
	state1 => ww_state1,
	readout_done => \inst_atwd_readout|readout_done~reg0\,
	TriggerComplete_in_sync => ww_TriggerComplete_in_sync,
	ATWDTrigger_sig => ww_ATWDTrigger_sig1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	OutputEnable => ww_OutputEnable,
	CounterClock => ww_CounterClock,
	RampSet => ww_RampSet,
	channel_1 => ww_channel_1,
	channel_0 => ww_channel_0,
	ReadWrite => ww_ReadWrite,
	AnalogReset => ww_AnalogReset,
	DigitalReset => ww_DigitalReset,
	DigitalSet => ww_DigitalSet,
	state => ww_state,
	busy => \inst_atwd_control|busy~reg0\,
	reset_trig => \inst_atwd_control|reset_trig~reg0\,
	start_readout => \inst_atwd_control|start_readout~reg0\);
inst_atwd_readout : atwd_readout
PORT MAP (
	CLK40 => ww_CLK40,
	RST => ww_RST,
	busy => \inst_atwd_control|busy~reg0\,
	start_readout => \inst_atwd_control|start_readout~reg0\,
	ATWD0_D_0 => ww_ATWD0_D_0,
	ATWD0_D_3 => ww_ATWD0_D_3,
	ATWD0_D_2 => ww_ATWD0_D_2,
	ATWD0_D_1 => ww_ATWD0_D_1,
	ATWD0_D_5 => ww_ATWD0_D_5,
	ATWD0_D_4 => ww_ATWD0_D_4,
	ATWD0_D_8 => ww_ATWD0_D_8,
	ATWD0_D_9 => ww_ATWD0_D_9,
	ATWD0_D_7 => ww_ATWD0_D_7,
	ATWD0_D_6 => ww_ATWD0_D_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	ShiftClock => ww_ShiftClock,
	readout_done => \inst_atwd_readout|readout_done~reg0\,
	ATWD_D_gray_0 => \inst_atwd_readout|ATWD_D_gray[0]~reg0\,
	ATWD_D_gray_3 => \inst_atwd_readout|ATWD_D_gray[3]~reg0\,
	ATWD_D_gray_2 => \inst_atwd_readout|ATWD_D_gray[2]~reg0\,
	ATWD_D_gray_1 => \inst_atwd_readout|ATWD_D_gray[1]~reg0\,
	ATWD_D_gray_5 => \inst_atwd_readout|ATWD_D_gray[5]~reg0\,
	ATWD_D_gray_4 => \inst_atwd_readout|ATWD_D_gray[4]~reg0\,
	ATWD_D_gray_8 => \inst_atwd_readout|ATWD_D_gray[8]~reg0\,
	ATWD_D_gray_9 => \inst_atwd_readout|ATWD_D_gray[9]~reg0\,
	ATWD_D_gray_7 => \inst_atwd_readout|ATWD_D_gray[7]~reg0\,
	ATWD_D_gray_6 => \inst_atwd_readout|ATWD_D_gray[6]~reg0\,
	data_valid => \inst_atwd_readout|data_valid~reg0\,
	addr_cnt_0 => \inst_atwd_readout|addr_cnt[0]\,
	addr_cnt_1 => \inst_atwd_readout|addr_cnt[1]\,
	addr_cnt_2 => \inst_atwd_readout|addr_cnt[2]\,
	addr_cnt_3 => \inst_atwd_readout|addr_cnt[3]\,
	addr_cnt_4 => \inst_atwd_readout|addr_cnt[4]\,
	addr_cnt_5 => \inst_atwd_readout|addr_cnt[5]\,
	addr_cnt_6 => \inst_atwd_readout|addr_cnt[6]\,
	addr_cnt_7 => \inst_atwd_readout|addr_cnt[7]\,
	addr_cnt_8 => \inst_atwd_readout|addr_cnt[8]\);
inst_gray2bin : gray2bin
PORT MAP (
	ATWD_D_gray_3 => \inst_atwd_readout|ATWD_D_gray[3]~reg0\,
	ATWD_D_gray_2 => \inst_atwd_readout|ATWD_D_gray[2]~reg0\,
	ATWD_D_gray_1 => \inst_atwd_readout|ATWD_D_gray[1]~reg0\,
	ATWD_D_gray_5 => \inst_atwd_readout|ATWD_D_gray[5]~reg0\,
	ATWD_D_gray_4 => \inst_atwd_readout|ATWD_D_gray[4]~reg0\,
	ATWD_D_gray_8 => \inst_atwd_readout|ATWD_D_gray[8]~reg0\,
	ATWD_D_gray_9 => \inst_atwd_readout|ATWD_D_gray[9]~reg0\,
	ATWD_D_gray_7 => \inst_atwd_readout|ATWD_D_gray[7]~reg0\,
	ATWD_D_gray_6 => \inst_atwd_readout|ATWD_D_gray[6]~reg0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	i6 => \inst_gray2bin|i6\,
	i8 => \inst_gray2bin|i8\,
	i11 => \inst_gray2bin|i11\,
	i9 => \inst_gray2bin|i9\,
	i5 => \inst_gray2bin|i5\);
inst_atwd_trigger : atwd_trigger
PORT MAP (
	CLK40 => ww_CLK40,
	RST => ww_RST,
	command_0_local_0 => ww_command_0_local_0,
	command_0_local_1 => ww_command_0_local_1,
	command_0_local_3 => ww_command_0_local_3,
	command_0_local_15 => ww_command_0_local_15,
	i => ww_i,
	busy => \inst_atwd_control|busy~reg0\,
	reset_trig => \inst_atwd_control|reset_trig~reg0\,
	atwd0_pong_enable => ww_atwd0_pong_enable,
	enable_disc => ww_enable_disc,
	OneSPE => ww_OneSPE,
	TriggerComplete_0 => ww_TriggerComplete_0,
	ATWDTrigger_sig1 => ww_ATWDTrigger_sig1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	ATWDTrigger_sig => ww_ATWDTrigger_sig,
	done => ww_done,
	TriggerComplete_in_sync => ww_TriggerComplete_in_sync);
inst_com_adc_mem : com_adc_mem
PORT MAP (
	outclock1 => ww_CLK40,
	reg_address_3 => ww_reg_address_3,
	reg_address_4 => ww_reg_address_4,
	reg_address_5 => ww_reg_address_5,
	reg_address_6 => ww_reg_address_6,
	reg_address_2 => ww_reg_address_2,
	reg_address_7 => ww_reg_address_7,
	reg_address_8 => ww_reg_address_8,
	reg_address_9 => ww_reg_address_9,
	reg_address_10 => ww_reg_address_10,
	i25 => \i25~57\,
	i69 => \i69~2\,
	i58 => \i58~55\,
	i57 => \i57~55\,
	i56 => \i56~55\,
	i55 => \i55~55\,
	i54 => \i54~55\,
	i53 => \i53~55\,
	i52 => \i52~55\,
	i51 => \i51~55\,
	i50 => \i50~55\,
	i24 => \i24~9\,
	i23 => \i23~9\,
	i22 => \i22~9\,
	i21 => \i21~9\,
	i20 => \i20~9\,
	i19 => \i19~9\,
	i18 => \i18~9\,
	i17 => \i17~59\,
	i16 => \i16~55\,
	i42 => \i42~0\,
	i41 => \i41~0\,
	i40 => \i40~0\,
	i39 => \i39~0\,
	i38 => \i38~0\,
	i37 => \i37~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	q_0 => ww_q_0,
	q_1 => ww_q_1,
	q_2 => ww_q_2,
	q_3 => ww_q_3,
	q_4 => ww_q_4,
	q_5 => ww_q_5,
	q_6 => ww_q_6,
	q_7 => ww_q_7,
	q_8 => ww_q_8,
	q_9 => ww_q_9,
	q_10 => ww_q_10,
	q_11 => ww_q_11,
	q_12 => ww_q_12,
	q_13 => ww_q_13,
	q_14 => ww_q_14,
	q_15 => ww_q_15);

\i25~57_I\ : apex20ke_lcell 
-- Equation(s):
-- \i25~57\ = i3335 & MASTERHWDATA # !i3335 & (i11 $ ATWD_D_gray_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8BB8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_MASTERHWDATA_0,
	datab => ww_i3335,
	datac => \inst_gray2bin|i11\,
	datad => \inst_atwd_readout|ATWD_D_gray[0]~reg0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i25~57\);

\i69~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \i69~2\ = data_valid # !reg_address_12 & dom_id_48 & reg_address_14

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF40",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_12,
	datab => ww_dom_id_48,
	datac => ww_reg_address_14,
	datad => \inst_atwd_readout|data_valid~reg0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i69~2\);

\i58~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i58~55\ = reg_address_12 & addr_cnt_0 # !reg_address_12 & (i33351 & reg_address_2 # !i33351 & addr_cnt_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "D8CC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_12,
	datab => \inst_atwd_readout|addr_cnt[0]\,
	datac => ww_reg_address_2,
	datad => ww_i33351,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i58~55\);

\i57~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i57~55\ = reg_address_12 & addr_cnt_1 # !reg_address_12 & (i33351 & reg_address_3 # !i33351 & addr_cnt_1)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EF40",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_12,
	datab => ww_reg_address_3,
	datac => ww_i33351,
	datad => \inst_atwd_readout|addr_cnt[1]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i57~55\);

\i56~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i56~55\ = reg_address_12 & addr_cnt_2 # !reg_address_12 & (i33351 & reg_address_4 # !i33351 & addr_cnt_2)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FB40",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_12,
	datab => ww_i33351,
	datac => ww_reg_address_4,
	datad => \inst_atwd_readout|addr_cnt[2]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i56~55\);

\i55~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i55~55\ = reg_address_12 & addr_cnt_3 # !reg_address_12 & (i33351 & reg_address_5 # !i33351 & addr_cnt_3)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B8AA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \inst_atwd_readout|addr_cnt[3]\,
	datab => ww_reg_address_12,
	datac => ww_reg_address_5,
	datad => ww_i33351,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i55~55\);

\i54~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i54~55\ = reg_address_12 & addr_cnt_4 # !reg_address_12 & (i33351 & reg_address_6 # !i33351 & addr_cnt_4)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EF40",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_12,
	datab => ww_reg_address_6,
	datac => ww_i33351,
	datad => \inst_atwd_readout|addr_cnt[4]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i54~55\);

\i53~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i53~55\ = reg_address_12 & addr_cnt_5 # !reg_address_12 & (i33351 & reg_address_7 # !i33351 & addr_cnt_5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FB40",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_12,
	datab => ww_i33351,
	datac => ww_reg_address_7,
	datad => \inst_atwd_readout|addr_cnt[5]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i53~55\);

\i52~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i52~55\ = reg_address_12 & addr_cnt_6 # !reg_address_12 & (i33351 & reg_address_8 # !i33351 & addr_cnt_6)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B8AA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \inst_atwd_readout|addr_cnt[6]\,
	datab => ww_reg_address_12,
	datac => ww_reg_address_8,
	datad => ww_i33351,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i52~55\);

\i51~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i51~55\ = reg_address_12 & addr_cnt_7 # !reg_address_12 & (i33351 & reg_address_9 # !i33351 & addr_cnt_7)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B8AA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \inst_atwd_readout|addr_cnt[7]\,
	datab => ww_reg_address_12,
	datac => ww_reg_address_9,
	datad => ww_i33351,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i51~55\);

\i50~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i50~55\ = i33351 & (reg_address_12 & addr_cnt_8 # !reg_address_12 & reg_address_10) # !i33351 & addr_cnt_8

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AEA2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \inst_atwd_readout|addr_cnt[8]\,
	datab => ww_i33351,
	datac => ww_reg_address_12,
	datad => ww_reg_address_10,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i50~55\);

\i24~9_I\ : apex20ke_lcell 
-- Equation(s):
-- \i24~9\ = i33351 & (reg_address_12 & i11 # !reg_address_12 & MASTERHWDATA) # !i33351 & i11

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FB08",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_MASTERHWDATA_1,
	datab => ww_i33351,
	datac => ww_reg_address_12,
	datad => \inst_gray2bin|i11\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i24~9\);

\i23~9_I\ : apex20ke_lcell 
-- Equation(s):
-- \i23~9\ = i3335 & MASTERHWDATA # !i3335 & (ATWD_D_gray_2 $ i9)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AA3C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_MASTERHWDATA_2,
	datab => \inst_atwd_readout|ATWD_D_gray[2]~reg0\,
	datac => \inst_gray2bin|i9\,
	datad => ww_i3335,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i23~9\);

\i22~9_I\ : apex20ke_lcell 
-- Equation(s):
-- \i22~9\ = reg_address_12 & i9 # !reg_address_12 & (i33351 & MASTERHWDATA # !i33351 & i9)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BA8A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \inst_gray2bin|i9\,
	datab => ww_reg_address_12,
	datac => ww_i33351,
	datad => ww_MASTERHWDATA_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i22~9\);

\i21~9_I\ : apex20ke_lcell 
-- Equation(s):
-- \i21~9\ = reg_address_12 & i8 # !reg_address_12 & (i33351 & MASTERHWDATA # !i33351 & i8)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CACC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_MASTERHWDATA_4,
	datab => \inst_gray2bin|i8\,
	datac => ww_reg_address_12,
	datad => ww_i33351,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i21~9\);

\i20~9_I\ : apex20ke_lcell 
-- Equation(s):
-- \i20~9\ = i3335 & MASTERHWDATA # !i3335 & (i6 $ ATWD_D_gray_5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CC5A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \inst_gray2bin|i6\,
	datab => ww_MASTERHWDATA_5,
	datac => \inst_atwd_readout|ATWD_D_gray[5]~reg0\,
	datad => ww_i3335,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i20~9\);

\i19~9_I\ : apex20ke_lcell 
-- Equation(s):
-- \i19~9\ = i33351 & (reg_address_12 & i6 # !reg_address_12 & MASTERHWDATA) # !i33351 & i6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F2D0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_i33351,
	datab => ww_reg_address_12,
	datac => \inst_gray2bin|i6\,
	datad => ww_MASTERHWDATA_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i19~9\);

\i18~9_I\ : apex20ke_lcell 
-- Equation(s):
-- \i18~9\ = i33351 & (reg_address_12 & i5 # !reg_address_12 & MASTERHWDATA) # !i33351 & i5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CEC4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_i33351,
	datab => \inst_gray2bin|i5\,
	datac => ww_reg_address_12,
	datad => ww_MASTERHWDATA_7,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i18~9\);

\i17~59_I\ : apex20ke_lcell 
-- Equation(s):
-- \i17~59\ = i3335 & MASTERHWDATA # !i3335 & (ATWD_D_gray_8 $ ATWD_D_gray_9)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BE14",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_i3335,
	datab => \inst_atwd_readout|ATWD_D_gray[8]~reg0\,
	datac => \inst_atwd_readout|ATWD_D_gray[9]~reg0\,
	datad => ww_MASTERHWDATA_8,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i17~59\);

\i16~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i16~55\ = reg_address_12 & ATWD_D_gray_9 # !reg_address_12 & (i33351 & MASTERHWDATA # !i33351 & ATWD_D_gray_9)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BA8A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \inst_atwd_readout|ATWD_D_gray[9]~reg0\,
	datab => ww_reg_address_12,
	datac => ww_i33351,
	datad => ww_MASTERHWDATA_9,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i16~55\);

\i42~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \i42~0\ = reg_address_14 & dom_id_48 & !reg_address_12 & MASTERHWDATA

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0800",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_14,
	datab => ww_dom_id_48,
	datac => ww_reg_address_12,
	datad => ww_MASTERHWDATA_10,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i42~0\);

\i41~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \i41~0\ = reg_address_14 & dom_id_48 & !reg_address_12 & MASTERHWDATA

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0800",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_14,
	datab => ww_dom_id_48,
	datac => ww_reg_address_12,
	datad => ww_MASTERHWDATA_11,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i41~0\);

\i40~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \i40~0\ = reg_address_14 & dom_id_48 & !reg_address_12 & MASTERHWDATA

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0800",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_14,
	datab => ww_dom_id_48,
	datac => ww_reg_address_12,
	datad => ww_MASTERHWDATA_12,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i40~0\);

\i39~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \i39~0\ = reg_address_14 & dom_id_48 & !reg_address_12 & MASTERHWDATA

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0800",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_14,
	datab => ww_dom_id_48,
	datac => ww_reg_address_12,
	datad => ww_MASTERHWDATA_13,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i39~0\);

\i38~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \i38~0\ = !reg_address_12 & dom_id_48 & reg_address_14 & MASTERHWDATA

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "4000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_12,
	datab => ww_dom_id_48,
	datac => ww_reg_address_14,
	datad => ww_MASTERHWDATA_14,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i38~0\);

\i37~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \i37~0\ = !reg_address_12 & dom_id_48 & reg_address_14 & MASTERHWDATA

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "4000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_12,
	datab => ww_dom_id_48,
	datac => ww_reg_address_14,
	datad => ww_MASTERHWDATA_15,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i37~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	atwd_control_1 IS
    PORT (
	CLK80 : IN std_logic;
	CLK40 : IN std_logic;
	RST : IN std_logic;
	state : IN std_logic;
	readout_done : IN std_logic;
	TriggerComplete_in_sync : IN std_logic;
	ATWDTrigger_sig : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	OutputEnable : OUT std_logic;
	CounterClock : OUT std_logic;
	RampSet : OUT std_logic;
	channel_1 : OUT std_logic;
	channel_0 : OUT std_logic;
	ReadWrite : OUT std_logic;
	AnalogReset : OUT std_logic;
	DigitalReset : OUT std_logic;
	DigitalSet : OUT std_logic;
	state1 : OUT std_logic;
	busy : OUT std_logic;
	reset_trig : OUT std_logic
	);
END atwd_control_1;

ARCHITECTURE structure OF atwd_control_1 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK80 : std_logic;
SIGNAL ww_CLK40 : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_state : std_logic;
SIGNAL ww_readout_done : std_logic;
SIGNAL ww_TriggerComplete_in_sync : std_logic;
SIGNAL ww_ATWDTrigger_sig : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_OutputEnable : std_logic;
SIGNAL ww_CounterClock : std_logic;
SIGNAL ww_RampSet : std_logic;
SIGNAL ww_channel_1 : std_logic;
SIGNAL ww_channel_0 : std_logic;
SIGNAL ww_ReadWrite : std_logic;
SIGNAL ww_AnalogReset : std_logic;
SIGNAL ww_DigitalReset : std_logic;
SIGNAL ww_DigitalSet : std_logic;
SIGNAL ww_state1 : std_logic;
SIGNAL ww_busy : std_logic;
SIGNAL ww_reset_trig : std_logic;
SIGNAL \state~24\ : std_logic;
SIGNAL \state~22\ : std_logic;
SIGNAL \state~31\ : std_logic;
SIGNAL \state~23\ : std_logic;
SIGNAL \i~494\ : std_logic;
SIGNAL \i~653\ : std_logic;
SIGNAL \digitize_cnt[0]\ : std_logic;
SIGNAL \i~494COUT\ : std_logic;
SIGNAL \i~495\ : std_logic;
SIGNAL \digitize_cnt[1]\ : std_logic;
SIGNAL \i~495COUT\ : std_logic;
SIGNAL \i~496\ : std_logic;
SIGNAL \digitize_cnt[2]\ : std_logic;
SIGNAL \i~496COUT\ : std_logic;
SIGNAL \i~497\ : std_logic;
SIGNAL \digitize_cnt[3]\ : std_logic;
SIGNAL \i~5755\ : std_logic;
SIGNAL \i~497COUT\ : std_logic;
SIGNAL \i~498\ : std_logic;
SIGNAL \digitize_cnt[4]\ : std_logic;
SIGNAL \i~498COUT\ : std_logic;
SIGNAL \i~499\ : std_logic;
SIGNAL \digitize_cnt[5]\ : std_logic;
SIGNAL \i~499COUT\ : std_logic;
SIGNAL \i~500\ : std_logic;
SIGNAL \digitize_cnt[6]\ : std_logic;
SIGNAL \i~500COUT\ : std_logic;
SIGNAL \i~501\ : std_logic;
SIGNAL \digitize_cnt[7]\ : std_logic;
SIGNAL \i~501COUT\ : std_logic;
SIGNAL \i~502\ : std_logic;
SIGNAL \digitize_cnt[8]\ : std_logic;
SIGNAL \i~502COUT\ : std_logic;
SIGNAL \i~503\ : std_logic;
SIGNAL \digitize_cnt[9]\ : std_logic;
SIGNAL \i~503COUT\ : std_logic;
SIGNAL \i~504\ : std_logic;
SIGNAL \digitize_cnt[10]\ : std_logic;
SIGNAL \i~504COUT\ : std_logic;
SIGNAL \i~505\ : std_logic;
SIGNAL \digitize_cnt[11]\ : std_logic;
SIGNAL \i~505COUT\ : std_logic;
SIGNAL \i~506\ : std_logic;
SIGNAL \digitize_cnt[12]\ : std_logic;
SIGNAL \i~506COUT\ : std_logic;
SIGNAL \i~507\ : std_logic;
SIGNAL \digitize_cnt[13]\ : std_logic;
SIGNAL \i~507COUT\ : std_logic;
SIGNAL \i~508\ : std_logic;
SIGNAL \digitize_cnt[14]\ : std_logic;
SIGNAL \i~508COUT\ : std_logic;
SIGNAL \i~509\ : std_logic;
SIGNAL \digitize_cnt[15]\ : std_logic;
SIGNAL \i~5752\ : std_logic;
SIGNAL \i~5754\ : std_logic;
SIGNAL \i~5753\ : std_logic;
SIGNAL \i~5756\ : std_logic;
SIGNAL \i~466\ : std_logic;
SIGNAL \state~27\ : std_logic;
SIGNAL \state~28\ : std_logic;
SIGNAL \i~5757\ : std_logic;
SIGNAL \state~29\ : std_logic;
SIGNAL \state~25\ : std_logic;
SIGNAL \i~5743\ : std_logic;
SIGNAL \i~5771\ : std_logic;
SIGNAL \i~53\ : std_logic;
SIGNAL \i~526\ : std_logic;
SIGNAL \settle_cnt[0]\ : std_logic;
SIGNAL \i~526COUT\ : std_logic;
SIGNAL \i~527\ : std_logic;
SIGNAL \settle_cnt[1]\ : std_logic;
SIGNAL \i~527COUT\ : std_logic;
SIGNAL \i~528\ : std_logic;
SIGNAL \settle_cnt[2]\ : std_logic;
SIGNAL \i~528COUT\ : std_logic;
SIGNAL \i~529\ : std_logic;
SIGNAL \settle_cnt[3]\ : std_logic;
SIGNAL \i~5767\ : std_logic;
SIGNAL \i~529COUT\ : std_logic;
SIGNAL \i~530\ : std_logic;
SIGNAL \settle_cnt[4]\ : std_logic;
SIGNAL \i~530COUT\ : std_logic;
SIGNAL \i~531\ : std_logic;
SIGNAL \settle_cnt[5]\ : std_logic;
SIGNAL \i~531COUT\ : std_logic;
SIGNAL \i~532\ : std_logic;
SIGNAL \settle_cnt[6]\ : std_logic;
SIGNAL \i~532COUT\ : std_logic;
SIGNAL \i~533\ : std_logic;
SIGNAL \settle_cnt[7]\ : std_logic;
SIGNAL \i~533COUT\ : std_logic;
SIGNAL \i~534\ : std_logic;
SIGNAL \settle_cnt[8]\ : std_logic;
SIGNAL \i~534COUT\ : std_logic;
SIGNAL \i~535\ : std_logic;
SIGNAL \settle_cnt[9]\ : std_logic;
SIGNAL \i~535COUT\ : std_logic;
SIGNAL \i~536\ : std_logic;
SIGNAL \settle_cnt[10]\ : std_logic;
SIGNAL \i~536COUT\ : std_logic;
SIGNAL \i~537\ : std_logic;
SIGNAL \settle_cnt[11]\ : std_logic;
SIGNAL \i~5765\ : std_logic;
SIGNAL \i~5766\ : std_logic;
SIGNAL \i~537COUT\ : std_logic;
SIGNAL \i~538\ : std_logic;
SIGNAL \settle_cnt[12]\ : std_logic;
SIGNAL \i~538COUT\ : std_logic;
SIGNAL \i~539\ : std_logic;
SIGNAL \settle_cnt[13]\ : std_logic;
SIGNAL \i~539COUT\ : std_logic;
SIGNAL \i~540\ : std_logic;
SIGNAL \settle_cnt[14]\ : std_logic;
SIGNAL \i~540COUT\ : std_logic;
SIGNAL \i~541\ : std_logic;
SIGNAL \settle_cnt[15]\ : std_logic;
SIGNAL \i~5764\ : std_logic;
SIGNAL \i~5768\ : std_logic;
SIGNAL \i~541COUT\ : std_logic;
SIGNAL \i~542\ : std_logic;
SIGNAL \settle_cnt[16]\ : std_logic;
SIGNAL \i~542COUT\ : std_logic;
SIGNAL \i~543\ : std_logic;
SIGNAL \settle_cnt[17]\ : std_logic;
SIGNAL \i~543COUT\ : std_logic;
SIGNAL \i~544\ : std_logic;
SIGNAL \settle_cnt[18]\ : std_logic;
SIGNAL \i~544COUT\ : std_logic;
SIGNAL \i~545\ : std_logic;
SIGNAL \settle_cnt[19]\ : std_logic;
SIGNAL \i~545COUT\ : std_logic;
SIGNAL \i~546\ : std_logic;
SIGNAL \settle_cnt[20]\ : std_logic;
SIGNAL \i~546COUT\ : std_logic;
SIGNAL \i~547\ : std_logic;
SIGNAL \settle_cnt[21]\ : std_logic;
SIGNAL \i~547COUT\ : std_logic;
SIGNAL \i~548\ : std_logic;
SIGNAL \settle_cnt[22]\ : std_logic;
SIGNAL \i~548COUT\ : std_logic;
SIGNAL \i~549\ : std_logic;
SIGNAL \settle_cnt[23]\ : std_logic;
SIGNAL \i~5761\ : std_logic;
SIGNAL \i~549COUT\ : std_logic;
SIGNAL \i~550\ : std_logic;
SIGNAL \settle_cnt[24]\ : std_logic;
SIGNAL \i~550COUT\ : std_logic;
SIGNAL \i~551\ : std_logic;
SIGNAL \settle_cnt[25]\ : std_logic;
SIGNAL \i~551COUT\ : std_logic;
SIGNAL \i~552\ : std_logic;
SIGNAL \settle_cnt[26]\ : std_logic;
SIGNAL \i~552COUT\ : std_logic;
SIGNAL \i~553\ : std_logic;
SIGNAL \settle_cnt[27]\ : std_logic;
SIGNAL \i~5760\ : std_logic;
SIGNAL \i~5762\ : std_logic;
SIGNAL \i~553COUT\ : std_logic;
SIGNAL \i~554\ : std_logic;
SIGNAL \settle_cnt[28]\ : std_logic;
SIGNAL \i~554COUT\ : std_logic;
SIGNAL \i~555\ : std_logic;
SIGNAL \settle_cnt[29]\ : std_logic;
SIGNAL \i~555COUT\ : std_logic;
SIGNAL \i~556\ : std_logic;
SIGNAL \settle_cnt[30]\ : std_logic;
SIGNAL \i~556COUT\ : std_logic;
SIGNAL \i~557\ : std_logic;
SIGNAL \settle_cnt[31]\ : std_logic;
SIGNAL \i~5759\ : std_logic;
SIGNAL \i~5763\ : std_logic;
SIGNAL \state~30\ : std_logic;
SIGNAL \i~5733\ : std_logic;
SIGNAL \i~5772\ : std_logic;
SIGNAL \i~509COUT\ : std_logic;
SIGNAL \i~510\ : std_logic;
SIGNAL \digitize_cnt[16]\ : std_logic;
SIGNAL \i~510COUT\ : std_logic;
SIGNAL \i~511\ : std_logic;
SIGNAL \digitize_cnt[17]\ : std_logic;
SIGNAL \i~511COUT\ : std_logic;
SIGNAL \i~512\ : std_logic;
SIGNAL \digitize_cnt[18]\ : std_logic;
SIGNAL \i~512COUT\ : std_logic;
SIGNAL \i~513\ : std_logic;
SIGNAL \digitize_cnt[19]\ : std_logic;
SIGNAL \i~5750\ : std_logic;
SIGNAL \i~513COUT\ : std_logic;
SIGNAL \i~514\ : std_logic;
SIGNAL \digitize_cnt[20]\ : std_logic;
SIGNAL \i~514COUT\ : std_logic;
SIGNAL \i~515\ : std_logic;
SIGNAL \digitize_cnt[21]\ : std_logic;
SIGNAL \i~515COUT\ : std_logic;
SIGNAL \i~516\ : std_logic;
SIGNAL \digitize_cnt[22]\ : std_logic;
SIGNAL \i~516COUT\ : std_logic;
SIGNAL \i~517\ : std_logic;
SIGNAL \digitize_cnt[23]\ : std_logic;
SIGNAL \i~5749\ : std_logic;
SIGNAL \i~517COUT\ : std_logic;
SIGNAL \i~518\ : std_logic;
SIGNAL \digitize_cnt[24]\ : std_logic;
SIGNAL \i~518COUT\ : std_logic;
SIGNAL \i~519\ : std_logic;
SIGNAL \digitize_cnt[25]\ : std_logic;
SIGNAL \i~519COUT\ : std_logic;
SIGNAL \i~520\ : std_logic;
SIGNAL \digitize_cnt[26]\ : std_logic;
SIGNAL \i~520COUT\ : std_logic;
SIGNAL \i~521\ : std_logic;
SIGNAL \digitize_cnt[27]\ : std_logic;
SIGNAL \i~5748\ : std_logic;
SIGNAL \i~521COUT\ : std_logic;
SIGNAL \i~522\ : std_logic;
SIGNAL \digitize_cnt[28]\ : std_logic;
SIGNAL \i~522COUT\ : std_logic;
SIGNAL \i~523\ : std_logic;
SIGNAL \digitize_cnt[29]\ : std_logic;
SIGNAL \i~523COUT\ : std_logic;
SIGNAL \i~524\ : std_logic;
SIGNAL \digitize_cnt[30]\ : std_logic;
SIGNAL \i~524COUT\ : std_logic;
SIGNAL \i~525\ : std_logic;
SIGNAL \digitize_cnt[31]\ : std_logic;
SIGNAL \i~5747\ : std_logic;
SIGNAL \i~5751\ : std_logic;
SIGNAL \i~2\ : std_logic;
SIGNAL \i~0\ : std_logic;
SIGNAL \state~21\ : std_logic;
SIGNAL \i~5734\ : std_logic;
SIGNAL \i~5732\ : std_logic;
SIGNAL \i~5735\ : std_logic;
SIGNAL \i~5769\ : std_logic;
SIGNAL counterclk_low : std_logic;
SIGNAL counterclk_high : std_logic;
SIGNAL cclk : std_logic;
SIGNAL \i~5736\ : std_logic;
SIGNAL \i~30\ : std_logic;
SIGNAL \i~5737\ : std_logic;
SIGNAL \i~214\ : std_logic;
SIGNAL \i~5731\ : std_logic;
SIGNAL \i~5727\ : std_logic;
SIGNAL \i~5740\ : std_logic;
SIGNAL \i~5739\ : std_logic;
SIGNAL \i~5742\ : std_logic;
SIGNAL \i~5745\ : std_logic;
SIGNAL \i~5770\ : std_logic;
SIGNAL \i~42\ : std_logic;
SIGNAL ALT_NOT_ww_RST : std_logic;

BEGIN

ww_CLK80 <= CLK80;
ww_CLK40 <= CLK40;
ww_RST <= RST;
ww_state <= state;
ww_readout_done <= readout_done;
ww_TriggerComplete_in_sync <= TriggerComplete_in_sync;
ww_ATWDTrigger_sig <= ATWDTrigger_sig;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
OutputEnable <= ww_OutputEnable;
CounterClock <= ww_CounterClock;
RampSet <= ww_RampSet;
channel_1 <= ww_channel_1;
channel_0 <= ww_channel_0;
ReadWrite <= ww_ReadWrite;
AnalogReset <= ww_AnalogReset;
DigitalReset <= ww_DigitalReset;
DigitalSet <= ww_DigitalSet;
state1 <= ww_state1;
busy <= ww_busy;
reset_trig <= ww_reset_trig;
ALT_NOT_ww_RST <= NOT ww_RST;

\OutputEnable~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- OutputEnable = DFFE(\state~27\ # OutputEnable & (!\i~5732\ # !\i~5734\), GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F2FA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_OutputEnable,
	datab => \i~5734\,
	datac => \state~27\,
	datad => \i~5732\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_OutputEnable);

\CounterClock~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- CounterClock = DFFE(counterclk_high # !cclk & !counterclk_low, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F5",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => cclk,
	datac => counterclk_high,
	datad => counterclk_low,
	clk => ww_CLK80,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_CounterClock);

\RampSet~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- RampSet = DFFE(RampSet & \i~30\ # !state1 # !\i~5736\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BF3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_RampSet,
	datab => \i~5736\,
	datac => ww_state1,
	datad => \i~30\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_RampSet);

\channel[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- channel_1 = DFFE(\i~214\ # channel_1 & (\state~29\ # !\i~5737\), GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF8A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_channel_1,
	datab => \state~29\,
	datac => \i~5737\,
	datad => \i~214\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_channel_1);

\channel[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- channel_0 = DFFE(channel_0 & (\state~29\ # !\i~5737\) # !channel_0 & \state~24\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F5CC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5737\,
	datab => \state~24\,
	datac => \state~29\,
	datad => ww_channel_0,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_channel_0);

\ReadWrite~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- ReadWrite = DFFE(\state~30\ # ReadWrite & (\state~28\ # \i~5727\), GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FAF8",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_ReadWrite,
	datab => \state~28\,
	datac => \state~30\,
	datad => \i~5727\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_ReadWrite);

\AnalogReset~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- AnalogReset = DFFE(\i~5739\ # AnalogReset & (\i~5740\ # !\i~5733\), GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF8C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5740\,
	datab => ww_AnalogReset,
	datac => \i~5733\,
	datad => \i~5739\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_AnalogReset);

\DigitalReset~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- DigitalReset = DFFE(DigitalReset & (\i~5742\ # !\i~5736\) # !\i~5743\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CF4F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5736\,
	datab => ww_DigitalReset,
	datac => \i~5743\,
	datad => \i~5742\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_DigitalReset);

\DigitalSet~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- DigitalSet = DFFE(DigitalSet & (\state~21\ # !\i~5745\) # !\i~5736\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B3BB",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_DigitalSet,
	datab => \i~5736\,
	datac => \state~21\,
	datad => \i~5745\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_DigitalSet);

\state~20_I\ : apex20ke_lcell 
-- Equation(s):
-- state1 = DFFE(VCC, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_state1);

\busy~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- busy = DFFE(\state~31\ # busy & \i~42\ # !state1, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EFAF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~31\,
	datab => ww_busy,
	datac => ww_state1,
	datad => \i~42\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_busy);

\reset_trig~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- reset_trig = DFFE(\state~29\ # reset_trig & (\state~24\ # !\i~5737\), GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFD0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5737\,
	datab => \state~24\,
	datac => ww_reset_trig,
	datad => \state~29\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reset_trig);

\state~24_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~24\ = DFFE(\state~28\ & (!channel_0 # !channel_1), GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5F00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_channel_1,
	datac => ww_channel_0,
	datad => \state~28\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~24\);

\state~22_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~22\ = DFFE(state # \state~25\ # !\inst_atwd_trigger|ATWDTrigger_sig~1\ & \state~22\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFF4",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_ATWDTrigger_sig,
	datab => \state~22\,
	datac => ww_state,
	datad => \state~25\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~22\);

\state~31_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~31\ = DFFE(\state~22\ & (\inst_atwd_trigger|ATWDTrigger_sig~1\ # \state~31\ & !TriggerComplete_in_sync) # !\state~22\ & \state~31\ & !TriggerComplete_in_sync, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "88F8",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datab => ww_ATWDTrigger_sig,
	datac => \state~31\,
	datad => ww_TriggerComplete_in_sync,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~31\);

\state~23_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~23\ = DFFE(\state~24\ # \state~31\ & TriggerComplete_in_sync, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FAAA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~24\,
	datac => \state~31\,
	datad => ww_TriggerComplete_in_sync,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~23\);

\i~494_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~494\ = !\digitize_cnt[0]\
-- \i~494COUT\ = CARRY(\digitize_cnt[0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "33CC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \digitize_cnt[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~494\,
	cout => \i~494COUT\);

\i~653_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~653\ = \i~494\ & \state~21\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CC00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \i~494\,
	datad => \state~21\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~653\);

\digitize_cnt[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[0]\ = DFFE(\state~23\ # \i~653\ # \digitize_cnt[0]\ & \i~5772\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEFA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~23\,
	datab => \digitize_cnt[0]\,
	datac => \i~653\,
	datad => \i~5772\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[0]\);

\i~495_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~495\ = \digitize_cnt[1]\ $ \i~494COUT\
-- \i~495COUT\ = CARRY(!\i~494COUT\ # !\digitize_cnt[1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \digitize_cnt[1]\,
	cin => \i~494COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~495\,
	cout => \i~495COUT\);

\digitize_cnt[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[1]\ = DFFE(\digitize_cnt[1]\ & (\i~5772\ # \state~21\ & \i~495\) # !\digitize_cnt[1]\ & \state~21\ & \i~495\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[1]\,
	datab => \state~21\,
	datac => \i~495\,
	datad => \i~5772\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[1]\);

\i~496_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~496\ = \digitize_cnt[2]\ $ !\i~495COUT\
-- \i~496COUT\ = CARRY(\digitize_cnt[2]\ & !\i~495COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[2]\,
	cin => \i~495COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~496\,
	cout => \i~496COUT\);

\digitize_cnt[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[2]\ = DFFE(\digitize_cnt[2]\ & (\i~5772\ # \i~496\ & \state~21\) # !\digitize_cnt[2]\ & \i~496\ & \state~21\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[2]\,
	datab => \i~496\,
	datac => \state~21\,
	datad => \i~5772\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[2]\);

\i~497_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~497\ = \digitize_cnt[3]\ $ \i~496COUT\
-- \i~497COUT\ = CARRY(!\i~496COUT\ # !\digitize_cnt[3]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[3]\,
	cin => \i~496COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~497\,
	cout => \i~497COUT\);

\digitize_cnt[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[3]\ = DFFE(\state~21\ & (\i~497\ # \digitize_cnt[3]\ & \i~5772\) # !\state~21\ & \digitize_cnt[3]\ & \i~5772\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~21\,
	datab => \digitize_cnt[3]\,
	datac => \i~5772\,
	datad => \i~497\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[3]\);

\i~5755_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5755\ = \digitize_cnt[2]\ # \digitize_cnt[1]\ # \digitize_cnt[3]\ # \digitize_cnt[0]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[2]\,
	datab => \digitize_cnt[1]\,
	datac => \digitize_cnt[3]\,
	datad => \digitize_cnt[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5755\);

\i~498_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~498\ = \digitize_cnt[4]\ $ !\i~497COUT\
-- \i~498COUT\ = CARRY(\digitize_cnt[4]\ & !\i~497COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \digitize_cnt[4]\,
	cin => \i~497COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~498\,
	cout => \i~498COUT\);

\digitize_cnt[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[4]\ = DFFE(\i~5772\ & (\digitize_cnt[4]\ # \state~21\ & \i~498\) # !\i~5772\ & \state~21\ & \i~498\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5772\,
	datab => \state~21\,
	datac => \digitize_cnt[4]\,
	datad => \i~498\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[4]\);

\i~499_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~499\ = \digitize_cnt[5]\ $ \i~498COUT\
-- \i~499COUT\ = CARRY(!\i~498COUT\ # !\digitize_cnt[5]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \digitize_cnt[5]\,
	cin => \i~498COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~499\,
	cout => \i~499COUT\);

\digitize_cnt[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[5]\ = DFFE(\i~5772\ & (\digitize_cnt[5]\ # \state~21\ & \i~499\) # !\i~5772\ & \state~21\ & \i~499\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5772\,
	datab => \state~21\,
	datac => \digitize_cnt[5]\,
	datad => \i~499\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[5]\);

\i~500_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~500\ = \digitize_cnt[6]\ $ !\i~499COUT\
-- \i~500COUT\ = CARRY(\digitize_cnt[6]\ & !\i~499COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \digitize_cnt[6]\,
	cin => \i~499COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~500\,
	cout => \i~500COUT\);

\digitize_cnt[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[6]\ = DFFE(\digitize_cnt[6]\ & (\i~5772\ # \state~21\ & \i~500\) # !\digitize_cnt[6]\ & \state~21\ & \i~500\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[6]\,
	datab => \state~21\,
	datac => \i~500\,
	datad => \i~5772\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[6]\);

\i~501_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~501\ = \digitize_cnt[7]\ $ \i~500COUT\
-- \i~501COUT\ = CARRY(!\i~500COUT\ # !\digitize_cnt[7]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \digitize_cnt[7]\,
	cin => \i~500COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~501\,
	cout => \i~501COUT\);

\digitize_cnt[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[7]\ = DFFE(\i~501\ & (\state~21\ # \digitize_cnt[7]\ & \i~5772\) # !\i~501\ & \digitize_cnt[7]\ & \i~5772\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~501\,
	datab => \state~21\,
	datac => \digitize_cnt[7]\,
	datad => \i~5772\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[7]\);

\i~502_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~502\ = \digitize_cnt[8]\ $ !\i~501COUT\
-- \i~502COUT\ = CARRY(\digitize_cnt[8]\ & !\i~501COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[8]\,
	cin => \i~501COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~502\,
	cout => \i~502COUT\);

\digitize_cnt[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[8]\ = DFFE(\state~21\ & (\i~502\ # \digitize_cnt[8]\ & \i~5772\) # !\state~21\ & \digitize_cnt[8]\ & \i~5772\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~21\,
	datab => \digitize_cnt[8]\,
	datac => \i~5772\,
	datad => \i~502\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[8]\);

\i~503_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~503\ = \digitize_cnt[9]\ $ \i~502COUT\
-- \i~503COUT\ = CARRY(!\i~502COUT\ # !\digitize_cnt[9]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[9]\,
	cin => \i~502COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~503\,
	cout => \i~503COUT\);

\digitize_cnt[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[9]\ = DFFE(\state~21\ & (\i~503\ # \digitize_cnt[9]\ & \i~5772\) # !\state~21\ & \digitize_cnt[9]\ & \i~5772\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~21\,
	datab => \digitize_cnt[9]\,
	datac => \i~5772\,
	datad => \i~503\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[9]\);

\i~504_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~504\ = \digitize_cnt[10]\ $ !\i~503COUT\
-- \i~504COUT\ = CARRY(\digitize_cnt[10]\ & !\i~503COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[10]\,
	cin => \i~503COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~504\,
	cout => \i~504COUT\);

\digitize_cnt[10]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[10]\ = DFFE(\i~5772\ & (\digitize_cnt[10]\ # \state~21\ & \i~504\) # !\i~5772\ & \state~21\ & \i~504\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5772\,
	datab => \state~21\,
	datac => \digitize_cnt[10]\,
	datad => \i~504\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[10]\);

\i~505_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~505\ = \digitize_cnt[11]\ $ \i~504COUT\
-- \i~505COUT\ = CARRY(!\i~504COUT\ # !\digitize_cnt[11]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[11]\,
	cin => \i~504COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~505\,
	cout => \i~505COUT\);

\digitize_cnt[11]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[11]\ = DFFE(\i~5772\ & (\digitize_cnt[11]\ # \state~21\ & \i~505\) # !\i~5772\ & \state~21\ & \i~505\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5772\,
	datab => \state~21\,
	datac => \digitize_cnt[11]\,
	datad => \i~505\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[11]\);

\i~506_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~506\ = \digitize_cnt[12]\ $ !\i~505COUT\
-- \i~506COUT\ = CARRY(\digitize_cnt[12]\ & !\i~505COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[12]\,
	cin => \i~505COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~506\,
	cout => \i~506COUT\);

\digitize_cnt[12]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[12]\ = DFFE(\i~5772\ & (\digitize_cnt[12]\ # \state~21\ & \i~506\) # !\i~5772\ & \state~21\ & \i~506\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5772\,
	datab => \state~21\,
	datac => \digitize_cnt[12]\,
	datad => \i~506\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[12]\);

\i~507_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~507\ = \digitize_cnt[13]\ $ \i~506COUT\
-- \i~507COUT\ = CARRY(!\i~506COUT\ # !\digitize_cnt[13]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[13]\,
	cin => \i~506COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~507\,
	cout => \i~507COUT\);

\digitize_cnt[13]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[13]\ = DFFE(\state~21\ & (\i~507\ # \i~5772\ & \digitize_cnt[13]\) # !\state~21\ & \i~5772\ & \digitize_cnt[13]\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~21\,
	datab => \i~507\,
	datac => \i~5772\,
	datad => \digitize_cnt[13]\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[13]\);

\i~508_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~508\ = \digitize_cnt[14]\ $ !\i~507COUT\
-- \i~508COUT\ = CARRY(\digitize_cnt[14]\ & !\i~507COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[14]\,
	cin => \i~507COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~508\,
	cout => \i~508COUT\);

\digitize_cnt[14]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[14]\ = DFFE(\i~5772\ & (\digitize_cnt[14]\ # \state~21\ & \i~508\) # !\i~5772\ & \state~21\ & \i~508\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5772\,
	datab => \state~21\,
	datac => \i~508\,
	datad => \digitize_cnt[14]\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[14]\);

\i~509_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~509\ = \digitize_cnt[15]\ $ \i~508COUT\
-- \i~509COUT\ = CARRY(!\i~508COUT\ # !\digitize_cnt[15]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[15]\,
	cin => \i~508COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~509\,
	cout => \i~509COUT\);

\digitize_cnt[15]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[15]\ = DFFE(\i~5772\ & (\digitize_cnt[15]\ # \state~21\ & \i~509\) # !\i~5772\ & \state~21\ & \i~509\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5772\,
	datab => \state~21\,
	datac => \i~509\,
	datad => \digitize_cnt[15]\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[15]\);

\i~5752_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5752\ = \digitize_cnt[15]\ # \digitize_cnt[14]\ # \digitize_cnt[12]\ # \digitize_cnt[13]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[15]\,
	datab => \digitize_cnt[14]\,
	datac => \digitize_cnt[12]\,
	datad => \digitize_cnt[13]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5752\);

\i~5754_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5754\ = \digitize_cnt[4]\ # \digitize_cnt[7]\ # \digitize_cnt[5]\ # \digitize_cnt[6]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[4]\,
	datab => \digitize_cnt[7]\,
	datac => \digitize_cnt[5]\,
	datad => \digitize_cnt[6]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5754\);

\i~5753_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5753\ = \digitize_cnt[11]\ # \digitize_cnt[10]\ # \digitize_cnt[8]\ # !\digitize_cnt[9]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFB",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[11]\,
	datab => \digitize_cnt[9]\,
	datac => \digitize_cnt[10]\,
	datad => \digitize_cnt[8]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5753\);

\i~5756_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5756\ = \i~5755\ # \i~5752\ # \i~5754\ # \i~5753\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5755\,
	datab => \i~5752\,
	datac => \i~5754\,
	datad => \i~5753\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5756\);

\i~466_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~466\ = \state~27\ & !readout_done

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00CC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \state~27\,
	datad => ww_readout_done,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~466\);

\state~27_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~27\ = DFFE(\i~466\ # !\i~5756\ & \state~21\ & !\i~5751\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F4",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5756\,
	datab => \state~21\,
	datac => \i~466\,
	datad => \i~5751\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~27\);

\state~28_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~28\ = DFFE(\state~27\ & readout_done, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \state~27\,
	datad => ww_readout_done,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~28\);

\i~5757_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5757\ = channel_1 & channel_0

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "A0A0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_channel_1,
	datac => ww_channel_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5757\);

\state~29_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~29\ = DFFE(TriggerComplete_in_sync & (\state~29\ # \state~28\ & \i~5757\) # !TriggerComplete_in_sync & \state~28\ & \i~5757\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_TriggerComplete_in_sync,
	datab => \state~28\,
	datac => \state~29\,
	datad => \i~5757\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~29\);

\state~25_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~25\ = DFFE(\state~29\ & !TriggerComplete_in_sync, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \state~29\,
	datad => ww_TriggerComplete_in_sync,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~25\);

\i~5743_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5743\ = !\state~24\ & !\state~29\ & !\state~22\ & state1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0100",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~24\,
	datab => \state~29\,
	datac => \state~22\,
	datad => ww_state1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5743\);

\i~5771_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5771\ = !\state~25\ & !state & !\state~27\ & !\state~28\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~25\,
	datab => ww_state,
	datac => \state~27\,
	datad => \state~28\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5771\);

\i~53_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~53\ = \state~31\ # \state~21\ # !\i~5771\ # !\i~5743\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFBF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~31\,
	datab => \i~5743\,
	datac => \i~5771\,
	datad => \state~21\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~53\);

\i~526_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~526\ = !\settle_cnt[0]\
-- \i~526COUT\ = CARRY(\settle_cnt[0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "55AA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~526\,
	cout => \i~526COUT\);

\settle_cnt[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[0]\ = DFFE(\settle_cnt[0]\ & (\i~53\ # \i~526\ & \state~30\) # !\settle_cnt[0]\ & \i~526\ & \state~30\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[0]\,
	datab => \i~526\,
	datac => \state~30\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[0]\);

\i~527_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~527\ = \settle_cnt[1]\ $ \i~526COUT\
-- \i~527COUT\ = CARRY(!\i~526COUT\ # !\settle_cnt[1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \settle_cnt[1]\,
	cin => \i~526COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~527\,
	cout => \i~527COUT\);

\settle_cnt[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[1]\ = DFFE(\i~527\ & (\state~30\ # \settle_cnt[1]\ & \i~53\) # !\i~527\ & \settle_cnt[1]\ & \i~53\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~527\,
	datab => \settle_cnt[1]\,
	datac => \state~30\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[1]\);

\i~528_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~528\ = \settle_cnt[2]\ $ !\i~527COUT\
-- \i~528COUT\ = CARRY(\settle_cnt[2]\ & !\i~527COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[2]\,
	cin => \i~527COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~528\,
	cout => \i~528COUT\);

\settle_cnt[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[2]\ = DFFE(\settle_cnt[2]\ & (\i~53\ # \i~528\ & \state~30\) # !\settle_cnt[2]\ & \i~528\ & \state~30\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[2]\,
	datab => \i~528\,
	datac => \state~30\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[2]\);

\i~529_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~529\ = \settle_cnt[3]\ $ \i~528COUT\
-- \i~529COUT\ = CARRY(!\i~528COUT\ # !\settle_cnt[3]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[3]\,
	cin => \i~528COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~529\,
	cout => \i~529COUT\);

\settle_cnt[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[3]\ = DFFE(\i~53\ & (\settle_cnt[3]\ # \state~30\ & \i~529\) # !\i~53\ & \state~30\ & \i~529\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~53\,
	datab => \state~30\,
	datac => \settle_cnt[3]\,
	datad => \i~529\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[3]\);

\i~5767_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5767\ = \settle_cnt[3]\ # \settle_cnt[2]\ # \settle_cnt[1]\ # \settle_cnt[0]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[3]\,
	datab => \settle_cnt[2]\,
	datac => \settle_cnt[1]\,
	datad => \settle_cnt[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5767\);

\i~530_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~530\ = \settle_cnt[4]\ $ !\i~529COUT\
-- \i~530COUT\ = CARRY(\settle_cnt[4]\ & !\i~529COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \settle_cnt[4]\,
	cin => \i~529COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~530\,
	cout => \i~530COUT\);

\settle_cnt[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[4]\ = DFFE(\settle_cnt[4]\ & (\i~53\ # \state~30\ & \i~530\) # !\settle_cnt[4]\ & \state~30\ & \i~530\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[4]\,
	datab => \state~30\,
	datac => \i~530\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[4]\);

\i~531_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~531\ = \settle_cnt[5]\ $ \i~530COUT\
-- \i~531COUT\ = CARRY(!\i~530COUT\ # !\settle_cnt[5]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \settle_cnt[5]\,
	cin => \i~530COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~531\,
	cout => \i~531COUT\);

\settle_cnt[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[5]\ = DFFE(\settle_cnt[5]\ & (\i~53\ # \state~30\ & \i~531\) # !\settle_cnt[5]\ & \state~30\ & \i~531\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[5]\,
	datab => \state~30\,
	datac => \i~531\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[5]\);

\i~532_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~532\ = \settle_cnt[6]\ $ !\i~531COUT\
-- \i~532COUT\ = CARRY(\settle_cnt[6]\ & !\i~531COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[6]\,
	cin => \i~531COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~532\,
	cout => \i~532COUT\);

\settle_cnt[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[6]\ = DFFE(\i~53\ & (\settle_cnt[6]\ # \state~30\ & \i~532\) # !\i~53\ & \state~30\ & \i~532\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~53\,
	datab => \settle_cnt[6]\,
	datac => \state~30\,
	datad => \i~532\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[6]\);

\i~533_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~533\ = \settle_cnt[7]\ $ \i~532COUT\
-- \i~533COUT\ = CARRY(!\i~532COUT\ # !\settle_cnt[7]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[7]\,
	cin => \i~532COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~533\,
	cout => \i~533COUT\);

\settle_cnt[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[7]\ = DFFE(\i~53\ & (\settle_cnt[7]\ # \state~30\ & \i~533\) # !\i~53\ & \state~30\ & \i~533\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~53\,
	datab => \settle_cnt[7]\,
	datac => \state~30\,
	datad => \i~533\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[7]\);

\i~534_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~534\ = \settle_cnt[8]\ $ !\i~533COUT\
-- \i~534COUT\ = CARRY(\settle_cnt[8]\ & !\i~533COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[8]\,
	cin => \i~533COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~534\,
	cout => \i~534COUT\);

\settle_cnt[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[8]\ = DFFE(\i~53\ & (\settle_cnt[8]\ # \state~30\ & \i~534\) # !\i~53\ & \state~30\ & \i~534\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~53\,
	datab => \settle_cnt[8]\,
	datac => \state~30\,
	datad => \i~534\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[8]\);

\i~535_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~535\ = \settle_cnt[9]\ $ \i~534COUT\
-- \i~535COUT\ = CARRY(!\i~534COUT\ # !\settle_cnt[9]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[9]\,
	cin => \i~534COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~535\,
	cout => \i~535COUT\);

\settle_cnt[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[9]\ = DFFE(\i~53\ & (\settle_cnt[9]\ # \state~30\ & \i~535\) # !\i~53\ & \state~30\ & \i~535\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~53\,
	datab => \settle_cnt[9]\,
	datac => \state~30\,
	datad => \i~535\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[9]\);

\i~536_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~536\ = \settle_cnt[10]\ $ !\i~535COUT\
-- \i~536COUT\ = CARRY(\settle_cnt[10]\ & !\i~535COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[10]\,
	cin => \i~535COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~536\,
	cout => \i~536COUT\);

\settle_cnt[10]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[10]\ = DFFE(\state~30\ & (\i~536\ # \settle_cnt[10]\ & \i~53\) # !\state~30\ & \settle_cnt[10]\ & \i~53\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~30\,
	datab => \i~536\,
	datac => \settle_cnt[10]\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[10]\);

\i~537_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~537\ = \settle_cnt[11]\ $ \i~536COUT\
-- \i~537COUT\ = CARRY(!\i~536COUT\ # !\settle_cnt[11]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[11]\,
	cin => \i~536COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~537\,
	cout => \i~537COUT\);

\settle_cnt[11]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[11]\ = DFFE(\i~53\ & (\settle_cnt[11]\ # \state~30\ & \i~537\) # !\i~53\ & \state~30\ & \i~537\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~53\,
	datab => \settle_cnt[11]\,
	datac => \state~30\,
	datad => \i~537\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[11]\);

\i~5765_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5765\ = \settle_cnt[11]\ # \settle_cnt[9]\ # \settle_cnt[10]\ # \settle_cnt[8]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[11]\,
	datab => \settle_cnt[9]\,
	datac => \settle_cnt[10]\,
	datad => \settle_cnt[8]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5765\);

\i~5766_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5766\ = \settle_cnt[5]\ # \settle_cnt[4]\ # \settle_cnt[6]\ # !\settle_cnt[7]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFB",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[5]\,
	datab => \settle_cnt[7]\,
	datac => \settle_cnt[4]\,
	datad => \settle_cnt[6]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5766\);

\i~538_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~538\ = \settle_cnt[12]\ $ !\i~537COUT\
-- \i~538COUT\ = CARRY(\settle_cnt[12]\ & !\i~537COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[12]\,
	cin => \i~537COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~538\,
	cout => \i~538COUT\);

\settle_cnt[12]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[12]\ = DFFE(\i~538\ & (\state~30\ # \i~53\ & \settle_cnt[12]\) # !\i~538\ & \i~53\ & \settle_cnt[12]\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~538\,
	datab => \state~30\,
	datac => \i~53\,
	datad => \settle_cnt[12]\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[12]\);

\i~539_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~539\ = \settle_cnt[13]\ $ \i~538COUT\
-- \i~539COUT\ = CARRY(!\i~538COUT\ # !\settle_cnt[13]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \settle_cnt[13]\,
	cin => \i~538COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~539\,
	cout => \i~539COUT\);

\settle_cnt[13]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[13]\ = DFFE(\settle_cnt[13]\ & (\i~53\ # \state~30\ & \i~539\) # !\settle_cnt[13]\ & \state~30\ & \i~539\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[13]\,
	datab => \state~30\,
	datac => \i~539\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[13]\);

\i~540_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~540\ = \settle_cnt[14]\ $ !\i~539COUT\
-- \i~540COUT\ = CARRY(\settle_cnt[14]\ & !\i~539COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \settle_cnt[14]\,
	cin => \i~539COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~540\,
	cout => \i~540COUT\);

\settle_cnt[14]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[14]\ = DFFE(\settle_cnt[14]\ & (\i~53\ # \state~30\ & \i~540\) # !\settle_cnt[14]\ & \state~30\ & \i~540\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[14]\,
	datab => \state~30\,
	datac => \i~540\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[14]\);

\i~541_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~541\ = \settle_cnt[15]\ $ \i~540COUT\
-- \i~541COUT\ = CARRY(!\i~540COUT\ # !\settle_cnt[15]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \settle_cnt[15]\,
	cin => \i~540COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~541\,
	cout => \i~541COUT\);

\settle_cnt[15]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[15]\ = DFFE(\i~53\ & (\settle_cnt[15]\ # \state~30\ & \i~541\) # !\i~53\ & \state~30\ & \i~541\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~53\,
	datab => \state~30\,
	datac => \settle_cnt[15]\,
	datad => \i~541\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[15]\);

\i~5764_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5764\ = \settle_cnt[12]\ # \settle_cnt[13]\ # \settle_cnt[15]\ # \settle_cnt[14]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[12]\,
	datab => \settle_cnt[13]\,
	datac => \settle_cnt[15]\,
	datad => \settle_cnt[14]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5764\);

\i~5768_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5768\ = \i~5767\ # \i~5765\ # \i~5766\ # \i~5764\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5767\,
	datab => \i~5765\,
	datac => \i~5766\,
	datad => \i~5764\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5768\);

\i~542_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~542\ = \settle_cnt[16]\ $ !\i~541COUT\
-- \i~542COUT\ = CARRY(\settle_cnt[16]\ & !\i~541COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \settle_cnt[16]\,
	cin => \i~541COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~542\,
	cout => \i~542COUT\);

\settle_cnt[16]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[16]\ = DFFE(\state~30\ & (\i~542\ # \settle_cnt[16]\ & \i~53\) # !\state~30\ & \settle_cnt[16]\ & \i~53\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~30\,
	datab => \settle_cnt[16]\,
	datac => \i~53\,
	datad => \i~542\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[16]\);

\i~543_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~543\ = \settle_cnt[17]\ $ \i~542COUT\
-- \i~543COUT\ = CARRY(!\i~542COUT\ # !\settle_cnt[17]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[17]\,
	cin => \i~542COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~543\,
	cout => \i~543COUT\);

\settle_cnt[17]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[17]\ = DFFE(\state~30\ & (\i~543\ # \settle_cnt[17]\ & \i~53\) # !\state~30\ & \settle_cnt[17]\ & \i~53\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~30\,
	datab => \settle_cnt[17]\,
	datac => \i~543\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[17]\);

\i~544_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~544\ = \settle_cnt[18]\ $ !\i~543COUT\
-- \i~544COUT\ = CARRY(\settle_cnt[18]\ & !\i~543COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[18]\,
	cin => \i~543COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~544\,
	cout => \i~544COUT\);

\settle_cnt[18]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[18]\ = DFFE(\settle_cnt[18]\ & (\i~53\ # \i~544\ & \state~30\) # !\settle_cnt[18]\ & \i~544\ & \state~30\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[18]\,
	datab => \i~544\,
	datac => \state~30\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[18]\);

\i~545_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~545\ = \settle_cnt[19]\ $ \i~544COUT\
-- \i~545COUT\ = CARRY(!\i~544COUT\ # !\settle_cnt[19]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[19]\,
	cin => \i~544COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~545\,
	cout => \i~545COUT\);

\settle_cnt[19]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[19]\ = DFFE(\settle_cnt[19]\ & (\i~53\ # \i~545\ & \state~30\) # !\settle_cnt[19]\ & \i~545\ & \state~30\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[19]\,
	datab => \i~545\,
	datac => \state~30\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[19]\);

\i~546_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~546\ = \settle_cnt[20]\ $ !\i~545COUT\
-- \i~546COUT\ = CARRY(\settle_cnt[20]\ & !\i~545COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[20]\,
	cin => \i~545COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~546\,
	cout => \i~546COUT\);

\settle_cnt[20]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[20]\ = DFFE(\i~53\ & (\settle_cnt[20]\ # \state~30\ & \i~546\) # !\i~53\ & \state~30\ & \i~546\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~53\,
	datab => \state~30\,
	datac => \settle_cnt[20]\,
	datad => \i~546\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[20]\);

\i~547_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~547\ = \settle_cnt[21]\ $ \i~546COUT\
-- \i~547COUT\ = CARRY(!\i~546COUT\ # !\settle_cnt[21]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[21]\,
	cin => \i~546COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~547\,
	cout => \i~547COUT\);

\settle_cnt[21]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[21]\ = DFFE(\i~53\ & (\settle_cnt[21]\ # \i~547\ & \state~30\) # !\i~53\ & \i~547\ & \state~30\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~53\,
	datab => \i~547\,
	datac => \state~30\,
	datad => \settle_cnt[21]\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[21]\);

\i~548_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~548\ = \settle_cnt[22]\ $ !\i~547COUT\
-- \i~548COUT\ = CARRY(\settle_cnt[22]\ & !\i~547COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[22]\,
	cin => \i~547COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~548\,
	cout => \i~548COUT\);

\settle_cnt[22]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[22]\ = DFFE(\settle_cnt[22]\ & (\i~53\ # \i~548\ & \state~30\) # !\settle_cnt[22]\ & \i~548\ & \state~30\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[22]\,
	datab => \i~548\,
	datac => \state~30\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[22]\);

\i~549_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~549\ = \settle_cnt[23]\ $ \i~548COUT\
-- \i~549COUT\ = CARRY(!\i~548COUT\ # !\settle_cnt[23]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[23]\,
	cin => \i~548COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~549\,
	cout => \i~549COUT\);

\settle_cnt[23]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[23]\ = DFFE(\i~53\ & (\settle_cnt[23]\ # \i~549\ & \state~30\) # !\i~53\ & \i~549\ & \state~30\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~53\,
	datab => \i~549\,
	datac => \state~30\,
	datad => \settle_cnt[23]\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[23]\);

\i~5761_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5761\ = \settle_cnt[22]\ # \settle_cnt[23]\ # \settle_cnt[20]\ # \settle_cnt[21]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[22]\,
	datab => \settle_cnt[23]\,
	datac => \settle_cnt[20]\,
	datad => \settle_cnt[21]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5761\);

\i~550_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~550\ = \settle_cnt[24]\ $ !\i~549COUT\
-- \i~550COUT\ = CARRY(\settle_cnt[24]\ & !\i~549COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \settle_cnt[24]\,
	cin => \i~549COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~550\,
	cout => \i~550COUT\);

\settle_cnt[24]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[24]\ = DFFE(\settle_cnt[24]\ & (\i~53\ # \state~30\ & \i~550\) # !\settle_cnt[24]\ & \state~30\ & \i~550\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[24]\,
	datab => \state~30\,
	datac => \i~550\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[24]\);

\i~551_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~551\ = \settle_cnt[25]\ $ \i~550COUT\
-- \i~551COUT\ = CARRY(!\i~550COUT\ # !\settle_cnt[25]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \settle_cnt[25]\,
	cin => \i~550COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~551\,
	cout => \i~551COUT\);

\settle_cnt[25]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[25]\ = DFFE(\settle_cnt[25]\ & (\i~53\ # \state~30\ & \i~551\) # !\settle_cnt[25]\ & \state~30\ & \i~551\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[25]\,
	datab => \state~30\,
	datac => \i~551\,
	datad => \i~53\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[25]\);

\i~552_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~552\ = \settle_cnt[26]\ $ !\i~551COUT\
-- \i~552COUT\ = CARRY(\settle_cnt[26]\ & !\i~551COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[26]\,
	cin => \i~551COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~552\,
	cout => \i~552COUT\);

\settle_cnt[26]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[26]\ = DFFE(\state~30\ & (\i~552\ # \i~53\ & \settle_cnt[26]\) # !\state~30\ & \i~53\ & \settle_cnt[26]\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~30\,
	datab => \i~53\,
	datac => \settle_cnt[26]\,
	datad => \i~552\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[26]\);

\i~553_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~553\ = \settle_cnt[27]\ $ \i~552COUT\
-- \i~553COUT\ = CARRY(!\i~552COUT\ # !\settle_cnt[27]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[27]\,
	cin => \i~552COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~553\,
	cout => \i~553COUT\);

\settle_cnt[27]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[27]\ = DFFE(\i~53\ & (\settle_cnt[27]\ # \state~30\ & \i~553\) # !\i~53\ & \state~30\ & \i~553\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~53\,
	datab => \state~30\,
	datac => \settle_cnt[27]\,
	datad => \i~553\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[27]\);

\i~5760_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5760\ = \settle_cnt[25]\ # \settle_cnt[26]\ # \settle_cnt[27]\ # \settle_cnt[24]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[25]\,
	datab => \settle_cnt[26]\,
	datac => \settle_cnt[27]\,
	datad => \settle_cnt[24]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5760\);

\i~5762_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5762\ = \settle_cnt[19]\ # \settle_cnt[17]\ # \settle_cnt[18]\ # \settle_cnt[16]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[19]\,
	datab => \settle_cnt[17]\,
	datac => \settle_cnt[18]\,
	datad => \settle_cnt[16]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5762\);

\i~554_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~554\ = \settle_cnt[28]\ $ !\i~553COUT\
-- \i~554COUT\ = CARRY(\settle_cnt[28]\ & !\i~553COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[28]\,
	cin => \i~553COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~554\,
	cout => \i~554COUT\);

\settle_cnt[28]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[28]\ = DFFE(\state~30\ & (\i~554\ # \i~53\ & \settle_cnt[28]\) # !\state~30\ & \i~53\ & \settle_cnt[28]\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~30\,
	datab => \i~53\,
	datac => \settle_cnt[28]\,
	datad => \i~554\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[28]\);

\i~555_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~555\ = \settle_cnt[29]\ $ \i~554COUT\
-- \i~555COUT\ = CARRY(!\i~554COUT\ # !\settle_cnt[29]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[29]\,
	cin => \i~554COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~555\,
	cout => \i~555COUT\);

\settle_cnt[29]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[29]\ = DFFE(\state~30\ & (\i~555\ # \i~53\ & \settle_cnt[29]\) # !\state~30\ & \i~53\ & \settle_cnt[29]\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~30\,
	datab => \i~53\,
	datac => \settle_cnt[29]\,
	datad => \i~555\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[29]\);

\i~556_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~556\ = \settle_cnt[30]\ $ !\i~555COUT\
-- \i~556COUT\ = CARRY(\settle_cnt[30]\ & !\i~555COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[30]\,
	cin => \i~555COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~556\,
	cout => \i~556COUT\);

\settle_cnt[30]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[30]\ = DFFE(\state~30\ & (\i~556\ # \i~53\ & \settle_cnt[30]\) # !\state~30\ & \i~53\ & \settle_cnt[30]\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~30\,
	datab => \i~53\,
	datac => \settle_cnt[30]\,
	datad => \i~556\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[30]\);

\i~557_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~557\ = \settle_cnt[31]\ $ \i~556COUT\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[31]\,
	cin => \i~556COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~557\);

\settle_cnt[31]~I\ : apex20ke_lcell 
-- Equation(s):
-- \settle_cnt[31]\ = DFFE(\i~53\ & (\settle_cnt[31]\ # \state~30\ & \i~557\) # !\i~53\ & \state~30\ & \i~557\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~53\,
	datab => \state~30\,
	datac => \settle_cnt[31]\,
	datad => \i~557\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \settle_cnt[31]\);

\i~5759_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5759\ = \settle_cnt[30]\ # \settle_cnt[29]\ # \settle_cnt[31]\ # \settle_cnt[28]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \settle_cnt[30]\,
	datab => \settle_cnt[29]\,
	datac => \settle_cnt[31]\,
	datad => \settle_cnt[28]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5759\);

\i~5763_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5763\ = \i~5761\ # \i~5760\ # \i~5762\ # \i~5759\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5761\,
	datab => \i~5760\,
	datac => \i~5762\,
	datad => \i~5759\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5763\);

\state~30_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~30\ = DFFE(\state~23\ # \state~30\ & (\i~5768\ # \i~5763\), GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FCF8",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5768\,
	datab => \state~30\,
	datac => \state~23\,
	datad => \i~5763\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~30\);

\i~5733_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5733\ = !state & !\state~25\ & !\state~30\ & !\state~31\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_state,
	datab => \state~25\,
	datac => \state~30\,
	datad => \state~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5733\);

\i~5772_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5772\ = \state~28\ # \state~27\ # !\i~5743\ # !\i~5733\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FDFF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5733\,
	datab => \state~28\,
	datac => \state~27\,
	datad => \i~5743\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5772\);

\i~510_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~510\ = \digitize_cnt[16]\ $ !\i~509COUT\
-- \i~510COUT\ = CARRY(\digitize_cnt[16]\ & !\i~509COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[16]\,
	cin => \i~509COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~510\,
	cout => \i~510COUT\);

\digitize_cnt[16]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[16]\ = DFFE(\i~5772\ & (\digitize_cnt[16]\ # \state~21\ & \i~510\) # !\i~5772\ & \state~21\ & \i~510\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5772\,
	datab => \state~21\,
	datac => \digitize_cnt[16]\,
	datad => \i~510\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[16]\);

\i~511_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~511\ = \digitize_cnt[17]\ $ \i~510COUT\
-- \i~511COUT\ = CARRY(!\i~510COUT\ # !\digitize_cnt[17]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \digitize_cnt[17]\,
	cin => \i~510COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~511\,
	cout => \i~511COUT\);

\digitize_cnt[17]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[17]\ = DFFE(\digitize_cnt[17]\ & (\i~5772\ # \state~21\ & \i~511\) # !\digitize_cnt[17]\ & \state~21\ & \i~511\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[17]\,
	datab => \state~21\,
	datac => \i~511\,
	datad => \i~5772\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[17]\);

\i~512_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~512\ = \digitize_cnt[18]\ $ !\i~511COUT\
-- \i~512COUT\ = CARRY(\digitize_cnt[18]\ & !\i~511COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \digitize_cnt[18]\,
	cin => \i~511COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~512\,
	cout => \i~512COUT\);

\digitize_cnt[18]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[18]\ = DFFE(\digitize_cnt[18]\ & (\i~5772\ # \state~21\ & \i~512\) # !\digitize_cnt[18]\ & \state~21\ & \i~512\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[18]\,
	datab => \state~21\,
	datac => \i~512\,
	datad => \i~5772\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[18]\);

\i~513_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~513\ = \digitize_cnt[19]\ $ \i~512COUT\
-- \i~513COUT\ = CARRY(!\i~512COUT\ # !\digitize_cnt[19]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \digitize_cnt[19]\,
	cin => \i~512COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~513\,
	cout => \i~513COUT\);

\digitize_cnt[19]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[19]\ = DFFE(\digitize_cnt[19]\ & (\i~5772\ # \state~21\ & \i~513\) # !\digitize_cnt[19]\ & \state~21\ & \i~513\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[19]\,
	datab => \state~21\,
	datac => \i~513\,
	datad => \i~5772\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[19]\);

\i~5750_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5750\ = \digitize_cnt[19]\ # \digitize_cnt[17]\ # \digitize_cnt[18]\ # \digitize_cnt[16]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[19]\,
	datab => \digitize_cnt[17]\,
	datac => \digitize_cnt[18]\,
	datad => \digitize_cnt[16]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5750\);

\i~514_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~514\ = \digitize_cnt[20]\ $ !\i~513COUT\
-- \i~514COUT\ = CARRY(\digitize_cnt[20]\ & !\i~513COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \digitize_cnt[20]\,
	cin => \i~513COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~514\,
	cout => \i~514COUT\);

\digitize_cnt[20]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[20]\ = DFFE(\digitize_cnt[20]\ & (\i~5772\ # \state~21\ & \i~514\) # !\digitize_cnt[20]\ & \state~21\ & \i~514\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[20]\,
	datab => \state~21\,
	datac => \i~514\,
	datad => \i~5772\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[20]\);

\i~515_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~515\ = \digitize_cnt[21]\ $ \i~514COUT\
-- \i~515COUT\ = CARRY(!\i~514COUT\ # !\digitize_cnt[21]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \digitize_cnt[21]\,
	cin => \i~514COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~515\,
	cout => \i~515COUT\);

\digitize_cnt[21]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[21]\ = DFFE(\i~5772\ & (\digitize_cnt[21]\ # \state~21\ & \i~515\) # !\i~5772\ & \state~21\ & \i~515\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5772\,
	datab => \state~21\,
	datac => \digitize_cnt[21]\,
	datad => \i~515\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[21]\);

\i~516_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~516\ = \digitize_cnt[22]\ $ !\i~515COUT\
-- \i~516COUT\ = CARRY(\digitize_cnt[22]\ & !\i~515COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \digitize_cnt[22]\,
	cin => \i~515COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~516\,
	cout => \i~516COUT\);

\digitize_cnt[22]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[22]\ = DFFE(\digitize_cnt[22]\ & (\i~5772\ # \state~21\ & \i~516\) # !\digitize_cnt[22]\ & \state~21\ & \i~516\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[22]\,
	datab => \state~21\,
	datac => \i~516\,
	datad => \i~5772\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[22]\);

\i~517_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~517\ = \digitize_cnt[23]\ $ \i~516COUT\
-- \i~517COUT\ = CARRY(!\i~516COUT\ # !\digitize_cnt[23]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \digitize_cnt[23]\,
	cin => \i~516COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~517\,
	cout => \i~517COUT\);

\digitize_cnt[23]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[23]\ = DFFE(\digitize_cnt[23]\ & (\i~5772\ # \state~21\ & \i~517\) # !\digitize_cnt[23]\ & \state~21\ & \i~517\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[23]\,
	datab => \state~21\,
	datac => \i~517\,
	datad => \i~5772\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[23]\);

\i~5749_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5749\ = \digitize_cnt[23]\ # \digitize_cnt[22]\ # \digitize_cnt[21]\ # \digitize_cnt[20]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[23]\,
	datab => \digitize_cnt[22]\,
	datac => \digitize_cnt[21]\,
	datad => \digitize_cnt[20]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5749\);

\i~518_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~518\ = \digitize_cnt[24]\ $ !\i~517COUT\
-- \i~518COUT\ = CARRY(\digitize_cnt[24]\ & !\i~517COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[24]\,
	cin => \i~517COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~518\,
	cout => \i~518COUT\);

\digitize_cnt[24]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[24]\ = DFFE(\digitize_cnt[24]\ & (\i~5772\ # \state~21\ & \i~518\) # !\digitize_cnt[24]\ & \state~21\ & \i~518\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[24]\,
	datab => \state~21\,
	datac => \i~5772\,
	datad => \i~518\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[24]\);

\i~519_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~519\ = \digitize_cnt[25]\ $ \i~518COUT\
-- \i~519COUT\ = CARRY(!\i~518COUT\ # !\digitize_cnt[25]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[25]\,
	cin => \i~518COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~519\,
	cout => \i~519COUT\);

\digitize_cnt[25]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[25]\ = DFFE(\state~21\ & (\i~519\ # \digitize_cnt[25]\ & \i~5772\) # !\state~21\ & \digitize_cnt[25]\ & \i~5772\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~21\,
	datab => \digitize_cnt[25]\,
	datac => \i~5772\,
	datad => \i~519\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[25]\);

\i~520_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~520\ = \digitize_cnt[26]\ $ !\i~519COUT\
-- \i~520COUT\ = CARRY(\digitize_cnt[26]\ & !\i~519COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[26]\,
	cin => \i~519COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~520\,
	cout => \i~520COUT\);

\digitize_cnt[26]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[26]\ = DFFE(\i~520\ & (\state~21\ # \digitize_cnt[26]\ & \i~5772\) # !\i~520\ & \digitize_cnt[26]\ & \i~5772\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~520\,
	datab => \state~21\,
	datac => \digitize_cnt[26]\,
	datad => \i~5772\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[26]\);

\i~521_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~521\ = \digitize_cnt[27]\ $ \i~520COUT\
-- \i~521COUT\ = CARRY(!\i~520COUT\ # !\digitize_cnt[27]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[27]\,
	cin => \i~520COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~521\,
	cout => \i~521COUT\);

\digitize_cnt[27]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[27]\ = DFFE(\i~5772\ & (\digitize_cnt[27]\ # \state~21\ & \i~521\) # !\i~5772\ & \state~21\ & \i~521\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5772\,
	datab => \digitize_cnt[27]\,
	datac => \state~21\,
	datad => \i~521\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[27]\);

\i~5748_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5748\ = \digitize_cnt[26]\ # \digitize_cnt[25]\ # \digitize_cnt[24]\ # \digitize_cnt[27]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[26]\,
	datab => \digitize_cnt[25]\,
	datac => \digitize_cnt[24]\,
	datad => \digitize_cnt[27]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5748\);

\i~522_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~522\ = \digitize_cnt[28]\ $ !\i~521COUT\
-- \i~522COUT\ = CARRY(\digitize_cnt[28]\ & !\i~521COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \digitize_cnt[28]\,
	cin => \i~521COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~522\,
	cout => \i~522COUT\);

\digitize_cnt[28]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[28]\ = DFFE(\state~21\ & (\i~522\ # \digitize_cnt[28]\ & \i~5772\) # !\state~21\ & \digitize_cnt[28]\ & \i~5772\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~21\,
	datab => \digitize_cnt[28]\,
	datac => \i~5772\,
	datad => \i~522\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[28]\);

\i~523_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~523\ = \digitize_cnt[29]\ $ \i~522COUT\
-- \i~523COUT\ = CARRY(!\i~522COUT\ # !\digitize_cnt[29]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[29]\,
	cin => \i~522COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~523\,
	cout => \i~523COUT\);

\digitize_cnt[29]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[29]\ = DFFE(\i~5772\ & (\digitize_cnt[29]\ # \state~21\ & \i~523\) # !\i~5772\ & \state~21\ & \i~523\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5772\,
	datab => \state~21\,
	datac => \digitize_cnt[29]\,
	datad => \i~523\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[29]\);

\i~524_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~524\ = \digitize_cnt[30]\ $ !\i~523COUT\
-- \i~524COUT\ = CARRY(\digitize_cnt[30]\ & !\i~523COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[30]\,
	cin => \i~523COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~524\,
	cout => \i~524COUT\);

\digitize_cnt[30]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[30]\ = DFFE(\i~5772\ & (\digitize_cnt[30]\ # \state~21\ & \i~524\) # !\i~5772\ & \state~21\ & \i~524\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5772\,
	datab => \digitize_cnt[30]\,
	datac => \state~21\,
	datad => \i~524\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[30]\);

\i~525_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~525\ = \i~524COUT\ $ \digitize_cnt[31]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datad => \digitize_cnt[31]\,
	cin => \i~524COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~525\);

\digitize_cnt[31]~I\ : apex20ke_lcell 
-- Equation(s):
-- \digitize_cnt[31]\ = DFFE(\state~21\ & (\i~525\ # \digitize_cnt[31]\ & \i~5772\) # !\state~21\ & \digitize_cnt[31]\ & \i~5772\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~21\,
	datab => \digitize_cnt[31]\,
	datac => \i~5772\,
	datad => \i~525\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \digitize_cnt[31]\);

\i~5747_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5747\ = \digitize_cnt[29]\ # \digitize_cnt[31]\ # \digitize_cnt[30]\ # \digitize_cnt[28]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \digitize_cnt[29]\,
	datab => \digitize_cnt[31]\,
	datac => \digitize_cnt[30]\,
	datad => \digitize_cnt[28]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5747\);

\i~5751_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5751\ = \i~5750\ # \i~5749\ # \i~5748\ # \i~5747\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5750\,
	datab => \i~5749\,
	datac => \i~5748\,
	datad => \i~5747\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5751\);

\i~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~2\ = \i~5751\ # \i~5756\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FCFC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \i~5751\,
	datac => \i~5756\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~2\);

\i~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~0\ = \i~5768\ # \i~5763\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \i~5768\,
	datad => \i~5763\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~0\);

\state~21_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~21\ = DFFE(\state~21\ & (\i~2\ # \state~30\ & !\i~0\) # !\state~21\ & \state~30\ & !\i~0\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "88F8",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~21\,
	datab => \i~2\,
	datac => \state~30\,
	datad => \i~0\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~21\);

\i~5734_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5734\ = !\state~21\ & !\state~23\ & \i~5733\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \state~21\,
	datac => \state~23\,
	datad => \i~5733\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5734\);

\i~5732_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5732\ = !\state~29\ & !\state~22\ & !\state~24\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0003",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \state~29\,
	datac => \state~22\,
	datad => \state~24\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5732\);

\i~5735_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5735\ = !\state~29\ & !\state~24\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0033",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \state~29\,
	datad => \state~24\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5735\);

\i~5769_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5769\ = \state~23\ # \state~22\ # \state~28\ # !state1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEFF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~23\,
	datab => \state~22\,
	datac => \state~28\,
	datad => ww_state1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5769\);

\counterclk_low~I\ : apex20ke_lcell 
-- Equation(s):
-- counterclk_low = DFFE(\i~5769\ # counterclk_low & (!\i~5735\ # !\i~5733\), GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F7F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5733\,
	datab => \i~5735\,
	datac => \i~5769\,
	datad => counterclk_low,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => counterclk_low);

\counterclk_high~I\ : apex20ke_lcell 
-- Equation(s):
-- counterclk_high = DFFE(\state~27\ # counterclk_high & (!\i~5733\ # !\i~5735\), GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F4FC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5735\,
	datab => counterclk_high,
	datac => \state~27\,
	datad => \i~5733\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => counterclk_high);

\cclk~I\ : apex20ke_lcell 
-- Equation(s):
-- cclk = DFFE(counterclk_high # !cclk & !counterclk_low, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF03",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => cclk,
	datac => counterclk_low,
	datad => counterclk_high,
	clk => ww_CLK80,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => cclk);

\i~5736_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5736\ = !\state~27\ & !\state~28\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "000F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \state~27\,
	datad => \state~28\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5736\);

\i~30_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~30\ = \state~22\ # \state~23\ # !\i~5735\ # !\i~5733\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EFFF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datab => \state~23\,
	datac => \i~5733\,
	datad => \i~5735\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~30\);

\i~5737_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5737\ = !\state~23\ & !\state~21\ & \i~5736\ & \i~5733\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "1000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~23\,
	datab => \state~21\,
	datac => \i~5736\,
	datad => \i~5733\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5737\);

\i~214_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~214\ = \state~24\ & (channel_1 $ channel_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0CC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \state~24\,
	datac => ww_channel_1,
	datad => ww_channel_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~214\);

\i~5731_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5731\ = \state~23\ # \state~31\ # \state~21\ # \state~22\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~23\,
	datab => \state~31\,
	datac => \state~21\,
	datad => \state~22\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5731\);

\i~5727_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5727\ = state # \state~25\ # \state~27\ # \i~5731\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_state,
	datab => \state~25\,
	datac => \state~27\,
	datad => \i~5731\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5727\);

\i~5740_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5740\ = \state~22\ # \state~21\ # \state~29\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datac => \state~21\,
	datad => \state~29\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5740\);

\i~5739_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5739\ = \state~24\ # \state~27\ # \state~28\ # !state1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFEF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~24\,
	datab => \state~27\,
	datac => ww_state1,
	datad => \state~28\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5739\);

\i~5742_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5742\ = \state~23\ # \state~31\ # \state~30\ # \state~25\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~23\,
	datab => \state~31\,
	datac => \state~30\,
	datad => \state~25\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5742\);

\i~5745_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5745\ = \i~5733\ & !\state~23\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00F0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \i~5733\,
	datad => \state~23\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5745\);

\i~5770_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~5770\ = \state~23\ # \state~30\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \state~23\,
	datad => \state~30\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~5770\);

\i~42_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~42\ = \state~21\ # \i~5770\ # !\i~5771\ # !\i~5735\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFF7",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~5735\,
	datab => \i~5771\,
	datac => \state~21\,
	datad => \i~5770\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~42\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	atwd_readout_1 IS
    PORT (
	CLK40 : IN std_logic;
	OutputEnable : IN std_logic;
	RST : IN std_logic;
	busy : IN std_logic;
	ATWD1_D_0 : IN std_logic;
	ATWD1_D_3 : IN std_logic;
	ATWD1_D_2 : IN std_logic;
	ATWD1_D_1 : IN std_logic;
	ATWD1_D_5 : IN std_logic;
	ATWD1_D_4 : IN std_logic;
	ATWD1_D_8 : IN std_logic;
	ATWD1_D_9 : IN std_logic;
	ATWD1_D_7 : IN std_logic;
	ATWD1_D_6 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	ShiftClock : OUT std_logic;
	readout_done : OUT std_logic;
	ATWD_D_gray_0 : OUT std_logic;
	ATWD_D_gray_3 : OUT std_logic;
	ATWD_D_gray_2 : OUT std_logic;
	ATWD_D_gray_1 : OUT std_logic;
	ATWD_D_gray_5 : OUT std_logic;
	ATWD_D_gray_4 : OUT std_logic;
	ATWD_D_gray_8 : OUT std_logic;
	ATWD_D_gray_9 : OUT std_logic;
	ATWD_D_gray_7 : OUT std_logic;
	ATWD_D_gray_6 : OUT std_logic;
	data_valid : OUT std_logic;
	addr_cnt_0 : OUT std_logic;
	addr_cnt_1 : OUT std_logic;
	addr_cnt_2 : OUT std_logic;
	addr_cnt_3 : OUT std_logic;
	addr_cnt_4 : OUT std_logic;
	addr_cnt_5 : OUT std_logic;
	addr_cnt_6 : OUT std_logic;
	addr_cnt_7 : OUT std_logic;
	addr_cnt_8 : OUT std_logic
	);
END atwd_readout_1;

ARCHITECTURE structure OF atwd_readout_1 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK40 : std_logic;
SIGNAL ww_OutputEnable : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_busy : std_logic;
SIGNAL ww_ATWD1_D_0 : std_logic;
SIGNAL ww_ATWD1_D_3 : std_logic;
SIGNAL ww_ATWD1_D_2 : std_logic;
SIGNAL ww_ATWD1_D_1 : std_logic;
SIGNAL ww_ATWD1_D_5 : std_logic;
SIGNAL ww_ATWD1_D_4 : std_logic;
SIGNAL ww_ATWD1_D_8 : std_logic;
SIGNAL ww_ATWD1_D_9 : std_logic;
SIGNAL ww_ATWD1_D_7 : std_logic;
SIGNAL ww_ATWD1_D_6 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_ShiftClock : std_logic;
SIGNAL ww_readout_done : std_logic;
SIGNAL ww_ATWD_D_gray_0 : std_logic;
SIGNAL ww_ATWD_D_gray_3 : std_logic;
SIGNAL ww_ATWD_D_gray_2 : std_logic;
SIGNAL ww_ATWD_D_gray_1 : std_logic;
SIGNAL ww_ATWD_D_gray_5 : std_logic;
SIGNAL ww_ATWD_D_gray_4 : std_logic;
SIGNAL ww_ATWD_D_gray_8 : std_logic;
SIGNAL ww_ATWD_D_gray_9 : std_logic;
SIGNAL ww_ATWD_D_gray_7 : std_logic;
SIGNAL ww_ATWD_D_gray_6 : std_logic;
SIGNAL ww_data_valid : std_logic;
SIGNAL ww_addr_cnt_0 : std_logic;
SIGNAL ww_addr_cnt_1 : std_logic;
SIGNAL ww_addr_cnt_2 : std_logic;
SIGNAL ww_addr_cnt_3 : std_logic;
SIGNAL ww_addr_cnt_4 : std_logic;
SIGNAL ww_addr_cnt_5 : std_logic;
SIGNAL ww_addr_cnt_6 : std_logic;
SIGNAL ww_addr_cnt_7 : std_logic;
SIGNAL ww_addr_cnt_8 : std_logic;
SIGNAL \i~3181_1\ : std_logic;
SIGNAL \i~3183_1\ : std_logic;
SIGNAL \i~3185_1\ : std_logic;
SIGNAL \i~3187_1\ : std_logic;
SIGNAL \state~23\ : std_logic;
SIGNAL \i~3130\ : std_logic;
SIGNAL \i~55\ : std_logic;
SIGNAL \i~3140\ : std_logic;
SIGNAL \i~289\ : std_logic;
SIGNAL \i~402\ : std_logic;
SIGNAL \readout_cnt[0]\ : std_logic;
SIGNAL \i~289COUT\ : std_logic;
SIGNAL \i~290\ : std_logic;
SIGNAL \i~401\ : std_logic;
SIGNAL \readout_cnt[1]\ : std_logic;
SIGNAL \i~290COUT\ : std_logic;
SIGNAL \i~291\ : std_logic;
SIGNAL \readout_cnt[2]\ : std_logic;
SIGNAL \i~291COUT\ : std_logic;
SIGNAL \i~292\ : std_logic;
SIGNAL \readout_cnt[3]\ : std_logic;
SIGNAL \i~292COUT\ : std_logic;
SIGNAL \i~293\ : std_logic;
SIGNAL \readout_cnt[4]\ : std_logic;
SIGNAL \i~293COUT\ : std_logic;
SIGNAL \i~294\ : std_logic;
SIGNAL \readout_cnt[5]\ : std_logic;
SIGNAL \i~294COUT\ : std_logic;
SIGNAL \i~295\ : std_logic;
SIGNAL \readout_cnt[6]\ : std_logic;
SIGNAL \i~295COUT\ : std_logic;
SIGNAL \i~296\ : std_logic;
SIGNAL \readout_cnt[7]\ : std_logic;
SIGNAL \i~296COUT\ : std_logic;
SIGNAL \i~297\ : std_logic;
SIGNAL \readout_cnt[8]\ : std_logic;
SIGNAL \i~297COUT\ : std_logic;
SIGNAL \i~298\ : std_logic;
SIGNAL \readout_cnt[9]\ : std_logic;
SIGNAL \i~298COUT\ : std_logic;
SIGNAL \i~299\ : std_logic;
SIGNAL \readout_cnt[10]\ : std_logic;
SIGNAL \i~299COUT\ : std_logic;
SIGNAL \i~300\ : std_logic;
SIGNAL \readout_cnt[11]\ : std_logic;
SIGNAL \i~300COUT\ : std_logic;
SIGNAL \i~301\ : std_logic;
SIGNAL \readout_cnt[12]\ : std_logic;
SIGNAL \i~301COUT\ : std_logic;
SIGNAL \i~302\ : std_logic;
SIGNAL \readout_cnt[13]\ : std_logic;
SIGNAL \i~302COUT\ : std_logic;
SIGNAL \i~303\ : std_logic;
SIGNAL \readout_cnt[14]\ : std_logic;
SIGNAL \i~303COUT\ : std_logic;
SIGNAL \i~304\ : std_logic;
SIGNAL \readout_cnt[15]\ : std_logic;
SIGNAL \i~304COUT\ : std_logic;
SIGNAL \i~305\ : std_logic;
SIGNAL \readout_cnt[16]\ : std_logic;
SIGNAL \i~305COUT\ : std_logic;
SIGNAL \i~306\ : std_logic;
SIGNAL \readout_cnt[17]\ : std_logic;
SIGNAL \i~306COUT\ : std_logic;
SIGNAL \i~307\ : std_logic;
SIGNAL \readout_cnt[18]\ : std_logic;
SIGNAL \i~307COUT\ : std_logic;
SIGNAL \i~308\ : std_logic;
SIGNAL \readout_cnt[19]\ : std_logic;
SIGNAL \i~308COUT\ : std_logic;
SIGNAL \i~309\ : std_logic;
SIGNAL \readout_cnt[20]\ : std_logic;
SIGNAL \i~309COUT\ : std_logic;
SIGNAL \i~310\ : std_logic;
SIGNAL \readout_cnt[21]\ : std_logic;
SIGNAL \i~310COUT\ : std_logic;
SIGNAL \i~311\ : std_logic;
SIGNAL \readout_cnt[22]\ : std_logic;
SIGNAL \i~311COUT\ : std_logic;
SIGNAL \i~312\ : std_logic;
SIGNAL \readout_cnt[23]\ : std_logic;
SIGNAL \i~312COUT\ : std_logic;
SIGNAL \i~313\ : std_logic;
SIGNAL \readout_cnt[24]\ : std_logic;
SIGNAL \i~313COUT\ : std_logic;
SIGNAL \i~314\ : std_logic;
SIGNAL \readout_cnt[25]\ : std_logic;
SIGNAL \i~314COUT\ : std_logic;
SIGNAL \i~315\ : std_logic;
SIGNAL \readout_cnt[26]\ : std_logic;
SIGNAL \i~315COUT\ : std_logic;
SIGNAL \i~316\ : std_logic;
SIGNAL \readout_cnt[27]\ : std_logic;
SIGNAL \i~316COUT\ : std_logic;
SIGNAL \i~317\ : std_logic;
SIGNAL \readout_cnt[28]\ : std_logic;
SIGNAL \i~317COUT\ : std_logic;
SIGNAL \i~318\ : std_logic;
SIGNAL \readout_cnt[29]\ : std_logic;
SIGNAL \i~318COUT\ : std_logic;
SIGNAL \i~319\ : std_logic;
SIGNAL \readout_cnt[30]\ : std_logic;
SIGNAL \i~319COUT\ : std_logic;
SIGNAL \i~320\ : std_logic;
SIGNAL \readout_cnt[31]\ : std_logic;
SIGNAL \i~3181\ : std_logic;
SIGNAL \i~3190\ : std_logic;
SIGNAL \i~3183\ : std_logic;
SIGNAL \i~3191\ : std_logic;
SIGNAL \i~3185\ : std_logic;
SIGNAL \i~3192\ : std_logic;
SIGNAL \i~3187\ : std_logic;
SIGNAL \i~3193\ : std_logic;
SIGNAL \i~3194\ : std_logic;
SIGNAL \state~24\ : std_logic;
SIGNAL \state~25\ : std_logic;
SIGNAL \state~26\ : std_logic;
SIGNAL \state~20\ : std_logic;
SIGNAL \i~3132\ : std_logic;
SIGNAL rst_divide : std_logic;
SIGNAL \divide_cnt[0]\ : std_logic;
SIGNAL \divide_cnt[1]\ : std_logic;
SIGNAL \i~2\ : std_logic;
SIGNAL \i~3134\ : std_logic;
SIGNAL \state~21\ : std_logic;
SIGNAL \state~22\ : std_logic;
SIGNAL \ATWD_D_gray[0]~19\ : std_logic;
SIGNAL \i~321\ : std_logic;
SIGNAL \i~3139\ : std_logic;
SIGNAL \i~3141\ : std_logic;
SIGNAL \i~321COUT\ : std_logic;
SIGNAL \i~322\ : std_logic;
SIGNAL \i~3143\ : std_logic;
SIGNAL \i~3144\ : std_logic;
SIGNAL \i~322COUT\ : std_logic;
SIGNAL \i~323\ : std_logic;
SIGNAL \i~3146\ : std_logic;
SIGNAL \i~3147\ : std_logic;
SIGNAL \i~323COUT\ : std_logic;
SIGNAL \i~324\ : std_logic;
SIGNAL \i~3149\ : std_logic;
SIGNAL \i~3150\ : std_logic;
SIGNAL \i~324COUT\ : std_logic;
SIGNAL \i~325\ : std_logic;
SIGNAL \i~3152\ : std_logic;
SIGNAL \i~3153\ : std_logic;
SIGNAL \i~3155\ : std_logic;
SIGNAL \i~3156\ : std_logic;
SIGNAL \i~325COUT\ : std_logic;
SIGNAL \i~326\ : std_logic;
SIGNAL \i~326COUT\ : std_logic;
SIGNAL \i~327\ : std_logic;
SIGNAL \i~3158\ : std_logic;
SIGNAL \i~3159\ : std_logic;
SIGNAL \i~3161\ : std_logic;
SIGNAL \i~3162\ : std_logic;
SIGNAL \i~327COUT\ : std_logic;
SIGNAL \i~328\ : std_logic;
SIGNAL \i~3164\ : std_logic;
SIGNAL \i~3165\ : std_logic;
SIGNAL \i~328COUT\ : std_logic;
SIGNAL \i~329\ : std_logic;
SIGNAL ALT_NOT_ww_RST : std_logic;

BEGIN

ww_CLK40 <= CLK40;
ww_OutputEnable <= OutputEnable;
ww_RST <= RST;
ww_busy <= busy;
ww_ATWD1_D_0 <= ATWD1_D_0;
ww_ATWD1_D_3 <= ATWD1_D_3;
ww_ATWD1_D_2 <= ATWD1_D_2;
ww_ATWD1_D_1 <= ATWD1_D_1;
ww_ATWD1_D_5 <= ATWD1_D_5;
ww_ATWD1_D_4 <= ATWD1_D_4;
ww_ATWD1_D_8 <= ATWD1_D_8;
ww_ATWD1_D_9 <= ATWD1_D_9;
ww_ATWD1_D_7 <= ATWD1_D_7;
ww_ATWD1_D_6 <= ATWD1_D_6;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
ShiftClock <= ww_ShiftClock;
readout_done <= ww_readout_done;
ATWD_D_gray_0 <= ww_ATWD_D_gray_0;
ATWD_D_gray_3 <= ww_ATWD_D_gray_3;
ATWD_D_gray_2 <= ww_ATWD_D_gray_2;
ATWD_D_gray_1 <= ww_ATWD_D_gray_1;
ATWD_D_gray_5 <= ww_ATWD_D_gray_5;
ATWD_D_gray_4 <= ww_ATWD_D_gray_4;
ATWD_D_gray_8 <= ww_ATWD_D_gray_8;
ATWD_D_gray_9 <= ww_ATWD_D_gray_9;
ATWD_D_gray_7 <= ww_ATWD_D_gray_7;
ATWD_D_gray_6 <= ww_ATWD_D_gray_6;
data_valid <= ww_data_valid;
addr_cnt_0 <= ww_addr_cnt_0;
addr_cnt_1 <= ww_addr_cnt_1;
addr_cnt_2 <= ww_addr_cnt_2;
addr_cnt_3 <= ww_addr_cnt_3;
addr_cnt_4 <= ww_addr_cnt_4;
addr_cnt_5 <= ww_addr_cnt_5;
addr_cnt_6 <= ww_addr_cnt_6;
addr_cnt_7 <= ww_addr_cnt_7;
addr_cnt_8 <= ww_addr_cnt_8;
ALT_NOT_ww_RST <= NOT ww_RST;

\ShiftClock~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- ShiftClock = DFFE(\state~22\ # ShiftClock & (\state~23\ # !\i~3130\), GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECEE",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_ShiftClock,
	datab => \state~22\,
	datac => \state~23\,
	datad => \i~3130\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_ShiftClock);

\readout_done~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- readout_done = DFFE(\state~24\ # readout_done & (\state~21\ # !\i~3132\), GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECFC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~21\,
	datab => \state~24\,
	datac => ww_readout_done,
	datad => \i~3132\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_readout_done);

\ATWD_D_gray[0]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- ATWD_D_gray_0 = DFFE(\ATWD1_D[0]~combout\, GLOBAL(outclock1), , , \ATWD_D_gray[0]~19\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_ATWD1_D_0,
	clk => ww_CLK40,
	ena => \ATWD_D_gray[0]~19\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_ATWD_D_gray_0);

\ATWD_D_gray[3]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- ATWD_D_gray_3 = DFFE(\ATWD1_D[3]~combout\, GLOBAL(outclock1), , , \ATWD_D_gray[0]~19\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_ATWD1_D_3,
	clk => ww_CLK40,
	ena => \ATWD_D_gray[0]~19\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_ATWD_D_gray_3);

\ATWD_D_gray[2]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- ATWD_D_gray_2 = DFFE(\ATWD1_D[2]~combout\, GLOBAL(outclock1), , , \ATWD_D_gray[0]~19\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_ATWD1_D_2,
	clk => ww_CLK40,
	ena => \ATWD_D_gray[0]~19\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_ATWD_D_gray_2);

\ATWD_D_gray[1]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- ATWD_D_gray_1 = DFFE(\ATWD1_D[1]~combout\, GLOBAL(outclock1), , , \ATWD_D_gray[0]~19\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_ATWD1_D_1,
	clk => ww_CLK40,
	ena => \ATWD_D_gray[0]~19\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_ATWD_D_gray_1);

\ATWD_D_gray[5]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- ATWD_D_gray_5 = DFFE(\ATWD1_D[5]~combout\, GLOBAL(outclock1), , , \ATWD_D_gray[0]~19\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_ATWD1_D_5,
	clk => ww_CLK40,
	ena => \ATWD_D_gray[0]~19\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_ATWD_D_gray_5);

\ATWD_D_gray[4]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- ATWD_D_gray_4 = DFFE(\ATWD1_D[4]~combout\, GLOBAL(outclock1), , , \ATWD_D_gray[0]~19\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_ATWD1_D_4,
	clk => ww_CLK40,
	ena => \ATWD_D_gray[0]~19\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_ATWD_D_gray_4);

\ATWD_D_gray[8]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- ATWD_D_gray_8 = DFFE(\ATWD1_D[8]~combout\, GLOBAL(outclock1), , , \ATWD_D_gray[0]~19\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_ATWD1_D_8,
	clk => ww_CLK40,
	ena => \ATWD_D_gray[0]~19\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_ATWD_D_gray_8);

\ATWD_D_gray[9]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- ATWD_D_gray_9 = DFFE(\ATWD1_D[9]~combout\, GLOBAL(outclock1), , , \ATWD_D_gray[0]~19\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_ATWD1_D_9,
	clk => ww_CLK40,
	ena => \ATWD_D_gray[0]~19\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_ATWD_D_gray_9);

\ATWD_D_gray[7]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- ATWD_D_gray_7 = DFFE(\ATWD1_D[7]~combout\, GLOBAL(outclock1), , , \ATWD_D_gray[0]~19\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_ATWD1_D_7,
	clk => ww_CLK40,
	ena => \ATWD_D_gray[0]~19\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_ATWD_D_gray_7);

\ATWD_D_gray[6]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- ATWD_D_gray_6 = DFFE(\ATWD1_D[6]~combout\, GLOBAL(outclock1), , , \ATWD_D_gray[0]~19\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_ATWD1_D_6,
	clk => ww_CLK40,
	ena => \ATWD_D_gray[0]~19\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_ATWD_D_gray_6);

\data_valid~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- data_valid = DFFE(\state~23\ # data_valid & (\state~22\ # !\i~3130\), GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAFA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~23\,
	datab => \state~22\,
	datac => ww_data_valid,
	datad => \i~3130\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_data_valid);

\addr_cnt[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- addr_cnt_0 = DFFE(\i~3141\ # \state~22\ & \i~321\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \state~22\,
	datac => \i~321\,
	datad => \i~3141\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_addr_cnt_0);

\addr_cnt[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- addr_cnt_1 = DFFE(\i~3144\ # \i~322\ & \state~22\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECEC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~322\,
	datab => \i~3144\,
	datac => \state~22\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_addr_cnt_1);

\addr_cnt[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- addr_cnt_2 = DFFE(\i~3147\ # \state~22\ & \i~323\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \state~22\,
	datac => \i~323\,
	datad => \i~3147\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_addr_cnt_2);

\addr_cnt[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- addr_cnt_3 = DFFE(\i~3150\ # \i~324\ & \state~22\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~324\,
	datac => \state~22\,
	datad => \i~3150\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_addr_cnt_3);

\addr_cnt[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- addr_cnt_4 = DFFE(\i~3153\ # \state~22\ & \i~325\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \state~22\,
	datac => \i~325\,
	datad => \i~3153\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_addr_cnt_4);

\addr_cnt[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- addr_cnt_5 = DFFE(\i~3156\ # \state~22\ & \i~326\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FCCC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~3156\,
	datac => \state~22\,
	datad => \i~326\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_addr_cnt_5);

\addr_cnt[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- addr_cnt_6 = DFFE(\i~3159\ # \i~327\ & \state~22\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~327\,
	datac => \state~22\,
	datad => \i~3159\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_addr_cnt_6);

\addr_cnt[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- addr_cnt_7 = DFFE(\i~3162\ # \state~22\ & \i~328\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FCCC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~3162\,
	datac => \state~22\,
	datad => \i~328\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_addr_cnt_7);

\addr_cnt[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- addr_cnt_8 = DFFE(\i~3165\ # \state~22\ & \i~329\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FCCC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~3165\,
	datac => \state~22\,
	datad => \i~329\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_addr_cnt_8);

\state~23_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~23\ = DFFE(\state~22\ # \state~23\ & \divide_cnt[1]\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FAAA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datac => \state~23\,
	datad => \divide_cnt[1]\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~23\);

\i~3130_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3130\ = !\state~26\ & !\state~25\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0303",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \state~26\,
	datac => \state~25\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3130\);

\i~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~55\ = \state~23\ # \state~21\ # \state~24\ # !\i~3130\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFEF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~23\,
	datab => \state~21\,
	datac => \i~3130\,
	datad => \state~24\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~55\);

\i~3140_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3140\ = \state~25\ # \state~26\ # \state~21\ # \state~23\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~25\,
	datab => \state~26\,
	datac => \state~21\,
	datad => \state~23\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3140\);

\i~289_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~289\ = !\readout_cnt[0]\
-- \i~289COUT\ = CARRY(\readout_cnt[0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "33CC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \readout_cnt[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~289\,
	cout => \i~289COUT\);

\i~402_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~402\ = \state~22\ & \i~289\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \state~22\,
	datad => \i~289\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~402\);

\readout_cnt[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[0]\ = DFFE(\i~402\ # \readout_cnt[0]\ & (\state~24\ # \i~3140\), GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EEEA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~402\,
	datab => \readout_cnt[0]\,
	datac => \state~24\,
	datad => \i~3140\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[0]\);

\i~290_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~290\ = \readout_cnt[1]\ $ \i~289COUT\
-- \i~290COUT\ = CARRY(!\i~289COUT\ # !\readout_cnt[1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \readout_cnt[1]\,
	cin => \i~289COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~290\,
	cout => \i~290COUT\);

\i~401_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~401\ = \state~22\ & \i~290\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \state~22\,
	datad => \i~290\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~401\);

\readout_cnt[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[1]\ = DFFE(\i~401\ # \readout_cnt[1]\ & (\state~24\ # \i~3140\), GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEF0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~24\,
	datab => \i~3140\,
	datac => \i~401\,
	datad => \readout_cnt[1]\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[1]\);

\i~291_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~291\ = \readout_cnt[2]\ $ !\i~290COUT\
-- \i~291COUT\ = CARRY(\readout_cnt[2]\ & !\i~290COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \readout_cnt[2]\,
	cin => \i~290COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~291\,
	cout => \i~291COUT\);

\readout_cnt[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[2]\ = DFFE(\readout_cnt[2]\ & (\i~55\ # \state~22\ & \i~291\) # !\readout_cnt[2]\ & \state~22\ & \i~291\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[2]\,
	datab => \i~55\,
	datac => \state~22\,
	datad => \i~291\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[2]\);

\i~292_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~292\ = \readout_cnt[3]\ $ \i~291COUT\
-- \i~292COUT\ = CARRY(!\i~291COUT\ # !\readout_cnt[3]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \readout_cnt[3]\,
	cin => \i~291COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~292\,
	cout => \i~292COUT\);

\readout_cnt[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[3]\ = DFFE(\readout_cnt[3]\ & (\i~55\ # \i~292\ & \state~22\) # !\readout_cnt[3]\ & \i~292\ & \state~22\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[3]\,
	datab => \i~55\,
	datac => \i~292\,
	datad => \state~22\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[3]\);

\i~293_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~293\ = \readout_cnt[4]\ $ !\i~292COUT\
-- \i~293COUT\ = CARRY(\readout_cnt[4]\ & !\i~292COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[4]\,
	cin => \i~292COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~293\,
	cout => \i~293COUT\);

\readout_cnt[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[4]\ = DFFE(\i~55\ & (\readout_cnt[4]\ # \state~22\ & \i~293\) # !\i~55\ & \state~22\ & \i~293\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~55\,
	datab => \readout_cnt[4]\,
	datac => \state~22\,
	datad => \i~293\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[4]\);

\i~294_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~294\ = \readout_cnt[5]\ $ \i~293COUT\
-- \i~294COUT\ = CARRY(!\i~293COUT\ # !\readout_cnt[5]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \readout_cnt[5]\,
	cin => \i~293COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~294\,
	cout => \i~294COUT\);

\readout_cnt[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[5]\ = DFFE(\readout_cnt[5]\ & (\i~55\ # \state~22\ & \i~294\) # !\readout_cnt[5]\ & \state~22\ & \i~294\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[5]\,
	datab => \i~55\,
	datac => \state~22\,
	datad => \i~294\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[5]\);

\i~295_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~295\ = \readout_cnt[6]\ $ !\i~294COUT\
-- \i~295COUT\ = CARRY(\readout_cnt[6]\ & !\i~294COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \readout_cnt[6]\,
	cin => \i~294COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~295\,
	cout => \i~295COUT\);

\readout_cnt[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[6]\ = DFFE(\readout_cnt[6]\ & (\i~55\ # \state~22\ & \i~295\) # !\readout_cnt[6]\ & \state~22\ & \i~295\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[6]\,
	datab => \state~22\,
	datac => \i~295\,
	datad => \i~55\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[6]\);

\i~296_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~296\ = \readout_cnt[7]\ $ \i~295COUT\
-- \i~296COUT\ = CARRY(!\i~295COUT\ # !\readout_cnt[7]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \readout_cnt[7]\,
	cin => \i~295COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~296\,
	cout => \i~296COUT\);

\readout_cnt[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[7]\ = DFFE(\readout_cnt[7]\ & (\i~55\ # \state~22\ & \i~296\) # !\readout_cnt[7]\ & \state~22\ & \i~296\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[7]\,
	datab => \state~22\,
	datac => \i~296\,
	datad => \i~55\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[7]\);

\i~297_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~297\ = \readout_cnt[8]\ $ !\i~296COUT\
-- \i~297COUT\ = CARRY(\readout_cnt[8]\ & !\i~296COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[8]\,
	cin => \i~296COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~297\,
	cout => \i~297COUT\);

\readout_cnt[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[8]\ = DFFE(\state~22\ & (\i~297\ # \i~55\ & \readout_cnt[8]\) # !\state~22\ & \i~55\ & \readout_cnt[8]\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datab => \i~55\,
	datac => \readout_cnt[8]\,
	datad => \i~297\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[8]\);

\i~298_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~298\ = \readout_cnt[9]\ $ \i~297COUT\
-- \i~298COUT\ = CARRY(!\i~297COUT\ # !\readout_cnt[9]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[9]\,
	cin => \i~297COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~298\,
	cout => \i~298COUT\);

\readout_cnt[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[9]\ = DFFE(\state~22\ & (\i~298\ # \readout_cnt[9]\ & \i~55\) # !\state~22\ & \readout_cnt[9]\ & \i~55\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datab => \readout_cnt[9]\,
	datac => \i~55\,
	datad => \i~298\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[9]\);

\i~299_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~299\ = \readout_cnt[10]\ $ !\i~298COUT\
-- \i~299COUT\ = CARRY(\readout_cnt[10]\ & !\i~298COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[10]\,
	cin => \i~298COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~299\,
	cout => \i~299COUT\);

\readout_cnt[10]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[10]\ = DFFE(\state~22\ & (\i~299\ # \readout_cnt[10]\ & \i~55\) # !\state~22\ & \readout_cnt[10]\ & \i~55\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datab => \readout_cnt[10]\,
	datac => \i~55\,
	datad => \i~299\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[10]\);

\i~300_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~300\ = \readout_cnt[11]\ $ \i~299COUT\
-- \i~300COUT\ = CARRY(!\i~299COUT\ # !\readout_cnt[11]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[11]\,
	cin => \i~299COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~300\,
	cout => \i~300COUT\);

\readout_cnt[11]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[11]\ = DFFE(\state~22\ & (\i~300\ # \readout_cnt[11]\ & \i~55\) # !\state~22\ & \readout_cnt[11]\ & \i~55\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datab => \readout_cnt[11]\,
	datac => \i~55\,
	datad => \i~300\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[11]\);

\i~301_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~301\ = \readout_cnt[12]\ $ !\i~300COUT\
-- \i~301COUT\ = CARRY(\readout_cnt[12]\ & !\i~300COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[12]\,
	cin => \i~300COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~301\,
	cout => \i~301COUT\);

\readout_cnt[12]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[12]\ = DFFE(\state~22\ & (\i~301\ # \readout_cnt[12]\ & \i~55\) # !\state~22\ & \readout_cnt[12]\ & \i~55\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datab => \readout_cnt[12]\,
	datac => \i~55\,
	datad => \i~301\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[12]\);

\i~302_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~302\ = \readout_cnt[13]\ $ \i~301COUT\
-- \i~302COUT\ = CARRY(!\i~301COUT\ # !\readout_cnt[13]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[13]\,
	cin => \i~301COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~302\,
	cout => \i~302COUT\);

\readout_cnt[13]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[13]\ = DFFE(\state~22\ & (\i~302\ # \readout_cnt[13]\ & \i~55\) # !\state~22\ & \readout_cnt[13]\ & \i~55\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datab => \readout_cnt[13]\,
	datac => \i~55\,
	datad => \i~302\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[13]\);

\i~303_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~303\ = \readout_cnt[14]\ $ !\i~302COUT\
-- \i~303COUT\ = CARRY(\readout_cnt[14]\ & !\i~302COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[14]\,
	cin => \i~302COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~303\,
	cout => \i~303COUT\);

\readout_cnt[14]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[14]\ = DFFE(\state~22\ & (\i~303\ # \readout_cnt[14]\ & \i~55\) # !\state~22\ & \readout_cnt[14]\ & \i~55\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datab => \readout_cnt[14]\,
	datac => \i~55\,
	datad => \i~303\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[14]\);

\i~304_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~304\ = \readout_cnt[15]\ $ \i~303COUT\
-- \i~304COUT\ = CARRY(!\i~303COUT\ # !\readout_cnt[15]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[15]\,
	cin => \i~303COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~304\,
	cout => \i~304COUT\);

\readout_cnt[15]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[15]\ = DFFE(\state~22\ & (\i~304\ # \readout_cnt[15]\ & \i~55\) # !\state~22\ & \readout_cnt[15]\ & \i~55\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datab => \readout_cnt[15]\,
	datac => \i~55\,
	datad => \i~304\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[15]\);

\i~305_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~305\ = \readout_cnt[16]\ $ !\i~304COUT\
-- \i~305COUT\ = CARRY(\readout_cnt[16]\ & !\i~304COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \readout_cnt[16]\,
	cin => \i~304COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~305\,
	cout => \i~305COUT\);

\readout_cnt[16]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[16]\ = DFFE(\readout_cnt[16]\ & (\i~55\ # \state~22\ & \i~305\) # !\readout_cnt[16]\ & \state~22\ & \i~305\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[16]\,
	datab => \state~22\,
	datac => \i~305\,
	datad => \i~55\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[16]\);

\i~306_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~306\ = \readout_cnt[17]\ $ \i~305COUT\
-- \i~306COUT\ = CARRY(!\i~305COUT\ # !\readout_cnt[17]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \readout_cnt[17]\,
	cin => \i~305COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~306\,
	cout => \i~306COUT\);

\readout_cnt[17]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[17]\ = DFFE(\readout_cnt[17]\ & (\i~55\ # \state~22\ & \i~306\) # !\readout_cnt[17]\ & \state~22\ & \i~306\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[17]\,
	datab => \state~22\,
	datac => \i~306\,
	datad => \i~55\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[17]\);

\i~307_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~307\ = \readout_cnt[18]\ $ !\i~306COUT\
-- \i~307COUT\ = CARRY(\readout_cnt[18]\ & !\i~306COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[18]\,
	cin => \i~306COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~307\,
	cout => \i~307COUT\);

\readout_cnt[18]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[18]\ = DFFE(\i~55\ & (\readout_cnt[18]\ # \state~22\ & \i~307\) # !\i~55\ & \state~22\ & \i~307\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~55\,
	datab => \readout_cnt[18]\,
	datac => \state~22\,
	datad => \i~307\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[18]\);

\i~308_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~308\ = \readout_cnt[19]\ $ \i~307COUT\
-- \i~308COUT\ = CARRY(!\i~307COUT\ # !\readout_cnt[19]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[19]\,
	cin => \i~307COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~308\,
	cout => \i~308COUT\);

\readout_cnt[19]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[19]\ = DFFE(\i~55\ & (\readout_cnt[19]\ # \state~22\ & \i~308\) # !\i~55\ & \state~22\ & \i~308\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~55\,
	datab => \readout_cnt[19]\,
	datac => \state~22\,
	datad => \i~308\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[19]\);

\i~309_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~309\ = \readout_cnt[20]\ $ !\i~308COUT\
-- \i~309COUT\ = CARRY(\readout_cnt[20]\ & !\i~308COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[20]\,
	cin => \i~308COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~309\,
	cout => \i~309COUT\);

\readout_cnt[20]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[20]\ = DFFE(\i~55\ & (\readout_cnt[20]\ # \state~22\ & \i~309\) # !\i~55\ & \state~22\ & \i~309\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~55\,
	datab => \readout_cnt[20]\,
	datac => \state~22\,
	datad => \i~309\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[20]\);

\i~310_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~310\ = \readout_cnt[21]\ $ \i~309COUT\
-- \i~310COUT\ = CARRY(!\i~309COUT\ # !\readout_cnt[21]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[21]\,
	cin => \i~309COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~310\,
	cout => \i~310COUT\);

\readout_cnt[21]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[21]\ = DFFE(\i~55\ & (\readout_cnt[21]\ # \state~22\ & \i~310\) # !\i~55\ & \state~22\ & \i~310\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~55\,
	datab => \readout_cnt[21]\,
	datac => \state~22\,
	datad => \i~310\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[21]\);

\i~311_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~311\ = \readout_cnt[22]\ $ !\i~310COUT\
-- \i~311COUT\ = CARRY(\readout_cnt[22]\ & !\i~310COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[22]\,
	cin => \i~310COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~311\,
	cout => \i~311COUT\);

\readout_cnt[22]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[22]\ = DFFE(\i~55\ & (\readout_cnt[22]\ # \state~22\ & \i~311\) # !\i~55\ & \state~22\ & \i~311\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~55\,
	datab => \readout_cnt[22]\,
	datac => \state~22\,
	datad => \i~311\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[22]\);

\i~312_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~312\ = \readout_cnt[23]\ $ \i~311COUT\
-- \i~312COUT\ = CARRY(!\i~311COUT\ # !\readout_cnt[23]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[23]\,
	cin => \i~311COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~312\,
	cout => \i~312COUT\);

\readout_cnt[23]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[23]\ = DFFE(\i~55\ & (\readout_cnt[23]\ # \state~22\ & \i~312\) # !\i~55\ & \state~22\ & \i~312\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~55\,
	datab => \readout_cnt[23]\,
	datac => \state~22\,
	datad => \i~312\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[23]\);

\i~313_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~313\ = \readout_cnt[24]\ $ !\i~312COUT\
-- \i~313COUT\ = CARRY(\readout_cnt[24]\ & !\i~312COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \readout_cnt[24]\,
	cin => \i~312COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~313\,
	cout => \i~313COUT\);

\readout_cnt[24]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[24]\ = DFFE(\readout_cnt[24]\ & (\i~55\ # \state~22\ & \i~313\) # !\readout_cnt[24]\ & \state~22\ & \i~313\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[24]\,
	datab => \state~22\,
	datac => \i~313\,
	datad => \i~55\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[24]\);

\i~314_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~314\ = \readout_cnt[25]\ $ \i~313COUT\
-- \i~314COUT\ = CARRY(!\i~313COUT\ # !\readout_cnt[25]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \readout_cnt[25]\,
	cin => \i~313COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~314\,
	cout => \i~314COUT\);

\readout_cnt[25]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[25]\ = DFFE(\readout_cnt[25]\ & (\i~55\ # \state~22\ & \i~314\) # !\readout_cnt[25]\ & \state~22\ & \i~314\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[25]\,
	datab => \state~22\,
	datac => \i~314\,
	datad => \i~55\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[25]\);

\i~315_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~315\ = \readout_cnt[26]\ $ !\i~314COUT\
-- \i~315COUT\ = CARRY(\readout_cnt[26]\ & !\i~314COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[26]\,
	cin => \i~314COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~315\,
	cout => \i~315COUT\);

\readout_cnt[26]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[26]\ = DFFE(\state~22\ & (\i~315\ # \i~55\ & \readout_cnt[26]\) # !\state~22\ & \i~55\ & \readout_cnt[26]\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datab => \i~55\,
	datac => \readout_cnt[26]\,
	datad => \i~315\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[26]\);

\i~316_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~316\ = \readout_cnt[27]\ $ \i~315COUT\
-- \i~316COUT\ = CARRY(!\i~315COUT\ # !\readout_cnt[27]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[27]\,
	cin => \i~315COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~316\,
	cout => \i~316COUT\);

\readout_cnt[27]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[27]\ = DFFE(\state~22\ & (\i~316\ # \i~55\ & \readout_cnt[27]\) # !\state~22\ & \i~55\ & \readout_cnt[27]\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datab => \i~55\,
	datac => \readout_cnt[27]\,
	datad => \i~316\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[27]\);

\i~317_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~317\ = \readout_cnt[28]\ $ !\i~316COUT\
-- \i~317COUT\ = CARRY(\readout_cnt[28]\ & !\i~316COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \readout_cnt[28]\,
	cin => \i~316COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~317\,
	cout => \i~317COUT\);

\readout_cnt[28]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[28]\ = DFFE(\state~22\ & (\i~317\ # \readout_cnt[28]\ & \i~55\) # !\state~22\ & \readout_cnt[28]\ & \i~55\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datab => \readout_cnt[28]\,
	datac => \i~55\,
	datad => \i~317\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[28]\);

\i~318_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~318\ = \readout_cnt[29]\ $ \i~317COUT\
-- \i~318COUT\ = CARRY(!\i~317COUT\ # !\readout_cnt[29]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[29]\,
	cin => \i~317COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~318\,
	cout => \i~318COUT\);

\readout_cnt[29]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[29]\ = DFFE(\state~22\ & (\i~318\ # \i~55\ & \readout_cnt[29]\) # !\state~22\ & \i~55\ & \readout_cnt[29]\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datab => \i~55\,
	datac => \readout_cnt[29]\,
	datad => \i~318\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[29]\);

\i~319_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~319\ = \readout_cnt[30]\ $ !\i~318COUT\
-- \i~319COUT\ = CARRY(\readout_cnt[30]\ & !\i~318COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[30]\,
	cin => \i~318COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~319\,
	cout => \i~319COUT\);

\readout_cnt[30]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[30]\ = DFFE(\i~55\ & (\readout_cnt[30]\ # \state~22\ & \i~319\) # !\i~55\ & \state~22\ & \i~319\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~55\,
	datab => \readout_cnt[30]\,
	datac => \state~22\,
	datad => \i~319\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[30]\);

\i~320_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~320\ = \i~319COUT\ $ \readout_cnt[31]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datad => \readout_cnt[31]\,
	cin => \i~319COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~320\);

\readout_cnt[31]~I\ : apex20ke_lcell 
-- Equation(s):
-- \readout_cnt[31]\ = DFFE(\state~22\ & (\i~320\ # \i~55\ & \readout_cnt[31]\) # !\state~22\ & \i~55\ & \readout_cnt[31]\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datab => \i~55\,
	datac => \readout_cnt[31]\,
	datad => \i~320\,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \readout_cnt[31]\);

\i~3181_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3181\ = !\readout_cnt[28]\ & !\readout_cnt[29]\ & !\readout_cnt[31]\ & !\readout_cnt[30]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[28]\,
	datab => \readout_cnt[29]\,
	datac => \readout_cnt[31]\,
	datad => \readout_cnt[30]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \i~3181\);

\i~3190_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3190\ = (!\readout_cnt[24]\ & !\readout_cnt[26]\ & !\readout_cnt[25]\ & !\readout_cnt[27]\) & CASCADE(\i~3181\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[24]\,
	datab => \readout_cnt[26]\,
	datac => \readout_cnt[25]\,
	datad => \readout_cnt[27]\,
	cascin => \i~3181\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3190\);

\i~3183_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3183\ = !\readout_cnt[22]\ & !\readout_cnt[21]\ & !\readout_cnt[23]\ & !\readout_cnt[20]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[22]\,
	datab => \readout_cnt[21]\,
	datac => \readout_cnt[23]\,
	datad => \readout_cnt[20]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \i~3183\);

\i~3191_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3191\ = (!\readout_cnt[17]\ & !\readout_cnt[19]\ & !\readout_cnt[16]\ & !\readout_cnt[18]\) & CASCADE(\i~3183\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[17]\,
	datab => \readout_cnt[19]\,
	datac => \readout_cnt[16]\,
	datad => \readout_cnt[18]\,
	cascin => \i~3183\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3191\);

\i~3185_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3185\ = !\readout_cnt[14]\ & !\readout_cnt[13]\ & !\readout_cnt[15]\ & !\readout_cnt[12]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[14]\,
	datab => \readout_cnt[13]\,
	datac => \readout_cnt[15]\,
	datad => \readout_cnt[12]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \i~3185\);

\i~3192_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3192\ = (!\readout_cnt[11]\ & !\readout_cnt[10]\ & !\readout_cnt[8]\ & !\readout_cnt[9]\) & CASCADE(\i~3185\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[11]\,
	datab => \readout_cnt[10]\,
	datac => \readout_cnt[8]\,
	datad => \readout_cnt[9]\,
	cascin => \i~3185\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3192\);

\i~3187_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3187\ = \readout_cnt[7]\ & !\readout_cnt[4]\ & !\readout_cnt[6]\ & !\readout_cnt[5]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0002",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[7]\,
	datab => \readout_cnt[4]\,
	datac => \readout_cnt[6]\,
	datad => \readout_cnt[5]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \i~3187\);

\i~3193_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3193\ = (!\readout_cnt[1]\ & !\readout_cnt[2]\ & !\readout_cnt[3]\ & !\readout_cnt[0]\) & CASCADE(\i~3187\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \readout_cnt[1]\,
	datab => \readout_cnt[2]\,
	datac => \readout_cnt[3]\,
	datad => \readout_cnt[0]\,
	cascin => \i~3187\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3193\);

\i~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~2\ = \i~3190\ & \i~3191\ & \i~3192\ & \i~3193\
-- \i~3194\ = \i~3190\ & \i~3191\ & \i~3192\ & \i~3193\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~3190\,
	datab => \i~3191\,
	datac => \i~3192\,
	datad => \i~3193\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~2\,
	cascout => \i~3194\);

\state~24_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~24\ = DFFE((\state~23\ & !\divide_cnt[1]\) & CASCADE(\i~3194\), GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0A0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~23\,
	datac => \divide_cnt[1]\,
	cascin => \i~3194\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~24\);

\state~25_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~25\ = DFFE(\state~24\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \state~24\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~25\);

\state~26_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~26\ = DFFE(\state~25\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \state~25\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~26\);

\state~20_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~20\ = DFFE(!\state~26\ & (\state~20\ # OutputEnable), GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00FC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \state~20\,
	datac => ww_OutputEnable,
	datad => \state~26\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~20\);

\i~3132_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3132\ = !\state~25\ & !\state~26\ & !\state~22\ & !\state~23\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~25\,
	datab => \state~26\,
	datac => \state~22\,
	datad => \state~23\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3132\);

\rst_divide~I\ : apex20ke_lcell 
-- Equation(s):
-- rst_divide = DFFE(rst_divide & (\state~24\ # !\i~3132\) # !\state~20\, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DF55",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~20\,
	datab => \state~24\,
	datac => \i~3132\,
	datad => rst_divide,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => rst_divide);

\divide_cnt[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \divide_cnt[0]\ = DFFE(!rst_divide & !\divide_cnt[0]\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0033",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => rst_divide,
	datad => \divide_cnt[0]\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \divide_cnt[0]\);

\divide_cnt[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \divide_cnt[1]\ = DFFE(!rst_divide & (\divide_cnt[0]\ $ \divide_cnt[1]\), GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "030C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \divide_cnt[0]\,
	datac => rst_divide,
	datad => \divide_cnt[1]\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \divide_cnt[1]\);

\i~3134_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3134\ = \state~21\ # \state~23\ & !\i~2\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CCFC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \state~21\,
	datac => \state~23\,
	datad => \i~2\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3134\);

\state~21_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~21\ = DFFE(\divide_cnt[1]\ & !\state~20\ & OutputEnable # !\divide_cnt[1]\ & (\i~3134\ # !\state~20\ & OutputEnable), GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "7530",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \divide_cnt[1]\,
	datab => \state~20\,
	datac => ww_OutputEnable,
	datad => \i~3134\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~21\);

\state~22_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~22\ = DFFE(\state~21\ & \divide_cnt[1]\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "A0A0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~21\,
	datac => \divide_cnt[1]\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~22\);

\ATWD_D_gray[0]~19_I\ : apex20ke_lcell 
-- Equation(s):
-- \ATWD_D_gray[0]~19\ = \state~22\ & !RST

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0C0C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \state~22\,
	datac => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \ATWD_D_gray[0]~19\);

\i~321_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~321\ = !addr_cnt_0
-- \i~321COUT\ = CARRY(addr_cnt_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "33CC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_addr_cnt_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~321\,
	cout => \i~321COUT\);

\i~3139_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3139\ = !\state~20\ & (addr_cnt_0 # !busy)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00F5",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_busy,
	datac => ww_addr_cnt_0,
	datad => \state~20\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3139\);

\i~3141_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3141\ = \i~3139\ # addr_cnt_0 & (\state~24\ # \i~3140\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FAEA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~3139\,
	datab => \state~24\,
	datac => ww_addr_cnt_0,
	datad => \i~3140\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3141\);

\i~322_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~322\ = addr_cnt_1 $ \i~321COUT\
-- \i~322COUT\ = CARRY(!\i~321COUT\ # !addr_cnt_1)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_addr_cnt_1,
	cin => \i~321COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~322\,
	cout => \i~322COUT\);

\i~3143_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3143\ = !\state~20\ & (addr_cnt_1 # !busy)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00F5",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_busy,
	datac => ww_addr_cnt_1,
	datad => \state~20\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3143\);

\i~3144_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3144\ = \i~3143\ # addr_cnt_1 & (\state~24\ # \i~3140\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFC8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~24\,
	datab => ww_addr_cnt_1,
	datac => \i~3140\,
	datad => \i~3143\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3144\);

\i~323_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~323\ = addr_cnt_2 $ !\i~322COUT\
-- \i~323COUT\ = CARRY(addr_cnt_2 & !\i~322COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_addr_cnt_2,
	cin => \i~322COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~323\,
	cout => \i~323COUT\);

\i~3146_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3146\ = !\state~20\ & (addr_cnt_2 # !busy)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5055",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~20\,
	datac => ww_addr_cnt_2,
	datad => ww_busy,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3146\);

\i~3147_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3147\ = \i~3146\ # addr_cnt_2 & (\i~3140\ # \state~24\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFE0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~3140\,
	datab => \state~24\,
	datac => ww_addr_cnt_2,
	datad => \i~3146\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3147\);

\i~324_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~324\ = addr_cnt_3 $ \i~323COUT\
-- \i~324COUT\ = CARRY(!\i~323COUT\ # !addr_cnt_3)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_addr_cnt_3,
	cin => \i~323COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~324\,
	cout => \i~324COUT\);

\i~3149_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3149\ = !\state~20\ & (addr_cnt_3 # !busy)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00F5",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_busy,
	datac => ww_addr_cnt_3,
	datad => \state~20\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3149\);

\i~3150_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3150\ = \i~3149\ # addr_cnt_3 & (\i~3140\ # \state~24\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFE0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~3140\,
	datab => \state~24\,
	datac => ww_addr_cnt_3,
	datad => \i~3149\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3150\);

\i~325_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~325\ = addr_cnt_4 $ !\i~324COUT\
-- \i~325COUT\ = CARRY(addr_cnt_4 & !\i~324COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_addr_cnt_4,
	cin => \i~324COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~325\,
	cout => \i~325COUT\);

\i~3152_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3152\ = !\state~20\ & (addr_cnt_4 # !busy)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00F5",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_busy,
	datac => ww_addr_cnt_4,
	datad => \state~20\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3152\);

\i~3153_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3153\ = \i~3152\ # addr_cnt_4 & (\i~3140\ # \state~24\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FAEA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~3152\,
	datab => \i~3140\,
	datac => ww_addr_cnt_4,
	datad => \state~24\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3153\);

\i~3155_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3155\ = !\state~20\ & (addr_cnt_5 # !busy)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00CF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_addr_cnt_5,
	datac => ww_busy,
	datad => \state~20\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3155\);

\i~3156_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3156\ = \i~3155\ # addr_cnt_5 & (\state~24\ # \i~3140\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EEEA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~3155\,
	datab => ww_addr_cnt_5,
	datac => \state~24\,
	datad => \i~3140\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3156\);

\i~326_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~326\ = addr_cnt_5 $ \i~325COUT\
-- \i~326COUT\ = CARRY(!\i~325COUT\ # !addr_cnt_5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_addr_cnt_5,
	cin => \i~325COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~326\,
	cout => \i~326COUT\);

\i~327_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~327\ = addr_cnt_6 $ !\i~326COUT\
-- \i~327COUT\ = CARRY(addr_cnt_6 & !\i~326COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_addr_cnt_6,
	cin => \i~326COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~327\,
	cout => \i~327COUT\);

\i~3158_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3158\ = !\state~20\ & (addr_cnt_6 # !busy)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00CF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_addr_cnt_6,
	datac => ww_busy,
	datad => \state~20\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3158\);

\i~3159_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3159\ = \i~3158\ # addr_cnt_6 & (\i~3140\ # \state~24\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFC8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~3140\,
	datab => ww_addr_cnt_6,
	datac => \state~24\,
	datad => \i~3158\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3159\);

\i~3161_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3161\ = !\state~20\ & (addr_cnt_7 # !busy)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00CF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_addr_cnt_7,
	datac => ww_busy,
	datad => \state~20\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3161\);

\i~3162_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3162\ = \i~3161\ # addr_cnt_7 & (\state~24\ # \i~3140\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EEEA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~3161\,
	datab => ww_addr_cnt_7,
	datac => \state~24\,
	datad => \i~3140\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3162\);

\i~328_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~328\ = addr_cnt_7 $ \i~327COUT\
-- \i~328COUT\ = CARRY(!\i~327COUT\ # !addr_cnt_7)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_addr_cnt_7,
	cin => \i~327COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~328\,
	cout => \i~328COUT\);

\i~3164_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3164\ = !\state~20\ & (addr_cnt_8 # !busy)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00AF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_addr_cnt_8,
	datac => ww_busy,
	datad => \state~20\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3164\);

\i~3165_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~3165\ = \i~3164\ # addr_cnt_8 & (\i~3140\ # \state~24\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFA8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_addr_cnt_8,
	datab => \i~3140\,
	datac => \state~24\,
	datad => \i~3164\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~3165\);

\i~329_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~329\ = \i~328COUT\ $ !addr_cnt_8

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "F00F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datad => ww_addr_cnt_8,
	cin => \i~328COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~329\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	gray2bin_1 IS
    PORT (
	ATWD_D_gray_3 : IN std_logic;
	ATWD_D_gray_2 : IN std_logic;
	ATWD_D_gray_1 : IN std_logic;
	ATWD_D_gray_5 : IN std_logic;
	ATWD_D_gray_4 : IN std_logic;
	ATWD_D_gray_8 : IN std_logic;
	ATWD_D_gray_9 : IN std_logic;
	ATWD_D_gray_7 : IN std_logic;
	ATWD_D_gray_6 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	i6 : OUT std_logic;
	i8 : OUT std_logic;
	i11 : OUT std_logic;
	i9 : OUT std_logic;
	i5 : OUT std_logic
	);
END gray2bin_1;

ARCHITECTURE structure OF gray2bin_1 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_ATWD_D_gray_3 : std_logic;
SIGNAL ww_ATWD_D_gray_2 : std_logic;
SIGNAL ww_ATWD_D_gray_1 : std_logic;
SIGNAL ww_ATWD_D_gray_5 : std_logic;
SIGNAL ww_ATWD_D_gray_4 : std_logic;
SIGNAL ww_ATWD_D_gray_8 : std_logic;
SIGNAL ww_ATWD_D_gray_9 : std_logic;
SIGNAL ww_ATWD_D_gray_7 : std_logic;
SIGNAL ww_ATWD_D_gray_6 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_i6 : std_logic;
SIGNAL ww_i8 : std_logic;
SIGNAL ww_i11 : std_logic;
SIGNAL ww_i9 : std_logic;
SIGNAL ww_i5 : std_logic;

BEGIN

ww_ATWD_D_gray_3 <= ATWD_D_gray_3;
ww_ATWD_D_gray_2 <= ATWD_D_gray_2;
ww_ATWD_D_gray_1 <= ATWD_D_gray_1;
ww_ATWD_D_gray_5 <= ATWD_D_gray_5;
ww_ATWD_D_gray_4 <= ATWD_D_gray_4;
ww_ATWD_D_gray_8 <= ATWD_D_gray_8;
ww_ATWD_D_gray_9 <= ATWD_D_gray_9;
ww_ATWD_D_gray_7 <= ATWD_D_gray_7;
ww_ATWD_D_gray_6 <= ATWD_D_gray_6;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
i6 <= ww_i6;
i8 <= ww_i8;
i11 <= ww_i11;
i9 <= ww_i9;
i5 <= ww_i5;

\i6~I\ : apex20ke_lcell 
-- Equation(s):
-- i6 = ATWD_D_gray_7 $ ATWD_D_gray_8 $ ATWD_D_gray_9 $ ATWD_D_gray_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "6996",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_ATWD_D_gray_7,
	datab => ww_ATWD_D_gray_8,
	datac => ww_ATWD_D_gray_9,
	datad => ww_ATWD_D_gray_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_i6);

\i8~I\ : apex20ke_lcell 
-- Equation(s):
-- i8 = i6 $ ATWD_D_gray_5 $ ATWD_D_gray_4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "A55A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_i6,
	datac => ww_ATWD_D_gray_5,
	datad => ww_ATWD_D_gray_4,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_i8);

\i11~I\ : apex20ke_lcell 
-- Equation(s):
-- i11 = ATWD_D_gray_3 $ ATWD_D_gray_1 $ i8 $ ATWD_D_gray_2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "6996",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_ATWD_D_gray_3,
	datab => ww_ATWD_D_gray_1,
	datac => ww_i8,
	datad => ww_ATWD_D_gray_2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_i11);

\i9~I\ : apex20ke_lcell 
-- Equation(s):
-- i9 = ATWD_D_gray_5 $ i6 $ ATWD_D_gray_3 $ ATWD_D_gray_4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "6996",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_ATWD_D_gray_5,
	datab => ww_i6,
	datac => ww_ATWD_D_gray_3,
	datad => ww_ATWD_D_gray_4,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_i9);

\i5~I\ : apex20ke_lcell 
-- Equation(s):
-- i5 = ATWD_D_gray_7 $ ATWD_D_gray_8 $ ATWD_D_gray_9

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C33C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_ATWD_D_gray_7,
	datac => ww_ATWD_D_gray_8,
	datad => ww_ATWD_D_gray_9,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_i5);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	atwd_trigger_1 IS
    PORT (
	CLK40 : IN std_logic;
	RST : IN std_logic;
	command_0_local_8 : IN std_logic;
	command_0_local_9 : IN std_logic;
	command_0_local_11 : IN std_logic;
	command_0_local_15 : IN std_logic;
	i : IN std_logic;
	busy : IN std_logic;
	reset_trig : IN std_logic;
	atwd1_pong_enable : IN std_logic;
	enable_disc : IN std_logic;
	OneSPE : IN std_logic;
	TriggerComplete_1 : IN std_logic;
	ATWDTrigger_sig1 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	ATWDTrigger_sig : OUT std_logic;
	done : OUT std_logic;
	TriggerComplete_in_sync : OUT std_logic
	);
END atwd_trigger_1;

ARCHITECTURE structure OF atwd_trigger_1 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK40 : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_command_0_local_8 : std_logic;
SIGNAL ww_command_0_local_9 : std_logic;
SIGNAL ww_command_0_local_11 : std_logic;
SIGNAL ww_command_0_local_15 : std_logic;
SIGNAL ww_i : std_logic;
SIGNAL ww_busy : std_logic;
SIGNAL ww_reset_trig : std_logic;
SIGNAL ww_atwd1_pong_enable : std_logic;
SIGNAL ww_enable_disc : std_logic;
SIGNAL ww_OneSPE : std_logic;
SIGNAL ww_TriggerComplete_1 : std_logic;
SIGNAL ww_ATWDTrigger_sig1 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_ATWDTrigger_sig : std_logic;
SIGNAL ww_done : std_logic;
SIGNAL ww_TriggerComplete_in_sync : std_logic;
SIGNAL enable_disc_old : std_logic;
SIGNAL enable_disc_sig : std_logic;
SIGNAL enable_LED_old : std_logic;
SIGNAL enable_LED_sig : std_logic;
SIGNAL \i51~31\ : std_logic;
SIGNAL enable_old : std_logic;
SIGNAL \i51~30\ : std_logic;
SIGNAL i52 : std_logic;
SIGNAL \launch_mode[1]\ : std_logic;
SIGNAL discFF : std_logic;
SIGNAL \launch_mode[0]\ : std_logic;
SIGNAL \i11~84\ : std_logic;
SIGNAL TriggerComplete_in_0 : std_logic;
SIGNAL ALT_NOT_ww_RST : std_logic;
SIGNAL ALT_NOT_ww_CLK40 : std_logic;

BEGIN

ww_CLK40 <= CLK40;
ww_RST <= RST;
ww_command_0_local_8 <= command_0_local_8;
ww_command_0_local_9 <= command_0_local_9;
ww_command_0_local_11 <= command_0_local_11;
ww_command_0_local_15 <= command_0_local_15;
ww_i <= i;
ww_busy <= busy;
ww_reset_trig <= reset_trig;
ww_atwd1_pong_enable <= atwd1_pong_enable;
ww_enable_disc <= enable_disc;
ww_OneSPE <= OneSPE;
ww_TriggerComplete_1 <= TriggerComplete_1;
ww_ATWDTrigger_sig1 <= ATWDTrigger_sig1;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
ATWDTrigger_sig <= ww_ATWDTrigger_sig;
done <= ww_done;
TriggerComplete_in_sync <= ww_TriggerComplete_in_sync;
ALT_NOT_ww_RST <= NOT ww_RST;
ALT_NOT_ww_CLK40 <= NOT ww_CLK40;

\ATWDTrigger_sig~COMB_I\ : apex20ke_lcell 
-- Equation(s):
-- ATWDTrigger_sig = \launch_mode[0]\ # \launch_mode[1]\ & discFF

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \launch_mode[1]\,
	datac => discFF,
	datad => \launch_mode[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_ATWDTrigger_sig);

\done~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- done = DFFE(!busy & (\i11~84\ # !enable_disc_sig & !i124), GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F01",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => enable_disc_sig,
	datab => ww_enable_disc,
	datac => ww_busy,
	datad => \i11~84\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_done);

\TriggerComplete_in_sync~I\ : apex20ke_lcell 
-- Equation(s):
-- TriggerComplete_in_sync = DFFE(TriggerComplete_in_0, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => TriggerComplete_in_0,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_TriggerComplete_in_sync);

\enable_disc_old~I\ : apex20ke_lcell 
-- Equation(s):
-- enable_disc_old = DFFE(atwd1_pong_enable & (command_0_local_15 # command_0_local_9) # !atwd1_pong_enable & !command_0_local_15 & command_0_local_9, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_atwd1_pong_enable,
	datac => ww_command_0_local_15,
	datad => ww_command_0_local_9,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => enable_disc_old);

\enable_disc_sig~I\ : apex20ke_lcell 
-- Equation(s):
-- enable_disc_sig = DFFE(enable_disc_sig & (!i124 & !enable_disc_old # !\inst_atwd_trigger|ATWDTrigger_sig~1\) # !enable_disc_sig & !i124 & !enable_disc_old, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0A3B",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => enable_disc_sig,
	datab => ww_enable_disc,
	datac => ww_ATWDTrigger_sig1,
	datad => enable_disc_old,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => enable_disc_sig);

\enable_LED_old~I\ : apex20ke_lcell 
-- Equation(s):
-- enable_LED_old = DFFE(command_0_local_11, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_command_0_local_11,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => enable_LED_old);

\enable_LED_sig~I\ : apex20ke_lcell 
-- Equation(s):
-- enable_LED_sig = DFFE(\inst_atwd_trigger|ATWDTrigger_sig~1\ & command_0_local_11 & !enable_LED_old # !\inst_atwd_trigger|ATWDTrigger_sig~1\ & (enable_LED_sig # command_0_local_11 & !enable_LED_old), GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "50DC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_ATWDTrigger_sig1,
	datab => ww_command_0_local_11,
	datac => enable_LED_sig,
	datad => enable_LED_old,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => enable_LED_sig);

\i51~31_I\ : apex20ke_lcell 
-- Equation(s):
-- \i51~31\ = !busy & enable_LED_sig

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_busy,
	datad => enable_LED_sig,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i51~31\);

\enable_old~I\ : apex20ke_lcell 
-- Equation(s):
-- enable_old = DFFE(command_0_local_8, GLOBAL(outclock1), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_command_0_local_8,
	clk => ww_CLK40,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => enable_old);

\i51~30_I\ : apex20ke_lcell 
-- Equation(s):
-- \i51~30\ = !busy & command_0_local_8 & !enable_old

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0050",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_busy,
	datac => ww_command_0_local_8,
	datad => enable_old,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i51~30\);

\i52~I\ : apex20ke_lcell 
-- Equation(s):
-- i52 = \inst_atwd_trigger|ATWDTrigger_sig~1\ # \i51~30\ # \i51~31\ & i

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEFA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_ATWDTrigger_sig1,
	datab => \i51~31\,
	datac => \i51~30\,
	datad => ww_i,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i52);

\launch_mode[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \launch_mode[1]\ = DFFE(!reset_trig & (i52 # !busy & enable_disc_sig), !GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3310",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_busy,
	datab => ww_reset_trig,
	datac => enable_disc_sig,
	datad => i52,
	clk => ALT_NOT_ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \launch_mode[1]\);

\discFF~I\ : apex20ke_lcell 
-- Equation(s):
-- discFF = DFFE(VCC, GLOBAL(\OneSPE~combout\), !i124, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	clk => ww_OneSPE,
	aclr => ww_enable_disc,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => discFF);

\launch_mode[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \launch_mode[0]\ = DFFE(!reset_trig & i52, !GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reset_trig,
	datad => i52,
	clk => ALT_NOT_ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \launch_mode[0]\);

\i11~84_I\ : apex20ke_lcell 
-- Equation(s):
-- \i11~84\ = command_0_local_8 # command_0_local_11 & !enable_LED_sig

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AEAE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_0_local_8,
	datab => ww_command_0_local_11,
	datac => enable_LED_sig,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i11~84\);

\TriggerComplete_in_0~I\ : apex20ke_lcell 
-- Equation(s):
-- TriggerComplete_in_0 = DFFE(!\TriggerComplete_1~combout\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00FF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_TriggerComplete_1,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => TriggerComplete_in_0);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	altdpram_1 IS
    PORT (
	inclock : IN std_logic;
	outclock : IN std_logic;
	rdaddress : IN std_logic_vector(8 DOWNTO 0);
	data : IN std_logic_vector(15 DOWNTO 0);
	wren : IN std_logic;
	wraddress : IN std_logic_vector(8 DOWNTO 0);
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q : OUT std_logic_vector(15 DOWNTO 0)
	);
END altdpram_1;

ARCHITECTURE structure OF altdpram_1 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_inclock : std_logic;
SIGNAL ww_outclock : std_logic;
SIGNAL ww_rdaddress : std_logic_vector(8 DOWNTO 0);
SIGNAL ww_data : std_logic_vector(15 DOWNTO 0);
SIGNAL ww_wren : std_logic;
SIGNAL ww_wraddress : std_logic_vector(8 DOWNTO 0);
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_q : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][0]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][0]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][1]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][1]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][2]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][2]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][3]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][3]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][4]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][4]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][5]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][5]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][6]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][6]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][7]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][7]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][8]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][8]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][9]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][9]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][10]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][10]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][11]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][11]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][12]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][12]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][13]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][13]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][14]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][14]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][15]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][15]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \segment[0][0]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][1]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][2]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][3]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][4]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][5]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][6]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][7]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][8]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][9]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][10]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][11]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][12]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][13]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][14]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";
SIGNAL \segment[0][15]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001010001010101";

BEGIN

ww_inclock <= inclock;
ww_outclock <= outclock;
ww_rdaddress <= rdaddress;
ww_data <= data;
ww_wren <= wren;
ww_wraddress <= wraddress;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
q <= ww_q;

\ww_segment[0][0]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][0]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][1]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][1]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][2]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][2]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][3]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][3]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][4]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][4]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][5]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][5]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][6]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][6]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][7]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][7]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][8]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][8]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][9]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][9]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][10]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][10]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][11]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][11]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][12]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][12]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][13]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][13]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][14]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][14]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\ww_segment[0][15]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][15]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

\segment[0][0]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "atwd:atwd1|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 0,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(0),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][0]_waddr\,
	raddr => \ww_segment[0][0]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][0]_modesel\,
	dataout => ww_q(0));

\segment[0][1]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "atwd:atwd1|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 1,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(1),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][1]_waddr\,
	raddr => \ww_segment[0][1]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][1]_modesel\,
	dataout => ww_q(1));

\segment[0][2]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "atwd:atwd1|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 2,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(2),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][2]_waddr\,
	raddr => \ww_segment[0][2]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][2]_modesel\,
	dataout => ww_q(2));

\segment[0][3]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "atwd:atwd1|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 3,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(3),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][3]_waddr\,
	raddr => \ww_segment[0][3]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][3]_modesel\,
	dataout => ww_q(3));

\segment[0][4]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "atwd:atwd1|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 4,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(4),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][4]_waddr\,
	raddr => \ww_segment[0][4]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][4]_modesel\,
	dataout => ww_q(4));

\segment[0][5]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "atwd:atwd1|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 5,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(5),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][5]_waddr\,
	raddr => \ww_segment[0][5]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][5]_modesel\,
	dataout => ww_q(5));

\segment[0][6]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "atwd:atwd1|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 6,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(6),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][6]_waddr\,
	raddr => \ww_segment[0][6]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][6]_modesel\,
	dataout => ww_q(6));

\segment[0][7]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "atwd:atwd1|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 7,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(7),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][7]_waddr\,
	raddr => \ww_segment[0][7]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][7]_modesel\,
	dataout => ww_q(7));

\segment[0][8]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "atwd:atwd1|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 8,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(8),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][8]_waddr\,
	raddr => \ww_segment[0][8]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][8]_modesel\,
	dataout => ww_q(8));

\segment[0][9]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "atwd:atwd1|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 9,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(9),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][9]_waddr\,
	raddr => \ww_segment[0][9]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][9]_modesel\,
	dataout => ww_q(9));

\segment[0][10]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "atwd:atwd1|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 10,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(10),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][10]_waddr\,
	raddr => \ww_segment[0][10]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][10]_modesel\,
	dataout => ww_q(10));

\segment[0][11]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "atwd:atwd1|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 11,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(11),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][11]_waddr\,
	raddr => \ww_segment[0][11]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][11]_modesel\,
	dataout => ww_q(11));

\segment[0][12]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "atwd:atwd1|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 12,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(12),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][12]_waddr\,
	raddr => \ww_segment[0][12]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][12]_modesel\,
	dataout => ww_q(12));

\segment[0][13]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "atwd:atwd1|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 13,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(13),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][13]_waddr\,
	raddr => \ww_segment[0][13]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][13]_modesel\,
	dataout => ww_q(13));

\segment[0][14]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "atwd:atwd1|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 14,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(14),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][14]_waddr\,
	raddr => \ww_segment[0][14]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][14]_modesel\,
	dataout => ww_q(14));

\segment[0][15]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "atwd:atwd1|com_adc_mem:inst_com_adc_mem|lpm_ram_dp:lpm_ram_dp_component|altdpram:sram|content",
	init_file => "none",
	logical_ram_depth => 512,
	logical_ram_width => 16,
	address_width => 9,
	first_address => 0,
	last_address => 511,
	bit_number => 15,
	data_in_clock => "clock0",
	data_in_clear => "none",
	write_logic_clock => "clock0",
	write_logic_clear => "none",
	read_enable_clock => "clock1",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "none",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(15),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	we => ww_wren,
	re => VCC,
	waddr => \ww_segment[0][15]_waddr\,
	raddr => \ww_segment[0][15]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][15]_modesel\,
	dataout => ww_q(15));
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_ram_dp_1 IS
    PORT (
	wrclock : IN std_logic;
	rdaddress : IN std_logic_vector(8 DOWNTO 0);
	data : IN std_logic_vector(15 DOWNTO 0);
	wren : IN std_logic;
	wraddress : IN std_logic_vector(8 DOWNTO 0);
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q : OUT std_logic_vector(15 DOWNTO 0)
	);
END lpm_ram_dp_1;

ARCHITECTURE structure OF lpm_ram_dp_1 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_wrclock : std_logic;
SIGNAL ww_rdaddress : std_logic_vector(8 DOWNTO 0);
SIGNAL ww_data : std_logic_vector(15 DOWNTO 0);
SIGNAL ww_wren : std_logic;
SIGNAL ww_wraddress : std_logic_vector(8 DOWNTO 0);
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_q : std_logic_vector(15 DOWNTO 0);
SIGNAL ww_sram_rdaddress : std_logic_vector(8 DOWNTO 0);
SIGNAL ww_sram_data : std_logic_vector(15 DOWNTO 0);
SIGNAL ww_sram_wraddress : std_logic_vector(8 DOWNTO 0);
SIGNAL ww_sram_q : std_logic_vector(15 DOWNTO 0);

COMPONENT altdpram_1
    PORT (
	inclock : IN std_logic;
	outclock : IN std_logic;
	rdaddress : IN std_logic_vector(8 DOWNTO 0);
	data : IN std_logic_vector(15 DOWNTO 0);
	wren : IN std_logic;
	wraddress : IN std_logic_vector(8 DOWNTO 0);
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q : OUT std_logic_vector(15 DOWNTO 0));
END COMPONENT;

BEGIN

ww_wrclock <= wrclock;
ww_rdaddress <= rdaddress;
ww_data <= data;
ww_wren <= wren;
ww_wraddress <= wraddress;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
q <= ww_q;

ww_sram_rdaddress <= (ww_rdaddress(8) & ww_rdaddress(7) & ww_rdaddress(6) & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & ww_rdaddress(0));

ww_sram_data <= (ww_data(15) & ww_data(14) & ww_data(13) & ww_data(12) & ww_data(11) & ww_data(10) & ww_data(9) & ww_data(8) & ww_data(7) & ww_data(6) & ww_data(5) & ww_data(4) & ww_data(3) & ww_data(2) & ww_data(1) & ww_data(0)
);

ww_sram_wraddress <= (ww_wraddress(8) & ww_wraddress(7) & ww_wraddress(6) & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

ww_q(0) <= ww_sram_q(0);
ww_q(1) <= ww_sram_q(1);
ww_q(2) <= ww_sram_q(2);
ww_q(3) <= ww_sram_q(3);
ww_q(4) <= ww_sram_q(4);
ww_q(5) <= ww_sram_q(5);
ww_q(6) <= ww_sram_q(6);
ww_q(7) <= ww_sram_q(7);
ww_q(8) <= ww_sram_q(8);
ww_q(9) <= ww_sram_q(9);
ww_q(10) <= ww_sram_q(10);
ww_q(11) <= ww_sram_q(11);
ww_q(12) <= ww_sram_q(12);
ww_q(13) <= ww_sram_q(13);
ww_q(14) <= ww_sram_q(14);
ww_q(15) <= ww_sram_q(15);
sram : altdpram_1
PORT MAP (
	inclock => ww_wrclock,
	outclock => ww_wrclock,
	rdaddress => ww_sram_rdaddress,
	data => ww_sram_data,
	wren => ww_wren,
	wraddress => ww_sram_wraddress,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	q => ww_sram_q);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	com_adc_mem_1 IS
    PORT (
	outclock1 : IN std_logic;
	reg_address_3 : IN std_logic;
	reg_address_4 : IN std_logic;
	reg_address_5 : IN std_logic;
	reg_address_6 : IN std_logic;
	reg_address_2 : IN std_logic;
	reg_address_7 : IN std_logic;
	reg_address_8 : IN std_logic;
	reg_address_9 : IN std_logic;
	reg_address_10 : IN std_logic;
	i25 : IN std_logic;
	i69 : IN std_logic;
	i58 : IN std_logic;
	i57 : IN std_logic;
	i56 : IN std_logic;
	i55 : IN std_logic;
	i54 : IN std_logic;
	i53 : IN std_logic;
	i52 : IN std_logic;
	i51 : IN std_logic;
	i50 : IN std_logic;
	i24 : IN std_logic;
	i23 : IN std_logic;
	i22 : IN std_logic;
	i21 : IN std_logic;
	i20 : IN std_logic;
	i19 : IN std_logic;
	i18 : IN std_logic;
	i17 : IN std_logic;
	i16 : IN std_logic;
	i42 : IN std_logic;
	i41 : IN std_logic;
	i40 : IN std_logic;
	i39 : IN std_logic;
	i38 : IN std_logic;
	i37 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q_0 : OUT std_logic;
	q_1 : OUT std_logic;
	q_2 : OUT std_logic;
	q_3 : OUT std_logic;
	q_4 : OUT std_logic;
	q_5 : OUT std_logic;
	q_6 : OUT std_logic;
	q_7 : OUT std_logic;
	q_8 : OUT std_logic;
	q_9 : OUT std_logic;
	q_10 : OUT std_logic;
	q_11 : OUT std_logic;
	q_12 : OUT std_logic;
	q_13 : OUT std_logic;
	q_14 : OUT std_logic;
	q_15 : OUT std_logic
	);
END com_adc_mem_1;

ARCHITECTURE structure OF com_adc_mem_1 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_outclock1 : std_logic;
SIGNAL ww_reg_address_3 : std_logic;
SIGNAL ww_reg_address_4 : std_logic;
SIGNAL ww_reg_address_5 : std_logic;
SIGNAL ww_reg_address_6 : std_logic;
SIGNAL ww_reg_address_2 : std_logic;
SIGNAL ww_reg_address_7 : std_logic;
SIGNAL ww_reg_address_8 : std_logic;
SIGNAL ww_reg_address_9 : std_logic;
SIGNAL ww_reg_address_10 : std_logic;
SIGNAL ww_i25 : std_logic;
SIGNAL ww_i69 : std_logic;
SIGNAL ww_i58 : std_logic;
SIGNAL ww_i57 : std_logic;
SIGNAL ww_i56 : std_logic;
SIGNAL ww_i55 : std_logic;
SIGNAL ww_i54 : std_logic;
SIGNAL ww_i53 : std_logic;
SIGNAL ww_i52 : std_logic;
SIGNAL ww_i51 : std_logic;
SIGNAL ww_i50 : std_logic;
SIGNAL ww_i24 : std_logic;
SIGNAL ww_i23 : std_logic;
SIGNAL ww_i22 : std_logic;
SIGNAL ww_i21 : std_logic;
SIGNAL ww_i20 : std_logic;
SIGNAL ww_i19 : std_logic;
SIGNAL ww_i18 : std_logic;
SIGNAL ww_i17 : std_logic;
SIGNAL ww_i16 : std_logic;
SIGNAL ww_i42 : std_logic;
SIGNAL ww_i41 : std_logic;
SIGNAL ww_i40 : std_logic;
SIGNAL ww_i39 : std_logic;
SIGNAL ww_i38 : std_logic;
SIGNAL ww_i37 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_q_0 : std_logic;
SIGNAL ww_q_1 : std_logic;
SIGNAL ww_q_2 : std_logic;
SIGNAL ww_q_3 : std_logic;
SIGNAL ww_q_4 : std_logic;
SIGNAL ww_q_5 : std_logic;
SIGNAL ww_q_6 : std_logic;
SIGNAL ww_q_7 : std_logic;
SIGNAL ww_q_8 : std_logic;
SIGNAL ww_q_9 : std_logic;
SIGNAL ww_q_10 : std_logic;
SIGNAL ww_q_11 : std_logic;
SIGNAL ww_q_12 : std_logic;
SIGNAL ww_q_13 : std_logic;
SIGNAL ww_q_14 : std_logic;
SIGNAL ww_q_15 : std_logic;
SIGNAL ww_lpm_ram_dp_component_rdaddress : std_logic_vector(8 DOWNTO 0);
SIGNAL ww_lpm_ram_dp_component_data : std_logic_vector(15 DOWNTO 0);
SIGNAL ww_lpm_ram_dp_component_wraddress : std_logic_vector(8 DOWNTO 0);
SIGNAL ww_lpm_ram_dp_component_q : std_logic_vector(15 DOWNTO 0);

COMPONENT lpm_ram_dp_1
    PORT (
	wrclock : IN std_logic;
	rdaddress : IN std_logic_vector(8 DOWNTO 0);
	data : IN std_logic_vector(15 DOWNTO 0);
	wren : IN std_logic;
	wraddress : IN std_logic_vector(8 DOWNTO 0);
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q : OUT std_logic_vector(15 DOWNTO 0));
END COMPONENT;

BEGIN

ww_outclock1 <= outclock1;
ww_reg_address_3 <= reg_address_3;
ww_reg_address_4 <= reg_address_4;
ww_reg_address_5 <= reg_address_5;
ww_reg_address_6 <= reg_address_6;
ww_reg_address_2 <= reg_address_2;
ww_reg_address_7 <= reg_address_7;
ww_reg_address_8 <= reg_address_8;
ww_reg_address_9 <= reg_address_9;
ww_reg_address_10 <= reg_address_10;
ww_i25 <= i25;
ww_i69 <= i69;
ww_i58 <= i58;
ww_i57 <= i57;
ww_i56 <= i56;
ww_i55 <= i55;
ww_i54 <= i54;
ww_i53 <= i53;
ww_i52 <= i52;
ww_i51 <= i51;
ww_i50 <= i50;
ww_i24 <= i24;
ww_i23 <= i23;
ww_i22 <= i22;
ww_i21 <= i21;
ww_i20 <= i20;
ww_i19 <= i19;
ww_i18 <= i18;
ww_i17 <= i17;
ww_i16 <= i16;
ww_i42 <= i42;
ww_i41 <= i41;
ww_i40 <= i40;
ww_i39 <= i39;
ww_i38 <= i38;
ww_i37 <= i37;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
q_0 <= ww_q_0;
q_1 <= ww_q_1;
q_2 <= ww_q_2;
q_3 <= ww_q_3;
q_4 <= ww_q_4;
q_5 <= ww_q_5;
q_6 <= ww_q_6;
q_7 <= ww_q_7;
q_8 <= ww_q_8;
q_9 <= ww_q_9;
q_10 <= ww_q_10;
q_11 <= ww_q_11;
q_12 <= ww_q_12;
q_13 <= ww_q_13;
q_14 <= ww_q_14;
q_15 <= ww_q_15;

ww_lpm_ram_dp_component_rdaddress <= (ww_reg_address_10 & ww_reg_address_9 & ww_reg_address_8 & ww_reg_address_7 & ww_reg_address_6 & ww_reg_address_5 & ww_reg_address_4 & ww_reg_address_3 & ww_reg_address_2);

ww_lpm_ram_dp_component_data <= (ww_i37 & ww_i38 & ww_i39 & ww_i40 & ww_i41 & ww_i42 & ww_i16 & ww_i17 & ww_i18 & ww_i19 & ww_i20 & ww_i21 & ww_i22 & ww_i23 & ww_i24 & ww_i25);

ww_lpm_ram_dp_component_wraddress <= (ww_i50 & ww_i51 & ww_i52 & ww_i53 & ww_i54 & ww_i55 & ww_i56 & ww_i57 & ww_i58);

ww_q_0 <= ww_lpm_ram_dp_component_q(0);
ww_q_1 <= ww_lpm_ram_dp_component_q(1);
ww_q_2 <= ww_lpm_ram_dp_component_q(2);
ww_q_3 <= ww_lpm_ram_dp_component_q(3);
ww_q_4 <= ww_lpm_ram_dp_component_q(4);
ww_q_5 <= ww_lpm_ram_dp_component_q(5);
ww_q_6 <= ww_lpm_ram_dp_component_q(6);
ww_q_7 <= ww_lpm_ram_dp_component_q(7);
ww_q_8 <= ww_lpm_ram_dp_component_q(8);
ww_q_9 <= ww_lpm_ram_dp_component_q(9);
ww_q_10 <= ww_lpm_ram_dp_component_q(10);
ww_q_11 <= ww_lpm_ram_dp_component_q(11);
ww_q_12 <= ww_lpm_ram_dp_component_q(12);
ww_q_13 <= ww_lpm_ram_dp_component_q(13);
ww_q_14 <= ww_lpm_ram_dp_component_q(14);
ww_q_15 <= ww_lpm_ram_dp_component_q(15);
lpm_ram_dp_component : lpm_ram_dp_1
PORT MAP (
	wrclock => ww_outclock1,
	rdaddress => ww_lpm_ram_dp_component_rdaddress,
	data => ww_lpm_ram_dp_component_data,
	wren => ww_i69,
	wraddress => ww_lpm_ram_dp_component_wraddress,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	q => ww_lpm_ram_dp_component_q);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	atwd_1 IS
    PORT (
	CLK80 : IN std_logic;
	CLK40 : IN std_logic;
	MASTERHWDATA_0 : IN std_logic;
	MASTERHWDATA_1 : IN std_logic;
	MASTERHWDATA_2 : IN std_logic;
	MASTERHWDATA_3 : IN std_logic;
	MASTERHWDATA_4 : IN std_logic;
	MASTERHWDATA_5 : IN std_logic;
	MASTERHWDATA_6 : IN std_logic;
	MASTERHWDATA_7 : IN std_logic;
	MASTERHWDATA_8 : IN std_logic;
	MASTERHWDATA_9 : IN std_logic;
	MASTERHWDATA_10 : IN std_logic;
	MASTERHWDATA_11 : IN std_logic;
	MASTERHWDATA_12 : IN std_logic;
	MASTERHWDATA_13 : IN std_logic;
	MASTERHWDATA_14 : IN std_logic;
	MASTERHWDATA_15 : IN std_logic;
	RST : IN std_logic;
	state : IN std_logic;
	reg_address_3 : IN std_logic;
	reg_address_4 : IN std_logic;
	reg_address_5 : IN std_logic;
	reg_address_6 : IN std_logic;
	reg_address_2 : IN std_logic;
	reg_address_12 : IN std_logic;
	reg_address_14 : IN std_logic;
	command_0_local_8 : IN std_logic;
	command_0_local_9 : IN std_logic;
	command_0_local_11 : IN std_logic;
	command_0_local_15 : IN std_logic;
	i : IN std_logic;
	atwd1_pong_enable : IN std_logic;
	enable_disc : IN std_logic;
	reg_address_7 : IN std_logic;
	reg_address_8 : IN std_logic;
	reg_address_9 : IN std_logic;
	reg_address_10 : IN std_logic;
	dom_id_48 : IN std_logic;
	i3335 : IN std_logic;
	i3342 : IN std_logic;
	OneSPE : IN std_logic;
	ATWD1_D_0 : IN std_logic;
	ATWD1_D_3 : IN std_logic;
	ATWD1_D_2 : IN std_logic;
	ATWD1_D_1 : IN std_logic;
	ATWD1_D_5 : IN std_logic;
	ATWD1_D_4 : IN std_logic;
	ATWD1_D_8 : IN std_logic;
	ATWD1_D_9 : IN std_logic;
	ATWD1_D_7 : IN std_logic;
	ATWD1_D_6 : IN std_logic;
	TriggerComplete_1 : IN std_logic;
	ATWDTrigger_sig1 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	ATWDTrigger_sig : OUT std_logic;
	OutputEnable : OUT std_logic;
	CounterClock : OUT std_logic;
	ShiftClock : OUT std_logic;
	RampSet : OUT std_logic;
	channel_1 : OUT std_logic;
	channel_0 : OUT std_logic;
	ReadWrite : OUT std_logic;
	AnalogReset : OUT std_logic;
	DigitalReset : OUT std_logic;
	DigitalSet : OUT std_logic;
	state1 : OUT std_logic;
	q_0 : OUT std_logic;
	q_1 : OUT std_logic;
	q_2 : OUT std_logic;
	q_3 : OUT std_logic;
	q_4 : OUT std_logic;
	q_5 : OUT std_logic;
	q_6 : OUT std_logic;
	q_7 : OUT std_logic;
	done : OUT std_logic;
	q_8 : OUT std_logic;
	q_9 : OUT std_logic;
	q_10 : OUT std_logic;
	q_11 : OUT std_logic;
	q_12 : OUT std_logic;
	q_13 : OUT std_logic;
	q_14 : OUT std_logic;
	q_15 : OUT std_logic;
	TriggerComplete_in_sync : OUT std_logic
	);
END atwd_1;

ARCHITECTURE structure OF atwd_1 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK80 : std_logic;
SIGNAL ww_CLK40 : std_logic;
SIGNAL ww_MASTERHWDATA_0 : std_logic;
SIGNAL ww_MASTERHWDATA_1 : std_logic;
SIGNAL ww_MASTERHWDATA_2 : std_logic;
SIGNAL ww_MASTERHWDATA_3 : std_logic;
SIGNAL ww_MASTERHWDATA_4 : std_logic;
SIGNAL ww_MASTERHWDATA_5 : std_logic;
SIGNAL ww_MASTERHWDATA_6 : std_logic;
SIGNAL ww_MASTERHWDATA_7 : std_logic;
SIGNAL ww_MASTERHWDATA_8 : std_logic;
SIGNAL ww_MASTERHWDATA_9 : std_logic;
SIGNAL ww_MASTERHWDATA_10 : std_logic;
SIGNAL ww_MASTERHWDATA_11 : std_logic;
SIGNAL ww_MASTERHWDATA_12 : std_logic;
SIGNAL ww_MASTERHWDATA_13 : std_logic;
SIGNAL ww_MASTERHWDATA_14 : std_logic;
SIGNAL ww_MASTERHWDATA_15 : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_state : std_logic;
SIGNAL ww_reg_address_3 : std_logic;
SIGNAL ww_reg_address_4 : std_logic;
SIGNAL ww_reg_address_5 : std_logic;
SIGNAL ww_reg_address_6 : std_logic;
SIGNAL ww_reg_address_2 : std_logic;
SIGNAL ww_reg_address_12 : std_logic;
SIGNAL ww_reg_address_14 : std_logic;
SIGNAL ww_command_0_local_8 : std_logic;
SIGNAL ww_command_0_local_9 : std_logic;
SIGNAL ww_command_0_local_11 : std_logic;
SIGNAL ww_command_0_local_15 : std_logic;
SIGNAL ww_i : std_logic;
SIGNAL ww_atwd1_pong_enable : std_logic;
SIGNAL ww_enable_disc : std_logic;
SIGNAL ww_reg_address_7 : std_logic;
SIGNAL ww_reg_address_8 : std_logic;
SIGNAL ww_reg_address_9 : std_logic;
SIGNAL ww_reg_address_10 : std_logic;
SIGNAL ww_dom_id_48 : std_logic;
SIGNAL ww_i3335 : std_logic;
SIGNAL ww_i3342 : std_logic;
SIGNAL ww_OneSPE : std_logic;
SIGNAL ww_ATWD1_D_0 : std_logic;
SIGNAL ww_ATWD1_D_3 : std_logic;
SIGNAL ww_ATWD1_D_2 : std_logic;
SIGNAL ww_ATWD1_D_1 : std_logic;
SIGNAL ww_ATWD1_D_5 : std_logic;
SIGNAL ww_ATWD1_D_4 : std_logic;
SIGNAL ww_ATWD1_D_8 : std_logic;
SIGNAL ww_ATWD1_D_9 : std_logic;
SIGNAL ww_ATWD1_D_7 : std_logic;
SIGNAL ww_ATWD1_D_6 : std_logic;
SIGNAL ww_TriggerComplete_1 : std_logic;
SIGNAL ww_ATWDTrigger_sig1 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_ATWDTrigger_sig : std_logic;
SIGNAL ww_OutputEnable : std_logic;
SIGNAL ww_CounterClock : std_logic;
SIGNAL ww_ShiftClock : std_logic;
SIGNAL ww_RampSet : std_logic;
SIGNAL ww_channel_1 : std_logic;
SIGNAL ww_channel_0 : std_logic;
SIGNAL ww_ReadWrite : std_logic;
SIGNAL ww_AnalogReset : std_logic;
SIGNAL ww_DigitalReset : std_logic;
SIGNAL ww_DigitalSet : std_logic;
SIGNAL ww_state1 : std_logic;
SIGNAL ww_q_0 : std_logic;
SIGNAL ww_q_1 : std_logic;
SIGNAL ww_q_2 : std_logic;
SIGNAL ww_q_3 : std_logic;
SIGNAL ww_q_4 : std_logic;
SIGNAL ww_q_5 : std_logic;
SIGNAL ww_q_6 : std_logic;
SIGNAL ww_q_7 : std_logic;
SIGNAL ww_done : std_logic;
SIGNAL ww_q_8 : std_logic;
SIGNAL ww_q_9 : std_logic;
SIGNAL ww_q_10 : std_logic;
SIGNAL ww_q_11 : std_logic;
SIGNAL ww_q_12 : std_logic;
SIGNAL ww_q_13 : std_logic;
SIGNAL ww_q_14 : std_logic;
SIGNAL ww_q_15 : std_logic;
SIGNAL ww_TriggerComplete_in_sync : std_logic;
SIGNAL \inst_atwd_control|busy~reg0\ : std_logic;
SIGNAL \inst_atwd_control|reset_trig~reg0\ : std_logic;
SIGNAL \inst_atwd_readout|readout_done~reg0\ : std_logic;
SIGNAL \inst_atwd_readout|ATWD_D_gray[0]~reg0\ : std_logic;
SIGNAL \inst_atwd_readout|ATWD_D_gray[3]~reg0\ : std_logic;
SIGNAL \inst_atwd_readout|ATWD_D_gray[2]~reg0\ : std_logic;
SIGNAL \inst_atwd_readout|ATWD_D_gray[1]~reg0\ : std_logic;
SIGNAL \inst_atwd_readout|ATWD_D_gray[5]~reg0\ : std_logic;
SIGNAL \inst_atwd_readout|ATWD_D_gray[4]~reg0\ : std_logic;
SIGNAL \inst_atwd_readout|ATWD_D_gray[8]~reg0\ : std_logic;
SIGNAL \inst_atwd_readout|ATWD_D_gray[9]~reg0\ : std_logic;
SIGNAL \inst_atwd_readout|ATWD_D_gray[7]~reg0\ : std_logic;
SIGNAL \inst_atwd_readout|ATWD_D_gray[6]~reg0\ : std_logic;
SIGNAL \inst_gray2bin|i6\ : std_logic;
SIGNAL \inst_gray2bin|i8\ : std_logic;
SIGNAL \inst_gray2bin|i11\ : std_logic;
SIGNAL \i25~57\ : std_logic;
SIGNAL \inst_atwd_readout|data_valid~reg0\ : std_logic;
SIGNAL \i69~2\ : std_logic;
SIGNAL \inst_atwd_readout|addr_cnt[0]\ : std_logic;
SIGNAL \i58~55\ : std_logic;
SIGNAL \inst_atwd_readout|addr_cnt[1]\ : std_logic;
SIGNAL \i57~55\ : std_logic;
SIGNAL \inst_atwd_readout|addr_cnt[2]\ : std_logic;
SIGNAL \i56~55\ : std_logic;
SIGNAL \inst_atwd_readout|addr_cnt[3]\ : std_logic;
SIGNAL \i55~55\ : std_logic;
SIGNAL \inst_atwd_readout|addr_cnt[4]\ : std_logic;
SIGNAL \i54~55\ : std_logic;
SIGNAL \inst_atwd_readout|addr_cnt[5]\ : std_logic;
SIGNAL \i53~55\ : std_logic;
SIGNAL \inst_atwd_readout|addr_cnt[6]\ : std_logic;
SIGNAL \i52~55\ : std_logic;
SIGNAL \inst_atwd_readout|addr_cnt[7]\ : std_logic;
SIGNAL \i51~55\ : std_logic;
SIGNAL \inst_atwd_readout|addr_cnt[8]\ : std_logic;
SIGNAL \i50~55\ : std_logic;
SIGNAL \i24~9\ : std_logic;
SIGNAL \inst_gray2bin|i9\ : std_logic;
SIGNAL \i23~9\ : std_logic;
SIGNAL \i22~9\ : std_logic;
SIGNAL \i21~9\ : std_logic;
SIGNAL \i20~9\ : std_logic;
SIGNAL \i19~9\ : std_logic;
SIGNAL \inst_gray2bin|i5\ : std_logic;
SIGNAL \i18~9\ : std_logic;
SIGNAL \i17~59\ : std_logic;
SIGNAL \i16~55\ : std_logic;
SIGNAL \i42~0\ : std_logic;
SIGNAL \i41~0\ : std_logic;
SIGNAL \i40~0\ : std_logic;
SIGNAL \i39~0\ : std_logic;
SIGNAL \i38~0\ : std_logic;
SIGNAL \i37~0\ : std_logic;

COMPONENT atwd_control_1
    PORT (
	CLK80 : IN std_logic;
	CLK40 : IN std_logic;
	RST : IN std_logic;
	state : IN std_logic;
	readout_done : IN std_logic;
	TriggerComplete_in_sync : IN std_logic;
	ATWDTrigger_sig : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	OutputEnable : OUT std_logic;
	CounterClock : OUT std_logic;
	RampSet : OUT std_logic;
	channel_1 : OUT std_logic;
	channel_0 : OUT std_logic;
	ReadWrite : OUT std_logic;
	AnalogReset : OUT std_logic;
	DigitalReset : OUT std_logic;
	DigitalSet : OUT std_logic;
	state1 : OUT std_logic;
	busy : OUT std_logic;
	reset_trig : OUT std_logic);
END COMPONENT;

COMPONENT atwd_readout_1
    PORT (
	CLK40 : IN std_logic;
	OutputEnable : IN std_logic;
	RST : IN std_logic;
	busy : IN std_logic;
	ATWD1_D_0 : IN std_logic;
	ATWD1_D_3 : IN std_logic;
	ATWD1_D_2 : IN std_logic;
	ATWD1_D_1 : IN std_logic;
	ATWD1_D_5 : IN std_logic;
	ATWD1_D_4 : IN std_logic;
	ATWD1_D_8 : IN std_logic;
	ATWD1_D_9 : IN std_logic;
	ATWD1_D_7 : IN std_logic;
	ATWD1_D_6 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	ShiftClock : OUT std_logic;
	readout_done : OUT std_logic;
	ATWD_D_gray_0 : OUT std_logic;
	ATWD_D_gray_3 : OUT std_logic;
	ATWD_D_gray_2 : OUT std_logic;
	ATWD_D_gray_1 : OUT std_logic;
	ATWD_D_gray_5 : OUT std_logic;
	ATWD_D_gray_4 : OUT std_logic;
	ATWD_D_gray_8 : OUT std_logic;
	ATWD_D_gray_9 : OUT std_logic;
	ATWD_D_gray_7 : OUT std_logic;
	ATWD_D_gray_6 : OUT std_logic;
	data_valid : OUT std_logic;
	addr_cnt_0 : OUT std_logic;
	addr_cnt_1 : OUT std_logic;
	addr_cnt_2 : OUT std_logic;
	addr_cnt_3 : OUT std_logic;
	addr_cnt_4 : OUT std_logic;
	addr_cnt_5 : OUT std_logic;
	addr_cnt_6 : OUT std_logic;
	addr_cnt_7 : OUT std_logic;
	addr_cnt_8 : OUT std_logic);
END COMPONENT;

COMPONENT gray2bin_1
    PORT (
	ATWD_D_gray_3 : IN std_logic;
	ATWD_D_gray_2 : IN std_logic;
	ATWD_D_gray_1 : IN std_logic;
	ATWD_D_gray_5 : IN std_logic;
	ATWD_D_gray_4 : IN std_logic;
	ATWD_D_gray_8 : IN std_logic;
	ATWD_D_gray_9 : IN std_logic;
	ATWD_D_gray_7 : IN std_logic;
	ATWD_D_gray_6 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	i6 : OUT std_logic;
	i8 : OUT std_logic;
	i11 : OUT std_logic;
	i9 : OUT std_logic;
	i5 : OUT std_logic);
END COMPONENT;

COMPONENT atwd_trigger_1
    PORT (
	CLK40 : IN std_logic;
	RST : IN std_logic;
	command_0_local_8 : IN std_logic;
	command_0_local_9 : IN std_logic;
	command_0_local_11 : IN std_logic;
	command_0_local_15 : IN std_logic;
	i : IN std_logic;
	busy : IN std_logic;
	reset_trig : IN std_logic;
	atwd1_pong_enable : IN std_logic;
	enable_disc : IN std_logic;
	OneSPE : IN std_logic;
	TriggerComplete_1 : IN std_logic;
	ATWDTrigger_sig1 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	ATWDTrigger_sig : OUT std_logic;
	done : OUT std_logic;
	TriggerComplete_in_sync : OUT std_logic);
END COMPONENT;

COMPONENT com_adc_mem_1
    PORT (
	outclock1 : IN std_logic;
	reg_address_3 : IN std_logic;
	reg_address_4 : IN std_logic;
	reg_address_5 : IN std_logic;
	reg_address_6 : IN std_logic;
	reg_address_2 : IN std_logic;
	reg_address_7 : IN std_logic;
	reg_address_8 : IN std_logic;
	reg_address_9 : IN std_logic;
	reg_address_10 : IN std_logic;
	i25 : IN std_logic;
	i69 : IN std_logic;
	i58 : IN std_logic;
	i57 : IN std_logic;
	i56 : IN std_logic;
	i55 : IN std_logic;
	i54 : IN std_logic;
	i53 : IN std_logic;
	i52 : IN std_logic;
	i51 : IN std_logic;
	i50 : IN std_logic;
	i24 : IN std_logic;
	i23 : IN std_logic;
	i22 : IN std_logic;
	i21 : IN std_logic;
	i20 : IN std_logic;
	i19 : IN std_logic;
	i18 : IN std_logic;
	i17 : IN std_logic;
	i16 : IN std_logic;
	i42 : IN std_logic;
	i41 : IN std_logic;
	i40 : IN std_logic;
	i39 : IN std_logic;
	i38 : IN std_logic;
	i37 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q_0 : OUT std_logic;
	q_1 : OUT std_logic;
	q_2 : OUT std_logic;
	q_3 : OUT std_logic;
	q_4 : OUT std_logic;
	q_5 : OUT std_logic;
	q_6 : OUT std_logic;
	q_7 : OUT std_logic;
	q_8 : OUT std_logic;
	q_9 : OUT std_logic;
	q_10 : OUT std_logic;
	q_11 : OUT std_logic;
	q_12 : OUT std_logic;
	q_13 : OUT std_logic;
	q_14 : OUT std_logic;
	q_15 : OUT std_logic);
END COMPONENT;

BEGIN

ww_CLK80 <= CLK80;
ww_CLK40 <= CLK40;
ww_MASTERHWDATA_0 <= MASTERHWDATA_0;
ww_MASTERHWDATA_1 <= MASTERHWDATA_1;
ww_MASTERHWDATA_2 <= MASTERHWDATA_2;
ww_MASTERHWDATA_3 <= MASTERHWDATA_3;
ww_MASTERHWDATA_4 <= MASTERHWDATA_4;
ww_MASTERHWDATA_5 <= MASTERHWDATA_5;
ww_MASTERHWDATA_6 <= MASTERHWDATA_6;
ww_MASTERHWDATA_7 <= MASTERHWDATA_7;
ww_MASTERHWDATA_8 <= MASTERHWDATA_8;
ww_MASTERHWDATA_9 <= MASTERHWDATA_9;
ww_MASTERHWDATA_10 <= MASTERHWDATA_10;
ww_MASTERHWDATA_11 <= MASTERHWDATA_11;
ww_MASTERHWDATA_12 <= MASTERHWDATA_12;
ww_MASTERHWDATA_13 <= MASTERHWDATA_13;
ww_MASTERHWDATA_14 <= MASTERHWDATA_14;
ww_MASTERHWDATA_15 <= MASTERHWDATA_15;
ww_RST <= RST;
ww_state <= state;
ww_reg_address_3 <= reg_address_3;
ww_reg_address_4 <= reg_address_4;
ww_reg_address_5 <= reg_address_5;
ww_reg_address_6 <= reg_address_6;
ww_reg_address_2 <= reg_address_2;
ww_reg_address_12 <= reg_address_12;
ww_reg_address_14 <= reg_address_14;
ww_command_0_local_8 <= command_0_local_8;
ww_command_0_local_9 <= command_0_local_9;
ww_command_0_local_11 <= command_0_local_11;
ww_command_0_local_15 <= command_0_local_15;
ww_i <= i;
ww_atwd1_pong_enable <= atwd1_pong_enable;
ww_enable_disc <= enable_disc;
ww_reg_address_7 <= reg_address_7;
ww_reg_address_8 <= reg_address_8;
ww_reg_address_9 <= reg_address_9;
ww_reg_address_10 <= reg_address_10;
ww_dom_id_48 <= dom_id_48;
ww_i3335 <= i3335;
ww_i3342 <= i3342;
ww_OneSPE <= OneSPE;
ww_ATWD1_D_0 <= ATWD1_D_0;
ww_ATWD1_D_3 <= ATWD1_D_3;
ww_ATWD1_D_2 <= ATWD1_D_2;
ww_ATWD1_D_1 <= ATWD1_D_1;
ww_ATWD1_D_5 <= ATWD1_D_5;
ww_ATWD1_D_4 <= ATWD1_D_4;
ww_ATWD1_D_8 <= ATWD1_D_8;
ww_ATWD1_D_9 <= ATWD1_D_9;
ww_ATWD1_D_7 <= ATWD1_D_7;
ww_ATWD1_D_6 <= ATWD1_D_6;
ww_TriggerComplete_1 <= TriggerComplete_1;
ww_ATWDTrigger_sig1 <= ATWDTrigger_sig1;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
ATWDTrigger_sig <= ww_ATWDTrigger_sig;
OutputEnable <= ww_OutputEnable;
CounterClock <= ww_CounterClock;
ShiftClock <= ww_ShiftClock;
RampSet <= ww_RampSet;
channel_1 <= ww_channel_1;
channel_0 <= ww_channel_0;
ReadWrite <= ww_ReadWrite;
AnalogReset <= ww_AnalogReset;
DigitalReset <= ww_DigitalReset;
DigitalSet <= ww_DigitalSet;
state1 <= ww_state1;
q_0 <= ww_q_0;
q_1 <= ww_q_1;
q_2 <= ww_q_2;
q_3 <= ww_q_3;
q_4 <= ww_q_4;
q_5 <= ww_q_5;
q_6 <= ww_q_6;
q_7 <= ww_q_7;
done <= ww_done;
q_8 <= ww_q_8;
q_9 <= ww_q_9;
q_10 <= ww_q_10;
q_11 <= ww_q_11;
q_12 <= ww_q_12;
q_13 <= ww_q_13;
q_14 <= ww_q_14;
q_15 <= ww_q_15;
TriggerComplete_in_sync <= ww_TriggerComplete_in_sync;
inst_atwd_control : atwd_control_1
PORT MAP (
	CLK80 => ww_CLK80,
	CLK40 => ww_CLK40,
	RST => ww_RST,
	state => ww_state,
	readout_done => \inst_atwd_readout|readout_done~reg0\,
	TriggerComplete_in_sync => ww_TriggerComplete_in_sync,
	ATWDTrigger_sig => ww_ATWDTrigger_sig1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	OutputEnable => ww_OutputEnable,
	CounterClock => ww_CounterClock,
	RampSet => ww_RampSet,
	channel_1 => ww_channel_1,
	channel_0 => ww_channel_0,
	ReadWrite => ww_ReadWrite,
	AnalogReset => ww_AnalogReset,
	DigitalReset => ww_DigitalReset,
	DigitalSet => ww_DigitalSet,
	state1 => ww_state1,
	busy => \inst_atwd_control|busy~reg0\,
	reset_trig => \inst_atwd_control|reset_trig~reg0\);
inst_atwd_readout : atwd_readout_1
PORT MAP (
	CLK40 => ww_CLK40,
	OutputEnable => ww_OutputEnable,
	RST => ww_RST,
	busy => \inst_atwd_control|busy~reg0\,
	ATWD1_D_0 => ww_ATWD1_D_0,
	ATWD1_D_3 => ww_ATWD1_D_3,
	ATWD1_D_2 => ww_ATWD1_D_2,
	ATWD1_D_1 => ww_ATWD1_D_1,
	ATWD1_D_5 => ww_ATWD1_D_5,
	ATWD1_D_4 => ww_ATWD1_D_4,
	ATWD1_D_8 => ww_ATWD1_D_8,
	ATWD1_D_9 => ww_ATWD1_D_9,
	ATWD1_D_7 => ww_ATWD1_D_7,
	ATWD1_D_6 => ww_ATWD1_D_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	ShiftClock => ww_ShiftClock,
	readout_done => \inst_atwd_readout|readout_done~reg0\,
	ATWD_D_gray_0 => \inst_atwd_readout|ATWD_D_gray[0]~reg0\,
	ATWD_D_gray_3 => \inst_atwd_readout|ATWD_D_gray[3]~reg0\,
	ATWD_D_gray_2 => \inst_atwd_readout|ATWD_D_gray[2]~reg0\,
	ATWD_D_gray_1 => \inst_atwd_readout|ATWD_D_gray[1]~reg0\,
	ATWD_D_gray_5 => \inst_atwd_readout|ATWD_D_gray[5]~reg0\,
	ATWD_D_gray_4 => \inst_atwd_readout|ATWD_D_gray[4]~reg0\,
	ATWD_D_gray_8 => \inst_atwd_readout|ATWD_D_gray[8]~reg0\,
	ATWD_D_gray_9 => \inst_atwd_readout|ATWD_D_gray[9]~reg0\,
	ATWD_D_gray_7 => \inst_atwd_readout|ATWD_D_gray[7]~reg0\,
	ATWD_D_gray_6 => \inst_atwd_readout|ATWD_D_gray[6]~reg0\,
	data_valid => \inst_atwd_readout|data_valid~reg0\,
	addr_cnt_0 => \inst_atwd_readout|addr_cnt[0]\,
	addr_cnt_1 => \inst_atwd_readout|addr_cnt[1]\,
	addr_cnt_2 => \inst_atwd_readout|addr_cnt[2]\,
	addr_cnt_3 => \inst_atwd_readout|addr_cnt[3]\,
	addr_cnt_4 => \inst_atwd_readout|addr_cnt[4]\,
	addr_cnt_5 => \inst_atwd_readout|addr_cnt[5]\,
	addr_cnt_6 => \inst_atwd_readout|addr_cnt[6]\,
	addr_cnt_7 => \inst_atwd_readout|addr_cnt[7]\,
	addr_cnt_8 => \inst_atwd_readout|addr_cnt[8]\);
inst_gray2bin : gray2bin_1
PORT MAP (
	ATWD_D_gray_3 => \inst_atwd_readout|ATWD_D_gray[3]~reg0\,
	ATWD_D_gray_2 => \inst_atwd_readout|ATWD_D_gray[2]~reg0\,
	ATWD_D_gray_1 => \inst_atwd_readout|ATWD_D_gray[1]~reg0\,
	ATWD_D_gray_5 => \inst_atwd_readout|ATWD_D_gray[5]~reg0\,
	ATWD_D_gray_4 => \inst_atwd_readout|ATWD_D_gray[4]~reg0\,
	ATWD_D_gray_8 => \inst_atwd_readout|ATWD_D_gray[8]~reg0\,
	ATWD_D_gray_9 => \inst_atwd_readout|ATWD_D_gray[9]~reg0\,
	ATWD_D_gray_7 => \inst_atwd_readout|ATWD_D_gray[7]~reg0\,
	ATWD_D_gray_6 => \inst_atwd_readout|ATWD_D_gray[6]~reg0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	i6 => \inst_gray2bin|i6\,
	i8 => \inst_gray2bin|i8\,
	i11 => \inst_gray2bin|i11\,
	i9 => \inst_gray2bin|i9\,
	i5 => \inst_gray2bin|i5\);
inst_atwd_trigger : atwd_trigger_1
PORT MAP (
	CLK40 => ww_CLK40,
	RST => ww_RST,
	command_0_local_8 => ww_command_0_local_8,
	command_0_local_9 => ww_command_0_local_9,
	command_0_local_11 => ww_command_0_local_11,
	command_0_local_15 => ww_command_0_local_15,
	i => ww_i,
	busy => \inst_atwd_control|busy~reg0\,
	reset_trig => \inst_atwd_control|reset_trig~reg0\,
	atwd1_pong_enable => ww_atwd1_pong_enable,
	enable_disc => ww_enable_disc,
	OneSPE => ww_OneSPE,
	TriggerComplete_1 => ww_TriggerComplete_1,
	ATWDTrigger_sig1 => ww_ATWDTrigger_sig1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	ATWDTrigger_sig => ww_ATWDTrigger_sig,
	done => ww_done,
	TriggerComplete_in_sync => ww_TriggerComplete_in_sync);
inst_com_adc_mem : com_adc_mem_1
PORT MAP (
	outclock1 => ww_CLK40,
	reg_address_3 => ww_reg_address_3,
	reg_address_4 => ww_reg_address_4,
	reg_address_5 => ww_reg_address_5,
	reg_address_6 => ww_reg_address_6,
	reg_address_2 => ww_reg_address_2,
	reg_address_7 => ww_reg_address_7,
	reg_address_8 => ww_reg_address_8,
	reg_address_9 => ww_reg_address_9,
	reg_address_10 => ww_reg_address_10,
	i25 => \i25~57\,
	i69 => \i69~2\,
	i58 => \i58~55\,
	i57 => \i57~55\,
	i56 => \i56~55\,
	i55 => \i55~55\,
	i54 => \i54~55\,
	i53 => \i53~55\,
	i52 => \i52~55\,
	i51 => \i51~55\,
	i50 => \i50~55\,
	i24 => \i24~9\,
	i23 => \i23~9\,
	i22 => \i22~9\,
	i21 => \i21~9\,
	i20 => \i20~9\,
	i19 => \i19~9\,
	i18 => \i18~9\,
	i17 => \i17~59\,
	i16 => \i16~55\,
	i42 => \i42~0\,
	i41 => \i41~0\,
	i40 => \i40~0\,
	i39 => \i39~0\,
	i38 => \i38~0\,
	i37 => \i37~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	q_0 => ww_q_0,
	q_1 => ww_q_1,
	q_2 => ww_q_2,
	q_3 => ww_q_3,
	q_4 => ww_q_4,
	q_5 => ww_q_5,
	q_6 => ww_q_6,
	q_7 => ww_q_7,
	q_8 => ww_q_8,
	q_9 => ww_q_9,
	q_10 => ww_q_10,
	q_11 => ww_q_11,
	q_12 => ww_q_12,
	q_13 => ww_q_13,
	q_14 => ww_q_14,
	q_15 => ww_q_15);

\i25~57_I\ : apex20ke_lcell 
-- Equation(s):
-- \i25~57\ = i3342 & MASTERHWDATA # !i3342 & (i11 $ ATWD_D_gray_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AA3C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_MASTERHWDATA_0,
	datab => \inst_gray2bin|i11\,
	datac => \inst_atwd_readout|ATWD_D_gray[0]~reg0\,
	datad => ww_i3342,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i25~57\);

\i69~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \i69~2\ = data_valid # reg_address_14 & dom_id_48 & reg_address_12

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F8F0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_14,
	datab => ww_dom_id_48,
	datac => \inst_atwd_readout|data_valid~reg0\,
	datad => ww_reg_address_12,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i69~2\);

\i58~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i58~55\ = reg_address_12 & (i33351 & reg_address_2 # !i33351 & addr_cnt_0) # !reg_address_12 & addr_cnt_0

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E4CC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_12,
	datab => \inst_atwd_readout|addr_cnt[0]\,
	datac => ww_reg_address_2,
	datad => ww_i3335,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i58~55\);

\i57~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i57~55\ = reg_address_12 & (i33351 & reg_address_3 # !i33351 & addr_cnt_1) # !reg_address_12 & addr_cnt_1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DF80",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_12,
	datab => ww_reg_address_3,
	datac => ww_i3335,
	datad => \inst_atwd_readout|addr_cnt[1]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i57~55\);

\i56~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i56~55\ = i33351 & (reg_address_12 & reg_address_4 # !reg_address_12 & addr_cnt_2) # !i33351 & addr_cnt_2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DF80",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_i3335,
	datab => ww_reg_address_4,
	datac => ww_reg_address_12,
	datad => \inst_atwd_readout|addr_cnt[2]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i56~55\);

\i55~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i55~55\ = reg_address_12 & (i33351 & reg_address_5 # !i33351 & addr_cnt_3) # !reg_address_12 & addr_cnt_3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E4CC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_12,
	datab => \inst_atwd_readout|addr_cnt[3]\,
	datac => ww_reg_address_5,
	datad => ww_i3335,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i55~55\);

\i54~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i54~55\ = reg_address_12 & (i33351 & reg_address_6 # !i33351 & addr_cnt_4) # !reg_address_12 & addr_cnt_4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DF80",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_12,
	datab => ww_reg_address_6,
	datac => ww_i3335,
	datad => \inst_atwd_readout|addr_cnt[4]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i54~55\);

\i53~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i53~55\ = i33351 & (reg_address_12 & reg_address_7 # !reg_address_12 & addr_cnt_5) # !i33351 & addr_cnt_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DF80",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_i3335,
	datab => ww_reg_address_7,
	datac => ww_reg_address_12,
	datad => \inst_atwd_readout|addr_cnt[5]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i53~55\);

\i52~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i52~55\ = reg_address_12 & (i33351 & reg_address_8 # !i33351 & addr_cnt_6) # !reg_address_12 & addr_cnt_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DF80",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_12,
	datab => ww_reg_address_8,
	datac => ww_i3335,
	datad => \inst_atwd_readout|addr_cnt[6]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i52~55\);

\i51~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i51~55\ = reg_address_12 & (i33351 & reg_address_9 # !i33351 & addr_cnt_7) # !reg_address_12 & addr_cnt_7

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CAAA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \inst_atwd_readout|addr_cnt[7]\,
	datab => ww_reg_address_9,
	datac => ww_reg_address_12,
	datad => ww_i3335,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i51~55\);

\i50~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i50~55\ = reg_address_12 & (i33351 & reg_address_10 # !i33351 & addr_cnt_8) # !reg_address_12 & addr_cnt_8

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DF80",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_12,
	datab => ww_reg_address_10,
	datac => ww_i3335,
	datad => \inst_atwd_readout|addr_cnt[8]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i50~55\);

\i24~9_I\ : apex20ke_lcell 
-- Equation(s):
-- \i24~9\ = reg_address_12 & (i33351 & MASTERHWDATA # !i33351 & i11) # !reg_address_12 & i11

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ACCC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_MASTERHWDATA_1,
	datab => \inst_gray2bin|i11\,
	datac => ww_reg_address_12,
	datad => ww_i3335,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i24~9\);

\i23~9_I\ : apex20ke_lcell 
-- Equation(s):
-- \i23~9\ = i3342 & MASTERHWDATA # !i3342 & (i9 $ ATWD_D_gray_2)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B1E4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_i3342,
	datab => \inst_gray2bin|i9\,
	datac => ww_MASTERHWDATA_2,
	datad => \inst_atwd_readout|ATWD_D_gray[2]~reg0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i23~9\);

\i22~9_I\ : apex20ke_lcell 
-- Equation(s):
-- \i22~9\ = reg_address_12 & (i33351 & MASTERHWDATA # !i33351 & i9) # !reg_address_12 & i9

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ACCC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_MASTERHWDATA_3,
	datab => \inst_gray2bin|i9\,
	datac => ww_reg_address_12,
	datad => ww_i3335,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i22~9\);

\i21~9_I\ : apex20ke_lcell 
-- Equation(s):
-- \i21~9\ = i33351 & (reg_address_12 & MASTERHWDATA # !reg_address_12 & i8) # !i33351 & i8

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EA2A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \inst_gray2bin|i8\,
	datab => ww_i3335,
	datac => ww_reg_address_12,
	datad => ww_MASTERHWDATA_4,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i21~9\);

\i20~9_I\ : apex20ke_lcell 
-- Equation(s):
-- \i20~9\ = i3342 & MASTERHWDATA # !i3342 & (ATWD_D_gray_5 $ i6)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AA3C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_MASTERHWDATA_5,
	datab => \inst_atwd_readout|ATWD_D_gray[5]~reg0\,
	datac => \inst_gray2bin|i6\,
	datad => ww_i3342,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i20~9\);

\i19~9_I\ : apex20ke_lcell 
-- Equation(s):
-- \i19~9\ = reg_address_12 & (i33351 & MASTERHWDATA # !i33351 & i6) # !reg_address_12 & i6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EA2A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \inst_gray2bin|i6\,
	datab => ww_reg_address_12,
	datac => ww_i3335,
	datad => ww_MASTERHWDATA_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i19~9\);

\i18~9_I\ : apex20ke_lcell 
-- Equation(s):
-- \i18~9\ = i33351 & (reg_address_12 & MASTERHWDATA # !reg_address_12 & i5) # !i33351 & i5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F870",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_i3335,
	datab => ww_reg_address_12,
	datac => \inst_gray2bin|i5\,
	datad => ww_MASTERHWDATA_7,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i18~9\);

\i17~59_I\ : apex20ke_lcell 
-- Equation(s):
-- \i17~59\ = i3342 & MASTERHWDATA # !i3342 & (ATWD_D_gray_9 $ ATWD_D_gray_8)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F066",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \inst_atwd_readout|ATWD_D_gray[9]~reg0\,
	datab => \inst_atwd_readout|ATWD_D_gray[8]~reg0\,
	datac => ww_MASTERHWDATA_8,
	datad => ww_i3342,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i17~59\);

\i16~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \i16~55\ = reg_address_12 & (i33351 & MASTERHWDATA # !i33351 & ATWD_D_gray_9) # !reg_address_12 & ATWD_D_gray_9

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EA2A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \inst_atwd_readout|ATWD_D_gray[9]~reg0\,
	datab => ww_reg_address_12,
	datac => ww_i3335,
	datad => ww_MASTERHWDATA_9,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i16~55\);

\i42~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \i42~0\ = reg_address_12 & reg_address_14 & dom_id_48 & MASTERHWDATA

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_12,
	datab => ww_reg_address_14,
	datac => ww_dom_id_48,
	datad => ww_MASTERHWDATA_10,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i42~0\);

\i41~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \i41~0\ = reg_address_14 & dom_id_48 & reg_address_12 & MASTERHWDATA

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_14,
	datab => ww_dom_id_48,
	datac => ww_reg_address_12,
	datad => ww_MASTERHWDATA_11,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i41~0\);

\i40~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \i40~0\ = reg_address_12 & reg_address_14 & dom_id_48 & MASTERHWDATA

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_12,
	datab => ww_reg_address_14,
	datac => ww_dom_id_48,
	datad => ww_MASTERHWDATA_12,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i40~0\);

\i39~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \i39~0\ = reg_address_12 & reg_address_14 & dom_id_48 & MASTERHWDATA

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_12,
	datab => ww_reg_address_14,
	datac => ww_dom_id_48,
	datad => ww_MASTERHWDATA_13,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i39~0\);

\i38~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \i38~0\ = reg_address_14 & dom_id_48 & reg_address_12 & MASTERHWDATA

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_14,
	datab => ww_dom_id_48,
	datac => ww_reg_address_12,
	datad => ww_MASTERHWDATA_14,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i38~0\);

\i37~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \i37~0\ = reg_address_14 & dom_id_48 & reg_address_12 & MASTERHWDATA

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_reg_address_14,
	datab => ww_dom_id_48,
	datac => ww_reg_address_12,
	datad => ww_MASTERHWDATA_15,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i37~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	master_data_source IS
    PORT (
	CLK : IN std_logic;
	SLAVEHREADYO : IN std_logic;
	RST : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	wdata_0 : OUT std_logic;
	wdata_1 : OUT std_logic;
	wdata_2 : OUT std_logic;
	wdata_3 : OUT std_logic;
	wdata_4 : OUT std_logic;
	wdata_5 : OUT std_logic;
	wdata_6 : OUT std_logic;
	wdata_7 : OUT std_logic;
	wdata_8 : OUT std_logic;
	wdata_9 : OUT std_logic;
	wdata_10 : OUT std_logic;
	wdata_11 : OUT std_logic;
	wdata_12 : OUT std_logic;
	wdata_13 : OUT std_logic;
	wdata_14 : OUT std_logic;
	wdata_15 : OUT std_logic;
	wdata_16 : OUT std_logic;
	wdata_17 : OUT std_logic;
	wdata_18 : OUT std_logic;
	wdata_19 : OUT std_logic;
	wdata_20 : OUT std_logic;
	wdata_21 : OUT std_logic;
	wdata_22 : OUT std_logic;
	wdata_23 : OUT std_logic;
	wdata_24 : OUT std_logic;
	wdata_25 : OUT std_logic;
	wdata_26 : OUT std_logic;
	wdata_27 : OUT std_logic;
	wdata_28 : OUT std_logic;
	wdata_29 : OUT std_logic;
	wdata_30 : OUT std_logic;
	wdata_31 : OUT std_logic
	);
END master_data_source;

ARCHITECTURE structure OF master_data_source IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK : std_logic;
SIGNAL ww_SLAVEHREADYO : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_wdata_0 : std_logic;
SIGNAL ww_wdata_1 : std_logic;
SIGNAL ww_wdata_2 : std_logic;
SIGNAL ww_wdata_3 : std_logic;
SIGNAL ww_wdata_4 : std_logic;
SIGNAL ww_wdata_5 : std_logic;
SIGNAL ww_wdata_6 : std_logic;
SIGNAL ww_wdata_7 : std_logic;
SIGNAL ww_wdata_8 : std_logic;
SIGNAL ww_wdata_9 : std_logic;
SIGNAL ww_wdata_10 : std_logic;
SIGNAL ww_wdata_11 : std_logic;
SIGNAL ww_wdata_12 : std_logic;
SIGNAL ww_wdata_13 : std_logic;
SIGNAL ww_wdata_14 : std_logic;
SIGNAL ww_wdata_15 : std_logic;
SIGNAL ww_wdata_16 : std_logic;
SIGNAL ww_wdata_17 : std_logic;
SIGNAL ww_wdata_18 : std_logic;
SIGNAL ww_wdata_19 : std_logic;
SIGNAL ww_wdata_20 : std_logic;
SIGNAL ww_wdata_21 : std_logic;
SIGNAL ww_wdata_22 : std_logic;
SIGNAL ww_wdata_23 : std_logic;
SIGNAL ww_wdata_24 : std_logic;
SIGNAL ww_wdata_25 : std_logic;
SIGNAL ww_wdata_26 : std_logic;
SIGNAL ww_wdata_27 : std_logic;
SIGNAL ww_wdata_28 : std_logic;
SIGNAL ww_wdata_29 : std_logic;
SIGNAL ww_wdata_30 : std_logic;
SIGNAL ww_wdata_31 : std_logic;
SIGNAL \i~131\ : std_logic;
SIGNAL \data[0]\ : std_logic;
SIGNAL \i~131COUT\ : std_logic;
SIGNAL \i~132\ : std_logic;
SIGNAL \data[1]\ : std_logic;
SIGNAL \i~132COUT\ : std_logic;
SIGNAL \i~133\ : std_logic;
SIGNAL \data[2]\ : std_logic;
SIGNAL \i~133COUT\ : std_logic;
SIGNAL \i~134\ : std_logic;
SIGNAL \data[3]\ : std_logic;
SIGNAL \i~134COUT\ : std_logic;
SIGNAL \i~135\ : std_logic;
SIGNAL \data[4]\ : std_logic;
SIGNAL \i~135COUT\ : std_logic;
SIGNAL \i~136\ : std_logic;
SIGNAL \data[5]\ : std_logic;
SIGNAL \i~136COUT\ : std_logic;
SIGNAL \i~137\ : std_logic;
SIGNAL \data[6]\ : std_logic;
SIGNAL \i~137COUT\ : std_logic;
SIGNAL \i~138\ : std_logic;
SIGNAL \data[7]\ : std_logic;
SIGNAL \i~138COUT\ : std_logic;
SIGNAL \i~139\ : std_logic;
SIGNAL \data[8]\ : std_logic;
SIGNAL \i~139COUT\ : std_logic;
SIGNAL \i~140\ : std_logic;
SIGNAL \data[9]\ : std_logic;
SIGNAL \i~140COUT\ : std_logic;
SIGNAL \i~141\ : std_logic;
SIGNAL \data[10]\ : std_logic;
SIGNAL \i~141COUT\ : std_logic;
SIGNAL \i~142\ : std_logic;
SIGNAL \data[11]\ : std_logic;
SIGNAL \i~142COUT\ : std_logic;
SIGNAL \i~143\ : std_logic;
SIGNAL \data[12]\ : std_logic;
SIGNAL \i~143COUT\ : std_logic;
SIGNAL \i~144\ : std_logic;
SIGNAL \data[13]\ : std_logic;
SIGNAL \i~144COUT\ : std_logic;
SIGNAL \i~145\ : std_logic;
SIGNAL \data[14]\ : std_logic;
SIGNAL \i~145COUT\ : std_logic;
SIGNAL \i~146\ : std_logic;
SIGNAL \data[15]\ : std_logic;
SIGNAL \i~703\ : std_logic;
SIGNAL \i~704\ : std_logic;
SIGNAL \i~705\ : std_logic;
SIGNAL \i~146COUT\ : std_logic;
SIGNAL \i~147\ : std_logic;
SIGNAL \data[16]\ : std_logic;
SIGNAL \i~147COUT\ : std_logic;
SIGNAL \i~148\ : std_logic;
SIGNAL \data[17]\ : std_logic;
SIGNAL \i~148COUT\ : std_logic;
SIGNAL \i~149\ : std_logic;
SIGNAL \data[18]\ : std_logic;
SIGNAL \i~149COUT\ : std_logic;
SIGNAL \i~150\ : std_logic;
SIGNAL \data[19]\ : std_logic;
SIGNAL \i~150COUT\ : std_logic;
SIGNAL \i~151\ : std_logic;
SIGNAL \data[20]\ : std_logic;
SIGNAL \i~151COUT\ : std_logic;
SIGNAL \i~152\ : std_logic;
SIGNAL \data[21]\ : std_logic;
SIGNAL \i~152COUT\ : std_logic;
SIGNAL \i~153\ : std_logic;
SIGNAL \data[22]\ : std_logic;
SIGNAL \i~153COUT\ : std_logic;
SIGNAL \i~154\ : std_logic;
SIGNAL \data[23]\ : std_logic;
SIGNAL \i~700\ : std_logic;
SIGNAL \i~701\ : std_logic;
SIGNAL \i~154COUT\ : std_logic;
SIGNAL \i~155\ : std_logic;
SIGNAL \data[24]\ : std_logic;
SIGNAL \i~155COUT\ : std_logic;
SIGNAL \i~156\ : std_logic;
SIGNAL \data[25]\ : std_logic;
SIGNAL \i~156COUT\ : std_logic;
SIGNAL \i~157\ : std_logic;
SIGNAL \data[26]\ : std_logic;
SIGNAL \i~157COUT\ : std_logic;
SIGNAL \i~158\ : std_logic;
SIGNAL \data[27]\ : std_logic;
SIGNAL \i~158COUT\ : std_logic;
SIGNAL \i~159\ : std_logic;
SIGNAL \data[28]\ : std_logic;
SIGNAL \i~159COUT\ : std_logic;
SIGNAL \i~160\ : std_logic;
SIGNAL \data[29]\ : std_logic;
SIGNAL \i~160COUT\ : std_logic;
SIGNAL \i~161\ : std_logic;
SIGNAL \data[30]\ : std_logic;
SIGNAL \i~161COUT\ : std_logic;
SIGNAL \i~162\ : std_logic;
SIGNAL \data[31]\ : std_logic;
SIGNAL \i~698\ : std_logic;
SIGNAL \i~699\ : std_logic;
SIGNAL \i~702\ : std_logic;
SIGNAL ALT_NOT_ww_CLK : std_logic;
SIGNAL ALT_NOT_ww_RST : std_logic;

BEGIN

ww_CLK <= CLK;
ww_SLAVEHREADYO <= SLAVEHREADYO;
ww_RST <= RST;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
wdata_0 <= ww_wdata_0;
wdata_1 <= ww_wdata_1;
wdata_2 <= ww_wdata_2;
wdata_3 <= ww_wdata_3;
wdata_4 <= ww_wdata_4;
wdata_5 <= ww_wdata_5;
wdata_6 <= ww_wdata_6;
wdata_7 <= ww_wdata_7;
wdata_8 <= ww_wdata_8;
wdata_9 <= ww_wdata_9;
wdata_10 <= ww_wdata_10;
wdata_11 <= ww_wdata_11;
wdata_12 <= ww_wdata_12;
wdata_13 <= ww_wdata_13;
wdata_14 <= ww_wdata_14;
wdata_15 <= ww_wdata_15;
wdata_16 <= ww_wdata_16;
wdata_17 <= ww_wdata_17;
wdata_18 <= ww_wdata_18;
wdata_19 <= ww_wdata_19;
wdata_20 <= ww_wdata_20;
wdata_21 <= ww_wdata_21;
wdata_22 <= ww_wdata_22;
wdata_23 <= ww_wdata_23;
wdata_24 <= ww_wdata_24;
wdata_25 <= ww_wdata_25;
wdata_26 <= ww_wdata_26;
wdata_27 <= ww_wdata_27;
wdata_28 <= ww_wdata_28;
wdata_29 <= ww_wdata_29;
wdata_30 <= ww_wdata_30;
wdata_31 <= ww_wdata_31;
ALT_NOT_ww_CLK <= NOT ww_CLK;
ALT_NOT_ww_RST <= NOT ww_RST;

\wdata[0]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- wdata_0 = DFFE(!\i~702\ & !\i~705\ & \i~131\, !GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~702\,
	datac => \i~705\,
	datad => \i~131\,
	clk => ALT_NOT_ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_wdata_0);

\wdata[1]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- wdata_1 = DFFE(!\i~705\ & !\i~702\ & \i~132\, !GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~705\,
	datac => \i~702\,
	datad => \i~132\,
	clk => ALT_NOT_ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_wdata_1);

\wdata[2]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- wdata_2 = DFFE(!\i~702\ & \i~133\ & !\i~705\, !GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0050",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~702\,
	datac => \i~133\,
	datad => \i~705\,
	clk => ALT_NOT_ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_wdata_2);

\wdata[3]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- wdata_3 = DFFE(!\i~702\ & \i~134\ & !\i~705\, !GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0050",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~702\,
	datac => \i~134\,
	datad => \i~705\,
	clk => ALT_NOT_ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_wdata_3);

\wdata[4]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- wdata_4 = DFFE(!\i~702\ & !\i~705\ & \i~135\, !GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~702\,
	datac => \i~705\,
	datad => \i~135\,
	clk => ALT_NOT_ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_wdata_4);

\wdata[5]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- wdata_5 = DFFE(!\i~702\ & !\i~705\ & \i~136\, !GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~702\,
	datac => \i~705\,
	datad => \i~136\,
	clk => ALT_NOT_ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_wdata_5);

\wdata[6]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- wdata_6 = DFFE(!\i~702\ & !\i~705\ & \i~137\, !GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~702\,
	datac => \i~705\,
	datad => \i~137\,
	clk => ALT_NOT_ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_wdata_6);

\wdata[7]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- wdata_7 = DFFE(!\i~702\ & !\i~705\ & \i~138\, !GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~702\,
	datac => \i~705\,
	datad => \i~138\,
	clk => ALT_NOT_ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_wdata_7);

\wdata[8]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- wdata_8 = DFFE(!\i~702\ & !\i~705\ & \i~139\, !GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~702\,
	datac => \i~705\,
	datad => \i~139\,
	clk => ALT_NOT_ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_wdata_8);

\wdata[9]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- wdata_9 = DFFE(!\i~705\ & !\i~702\ & \i~140\, !GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~705\,
	datac => \i~702\,
	datad => \i~140\,
	clk => ALT_NOT_ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_wdata_9);

\wdata[10]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- wdata_10 = DFFE(!\i~705\ & !\i~702\ & \i~141\, !GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~705\,
	datac => \i~702\,
	datad => \i~141\,
	clk => ALT_NOT_ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_wdata_10);

\wdata[11]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- wdata_11 = DFFE(!\i~705\ & !\i~702\ & \i~142\, !GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~705\,
	datac => \i~702\,
	datad => \i~142\,
	clk => ALT_NOT_ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_wdata_11);

\wdata[12]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- wdata_12 = DFFE(!\i~705\ & !\i~702\ & \i~143\, !GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~705\,
	datac => \i~702\,
	datad => \i~143\,
	clk => ALT_NOT_ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_wdata_12);

\wdata[13]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- wdata_13 = DFFE(!\i~702\ & !\i~705\ & \i~144\, !GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~702\,
	datac => \i~705\,
	datad => \i~144\,
	clk => ALT_NOT_ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_wdata_13);

\wdata[14]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- wdata_14 = DFFE(!\i~702\ & !\i~705\ & \i~145\, !GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~702\,
	datac => \i~705\,
	datad => \i~145\,
	clk => ALT_NOT_ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_wdata_14);

\wdata[15]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- wdata_15 = DFFE(!\i~702\ & !\i~705\ & \i~146\, !GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~702\,
	datac => \i~705\,
	datad => \i~146\,
	clk => ALT_NOT_ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_wdata_15);

\wdata[16]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- wdata_16 = DFFE(!\i~705\ & !\i~702\ & \i~147\, !GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~705\,
	datac => \i~702\,
	datad => \i~147\,
	clk => ALT_NOT_ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_wdata_16);

\wdata[17]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- wdata_17 = DFFE(!\i~705\ & !\i~702\ & \i~148\, !GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~705\,
	datac => \i~702\,
	datad => \i~148\,
	clk => ALT_NOT_ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_wdata_17);

\wdata[18]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- wdata_18 = DFFE(!\i~705\ & !\i~702\ & \i~149\, !GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~705\,
	datac => \i~702\,
	datad => \i~149\,
	clk => ALT_NOT_ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_wdata_18);

\wdata[19]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- wdata_19 = DFFE(!\i~705\ & !\i~702\ & \i~150\, !GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~705\,
	datac => \i~702\,
	datad => \i~150\,
	clk => ALT_NOT_ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_wdata_19);

\wdata[20]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- wdata_20 = DFFE(!\i~702\ & !\i~705\ & \i~151\, !GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~702\,
	datac => \i~705\,
	datad => \i~151\,
	clk => ALT_NOT_ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_wdata_20);

\wdata[21]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- wdata_21 = DFFE(!\i~705\ & !\i~702\ & \i~152\, !GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~705\,
	datac => \i~702\,
	datad => \i~152\,
	clk => ALT_NOT_ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_wdata_21);

\wdata[22]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- wdata_22 = DFFE(!\i~705\ & !\i~702\ & \i~153\, !GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~705\,
	datac => \i~702\,
	datad => \i~153\,
	clk => ALT_NOT_ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_wdata_22);

\wdata[23]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- wdata_23 = DFFE(!\i~702\ & !\i~705\ & \i~154\, !GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~702\,
	datac => \i~705\,
	datad => \i~154\,
	clk => ALT_NOT_ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_wdata_23);

\wdata[24]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- wdata_24 = DFFE(!\i~705\ & !\i~702\ & \i~155\, !GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~705\,
	datac => \i~702\,
	datad => \i~155\,
	clk => ALT_NOT_ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_wdata_24);

\wdata[25]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- wdata_25 = DFFE(!\i~705\ & !\i~702\ & \i~156\, !GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~705\,
	datac => \i~702\,
	datad => \i~156\,
	clk => ALT_NOT_ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_wdata_25);

\wdata[26]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- wdata_26 = DFFE(!\i~702\ & \i~157\ & !\i~705\, !GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0050",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~702\,
	datac => \i~157\,
	datad => \i~705\,
	clk => ALT_NOT_ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_wdata_26);

\wdata[27]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- wdata_27 = DFFE(!\i~702\ & !\i~705\ & \i~158\, !GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~702\,
	datac => \i~705\,
	datad => \i~158\,
	clk => ALT_NOT_ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_wdata_27);

\wdata[28]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- wdata_28 = DFFE(!\i~705\ & !\i~702\ & \i~159\, !GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~705\,
	datac => \i~702\,
	datad => \i~159\,
	clk => ALT_NOT_ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_wdata_28);

\wdata[29]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- wdata_29 = DFFE(!\i~705\ & !\i~702\ & \i~160\, !GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~705\,
	datac => \i~702\,
	datad => \i~160\,
	clk => ALT_NOT_ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_wdata_29);

\wdata[30]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- wdata_30 = DFFE(!\i~705\ & !\i~702\ & \i~161\, !GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~705\,
	datac => \i~702\,
	datad => \i~161\,
	clk => ALT_NOT_ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_wdata_30);

\wdata[31]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- wdata_31 = DFFE(!\i~702\ & !\i~705\ & \i~162\, !GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~702\,
	datac => \i~705\,
	datad => \i~162\,
	clk => ALT_NOT_ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_wdata_31);

\i~131_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~131\ = \data[0]\ $ SLAVEHREADYO
-- \i~131COUT\ = CARRY(\data[0]\ & SLAVEHREADYO)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "6688",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \data[0]\,
	datab => ww_SLAVEHREADYO,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~131\,
	cout => \i~131COUT\);

\data[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \data[0]\ = DFFE(!\i~702\ & !\i~705\ & \i~131\, !GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~702\,
	datac => \i~705\,
	datad => \i~131\,
	clk => ALT_NOT_ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \data[0]\);

\i~132_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~132\ = \data[1]\ $ \i~131COUT\
-- \i~132COUT\ = CARRY(!\i~131COUT\ # !\data[1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \data[1]\,
	cin => \i~131COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~132\,
	cout => \i~132COUT\);

\data[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \data[1]\ = DFFE(!\i~702\ & !\i~705\ & \i~132\, !GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~702\,
	datac => \i~705\,
	datad => \i~132\,
	clk => ALT_NOT_ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \data[1]\);

\i~133_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~133\ = \data[2]\ $ !\i~132COUT\
-- \i~133COUT\ = CARRY(\data[2]\ & !\i~132COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \data[2]\,
	cin => \i~132COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~133\,
	cout => \i~133COUT\);

\data[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \data[2]\ = DFFE(!\i~702\ & !\i~705\ & \i~133\, !GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~702\,
	datac => \i~705\,
	datad => \i~133\,
	clk => ALT_NOT_ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \data[2]\);

\i~134_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~134\ = \data[3]\ $ \i~133COUT\
-- \i~134COUT\ = CARRY(!\i~133COUT\ # !\data[3]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \data[3]\,
	cin => \i~133COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~134\,
	cout => \i~134COUT\);

\data[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \data[3]\ = DFFE(!\i~702\ & !\i~705\ & \i~134\, !GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~702\,
	datac => \i~705\,
	datad => \i~134\,
	clk => ALT_NOT_ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \data[3]\);

\i~135_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~135\ = \data[4]\ $ !\i~134COUT\
-- \i~135COUT\ = CARRY(\data[4]\ & !\i~134COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \data[4]\,
	cin => \i~134COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~135\,
	cout => \i~135COUT\);

\data[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \data[4]\ = DFFE(!\i~702\ & !\i~705\ & \i~135\, !GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~702\,
	datac => \i~705\,
	datad => \i~135\,
	clk => ALT_NOT_ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \data[4]\);

\i~136_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~136\ = \data[5]\ $ \i~135COUT\
-- \i~136COUT\ = CARRY(!\i~135COUT\ # !\data[5]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \data[5]\,
	cin => \i~135COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~136\,
	cout => \i~136COUT\);

\data[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \data[5]\ = DFFE(!\i~702\ & !\i~705\ & \i~136\, !GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~702\,
	datac => \i~705\,
	datad => \i~136\,
	clk => ALT_NOT_ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \data[5]\);

\i~137_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~137\ = \data[6]\ $ !\i~136COUT\
-- \i~137COUT\ = CARRY(\data[6]\ & !\i~136COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \data[6]\,
	cin => \i~136COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~137\,
	cout => \i~137COUT\);

\data[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \data[6]\ = DFFE(!\i~702\ & !\i~705\ & \i~137\, !GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~702\,
	datac => \i~705\,
	datad => \i~137\,
	clk => ALT_NOT_ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \data[6]\);

\i~138_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~138\ = \data[7]\ $ \i~137COUT\
-- \i~138COUT\ = CARRY(!\i~137COUT\ # !\data[7]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \data[7]\,
	cin => \i~137COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~138\,
	cout => \i~138COUT\);

\data[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- \data[7]\ = DFFE(!\i~705\ & !\i~702\ & \i~138\, !GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~705\,
	datac => \i~702\,
	datad => \i~138\,
	clk => ALT_NOT_ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \data[7]\);

\i~139_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~139\ = \data[8]\ $ !\i~138COUT\
-- \i~139COUT\ = CARRY(\data[8]\ & !\i~138COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \data[8]\,
	cin => \i~138COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~139\,
	cout => \i~139COUT\);

\data[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- \data[8]\ = DFFE(!\i~702\ & !\i~705\ & \i~139\, !GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~702\,
	datac => \i~705\,
	datad => \i~139\,
	clk => ALT_NOT_ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \data[8]\);

\i~140_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~140\ = \data[9]\ $ \i~139COUT\
-- \i~140COUT\ = CARRY(!\i~139COUT\ # !\data[9]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \data[9]\,
	cin => \i~139COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~140\,
	cout => \i~140COUT\);

\data[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- \data[9]\ = DFFE(!\i~702\ & !\i~705\ & \i~140\, !GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~702\,
	datac => \i~705\,
	datad => \i~140\,
	clk => ALT_NOT_ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \data[9]\);

\i~141_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~141\ = \data[10]\ $ !\i~140COUT\
-- \i~141COUT\ = CARRY(\data[10]\ & !\i~140COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \data[10]\,
	cin => \i~140COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~141\,
	cout => \i~141COUT\);

\data[10]~I\ : apex20ke_lcell 
-- Equation(s):
-- \data[10]\ = DFFE(!\i~702\ & !\i~705\ & \i~141\, !GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~702\,
	datac => \i~705\,
	datad => \i~141\,
	clk => ALT_NOT_ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \data[10]\);

\i~142_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~142\ = \data[11]\ $ \i~141COUT\
-- \i~142COUT\ = CARRY(!\i~141COUT\ # !\data[11]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \data[11]\,
	cin => \i~141COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~142\,
	cout => \i~142COUT\);

\data[11]~I\ : apex20ke_lcell 
-- Equation(s):
-- \data[11]\ = DFFE(!\i~702\ & !\i~705\ & \i~142\, !GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~702\,
	datac => \i~705\,
	datad => \i~142\,
	clk => ALT_NOT_ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \data[11]\);

\i~143_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~143\ = \data[12]\ $ !\i~142COUT\
-- \i~143COUT\ = CARRY(\data[12]\ & !\i~142COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \data[12]\,
	cin => \i~142COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~143\,
	cout => \i~143COUT\);

\data[12]~I\ : apex20ke_lcell 
-- Equation(s):
-- \data[12]\ = DFFE(!\i~702\ & !\i~705\ & \i~143\, !GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~702\,
	datac => \i~705\,
	datad => \i~143\,
	clk => ALT_NOT_ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \data[12]\);

\i~144_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~144\ = \data[13]\ $ \i~143COUT\
-- \i~144COUT\ = CARRY(!\i~143COUT\ # !\data[13]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \data[13]\,
	cin => \i~143COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~144\,
	cout => \i~144COUT\);

\data[13]~I\ : apex20ke_lcell 
-- Equation(s):
-- \data[13]\ = DFFE(!\i~702\ & !\i~705\ & \i~144\, !GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~702\,
	datac => \i~705\,
	datad => \i~144\,
	clk => ALT_NOT_ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \data[13]\);

\i~145_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~145\ = \data[14]\ $ !\i~144COUT\
-- \i~145COUT\ = CARRY(\data[14]\ & !\i~144COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \data[14]\,
	cin => \i~144COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~145\,
	cout => \i~145COUT\);

\data[14]~I\ : apex20ke_lcell 
-- Equation(s):
-- \data[14]\ = DFFE(!\i~702\ & !\i~705\ & \i~145\, !GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~702\,
	datac => \i~705\,
	datad => \i~145\,
	clk => ALT_NOT_ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \data[14]\);

\i~146_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~146\ = \data[15]\ $ \i~145COUT\
-- \i~146COUT\ = CARRY(!\i~145COUT\ # !\data[15]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \data[15]\,
	cin => \i~145COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~146\,
	cout => \i~146COUT\);

\data[15]~I\ : apex20ke_lcell 
-- Equation(s):
-- \data[15]\ = DFFE(!\i~702\ & !\i~705\ & \i~146\, !GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~702\,
	datac => \i~705\,
	datad => \i~146\,
	clk => ALT_NOT_ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \data[15]\);

\i~703_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~703\ = \data[14]\ # \data[15]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \data[14]\,
	datad => \data[15]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~703\);

\i~704_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~704\ = \data[8]\ # \data[9]\ # \data[10]\ # \data[11]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \data[8]\,
	datab => \data[9]\,
	datac => \data[10]\,
	datad => \data[11]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~704\);

\i~705_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~705\ = \data[13]\ # \i~703\ # \data[12]\ # \i~704\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \data[13]\,
	datab => \i~703\,
	datac => \data[12]\,
	datad => \i~704\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~705\);

\i~147_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~147\ = \data[16]\ $ !\i~146COUT\
-- \i~147COUT\ = CARRY(\data[16]\ & !\i~146COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \data[16]\,
	cin => \i~146COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~147\,
	cout => \i~147COUT\);

\data[16]~I\ : apex20ke_lcell 
-- Equation(s):
-- \data[16]\ = DFFE(!\i~705\ & !\i~702\ & \i~147\, !GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~705\,
	datac => \i~702\,
	datad => \i~147\,
	clk => ALT_NOT_ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \data[16]\);

\i~148_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~148\ = \data[17]\ $ \i~147COUT\
-- \i~148COUT\ = CARRY(!\i~147COUT\ # !\data[17]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \data[17]\,
	cin => \i~147COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~148\,
	cout => \i~148COUT\);

\data[17]~I\ : apex20ke_lcell 
-- Equation(s):
-- \data[17]\ = DFFE(!\i~702\ & \i~148\ & !\i~705\, !GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0050",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~702\,
	datac => \i~148\,
	datad => \i~705\,
	clk => ALT_NOT_ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \data[17]\);

\i~149_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~149\ = \data[18]\ $ !\i~148COUT\
-- \i~149COUT\ = CARRY(\data[18]\ & !\i~148COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \data[18]\,
	cin => \i~148COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~149\,
	cout => \i~149COUT\);

\data[18]~I\ : apex20ke_lcell 
-- Equation(s):
-- \data[18]\ = DFFE(!\i~702\ & \i~149\ & !\i~705\, !GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0050",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~702\,
	datac => \i~149\,
	datad => \i~705\,
	clk => ALT_NOT_ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \data[18]\);

\i~150_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~150\ = \data[19]\ $ \i~149COUT\
-- \i~150COUT\ = CARRY(!\i~149COUT\ # !\data[19]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \data[19]\,
	cin => \i~149COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~150\,
	cout => \i~150COUT\);

\data[19]~I\ : apex20ke_lcell 
-- Equation(s):
-- \data[19]\ = DFFE(!\i~705\ & !\i~702\ & \i~150\, !GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~705\,
	datac => \i~702\,
	datad => \i~150\,
	clk => ALT_NOT_ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \data[19]\);

\i~151_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~151\ = \data[20]\ $ !\i~150COUT\
-- \i~151COUT\ = CARRY(\data[20]\ & !\i~150COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \data[20]\,
	cin => \i~150COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~151\,
	cout => \i~151COUT\);

\data[20]~I\ : apex20ke_lcell 
-- Equation(s):
-- \data[20]\ = DFFE(!\i~705\ & !\i~702\ & \i~151\, !GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~705\,
	datac => \i~702\,
	datad => \i~151\,
	clk => ALT_NOT_ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \data[20]\);

\i~152_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~152\ = \data[21]\ $ \i~151COUT\
-- \i~152COUT\ = CARRY(!\i~151COUT\ # !\data[21]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \data[21]\,
	cin => \i~151COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~152\,
	cout => \i~152COUT\);

\data[21]~I\ : apex20ke_lcell 
-- Equation(s):
-- \data[21]\ = DFFE(!\i~705\ & !\i~702\ & \i~152\, !GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~705\,
	datac => \i~702\,
	datad => \i~152\,
	clk => ALT_NOT_ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \data[21]\);

\i~153_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~153\ = \data[22]\ $ !\i~152COUT\
-- \i~153COUT\ = CARRY(\data[22]\ & !\i~152COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \data[22]\,
	cin => \i~152COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~153\,
	cout => \i~153COUT\);

\data[22]~I\ : apex20ke_lcell 
-- Equation(s):
-- \data[22]\ = DFFE(!\i~705\ & !\i~702\ & \i~153\, !GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~705\,
	datac => \i~702\,
	datad => \i~153\,
	clk => ALT_NOT_ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \data[22]\);

\i~154_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~154\ = \data[23]\ $ \i~153COUT\
-- \i~154COUT\ = CARRY(!\i~153COUT\ # !\data[23]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \data[23]\,
	cin => \i~153COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~154\,
	cout => \i~154COUT\);

\data[23]~I\ : apex20ke_lcell 
-- Equation(s):
-- \data[23]\ = DFFE(!\i~705\ & !\i~702\ & \i~154\, !GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~705\,
	datac => \i~702\,
	datad => \i~154\,
	clk => ALT_NOT_ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \data[23]\);

\i~700_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~700\ = \data[21]\ # \data[22]\ # \data[20]\ # \data[23]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \data[21]\,
	datab => \data[22]\,
	datac => \data[20]\,
	datad => \data[23]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~700\);

\i~701_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~701\ = \data[17]\ # \data[18]\ # \data[16]\ # \data[19]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \data[17]\,
	datab => \data[18]\,
	datac => \data[16]\,
	datad => \data[19]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~701\);

\i~155_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~155\ = \data[24]\ $ !\i~154COUT\
-- \i~155COUT\ = CARRY(\data[24]\ & !\i~154COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \data[24]\,
	cin => \i~154COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~155\,
	cout => \i~155COUT\);

\data[24]~I\ : apex20ke_lcell 
-- Equation(s):
-- \data[24]\ = DFFE(!\i~705\ & !\i~702\ & \i~155\, !GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~705\,
	datac => \i~702\,
	datad => \i~155\,
	clk => ALT_NOT_ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \data[24]\);

\i~156_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~156\ = \data[25]\ $ \i~155COUT\
-- \i~156COUT\ = CARRY(!\i~155COUT\ # !\data[25]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \data[25]\,
	cin => \i~155COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~156\,
	cout => \i~156COUT\);

\data[25]~I\ : apex20ke_lcell 
-- Equation(s):
-- \data[25]\ = DFFE(!\i~705\ & !\i~702\ & \i~156\, !GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~705\,
	datac => \i~702\,
	datad => \i~156\,
	clk => ALT_NOT_ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \data[25]\);

\i~157_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~157\ = \data[26]\ $ !\i~156COUT\
-- \i~157COUT\ = CARRY(\data[26]\ & !\i~156COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \data[26]\,
	cin => \i~156COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~157\,
	cout => \i~157COUT\);

\data[26]~I\ : apex20ke_lcell 
-- Equation(s):
-- \data[26]\ = DFFE(!\i~705\ & !\i~702\ & \i~157\, !GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~705\,
	datac => \i~702\,
	datad => \i~157\,
	clk => ALT_NOT_ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \data[26]\);

\i~158_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~158\ = \data[27]\ $ \i~157COUT\
-- \i~158COUT\ = CARRY(!\i~157COUT\ # !\data[27]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \data[27]\,
	cin => \i~157COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~158\,
	cout => \i~158COUT\);

\data[27]~I\ : apex20ke_lcell 
-- Equation(s):
-- \data[27]\ = DFFE(!\i~705\ & !\i~702\ & \i~158\, !GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~705\,
	datac => \i~702\,
	datad => \i~158\,
	clk => ALT_NOT_ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \data[27]\);

\i~159_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~159\ = \data[28]\ $ !\i~158COUT\
-- \i~159COUT\ = CARRY(\data[28]\ & !\i~158COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \data[28]\,
	cin => \i~158COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~159\,
	cout => \i~159COUT\);

\data[28]~I\ : apex20ke_lcell 
-- Equation(s):
-- \data[28]\ = DFFE(!\i~702\ & !\i~705\ & \i~159\, !GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~702\,
	datac => \i~705\,
	datad => \i~159\,
	clk => ALT_NOT_ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \data[28]\);

\i~160_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~160\ = \data[29]\ $ \i~159COUT\
-- \i~160COUT\ = CARRY(!\i~159COUT\ # !\data[29]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \data[29]\,
	cin => \i~159COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~160\,
	cout => \i~160COUT\);

\data[29]~I\ : apex20ke_lcell 
-- Equation(s):
-- \data[29]\ = DFFE(!\i~702\ & !\i~705\ & \i~160\, !GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~702\,
	datac => \i~705\,
	datad => \i~160\,
	clk => ALT_NOT_ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \data[29]\);

\i~161_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~161\ = \data[30]\ $ !\i~160COUT\
-- \i~161COUT\ = CARRY(\data[30]\ & !\i~160COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \data[30]\,
	cin => \i~160COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~161\,
	cout => \i~161COUT\);

\data[30]~I\ : apex20ke_lcell 
-- Equation(s):
-- \data[30]\ = DFFE(!\i~705\ & !\i~702\ & \i~161\, !GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~705\,
	datac => \i~702\,
	datad => \i~161\,
	clk => ALT_NOT_ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \data[30]\);

\i~162_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~162\ = \i~161COUT\ $ \data[31]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datad => \data[31]\,
	cin => \i~161COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~162\);

\data[31]~I\ : apex20ke_lcell 
-- Equation(s):
-- \data[31]\ = DFFE(!\i~705\ & !\i~702\ & \i~162\, !GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~705\,
	datac => \i~702\,
	datad => \i~162\,
	clk => ALT_NOT_ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \data[31]\);

\i~698_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~698\ = \data[29]\ # \data[30]\ # \data[28]\ # \data[31]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \data[29]\,
	datab => \data[30]\,
	datac => \data[28]\,
	datad => \data[31]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~698\);

\i~699_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~699\ = \data[26]\ # \data[24]\ # \data[25]\ # \data[27]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \data[26]\,
	datab => \data[24]\,
	datac => \data[25]\,
	datad => \data[27]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~699\);

\i~702_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~702\ = \i~700\ # \i~701\ # \i~698\ # \i~699\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~700\,
	datab => \i~701\,
	datac => \i~698\,
	datad => \i~699\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~702\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	r2r IS
    PORT (
	CLK : IN std_logic;
	RST : IN std_logic;
	enable : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	R2BUS_6 : OUT std_logic;
	R2BUS_5 : OUT std_logic;
	R2BUS_4 : OUT std_logic;
	R2BUS_3 : OUT std_logic;
	R2BUS_2 : OUT std_logic;
	R2BUS_1 : OUT std_logic;
	R2BUS_0 : OUT std_logic
	);
END r2r;

ARCHITECTURE structure OF r2r IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_enable : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_R2BUS_6 : std_logic;
SIGNAL ww_R2BUS_5 : std_logic;
SIGNAL ww_R2BUS_4 : std_logic;
SIGNAL ww_R2BUS_3 : std_logic;
SIGNAL ww_R2BUS_2 : std_logic;
SIGNAL ww_R2BUS_1 : std_logic;
SIGNAL ww_R2BUS_0 : std_logic;
SIGNAL \i~1009_1\ : std_logic;
SIGNAL \i~0\ : std_logic;
SIGNAL \i~8\ : std_logic;
SIGNAL \i~15\ : std_logic;
SIGNAL \i~1003\ : std_logic;
SIGNAL \cnt[0]\ : std_logic;
SIGNAL \i~15COUT\ : std_logic;
SIGNAL \i~16\ : std_logic;
SIGNAL \i~1001\ : std_logic;
SIGNAL \i~8COUT\ : std_logic;
SIGNAL \i~9\ : std_logic;
SIGNAL \cnt[1]\ : std_logic;
SIGNAL \i~9COUT\ : std_logic;
SIGNAL \i~10COUT\ : std_logic;
SIGNAL \i~11\ : std_logic;
SIGNAL \i~16COUT\ : std_logic;
SIGNAL \i~17COUT\ : std_logic;
SIGNAL \i~18\ : std_logic;
SIGNAL \i~997\ : std_logic;
SIGNAL \cnt[3]\ : std_logic;
SIGNAL \i~11COUT\ : std_logic;
SIGNAL \i~12\ : std_logic;
SIGNAL \i~18COUT\ : std_logic;
SIGNAL \i~19\ : std_logic;
SIGNAL \i~995\ : std_logic;
SIGNAL \cnt[4]\ : std_logic;
SIGNAL \i~19COUT\ : std_logic;
SIGNAL \i~20\ : std_logic;
SIGNAL \i~993\ : std_logic;
SIGNAL \i~12COUT\ : std_logic;
SIGNAL \i~13\ : std_logic;
SIGNAL \cnt[5]\ : std_logic;
SIGNAL \i~1007\ : std_logic;
SIGNAL \i~1008\ : std_logic;
SIGNAL up : std_logic;
SIGNAL \i~17\ : std_logic;
SIGNAL \i~999\ : std_logic;
SIGNAL \i~10\ : std_logic;
SIGNAL \cnt[2]\ : std_logic;
SIGNAL \i~1009\ : std_logic;
SIGNAL \i~1011\ : std_logic;
SIGNAL \i~20COUT\ : std_logic;
SIGNAL \i~21\ : std_logic;
SIGNAL \i~992\ : std_logic;
SIGNAL \i~13COUT\ : std_logic;
SIGNAL \i~14\ : std_logic;
SIGNAL \cnt[6]\ : std_logic;
SIGNAL ALT_NOT_ww_RST : std_logic;

BEGIN

ww_CLK <= CLK;
ww_RST <= RST;
ww_enable <= enable;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
R2BUS_6 <= ww_R2BUS_6;
R2BUS_5 <= ww_R2BUS_5;
R2BUS_4 <= ww_R2BUS_4;
R2BUS_3 <= ww_R2BUS_3;
R2BUS_2 <= ww_R2BUS_2;
R2BUS_1 <= ww_R2BUS_1;
R2BUS_0 <= ww_R2BUS_0;
ALT_NOT_ww_RST <= NOT ww_RST;

\R2BUS[6]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- R2BUS_6 = DFFE(!\cnt[6]\, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00FF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \cnt[6]\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_R2BUS_6);

\R2BUS[5]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- R2BUS_5 = DFFE(\cnt[5]\, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \cnt[5]\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_R2BUS_5);

\R2BUS[4]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- R2BUS_4 = DFFE(\cnt[4]\, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \cnt[4]\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_R2BUS_4);

\R2BUS[3]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- R2BUS_3 = DFFE(\cnt[3]\, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \cnt[3]\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_R2BUS_3);

\R2BUS[2]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- R2BUS_2 = DFFE(\cnt[2]\, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \cnt[2]\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_R2BUS_2);

\R2BUS[1]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- R2BUS_1 = DFFE(\cnt[1]\, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \cnt[1]\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_R2BUS_1);

\R2BUS[0]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- R2BUS_0 = DFFE(\cnt[0]\, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \cnt[0]\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_R2BUS_0);

\i~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~0\ = \i~1007\ # !\cnt[1]\ # !\cnt[0]\ # !\cnt[2]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF7F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[2]\,
	datab => \cnt[0]\,
	datac => \cnt[1]\,
	datad => \i~1007\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~0\);

\i~8_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~8\ = \i~0\ $ \cnt[0]\
-- \i~8COUT\ = CARRY(\i~0\ & \cnt[0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "6688",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~0\,
	datab => \cnt[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~8\,
	cout => \i~8COUT\);

\i~15_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~15\ = !\cnt[0]\
-- \i~15COUT\ = CARRY(\cnt[0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "33CC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \cnt[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~15\,
	cout => \i~15COUT\);

\i~1003_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1003\ = !up & !\i~1011\ & \i~15\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0500",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => up,
	datac => \i~1011\,
	datad => \i~15\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~1003\);

\cnt[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[0]\ = DFFE(command_0_local_28 & (\i~1003\ # \i~8\ & up), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AA80",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_enable,
	datab => \i~8\,
	datac => up,
	datad => \i~1003\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[0]\);

\i~16_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~16\ = \cnt[1]\ $ !\i~15COUT\
-- \i~16COUT\ = CARRY(!\cnt[1]\ & !\i~15COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C303",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \cnt[1]\,
	cin => \i~15COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~16\,
	cout => \i~16COUT\);

\i~1001_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1001\ = !\i~1011\ & \i~16\ & !up

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0050",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1011\,
	datac => \i~16\,
	datad => up,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~1001\);

\i~9_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~9\ = \cnt[1]\ $ \i~8COUT\
-- \i~9COUT\ = CARRY(!\i~8COUT\ # !\cnt[1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \cnt[1]\,
	cin => \i~8COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~9\,
	cout => \i~9COUT\);

\cnt[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[1]\ = DFFE(command_0_local_28 & (\i~1001\ # \i~9\ & up), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E0A0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1001\,
	datab => \i~9\,
	datac => ww_enable,
	datad => up,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[1]\);

\i~10_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~10\ = \cnt[2]\ $ !\i~9COUT\
-- \i~10COUT\ = CARRY(\cnt[2]\ & !\i~9COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[2]\,
	cin => \i~9COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~10\,
	cout => \i~10COUT\);

\i~11_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~11\ = \cnt[3]\ $ \i~10COUT\
-- \i~11COUT\ = CARRY(!\i~10COUT\ # !\cnt[3]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \cnt[3]\,
	cin => \i~10COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~11\,
	cout => \i~11COUT\);

\i~17_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~17\ = \cnt[2]\ $ \i~16COUT\
-- \i~17COUT\ = CARRY(\cnt[2]\ # !\i~16COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3CCF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \cnt[2]\,
	cin => \i~16COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~17\,
	cout => \i~17COUT\);

\i~18_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~18\ = \cnt[3]\ $ !\i~17COUT\
-- \i~18COUT\ = CARRY(!\cnt[3]\ & !\i~17COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A505",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[3]\,
	cin => \i~17COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~18\,
	cout => \i~18COUT\);

\i~997_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~997\ = !up & !\i~1011\ & \i~18\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0500",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => up,
	datac => \i~1011\,
	datad => \i~18\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~997\);

\cnt[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[3]\ = DFFE(command_0_local_28 & (\i~997\ # \i~11\ & up), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AA80",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_enable,
	datab => \i~11\,
	datac => up,
	datad => \i~997\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[3]\);

\i~12_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~12\ = \cnt[4]\ $ !\i~11COUT\
-- \i~12COUT\ = CARRY(\cnt[4]\ & !\i~11COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[4]\,
	cin => \i~11COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~12\,
	cout => \i~12COUT\);

\i~19_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~19\ = \cnt[4]\ $ \i~18COUT\
-- \i~19COUT\ = CARRY(\cnt[4]\ # !\i~18COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5AAF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[4]\,
	cin => \i~18COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~19\,
	cout => \i~19COUT\);

\i~995_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~995\ = !up & !\i~1011\ & \i~19\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => up,
	datac => \i~1011\,
	datad => \i~19\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~995\);

\cnt[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[4]\ = DFFE(command_0_local_28 & (\i~995\ # \i~12\ & up), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F080",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~12\,
	datab => up,
	datac => ww_enable,
	datad => \i~995\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[4]\);

\i~20_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~20\ = \cnt[5]\ $ !\i~19COUT\
-- \i~20COUT\ = CARRY(!\cnt[5]\ & !\i~19COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C303",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \cnt[5]\,
	cin => \i~19COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~20\,
	cout => \i~20COUT\);

\i~993_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~993\ = !\i~1011\ & \i~20\ & !up

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0050",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1011\,
	datac => \i~20\,
	datad => up,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~993\);

\i~13_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~13\ = \cnt[5]\ $ \i~12COUT\
-- \i~13COUT\ = CARRY(!\i~12COUT\ # !\cnt[5]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[5]\,
	cin => \i~12COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~13\,
	cout => \i~13COUT\);

\cnt[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[5]\ = DFFE(command_0_local_28 & (\i~993\ # up & \i~13\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E0A0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~993\,
	datab => up,
	datac => ww_enable,
	datad => \i~13\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[5]\);

\i~1007_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1007\ = \cnt[6]\ # !\cnt[4]\ # !\cnt[5]\ # !\cnt[3]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF7F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[3]\,
	datab => \cnt[5]\,
	datac => \cnt[4]\,
	datad => \cnt[6]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~1007\);

\i~1008_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1008\ = !\cnt[1]\ # !\cnt[2]\ # !\cnt[0]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3FFF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \cnt[0]\,
	datac => \cnt[2]\,
	datad => \cnt[1]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~1008\);

\up~I\ : apex20ke_lcell 
-- Equation(s):
-- up = DFFE(up & (\i~1007\ # \i~1008\) # !up & \i~1011\, GLOBAL(outclock0), !GLOBAL(RST), , command_0_local_28)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FACA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1011\,
	datab => \i~1007\,
	datac => up,
	datad => \i~1008\,
	clk => ww_CLK,
	aclr => ww_RST,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => up);

\i~999_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~999\ = !\i~1011\ & \i~17\ & !up

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0050",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1011\,
	datac => \i~17\,
	datad => up,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~999\);

\cnt[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[2]\ = DFFE(command_0_local_28 & (\i~999\ # up & \i~10\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C8C0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => up,
	datab => ww_enable,
	datac => \i~999\,
	datad => \i~10\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[2]\);

\i~1009_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1009\ = !\cnt[3]\ & !\cnt[5]\ & !\cnt[4]\ & \cnt[6]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0100",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \cnt[3]\,
	datab => \cnt[5]\,
	datac => \cnt[4]\,
	datad => \cnt[6]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \i~1009\);

\i~1011_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1011\ = (!\cnt[2]\ & !\cnt[0]\ & !\cnt[1]\) & CASCADE(\i~1009\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0003",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \cnt[2]\,
	datac => \cnt[0]\,
	datad => \cnt[1]\,
	cascin => \i~1009\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~1011\);

\i~21_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~21\ = \i~20COUT\ $ !\cnt[6]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "F00F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datad => \cnt[6]\,
	cin => \i~20COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~21\);

\i~992_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~992\ = !\i~1011\ & \i~21\ & !up

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0050",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~1011\,
	datac => \i~21\,
	datad => up,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~992\);

\i~14_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14\ = \i~13COUT\ $ \cnt[6]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datad => \cnt[6]\,
	cin => \i~13COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14\);

\cnt[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt[6]\ = DFFE(!\i~992\ & command_0_local_28 & (!\i~14\ # !up), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "1050",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~992\,
	datab => up,
	datac => ww_enable,
	datad => \i~14\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt[6]\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	fe_r2r IS
    PORT (
	CLK : IN std_logic;
	RST : IN std_logic;
	command_0_local_30 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	FE_PULSER_P_3 : OUT std_logic;
	i113 : OUT std_logic;
	FE_PULSER_P_2 : OUT std_logic;
	FE_PULSER_P_1 : OUT std_logic;
	FE_PULSER_P_0 : OUT std_logic;
	FE_PULSER_N_3 : OUT std_logic;
	FE_PULSER_N_2 : OUT std_logic;
	FE_PULSER_N_1 : OUT std_logic;
	FE_PULSER_N_0 : OUT std_logic
	);
END fe_r2r;

ARCHITECTURE structure OF fe_r2r IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_command_0_local_30 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_FE_PULSER_P_3 : std_logic;
SIGNAL ww_i113 : std_logic;
SIGNAL ww_FE_PULSER_P_2 : std_logic;
SIGNAL ww_FE_PULSER_P_1 : std_logic;
SIGNAL ww_FE_PULSER_P_0 : std_logic;
SIGNAL ww_FE_PULSER_N_3 : std_logic;
SIGNAL ww_FE_PULSER_N_2 : std_logic;
SIGNAL ww_FE_PULSER_N_1 : std_logic;
SIGNAL ww_FE_PULSER_N_0 : std_logic;
SIGNAL \i~117COUT\ : std_logic;
SIGNAL \i~118\ : std_logic;
SIGNAL \i~48\ : std_logic;
SIGNAL \i~2\ : std_logic;
SIGNAL \i~283\ : std_logic;
SIGNAL \i93~241\ : std_logic;
SIGNAL \state~21\ : std_logic;
SIGNAL \i93~238\ : std_logic;
SIGNAL \i93~239\ : std_logic;
SIGNAL \cntp[2]\ : std_logic;
SIGNAL \i90~83\ : std_logic;
SIGNAL \state~22\ : std_logic;
SIGNAL \i~112\ : std_logic;
SIGNAL \i~6\ : std_logic;
SIGNAL i80 : std_logic;
SIGNAL \i99~160\ : std_logic;
SIGNAL \cntn[0]\ : std_logic;
SIGNAL \i~112COUT\ : std_logic;
SIGNAL \i~113\ : std_logic;
SIGNAL \i~63\ : std_logic;
SIGNAL \i98~224\ : std_logic;
SIGNAL \i98~225\ : std_logic;
SIGNAL \cntn[1]\ : std_logic;
SIGNAL \i~113COUT\ : std_logic;
SIGNAL \i~114\ : std_logic;
SIGNAL \i~68\ : std_logic;
SIGNAL \i97~238\ : std_logic;
SIGNAL \i97~239\ : std_logic;
SIGNAL \cntn[2]\ : std_logic;
SIGNAL \i~114COUT\ : std_logic;
SIGNAL \i~115\ : std_logic;
SIGNAL \i~280\ : std_logic;
SIGNAL \i96~173\ : std_logic;
SIGNAL \cntn[3]\ : std_logic;
SIGNAL \i~282\ : std_logic;
SIGNAL \i~281\ : std_logic;
SIGNAL \i97~241\ : std_logic;
SIGNAL \state~23\ : std_logic;
SIGNAL i72 : std_logic;
SIGNAL \i95~160\ : std_logic;
SIGNAL \i~116\ : std_logic;
SIGNAL \cntp[0]\ : std_logic;
SIGNAL \i~116COUT\ : std_logic;
SIGNAL \i~117\ : std_logic;
SIGNAL \i~43\ : std_logic;
SIGNAL \i94~224\ : std_logic;
SIGNAL \i94~225\ : std_logic;
SIGNAL \cntp[1]\ : std_logic;
SIGNAL \i~284\ : std_logic;
SIGNAL \i~27\ : std_logic;
SIGNAL \state~20\ : std_logic;
SIGNAL \i~279\ : std_logic;
SIGNAL \i92~173\ : std_logic;
SIGNAL \i~118COUT\ : std_logic;
SIGNAL \i~119\ : std_logic;
SIGNAL \cntp[3]\ : std_logic;
SIGNAL ALT_NOT_ww_RST : std_logic;

BEGIN

ww_CLK <= CLK;
ww_RST <= RST;
ww_command_0_local_30 <= command_0_local_30;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
FE_PULSER_P_3 <= ww_FE_PULSER_P_3;
i113 <= ww_i113;
FE_PULSER_P_2 <= ww_FE_PULSER_P_2;
FE_PULSER_P_1 <= ww_FE_PULSER_P_1;
FE_PULSER_P_0 <= ww_FE_PULSER_P_0;
FE_PULSER_N_3 <= ww_FE_PULSER_N_3;
FE_PULSER_N_2 <= ww_FE_PULSER_N_2;
FE_PULSER_N_1 <= ww_FE_PULSER_N_1;
FE_PULSER_N_0 <= ww_FE_PULSER_N_0;
ALT_NOT_ww_RST <= NOT ww_RST;

\FE_PULSER_P[3]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- FE_PULSER_P_3 = DFFE(\cntp[3]\, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \cntp[3]\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_FE_PULSER_P_3);

\i113~I\ : apex20ke_lcell 
-- Equation(s):
-- i113 = DFFE(!command_0_local_30, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00FF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_command_0_local_30,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_i113);

\FE_PULSER_P[2]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- FE_PULSER_P_2 = DFFE(\cntp[2]\, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \cntp[2]\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_FE_PULSER_P_2);

\FE_PULSER_P[1]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- FE_PULSER_P_1 = DFFE(\cntp[1]\, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \cntp[1]\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_FE_PULSER_P_1);

\FE_PULSER_P[0]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- FE_PULSER_P_0 = DFFE(\cntp[0]\, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \cntp[0]\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_FE_PULSER_P_0);

\FE_PULSER_N[3]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- FE_PULSER_N_3 = DFFE(\cntn[3]\, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \cntn[3]\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_FE_PULSER_N_3);

\FE_PULSER_N[2]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- FE_PULSER_N_2 = DFFE(\cntn[2]\, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \cntn[2]\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_FE_PULSER_N_2);

\FE_PULSER_N[1]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- FE_PULSER_N_1 = DFFE(\cntn[1]\, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \cntn[1]\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_FE_PULSER_N_1);

\FE_PULSER_N[0]~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- FE_PULSER_N_0 = DFFE(\cntn[0]\, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \cntn[0]\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_FE_PULSER_N_0);

\i~117_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~117\ = \cntp[1]\ $ \i~116COUT\
-- \i~117COUT\ = CARRY(!\i~116COUT\ # !\cntp[1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntp[1]\,
	cin => \i~116COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~117\,
	cout => \i~117COUT\);

\i~118_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~118\ = \cntp[2]\ $ !\i~117COUT\
-- \i~118COUT\ = CARRY(\cntp[2]\ & !\i~117COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \cntp[2]\,
	cin => \i~117COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~118\,
	cout => \i~118COUT\);

\i~48_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~48\ = \cntp[2]\ $ (\cntp[0]\ # \cntp[1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "05FA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntp[0]\,
	datac => \cntp[1]\,
	datad => \cntp[2]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~48\);

\i~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~2\ = \cntp[0]\ # \cntp[2]\ # \cntp[1]\ # \cntp[3]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntp[0]\,
	datab => \cntp[2]\,
	datac => \cntp[1]\,
	datad => \cntp[3]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~2\);

\i~283_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~283\ = !\cntp[0]\ & !\cntp[1]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "000F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \cntp[0]\,
	datad => \cntp[1]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~283\);

\i93~241_I\ : apex20ke_lcell 
-- Equation(s):
-- \i93~241\ = \state~21\ & (\cntp[3]\ # \cntp[2]\ # !\i~283\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E0F0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntp[3]\,
	datab => \cntp[2]\,
	datac => \state~21\,
	datad => \i~283\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i93~241\);

\state~21_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~21\ = DFFE(command_0_local_30 & (\i93~241\ # !\i~284\ & !\state~20\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CC04",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~284\,
	datab => ww_command_0_local_30,
	datac => \state~20\,
	datad => \i93~241\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~21\);

\i93~238_I\ : apex20ke_lcell 
-- Equation(s):
-- \i93~238\ = \cntp[2]\ & (\state~23\ # \state~22\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0C0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \state~23\,
	datac => \cntp[2]\,
	datad => \state~22\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i93~238\);

\i93~239_I\ : apex20ke_lcell 
-- Equation(s):
-- \i93~239\ = \i93~238\ # !\i~48\ & \i~2\ & \state~21\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF40",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~48\,
	datab => \i~2\,
	datac => \state~21\,
	datad => \i93~238\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i93~239\);

\cntp[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntp[2]\ = DFFE(command_0_local_30 & (\i93~239\ # \i~118\ & !\state~20\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CE00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~118\,
	datab => \i93~239\,
	datac => \state~20\,
	datad => ww_command_0_local_30,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntp[2]\);

\i90~83_I\ : apex20ke_lcell 
-- Equation(s):
-- \i90~83\ = !\cntp[3]\ & !\cntp[2]\ & \state~21\ & \i~283\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "1000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntp[3]\,
	datab => \cntp[2]\,
	datac => \state~21\,
	datad => \i~283\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i90~83\);

\state~22_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~22\ = DFFE(command_0_local_30 & (\i90~83\ # \i~282\ & \state~22\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AA80",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_0_local_30,
	datab => \i~282\,
	datac => \state~22\,
	datad => \i90~83\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~22\);

\i~112_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~112\ = \i~282\ $ \cntn[0]\
-- \i~112COUT\ = CARRY(\i~282\ & \cntn[0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "6688",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~282\,
	datab => \cntn[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~112\,
	cout => \i~112COUT\);

\i~6_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~6\ = \cntn[0]\ # \cntn[2]\ # \cntn[3]\ # \cntn[1]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntn[0]\,
	datab => \cntn[2]\,
	datac => \cntn[3]\,
	datad => \cntn[1]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~6\);

\i80~I\ : apex20ke_lcell 
-- Equation(s):
-- i80 = \state~21\ # !\state~20\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF0F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \state~20\,
	datad => \state~21\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i80);

\i99~160_I\ : apex20ke_lcell 
-- Equation(s):
-- \i99~160\ = \cntn[0]\ & i80 # !\cntn[0]\ & \i~6\ & \state~23\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EC20",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~6\,
	datab => \cntn[0]\,
	datac => \state~23\,
	datad => i80,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i99~160\);

\cntn[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntn[0]\ = DFFE(command_0_local_30 & (\i99~160\ # \state~22\ & \i~112\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AA80",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_0_local_30,
	datab => \state~22\,
	datac => \i~112\,
	datad => \i99~160\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntn[0]\);

\i~113_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~113\ = \cntn[1]\ $ \i~112COUT\
-- \i~113COUT\ = CARRY(!\i~112COUT\ # !\cntn[1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \cntn[1]\,
	cin => \i~112COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~113\,
	cout => \i~113COUT\);

\i~63_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~63\ = \cntn[0]\ $ \cntn[1]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5A5A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntn[0]\,
	datac => \cntn[1]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~63\);

\i98~224_I\ : apex20ke_lcell 
-- Equation(s):
-- \i98~224\ = \cntn[1]\ & (\state~21\ # !\state~20\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F050",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~20\,
	datac => \cntn[1]\,
	datad => \state~21\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i98~224\);

\i98~225_I\ : apex20ke_lcell 
-- Equation(s):
-- \i98~225\ = \i98~224\ # \i~6\ & !\i~63\ & \state~23\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF20",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~6\,
	datab => \i~63\,
	datac => \state~23\,
	datad => \i98~224\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i98~225\);

\cntn[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntn[1]\ = DFFE(command_0_local_30 & (\i98~225\ # \state~22\ & \i~113\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AA80",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_0_local_30,
	datab => \state~22\,
	datac => \i~113\,
	datad => \i98~225\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntn[1]\);

\i~114_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~114\ = \cntn[2]\ $ !\i~113COUT\
-- \i~114COUT\ = CARRY(\cntn[2]\ & !\i~113COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntn[2]\,
	cin => \i~113COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~114\,
	cout => \i~114COUT\);

\i~68_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~68\ = \cntn[2]\ $ (\cntn[1]\ # \cntn[0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3366",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntn[1]\,
	datab => \cntn[2]\,
	datad => \cntn[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~68\);

\i97~238_I\ : apex20ke_lcell 
-- Equation(s):
-- \i97~238\ = \cntn[2]\ & (\state~21\ # !\state~20\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F050",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~20\,
	datac => \cntn[2]\,
	datad => \state~21\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i97~238\);

\i97~239_I\ : apex20ke_lcell 
-- Equation(s):
-- \i97~239\ = \i97~238\ # \state~23\ & \i~6\ & !\i~68\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF08",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~23\,
	datab => \i~6\,
	datac => \i~68\,
	datad => \i97~238\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i97~239\);

\cntn[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntn[2]\ = DFFE(command_0_local_30 & (\i97~239\ # \state~22\ & \i~114\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AA80",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_0_local_30,
	datab => \state~22\,
	datac => \i~114\,
	datad => \i97~239\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntn[2]\);

\i~115_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~115\ = \i~114COUT\ $ \cntn[3]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datad => \cntn[3]\,
	cin => \i~114COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~115\);

\i~280_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~280\ = !\cntn[1]\ & !\cntn[2]\ & !\cntn[0]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0011",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntn[1]\,
	datab => \cntn[2]\,
	datad => \cntn[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~280\);

\i96~173_I\ : apex20ke_lcell 
-- Equation(s):
-- \i96~173\ = \cntn[3]\ & (i80 # \state~23\ & !\i~280\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AA08",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntn[3]\,
	datab => \state~23\,
	datac => \i~280\,
	datad => i80,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i96~173\);

\cntn[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntn[3]\ = DFFE(command_0_local_30 & (\i96~173\ # \state~22\ & \i~115\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AA80",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_0_local_30,
	datab => \state~22\,
	datac => \i~115\,
	datad => \i96~173\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntn[3]\);

\i~282_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~282\ = !\cntn[1]\ # !\cntn[2]\ # !\cntn[0]\ # !\cntn[3]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "7FFF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntn[3]\,
	datab => \cntn[0]\,
	datac => \cntn[2]\,
	datad => \cntn[1]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~282\);

\i~281_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~281\ = !\cntn[0]\ & !\cntn[1]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0033",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \cntn[0]\,
	datad => \cntn[1]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~281\);

\i97~241_I\ : apex20ke_lcell 
-- Equation(s):
-- \i97~241\ = \state~23\ & (\cntn[3]\ # \cntn[2]\ # !\i~281\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E0F0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntn[3]\,
	datab => \cntn[2]\,
	datac => \state~23\,
	datad => \i~281\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i97~241\);

\state~23_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~23\ = DFFE(command_0_local_30 & (\i97~241\ # !\i~282\ & \state~22\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AA20",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_0_local_30,
	datab => \i~282\,
	datac => \state~22\,
	datad => \i97~241\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~23\);

\i72~I\ : apex20ke_lcell 
-- Equation(s):
-- i72 = \state~23\ # \state~22\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FAFA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~23\,
	datac => \state~22\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i72);

\i95~160_I\ : apex20ke_lcell 
-- Equation(s):
-- \i95~160\ = \cntp[0]\ & i72 # !\cntp[0]\ & \state~21\ & \i~2\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B888",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => i72,
	datab => \cntp[0]\,
	datac => \state~21\,
	datad => \i~2\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i95~160\);

\i~116_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~116\ = \cntp[0]\ $ \i~284\
-- \i~116COUT\ = CARRY(\cntp[0]\ & \i~284\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "6688",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntp[0]\,
	datab => \i~284\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~116\,
	cout => \i~116COUT\);

\cntp[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntp[0]\ = DFFE(command_0_local_30 & (\i95~160\ # !\state~20\ & \i~116\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C4C0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~20\,
	datab => ww_command_0_local_30,
	datac => \i95~160\,
	datad => \i~116\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntp[0]\);

\i~43_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~43\ = \cntp[0]\ $ \cntp[1]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "33CC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \cntp[0]\,
	datad => \cntp[1]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~43\);

\i94~224_I\ : apex20ke_lcell 
-- Equation(s):
-- \i94~224\ = \cntp[1]\ & (\state~23\ # \state~22\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0C0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \state~23\,
	datac => \cntp[1]\,
	datad => \state~22\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i94~224\);

\i94~225_I\ : apex20ke_lcell 
-- Equation(s):
-- \i94~225\ = \i94~224\ # \i~2\ & \state~21\ & !\i~43\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF08",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~2\,
	datab => \state~21\,
	datac => \i~43\,
	datad => \i94~224\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i94~225\);

\cntp[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntp[1]\ = DFFE(command_0_local_30 & (\i94~225\ # \i~117\ & !\state~20\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CC08",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~117\,
	datab => ww_command_0_local_30,
	datac => \state~20\,
	datad => \i94~225\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntp[1]\);

\i~284_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~284\ = !\cntp[3]\ # !\cntp[0]\ # !\cntp[2]\ # !\cntp[1]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "7FFF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntp[1]\,
	datab => \cntp[2]\,
	datac => \cntp[0]\,
	datad => \cntp[3]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~284\);

\i~27_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~27\ = !\cntn[3]\ & !\cntn[2]\ & \state~23\ & \i~281\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "1000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntn[3]\,
	datab => \cntn[2]\,
	datac => \state~23\,
	datad => \i~281\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~27\);

\state~20_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~20\ = DFFE(command_0_local_30 & !\i~27\ & (\state~20\ # !\i~284\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00C4",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~284\,
	datab => ww_command_0_local_30,
	datac => \state~20\,
	datad => \i~27\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~20\);

\i~279_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~279\ = !\cntp[1]\ & !\cntp[0]\ & !\cntp[2]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0005",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntp[1]\,
	datac => \cntp[0]\,
	datad => \cntp[2]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~279\);

\i92~173_I\ : apex20ke_lcell 
-- Equation(s):
-- \i92~173\ = \cntp[3]\ & (i72 # \state~21\ & !\i~279\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C0C8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~21\,
	datab => \cntp[3]\,
	datac => i72,
	datad => \i~279\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i92~173\);

\i~119_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~119\ = \cntp[3]\ $ \i~118COUT\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cntp[3]\,
	cin => \i~118COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~119\);

\cntp[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cntp[3]\ = DFFE(command_0_local_30 & (\i92~173\ # !\state~20\ & \i~119\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C4C0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~20\,
	datab => ww_command_0_local_30,
	datac => \i92~173\,
	datad => \i~119\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cntp[3]\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	flasher_board IS
    PORT (
	CLK : IN std_logic;
	RST : IN std_logic;
	command_2_local_24 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	FL_Trigger : OUT std_logic;
	LEDdelay_0 : OUT std_logic
	);
END flasher_board;

ARCHITECTURE structure OF flasher_board IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_command_2_local_24 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_FL_Trigger : std_logic;
SIGNAL ww_LEDdelay_0 : std_logic;
SIGNAL \wysi_counter|sload_path[0]\ : std_logic;
SIGNAL \LEDdelay[1]\ : std_logic;
SIGNAL \LEDdelay[2]\ : std_logic;
SIGNAL \LEDdelay[3]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[0]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[1]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[1]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[2]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[2]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[3]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[3]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[4]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[4]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[5]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[5]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[6]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[6]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[7]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[7]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[8]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[8]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[9]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[9]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[10]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[10]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[11]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[11]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[12]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[12]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[13]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[13]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[14]\ : std_logic;
SIGNAL \wysi_counter|counter_cell[14]~COUT\ : std_logic;
SIGNAL \wysi_counter|sload_path[15]\ : std_logic;
SIGNAL \cnt_old[15]\ : std_logic;
SIGNAL tick : std_logic;
SIGNAL ALT_NOT_ww_command_2_local_24 : std_logic;

BEGIN

ww_CLK <= CLK;
ww_RST <= RST;
ww_command_2_local_24 <= command_2_local_24;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
FL_Trigger <= ww_FL_Trigger;
LEDdelay_0 <= ww_LEDdelay_0;
ALT_NOT_ww_command_2_local_24 <= NOT ww_command_2_local_24;

\FL_Trigger~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- FL_Trigger = DFFE(\LEDdelay[3]\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \LEDdelay[3]\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_FL_Trigger);

\LEDdelay[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- LEDdelay_0 = DFFE(tick # \wysi_counter|sload_path[15]\ $ \cnt_old[15]\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFFC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => tick,
	datac => \wysi_counter|sload_path[15]\,
	datad => \cnt_old[15]\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_LEDdelay_0);

\LEDdelay[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \LEDdelay[1]\ = DFFE(LEDdelay_0, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_LEDdelay_0,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \LEDdelay[1]\);

\LEDdelay[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \LEDdelay[2]\ = DFFE(\LEDdelay[1]\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \LEDdelay[1]\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \LEDdelay[2]\);

\LEDdelay[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \LEDdelay[3]\ = DFFE(\LEDdelay[2]\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \LEDdelay[2]\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \LEDdelay[3]\);

\wysi_counter|counter_cell[0]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|counter_cell[0]~COUT\ = CARRY()

-- pragma translate_off
GENERIC MAP (
	operation_mode => "qfbk_counter",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => ALT_NOT_ww_command_2_local_24,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \wysi_counter|counter_cell[0]~COUT\);

\wysi_counter|counter_cell[1]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[1]\ = DFFE(command_2_local_24 & \wysi_counter|sload_path[1]\ $ \wysi_counter|counter_cell[0]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[1]~COUT\ = CARRY(!\wysi_counter|counter_cell[0]~COUT\ # !\wysi_counter|sload_path[1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[1]\,
	cin => \wysi_counter|counter_cell[0]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => ALT_NOT_ww_command_2_local_24,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[1]\,
	cout => \wysi_counter|counter_cell[1]~COUT\);

\wysi_counter|counter_cell[2]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[2]\ = DFFE(command_2_local_24 & \wysi_counter|sload_path[2]\ $ !\wysi_counter|counter_cell[1]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[2]~COUT\ = CARRY(\wysi_counter|sload_path[2]\ & !\wysi_counter|counter_cell[1]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[2]\,
	cin => \wysi_counter|counter_cell[1]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => ALT_NOT_ww_command_2_local_24,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[2]\,
	cout => \wysi_counter|counter_cell[2]~COUT\);

\wysi_counter|counter_cell[3]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[3]\ = DFFE(command_2_local_24 & \wysi_counter|sload_path[3]\ $ \wysi_counter|counter_cell[2]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[3]~COUT\ = CARRY(!\wysi_counter|counter_cell[2]~COUT\ # !\wysi_counter|sload_path[3]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[3]\,
	cin => \wysi_counter|counter_cell[2]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => ALT_NOT_ww_command_2_local_24,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[3]\,
	cout => \wysi_counter|counter_cell[3]~COUT\);

\wysi_counter|counter_cell[4]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[4]\ = DFFE(command_2_local_24 & \wysi_counter|sload_path[4]\ $ !\wysi_counter|counter_cell[3]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[4]~COUT\ = CARRY(\wysi_counter|sload_path[4]\ & !\wysi_counter|counter_cell[3]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[4]\,
	cin => \wysi_counter|counter_cell[3]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => ALT_NOT_ww_command_2_local_24,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[4]\,
	cout => \wysi_counter|counter_cell[4]~COUT\);

\wysi_counter|counter_cell[5]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[5]\ = DFFE(command_2_local_24 & \wysi_counter|sload_path[5]\ $ \wysi_counter|counter_cell[4]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[5]~COUT\ = CARRY(!\wysi_counter|counter_cell[4]~COUT\ # !\wysi_counter|sload_path[5]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[5]\,
	cin => \wysi_counter|counter_cell[4]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => ALT_NOT_ww_command_2_local_24,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[5]\,
	cout => \wysi_counter|counter_cell[5]~COUT\);

\wysi_counter|counter_cell[6]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[6]\ = DFFE(command_2_local_24 & \wysi_counter|sload_path[6]\ $ !\wysi_counter|counter_cell[5]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[6]~COUT\ = CARRY(\wysi_counter|sload_path[6]\ & !\wysi_counter|counter_cell[5]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[6]\,
	cin => \wysi_counter|counter_cell[5]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => ALT_NOT_ww_command_2_local_24,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[6]\,
	cout => \wysi_counter|counter_cell[6]~COUT\);

\wysi_counter|counter_cell[7]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[7]\ = DFFE(command_2_local_24 & \wysi_counter|sload_path[7]\ $ \wysi_counter|counter_cell[6]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[7]~COUT\ = CARRY(!\wysi_counter|counter_cell[6]~COUT\ # !\wysi_counter|sload_path[7]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[7]\,
	cin => \wysi_counter|counter_cell[6]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => ALT_NOT_ww_command_2_local_24,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[7]\,
	cout => \wysi_counter|counter_cell[7]~COUT\);

\wysi_counter|counter_cell[8]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[8]\ = DFFE(command_2_local_24 & \wysi_counter|sload_path[8]\ $ !\wysi_counter|counter_cell[7]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[8]~COUT\ = CARRY(\wysi_counter|sload_path[8]\ & !\wysi_counter|counter_cell[7]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[8]\,
	cin => \wysi_counter|counter_cell[7]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => ALT_NOT_ww_command_2_local_24,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[8]\,
	cout => \wysi_counter|counter_cell[8]~COUT\);

\wysi_counter|counter_cell[9]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[9]\ = DFFE(command_2_local_24 & \wysi_counter|sload_path[9]\ $ \wysi_counter|counter_cell[8]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[9]~COUT\ = CARRY(!\wysi_counter|counter_cell[8]~COUT\ # !\wysi_counter|sload_path[9]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[9]\,
	cin => \wysi_counter|counter_cell[8]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => ALT_NOT_ww_command_2_local_24,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[9]\,
	cout => \wysi_counter|counter_cell[9]~COUT\);

\wysi_counter|counter_cell[10]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[10]\ = DFFE(command_2_local_24 & \wysi_counter|sload_path[10]\ $ !\wysi_counter|counter_cell[9]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[10]~COUT\ = CARRY(\wysi_counter|sload_path[10]\ & !\wysi_counter|counter_cell[9]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[10]\,
	cin => \wysi_counter|counter_cell[9]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => ALT_NOT_ww_command_2_local_24,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[10]\,
	cout => \wysi_counter|counter_cell[10]~COUT\);

\wysi_counter|counter_cell[11]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[11]\ = DFFE(command_2_local_24 & \wysi_counter|sload_path[11]\ $ \wysi_counter|counter_cell[10]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[11]~COUT\ = CARRY(!\wysi_counter|counter_cell[10]~COUT\ # !\wysi_counter|sload_path[11]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[11]\,
	cin => \wysi_counter|counter_cell[10]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => ALT_NOT_ww_command_2_local_24,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[11]\,
	cout => \wysi_counter|counter_cell[11]~COUT\);

\wysi_counter|counter_cell[12]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[12]\ = DFFE(command_2_local_24 & \wysi_counter|sload_path[12]\ $ !\wysi_counter|counter_cell[11]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[12]~COUT\ = CARRY(\wysi_counter|sload_path[12]\ & !\wysi_counter|counter_cell[11]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[12]\,
	cin => \wysi_counter|counter_cell[11]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => ALT_NOT_ww_command_2_local_24,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[12]\,
	cout => \wysi_counter|counter_cell[12]~COUT\);

\wysi_counter|counter_cell[13]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[13]\ = DFFE(command_2_local_24 & \wysi_counter|sload_path[13]\ $ \wysi_counter|counter_cell[12]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[13]~COUT\ = CARRY(!\wysi_counter|counter_cell[12]~COUT\ # !\wysi_counter|sload_path[13]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[13]\,
	cin => \wysi_counter|counter_cell[12]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => ALT_NOT_ww_command_2_local_24,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[13]\,
	cout => \wysi_counter|counter_cell[13]~COUT\);

\wysi_counter|counter_cell[14]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[14]\ = DFFE(command_2_local_24 & \wysi_counter|sload_path[14]\ $ !\wysi_counter|counter_cell[13]~COUT\, GLOBAL(outclock0), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[14]~COUT\ = CARRY(\wysi_counter|sload_path[14]\ & !\wysi_counter|counter_cell[13]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[14]\,
	cin => \wysi_counter|counter_cell[13]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => ALT_NOT_ww_command_2_local_24,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[14]\,
	cout => \wysi_counter|counter_cell[14]~COUT\);

\wysi_counter|counter_cell[15]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[15]\ = DFFE(command_2_local_24 & \wysi_counter|counter_cell[14]~COUT\ $ \wysi_counter|sload_path[15]\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|sload_path[15]\,
	cin => \wysi_counter|counter_cell[14]~COUT\,
	clk => ww_CLK,
	aclr => ww_RST,
	sclr => ALT_NOT_ww_command_2_local_24,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \wysi_counter|sload_path[15]\);

\cnt_old[15]~I\ : apex20ke_lcell 
-- Equation(s):
-- \cnt_old[15]\ = DFFE(\wysi_counter|sload_path[15]\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|sload_path[15]\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cnt_old[15]\);

\tick~I\ : apex20ke_lcell 
-- Equation(s):
-- tick = DFFE(\wysi_counter|sload_path[15]\ $ \cnt_old[15]\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|sload_path[15]\,
	datad => \cnt_old[15]\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => tick);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_shiftreg_4 IS
    PORT (
	clock : IN std_logic;
	txctclr : IN std_logic;
	txshld : IN std_logic;
	enable : IN std_logic;
	ctrl_val : IN std_logic;
	i : IN std_logic;
	i1 : IN std_logic;
	i2 : IN std_logic;
	i3 : IN std_logic;
	i4 : IN std_logic;
	i5 : IN std_logic;
	i6 : IN std_logic;
	i7 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	dffs_0 : OUT std_logic
	);
END lpm_shiftreg_4;

ARCHITECTURE structure OF lpm_shiftreg_4 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_txctclr : std_logic;
SIGNAL ww_txshld : std_logic;
SIGNAL ww_enable : std_logic;
SIGNAL ww_ctrl_val : std_logic;
SIGNAL ww_i : std_logic;
SIGNAL ww_i1 : std_logic;
SIGNAL ww_i2 : std_logic;
SIGNAL ww_i3 : std_logic;
SIGNAL ww_i4 : std_logic;
SIGNAL ww_i5 : std_logic;
SIGNAL ww_i6 : std_logic;
SIGNAL ww_i7 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_dffs_0 : std_logic;
SIGNAL \dffs[9]\ : std_logic;
SIGNAL \dffs[8]\ : std_logic;
SIGNAL \dffs[7]\ : std_logic;
SIGNAL \dffs[6]\ : std_logic;
SIGNAL \dffs[5]\ : std_logic;
SIGNAL \dffs[4]\ : std_logic;
SIGNAL \dffs[3]\ : std_logic;
SIGNAL \dffs[2]\ : std_logic;
SIGNAL \dffs[1]\ : std_logic;
SIGNAL ALT_NOT_ww_txctclr : std_logic;

BEGIN

ww_clock <= clock;
ww_txctclr <= txctclr;
ww_txshld <= txshld;
ww_enable <= enable;
ww_ctrl_val <= ctrl_val;
ww_i <= i;
ww_i1 <= i1;
ww_i2 <= i2;
ww_i3 <= i3;
ww_i4 <= i4;
ww_i5 <= i5;
ww_i6 <= i6;
ww_i7 <= i7;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
dffs_0 <= ww_dffs_0;
ALT_NOT_ww_txctclr <= NOT ww_txctclr;

\dffs[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- dffs_0 = DFFE(txshld # \dffs[1]\, GLOBAL(outclock0), txctclr, , txshen)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFF0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_txshld,
	datad => \dffs[1]\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_txctclr,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dffs_0);

\dffs[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[9]\ = DFFE(!ctrl_val # !txshld, GLOBAL(outclock0), txctclr, , txshen)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0FFF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_txshld,
	datad => ww_ctrl_val,
	clk => ww_clock,
	aclr => ALT_NOT_ww_txctclr,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[9]\);

\dffs[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[8]\ = DFFE(\dffs[9]\ & (i7 # !txshld) # !\dffs[9]\ & txshld & i7, GLOBAL(outclock0), txctclr, , txshen)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[9]\,
	datac => ww_txshld,
	datad => ww_i7,
	clk => ww_clock,
	aclr => ALT_NOT_ww_txctclr,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[8]\);

\dffs[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[7]\ = DFFE(\dffs[8]\ & (i6 # !txshld) # !\dffs[8]\ & txshld & i6, GLOBAL(outclock0), txctclr, , txshen)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[8]\,
	datac => ww_txshld,
	datad => ww_i6,
	clk => ww_clock,
	aclr => ALT_NOT_ww_txctclr,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[7]\);

\dffs[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[6]\ = DFFE(txshld & i5 # !txshld & \dffs[7]\, GLOBAL(outclock0), txctclr, , txshen)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3C0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_txshld,
	datac => ww_i5,
	datad => \dffs[7]\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_txctclr,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[6]\);

\dffs[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[5]\ = DFFE(txshld & i4 # !txshld & \dffs[6]\, GLOBAL(outclock0), txctclr, , txshen)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F5A0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_txshld,
	datac => ww_i4,
	datad => \dffs[6]\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_txctclr,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[5]\);

\dffs[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[4]\ = DFFE(\dffs[5]\ & (i3 # !txshld) # !\dffs[5]\ & txshld & i3, GLOBAL(outclock0), txctclr, , txshen)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[5]\,
	datac => ww_txshld,
	datad => ww_i3,
	clk => ww_clock,
	aclr => ALT_NOT_ww_txctclr,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[4]\);

\dffs[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[3]\ = DFFE(txshld & i2 # !txshld & \dffs[4]\, GLOBAL(outclock0), txctclr, , txshen)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F5A0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_txshld,
	datac => ww_i2,
	datad => \dffs[4]\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_txctclr,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[3]\);

\dffs[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[2]\ = DFFE(txshld & i1 # !txshld & \dffs[3]\, GLOBAL(outclock0), txctclr, , txshen)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F5A0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_txshld,
	datac => ww_i1,
	datad => \dffs[3]\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_txctclr,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[2]\);

\dffs[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[1]\ = DFFE(txshld & i # !txshld & \dffs[2]\, GLOBAL(outclock0), txctclr, , txshen)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F5A0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_txshld,
	datac => ww_i,
	datad => \dffs[2]\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_txctclr,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[1]\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	txshr10 IS
    PORT (
	clock : IN std_logic;
	txctclr : IN std_logic;
	txshld : IN std_logic;
	enable : IN std_logic;
	ctrl_val : IN std_logic;
	i : IN std_logic;
	i1 : IN std_logic;
	i2 : IN std_logic;
	i3 : IN std_logic;
	i4 : IN std_logic;
	i5 : IN std_logic;
	i6 : IN std_logic;
	i7 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	dffs_0 : OUT std_logic
	);
END txshr10;

ARCHITECTURE structure OF txshr10 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_txctclr : std_logic;
SIGNAL ww_txshld : std_logic;
SIGNAL ww_enable : std_logic;
SIGNAL ww_ctrl_val : std_logic;
SIGNAL ww_i : std_logic;
SIGNAL ww_i1 : std_logic;
SIGNAL ww_i2 : std_logic;
SIGNAL ww_i3 : std_logic;
SIGNAL ww_i4 : std_logic;
SIGNAL ww_i5 : std_logic;
SIGNAL ww_i6 : std_logic;
SIGNAL ww_i7 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_dffs_0 : std_logic;

COMPONENT lpm_shiftreg_4
    PORT (
	clock : IN std_logic;
	txctclr : IN std_logic;
	txshld : IN std_logic;
	enable : IN std_logic;
	ctrl_val : IN std_logic;
	i : IN std_logic;
	i1 : IN std_logic;
	i2 : IN std_logic;
	i3 : IN std_logic;
	i4 : IN std_logic;
	i5 : IN std_logic;
	i6 : IN std_logic;
	i7 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	dffs_0 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_txctclr <= txctclr;
ww_txshld <= txshld;
ww_enable <= enable;
ww_ctrl_val <= ctrl_val;
ww_i <= i;
ww_i1 <= i1;
ww_i2 <= i2;
ww_i3 <= i3;
ww_i4 <= i4;
ww_i5 <= i5;
ww_i6 <= i6;
ww_i7 <= i7;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
dffs_0 <= ww_dffs_0;
lpm_shiftreg_component : lpm_shiftreg_4
PORT MAP (
	clock => ww_clock,
	txctclr => ww_txctclr,
	txshld => ww_txshld,
	enable => ww_enable,
	ctrl_val => ww_ctrl_val,
	i => ww_i,
	i1 => ww_i1,
	i2 => ww_i2,
	i3 => ww_i3,
	i4 => ww_i4,
	i5 => ww_i5,
	i6 => ww_i6,
	i7 => ww_i7,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	dffs_0 => ww_dffs_0);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	TX_UART IS
    PORT (
	sload_path_4 : IN std_logic;
	sload_path_0 : IN std_logic;
	CLK : IN std_logic;
	RST : IN std_logic;
	ctrl_val : IN std_logic;
	data_val : IN std_logic;
	aeb_out : IN std_logic;
	cout : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	txctclr : OUT std_logic;
	txshld : OUT std_logic;
	txshen : OUT std_logic;
	txidle : OUT std_logic
	);
END TX_UART;

ARCHITECTURE structure OF TX_UART IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_CLK : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_ctrl_val : std_logic;
SIGNAL ww_data_val : std_logic;
SIGNAL ww_aeb_out : std_logic;
SIGNAL ww_cout : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_txctclr : std_logic;
SIGNAL ww_txshld : std_logic;
SIGNAL ww_txshen : std_logic;
SIGNAL ww_txidle : std_logic;
SIGNAL \_~8\ : std_logic;
SIGNAL \sreg1~33\ : std_logic;
SIGNAL \sreg1~34\ : std_logic;
SIGNAL \_~128\ : std_logic;
SIGNAL \sreg1~31\ : std_logic;
SIGNAL \txctclr~20\ : std_logic;
SIGNAL \sreg1~32\ : std_logic;
SIGNAL \_~129\ : std_logic;
SIGNAL \_~7\ : std_logic;

BEGIN

ww_sload_path_4 <= sload_path_4;
ww_sload_path_0 <= sload_path_0;
ww_CLK <= CLK;
ww_RST <= RST;
ww_ctrl_val <= ctrl_val;
ww_data_val <= data_val;
ww_aeb_out <= aeb_out;
ww_cout <= cout;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
txctclr <= ww_txctclr;
txshld <= ww_txshld;
txshen <= ww_txshen;
txidle <= ww_txidle;

\txctclr~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- txctclr = DFFE(!\txctclr~20\ & (!\_~128\ # !\sreg1~34\ # !cout1), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "007F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_cout,
	datab => \sreg1~34\,
	datac => \_~128\,
	datad => \txctclr~20\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_txctclr);

\txshld~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- txshld = DFFE(\sreg1~32\ # \sreg1~34\ & !\_~128\ & cout1, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AEAA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg1~32\,
	datab => \sreg1~34\,
	datac => \_~128\,
	datad => ww_cout,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_txshld);

\txshen~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- txshen = DFFE(\sreg1~32\ # \_~7\ # !\_~128\ & \_~129\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFF4",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \_~128\,
	datab => \_~129\,
	datac => \sreg1~32\,
	datad => \_~7\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_txshen);

\txidle~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- txidle = DFFE(!\sreg1~31\ & (ctrl_val # data_val # txidle), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5554",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg1~31\,
	datab => ww_ctrl_val,
	datac => ww_data_val,
	datad => ww_txidle,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_txidle);

\_~8_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~8\ = \sreg1~33\ & (sload_path_0 # !aeb_out # !sload_path_4)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8CCC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_0,
	datab => \sreg1~33\,
	datac => ww_sload_path_4,
	datad => ww_aeb_out,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~8\);

\sreg1~33_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg1~33\ = DFFE(\_~8\ # txshld # !cout1 & \sreg1~34\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FDFC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_cout,
	datab => \_~8\,
	datac => ww_txshld,
	datad => \sreg1~34\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg1~33\);

\sreg1~34_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg1~34\ = DFFE(\sreg1~33\ & !sload_path_0 & sload_path_4 & aeb_out, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "2000",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg1~33\,
	datab => ww_sload_path_0,
	datac => ww_sload_path_4,
	datad => ww_aeb_out,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg1~34\);

\_~128_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~128\ = !data_val & !ctrl_val

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "000F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_data_val,
	datad => ww_ctrl_val,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~128\);

\sreg1~31_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg1~31\ = DFFE(!data_val & !ctrl_val & cout1 & \sreg1~34\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "1000",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_data_val,
	datab => ww_ctrl_val,
	datac => ww_cout,
	datad => \sreg1~34\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg1~31\);

\txctclr~20_I\ : apex20ke_lcell 
-- Equation(s):
-- \txctclr~20\ = \sreg1~31\ # !txidle

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0FF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \sreg1~31\,
	datad => ww_txidle,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \txctclr~20\);

\sreg1~32_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg1~32\ = DFFE(!txidle & (ctrl_val # data_val), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00FC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_ctrl_val,
	datac => ww_data_val,
	datad => ww_txidle,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg1~32\);

\_~129_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~129\ = cout1 & \sreg1~34\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_cout,
	datad => \sreg1~34\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~129\);

\_~7_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~7\ = !sload_path_0 & \sreg1~33\ & aeb_out & sload_path_4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "4000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_0,
	datab => \sreg1~33\,
	datac => ww_aeb_out,
	datad => ww_sload_path_4,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~7\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	cmpchain_9 IS
    PORT (
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic
	);
END cmpchain_9;

ARCHITECTURE structure OF cmpchain_9 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_aeb_out : std_logic;

BEGIN

ww_sload_path_3 <= sload_path_3;
ww_sload_path_2 <= sload_path_2;
ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
aeb_out <= ww_aeb_out;

\aeb_out~25\ : apex20ke_lcell 
-- Equation(s):
-- aeb_out = !\sload_path[1]\ & !\sload_path[2]\ & \sload_path[3]\ & \sload_path[0]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "1000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_1,
	datab => ww_sload_path_2,
	datac => ww_sload_path_3,
	datad => ww_sload_path_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_aeb_out);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	comptree_8 IS
    PORT (
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic
	);
END comptree_8;

ARCHITECTURE structure OF comptree_8 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_aeb_out : std_logic;

COMPONENT cmpchain_9
    PORT (
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic);
END COMPONENT;

BEGIN

ww_sload_path_3 <= sload_path_3;
ww_sload_path_2 <= sload_path_2;
ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
aeb_out <= ww_aeb_out;
cmp_end : cmpchain_9
PORT MAP (
	sload_path_3 => ww_sload_path_3,
	sload_path_2 => ww_sload_path_2,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	aeb_out => ww_aeb_out);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_compare_6 IS
    PORT (
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic
	);
END lpm_compare_6;

ARCHITECTURE structure OF lpm_compare_6 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_aeb_out : std_logic;

COMPONENT comptree_8
    PORT (
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic);
END COMPONENT;

BEGIN

ww_sload_path_3 <= sload_path_3;
ww_sload_path_2 <= sload_path_2;
ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
aeb_out <= ww_aeb_out;
comparator : comptree_8
PORT MAP (
	sload_path_3 => ww_sload_path_3,
	sload_path_2 => ww_sload_path_2,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	aeb_out => ww_aeb_out);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	alt_synch_counter_16 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cout1 : OUT std_logic
	);
END alt_synch_counter_16;

ARCHITECTURE structure OF alt_synch_counter_16 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_clk_en : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_cout1 : std_logic;
SIGNAL \sload_path[0]\ : std_logic;
SIGNAL \the_cout~COMBOUT\ : std_logic;
SIGNAL \cmp_end|aeb_out\ : std_logic;
SIGNAL \counter_cell[0]~COUT\ : std_logic;
SIGNAL \sload_path[1]\ : std_logic;
SIGNAL \counter_cell[1]~COUT\ : std_logic;
SIGNAL \sload_path[2]\ : std_logic;
SIGNAL \counter_cell[2]~COUT\ : std_logic;
SIGNAL \sload_path[3]\ : std_logic;
SIGNAL \counter_cell[3]~COUT\ : std_logic;
SIGNAL cout : std_logic;
SIGNAL ALT_NOT_ww_aclr : std_logic;

COMPONENT lpm_compare_6
    PORT (
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_clk_en <= clk_en;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
cout1 <= ww_cout1;
ALT_NOT_ww_aclr <= NOT ww_aclr;
\$00012\ : lpm_compare_6
PORT MAP (
	sload_path_3 => \sload_path[3]\,
	sload_path_2 => \sload_path[2]\,
	sload_path_1 => \sload_path[1]\,
	sload_path_0 => \sload_path[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	aeb_out => \cmp_end|aeb_out\);

\counter_cell[0]\ : apex20ke_lcell 
-- Equation(s):
-- \sload_path[0]\ = DFFE(!aeb_out & !\sload_path[0]\, GLOBAL(outclock0), txctclr, , cout1)
-- \counter_cell[0]~COUT\ = CARRY(\sload_path[0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "qfbk_counter",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	ena => ww_clk_en,
	sclr => \cmp_end|aeb_out\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sload_path[0]\,
	cout => \counter_cell[0]~COUT\);

\cout~0_I\ : apex20ke_lcell 
-- Equation(s):
-- cout1 = cout

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	cin => cout,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_cout1);

\counter_cell[1]\ : apex20ke_lcell 
-- Equation(s):
-- \sload_path[1]\ = DFFE(!aeb_out & \sload_path[1]\ $ \counter_cell[0]~COUT\, GLOBAL(outclock0), txctclr, , cout1)
-- \counter_cell[1]~COUT\ = CARRY(!\counter_cell[0]~COUT\ # !\sload_path[1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \sload_path[1]\,
	cin => \counter_cell[0]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	ena => ww_clk_en,
	sclr => \cmp_end|aeb_out\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sload_path[1]\,
	cout => \counter_cell[1]~COUT\);

\counter_cell[2]\ : apex20ke_lcell 
-- Equation(s):
-- \sload_path[2]\ = DFFE(!aeb_out & \sload_path[2]\ $ !\counter_cell[1]~COUT\, GLOBAL(outclock0), txctclr, , cout1)
-- \counter_cell[2]~COUT\ = CARRY(\sload_path[2]\ & !\counter_cell[1]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \sload_path[2]\,
	cin => \counter_cell[1]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	ena => ww_clk_en,
	sclr => \cmp_end|aeb_out\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sload_path[2]\,
	cout => \counter_cell[2]~COUT\);

\counter_cell[3]\ : apex20ke_lcell 
-- Equation(s):
-- \sload_path[3]\ = DFFE(!aeb_out & \sload_path[3]\ $ \counter_cell[2]~COUT\, GLOBAL(outclock0), txctclr, , cout1)
-- \counter_cell[3]~COUT\ = CARRY(!\counter_cell[2]~COUT\ # !\sload_path[3]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \sload_path[3]\,
	cin => \counter_cell[2]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	ena => ww_clk_en,
	sclr => \cmp_end|aeb_out\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sload_path[3]\,
	cout => \counter_cell[3]~COUT\);

the_cout : apex20ke_lcell 
-- Equation(s):
-- cout = CARRY(aeb_out # !\counter_cell[3]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "00CF",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	datab => \cmp_end|aeb_out\,
	cin => \counter_cell[3]~COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => cout);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_counter_16 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cout : OUT std_logic
	);
END lpm_counter_16;

ARCHITECTURE structure OF lpm_counter_16 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_clk_en : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_cout : std_logic;

COMPONENT alt_synch_counter_16
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cout1 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_clk_en <= clk_en;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
cout <= ww_cout;
wysi_counter : alt_synch_counter_16
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	clk_en => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	cout1 => ww_cout);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	txbitct IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cout : OUT std_logic
	);
END txbitct;

ARCHITECTURE structure OF txbitct IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_clk_en : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_cout : std_logic;

COMPONENT lpm_counter_16
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cout : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_clk_en <= clk_en;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
cout <= ww_cout;
lpm_counter_component : lpm_counter_16
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	clk_en => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	cout => ww_cout);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	cmpchain_11 IS
    PORT (
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic;
	aeb_out1 : OUT std_logic
	);
END cmpchain_11;

ARCHITECTURE structure OF cmpchain_11 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_aeb_out : std_logic;
SIGNAL ww_aeb_out1 : std_logic;

BEGIN

ww_sload_path_3 <= sload_path_3;
ww_sload_path_2 <= sload_path_2;
ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
aeb_out <= ww_aeb_out;
aeb_out1 <= ww_aeb_out1;

\aeb_out~10_I\ : apex20ke_lcell 
-- Equation(s):
-- aeb_out = !sload_path_2 & !sload_path_3 & sload_path_1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_2,
	datac => ww_sload_path_3,
	datad => ww_sload_path_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_aeb_out);

\aeb_out~0\ : apex20ke_lcell 
-- Equation(s):
-- aeb_out1 = !sload_path_2 & sload_path_0 & sload_path_1 & !sload_path_3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0040",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_2,
	datab => ww_sload_path_0,
	datac => ww_sload_path_1,
	datad => ww_sload_path_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_aeb_out1);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	cmpchain_12 IS
    PORT (
	sload_path_4 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic
	);
END cmpchain_12;

ARCHITECTURE structure OF cmpchain_12 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_aeb_out : std_logic;

BEGIN

ww_sload_path_4 <= sload_path_4;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
aeb_out <= ww_aeb_out;

\aeb_out~0\ : apex20ke_lcell 
-- Equation(s):
-- aeb_out = sload_path_4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_4,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_aeb_out);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	cmpchain_13 IS
    PORT (
	aeb_out1 : IN std_logic;
	aeb_out2 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic
	);
END cmpchain_13;

ARCHITECTURE structure OF cmpchain_13 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_aeb_out1 : std_logic;
SIGNAL ww_aeb_out2 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_aeb_out : std_logic;

BEGIN

ww_aeb_out1 <= aeb_out1;
ww_aeb_out2 <= aeb_out2;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
aeb_out <= ww_aeb_out;

\aeb_out~0\ : apex20ke_lcell 
-- Equation(s):
-- aeb_out = aeb_out & aeb_out1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_aeb_out2,
	datad => ww_aeb_out1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_aeb_out);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	comptree_11 IS
    PORT (
	aeb_out1 : IN std_logic;
	aeb_out2 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic
	);
END comptree_11;

ARCHITECTURE structure OF comptree_11 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_aeb_out1 : std_logic;
SIGNAL ww_aeb_out2 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_aeb_out : std_logic;

COMPONENT cmpchain_13
    PORT (
	aeb_out1 : IN std_logic;
	aeb_out2 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic);
END COMPONENT;

BEGIN

ww_aeb_out1 <= aeb_out1;
ww_aeb_out2 <= aeb_out2;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
aeb_out <= ww_aeb_out;
cmp_end : cmpchain_13
PORT MAP (
	aeb_out1 => ww_aeb_out1,
	aeb_out2 => ww_aeb_out2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	aeb_out => ww_aeb_out);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	comptree_10 IS
    PORT (
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic;
	aeb_out1 : OUT std_logic
	);
END comptree_10;

ARCHITECTURE structure OF comptree_10 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_aeb_out : std_logic;
SIGNAL ww_aeb_out1 : std_logic;
SIGNAL \cmp[0]|aeb_out\ : std_logic;
SIGNAL \cmp_end|aeb_out\ : std_logic;

COMPONENT cmpchain_11
    PORT (
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic;
	aeb_out1 : OUT std_logic);
END COMPONENT;

COMPONENT cmpchain_12
    PORT (
	sload_path_4 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic);
END COMPONENT;

COMPONENT comptree_11
    PORT (
	aeb_out1 : IN std_logic;
	aeb_out2 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic);
END COMPONENT;

BEGIN

ww_sload_path_4 <= sload_path_4;
ww_sload_path_3 <= sload_path_3;
ww_sload_path_2 <= sload_path_2;
ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
aeb_out <= ww_aeb_out;
aeb_out1 <= ww_aeb_out1;
\cmp[0]\ : cmpchain_11
PORT MAP (
	sload_path_3 => ww_sload_path_3,
	sload_path_2 => ww_sload_path_2,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	aeb_out => ww_aeb_out1,
	aeb_out1 => \cmp[0]|aeb_out\);
cmp_end : cmpchain_12
PORT MAP (
	sload_path_4 => ww_sload_path_4,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	aeb_out => \cmp_end|aeb_out\);
sub_comptree : comptree_11
PORT MAP (
	aeb_out1 => \cmp[0]|aeb_out\,
	aeb_out2 => \cmp_end|aeb_out\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	aeb_out => ww_aeb_out);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	cmpchain_10 IS
    PORT (
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic;
	aeb_out1 : OUT std_logic
	);
END cmpchain_10;

ARCHITECTURE structure OF cmpchain_10 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_aeb_out : std_logic;
SIGNAL ww_aeb_out1 : std_logic;

COMPONENT comptree_10
    PORT (
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic;
	aeb_out1 : OUT std_logic);
END COMPONENT;

BEGIN

ww_sload_path_4 <= sload_path_4;
ww_sload_path_3 <= sload_path_3;
ww_sload_path_2 <= sload_path_2;
ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
aeb_out <= ww_aeb_out;
aeb_out1 <= ww_aeb_out1;
comp : comptree_10
PORT MAP (
	sload_path_4 => ww_sload_path_4,
	sload_path_3 => ww_sload_path_3,
	sload_path_2 => ww_sload_path_2,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	aeb_out => ww_aeb_out,
	aeb_out1 => ww_aeb_out1);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	comptree_9 IS
    PORT (
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic;
	aeb_out1 : OUT std_logic
	);
END comptree_9;

ARCHITECTURE structure OF comptree_9 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_aeb_out : std_logic;
SIGNAL ww_aeb_out1 : std_logic;

COMPONENT cmpchain_10
    PORT (
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic;
	aeb_out1 : OUT std_logic);
END COMPONENT;

BEGIN

ww_sload_path_4 <= sload_path_4;
ww_sload_path_3 <= sload_path_3;
ww_sload_path_2 <= sload_path_2;
ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
aeb_out <= ww_aeb_out;
aeb_out1 <= ww_aeb_out1;
cmp_end : cmpchain_10
PORT MAP (
	sload_path_4 => ww_sload_path_4,
	sload_path_3 => ww_sload_path_3,
	sload_path_2 => ww_sload_path_2,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	aeb_out => ww_aeb_out,
	aeb_out1 => ww_aeb_out1);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_compare_7 IS
    PORT (
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic;
	aeb_out1 : OUT std_logic
	);
END lpm_compare_7;

ARCHITECTURE structure OF lpm_compare_7 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_aeb_out : std_logic;
SIGNAL ww_aeb_out1 : std_logic;

COMPONENT comptree_9
    PORT (
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic;
	aeb_out1 : OUT std_logic);
END COMPONENT;

BEGIN

ww_sload_path_4 <= sload_path_4;
ww_sload_path_3 <= sload_path_3;
ww_sload_path_2 <= sload_path_2;
ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
aeb_out <= ww_aeb_out;
aeb_out1 <= ww_aeb_out1;
comparator : comptree_9
PORT MAP (
	sload_path_4 => ww_sload_path_4,
	sload_path_3 => ww_sload_path_3,
	sload_path_2 => ww_sload_path_2,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	aeb_out => ww_aeb_out,
	aeb_out1 => ww_aeb_out1);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	alt_synch_counter_17 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic;
	aeb_out : OUT std_logic;
	cout1 : OUT std_logic
	);
END alt_synch_counter_17;

ARCHITECTURE structure OF alt_synch_counter_17 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_aeb_out : std_logic;
SIGNAL ww_cout1 : std_logic;
SIGNAL \the_cout~COMBOUT\ : std_logic;
SIGNAL \cmp_end|aeb_out\ : std_logic;
SIGNAL \counter_cell[4]~COUT\ : std_logic;
SIGNAL \counter_cell[3]~COUT\ : std_logic;
SIGNAL \counter_cell[2]~COUT\ : std_logic;
SIGNAL \counter_cell[1]~COUT\ : std_logic;
SIGNAL \counter_cell[0]~COUT\ : std_logic;
SIGNAL cout : std_logic;
SIGNAL ALT_NOT_ww_aclr : std_logic;

COMPONENT lpm_compare_7
    PORT (
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic;
	aeb_out1 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_4 <= ww_sload_path_4;
sload_path_3 <= ww_sload_path_3;
sload_path_2 <= ww_sload_path_2;
sload_path_1 <= ww_sload_path_1;
sload_path_0 <= ww_sload_path_0;
aeb_out <= ww_aeb_out;
cout1 <= ww_cout1;
ALT_NOT_ww_aclr <= NOT ww_aclr;
\$00013\ : lpm_compare_7
PORT MAP (
	sload_path_4 => ww_sload_path_4,
	sload_path_3 => ww_sload_path_3,
	sload_path_2 => ww_sload_path_2,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	aeb_out => \cmp_end|aeb_out\,
	aeb_out1 => ww_aeb_out);

\counter_cell[4]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_4 = DFFE(!aeb_out & sload_path_4 $ !\counter_cell[3]~COUT\, GLOBAL(outclock0), txctclr, , )
-- \counter_cell[4]~COUT\ = CARRY(sload_path_4 & !\counter_cell[3]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_4,
	cin => \counter_cell[3]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sclr => \cmp_end|aeb_out\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_4,
	cout => \counter_cell[4]~COUT\);

\counter_cell[3]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_3 = DFFE(!aeb_out & sload_path_3 $ \counter_cell[2]~COUT\, GLOBAL(outclock0), txctclr, , )
-- \counter_cell[3]~COUT\ = CARRY(!\counter_cell[2]~COUT\ # !sload_path_3)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_3,
	cin => \counter_cell[2]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sclr => \cmp_end|aeb_out\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_3,
	cout => \counter_cell[3]~COUT\);

\counter_cell[2]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_2 = DFFE(!aeb_out & sload_path_2 $ !\counter_cell[1]~COUT\, GLOBAL(outclock0), txctclr, , )
-- \counter_cell[2]~COUT\ = CARRY(sload_path_2 & !\counter_cell[1]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_2,
	cin => \counter_cell[1]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sclr => \cmp_end|aeb_out\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_2,
	cout => \counter_cell[2]~COUT\);

\counter_cell[1]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_1 = DFFE(!aeb_out & sload_path_1 $ \counter_cell[0]~COUT\, GLOBAL(outclock0), txctclr, , )
-- \counter_cell[1]~COUT\ = CARRY(!\counter_cell[0]~COUT\ # !sload_path_1)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_1,
	cin => \counter_cell[0]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sclr => \cmp_end|aeb_out\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_1,
	cout => \counter_cell[1]~COUT\);

\counter_cell[0]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_0 = DFFE(!aeb_out & !sload_path_0, GLOBAL(outclock0), txctclr, , )
-- \counter_cell[0]~COUT\ = CARRY(sload_path_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "qfbk_counter",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sclr => \cmp_end|aeb_out\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_0,
	cout => \counter_cell[0]~COUT\);

\cout~0_I\ : apex20ke_lcell 
-- Equation(s):
-- cout1 = !cout

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0F0F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	cin => cout,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_cout1);

the_cout : apex20ke_lcell 
-- Equation(s):
-- cout = CARRY(!aeb_out & !\counter_cell[4]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0003",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	datab => \cmp_end|aeb_out\,
	cin => \counter_cell[4]~COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => cout);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_counter_17 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic;
	aeb_out : OUT std_logic;
	cout : OUT std_logic
	);
END lpm_counter_17;

ARCHITECTURE structure OF lpm_counter_17 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_aeb_out : std_logic;
SIGNAL ww_cout : std_logic;

COMPONENT alt_synch_counter_17
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic;
	aeb_out : OUT std_logic;
	cout1 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_4 <= ww_sload_path_4;
sload_path_3 <= ww_sload_path_3;
sload_path_2 <= ww_sload_path_2;
sload_path_1 <= ww_sload_path_1;
sload_path_0 <= ww_sload_path_0;
aeb_out <= ww_aeb_out;
cout <= ww_cout;
wysi_counter : alt_synch_counter_17
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_4 => ww_sload_path_4,
	sload_path_3 => ww_sload_path_3,
	sload_path_2 => ww_sload_path_2,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	aeb_out => ww_aeb_out,
	cout1 => ww_cout);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	txct IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic;
	aeb_out : OUT std_logic;
	cout : OUT std_logic
	);
END txct;

ARCHITECTURE structure OF txct IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_aeb_out : std_logic;
SIGNAL ww_cout : std_logic;

COMPONENT lpm_counter_17
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic;
	aeb_out : OUT std_logic;
	cout : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_4 <= ww_sload_path_4;
sload_path_3 <= ww_sload_path_3;
sload_path_2 <= ww_sload_path_2;
sload_path_1 <= ww_sload_path_1;
sload_path_0 <= ww_sload_path_0;
aeb_out <= ww_aeb_out;
cout <= ww_cout;
lpm_counter_component : lpm_counter_17
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_4 => ww_sload_path_4,
	sload_path_3 => ww_sload_path_3,
	sload_path_2 => ww_sload_path_2,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	aeb_out => ww_aeb_out,
	cout => ww_cout);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	tx_uart_ap IS
    PORT (
	tx_clk : IN std_logic;
	RST : IN std_logic;
	ctrl_val : IN std_logic;
	data_val : IN std_logic;
	i : IN std_logic;
	i1 : IN std_logic;
	i2 : IN std_logic;
	i3 : IN std_logic;
	i4 : IN std_logic;
	i5 : IN std_logic;
	i6 : IN std_logic;
	i7 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	dffs_0 : OUT std_logic;
	txshld : OUT std_logic;
	tx_idle : OUT std_logic
	);
END tx_uart_ap;

ARCHITECTURE structure OF tx_uart_ap IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_tx_clk : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_ctrl_val : std_logic;
SIGNAL ww_data_val : std_logic;
SIGNAL ww_i : std_logic;
SIGNAL ww_i1 : std_logic;
SIGNAL ww_i2 : std_logic;
SIGNAL ww_i3 : std_logic;
SIGNAL ww_i4 : std_logic;
SIGNAL ww_i5 : std_logic;
SIGNAL ww_i6 : std_logic;
SIGNAL ww_i7 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_dffs_0 : std_logic;
SIGNAL ww_txshld : std_logic;
SIGNAL ww_tx_idle : std_logic;
SIGNAL \wysi_counter|sload_path[0]\ : std_logic;
SIGNAL \inst|txctclr~reg\ : std_logic;
SIGNAL \inst|txshen~reg\ : std_logic;
SIGNAL \cmp[0]|aeb_out~10\ : std_logic;
SIGNAL \wysi_counter|cout~0\ : std_logic;
SIGNAL \wysi_counter|cout~0_1\ : std_logic;

COMPONENT txshr10
    PORT (
	clock : IN std_logic;
	txctclr : IN std_logic;
	txshld : IN std_logic;
	enable : IN std_logic;
	ctrl_val : IN std_logic;
	i : IN std_logic;
	i1 : IN std_logic;
	i2 : IN std_logic;
	i3 : IN std_logic;
	i4 : IN std_logic;
	i5 : IN std_logic;
	i6 : IN std_logic;
	i7 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	dffs_0 : OUT std_logic);
END COMPONENT;

COMPONENT TX_UART
    PORT (
	sload_path_4 : IN std_logic;
	sload_path_0 : IN std_logic;
	CLK : IN std_logic;
	RST : IN std_logic;
	ctrl_val : IN std_logic;
	data_val : IN std_logic;
	aeb_out : IN std_logic;
	cout : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	txctclr : OUT std_logic;
	txshld : OUT std_logic;
	txshen : OUT std_logic;
	txidle : OUT std_logic);
END COMPONENT;

COMPONENT txbitct
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cout : OUT std_logic);
END COMPONENT;

COMPONENT txct
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic;
	aeb_out : OUT std_logic;
	cout : OUT std_logic);
END COMPONENT;

BEGIN

ww_tx_clk <= tx_clk;
ww_RST <= RST;
ww_ctrl_val <= ctrl_val;
ww_data_val <= data_val;
ww_i <= i;
ww_i1 <= i1;
ww_i2 <= i2;
ww_i3 <= i3;
ww_i4 <= i4;
ww_i5 <= i5;
ww_i6 <= i6;
ww_i7 <= i7;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_4 <= ww_sload_path_4;
sload_path_3 <= ww_sload_path_3;
sload_path_2 <= ww_sload_path_2;
sload_path_1 <= ww_sload_path_1;
dffs_0 <= ww_dffs_0;
txshld <= ww_txshld;
tx_idle <= ww_tx_idle;
\53\ : txshr10
PORT MAP (
	clock => ww_tx_clk,
	txctclr => \inst|txctclr~reg\,
	txshld => ww_txshld,
	enable => \inst|txshen~reg\,
	ctrl_val => ww_ctrl_val,
	i => ww_i,
	i1 => ww_i1,
	i2 => ww_i2,
	i3 => ww_i3,
	i4 => ww_i4,
	i5 => ww_i5,
	i6 => ww_i6,
	i7 => ww_i7,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	dffs_0 => ww_dffs_0);
inst : TX_UART
PORT MAP (
	sload_path_4 => ww_sload_path_4,
	sload_path_0 => \wysi_counter|sload_path[0]\,
	CLK => ww_tx_clk,
	RST => ww_RST,
	ctrl_val => ww_ctrl_val,
	data_val => ww_data_val,
	aeb_out => \cmp[0]|aeb_out~10\,
	cout => \wysi_counter|cout~0_1\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	txctclr => \inst|txctclr~reg\,
	txshld => ww_txshld,
	txshen => \inst|txshen~reg\,
	txidle => ww_tx_idle);
inst2 : txbitct
PORT MAP (
	clock => ww_tx_clk,
	aclr => \inst|txctclr~reg\,
	clk_en => \wysi_counter|cout~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	cout => \wysi_counter|cout~0_1\);
inst1 : txct
PORT MAP (
	clock => ww_tx_clk,
	aclr => \inst|txctclr~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_4 => ww_sload_path_4,
	sload_path_3 => ww_sload_path_3,
	sload_path_2 => ww_sload_path_2,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => \wysi_counter|sload_path[0]\,
	aeb_out => \cmp[0]|aeb_out~10\,
	cout => \wysi_counter|cout~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	DC_SNAP IS
    PORT (
	CLK : IN std_logic;
	portadataout_0 : IN std_logic;
	portadataout_1 : IN std_logic;
	buf_res : IN std_logic;
	send_data : IN std_logic;
	sreg : IN std_logic;
	sreg1 : IN std_logic;
	txshld : IN std_logic;
	txidle : IN std_logic;
	send_ctrl : IN std_logic;
	done : IN std_logic;
	b_non_empty : IN std_logic;
	cout : IN std_logic;
	cout1 : IN std_logic;
	the_carries_10 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	dpr_ren : OUT std_logic;
	msg_sent : OUT std_logic;
	\_\ : OUT std_logic;
	ctrl_val : OUT std_logic;
	data_val : OUT std_logic;
	muxsel4 : OUT std_logic;
	sreg2 : OUT std_logic;
	sreg3 : OUT std_logic;
	sreg4 : OUT std_logic;
	sreg5 : OUT std_logic;
	sreg6 : OUT std_logic;
	sreg7 : OUT std_logic;
	sreg8 : OUT std_logic;
	sreg9 : OUT std_logic;
	shift_ct_en : OUT std_logic;
	plen_clk_en : OUT std_logic;
	muxsel1 : OUT std_logic;
	muxsel0 : OUT std_logic;
	muxsel3 : OUT std_logic;
	muxsel2 : OUT std_logic;
	dom_adr_en : OUT std_logic
	);
END DC_SNAP;

ARCHITECTURE structure OF DC_SNAP IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK : std_logic;
SIGNAL ww_portadataout_0 : std_logic;
SIGNAL ww_portadataout_1 : std_logic;
SIGNAL ww_buf_res : std_logic;
SIGNAL ww_send_data : std_logic;
SIGNAL ww_sreg : std_logic;
SIGNAL ww_sreg1 : std_logic;
SIGNAL ww_txshld : std_logic;
SIGNAL ww_txidle : std_logic;
SIGNAL ww_send_ctrl : std_logic;
SIGNAL ww_done : std_logic;
SIGNAL ww_b_non_empty : std_logic;
SIGNAL ww_cout : std_logic;
SIGNAL ww_cout1 : std_logic;
SIGNAL ww_the_carries_10 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_dpr_ren : std_logic;
SIGNAL ww_msg_sent : std_logic;
SIGNAL \ww_\ : std_logic;
SIGNAL ww_ctrl_val : std_logic;
SIGNAL ww_data_val : std_logic;
SIGNAL ww_muxsel4 : std_logic;
SIGNAL ww_sreg2 : std_logic;
SIGNAL ww_sreg3 : std_logic;
SIGNAL ww_sreg4 : std_logic;
SIGNAL ww_sreg5 : std_logic;
SIGNAL ww_sreg6 : std_logic;
SIGNAL ww_sreg7 : std_logic;
SIGNAL ww_sreg8 : std_logic;
SIGNAL ww_sreg9 : std_logic;
SIGNAL ww_shift_ct_en : std_logic;
SIGNAL ww_plen_clk_en : std_logic;
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_muxsel3 : std_logic;
SIGNAL ww_muxsel2 : std_logic;
SIGNAL ww_dom_adr_en : std_logic;
SIGNAL \muxsel3~365_1\ : std_logic;
SIGNAL \SV2~104_1\ : std_logic;
SIGNAL \SV0~131_1\ : std_logic;
SIGNAL \_~3435\ : std_logic;
SIGNAL \_~3426\ : std_logic;
SIGNAL \_~3434\ : std_logic;
SIGNAL \BYT0~22\ : std_logic;
SIGNAL \sreg~31\ : std_logic;
SIGNAL \sreg~32\ : std_logic;
SIGNAL \sreg~33\ : std_logic;
SIGNAL \sreg~34\ : std_logic;
SIGNAL \sreg~38\ : std_logic;
SIGNAL \sreg~37\ : std_logic;
SIGNAL \sreg~36\ : std_logic;
SIGNAL \sreg~35\ : std_logic;
SIGNAL \sreg~41\ : std_logic;
SIGNAL \sreg~43\ : std_logic;
SIGNAL \_~3424\ : std_logic;
SIGNAL \ctrl_val~107\ : std_logic;
SIGNAL \_~3425\ : std_logic;
SIGNAL \sreg~30\ : std_logic;
SIGNAL \TC_TX_TIME~36\ : std_logic;
SIGNAL \sreg~55\ : std_logic;
SIGNAL \_~3438\ : std_logic;
SIGNAL \sreg~58\ : std_logic;
SIGNAL \sreg~57\ : std_logic;
SIGNAL \_~3429\ : std_logic;
SIGNAL \sreg~48\ : std_logic;
SIGNAL \sreg~49\ : std_logic;
SIGNAL \sreg~51\ : std_logic;
SIGNAL \_~3427\ : std_logic;
SIGNAL \sreg~40\ : std_logic;
SIGNAL \_~61\ : std_logic;
SIGNAL \sreg~54\ : std_logic;
SIGNAL \data_val~242\ : std_logic;
SIGNAL \data_val~240\ : std_logic;
SIGNAL \data_val~250\ : std_logic;
SIGNAL \_~3431\ : std_logic;
SIGNAL \data_val~251\ : std_logic;
SIGNAL \_~3433\ : std_logic;
SIGNAL \_~3432\ : std_logic;
SIGNAL \data_val~252\ : std_logic;
SIGNAL \_~3430\ : std_logic;
SIGNAL \sreg~45\ : std_logic;
SIGNAL \data_val~248\ : std_logic;
SIGNAL \data_val~249\ : std_logic;
SIGNAL \_~3428\ : std_logic;
SIGNAL \muxsel0~356\ : std_logic;
SIGNAL \data_val~246\ : std_logic;
SIGNAL \data_val~244\ : std_logic;
SIGNAL \data_val~243\ : std_logic;
SIGNAL \data_val~245\ : std_logic;
SIGNAL \data_val~247\ : std_logic;
SIGNAL \muxsel4~74\ : std_logic;
SIGNAL \muxsel4~73\ : std_logic;
SIGNAL \CRC_WAIT~32\ : std_logic;
SIGNAL \muxsel2~313\ : std_logic;
SIGNAL \CRC_WAIT~33\ : std_logic;
SIGNAL \_~3436\ : std_logic;
SIGNAL \_~3437\ : std_logic;
SIGNAL \_~3440\ : std_logic;
SIGNAL \shift_ct_en~65\ : std_logic;
SIGNAL \_~3441\ : std_logic;
SIGNAL \shift_ct_en~64\ : std_logic;
SIGNAL \_~3439\ : std_logic;
SIGNAL \STF~58\ : std_logic;
SIGNAL \muxsel1~807\ : std_logic;
SIGNAL \muxsel1~809\ : std_logic;
SIGNAL \muxsel1~808\ : std_logic;
SIGNAL \muxsel1~810\ : std_logic;
SIGNAL \muxsel1~812\ : std_logic;
SIGNAL \muxsel1~813\ : std_logic;
SIGNAL \muxsel1~814\ : std_logic;
SIGNAL \muxsel1~811\ : std_logic;
SIGNAL \muxsel0~357\ : std_logic;
SIGNAL \muxsel0~358\ : std_logic;
SIGNAL \muxsel0~359\ : std_logic;
SIGNAL \muxsel0~360\ : std_logic;
SIGNAL \muxsel0~361\ : std_logic;
SIGNAL \_~3442\ : std_logic;
SIGNAL \muxsel3~365\ : std_logic;
SIGNAL \muxsel3~366\ : std_logic;
SIGNAL \_~3443\ : std_logic;
SIGNAL \muxsel3~358\ : std_logic;
SIGNAL \muxsel3~357\ : std_logic;
SIGNAL \muxsel3~359\ : std_logic;
SIGNAL \muxsel2~314\ : std_logic;
SIGNAL \muxsel2~315\ : std_logic;
SIGNAL \muxsel2~312\ : std_logic;
SIGNAL \muxsel2~308\ : std_logic;
SIGNAL \EOF_WAIT~2\ : std_logic;
SIGNAL \ID_BYTE~38\ : std_logic;
SIGNAL \_~3449\ : std_logic;
SIGNAL \TCWFM_L~2\ : std_logic;
SIGNAL \SV1~121\ : std_logic;
SIGNAL \CRC_WAIT~34\ : std_logic;
SIGNAL \_~3448\ : std_logic;
SIGNAL \EOF~24\ : std_logic;
SIGNAL \TC_RX_TIME~29\ : std_logic;
SIGNAL \SV1~120\ : std_logic;
SIGNAL \DCMD_SEQ1~2\ : std_logic;
SIGNAL \_~64\ : std_logic;
SIGNAL \SV1~118\ : std_logic;
SIGNAL \_~3447\ : std_logic;
SIGNAL \SV1~119\ : std_logic;
SIGNAL \TC_TX_TIME~2\ : std_logic;
SIGNAL \TCWFM_H~2\ : std_logic;
SIGNAL \SV1~122\ : std_logic;
SIGNAL SV1 : std_logic;
SIGNAL \PTYPE_SEQ0~2\ : std_logic;
SIGNAL \SV0~126\ : std_logic;
SIGNAL \ID_SHR8~2\ : std_logic;
SIGNAL \RXSHR8~2\ : std_logic;
SIGNAL \TXSHR8~2\ : std_logic;
SIGNAL \SV0~124\ : std_logic;
SIGNAL \LEN0~2\ : std_logic;
SIGNAL \SV0~125\ : std_logic;
SIGNAL \MTYPE_LEN1~2\ : std_logic;
SIGNAL \SV0~131\ : std_logic;
SIGNAL \SV0~133\ : std_logic;
SIGNAL \SV0~127\ : std_logic;
SIGNAL SV0 : std_logic;
SIGNAL \_~59\ : std_logic;
SIGNAL \CRC2~2\ : std_logic;
SIGNAL \SV3~106\ : std_logic;
SIGNAL \_~3450\ : std_logic;
SIGNAL \plen_clk_en~43\ : std_logic;
SIGNAL \SV3~104\ : std_logic;
SIGNAL \CRC3~2\ : std_logic;
SIGNAL \SV3~105\ : std_logic;
SIGNAL SV3 : std_logic;
SIGNAL \CRC0~2\ : std_logic;
SIGNAL \SV2~100\ : std_logic;
SIGNAL \SV2~99\ : std_logic;
SIGNAL \CRC1~2\ : std_logic;
SIGNAL \SV2~104\ : std_logic;
SIGNAL \SV2~106\ : std_logic;
SIGNAL SV2 : std_logic;
SIGNAL \_~3444\ : std_logic;
SIGNAL \BYT1~2\ : std_logic;
SIGNAL \_~3446\ : std_logic;
SIGNAL \SV1~117\ : std_logic;
SIGNAL \_~3445\ : std_logic;
SIGNAL \BYT3~2\ : std_logic;
SIGNAL \SV4~73\ : std_logic;
SIGNAL \SV4~74\ : std_logic;
SIGNAL SV4 : std_logic;
SIGNAL SV5 : std_logic;

BEGIN

ww_CLK <= CLK;
ww_portadataout_0 <= portadataout_0;
ww_portadataout_1 <= portadataout_1;
ww_buf_res <= buf_res;
ww_send_data <= send_data;
ww_sreg <= sreg;
ww_sreg1 <= sreg1;
ww_txshld <= txshld;
ww_txidle <= txidle;
ww_send_ctrl <= send_ctrl;
ww_done <= done;
ww_b_non_empty <= b_non_empty;
ww_cout <= cout;
ww_cout1 <= cout1;
ww_the_carries_10 <= the_carries_10;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
dpr_ren <= ww_dpr_ren;
msg_sent <= ww_msg_sent;
\_\ <= \ww_\;
ctrl_val <= ww_ctrl_val;
data_val <= ww_data_val;
muxsel4 <= ww_muxsel4;
sreg2 <= ww_sreg2;
sreg3 <= ww_sreg3;
sreg4 <= ww_sreg4;
sreg5 <= ww_sreg5;
sreg6 <= ww_sreg6;
sreg7 <= ww_sreg7;
sreg8 <= ww_sreg8;
sreg9 <= ww_sreg9;
shift_ct_en <= ww_shift_ct_en;
plen_clk_en <= ww_plen_clk_en;
muxsel1 <= ww_muxsel1;
muxsel0 <= ww_muxsel0;
muxsel3 <= ww_muxsel3;
muxsel2 <= ww_muxsel2;
dom_adr_en <= ww_dom_adr_en;

\dpr_ren~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- dpr_ren = DFFE(txshld & \sreg~34\, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_txshld,
	datad => \sreg~34\,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dpr_ren);

\msg_sent~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- msg_sent = DFFE(\sreg~43\ & !txidle, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \sreg~43\,
	datad => ww_txidle,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_msg_sent);

\_~3423_I\ : apex20ke_lcell 
-- Equation(s):
-- \_\ = !send_data & !sreg1 & !sreg2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0005",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_send_data,
	datac => ww_sreg,
	datad => ww_sreg1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \ww_\);

\ctrl_val~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- ctrl_val = DFFE(\_~3424\ # \ctrl_val~107\ # !\sreg~30\ & !\_~3425\, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EEEF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \_~3424\,
	datab => \ctrl_val~107\,
	datac => \sreg~30\,
	datad => \_~3425\,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_ctrl_val);

\data_val~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- data_val = DFFE(\data_val~250\ # \data_val~252\ # \data_val~249\ # \data_val~247\, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \data_val~250\,
	datab => \data_val~252\,
	datac => \data_val~249\,
	datad => \data_val~247\,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_data_val);

\muxsel4~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- muxsel4 = DFFE(\muxsel4~73\ # \muxsel4~74\ & \sreg~57\ # !\data_val~248\, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FBF3",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \muxsel4~74\,
	datab => \data_val~248\,
	datac => \muxsel4~73\,
	datad => \sreg~57\,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_muxsel4);

\sreg~53_I\ : apex20ke_lcell 
-- Equation(s):
-- sreg2 = DFFE(\sreg~30\ & !txshld & sreg2 # !\sreg~30\ & (!txshld & sreg2 # !\_~3425\), GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3075",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~30\,
	datab => ww_txshld,
	datac => ww_sreg2,
	datad => \_~3425\,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sreg2);

\sreg~39_I\ : apex20ke_lcell 
-- Equation(s):
-- sreg3 = DFFE(\muxsel2~313\ # \CRC_WAIT~33\ # the_carries_10 & dpr_ren, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFEC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_the_carries_10,
	datab => \muxsel2~313\,
	datac => ww_dpr_ren,
	datad => \CRC_WAIT~33\,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sreg3);

\sreg~52_I\ : apex20ke_lcell 
-- Equation(s):
-- sreg4 = DFFE(\_~3436\ # !cout1 & !cout2 & sreg4, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF10",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_cout,
	datab => ww_cout1,
	datac => ww_sreg4,
	datad => \_~3436\,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sreg4);

\sreg~59_I\ : apex20ke_lcell 
-- Equation(s):
-- sreg5 = DFFE(\_~3437\ # sreg5 & !cout1 & !cout2, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F2",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg5,
	datab => ww_cout,
	datac => \_~3437\,
	datad => ww_cout1,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sreg5);

\sreg~56_I\ : apex20ke_lcell 
-- Equation(s):
-- sreg6 = DFFE(b_non_empty & txshld & \sreg~57\, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "A000",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_b_non_empty,
	datac => ww_txshld,
	datad => \sreg~57\,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sreg6);

\sreg~46_I\ : apex20ke_lcell 
-- Equation(s):
-- sreg7 = DFFE(txshld & \sreg~40\ & sreg2, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8080",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_txshld,
	datab => \sreg~40\,
	datac => ww_sreg1,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sreg7);

\sreg~50_I\ : apex20ke_lcell 
-- Equation(s):
-- sreg8 = DFFE(txshld & sreg2 & send_data & !\_~3435\, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0080",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_txshld,
	datab => ww_sreg2,
	datac => ww_send_data,
	datad => \_~3435\,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sreg8);

\sreg~47_I\ : apex20ke_lcell 
-- Equation(s):
-- sreg9 = DFFE(\_~3440\ # !cout2 & sreg9 & !cout1, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AABA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \_~3440\,
	datab => ww_cout1,
	datac => ww_sreg9,
	datad => ww_cout,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sreg9);

\shift_ct_en~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- shift_ct_en = DFFE(\shift_ct_en~64\ # sreg9 & \_~3441\ # !\shift_ct_en~65\, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFB3",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg9,
	datab => \shift_ct_en~65\,
	datac => \_~3441\,
	datad => \shift_ct_en~64\,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_shift_ct_en);

\plen_clk_en~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- plen_clk_en = DFFE(\_~3439\ # txshld & \sreg~34\ # !\STF~58\, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAFF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \_~3439\,
	datab => ww_txshld,
	datac => \sreg~34\,
	datad => \STF~58\,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_plen_clk_en);

\muxsel1~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- muxsel1 = DFFE(\muxsel1~810\ # \muxsel1~814\ # \sreg~38\ # \muxsel1~811\, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \muxsel1~810\,
	datab => \muxsel1~814\,
	datac => \sreg~38\,
	datad => \muxsel1~811\,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_muxsel1);

\muxsel0~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- muxsel0 = DFFE(\muxsel0~358\ # \muxsel0~359\ # \muxsel0~361\ # !\muxsel0~356\, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFEF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \muxsel0~358\,
	datab => \muxsel0~359\,
	datac => \muxsel0~356\,
	datad => \muxsel0~361\,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_muxsel0);

\muxsel3~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- muxsel3 = DFFE(\sreg~51\ # \_~3442\ # \muxsel3~359\ # !\muxsel3~366\, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFEF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~51\,
	datab => \_~3442\,
	datac => \muxsel3~366\,
	datad => \muxsel3~359\,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_muxsel3);

\muxsel2~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- muxsel2 = DFFE(\muxsel2~315\ # \muxsel2~308\ # !\muxsel3~366\, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EFEF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \muxsel2~315\,
	datab => \muxsel2~308\,
	datac => \muxsel3~366\,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_muxsel2);

\dom_adr_en~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- dom_adr_en = DFFE(SV5 & (!SV4 # !\_~3444\ # !SV1) # !SV5 & !SV1 & \_~3444\ & !SV4, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "2ABA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => SV5,
	datab => SV1,
	datac => \_~3444\,
	datad => SV4,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dom_adr_en);

\_~3435_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~3435\ = !portadataout & !portadataout

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0505",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_portadataout_0,
	datac => ww_portadataout_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~3435\);

\_~3426_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~3426\ = txshld & sreg2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_txshld,
	datad => ww_sreg2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~3426\);

\_~3434_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~3434\ = \sreg~31\ & !txshld

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00F0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \sreg~31\,
	datad => ww_txshld,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~3434\);

\BYT0~22_I\ : apex20ke_lcell 
-- Equation(s):
-- \BYT0~22\ = sreg8 # \_~3434\ # dpr_ren & !the_carries_10

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EEFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg8,
	datab => \_~3434\,
	datac => ww_dpr_ren,
	datad => ww_the_carries_10,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \BYT0~22\);

\sreg~31_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~31\ = DFFE(\BYT0~22\ # send_data & \_~3435\ & \_~3426\, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF80",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_send_data,
	datab => \_~3435\,
	datac => \_~3426\,
	datad => \BYT0~22\,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~31\);

\sreg~32_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~32\ = DFFE(\sreg~32\ & (\sreg~31\ # !txshld) # !\sreg~32\ & txshld & \sreg~31\, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \sreg~32\,
	datac => ww_txshld,
	datad => \sreg~31\,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~32\);

\sreg~33_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~33\ = DFFE(\sreg~33\ & (\sreg~32\ # !txshld) # !\sreg~33\ & \sreg~32\ & txshld, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0AA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~33\,
	datac => \sreg~32\,
	datad => ww_txshld,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~33\);

\sreg~34_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~34\ = DFFE(txshld & \sreg~33\ # !txshld & \sreg~34\, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3C0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_txshld,
	datac => \sreg~33\,
	datad => \sreg~34\,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~34\);

\sreg~38_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~38\ = DFFE(done & (sreg3 # \sreg~38\ & !txshld) # !done & \sreg~38\ & !txshld, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "A0EC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_done,
	datab => \sreg~38\,
	datac => ww_sreg3,
	datad => ww_txshld,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~38\);

\sreg~37_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~37\ = DFFE(txshld & \sreg~38\ # !txshld & \sreg~37\, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC30",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_txshld,
	datac => \sreg~37\,
	datad => \sreg~38\,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~37\);

\sreg~36_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~36\ = DFFE(txshld & \sreg~37\ # !txshld & \sreg~36\, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC30",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_txshld,
	datac => \sreg~36\,
	datad => \sreg~37\,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~36\);

\sreg~35_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~35\ = DFFE(txshld & \sreg~36\ # !txshld & \sreg~35\, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA50",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_txshld,
	datac => \sreg~35\,
	datad => \sreg~36\,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~35\);

\sreg~41_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~41\ = DFFE(\sreg~41\ & (\sreg~35\ # !txshld) # !\sreg~41\ & txshld & \sreg~35\, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \sreg~41\,
	datac => ww_txshld,
	datad => \sreg~35\,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~41\);

\sreg~43_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~43\ = DFFE(\sreg~41\ & (txshld # \sreg~43\ & txidle) # !\sreg~41\ & \sreg~43\ & txidle, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~41\,
	datab => ww_txshld,
	datac => \sreg~43\,
	datad => ww_txidle,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~43\);

\_~3424_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~3424\ = txshld & \sreg~35\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_txshld,
	datad => \sreg~35\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~3424\);

\ctrl_val~107_I\ : apex20ke_lcell 
-- Equation(s):
-- \ctrl_val~107\ = !txshld & (sreg2 # \sreg~41\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F0A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg2,
	datac => ww_txshld,
	datad => \sreg~41\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \ctrl_val~107\);

\_~3425_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~3425\ = !sreg2 & !send_data & !send_ctrl1 & !sreg1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg1,
	datab => ww_send_data,
	datac => ww_send_ctrl,
	datad => ww_sreg,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~3425\);

\sreg~30_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~30\ = DFFE(!msg_sent & (\sreg~30\ # !\_~3425\), GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0A0F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~30\,
	datac => ww_msg_sent,
	datad => \_~3425\,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~30\);

\TC_TX_TIME~36_I\ : apex20ke_lcell 
-- Equation(s):
-- \TC_TX_TIME~36\ = cout2 & !sreg4 # !cout2 & (!sreg5 # !cout1)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "07F7",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_cout,
	datab => ww_sreg5,
	datac => ww_cout1,
	datad => ww_sreg4,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \TC_TX_TIME~36\);

\sreg~55_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~55\ = DFFE(!txshld & \sreg~55\ # !\TC_TX_TIME~36\, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "50FF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_txshld,
	datac => \sreg~55\,
	datad => \TC_TX_TIME~36\,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~55\);

\_~3438_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~3438\ = \sreg~58\ & !txshld

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00AA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~58\,
	datad => ww_txshld,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~3438\);

\sreg~58_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~58\ = DFFE(sreg6 # \_~3438\ # sreg5 & cout2, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFEA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg6,
	datab => ww_sreg5,
	datac => ww_cout1,
	datad => \_~3438\,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~58\);

\sreg~57_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~57\ = DFFE(\sreg~57\ & (\sreg~58\ # !txshld) # !\sreg~57\ & \sreg~58\ & txshld, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0CC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \sreg~57\,
	datac => \sreg~58\,
	datad => ww_txshld,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~57\);

\_~3429_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~3429\ = cout1 & !cout2 & sreg4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0C00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_cout,
	datac => ww_cout1,
	datad => ww_sreg4,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~3429\);

\sreg~48_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~48\ = DFFE(txshld & !send_data & sreg2 # !txshld & \sreg~48\, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "30AA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~48\,
	datab => ww_send_data,
	datac => ww_sreg2,
	datad => ww_txshld,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~48\);

\sreg~49_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~49\ = DFFE(txshld & \sreg~48\ # !txshld & \sreg~49\, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F5A0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_txshld,
	datac => \sreg~48\,
	datad => \sreg~49\,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~49\);

\sreg~51_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~51\ = DFFE(\sreg~49\ & (\sreg~51\ # txshld) # !\sreg~49\ & \sreg~51\ & !txshld, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AAF0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~49\,
	datac => \sreg~51\,
	datad => ww_txshld,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~51\);

\_~3427_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~3427\ = !sreg2 & !sreg1 & !send_ctrl1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0003",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sreg1,
	datac => ww_sreg,
	datad => ww_send_ctrl,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~3427\);

\sreg~40_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~40\ = DFFE(\sreg~51\ & (\sreg~40\ # txshld) # !\sreg~51\ & \sreg~40\ & (\_~3427\ # !txshld), GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EACC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~51\,
	datab => \sreg~40\,
	datac => \_~3427\,
	datad => ww_txshld,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~40\);

\_~61_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~61\ = txshld & sreg1 & \sreg~40\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_txshld,
	datac => ww_sreg,
	datad => \sreg~40\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~61\);

\sreg~54_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~54\ = DFFE(\_~3429\ # \_~61\ # !txshld & \sreg~54\, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFF4",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_txshld,
	datab => \sreg~54\,
	datac => \_~3429\,
	datad => \_~61\,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~54\);

\data_val~242_I\ : apex20ke_lcell 
-- Equation(s):
-- \data_val~242\ = \sreg~57\ # \sreg~34\ # \sreg~54\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \sreg~57\,
	datac => \sreg~34\,
	datad => \sreg~54\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \data_val~242\);

\data_val~240_I\ : apex20ke_lcell 
-- Equation(s):
-- \data_val~240\ = !txshld & (\sreg~55\ # \data_val~242\ # \sreg~35\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5554",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_txshld,
	datab => \sreg~55\,
	datac => \data_val~242\,
	datad => \sreg~35\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \data_val~240\);

\data_val~250_I\ : apex20ke_lcell 
-- Equation(s):
-- \data_val~250\ = sreg8 # \data_val~240\ # dpr_ren & !the_carries_10

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FAFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg8,
	datab => ww_dpr_ren,
	datac => \data_val~240\,
	datad => ww_the_carries_10,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \data_val~250\);

\_~3431_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~3431\ = b_non_empty & txshld & \sreg~57\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "A000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_b_non_empty,
	datac => ww_txshld,
	datad => \sreg~57\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~3431\);

\data_val~251_I\ : apex20ke_lcell 
-- Equation(s):
-- \data_val~251\ = cout2 & (sreg5 # sreg4)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0C0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sreg5,
	datac => ww_cout1,
	datad => ww_sreg4,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \data_val~251\);

\_~3433_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~3433\ = cout1 & sreg9 & !cout2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00A0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_cout,
	datac => ww_sreg9,
	datad => ww_cout1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~3433\);

\_~3432_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~3432\ = !cout1 & !cout2 & sreg9

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_cout,
	datac => ww_cout1,
	datad => ww_sreg9,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~3432\);

\data_val~252_I\ : apex20ke_lcell 
-- Equation(s):
-- \data_val~252\ = \_~3431\ # \data_val~251\ # \_~3433\ # \_~3432\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \_~3431\,
	datab => \data_val~251\,
	datac => \_~3433\,
	datad => \_~3432\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \data_val~252\);

\_~3430_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~3430\ = cout1 & !cout2 & sreg5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0C00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_cout,
	datac => ww_cout1,
	datad => ww_sreg5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~3430\);

\sreg~45_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~45\ = DFFE(sreg7 # \_~3433\ # !txshld & \sreg~45\, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFBA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg7,
	datab => ww_txshld,
	datac => \sreg~45\,
	datad => \_~3433\,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~45\);

\data_val~248_I\ : apex20ke_lcell 
-- Equation(s):
-- \data_val~248\ = !sreg6 & !\sreg~45\ & !\sreg~58\ & !sreg7

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg6,
	datab => \sreg~45\,
	datac => \sreg~58\,
	datad => ww_sreg7,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \data_val~248\);

\data_val~249_I\ : apex20ke_lcell 
-- Equation(s):
-- \data_val~249\ = \_~3430\ # \_~61\ # \_~3429\ # !\data_val~248\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFB",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \_~3430\,
	datab => \data_val~248\,
	datac => \_~61\,
	datad => \_~3429\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \data_val~249\);

\_~3428_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~3428\ = sreg3 & done

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CC00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sreg3,
	datad => ww_done,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~3428\);

\muxsel0~356_I\ : apex20ke_lcell 
-- Equation(s):
-- \muxsel0~356\ = !\_~3428\ & (txshld & !\_~3427\ # !\sreg~40\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "002F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_txshld,
	datab => \_~3427\,
	datac => \sreg~40\,
	datad => \_~3428\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \muxsel0~356\);

\data_val~246_I\ : apex20ke_lcell 
-- Equation(s):
-- \data_val~246\ = !\sreg~38\ & !\sreg~36\ & !\sreg~49\ & !\sreg~32\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~38\,
	datab => \sreg~36\,
	datac => \sreg~49\,
	datad => \sreg~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \data_val~246\);

\data_val~244_I\ : apex20ke_lcell 
-- Equation(s):
-- \data_val~244\ = !\sreg~51\ & !\sreg~33\ & !\sreg~48\ & !\sreg~31\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~51\,
	datab => \sreg~33\,
	datac => \sreg~48\,
	datad => \sreg~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \data_val~244\);

\data_val~243_I\ : apex20ke_lcell 
-- Equation(s):
-- \data_val~243\ = send_data & (portadataout # portadataout)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C8C8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_portadataout_1,
	datab => ww_send_data,
	datac => ww_portadataout_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \data_val~243\);

\data_val~245_I\ : apex20ke_lcell 
-- Equation(s):
-- \data_val~245\ = \sreg~37\ # \_~3426\ & !\data_val~243\ # !\data_val~244\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AFEF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~37\,
	datab => \_~3426\,
	datac => \data_val~244\,
	datad => \data_val~243\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \data_val~245\);

\data_val~247_I\ : apex20ke_lcell 
-- Equation(s):
-- \data_val~247\ = \data_val~245\ # !\data_val~246\ # !\muxsel0~356\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \muxsel0~356\,
	datac => \data_val~246\,
	datad => \data_val~245\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \data_val~247\);

\muxsel4~74_I\ : apex20ke_lcell 
-- Equation(s):
-- \muxsel4~74\ = b_non_empty # !txshld

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AAFF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_b_non_empty,
	datad => ww_txshld,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \muxsel4~74\);

\muxsel4~73_I\ : apex20ke_lcell 
-- Equation(s):
-- \muxsel4~73\ = sreg5 & (cout2 # sreg9) # !sreg5 & !cout2 & sreg9

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sreg5,
	datac => ww_cout1,
	datad => ww_sreg9,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \muxsel4~73\);

\CRC_WAIT~32_I\ : apex20ke_lcell 
-- Equation(s):
-- \CRC_WAIT~32\ = \sreg~40\ & send_ctrl1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \sreg~40\,
	datad => ww_send_ctrl,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \CRC_WAIT~32\);

\muxsel2~313_I\ : apex20ke_lcell 
-- Equation(s):
-- \muxsel2~313\ = txshld & (\CRC_WAIT~32\ # !b_non_empty & \sreg~57\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F040",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_b_non_empty,
	datab => \sreg~57\,
	datac => ww_txshld,
	datad => \CRC_WAIT~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \muxsel2~313\);

\CRC_WAIT~33_I\ : apex20ke_lcell 
-- Equation(s):
-- \CRC_WAIT~33\ = sreg9 & (cout2 # !done & sreg3) # !sreg9 & !done & sreg3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BA30",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg9,
	datab => ww_done,
	datac => ww_sreg3,
	datad => ww_cout1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \CRC_WAIT~33\);

\_~3436_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~3436\ = txshld & \sreg~54\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_txshld,
	datad => \sreg~54\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~3436\);

\_~3437_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~3437\ = txshld & \sreg~55\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_txshld,
	datad => \sreg~55\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~3437\);

\_~3440_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~3440\ = txshld & \sreg~45\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CC00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_txshld,
	datad => \sreg~45\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~3440\);

\shift_ct_en~65_I\ : apex20ke_lcell 
-- Equation(s):
-- \shift_ct_en~65\ = cout1 # cout2 # !sreg5 & !sreg4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FAFB",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_cout,
	datab => ww_sreg5,
	datac => ww_cout1,
	datad => ww_sreg4,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \shift_ct_en~65\);

\_~3441_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~3441\ = !cout1 & !cout2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "000F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_cout,
	datad => ww_cout1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~3441\);

\shift_ct_en~64_I\ : apex20ke_lcell 
-- Equation(s):
-- \shift_ct_en~64\ = txshld & (\sreg~54\ # \sreg~45\ # \sreg~55\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FE00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~54\,
	datab => \sreg~45\,
	datac => \sreg~55\,
	datad => ww_txshld,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \shift_ct_en~64\);

\_~3439_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~3439\ = !\_~3435\ & send_data & sreg2 & txshld

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "4000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \_~3435\,
	datab => ww_send_data,
	datac => ww_sreg2,
	datad => ww_txshld,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~3439\);

\STF~58_I\ : apex20ke_lcell 
-- Equation(s):
-- \STF~58\ = \sreg~30\ & (txshld # !sreg2) # !\sreg~30\ & \_~3425\ & (txshld # !sreg2)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E0EE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~30\,
	datab => \_~3425\,
	datac => ww_txshld,
	datad => ww_sreg2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \STF~58\);

\muxsel1~807_I\ : apex20ke_lcell 
-- Equation(s):
-- \muxsel1~807\ = sreg7 # \sreg~45\ # sreg3 & done

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEFA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg7,
	datab => ww_sreg3,
	datac => \sreg~45\,
	datad => ww_done,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \muxsel1~807\);

\muxsel1~809_I\ : apex20ke_lcell 
-- Equation(s):
-- \muxsel1~809\ = sreg1 # !sreg2 & !send_ctrl1 # !txshld

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F5F7",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_txshld,
	datab => ww_sreg1,
	datac => ww_sreg,
	datad => ww_send_ctrl,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \muxsel1~809\);

\muxsel1~808_I\ : apex20ke_lcell 
-- Equation(s):
-- \muxsel1~808\ = \sreg~51\ # \sreg~54\ # \sreg~55\ # \sreg~33\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~51\,
	datab => \sreg~54\,
	datac => \sreg~55\,
	datad => \sreg~33\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \muxsel1~808\);

\muxsel1~810_I\ : apex20ke_lcell 
-- Equation(s):
-- \muxsel1~810\ = \muxsel1~807\ # \muxsel1~808\ # \sreg~40\ & \muxsel1~809\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFEA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \muxsel1~807\,
	datab => \sreg~40\,
	datac => \muxsel1~809\,
	datad => \muxsel1~808\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \muxsel1~810\);

\muxsel1~812_I\ : apex20ke_lcell 
-- Equation(s):
-- \muxsel1~812\ = !txshld & (\sreg~37\ # \sreg~34\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5550",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_txshld,
	datac => \sreg~37\,
	datad => \sreg~34\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \muxsel1~812\);

\muxsel1~813_I\ : apex20ke_lcell 
-- Equation(s):
-- \muxsel1~813\ = sreg5 # sreg9

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFCC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sreg5,
	datad => ww_sreg9,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \muxsel1~813\);

\muxsel1~814_I\ : apex20ke_lcell 
-- Equation(s):
-- \muxsel1~814\ = sreg4 # \muxsel1~812\ # !cout2 & \muxsel1~813\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EFEE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg4,
	datab => \muxsel1~812\,
	datac => ww_cout1,
	datad => \muxsel1~813\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \muxsel1~814\);

\muxsel1~811_I\ : apex20ke_lcell 
-- Equation(s):
-- \muxsel1~811\ = txshld & (\sreg~49\ # \sreg~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CCC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_txshld,
	datac => \sreg~49\,
	datad => \sreg~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \muxsel1~811\);

\muxsel0~357_I\ : apex20ke_lcell 
-- Equation(s):
-- \muxsel0~357\ = \sreg~35\ # \sreg~58\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \sreg~35\,
	datad => \sreg~58\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \muxsel0~357\);

\muxsel0~358_I\ : apex20ke_lcell 
-- Equation(s):
-- \muxsel0~358\ = txshld & (\sreg~37\ # \muxsel0~357\ # !\data_val~244\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FB00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~37\,
	datab => \data_val~244\,
	datac => \muxsel0~357\,
	datad => ww_txshld,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \muxsel0~358\);

\muxsel0~359_I\ : apex20ke_lcell 
-- Equation(s):
-- \muxsel0~359\ = sreg4 & (cout2 # sreg5) # !sreg4 & !cout2 & sreg5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B8B8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg4,
	datab => ww_cout1,
	datac => ww_sreg5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \muxsel0~359\);

\muxsel0~360_I\ : apex20ke_lcell 
-- Equation(s):
-- \muxsel0~360\ = \sreg~57\ # \sreg~34\ # \sreg~41\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~57\,
	datac => \sreg~34\,
	datad => \sreg~41\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \muxsel0~360\);

\muxsel0~361_I\ : apex20ke_lcell 
-- Equation(s):
-- \muxsel0~361\ = \sreg~55\ # !txshld & (\muxsel0~360\ # !\data_val~246\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFCD",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \data_val~246\,
	datab => \sreg~55\,
	datac => ww_txshld,
	datad => \muxsel0~360\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \muxsel0~361\);

\_~3442_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~3442\ = cout2 & sreg4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CC00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_cout1,
	datad => ww_sreg4,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~3442\);

\muxsel3~365_I\ : apex20ke_lcell 
-- Equation(s):
-- \muxsel3~365\ = !\sreg~55\ & !\sreg~54\ & (\sreg~30\ # \_~3425\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0032",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~30\,
	datab => \sreg~55\,
	datac => \_~3425\,
	datad => \sreg~54\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \muxsel3~365\);

\muxsel3~366_I\ : apex20ke_lcell 
-- Equation(s):
-- \muxsel3~366\ = (!\_~3429\ & !\_~3430\ & \shift_ct_en~65\ & !\_~61\) & CASCADE(\muxsel3~365\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0010",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \_~3429\,
	datab => \_~3430\,
	datac => \shift_ct_en~65\,
	datad => \_~61\,
	cascin => \muxsel3~365\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \muxsel3~366\);

\_~3443_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~3443\ = !sreg1 & !sreg2 & !send_ctrl1 # !txshld

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F1F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg,
	datab => ww_sreg1,
	datac => ww_txshld,
	datad => ww_send_ctrl,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~3443\);

\muxsel3~358_I\ : apex20ke_lcell 
-- Equation(s):
-- \muxsel3~358\ = \sreg~48\ # sreg2 & (!txshld # !send_data)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F7F0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_send_data,
	datab => ww_txshld,
	datac => \sreg~48\,
	datad => ww_sreg2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \muxsel3~358\);

\muxsel3~357_I\ : apex20ke_lcell 
-- Equation(s):
-- \muxsel3~357\ = \sreg~49\ # txshld & \sreg~35\ # !txshld & \sreg~41\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEAE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~49\,
	datab => \sreg~41\,
	datac => ww_txshld,
	datad => \sreg~35\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \muxsel3~357\);

\muxsel3~359_I\ : apex20ke_lcell 
-- Equation(s):
-- \muxsel3~359\ = \muxsel3~358\ # \muxsel3~357\ # \sreg~40\ & \_~3443\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFF8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~40\,
	datab => \_~3443\,
	datac => \muxsel3~358\,
	datad => \muxsel3~357\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \muxsel3~359\);

\muxsel2~314_I\ : apex20ke_lcell 
-- Equation(s):
-- \muxsel2~314\ = sreg3 # !txshld & (\sreg~41\ # sreg2)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF32",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~41\,
	datab => ww_txshld,
	datac => ww_sreg2,
	datad => ww_sreg3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \muxsel2~314\);

\muxsel2~315_I\ : apex20ke_lcell 
-- Equation(s):
-- \muxsel2~315\ = \muxsel2~314\ # \muxsel2~313\ # dpr_ren & the_carries_10

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFEC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_dpr_ren,
	datab => \muxsel2~314\,
	datac => ww_the_carries_10,
	datad => \muxsel2~313\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \muxsel2~315\);

\muxsel2~312_I\ : apex20ke_lcell 
-- Equation(s):
-- \muxsel2~312\ = \sreg~37\ # cout2 & (sreg9 # sreg4)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EEEA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~37\,
	datab => ww_cout1,
	datac => ww_sreg9,
	datad => ww_sreg4,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \muxsel2~312\);

\muxsel2~308_I\ : apex20ke_lcell 
-- Equation(s):
-- \muxsel2~308\ = \sreg~35\ # \sreg~38\ # \sreg~36\ # \muxsel2~312\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~35\,
	datab => \sreg~38\,
	datac => \sreg~36\,
	datad => \muxsel2~312\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \muxsel2~308\);

\EOF_WAIT~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \EOF_WAIT~2\ = \sreg~41\ & (txshld # \sreg~43\ & txidle) # !\sreg~41\ & \sreg~43\ & txidle

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F888",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~41\,
	datab => ww_txshld,
	datac => \sreg~43\,
	datad => ww_txidle,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \EOF_WAIT~2\);

\ID_BYTE~38_I\ : apex20ke_lcell 
-- Equation(s):
-- \ID_BYTE~38\ = sreg7 # cout1 & sreg9 & !cout2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CCEC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_cout,
	datab => ww_sreg7,
	datac => ww_sreg9,
	datad => ww_cout1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \ID_BYTE~38\);

\_~3449_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~3449\ = !txshld & \sreg~45\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_txshld,
	datad => \sreg~45\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~3449\);

\TCWFM_L~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \TCWFM_L~2\ = sreg6 # \_~3438\ # sreg5 & cout2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFEA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg6,
	datab => ww_sreg5,
	datac => ww_cout1,
	datad => \_~3438\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \TCWFM_L~2\);

\SV1~121_I\ : apex20ke_lcell 
-- Equation(s):
-- \SV1~121\ = !\EOF_WAIT~2\ & !\ID_BYTE~38\ & !\_~3449\ & !\TCWFM_L~2\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \EOF_WAIT~2\,
	datab => \ID_BYTE~38\,
	datac => \_~3449\,
	datad => \TCWFM_L~2\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SV1~121\);

\CRC_WAIT~34_I\ : apex20ke_lcell 
-- Equation(s):
-- \CRC_WAIT~34\ = \muxsel2~313\ # \CRC_WAIT~33\ # the_carries_10 & dpr_ren

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFEC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_the_carries_10,
	datab => \muxsel2~313\,
	datac => ww_dpr_ren,
	datad => \CRC_WAIT~33\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \CRC_WAIT~34\);

\_~3448_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~3448\ = \sreg~54\ & !txshld

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00F0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \sreg~54\,
	datad => ww_txshld,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~3448\);

\EOF~24_I\ : apex20ke_lcell 
-- Equation(s):
-- \EOF~24\ = \sreg~41\ & txshld & !\sreg~35\ # !\sreg~41\ & (!\sreg~35\ # !txshld)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "03F3",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \sreg~41\,
	datac => ww_txshld,
	datad => \sreg~35\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \EOF~24\);

\TC_RX_TIME~29_I\ : apex20ke_lcell 
-- Equation(s):
-- \TC_RX_TIME~29\ = !\_~61\ & (cout2 # !sreg4 # !cout1)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5155",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \_~61\,
	datab => ww_cout,
	datac => ww_cout1,
	datad => ww_sreg4,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \TC_RX_TIME~29\);

\SV1~120_I\ : apex20ke_lcell 
-- Equation(s):
-- \SV1~120\ = \_~3431\ # \_~3448\ # !\TC_RX_TIME~29\ # !\EOF~24\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EFFF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \_~3431\,
	datab => \_~3448\,
	datac => \EOF~24\,
	datad => \TC_RX_TIME~29\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SV1~120\);

\DCMD_SEQ1~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \DCMD_SEQ1~2\ = \sreg~40\ & (\sreg~51\ # \_~3427\ # !txshld) # !\sreg~40\ & \sreg~51\ & txshld

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EACA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~40\,
	datab => \sreg~51\,
	datac => ww_txshld,
	datad => \_~3427\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \DCMD_SEQ1~2\);

\_~64_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~64\ = \sreg~43\ & !txidle

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00F0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \sreg~43\,
	datad => ww_txidle,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~64\);

\SV1~118_I\ : apex20ke_lcell 
-- Equation(s):
-- \SV1~118\ = !\sreg~34\ & (!\sreg~40\ # !sreg2) # !txshld

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "557F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_txshld,
	datab => ww_sreg1,
	datac => \sreg~40\,
	datad => \sreg~34\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SV1~118\);

\_~3447_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~3447\ = !cout1 & sreg5 & !cout2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0050",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_cout,
	datac => ww_sreg5,
	datad => ww_cout1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~3447\);

\SV1~119_I\ : apex20ke_lcell 
-- Equation(s):
-- \SV1~119\ = !\_~64\ & \SV1~118\ & !\_~3437\ & !\_~3447\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0004",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \_~64\,
	datab => \SV1~118\,
	datac => \_~3437\,
	datad => \_~3447\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SV1~119\);

\TC_TX_TIME~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \TC_TX_TIME~2\ = !txshld & \sreg~55\ # !\TC_TX_TIME~36\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "30FF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_txshld,
	datac => \sreg~55\,
	datad => \TC_TX_TIME~36\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \TC_TX_TIME~2\);

\TCWFM_H~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \TCWFM_H~2\ = \sreg~58\ & (\sreg~57\ # txshld) # !\sreg~58\ & \sreg~57\ & !txshld

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ACAC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~58\,
	datab => \sreg~57\,
	datac => ww_txshld,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \TCWFM_H~2\);

\SV1~122_I\ : apex20ke_lcell 
-- Equation(s):
-- \SV1~122\ = !\DCMD_SEQ1~2\ & \SV1~119\ & !\TC_TX_TIME~2\ & !\TCWFM_H~2\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0004",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \DCMD_SEQ1~2\,
	datab => \SV1~119\,
	datac => \TC_TX_TIME~2\,
	datad => \TCWFM_H~2\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SV1~122\);

\SV1~I\ : apex20ke_lcell 
-- Equation(s):
-- SV1 = DFFE(\CRC_WAIT~34\ # \SV1~120\ # !\SV1~122\ # !\SV1~121\, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FDFF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \SV1~121\,
	datab => \CRC_WAIT~34\,
	datac => \SV1~120\,
	datad => \SV1~122\,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => SV1);

\PTYPE_SEQ0~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \PTYPE_SEQ0~2\ = \sreg~49\ & (txshld # \sreg~51\) # !\sreg~49\ & !txshld & \sreg~51\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AFA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~49\,
	datac => ww_txshld,
	datad => \sreg~51\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \PTYPE_SEQ0~2\);

\SV0~126_I\ : apex20ke_lcell 
-- Equation(s):
-- \SV0~126\ = \PTYPE_SEQ0~2\ # \sreg~55\ & !txshld # !\TC_TX_TIME~36\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AEFF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \PTYPE_SEQ0~2\,
	datab => \sreg~55\,
	datac => ww_txshld,
	datad => \TC_TX_TIME~36\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SV0~126\);

\ID_SHR8~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \ID_SHR8~2\ = \_~3440\ # !cout1 & sreg9 & !cout2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF04",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_cout,
	datab => ww_sreg9,
	datac => ww_cout1,
	datad => \_~3440\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \ID_SHR8~2\);

\RXSHR8~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \RXSHR8~2\ = \_~3436\ # !cout1 & !cout2 & sreg4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF10",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_cout,
	datab => ww_cout1,
	datac => ww_sreg4,
	datad => \_~3436\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \RXSHR8~2\);

\TXSHR8~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \TXSHR8~2\ = \_~3437\ # sreg5 & !cout1 & !cout2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg5,
	datab => ww_cout,
	datac => \_~3437\,
	datad => ww_cout1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \TXSHR8~2\);

\SV0~124_I\ : apex20ke_lcell 
-- Equation(s):
-- \SV0~124\ = \ID_SHR8~2\ # \TCWFM_L~2\ # \RXSHR8~2\ # \TXSHR8~2\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \ID_SHR8~2\,
	datab => \TCWFM_L~2\,
	datac => \RXSHR8~2\,
	datad => \TXSHR8~2\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SV0~124\);

\LEN0~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \LEN0~2\ = txshld & sreg2 & !send_data # !txshld & \sreg~48\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "2F20",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg2,
	datab => ww_send_data,
	datac => ww_txshld,
	datad => \sreg~48\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \LEN0~2\);

\SV0~125_I\ : apex20ke_lcell 
-- Equation(s):
-- \SV0~125\ = \_~3448\ # \_~61\ # \_~3429\ # \LEN0~2\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \_~3448\,
	datab => \_~61\,
	datac => \_~3429\,
	datad => \LEN0~2\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SV0~125\);

\MTYPE_LEN1~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \MTYPE_LEN1~2\ = txshld & \sreg~48\ # !txshld & \sreg~49\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC30",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_txshld,
	datac => \sreg~49\,
	datad => \sreg~48\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \MTYPE_LEN1~2\);

\SV0~131_I\ : apex20ke_lcell 
-- Equation(s):
-- \SV0~131\ = !msg_sent & !\_~3431\ & (\sreg~30\ # !\_~3425\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "000B",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~30\,
	datab => \_~3425\,
	datac => ww_msg_sent,
	datad => \_~3431\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \SV0~131\);

\SV0~133_I\ : apex20ke_lcell 
-- Equation(s):
-- \SV0~133\ = (!\MTYPE_LEN1~2\ & (txshld & !\sreg~58\ # !txshld & !\sreg~57\)) & CASCADE(\SV0~131\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0027",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_txshld,
	datab => \sreg~58\,
	datac => \sreg~57\,
	datad => \MTYPE_LEN1~2\,
	cascin => \SV0~131\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SV0~133\);

\SV0~127_I\ : apex20ke_lcell 
-- Equation(s):
-- \SV0~127\ = \SV0~133\ & !\_~3439\ & \STF~58\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0A00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \SV0~133\,
	datac => \_~3439\,
	datad => \STF~58\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SV0~127\);

\SV0~I\ : apex20ke_lcell 
-- Equation(s):
-- SV0 = DFFE(!\SV0~126\ & !\SV0~124\ & !\SV0~125\ & \SV0~127\, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0100",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \SV0~126\,
	datab => \SV0~124\,
	datac => \SV0~125\,
	datad => \SV0~127\,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => SV0);

\_~59_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~59\ = txshld & \sreg~40\ & sreg2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "A000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_txshld,
	datac => \sreg~40\,
	datad => ww_sreg1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~59\);

\CRC2~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \CRC2~2\ = \sreg~37\ & (\sreg~38\ # !txshld) # !\sreg~37\ & txshld & \sreg~38\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~37\,
	datac => ww_txshld,
	datad => \sreg~38\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \CRC2~2\);

\SV3~106_I\ : apex20ke_lcell 
-- Equation(s):
-- \SV3~106\ = \_~59\ # \_~64\ # \CRC2~2\ # !\EOF~24\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFEF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \_~59\,
	datab => \_~64\,
	datac => \EOF~24\,
	datad => \CRC2~2\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SV3~106\);

\_~3450_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~3450\ = !txshld & sreg2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3300",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_txshld,
	datad => ww_sreg2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~3450\);

\plen_clk_en~43_I\ : apex20ke_lcell 
-- Equation(s):
-- \plen_clk_en~43\ = !\_~3450\ & !\_~3439\ & (\sreg~30\ # \_~3425\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "000E",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~30\,
	datab => \_~3425\,
	datac => \_~3450\,
	datad => \_~3439\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \plen_clk_en~43\);

\SV3~104_I\ : apex20ke_lcell 
-- Equation(s):
-- \SV3~104\ = \sreg~33\ # txshld & \sreg~32\ # !txshld & \sreg~34\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEBA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~33\,
	datab => ww_txshld,
	datac => \sreg~34\,
	datad => \sreg~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SV3~104\);

\CRC3~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \CRC3~2\ = done & (sreg3 # \sreg~38\ & !txshld) # !done & \sreg~38\ & !txshld

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "A0EC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_done,
	datab => \sreg~38\,
	datac => ww_sreg3,
	datad => ww_txshld,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \CRC3~2\);

\SV3~105_I\ : apex20ke_lcell 
-- Equation(s):
-- \SV3~105\ = \SV3~104\ # \_~3449\ # \ID_BYTE~38\ # \CRC3~2\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \SV3~104\,
	datab => \_~3449\,
	datac => \ID_BYTE~38\,
	datad => \CRC3~2\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SV3~105\);

\SV3~I\ : apex20ke_lcell 
-- Equation(s):
-- SV3 = DFFE(!\SV3~106\ & \plen_clk_en~43\ & \SV0~133\ & !\SV3~105\, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0040",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \SV3~106\,
	datab => \plen_clk_en~43\,
	datac => \SV0~133\,
	datad => \SV3~105\,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => SV3);

\CRC0~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \CRC0~2\ = \sreg~35\ & (\sreg~36\ # !txshld) # !\sreg~35\ & \sreg~36\ & txshld

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0AA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~35\,
	datac => \sreg~36\,
	datad => ww_txshld,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \CRC0~2\);

\SV2~100_I\ : apex20ke_lcell 
-- Equation(s):
-- \SV2~100\ = \CRC0~2\ # \TXSHR8~2\ # \PTYPE_SEQ0~2\ # !\SV1~118\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFB",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \CRC0~2\,
	datab => \SV1~118\,
	datac => \TXSHR8~2\,
	datad => \PTYPE_SEQ0~2\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SV2~100\);

\SV2~99_I\ : apex20ke_lcell 
-- Equation(s):
-- \SV2~99\ = msg_sent # \CRC2~2\ # \_~3425\ & !\sreg~30\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFAE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_msg_sent,
	datab => \_~3425\,
	datac => \sreg~30\,
	datad => \CRC2~2\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SV2~99\);

\CRC1~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \CRC1~2\ = \sreg~36\ & (\sreg~37\ # !txshld) # !\sreg~36\ & \sreg~37\ & txshld

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0CC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \sreg~36\,
	datac => \sreg~37\,
	datad => ww_txshld,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \CRC1~2\);

\SV2~104_I\ : apex20ke_lcell 
-- Equation(s):
-- \SV2~104\ = !\_~3450\ & !\CRC3~2\ & (\sreg~30\ # \_~3425\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0054",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \_~3450\,
	datab => \sreg~30\,
	datac => \_~3425\,
	datad => \CRC3~2\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \SV2~104\);

\SV2~106_I\ : apex20ke_lcell 
-- Equation(s):
-- \SV2~106\ = (!\CRC1~2\ & !\_~3436\ & (!sreg4 # !\_~3441\)) & CASCADE(\SV2~104\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0015",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \CRC1~2\,
	datab => \_~3441\,
	datac => ww_sreg4,
	datad => \_~3436\,
	cascin => \SV2~104\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SV2~106\);

\SV2~I\ : apex20ke_lcell 
-- Equation(s):
-- SV2 = DFFE(!\SV2~100\ & \SV1~121\ & !\SV2~99\ & \SV2~106\, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0400",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \SV2~100\,
	datab => \SV1~121\,
	datac => \SV2~99\,
	datad => \SV2~106\,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => SV2);

\_~3444_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~3444\ = SV0 & !SV3 & SV2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0C00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => SV0,
	datac => SV3,
	datad => SV2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~3444\);

\BYT1~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \BYT1~2\ = \sreg~32\ & (\sreg~31\ # !txshld) # !\sreg~32\ & txshld & \sreg~31\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \sreg~32\,
	datac => ww_txshld,
	datad => \sreg~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \BYT1~2\);

\_~3446_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~3446\ = txshld & \sreg~51\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_txshld,
	datad => \sreg~51\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~3446\);

\SV1~117_I\ : apex20ke_lcell 
-- Equation(s):
-- \SV1~117\ = !\_~3446\ & !\TCWFM_H~2\ & (!\sreg~40\ # !\_~3443\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0013",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \_~3443\,
	datab => \_~3446\,
	datac => \sreg~40\,
	datad => \TCWFM_H~2\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SV1~117\);

\_~3445_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~3445\ = txshld & send_data & sreg2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "A000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_txshld,
	datac => ww_send_data,
	datad => ww_sreg2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~3445\);

\BYT3~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \BYT3~2\ = \sreg~34\ & (\sreg~33\ # !txshld) # !\sreg~34\ & txshld & \sreg~33\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \sreg~34\,
	datac => ww_txshld,
	datad => \sreg~33\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \BYT3~2\);

\SV4~73_I\ : apex20ke_lcell 
-- Equation(s):
-- \SV4~73\ = \LEN0~2\ # \BYT3~2\ # \_~3445\ & !\_~3435\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFAE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \LEN0~2\,
	datab => \_~3445\,
	datac => \_~3435\,
	datad => \BYT3~2\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SV4~73\);

\SV4~74_I\ : apex20ke_lcell 
-- Equation(s):
-- \SV4~74\ = \TC_TX_TIME~2\ # \SV4~73\ # !\SV1~119\ # !\SV1~117\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFF7",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \SV1~117\,
	datab => \SV1~119\,
	datac => \TC_TX_TIME~2\,
	datad => \SV4~73\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SV4~74\);

\SV4~I\ : apex20ke_lcell 
-- Equation(s):
-- SV4 = DFFE(\BYT1~2\ # \SV4~74\ # !\SV2~106\, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFCF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \BYT1~2\,
	datac => \SV2~106\,
	datad => \SV4~74\,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => SV4);

\SV5~I\ : apex20ke_lcell 
-- Equation(s):
-- SV5 = DFFE(SV5 & (!SV4 # !\_~3444\ # !SV1) # !SV5 & !SV1 & \_~3444\ & !SV4, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "2ABA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => SV5,
	datab => SV1,
	datac => \_~3444\,
	datad => SV4,
	clk => ww_CLK,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => SV5);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	crc32_1 IS
    PORT (
	CLK : IN std_logic;
	RST : IN std_logic;
	sreg : IN std_logic;
	crc32_en : IN std_logic;
	crc32_data : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	SRG_8 : OUT std_logic;
	SRG_0 : OUT std_logic;
	SRG_24 : OUT std_logic;
	SRG_16 : OUT std_logic;
	SRG_7 : OUT std_logic;
	SRG_31 : OUT std_logic;
	SRG_23 : OUT std_logic;
	SRG_15 : OUT std_logic;
	SRG_9 : OUT std_logic;
	SRG_1 : OUT std_logic;
	SRG_25 : OUT std_logic;
	SRG_17 : OUT std_logic;
	SRG_6 : OUT std_logic;
	SRG_30 : OUT std_logic;
	SRG_22 : OUT std_logic;
	SRG_14 : OUT std_logic;
	SRG_10 : OUT std_logic;
	SRG_2 : OUT std_logic;
	SRG_26 : OUT std_logic;
	SRG_18 : OUT std_logic;
	SRG_5 : OUT std_logic;
	SRG_29 : OUT std_logic;
	SRG_21 : OUT std_logic;
	SRG_13 : OUT std_logic;
	SRG_11 : OUT std_logic;
	SRG_3 : OUT std_logic;
	SRG_27 : OUT std_logic;
	SRG_19 : OUT std_logic;
	SRG_4 : OUT std_logic;
	SRG_28 : OUT std_logic;
	SRG_20 : OUT std_logic;
	SRG_12 : OUT std_logic
	);
END crc32_1;

ARCHITECTURE structure OF crc32_1 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_sreg : std_logic;
SIGNAL ww_crc32_en : std_logic;
SIGNAL ww_crc32_data : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_SRG_8 : std_logic;
SIGNAL ww_SRG_0 : std_logic;
SIGNAL ww_SRG_24 : std_logic;
SIGNAL ww_SRG_16 : std_logic;
SIGNAL ww_SRG_7 : std_logic;
SIGNAL ww_SRG_31 : std_logic;
SIGNAL ww_SRG_23 : std_logic;
SIGNAL ww_SRG_15 : std_logic;
SIGNAL ww_SRG_9 : std_logic;
SIGNAL ww_SRG_1 : std_logic;
SIGNAL ww_SRG_25 : std_logic;
SIGNAL ww_SRG_17 : std_logic;
SIGNAL ww_SRG_6 : std_logic;
SIGNAL ww_SRG_30 : std_logic;
SIGNAL ww_SRG_22 : std_logic;
SIGNAL ww_SRG_14 : std_logic;
SIGNAL ww_SRG_10 : std_logic;
SIGNAL ww_SRG_2 : std_logic;
SIGNAL ww_SRG_26 : std_logic;
SIGNAL ww_SRG_18 : std_logic;
SIGNAL ww_SRG_5 : std_logic;
SIGNAL ww_SRG_29 : std_logic;
SIGNAL ww_SRG_21 : std_logic;
SIGNAL ww_SRG_13 : std_logic;
SIGNAL ww_SRG_11 : std_logic;
SIGNAL ww_SRG_3 : std_logic;
SIGNAL ww_SRG_27 : std_logic;
SIGNAL ww_SRG_19 : std_logic;
SIGNAL ww_SRG_4 : std_logic;
SIGNAL ww_SRG_28 : std_logic;
SIGNAL ww_SRG_20 : std_logic;
SIGNAL ww_SRG_12 : std_logic;
SIGNAL i10 : std_logic;
SIGNAL i4 : std_logic;
SIGNAL i14 : std_logic;
SIGNAL i9 : std_logic;
SIGNAL i16 : std_logic;
SIGNAL i5 : std_logic;
SIGNAL i15 : std_logic;
SIGNAL i11 : std_logic;
SIGNAL i6 : std_logic;
SIGNAL i17 : std_logic;
SIGNAL i8 : std_logic;
SIGNAL i12 : std_logic;
SIGNAL i7 : std_logic;
SIGNAL i13 : std_logic;
SIGNAL ALT_NOT_ww_RST : std_logic;

BEGIN

ww_CLK <= CLK;
ww_RST <= RST;
ww_sreg <= sreg;
ww_crc32_en <= crc32_en;
ww_crc32_data <= crc32_data;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
SRG_8 <= ww_SRG_8;
SRG_0 <= ww_SRG_0;
SRG_24 <= ww_SRG_24;
SRG_16 <= ww_SRG_16;
SRG_7 <= ww_SRG_7;
SRG_31 <= ww_SRG_31;
SRG_23 <= ww_SRG_23;
SRG_15 <= ww_SRG_15;
SRG_9 <= ww_SRG_9;
SRG_1 <= ww_SRG_1;
SRG_25 <= ww_SRG_25;
SRG_17 <= ww_SRG_17;
SRG_6 <= ww_SRG_6;
SRG_30 <= ww_SRG_30;
SRG_22 <= ww_SRG_22;
SRG_14 <= ww_SRG_14;
SRG_10 <= ww_SRG_10;
SRG_2 <= ww_SRG_2;
SRG_26 <= ww_SRG_26;
SRG_18 <= ww_SRG_18;
SRG_5 <= ww_SRG_5;
SRG_29 <= ww_SRG_29;
SRG_21 <= ww_SRG_21;
SRG_13 <= ww_SRG_13;
SRG_11 <= ww_SRG_11;
SRG_3 <= ww_SRG_3;
SRG_27 <= ww_SRG_27;
SRG_19 <= ww_SRG_19;
SRG_4 <= ww_SRG_4;
SRG_28 <= ww_SRG_28;
SRG_20 <= ww_SRG_20;
SRG_12 <= ww_SRG_12;
ALT_NOT_ww_RST <= NOT ww_RST;

\SRG[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_8 = DFFE(sreg2 # crc32_en & i10 # !crc32_en & SRG_8, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEBA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg,
	datab => ww_crc32_en,
	datac => ww_SRG_8,
	datad => i10,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_8);

\SRG[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_0 = DFFE(sreg2 # crc32_en & i4 # !crc32_en & SRG_0, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEBA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg,
	datab => ww_crc32_en,
	datac => ww_SRG_0,
	datad => i4,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_0);

\SRG[24]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_24 = DFFE(sreg2 # crc32_en & SRG_23 # !crc32_en & SRG_24, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFCA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_SRG_24,
	datab => ww_SRG_23,
	datac => ww_crc32_en,
	datad => ww_sreg,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_24);

\SRG[16]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_16 = DFFE(sreg2 # crc32_en & i14 # !crc32_en & SRG_16, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FDEC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_crc32_en,
	datab => ww_sreg,
	datac => i14,
	datad => ww_SRG_16,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_16);

\SRG[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_7 = DFFE(sreg2 # crc32_en & i9 # !crc32_en & SRG_7, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEDC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_crc32_en,
	datab => ww_sreg,
	datac => ww_SRG_7,
	datad => i9,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_7);

\SRG[31]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_31 = DFFE(sreg2 # crc32_en & SRG_30 # !crc32_en & SRG_31, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEF4",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_crc32_en,
	datab => ww_SRG_31,
	datac => ww_sreg,
	datad => ww_SRG_30,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_31);

\SRG[23]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_23 = DFFE(sreg2 # crc32_en & i16 # !crc32_en & SRG_23, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FCEE",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_SRG_23,
	datab => ww_sreg,
	datac => i16,
	datad => ww_crc32_en,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_23);

\SRG[15]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_15 = DFFE(sreg2 # crc32_en & SRG_14 # !crc32_en & SRG_15, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEDC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_crc32_en,
	datab => ww_sreg,
	datac => ww_SRG_15,
	datad => ww_SRG_14,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_15);

\SRG[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_9 = DFFE(sreg2 # crc32_en & SRG_8 # !crc32_en & SRG_9, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FBEA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg,
	datab => ww_crc32_en,
	datac => ww_SRG_8,
	datad => ww_SRG_9,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_9);

\SRG[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_1 = DFFE(sreg2 # crc32_en & i5 # !crc32_en & SRG_1, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FBF8",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i5,
	datab => ww_crc32_en,
	datac => ww_sreg,
	datad => ww_SRG_1,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_1);

\SRG[25]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_25 = DFFE(sreg2 # crc32_en & SRG_24 # !crc32_en & SRG_25, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFE2",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_SRG_25,
	datab => ww_crc32_en,
	datac => ww_SRG_24,
	datad => ww_sreg,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_25);

\SRG[17]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_17 = DFFE(sreg2 # crc32_en & SRG_16 # !crc32_en & SRG_17, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FBEA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg,
	datab => ww_crc32_en,
	datac => ww_SRG_16,
	datad => ww_SRG_17,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_17);

\SRG[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_6 = DFFE(sreg2 # crc32_en & SRG_5 # !crc32_en & SRG_6, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEDC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_crc32_en,
	datab => ww_sreg,
	datac => ww_SRG_6,
	datad => ww_SRG_5,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_6);

\SRG[30]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_30 = DFFE(sreg2 # crc32_en & SRG_29 # !crc32_en & SRG_30, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FBEA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg,
	datab => ww_crc32_en,
	datac => ww_SRG_29,
	datad => ww_SRG_30,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_30);

\SRG[22]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_22 = DFFE(sreg2 # crc32_en & i15 # !crc32_en & SRG_22, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEBA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg,
	datab => ww_crc32_en,
	datac => ww_SRG_22,
	datad => i15,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_22);

\SRG[14]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_14 = DFFE(sreg2 # crc32_en & SRG_13 # !crc32_en & SRG_14, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EEFA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg,
	datab => ww_SRG_13,
	datac => ww_SRG_14,
	datad => ww_crc32_en,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_14);

\SRG[10]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_10 = DFFE(sreg2 # crc32_en & i11 # !crc32_en & SRG_10, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EFEC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i11,
	datab => ww_sreg,
	datac => ww_crc32_en,
	datad => ww_SRG_10,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_10);

\SRG[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_2 = DFFE(sreg2 # crc32_en & i6 # !crc32_en & SRG_2, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FBEA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg,
	datab => ww_crc32_en,
	datac => i6,
	datad => ww_SRG_2,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_2);

\SRG[26]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_26 = DFFE(sreg2 # crc32_en & i17 # !crc32_en & SRG_26, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEDC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_crc32_en,
	datab => ww_sreg,
	datac => ww_SRG_26,
	datad => i17,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_26);

\SRG[18]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_18 = DFFE(sreg2 # crc32_en & SRG_17 # !crc32_en & SRG_18, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FDEC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_crc32_en,
	datab => ww_sreg,
	datac => ww_SRG_17,
	datad => ww_SRG_18,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_18);

\SRG[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_5 = DFFE(sreg2 # crc32_en & i8 # !crc32_en & SRG_5, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EEFC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i8,
	datab => ww_sreg,
	datac => ww_SRG_5,
	datad => ww_crc32_en,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_5);

\SRG[29]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_29 = DFFE(sreg2 # crc32_en & SRG_28 # !crc32_en & SRG_29, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EFEA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg,
	datab => ww_SRG_28,
	datac => ww_crc32_en,
	datad => ww_SRG_29,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_29);

\SRG[21]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_21 = DFFE(sreg2 # crc32_en & SRG_20 # !crc32_en & SRG_21, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FECE",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_SRG_21,
	datab => ww_sreg,
	datac => ww_crc32_en,
	datad => ww_SRG_20,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_21);

\SRG[13]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_13 = DFFE(sreg2 # crc32_en & SRG_12 # !crc32_en & SRG_13, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FDEC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_crc32_en,
	datab => ww_sreg,
	datac => ww_SRG_12,
	datad => ww_SRG_13,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_13);

\SRG[11]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_11 = DFFE(sreg2 # crc32_en & i12 # !crc32_en & SRG_11, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FECE",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_SRG_11,
	datab => ww_sreg,
	datac => ww_crc32_en,
	datad => i12,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_11);

\SRG[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_3 = DFFE(sreg2 # crc32_en & SRG_2 # !crc32_en & SRG_3, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEF2",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_SRG_3,
	datab => ww_crc32_en,
	datac => ww_sreg,
	datad => ww_SRG_2,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_3);

\SRG[27]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_27 = DFFE(sreg2 # crc32_en & SRG_26 # !crc32_en & SRG_27, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEF2",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_SRG_27,
	datab => ww_crc32_en,
	datac => ww_sreg,
	datad => ww_SRG_26,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_27);

\SRG[19]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_19 = DFFE(sreg2 # crc32_en & SRG_18 # !crc32_en & SRG_19, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FCEE",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_SRG_19,
	datab => ww_sreg,
	datac => ww_SRG_18,
	datad => ww_crc32_en,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_19);

\SRG[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_4 = DFFE(sreg2 # crc32_en & i7 # !crc32_en & SRG_4, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEDC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_crc32_en,
	datab => ww_sreg,
	datac => ww_SRG_4,
	datad => i7,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_4);

\SRG[28]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_28 = DFFE(sreg2 # crc32_en & SRG_27 # !crc32_en & SRG_28, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFD8",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_crc32_en,
	datab => ww_SRG_27,
	datac => ww_SRG_28,
	datad => ww_sreg,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_28);

\SRG[20]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_20 = DFFE(sreg2 # crc32_en & SRG_19 # !crc32_en & SRG_20, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFD8",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_crc32_en,
	datab => ww_SRG_19,
	datac => ww_SRG_20,
	datad => ww_sreg,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_20);

\SRG[12]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_12 = DFFE(sreg2 # crc32_en & i13 # !crc32_en & SRG_12, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FBF8",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i13,
	datab => ww_crc32_en,
	datac => ww_sreg,
	datad => ww_SRG_12,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_12);

\i10~I\ : apex20ke_lcell 
-- Equation(s):
-- i10 = SRG_31 $ SRG_7

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_SRG_31,
	datad => ww_SRG_7,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i10);

\i4~I\ : apex20ke_lcell 
-- Equation(s):
-- i4 = SRG_31 $ crc32_data

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_SRG_31,
	datad => ww_crc32_data,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i4);

\i14~I\ : apex20ke_lcell 
-- Equation(s):
-- i14 = SRG_31 $ SRG_15

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_SRG_31,
	datad => ww_SRG_15,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i14);

\i9~I\ : apex20ke_lcell 
-- Equation(s):
-- i9 = SRG_6 $ SRG_31

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_SRG_6,
	datad => ww_SRG_31,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i9);

\i16~I\ : apex20ke_lcell 
-- Equation(s):
-- i16 = SRG_31 $ SRG_22

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "33CC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_SRG_31,
	datad => ww_SRG_22,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i16);

\i5~I\ : apex20ke_lcell 
-- Equation(s):
-- i5 = SRG_31 $ SRG_0

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5A5A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_SRG_31,
	datac => ww_SRG_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i5);

\i15~I\ : apex20ke_lcell 
-- Equation(s):
-- i15 = SRG_31 $ SRG_21

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_SRG_31,
	datad => ww_SRG_21,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i15);

\i11~I\ : apex20ke_lcell 
-- Equation(s):
-- i11 = SRG_9 $ SRG_31

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_SRG_9,
	datad => ww_SRG_31,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i11);

\i6~I\ : apex20ke_lcell 
-- Equation(s):
-- i6 = SRG_1 $ SRG_31

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_SRG_1,
	datad => ww_SRG_31,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i6);

\i17~I\ : apex20ke_lcell 
-- Equation(s):
-- i17 = SRG_31 $ SRG_25

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "33CC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_SRG_31,
	datad => ww_SRG_25,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i17);

\i8~I\ : apex20ke_lcell 
-- Equation(s):
-- i8 = SRG_4 $ SRG_31

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_SRG_4,
	datad => ww_SRG_31,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i8);

\i12~I\ : apex20ke_lcell 
-- Equation(s):
-- i12 = SRG_31 $ SRG_10

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "33CC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_SRG_31,
	datad => ww_SRG_10,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i12);

\i7~I\ : apex20ke_lcell 
-- Equation(s):
-- i7 = SRG_3 $ SRG_31

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_SRG_3,
	datad => ww_SRG_31,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i7);

\i13~I\ : apex20ke_lcell 
-- Equation(s):
-- i13 = SRG_31 $ SRG_11

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_SRG_31,
	datad => ww_SRG_11,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i13);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	crc_tx IS
    PORT (
	CLK : IN std_logic;
	RST : IN std_logic;
	txshld : IN std_logic;
	data_val : IN std_logic;
	muxsel4 : IN std_logic;
	sreg : IN std_logic;
	sreg1 : IN std_logic;
	result_node : IN std_logic;
	result_node1 : IN std_logic;
	result_node2 : IN std_logic;
	result_node3 : IN std_logic;
	result_node4 : IN std_logic;
	result_node5 : IN std_logic;
	result_node6 : IN std_logic;
	result_node7 : IN std_logic;
	result_node8 : IN std_logic;
	result_node9 : IN std_logic;
	result_node10 : IN std_logic;
	result_node11 : IN std_logic;
	result_node12 : IN std_logic;
	result_node13 : IN std_logic;
	result_node14 : IN std_logic;
	result_node15 : IN std_logic;
	GND_port : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	i : OUT std_logic;
	done : OUT std_logic;
	i1 : OUT std_logic;
	i2 : OUT std_logic;
	i3 : OUT std_logic;
	SRG_8 : OUT std_logic;
	SRG_0 : OUT std_logic;
	SRG_24 : OUT std_logic;
	SRG_16 : OUT std_logic;
	i4 : OUT std_logic;
	SRG_7 : OUT std_logic;
	SRG_31 : OUT std_logic;
	SRG_23 : OUT std_logic;
	SRG_15 : OUT std_logic;
	SRG_9 : OUT std_logic;
	SRG_1 : OUT std_logic;
	SRG_25 : OUT std_logic;
	SRG_17 : OUT std_logic;
	i5 : OUT std_logic;
	SRG_6 : OUT std_logic;
	SRG_30 : OUT std_logic;
	SRG_22 : OUT std_logic;
	SRG_14 : OUT std_logic;
	SRG_10 : OUT std_logic;
	SRG_2 : OUT std_logic;
	SRG_26 : OUT std_logic;
	SRG_18 : OUT std_logic;
	i6 : OUT std_logic;
	SRG_5 : OUT std_logic;
	SRG_29 : OUT std_logic;
	i7 : OUT std_logic;
	SRG_21 : OUT std_logic;
	SRG_13 : OUT std_logic;
	SRG_11 : OUT std_logic;
	SRG_3 : OUT std_logic;
	SRG_27 : OUT std_logic;
	SRG_19 : OUT std_logic;
	SRG_4 : OUT std_logic;
	SRG_28 : OUT std_logic;
	SRG_20 : OUT std_logic;
	SRG_12 : OUT std_logic
	);
END crc_tx;

ARCHITECTURE structure OF crc_tx IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_txshld : std_logic;
SIGNAL ww_data_val : std_logic;
SIGNAL ww_muxsel4 : std_logic;
SIGNAL ww_sreg : std_logic;
SIGNAL ww_sreg1 : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL ww_result_node1 : std_logic;
SIGNAL ww_result_node2 : std_logic;
SIGNAL ww_result_node3 : std_logic;
SIGNAL ww_result_node4 : std_logic;
SIGNAL ww_result_node5 : std_logic;
SIGNAL ww_result_node6 : std_logic;
SIGNAL ww_result_node7 : std_logic;
SIGNAL ww_result_node8 : std_logic;
SIGNAL ww_result_node9 : std_logic;
SIGNAL ww_result_node10 : std_logic;
SIGNAL ww_result_node11 : std_logic;
SIGNAL ww_result_node12 : std_logic;
SIGNAL ww_result_node13 : std_logic;
SIGNAL ww_result_node14 : std_logic;
SIGNAL ww_result_node15 : std_logic;
SIGNAL ww_GND_port : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_i : std_logic;
SIGNAL ww_done : std_logic;
SIGNAL ww_i1 : std_logic;
SIGNAL ww_i2 : std_logic;
SIGNAL ww_i3 : std_logic;
SIGNAL ww_SRG_8 : std_logic;
SIGNAL ww_SRG_0 : std_logic;
SIGNAL ww_SRG_24 : std_logic;
SIGNAL ww_SRG_16 : std_logic;
SIGNAL ww_i4 : std_logic;
SIGNAL ww_SRG_7 : std_logic;
SIGNAL ww_SRG_31 : std_logic;
SIGNAL ww_SRG_23 : std_logic;
SIGNAL ww_SRG_15 : std_logic;
SIGNAL ww_SRG_9 : std_logic;
SIGNAL ww_SRG_1 : std_logic;
SIGNAL ww_SRG_25 : std_logic;
SIGNAL ww_SRG_17 : std_logic;
SIGNAL ww_i5 : std_logic;
SIGNAL ww_SRG_6 : std_logic;
SIGNAL ww_SRG_30 : std_logic;
SIGNAL ww_SRG_22 : std_logic;
SIGNAL ww_SRG_14 : std_logic;
SIGNAL ww_SRG_10 : std_logic;
SIGNAL ww_SRG_2 : std_logic;
SIGNAL ww_SRG_26 : std_logic;
SIGNAL ww_SRG_18 : std_logic;
SIGNAL ww_i6 : std_logic;
SIGNAL ww_SRG_5 : std_logic;
SIGNAL ww_SRG_29 : std_logic;
SIGNAL ww_i7 : std_logic;
SIGNAL ww_SRG_21 : std_logic;
SIGNAL ww_SRG_13 : std_logic;
SIGNAL ww_SRG_11 : std_logic;
SIGNAL ww_SRG_3 : std_logic;
SIGNAL ww_SRG_27 : std_logic;
SIGNAL ww_SRG_19 : std_logic;
SIGNAL ww_SRG_4 : std_logic;
SIGNAL ww_SRG_28 : std_logic;
SIGNAL ww_SRG_20 : std_logic;
SIGNAL ww_SRG_12 : std_logic;
SIGNAL crc32_en : std_logic;
SIGNAL crc32_data : std_logic;
SIGNAL \srg[7]\ : std_logic;
SIGNAL \srg[6]\ : std_logic;
SIGNAL \i~834\ : std_logic;
SIGNAL \srg[2]~5\ : std_logic;
SIGNAL \i~837\ : std_logic;
SIGNAL \i~91\ : std_logic;
SIGNAL \srg[5]\ : std_logic;
SIGNAL \srg[4]\ : std_logic;
SIGNAL \i~839\ : std_logic;
SIGNAL \srg[3]\ : std_logic;
SIGNAL \i~841\ : std_logic;
SIGNAL \i~843\ : std_logic;
SIGNAL \i~103\ : std_logic;
SIGNAL \srg[2]\ : std_logic;
SIGNAL \i~845\ : std_logic;
SIGNAL \i~107\ : std_logic;
SIGNAL \srg[1]\ : std_logic;
SIGNAL \srg[0]\ : std_logic;
SIGNAL \i~847\ : std_logic;
SIGNAL last_byte : std_logic;
SIGNAL \i91~90\ : std_logic;
SIGNAL \state~20\ : std_logic;
SIGNAL \loopcnt[4]~COUT\ : std_logic;
SIGNAL \loopcnt[5]\ : std_logic;
SIGNAL \i~829\ : std_logic;
SIGNAL \i~1\ : std_logic;
SIGNAL \i92~96\ : std_logic;
SIGNAL \state~22\ : std_logic;
SIGNAL \i~42\ : std_logic;
SIGNAL \loopcnt[0]\ : std_logic;
SIGNAL \loopcnt[0]~COUT\ : std_logic;
SIGNAL \loopcnt[1]\ : std_logic;
SIGNAL \loopcnt[1]~COUT\ : std_logic;
SIGNAL \loopcnt[2]\ : std_logic;
SIGNAL \loopcnt[2]~COUT\ : std_logic;
SIGNAL \loopcnt[3]\ : std_logic;
SIGNAL \loopcnt[3]~COUT\ : std_logic;
SIGNAL \loopcnt[4]\ : std_logic;
SIGNAL \i91~89\ : std_logic;
SIGNAL \state~21\ : std_logic;
SIGNAL \i93~93\ : std_logic;
SIGNAL \state~23\ : std_logic;
SIGNAL \i~2\ : std_logic;
SIGNAL \state~24\ : std_logic;
SIGNAL ALT_NOT_ww_RST : std_logic;

COMPONENT crc32_1
    PORT (
	CLK : IN std_logic;
	RST : IN std_logic;
	sreg : IN std_logic;
	crc32_en : IN std_logic;
	crc32_data : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	SRG_8 : OUT std_logic;
	SRG_0 : OUT std_logic;
	SRG_24 : OUT std_logic;
	SRG_16 : OUT std_logic;
	SRG_7 : OUT std_logic;
	SRG_31 : OUT std_logic;
	SRG_23 : OUT std_logic;
	SRG_15 : OUT std_logic;
	SRG_9 : OUT std_logic;
	SRG_1 : OUT std_logic;
	SRG_25 : OUT std_logic;
	SRG_17 : OUT std_logic;
	SRG_6 : OUT std_logic;
	SRG_30 : OUT std_logic;
	SRG_22 : OUT std_logic;
	SRG_14 : OUT std_logic;
	SRG_10 : OUT std_logic;
	SRG_2 : OUT std_logic;
	SRG_26 : OUT std_logic;
	SRG_18 : OUT std_logic;
	SRG_5 : OUT std_logic;
	SRG_29 : OUT std_logic;
	SRG_21 : OUT std_logic;
	SRG_13 : OUT std_logic;
	SRG_11 : OUT std_logic;
	SRG_3 : OUT std_logic;
	SRG_27 : OUT std_logic;
	SRG_19 : OUT std_logic;
	SRG_4 : OUT std_logic;
	SRG_28 : OUT std_logic;
	SRG_20 : OUT std_logic;
	SRG_12 : OUT std_logic);
END COMPONENT;

BEGIN

ww_CLK <= CLK;
ww_RST <= RST;
ww_txshld <= txshld;
ww_data_val <= data_val;
ww_muxsel4 <= muxsel4;
ww_sreg <= sreg;
ww_sreg1 <= sreg1;
ww_result_node <= result_node;
ww_result_node1 <= result_node1;
ww_result_node2 <= result_node2;
ww_result_node3 <= result_node3;
ww_result_node4 <= result_node4;
ww_result_node5 <= result_node5;
ww_result_node6 <= result_node6;
ww_result_node7 <= result_node7;
ww_result_node8 <= result_node8;
ww_result_node9 <= result_node9;
ww_result_node10 <= result_node10;
ww_result_node11 <= result_node11;
ww_result_node12 <= result_node12;
ww_result_node13 <= result_node13;
ww_result_node14 <= result_node14;
ww_result_node15 <= result_node15;
ww_GND_port <= GND_port;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
i <= ww_i;
done <= ww_done;
i1 <= ww_i1;
i2 <= ww_i2;
i3 <= ww_i3;
SRG_8 <= ww_SRG_8;
SRG_0 <= ww_SRG_0;
SRG_24 <= ww_SRG_24;
SRG_16 <= ww_SRG_16;
i4 <= ww_i4;
SRG_7 <= ww_SRG_7;
SRG_31 <= ww_SRG_31;
SRG_23 <= ww_SRG_23;
SRG_15 <= ww_SRG_15;
SRG_9 <= ww_SRG_9;
SRG_1 <= ww_SRG_1;
SRG_25 <= ww_SRG_25;
SRG_17 <= ww_SRG_17;
i5 <= ww_i5;
SRG_6 <= ww_SRG_6;
SRG_30 <= ww_SRG_30;
SRG_22 <= ww_SRG_22;
SRG_14 <= ww_SRG_14;
SRG_10 <= ww_SRG_10;
SRG_2 <= ww_SRG_2;
SRG_26 <= ww_SRG_26;
SRG_18 <= ww_SRG_18;
i6 <= ww_i6;
SRG_5 <= ww_SRG_5;
SRG_29 <= ww_SRG_29;
i7 <= ww_i7;
SRG_21 <= ww_SRG_21;
SRG_13 <= ww_SRG_13;
SRG_11 <= ww_SRG_11;
SRG_3 <= ww_SRG_3;
SRG_27 <= ww_SRG_27;
SRG_19 <= ww_SRG_19;
SRG_4 <= ww_SRG_4;
SRG_28 <= ww_SRG_28;
SRG_20 <= ww_SRG_20;
SRG_12 <= ww_SRG_12;
ALT_NOT_ww_RST <= NOT ww_RST;
inst_crc32 : crc32_1
PORT MAP (
	CLK => ww_CLK,
	RST => ww_RST,
	sreg => ww_sreg,
	crc32_en => crc32_en,
	crc32_data => crc32_data,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	SRG_8 => ww_SRG_8,
	SRG_0 => ww_SRG_0,
	SRG_24 => ww_SRG_24,
	SRG_16 => ww_SRG_16,
	SRG_7 => ww_SRG_7,
	SRG_31 => ww_SRG_31,
	SRG_23 => ww_SRG_23,
	SRG_15 => ww_SRG_15,
	SRG_9 => ww_SRG_9,
	SRG_1 => ww_SRG_1,
	SRG_25 => ww_SRG_25,
	SRG_17 => ww_SRG_17,
	SRG_6 => ww_SRG_6,
	SRG_30 => ww_SRG_30,
	SRG_22 => ww_SRG_22,
	SRG_14 => ww_SRG_14,
	SRG_10 => ww_SRG_10,
	SRG_2 => ww_SRG_2,
	SRG_26 => ww_SRG_26,
	SRG_18 => ww_SRG_18,
	SRG_5 => ww_SRG_5,
	SRG_29 => ww_SRG_29,
	SRG_21 => ww_SRG_21,
	SRG_13 => ww_SRG_13,
	SRG_11 => ww_SRG_11,
	SRG_3 => ww_SRG_3,
	SRG_27 => ww_SRG_27,
	SRG_19 => ww_SRG_19,
	SRG_4 => ww_SRG_4,
	SRG_28 => ww_SRG_28,
	SRG_20 => ww_SRG_20,
	SRG_12 => ww_SRG_12);

\crc32_en~I\ : apex20ke_lcell 
-- Equation(s):
-- crc32_en = DFFE(!sreg2 & (\state~22\ # \state~23\), GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00FA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datac => \state~23\,
	datad => ww_sreg,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => crc32_en);

\crc32_data~I\ : apex20ke_lcell 
-- Equation(s):
-- crc32_data = DFFE(\srg[7]\ & (sreg2 # !\state~23\), GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DD00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~23\,
	datab => ww_sreg,
	datad => \srg[7]\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => crc32_data);

\srg[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- \srg[7]\ = DFFE(\i~834\ # \state~21\ & i7, GLOBAL(outclock0), , , \srg[2]~5\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~21\,
	datac => ww_i7,
	datad => \i~834\,
	clk => ww_CLK,
	ena => \srg[2]~5\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \srg[7]\);

\srg[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \srg[6]\ = DFFE(\i~91\ # \i~837\ # \srg[5]\ & \state~22\, GLOBAL(outclock0), , , \srg[2]~5\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFEC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \srg[5]\,
	datab => \i~91\,
	datac => \state~22\,
	datad => \i~837\,
	clk => ww_CLK,
	ena => \srg[2]~5\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \srg[6]\);

\i~834_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~834\ = \state~20\ & \state~22\ & \srg[6]\ # !\state~20\ & (\srg[7]\ # \state~22\ & \srg[6]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F444",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~20\,
	datab => \srg[7]\,
	datac => \state~22\,
	datad => \srg[6]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~834\);

\srg[2]~5_I\ : apex20ke_lcell 
-- Equation(s):
-- \srg[2]~5\ = !sreg2 & !RST

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0505",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg,
	datac => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \srg[2]~5\);

\i~837_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~837\ = \state~21\ & (muxsel4 & result_node # !muxsel4 & result_node)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8A80",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~21\,
	datab => ww_result_node12,
	datac => ww_muxsel4,
	datad => ww_result_node13,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~837\);

\i~91_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~91\ = !\state~20\ & \srg[6]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \state~20\,
	datad => \srg[6]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~91\);

\srg[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \srg[5]\ = DFFE(\i~839\ # \state~21\ & i5, GLOBAL(outclock0), , , \srg[2]~5\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FCCC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \i~839\,
	datac => \state~21\,
	datad => ww_i5,
	clk => ww_CLK,
	ena => \srg[2]~5\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \srg[5]\);

\srg[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \srg[4]\ = DFFE(\i~841\ # \state~21\ & i4, GLOBAL(outclock0), , , \srg[2]~5\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FAF0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~21\,
	datac => \i~841\,
	datad => ww_i4,
	clk => ww_CLK,
	ena => \srg[2]~5\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \srg[4]\);

\i~839_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~839\ = \state~22\ & (\srg[4]\ # !\state~20\ & \srg[5]\) # !\state~22\ & !\state~20\ & \srg[5]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B3A0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datab => \state~20\,
	datac => \srg[4]\,
	datad => \srg[5]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~839\);

\srg[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \srg[3]\ = DFFE(\i~103\ # \i~843\ # \srg[2]\ & \state~22\, GLOBAL(outclock0), , , \srg[2]~5\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFEA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~103\,
	datab => \srg[2]\,
	datac => \state~22\,
	datad => \i~843\,
	clk => ww_CLK,
	ena => \srg[2]~5\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \srg[3]\);

\i~841_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~841\ = \srg[4]\ & (\state~22\ & \srg[3]\ # !\state~20\) # !\srg[4]\ & \state~22\ & \srg[3]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F222",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \srg[4]\,
	datab => \state~20\,
	datac => \state~22\,
	datad => \srg[3]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~841\);

\i~843_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~843\ = \state~21\ & (muxsel4 & result_node # !muxsel4 & result_node)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "A808",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~21\,
	datab => ww_result_node7,
	datac => ww_muxsel4,
	datad => ww_result_node6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~843\);

\i~103_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~103\ = !\state~20\ & \srg[3]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5050",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~20\,
	datac => \srg[3]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~103\);

\srg[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \srg[2]\ = DFFE(\i~107\ # \i~845\ # \srg[1]\ & \state~22\, GLOBAL(outclock0), , , \srg[2]~5\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFEA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~107\,
	datab => \srg[1]\,
	datac => \state~22\,
	datad => \i~845\,
	clk => ww_CLK,
	ena => \srg[2]~5\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \srg[2]\);

\i~845_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~845\ = \state~21\ & (muxsel4 & result_node # !muxsel4 & result_node1)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "A088",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~21\,
	datab => ww_result_node5,
	datac => ww_result_node4,
	datad => ww_muxsel4,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~845\);

\i~107_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~107\ = !\state~20\ & \srg[2]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \state~20\,
	datad => \srg[2]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~107\);

\srg[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \srg[1]\ = DFFE(\i~847\ # \state~21\ & i1, GLOBAL(outclock0), , , \srg[2]~5\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FAF0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~21\,
	datac => \i~847\,
	datad => ww_i1,
	clk => ww_CLK,
	ena => \srg[2]~5\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \srg[1]\);

\srg[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \srg[0]\ = DFFE(\state~21\ & (i # !\state~20\ & \srg[0]\) # !\state~21\ & !\state~20\ & \srg[0]\, GLOBAL(outclock0), , , \srg[2]~5\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8F88",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~21\,
	datab => ww_i,
	datac => \state~20\,
	datad => \srg[0]\,
	clk => ww_CLK,
	ena => \srg[2]~5\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \srg[0]\);

\i~847_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~847\ = \state~20\ & \state~22\ & \srg[0]\ # !\state~20\ & (\srg[1]\ # \state~22\ & \srg[0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F444",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~20\,
	datab => \srg[1]\,
	datac => \state~22\,
	datad => \srg[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~847\);

\i~826_I\ : apex20ke_lcell 
-- Equation(s):
-- i = result_node & (muxsel4 # result_node1) # !result_node & !muxsel4 & result_node1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_result_node,
	datac => ww_muxsel4,
	datad => ww_result_node1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_i);

\done~reg0_I\ : apex20ke_lcell 
-- Equation(s):
-- done = DFFE(!sreg2 & \state~24\, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_sreg,
	datad => \state~24\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_done);

\i~827_I\ : apex20ke_lcell 
-- Equation(s):
-- i1 = muxsel4 & result_node # !muxsel4 & result_node1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA50",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_muxsel4,
	datac => ww_result_node3,
	datad => ww_result_node2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_i1);

\i~828_I\ : apex20ke_lcell 
-- Equation(s):
-- i2 = result_node & (result_node1 # muxsel4) # !result_node & result_node1 & !muxsel4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ACAC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_result_node4,
	datab => ww_result_node5,
	datac => ww_muxsel4,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_i2);

\i~830_I\ : apex20ke_lcell 
-- Equation(s):
-- i3 = muxsel4 & result_node # !muxsel4 & result_node

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F5A0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_muxsel4,
	datac => ww_result_node6,
	datad => ww_result_node7,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_i3);

\i~831_I\ : apex20ke_lcell 
-- Equation(s):
-- i4 = result_node & (result_node # !muxsel4) # !result_node & muxsel4 & result_node

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_result_node9,
	datac => ww_muxsel4,
	datad => ww_result_node8,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_i4);

\i~832_I\ : apex20ke_lcell 
-- Equation(s):
-- i5 = muxsel4 & result_node # !muxsel4 & result_node

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA50",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_muxsel4,
	datac => ww_result_node11,
	datad => ww_result_node10,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_i5);

\i~833_I\ : apex20ke_lcell 
-- Equation(s):
-- i6 = result_node & (muxsel4 # result_node) # !result_node & !muxsel4 & result_node

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_result_node12,
	datac => ww_muxsel4,
	datad => ww_result_node13,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_i6);

\i~835_I\ : apex20ke_lcell 
-- Equation(s):
-- i7 = result_node & (result_node # !muxsel4) # !result_node & muxsel4 & result_node

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_result_node15,
	datac => ww_muxsel4,
	datad => ww_result_node14,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_i7);

\last_byte~I\ : apex20ke_lcell 
-- Equation(s):
-- last_byte = DFFE(!sreg2 & (sreg3 # last_byte), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sreg1,
	datac => ww_sreg,
	datad => last_byte,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => last_byte);

\i91~90_I\ : apex20ke_lcell 
-- Equation(s):
-- \i91~90\ = \state~21\ & !last_byte & (!txshld # !data_val)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0070",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_data_val,
	datab => ww_txshld,
	datac => \state~21\,
	datad => last_byte,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i91~90\);

\state~20_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~20\ = DFFE(!sreg2, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F0F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_sreg,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~20\);

\loopcnt[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \loopcnt[4]\ = DFFE((\i~42\ & \~GND\) # (!\i~42\ & \loopcnt[4]\ $ !\loopcnt[3]~COUT\) & !sreg2, GLOBAL(outclock0), , , !RST)
-- \loopcnt[4]~COUT\ = CARRY(\loopcnt[4]\ & !\loopcnt[3]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \loopcnt[4]\,
	datac => ww_GND_port,
	cin => \loopcnt[3]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => ww_sreg,
	sload => \i~42\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \loopcnt[4]\,
	cout => \loopcnt[4]~COUT\);

\loopcnt[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \loopcnt[5]\ = DFFE((\i~42\ & \~GND\) # (!\i~42\ & \loopcnt[5]\ $ \loopcnt[4]~COUT\) & !sreg2, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \loopcnt[5]\,
	datac => ww_GND_port,
	cin => \loopcnt[4]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => ww_sreg,
	sload => \i~42\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \loopcnt[5]\);

\i~829_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~829\ = \loopcnt[1]\ & \loopcnt[2]\ & !\loopcnt[5]\ & \loopcnt[0]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0800",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \loopcnt[1]\,
	datab => \loopcnt[2]\,
	datac => \loopcnt[5]\,
	datad => \loopcnt[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~829\);

\i~1_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~1\ = \loopcnt[4]\ # \loopcnt[3]\ # !\i~829\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FCFF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \loopcnt[4]\,
	datac => \loopcnt[3]\,
	datad => \i~829\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~1\);

\i92~96_I\ : apex20ke_lcell 
-- Equation(s):
-- \i92~96\ = data_val & txshld & \state~21\ & !last_byte

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0080",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_data_val,
	datab => ww_txshld,
	datac => \state~21\,
	datad => last_byte,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i92~96\);

\state~22_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~22\ = DFFE(!sreg2 & (\i92~96\ # \state~22\ & \i~1\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5540",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg,
	datab => \state~22\,
	datac => \i~1\,
	datad => \i92~96\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~22\);

\i~42_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~42\ = !\state~22\ & !\state~23\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "000F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \state~22\,
	datad => \state~23\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~42\);

\loopcnt[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \loopcnt[0]\ = DFFE((\i~42\ & \~GND\) # (!\i~42\ & !\loopcnt[0]\) & !sreg2, GLOBAL(outclock0), , , !RST)
-- \loopcnt[0]~COUT\ = CARRY(\loopcnt[0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	packed_mode => "false",
	lut_mask => "55AA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \loopcnt[0]\,
	datac => ww_GND_port,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => ww_sreg,
	sload => \i~42\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \loopcnt[0]\,
	cout => \loopcnt[0]~COUT\);

\loopcnt[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \loopcnt[1]\ = DFFE((\i~42\ & \~GND\) # (!\i~42\ & \loopcnt[1]\ $ \loopcnt[0]~COUT\) & !sreg2, GLOBAL(outclock0), , , !RST)
-- \loopcnt[1]~COUT\ = CARRY(!\loopcnt[0]~COUT\ # !\loopcnt[1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \loopcnt[1]\,
	datac => ww_GND_port,
	cin => \loopcnt[0]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => ww_sreg,
	sload => \i~42\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \loopcnt[1]\,
	cout => \loopcnt[1]~COUT\);

\loopcnt[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \loopcnt[2]\ = DFFE((\i~42\ & \~GND\) # (!\i~42\ & \loopcnt[2]\ $ !\loopcnt[1]~COUT\) & !sreg2, GLOBAL(outclock0), , , !RST)
-- \loopcnt[2]~COUT\ = CARRY(\loopcnt[2]\ & !\loopcnt[1]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \loopcnt[2]\,
	datac => ww_GND_port,
	cin => \loopcnt[1]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => ww_sreg,
	sload => \i~42\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \loopcnt[2]\,
	cout => \loopcnt[2]~COUT\);

\loopcnt[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \loopcnt[3]\ = DFFE((\i~42\ & \~GND\) # (!\i~42\ & \loopcnt[3]\ $ \loopcnt[2]~COUT\) & !sreg2, GLOBAL(outclock0), , , !RST)
-- \loopcnt[3]~COUT\ = CARRY(!\loopcnt[2]~COUT\ # !\loopcnt[3]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \loopcnt[3]\,
	datac => ww_GND_port,
	cin => \loopcnt[2]~COUT\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	sclr => ww_sreg,
	sload => \i~42\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \loopcnt[3]\,
	cout => \loopcnt[3]~COUT\);

\i91~89_I\ : apex20ke_lcell 
-- Equation(s):
-- \i91~89\ = !\loopcnt[4]\ & !\loopcnt[3]\ & \i~829\ & \state~22\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "1000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \loopcnt[4]\,
	datab => \loopcnt[3]\,
	datac => \i~829\,
	datad => \state~22\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i91~89\);

\state~21_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~21\ = DFFE(!sreg2 & (\i91~90\ # \i91~89\ # !\state~20\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5545",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg,
	datab => \i91~90\,
	datac => \state~20\,
	datad => \i91~89\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~21\);

\i93~93_I\ : apex20ke_lcell 
-- Equation(s):
-- \i93~93\ = \state~23\ & (!\i~829\ # !\loopcnt[3]\ # !\loopcnt[4]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "2AAA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~23\,
	datab => \loopcnt[4]\,
	datac => \loopcnt[3]\,
	datad => \i~829\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i93~93\);

\state~23_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~23\ = DFFE(!sreg2 & (\i93~93\ # last_byte & \state~21\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3320",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => last_byte,
	datab => ww_sreg,
	datac => \state~21\,
	datad => \i93~93\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~23\);

\i~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~2\ = !\i~829\ # !\loopcnt[3]\ # !\loopcnt[4]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3FFF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \loopcnt[4]\,
	datac => \loopcnt[3]\,
	datad => \i~829\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~2\);

\state~24_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~24\ = DFFE(!sreg2 & (\state~24\ # \state~23\ & !\i~2\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "2232",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~24\,
	datab => ww_sreg,
	datac => \state~23\,
	datad => \i~2\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~24\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_12 IS
    PORT (
	portadataout_0 : IN std_logic;
	portadataout_8 : IN std_logic;
	portadataout_16 : IN std_logic;
	portadataout_24 : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_12;

ARCHITECTURE structure OF muxlut_12 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_portadataout_0 : std_logic;
SIGNAL ww_portadataout_8 : std_logic;
SIGNAL ww_portadataout_16 : std_logic;
SIGNAL ww_portadataout_24 : std_logic;
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_portadataout_0 <= portadataout_0;
ww_portadataout_8 <= portadataout_8;
ww_portadataout_16 <= portadataout_16;
ww_portadataout_24 <= portadataout_24;
ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~26_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (muxsel0 & portadataout # !muxsel0 & portadataout # !muxsel1) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FB3B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_portadataout_16,
	datab => ww_muxsel1,
	datac => ww_muxsel0,
	datad => ww_portadataout_24,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel1 # muxsel0 & portadataout # !muxsel0 & portadataout

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FECE",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_portadataout_0,
	datab => ww_muxsel1,
	datac => ww_muxsel0,
	datad => ww_portadataout_8,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_13 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	SRG_8 : IN std_logic;
	SRG_0 : IN std_logic;
	SRG_24 : IN std_logic;
	SRG_16 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_13;

ARCHITECTURE structure OF muxlut_13 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_SRG_8 : std_logic;
SIGNAL ww_SRG_0 : std_logic;
SIGNAL ww_SRG_24 : std_logic;
SIGNAL ww_SRG_16 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_SRG_8 <= SRG_8;
ww_SRG_0 <= SRG_0;
ww_SRG_24 <= SRG_24;
ww_SRG_16 <= SRG_16;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~26_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (muxsel0 & SRG_24 # !muxsel0 & SRG_16 # !muxsel1) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BF8F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_SRG_24,
	datab => ww_muxsel0,
	datac => ww_muxsel1,
	datad => ww_SRG_16,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel1 # muxsel0 & SRG_8 # !muxsel0 & SRG_0

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEF4",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_muxsel0,
	datab => ww_SRG_0,
	datac => ww_muxsel1,
	datad => ww_SRG_8,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_14 IS
    PORT (
	sreg : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	cmd_snd0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_14;

ARCHITECTURE structure OF muxlut_14 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sreg : std_logic;
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_cmd_snd0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;

BEGIN

ww_sreg <= sreg;
ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_cmd_snd0 <= cmd_snd0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = muxsel1 & (muxsel0 & cmd_snd0 # !muxsel0 & sreg1)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C808",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg,
	datab => ww_muxsel1,
	datac => ww_muxsel0,
	datad => ww_cmd_snd0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_15 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_0 : IN std_logic;
	dffs_01 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_15;

ARCHITECTURE structure OF muxlut_15 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_dffs_0 : std_logic;
SIGNAL ww_dffs_01 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_dffs_0 <= dffs_0;
ww_dffs_01 <= dffs_01;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~27_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = muxsel0 & dffs_0 # !muxsel0 & dffs_0 # !muxsel1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F7D5",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_muxsel1,
	datab => ww_muxsel0,
	datac => ww_dffs_0,
	datad => ww_dffs_01,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_16 IS
    PORT (
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	result_node : IN std_logic;
	result_node2 : IN std_logic;
	result_node3 : IN std_logic;
	result_node4 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node1 : OUT std_logic
	);
END muxlut_16;

ARCHITECTURE structure OF muxlut_16 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel3 : std_logic;
SIGNAL ww_muxsel2 : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL ww_result_node2 : std_logic;
SIGNAL ww_result_node3 : std_logic;
SIGNAL ww_result_node4 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node1 : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_muxsel3 <= muxsel3;
ww_muxsel2 <= muxsel2;
ww_result_node <= result_node;
ww_result_node2 <= result_node2;
ww_result_node3 <= result_node3;
ww_result_node4 <= result_node4;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node1 <= ww_result_node1;

\result_node~26_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node1 = (muxsel2 & result_node # !muxsel2 & result_node # !muxsel3) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FB73",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_muxsel2,
	datab => ww_muxsel3,
	datac => ww_result_node,
	datad => ww_result_node4,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node1);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel3 # muxsel2 & result_node # !muxsel2 & result_node

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEDC",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_muxsel2,
	datab => ww_muxsel3,
	datac => ww_result_node3,
	datad => ww_result_node2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_11 IS
    PORT (
	portadataout_0 : IN std_logic;
	portadataout_8 : IN std_logic;
	portadataout_16 : IN std_logic;
	portadataout_24 : IN std_logic;
	sreg : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	cmd_snd0 : IN std_logic;
	SRG_8 : IN std_logic;
	SRG_0 : IN std_logic;
	SRG_24 : IN std_logic;
	SRG_16 : IN std_logic;
	dffs_0 : IN std_logic;
	dffs_01 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_11;

ARCHITECTURE structure OF muxlut_11 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_portadataout_0 : std_logic;
SIGNAL ww_portadataout_8 : std_logic;
SIGNAL ww_portadataout_16 : std_logic;
SIGNAL ww_portadataout_24 : std_logic;
SIGNAL ww_sreg : std_logic;
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_muxsel3 : std_logic;
SIGNAL ww_muxsel2 : std_logic;
SIGNAL ww_cmd_snd0 : std_logic;
SIGNAL ww_SRG_8 : std_logic;
SIGNAL ww_SRG_0 : std_logic;
SIGNAL ww_SRG_24 : std_logic;
SIGNAL ww_SRG_16 : std_logic;
SIGNAL ww_dffs_0 : std_logic;
SIGNAL ww_dffs_01 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00016|result_node\ : std_logic;
SIGNAL \$00014|result_node~26\ : std_logic;
SIGNAL \$00012|result_node~26\ : std_logic;
SIGNAL \$00018|result_node~27\ : std_logic;

COMPONENT muxlut_12
    PORT (
	portadataout_0 : IN std_logic;
	portadataout_8 : IN std_logic;
	portadataout_16 : IN std_logic;
	portadataout_24 : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_13
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	SRG_8 : IN std_logic;
	SRG_0 : IN std_logic;
	SRG_24 : IN std_logic;
	SRG_16 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_14
    PORT (
	sreg : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	cmd_snd0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_15
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_0 : IN std_logic;
	dffs_01 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_16
    PORT (
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	result_node : IN std_logic;
	result_node2 : IN std_logic;
	result_node3 : IN std_logic;
	result_node4 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node1 : OUT std_logic);
END COMPONENT;

BEGIN

ww_portadataout_0 <= portadataout_0;
ww_portadataout_8 <= portadataout_8;
ww_portadataout_16 <= portadataout_16;
ww_portadataout_24 <= portadataout_24;
ww_sreg <= sreg;
ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_muxsel3 <= muxsel3;
ww_muxsel2 <= muxsel2;
ww_cmd_snd0 <= cmd_snd0;
ww_SRG_8 <= SRG_8;
ww_SRG_0 <= SRG_0;
ww_SRG_24 <= SRG_24;
ww_SRG_16 <= SRG_16;
ww_dffs_0 <= dffs_0;
ww_dffs_01 <= dffs_01;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;
\$00012\ : muxlut_12
PORT MAP (
	portadataout_0 => ww_portadataout_0,
	portadataout_8 => ww_portadataout_8,
	portadataout_16 => ww_portadataout_16,
	portadataout_24 => ww_portadataout_24,
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => \$00012|result_node~26\);
\$00014\ : muxlut_13
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	SRG_8 => ww_SRG_8,
	SRG_0 => ww_SRG_0,
	SRG_24 => ww_SRG_24,
	SRG_16 => ww_SRG_16,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => \$00014|result_node~26\);
\$00016\ : muxlut_14
PORT MAP (
	sreg => ww_sreg,
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	cmd_snd0 => ww_cmd_snd0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => \$00016|result_node\);
\$00018\ : muxlut_15
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	dffs_0 => ww_dffs_0,
	dffs_01 => ww_dffs_01,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => \$00018|result_node~27\);
\$00020\ : muxlut_16
PORT MAP (
	muxsel3 => ww_muxsel3,
	muxsel2 => ww_muxsel2,
	result_node => \$00016|result_node\,
	result_node2 => \$00014|result_node~26\,
	result_node3 => \$00012|result_node~26\,
	result_node4 => \$00018|result_node~27\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node1 => ww_result_node);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_18 IS
    PORT (
	muxsel1 : IN std_logic;
	q_8 : IN std_logic;
	q_0 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_18;

ARCHITECTURE structure OF muxlut_18 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_q_8 : std_logic;
SIGNAL ww_q_0 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_dffs_0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_muxsel1 <= muxsel1;
ww_q_8 <= q_8;
ww_q_0 <= q_0;
ww_muxsel0 <= muxsel0;
ww_dffs_0 <= dffs_0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~16_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (!muxsel0 & dffs_0 # !muxsel1) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3F33",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_muxsel1,
	datac => ww_muxsel0,
	datad => ww_dffs_0,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel1 # muxsel0 & q # !muxsel0 & q

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EFEC",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_8,
	datab => ww_muxsel1,
	datac => ww_muxsel0,
	datad => ww_q_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_17 IS
    PORT (
	muxsel1 : IN std_logic;
	q_8 : IN std_logic;
	q_0 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_17;

ARCHITECTURE structure OF muxlut_17 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_q_8 : std_logic;
SIGNAL ww_q_0 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_dffs_0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;

COMPONENT muxlut_18
    PORT (
	muxsel1 : IN std_logic;
	q_8 : IN std_logic;
	q_0 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

BEGIN

ww_muxsel1 <= muxsel1;
ww_q_8 <= q_8;
ww_q_0 <= q_0;
ww_muxsel0 <= muxsel0;
ww_dffs_0 <= dffs_0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;
\$00012\ : muxlut_18
PORT MAP (
	muxsel1 => ww_muxsel1,
	q_8 => ww_q_8,
	q_0 => ww_q_0,
	muxsel0 => ww_muxsel0,
	dffs_0 => ww_dffs_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_10 IS
    PORT (
	portadataout_0 : IN std_logic;
	portadataout_8 : IN std_logic;
	portadataout_16 : IN std_logic;
	portadataout_24 : IN std_logic;
	sreg : IN std_logic;
	muxsel1 : IN std_logic;
	q_8 : IN std_logic;
	q_0 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	cmd_snd0 : IN std_logic;
	SRG_8 : IN std_logic;
	SRG_0 : IN std_logic;
	SRG_24 : IN std_logic;
	SRG_16 : IN std_logic;
	dffs_01 : IN std_logic;
	dffs_02 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic;
	result_node1 : OUT std_logic
	);
END muxlut_10;

ARCHITECTURE structure OF muxlut_10 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_portadataout_0 : std_logic;
SIGNAL ww_portadataout_8 : std_logic;
SIGNAL ww_portadataout_16 : std_logic;
SIGNAL ww_portadataout_24 : std_logic;
SIGNAL ww_sreg : std_logic;
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_q_8 : std_logic;
SIGNAL ww_q_0 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_dffs_0 : std_logic;
SIGNAL ww_muxsel3 : std_logic;
SIGNAL ww_muxsel2 : std_logic;
SIGNAL ww_cmd_snd0 : std_logic;
SIGNAL ww_SRG_8 : std_logic;
SIGNAL ww_SRG_0 : std_logic;
SIGNAL ww_SRG_24 : std_logic;
SIGNAL ww_SRG_16 : std_logic;
SIGNAL ww_dffs_01 : std_logic;
SIGNAL ww_dffs_02 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL ww_result_node1 : std_logic;

COMPONENT muxlut_11
    PORT (
	portadataout_0 : IN std_logic;
	portadataout_8 : IN std_logic;
	portadataout_16 : IN std_logic;
	portadataout_24 : IN std_logic;
	sreg : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	cmd_snd0 : IN std_logic;
	SRG_8 : IN std_logic;
	SRG_0 : IN std_logic;
	SRG_24 : IN std_logic;
	SRG_16 : IN std_logic;
	dffs_0 : IN std_logic;
	dffs_01 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_17
    PORT (
	muxsel1 : IN std_logic;
	q_8 : IN std_logic;
	q_0 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

BEGIN

ww_portadataout_0 <= portadataout_0;
ww_portadataout_8 <= portadataout_8;
ww_portadataout_16 <= portadataout_16;
ww_portadataout_24 <= portadataout_24;
ww_sreg <= sreg;
ww_muxsel1 <= muxsel1;
ww_q_8 <= q_8;
ww_q_0 <= q_0;
ww_muxsel0 <= muxsel0;
ww_dffs_0 <= dffs_0;
ww_muxsel3 <= muxsel3;
ww_muxsel2 <= muxsel2;
ww_cmd_snd0 <= cmd_snd0;
ww_SRG_8 <= SRG_8;
ww_SRG_0 <= SRG_0;
ww_SRG_24 <= SRG_24;
ww_SRG_16 <= SRG_16;
ww_dffs_01 <= dffs_01;
ww_dffs_02 <= dffs_02;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;
result_node1 <= ww_result_node1;
\$00012\ : muxlut_11
PORT MAP (
	portadataout_0 => ww_portadataout_0,
	portadataout_8 => ww_portadataout_8,
	portadataout_16 => ww_portadataout_16,
	portadataout_24 => ww_portadataout_24,
	sreg => ww_sreg,
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	muxsel3 => ww_muxsel3,
	muxsel2 => ww_muxsel2,
	cmd_snd0 => ww_cmd_snd0,
	SRG_8 => ww_SRG_8,
	SRG_0 => ww_SRG_0,
	SRG_24 => ww_SRG_24,
	SRG_16 => ww_SRG_16,
	dffs_0 => ww_dffs_01,
	dffs_01 => ww_dffs_02,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node1);
\$00014\ : muxlut_17
PORT MAP (
	muxsel1 => ww_muxsel1,
	q_8 => ww_q_8,
	q_0 => ww_q_0,
	muxsel0 => ww_muxsel0,
	dffs_0 => ww_dffs_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_22 IS
    PORT (
	portadataout_1 : IN std_logic;
	portadataout_9 : IN std_logic;
	portadataout_17 : IN std_logic;
	portadataout_25 : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_22;

ARCHITECTURE structure OF muxlut_22 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_portadataout_1 : std_logic;
SIGNAL ww_portadataout_9 : std_logic;
SIGNAL ww_portadataout_17 : std_logic;
SIGNAL ww_portadataout_25 : std_logic;
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_portadataout_1 <= portadataout_1;
ww_portadataout_9 <= portadataout_9;
ww_portadataout_17 <= portadataout_17;
ww_portadataout_25 <= portadataout_25;
ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~26_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (muxsel0 & portadataout # !muxsel0 & portadataout # !muxsel1) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BFB3",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_portadataout_25,
	datab => ww_muxsel1,
	datac => ww_muxsel0,
	datad => ww_portadataout_17,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel1 # muxsel0 & portadataout # !muxsel0 & portadataout

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFE4",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_muxsel0,
	datab => ww_portadataout_1,
	datac => ww_portadataout_9,
	datad => ww_muxsel1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_23 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	SRG_9 : IN std_logic;
	SRG_1 : IN std_logic;
	SRG_25 : IN std_logic;
	SRG_17 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_23;

ARCHITECTURE structure OF muxlut_23 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_SRG_9 : std_logic;
SIGNAL ww_SRG_1 : std_logic;
SIGNAL ww_SRG_25 : std_logic;
SIGNAL ww_SRG_17 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_SRG_9 <= SRG_9;
ww_SRG_1 <= SRG_1;
ww_SRG_25 <= SRG_25;
ww_SRG_17 <= SRG_17;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~26_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (muxsel0 & SRG_25 # !muxsel0 & SRG_17 # !muxsel1) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BF8F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_SRG_25,
	datab => ww_muxsel0,
	datac => ww_muxsel1,
	datad => ww_SRG_17,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel1 # muxsel0 & SRG_9 # !muxsel0 & SRG_1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEF4",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_muxsel0,
	datab => ww_SRG_1,
	datac => ww_muxsel1,
	datad => ww_SRG_9,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_24 IS
    PORT (
	sreg : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	cmd_snd1 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_24;

ARCHITECTURE structure OF muxlut_24 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sreg : std_logic;
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_cmd_snd1 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;

BEGIN

ww_sreg <= sreg;
ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_cmd_snd1 <= cmd_snd1;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = muxsel1 & (muxsel0 & cmd_snd1 # !muxsel0 & sreg2)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E200",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg,
	datab => ww_muxsel0,
	datac => ww_cmd_snd1,
	datad => ww_muxsel1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_25 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_1 : IN std_logic;
	dffs_11 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_25;

ARCHITECTURE structure OF muxlut_25 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_dffs_1 : std_logic;
SIGNAL ww_dffs_11 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_dffs_1 <= dffs_1;
ww_dffs_11 <= dffs_11;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~28_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (muxsel0 & dffs_1 # !muxsel0 & dffs_1 # !muxsel1) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFAF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_dffs_11,
	datab => ww_dffs_1,
	datac => ww_muxsel1,
	datad => ww_muxsel0,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel1 # !muxsel0

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3F3",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	datab => ww_muxsel0,
	datac => ww_muxsel1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_26 IS
    PORT (
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	result_node : IN std_logic;
	result_node2 : IN std_logic;
	result_node3 : IN std_logic;
	result_node4 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node1 : OUT std_logic
	);
END muxlut_26;

ARCHITECTURE structure OF muxlut_26 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel3 : std_logic;
SIGNAL ww_muxsel2 : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL ww_result_node2 : std_logic;
SIGNAL ww_result_node3 : std_logic;
SIGNAL ww_result_node4 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node1 : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_muxsel3 <= muxsel3;
ww_muxsel2 <= muxsel2;
ww_result_node <= result_node;
ww_result_node2 <= result_node2;
ww_result_node3 <= result_node3;
ww_result_node4 <= result_node4;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node1 <= ww_result_node1;

\result_node~28_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node1 = (muxsel2 & result_node # !muxsel2 & result_node # !muxsel3) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FB73",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_muxsel2,
	datab => ww_muxsel3,
	datac => ww_result_node,
	datad => ww_result_node4,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node1);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel3 # muxsel2 & result_node # !muxsel2 & result_node

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EFEC",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_result_node2,
	datab => ww_muxsel3,
	datac => ww_muxsel2,
	datad => ww_result_node3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_21 IS
    PORT (
	portadataout_1 : IN std_logic;
	portadataout_9 : IN std_logic;
	portadataout_17 : IN std_logic;
	portadataout_25 : IN std_logic;
	sreg : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	cmd_snd1 : IN std_logic;
	dffs_1 : IN std_logic;
	dffs_11 : IN std_logic;
	SRG_9 : IN std_logic;
	SRG_1 : IN std_logic;
	SRG_25 : IN std_logic;
	SRG_17 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_21;

ARCHITECTURE structure OF muxlut_21 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_portadataout_1 : std_logic;
SIGNAL ww_portadataout_9 : std_logic;
SIGNAL ww_portadataout_17 : std_logic;
SIGNAL ww_portadataout_25 : std_logic;
SIGNAL ww_sreg : std_logic;
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_muxsel3 : std_logic;
SIGNAL ww_muxsel2 : std_logic;
SIGNAL ww_cmd_snd1 : std_logic;
SIGNAL ww_dffs_1 : std_logic;
SIGNAL ww_dffs_11 : std_logic;
SIGNAL ww_SRG_9 : std_logic;
SIGNAL ww_SRG_1 : std_logic;
SIGNAL ww_SRG_25 : std_logic;
SIGNAL ww_SRG_17 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00016|result_node\ : std_logic;
SIGNAL \$00014|result_node~26\ : std_logic;
SIGNAL \$00012|result_node~26\ : std_logic;
SIGNAL \$00018|result_node~28\ : std_logic;

COMPONENT muxlut_22
    PORT (
	portadataout_1 : IN std_logic;
	portadataout_9 : IN std_logic;
	portadataout_17 : IN std_logic;
	portadataout_25 : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_23
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	SRG_9 : IN std_logic;
	SRG_1 : IN std_logic;
	SRG_25 : IN std_logic;
	SRG_17 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_24
    PORT (
	sreg : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	cmd_snd1 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_25
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_1 : IN std_logic;
	dffs_11 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_26
    PORT (
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	result_node : IN std_logic;
	result_node2 : IN std_logic;
	result_node3 : IN std_logic;
	result_node4 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node1 : OUT std_logic);
END COMPONENT;

BEGIN

ww_portadataout_1 <= portadataout_1;
ww_portadataout_9 <= portadataout_9;
ww_portadataout_17 <= portadataout_17;
ww_portadataout_25 <= portadataout_25;
ww_sreg <= sreg;
ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_muxsel3 <= muxsel3;
ww_muxsel2 <= muxsel2;
ww_cmd_snd1 <= cmd_snd1;
ww_dffs_1 <= dffs_1;
ww_dffs_11 <= dffs_11;
ww_SRG_9 <= SRG_9;
ww_SRG_1 <= SRG_1;
ww_SRG_25 <= SRG_25;
ww_SRG_17 <= SRG_17;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;
\$00012\ : muxlut_22
PORT MAP (
	portadataout_1 => ww_portadataout_1,
	portadataout_9 => ww_portadataout_9,
	portadataout_17 => ww_portadataout_17,
	portadataout_25 => ww_portadataout_25,
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => \$00012|result_node~26\);
\$00014\ : muxlut_23
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	SRG_9 => ww_SRG_9,
	SRG_1 => ww_SRG_1,
	SRG_25 => ww_SRG_25,
	SRG_17 => ww_SRG_17,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => \$00014|result_node~26\);
\$00016\ : muxlut_24
PORT MAP (
	sreg => ww_sreg,
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	cmd_snd1 => ww_cmd_snd1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => \$00016|result_node\);
\$00018\ : muxlut_25
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	dffs_1 => ww_dffs_1,
	dffs_11 => ww_dffs_11,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => \$00018|result_node~28\);
\$00020\ : muxlut_26
PORT MAP (
	muxsel3 => ww_muxsel3,
	muxsel2 => ww_muxsel2,
	result_node => \$00016|result_node\,
	result_node2 => \$00014|result_node~26\,
	result_node3 => \$00012|result_node~26\,
	result_node4 => \$00018|result_node~28\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node1 => ww_result_node);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_28 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_1 : IN std_logic;
	q_9 : IN std_logic;
	q_1 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_28;

ARCHITECTURE structure OF muxlut_28 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_dffs_1 : std_logic;
SIGNAL ww_q_9 : std_logic;
SIGNAL ww_q_1 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_dffs_1 <= dffs_1;
ww_q_9 <= q_9;
ww_q_1 <= q_1;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~18_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (!muxsel0 & dffs_1 # !muxsel1) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3F0F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_muxsel0,
	datac => ww_muxsel1,
	datad => ww_dffs_1,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel1 # muxsel0 & q # !muxsel0 & q

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FBF8",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_9,
	datab => ww_muxsel0,
	datac => ww_muxsel1,
	datad => ww_q_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_27 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_1 : IN std_logic;
	q_9 : IN std_logic;
	q_1 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_27;

ARCHITECTURE structure OF muxlut_27 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_dffs_1 : std_logic;
SIGNAL ww_q_9 : std_logic;
SIGNAL ww_q_1 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;

COMPONENT muxlut_28
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_1 : IN std_logic;
	q_9 : IN std_logic;
	q_1 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_dffs_1 <= dffs_1;
ww_q_9 <= q_9;
ww_q_1 <= q_1;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;
\$00012\ : muxlut_28
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	dffs_1 => ww_dffs_1,
	q_9 => ww_q_9,
	q_1 => ww_q_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_20 IS
    PORT (
	portadataout_1 : IN std_logic;
	portadataout_9 : IN std_logic;
	portadataout_17 : IN std_logic;
	portadataout_25 : IN std_logic;
	sreg : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	dffs_1 : IN std_logic;
	q_9 : IN std_logic;
	q_1 : IN std_logic;
	cmd_snd1 : IN std_logic;
	dffs_11 : IN std_logic;
	dffs_12 : IN std_logic;
	SRG_9 : IN std_logic;
	SRG_1 : IN std_logic;
	SRG_25 : IN std_logic;
	SRG_17 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic;
	result_node1 : OUT std_logic
	);
END muxlut_20;

ARCHITECTURE structure OF muxlut_20 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_portadataout_1 : std_logic;
SIGNAL ww_portadataout_9 : std_logic;
SIGNAL ww_portadataout_17 : std_logic;
SIGNAL ww_portadataout_25 : std_logic;
SIGNAL ww_sreg : std_logic;
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_muxsel3 : std_logic;
SIGNAL ww_muxsel2 : std_logic;
SIGNAL ww_dffs_1 : std_logic;
SIGNAL ww_q_9 : std_logic;
SIGNAL ww_q_1 : std_logic;
SIGNAL ww_cmd_snd1 : std_logic;
SIGNAL ww_dffs_11 : std_logic;
SIGNAL ww_dffs_12 : std_logic;
SIGNAL ww_SRG_9 : std_logic;
SIGNAL ww_SRG_1 : std_logic;
SIGNAL ww_SRG_25 : std_logic;
SIGNAL ww_SRG_17 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL ww_result_node1 : std_logic;

COMPONENT muxlut_21
    PORT (
	portadataout_1 : IN std_logic;
	portadataout_9 : IN std_logic;
	portadataout_17 : IN std_logic;
	portadataout_25 : IN std_logic;
	sreg : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	cmd_snd1 : IN std_logic;
	dffs_1 : IN std_logic;
	dffs_11 : IN std_logic;
	SRG_9 : IN std_logic;
	SRG_1 : IN std_logic;
	SRG_25 : IN std_logic;
	SRG_17 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_27
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_1 : IN std_logic;
	q_9 : IN std_logic;
	q_1 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

BEGIN

ww_portadataout_1 <= portadataout_1;
ww_portadataout_9 <= portadataout_9;
ww_portadataout_17 <= portadataout_17;
ww_portadataout_25 <= portadataout_25;
ww_sreg <= sreg;
ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_muxsel3 <= muxsel3;
ww_muxsel2 <= muxsel2;
ww_dffs_1 <= dffs_1;
ww_q_9 <= q_9;
ww_q_1 <= q_1;
ww_cmd_snd1 <= cmd_snd1;
ww_dffs_11 <= dffs_11;
ww_dffs_12 <= dffs_12;
ww_SRG_9 <= SRG_9;
ww_SRG_1 <= SRG_1;
ww_SRG_25 <= SRG_25;
ww_SRG_17 <= SRG_17;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;
result_node1 <= ww_result_node1;
\$00012\ : muxlut_21
PORT MAP (
	portadataout_1 => ww_portadataout_1,
	portadataout_9 => ww_portadataout_9,
	portadataout_17 => ww_portadataout_17,
	portadataout_25 => ww_portadataout_25,
	sreg => ww_sreg,
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	muxsel3 => ww_muxsel3,
	muxsel2 => ww_muxsel2,
	cmd_snd1 => ww_cmd_snd1,
	dffs_1 => ww_dffs_11,
	dffs_11 => ww_dffs_12,
	SRG_9 => ww_SRG_9,
	SRG_1 => ww_SRG_1,
	SRG_25 => ww_SRG_25,
	SRG_17 => ww_SRG_17,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node1);
\$00014\ : muxlut_27
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	dffs_1 => ww_dffs_1,
	q_9 => ww_q_9,
	q_1 => ww_q_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_32 IS
    PORT (
	portadataout_2 : IN std_logic;
	portadataout_10 : IN std_logic;
	portadataout_18 : IN std_logic;
	portadataout_26 : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_32;

ARCHITECTURE structure OF muxlut_32 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_portadataout_2 : std_logic;
SIGNAL ww_portadataout_10 : std_logic;
SIGNAL ww_portadataout_18 : std_logic;
SIGNAL ww_portadataout_26 : std_logic;
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_portadataout_2 <= portadataout_2;
ww_portadataout_10 <= portadataout_10;
ww_portadataout_18 <= portadataout_18;
ww_portadataout_26 <= portadataout_26;
ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~26_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (muxsel0 & portadataout # !muxsel0 & portadataout # !muxsel1) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BFB3",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_portadataout_26,
	datab => ww_muxsel1,
	datac => ww_muxsel0,
	datad => ww_portadataout_18,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel1 # muxsel0 & portadataout # !muxsel0 & portadataout

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EFEC",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_portadataout_10,
	datab => ww_muxsel1,
	datac => ww_muxsel0,
	datad => ww_portadataout_2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_33 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	SRG_10 : IN std_logic;
	SRG_2 : IN std_logic;
	SRG_26 : IN std_logic;
	SRG_18 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_33;

ARCHITECTURE structure OF muxlut_33 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_SRG_10 : std_logic;
SIGNAL ww_SRG_2 : std_logic;
SIGNAL ww_SRG_26 : std_logic;
SIGNAL ww_SRG_18 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_SRG_10 <= SRG_10;
ww_SRG_2 <= SRG_2;
ww_SRG_26 <= SRG_26;
ww_SRG_18 <= SRG_18;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~26_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (muxsel0 & SRG_26 # !muxsel0 & SRG_18 # !muxsel1) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FB73",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_muxsel0,
	datab => ww_muxsel1,
	datac => ww_SRG_18,
	datad => ww_SRG_26,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel1 # muxsel0 & SRG_10 # !muxsel0 & SRG_2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FDEC",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_muxsel0,
	datab => ww_muxsel1,
	datac => ww_SRG_10,
	datad => ww_SRG_2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_34 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	cmd_snd1 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_34;

ARCHITECTURE structure OF muxlut_34 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_cmd_snd1 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_cmd_snd1 <= cmd_snd1;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~12_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (muxsel0 & cmd_snd1 # !muxsel1) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C0FF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_muxsel0,
	datac => ww_cmd_snd1,
	datad => ww_muxsel1,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	datad => ww_muxsel1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_35 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_2 : IN std_logic;
	dffs_21 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_35;

ARCHITECTURE structure OF muxlut_35 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_dffs_2 : std_logic;
SIGNAL ww_dffs_21 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_dffs_2 <= dffs_2;
ww_dffs_21 <= dffs_21;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = muxsel1 & (muxsel0 & dffs_2 # !muxsel0 & dffs_2)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "A0C0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_dffs_2,
	datab => ww_dffs_21,
	datac => ww_muxsel1,
	datad => ww_muxsel0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_36 IS
    PORT (
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	result_node : IN std_logic;
	result_node2 : IN std_logic;
	result_node3 : IN std_logic;
	result_node4 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node1 : OUT std_logic
	);
END muxlut_36;

ARCHITECTURE structure OF muxlut_36 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel3 : std_logic;
SIGNAL ww_muxsel2 : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL ww_result_node2 : std_logic;
SIGNAL ww_result_node3 : std_logic;
SIGNAL ww_result_node4 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node1 : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_muxsel3 <= muxsel3;
ww_muxsel2 <= muxsel2;
ww_result_node <= result_node;
ww_result_node2 <= result_node2;
ww_result_node3 <= result_node3;
ww_result_node4 <= result_node4;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node1 <= ww_result_node1;

\result_node~28_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node1 = (muxsel2 & result_node # !muxsel2 & result_node # !muxsel3) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BF8F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_result_node,
	datab => ww_muxsel2,
	datac => ww_muxsel3,
	datad => ww_result_node4,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node1);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel3 # muxsel2 & result_node # !muxsel2 & result_node

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FBF8",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_result_node2,
	datab => ww_muxsel2,
	datac => ww_muxsel3,
	datad => ww_result_node3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_31 IS
    PORT (
	portadataout_2 : IN std_logic;
	portadataout_10 : IN std_logic;
	portadataout_18 : IN std_logic;
	portadataout_26 : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	cmd_snd1 : IN std_logic;
	dffs_2 : IN std_logic;
	dffs_21 : IN std_logic;
	SRG_10 : IN std_logic;
	SRG_2 : IN std_logic;
	SRG_26 : IN std_logic;
	SRG_18 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_31;

ARCHITECTURE structure OF muxlut_31 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_portadataout_2 : std_logic;
SIGNAL ww_portadataout_10 : std_logic;
SIGNAL ww_portadataout_18 : std_logic;
SIGNAL ww_portadataout_26 : std_logic;
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_muxsel3 : std_logic;
SIGNAL ww_muxsel2 : std_logic;
SIGNAL ww_cmd_snd1 : std_logic;
SIGNAL ww_dffs_2 : std_logic;
SIGNAL ww_dffs_21 : std_logic;
SIGNAL ww_SRG_10 : std_logic;
SIGNAL ww_SRG_2 : std_logic;
SIGNAL ww_SRG_26 : std_logic;
SIGNAL ww_SRG_18 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00018|result_node\ : std_logic;
SIGNAL \$00014|result_node~26\ : std_logic;
SIGNAL \$00012|result_node~26\ : std_logic;
SIGNAL \$00016|result_node~12\ : std_logic;

COMPONENT muxlut_32
    PORT (
	portadataout_2 : IN std_logic;
	portadataout_10 : IN std_logic;
	portadataout_18 : IN std_logic;
	portadataout_26 : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_33
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	SRG_10 : IN std_logic;
	SRG_2 : IN std_logic;
	SRG_26 : IN std_logic;
	SRG_18 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_34
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	cmd_snd1 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_35
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_2 : IN std_logic;
	dffs_21 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_36
    PORT (
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	result_node : IN std_logic;
	result_node2 : IN std_logic;
	result_node3 : IN std_logic;
	result_node4 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node1 : OUT std_logic);
END COMPONENT;

BEGIN

ww_portadataout_2 <= portadataout_2;
ww_portadataout_10 <= portadataout_10;
ww_portadataout_18 <= portadataout_18;
ww_portadataout_26 <= portadataout_26;
ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_muxsel3 <= muxsel3;
ww_muxsel2 <= muxsel2;
ww_cmd_snd1 <= cmd_snd1;
ww_dffs_2 <= dffs_2;
ww_dffs_21 <= dffs_21;
ww_SRG_10 <= SRG_10;
ww_SRG_2 <= SRG_2;
ww_SRG_26 <= SRG_26;
ww_SRG_18 <= SRG_18;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;
\$00012\ : muxlut_32
PORT MAP (
	portadataout_2 => ww_portadataout_2,
	portadataout_10 => ww_portadataout_10,
	portadataout_18 => ww_portadataout_18,
	portadataout_26 => ww_portadataout_26,
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => \$00012|result_node~26\);
\$00014\ : muxlut_33
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	SRG_10 => ww_SRG_10,
	SRG_2 => ww_SRG_2,
	SRG_26 => ww_SRG_26,
	SRG_18 => ww_SRG_18,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => \$00014|result_node~26\);
\$00016\ : muxlut_34
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	cmd_snd1 => ww_cmd_snd1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => \$00016|result_node~12\);
\$00018\ : muxlut_35
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	dffs_2 => ww_dffs_2,
	dffs_21 => ww_dffs_21,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => \$00018|result_node\);
\$00020\ : muxlut_36
PORT MAP (
	muxsel3 => ww_muxsel3,
	muxsel2 => ww_muxsel2,
	result_node => \$00018|result_node\,
	result_node2 => \$00014|result_node~26\,
	result_node3 => \$00012|result_node~26\,
	result_node4 => \$00016|result_node~12\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node1 => ww_result_node);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_38 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_2 : IN std_logic;
	q_2 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_38;

ARCHITECTURE structure OF muxlut_38 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_dffs_2 : std_logic;
SIGNAL ww_q_2 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_dffs_2 <= dffs_2;
ww_q_2 <= q_2;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~18_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (!muxsel0 & dffs_2 # !muxsel1) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3F0F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_muxsel0,
	datac => ww_muxsel1,
	datad => ww_dffs_2,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel1 # !muxsel0 & q

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3F0",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	datab => ww_muxsel0,
	datac => ww_muxsel1,
	datad => ww_q_2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_37 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_2 : IN std_logic;
	q_2 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_37;

ARCHITECTURE structure OF muxlut_37 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_dffs_2 : std_logic;
SIGNAL ww_q_2 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;

COMPONENT muxlut_38
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_2 : IN std_logic;
	q_2 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_dffs_2 <= dffs_2;
ww_q_2 <= q_2;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;
\$00012\ : muxlut_38
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	dffs_2 => ww_dffs_2,
	q_2 => ww_q_2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_30 IS
    PORT (
	portadataout_2 : IN std_logic;
	portadataout_10 : IN std_logic;
	portadataout_18 : IN std_logic;
	portadataout_26 : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	cmd_snd1 : IN std_logic;
	dffs_2 : IN std_logic;
	q_2 : IN std_logic;
	dffs_21 : IN std_logic;
	dffs_22 : IN std_logic;
	SRG_10 : IN std_logic;
	SRG_2 : IN std_logic;
	SRG_26 : IN std_logic;
	SRG_18 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic;
	result_node1 : OUT std_logic
	);
END muxlut_30;

ARCHITECTURE structure OF muxlut_30 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_portadataout_2 : std_logic;
SIGNAL ww_portadataout_10 : std_logic;
SIGNAL ww_portadataout_18 : std_logic;
SIGNAL ww_portadataout_26 : std_logic;
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_muxsel3 : std_logic;
SIGNAL ww_muxsel2 : std_logic;
SIGNAL ww_cmd_snd1 : std_logic;
SIGNAL ww_dffs_2 : std_logic;
SIGNAL ww_q_2 : std_logic;
SIGNAL ww_dffs_21 : std_logic;
SIGNAL ww_dffs_22 : std_logic;
SIGNAL ww_SRG_10 : std_logic;
SIGNAL ww_SRG_2 : std_logic;
SIGNAL ww_SRG_26 : std_logic;
SIGNAL ww_SRG_18 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL ww_result_node1 : std_logic;

COMPONENT muxlut_31
    PORT (
	portadataout_2 : IN std_logic;
	portadataout_10 : IN std_logic;
	portadataout_18 : IN std_logic;
	portadataout_26 : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	cmd_snd1 : IN std_logic;
	dffs_2 : IN std_logic;
	dffs_21 : IN std_logic;
	SRG_10 : IN std_logic;
	SRG_2 : IN std_logic;
	SRG_26 : IN std_logic;
	SRG_18 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_37
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_2 : IN std_logic;
	q_2 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

BEGIN

ww_portadataout_2 <= portadataout_2;
ww_portadataout_10 <= portadataout_10;
ww_portadataout_18 <= portadataout_18;
ww_portadataout_26 <= portadataout_26;
ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_muxsel3 <= muxsel3;
ww_muxsel2 <= muxsel2;
ww_cmd_snd1 <= cmd_snd1;
ww_dffs_2 <= dffs_2;
ww_q_2 <= q_2;
ww_dffs_21 <= dffs_21;
ww_dffs_22 <= dffs_22;
ww_SRG_10 <= SRG_10;
ww_SRG_2 <= SRG_2;
ww_SRG_26 <= SRG_26;
ww_SRG_18 <= SRG_18;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;
result_node1 <= ww_result_node1;
\$00012\ : muxlut_31
PORT MAP (
	portadataout_2 => ww_portadataout_2,
	portadataout_10 => ww_portadataout_10,
	portadataout_18 => ww_portadataout_18,
	portadataout_26 => ww_portadataout_26,
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	muxsel3 => ww_muxsel3,
	muxsel2 => ww_muxsel2,
	cmd_snd1 => ww_cmd_snd1,
	dffs_2 => ww_dffs_21,
	dffs_21 => ww_dffs_22,
	SRG_10 => ww_SRG_10,
	SRG_2 => ww_SRG_2,
	SRG_26 => ww_SRG_26,
	SRG_18 => ww_SRG_18,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node1);
\$00014\ : muxlut_37
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	dffs_2 => ww_dffs_2,
	q_2 => ww_q_2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_42 IS
    PORT (
	portadataout_3 : IN std_logic;
	portadataout_11 : IN std_logic;
	portadataout_19 : IN std_logic;
	portadataout_27 : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_42;

ARCHITECTURE structure OF muxlut_42 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_portadataout_3 : std_logic;
SIGNAL ww_portadataout_11 : std_logic;
SIGNAL ww_portadataout_19 : std_logic;
SIGNAL ww_portadataout_27 : std_logic;
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_portadataout_3 <= portadataout_3;
ww_portadataout_11 <= portadataout_11;
ww_portadataout_19 <= portadataout_19;
ww_portadataout_27 <= portadataout_27;
ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~26_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (muxsel0 & portadataout # !muxsel0 & portadataout # !muxsel1) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EF2F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_portadataout_19,
	datab => ww_muxsel0,
	datac => ww_muxsel1,
	datad => ww_portadataout_27,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel1 # muxsel0 & portadataout # !muxsel0 & portadataout

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEBA",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_muxsel1,
	datab => ww_muxsel0,
	datac => ww_portadataout_3,
	datad => ww_portadataout_11,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_43 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	SRG_11 : IN std_logic;
	SRG_3 : IN std_logic;
	SRG_27 : IN std_logic;
	SRG_19 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_43;

ARCHITECTURE structure OF muxlut_43 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_SRG_11 : std_logic;
SIGNAL ww_SRG_3 : std_logic;
SIGNAL ww_SRG_27 : std_logic;
SIGNAL ww_SRG_19 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_SRG_11 <= SRG_11;
ww_SRG_3 <= SRG_3;
ww_SRG_27 <= SRG_27;
ww_SRG_19 <= SRG_19;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~26_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (muxsel0 & SRG_27 # !muxsel0 & SRG_19 # !muxsel1) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EF4F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_muxsel0,
	datab => ww_SRG_19,
	datac => ww_muxsel1,
	datad => ww_SRG_27,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel1 # muxsel0 & SRG_11 # !muxsel0 & SRG_3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FBF8",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_SRG_11,
	datab => ww_muxsel0,
	datac => ww_muxsel1,
	datad => ww_SRG_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_44 IS
    PORT (
	sreg : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	cmd_snd3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_44;

ARCHITECTURE structure OF muxlut_44 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sreg : std_logic;
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_cmd_snd3 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_sreg <= sreg;
ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_cmd_snd3 <= cmd_snd3;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~12_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (cmd_snd3 & muxsel0 # !muxsel1) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CF0F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_cmd_snd3,
	datac => ww_muxsel1,
	datad => ww_muxsel0,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel1 # sreg2 & !muxsel0

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0FA",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg,
	datac => ww_muxsel1,
	datad => ww_muxsel0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_45 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_3 : IN std_logic;
	dffs_31 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_45;

ARCHITECTURE structure OF muxlut_45 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_dffs_3 : std_logic;
SIGNAL ww_dffs_31 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \_~3_1\ : std_logic;
SIGNAL \_~3\ : std_logic;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_dffs_3 <= dffs_3;
ww_dffs_31 <= dffs_31;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~28_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (muxsel0 & dffs_3 # !muxsel0 & dffs_3 # !muxsel1) & CASCADE(\_~3\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFAF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_dffs_31,
	datab => ww_dffs_3,
	datac => ww_muxsel1,
	datad => ww_muxsel0,
	cascin => \_~3\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\_~3_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~3\ = muxsel0 # muxsel1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FCFC",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	datab => ww_muxsel0,
	datac => ww_muxsel1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \_~3\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_46 IS
    PORT (
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	result_node1 : IN std_logic;
	result_node2 : IN std_logic;
	result_node3 : IN std_logic;
	result_node4 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_46;

ARCHITECTURE structure OF muxlut_46 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel3 : std_logic;
SIGNAL ww_muxsel2 : std_logic;
SIGNAL ww_result_node1 : std_logic;
SIGNAL ww_result_node2 : std_logic;
SIGNAL ww_result_node3 : std_logic;
SIGNAL ww_result_node4 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_muxsel3 <= muxsel3;
ww_muxsel2 <= muxsel2;
ww_result_node1 <= result_node1;
ww_result_node2 <= result_node2;
ww_result_node3 <= result_node3;
ww_result_node4 <= result_node4;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~28_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (muxsel2 & result_node # !muxsel2 & result_node # !muxsel3) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BFB3",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_result_node3,
	datab => ww_muxsel3,
	datac => ww_muxsel2,
	datad => ww_result_node4,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel3 # muxsel2 & result_node # !muxsel2 & result_node

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EFEA",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_muxsel3,
	datab => ww_result_node1,
	datac => ww_muxsel2,
	datad => ww_result_node2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_41 IS
    PORT (
	portadataout_3 : IN std_logic;
	portadataout_11 : IN std_logic;
	portadataout_19 : IN std_logic;
	portadataout_27 : IN std_logic;
	sreg : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	dffs_3 : IN std_logic;
	dffs_31 : IN std_logic;
	SRG_11 : IN std_logic;
	SRG_3 : IN std_logic;
	SRG_27 : IN std_logic;
	SRG_19 : IN std_logic;
	cmd_snd3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_41;

ARCHITECTURE structure OF muxlut_41 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_portadataout_3 : std_logic;
SIGNAL ww_portadataout_11 : std_logic;
SIGNAL ww_portadataout_19 : std_logic;
SIGNAL ww_portadataout_27 : std_logic;
SIGNAL ww_sreg : std_logic;
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_muxsel3 : std_logic;
SIGNAL ww_muxsel2 : std_logic;
SIGNAL ww_dffs_3 : std_logic;
SIGNAL ww_dffs_31 : std_logic;
SIGNAL ww_SRG_11 : std_logic;
SIGNAL ww_SRG_3 : std_logic;
SIGNAL ww_SRG_27 : std_logic;
SIGNAL ww_SRG_19 : std_logic;
SIGNAL ww_cmd_snd3 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00014|result_node~26\ : std_logic;
SIGNAL \$00012|result_node~26\ : std_logic;
SIGNAL \$00018|result_node~28\ : std_logic;
SIGNAL \$00016|result_node~12\ : std_logic;

COMPONENT muxlut_42
    PORT (
	portadataout_3 : IN std_logic;
	portadataout_11 : IN std_logic;
	portadataout_19 : IN std_logic;
	portadataout_27 : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_43
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	SRG_11 : IN std_logic;
	SRG_3 : IN std_logic;
	SRG_27 : IN std_logic;
	SRG_19 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_44
    PORT (
	sreg : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	cmd_snd3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_45
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_3 : IN std_logic;
	dffs_31 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_46
    PORT (
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	result_node1 : IN std_logic;
	result_node2 : IN std_logic;
	result_node3 : IN std_logic;
	result_node4 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

BEGIN

ww_portadataout_3 <= portadataout_3;
ww_portadataout_11 <= portadataout_11;
ww_portadataout_19 <= portadataout_19;
ww_portadataout_27 <= portadataout_27;
ww_sreg <= sreg;
ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_muxsel3 <= muxsel3;
ww_muxsel2 <= muxsel2;
ww_dffs_3 <= dffs_3;
ww_dffs_31 <= dffs_31;
ww_SRG_11 <= SRG_11;
ww_SRG_3 <= SRG_3;
ww_SRG_27 <= SRG_27;
ww_SRG_19 <= SRG_19;
ww_cmd_snd3 <= cmd_snd3;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;
\$00012\ : muxlut_42
PORT MAP (
	portadataout_3 => ww_portadataout_3,
	portadataout_11 => ww_portadataout_11,
	portadataout_19 => ww_portadataout_19,
	portadataout_27 => ww_portadataout_27,
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => \$00012|result_node~26\);
\$00014\ : muxlut_43
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	SRG_11 => ww_SRG_11,
	SRG_3 => ww_SRG_3,
	SRG_27 => ww_SRG_27,
	SRG_19 => ww_SRG_19,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => \$00014|result_node~26\);
\$00016\ : muxlut_44
PORT MAP (
	sreg => ww_sreg,
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	cmd_snd3 => ww_cmd_snd3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => \$00016|result_node~12\);
\$00018\ : muxlut_45
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	dffs_3 => ww_dffs_3,
	dffs_31 => ww_dffs_31,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => \$00018|result_node~28\);
\$00020\ : muxlut_46
PORT MAP (
	muxsel3 => ww_muxsel3,
	muxsel2 => ww_muxsel2,
	result_node1 => \$00014|result_node~26\,
	result_node2 => \$00012|result_node~26\,
	result_node3 => \$00018|result_node~28\,
	result_node4 => \$00016|result_node~12\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_48 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_3 : IN std_logic;
	q_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_48;

ARCHITECTURE structure OF muxlut_48 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_dffs_3 : std_logic;
SIGNAL ww_q_3 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_dffs_3 <= dffs_3;
ww_q_3 <= q_3;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~18_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (!muxsel0 & dffs_3 # !muxsel1) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3F0F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_muxsel0,
	datac => ww_muxsel1,
	datad => ww_dffs_3,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel1 # !muxsel0 & q

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3F0",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	datab => ww_muxsel0,
	datac => ww_muxsel1,
	datad => ww_q_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_47 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_3 : IN std_logic;
	q_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_47;

ARCHITECTURE structure OF muxlut_47 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_dffs_3 : std_logic;
SIGNAL ww_q_3 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;

COMPONENT muxlut_48
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_3 : IN std_logic;
	q_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_dffs_3 <= dffs_3;
ww_q_3 <= q_3;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;
\$00012\ : muxlut_48
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	dffs_3 => ww_dffs_3,
	q_3 => ww_q_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_40 IS
    PORT (
	portadataout_3 : IN std_logic;
	portadataout_11 : IN std_logic;
	portadataout_19 : IN std_logic;
	portadataout_27 : IN std_logic;
	sreg : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	dffs_3 : IN std_logic;
	dffs_31 : IN std_logic;
	dffs_32 : IN std_logic;
	q_3 : IN std_logic;
	SRG_11 : IN std_logic;
	SRG_3 : IN std_logic;
	SRG_27 : IN std_logic;
	SRG_19 : IN std_logic;
	cmd_snd3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic;
	result_node1 : OUT std_logic
	);
END muxlut_40;

ARCHITECTURE structure OF muxlut_40 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_portadataout_3 : std_logic;
SIGNAL ww_portadataout_11 : std_logic;
SIGNAL ww_portadataout_19 : std_logic;
SIGNAL ww_portadataout_27 : std_logic;
SIGNAL ww_sreg : std_logic;
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_muxsel3 : std_logic;
SIGNAL ww_muxsel2 : std_logic;
SIGNAL ww_dffs_3 : std_logic;
SIGNAL ww_dffs_31 : std_logic;
SIGNAL ww_dffs_32 : std_logic;
SIGNAL ww_q_3 : std_logic;
SIGNAL ww_SRG_11 : std_logic;
SIGNAL ww_SRG_3 : std_logic;
SIGNAL ww_SRG_27 : std_logic;
SIGNAL ww_SRG_19 : std_logic;
SIGNAL ww_cmd_snd3 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL ww_result_node1 : std_logic;

COMPONENT muxlut_41
    PORT (
	portadataout_3 : IN std_logic;
	portadataout_11 : IN std_logic;
	portadataout_19 : IN std_logic;
	portadataout_27 : IN std_logic;
	sreg : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	dffs_3 : IN std_logic;
	dffs_31 : IN std_logic;
	SRG_11 : IN std_logic;
	SRG_3 : IN std_logic;
	SRG_27 : IN std_logic;
	SRG_19 : IN std_logic;
	cmd_snd3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_47
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_3 : IN std_logic;
	q_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

BEGIN

ww_portadataout_3 <= portadataout_3;
ww_portadataout_11 <= portadataout_11;
ww_portadataout_19 <= portadataout_19;
ww_portadataout_27 <= portadataout_27;
ww_sreg <= sreg;
ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_muxsel3 <= muxsel3;
ww_muxsel2 <= muxsel2;
ww_dffs_3 <= dffs_3;
ww_dffs_31 <= dffs_31;
ww_dffs_32 <= dffs_32;
ww_q_3 <= q_3;
ww_SRG_11 <= SRG_11;
ww_SRG_3 <= SRG_3;
ww_SRG_27 <= SRG_27;
ww_SRG_19 <= SRG_19;
ww_cmd_snd3 <= cmd_snd3;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;
result_node1 <= ww_result_node1;
\$00012\ : muxlut_41
PORT MAP (
	portadataout_3 => ww_portadataout_3,
	portadataout_11 => ww_portadataout_11,
	portadataout_19 => ww_portadataout_19,
	portadataout_27 => ww_portadataout_27,
	sreg => ww_sreg,
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	muxsel3 => ww_muxsel3,
	muxsel2 => ww_muxsel2,
	dffs_3 => ww_dffs_31,
	dffs_31 => ww_dffs_32,
	SRG_11 => ww_SRG_11,
	SRG_3 => ww_SRG_3,
	SRG_27 => ww_SRG_27,
	SRG_19 => ww_SRG_19,
	cmd_snd3 => ww_cmd_snd3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node1);
\$00014\ : muxlut_47
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	dffs_3 => ww_dffs_3,
	q_3 => ww_q_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_52 IS
    PORT (
	portadataout_4 : IN std_logic;
	portadataout_12 : IN std_logic;
	portadataout_20 : IN std_logic;
	portadataout_28 : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_52;

ARCHITECTURE structure OF muxlut_52 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_portadataout_4 : std_logic;
SIGNAL ww_portadataout_12 : std_logic;
SIGNAL ww_portadataout_20 : std_logic;
SIGNAL ww_portadataout_28 : std_logic;
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_portadataout_4 <= portadataout_4;
ww_portadataout_12 <= portadataout_12;
ww_portadataout_20 <= portadataout_20;
ww_portadataout_28 <= portadataout_28;
ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~26_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (muxsel0 & portadataout # !muxsel0 & portadataout # !muxsel1) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BFB3",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_portadataout_28,
	datab => ww_muxsel1,
	datac => ww_muxsel0,
	datad => ww_portadataout_20,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel1 # muxsel0 & portadataout # !muxsel0 & portadataout

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FECE",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_portadataout_4,
	datab => ww_muxsel1,
	datac => ww_muxsel0,
	datad => ww_portadataout_12,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_53 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	SRG_4 : IN std_logic;
	SRG_28 : IN std_logic;
	SRG_20 : IN std_logic;
	SRG_12 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_53;

ARCHITECTURE structure OF muxlut_53 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_SRG_4 : std_logic;
SIGNAL ww_SRG_28 : std_logic;
SIGNAL ww_SRG_20 : std_logic;
SIGNAL ww_SRG_12 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_SRG_4 <= SRG_4;
ww_SRG_28 <= SRG_28;
ww_SRG_20 <= SRG_20;
ww_SRG_12 <= SRG_12;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~26_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (muxsel0 & SRG_28 # !muxsel0 & SRG_20 # !muxsel1) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FD5D",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_muxsel1,
	datab => ww_SRG_20,
	datac => ww_muxsel0,
	datad => ww_SRG_28,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel1 # muxsel0 & SRG_12 # !muxsel0 & SRG_4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEAE",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_muxsel1,
	datab => ww_SRG_4,
	datac => ww_muxsel0,
	datad => ww_SRG_12,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_54 IS
    PORT (
	sreg : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	\00012\ : OUT std_logic
	);
END muxlut_54;

ARCHITECTURE structure OF muxlut_54 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sreg : std_logic;
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_00012 : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_sreg <= sreg;
ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
\00012\ <= ww_00012;

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \00012\ = muxsel1 # !muxsel0 & sreg1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3F0",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	datab => ww_muxsel0,
	datac => ww_muxsel1,
	datad => ww_sreg,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => ww_00012);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_55 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_4 : IN std_logic;
	dffs_41 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_55;

ARCHITECTURE structure OF muxlut_55 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_dffs_4 : std_logic;
SIGNAL ww_dffs_41 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \_~3_1\ : std_logic;
SIGNAL \_~3\ : std_logic;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_dffs_4 <= dffs_4;
ww_dffs_41 <= dffs_41;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~28_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (muxsel0 & dffs_4 # !muxsel0 & dffs_4 # !muxsel1) & CASCADE(\_~3\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CAFF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_dffs_41,
	datab => ww_dffs_4,
	datac => ww_muxsel0,
	datad => ww_muxsel1,
	cascin => \_~3\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\_~3_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~3\ = muxsel0 # muxsel1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFF0",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	datac => ww_muxsel0,
	datad => ww_muxsel1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \_~3\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_56 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	result_node1 : IN std_logic;
	result_node2 : IN std_logic;
	\00012\ : IN std_logic;
	result_node3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_56;

ARCHITECTURE structure OF muxlut_56 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel3 : std_logic;
SIGNAL ww_muxsel2 : std_logic;
SIGNAL ww_result_node1 : std_logic;
SIGNAL ww_result_node2 : std_logic;
SIGNAL ww_00012 : std_logic;
SIGNAL ww_result_node3 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \_~35\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel3 <= muxsel3;
ww_muxsel2 <= muxsel2;
ww_result_node1 <= result_node1;
ww_result_node2 <= result_node2;
ww_00012 <= \00012\;
ww_result_node3 <= result_node3;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~24_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (\_~35\ # result_node & muxsel2 # !muxsel3) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF8F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_result_node3,
	datab => ww_muxsel2,
	datac => ww_muxsel3,
	datad => \_~35\,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\_~35_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~35\ = (!muxsel1 & !muxsel2) & CASCADE(\00012\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "000F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_muxsel1,
	datad => ww_muxsel2,
	cascin => ww_00012,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~35\);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel3 # muxsel2 & result_node # !muxsel2 & result_node

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FBF8",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_result_node1,
	datab => ww_muxsel2,
	datac => ww_muxsel3,
	datad => ww_result_node2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_51 IS
    PORT (
	portadataout_4 : IN std_logic;
	portadataout_12 : IN std_logic;
	portadataout_20 : IN std_logic;
	portadataout_28 : IN std_logic;
	sreg : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	dffs_4 : IN std_logic;
	dffs_41 : IN std_logic;
	SRG_4 : IN std_logic;
	SRG_28 : IN std_logic;
	SRG_20 : IN std_logic;
	SRG_12 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_51;

ARCHITECTURE structure OF muxlut_51 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_portadataout_4 : std_logic;
SIGNAL ww_portadataout_12 : std_logic;
SIGNAL ww_portadataout_20 : std_logic;
SIGNAL ww_portadataout_28 : std_logic;
SIGNAL ww_sreg : std_logic;
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_muxsel3 : std_logic;
SIGNAL ww_muxsel2 : std_logic;
SIGNAL ww_dffs_4 : std_logic;
SIGNAL ww_dffs_41 : std_logic;
SIGNAL ww_SRG_4 : std_logic;
SIGNAL ww_SRG_28 : std_logic;
SIGNAL ww_SRG_20 : std_logic;
SIGNAL ww_SRG_12 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00014|result_node~26\ : std_logic;
SIGNAL \$00012|result_node~26\ : std_logic;
SIGNAL \$00016|$00012~0\ : std_logic;
SIGNAL \$00018|result_node~28\ : std_logic;

COMPONENT muxlut_52
    PORT (
	portadataout_4 : IN std_logic;
	portadataout_12 : IN std_logic;
	portadataout_20 : IN std_logic;
	portadataout_28 : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_53
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	SRG_4 : IN std_logic;
	SRG_28 : IN std_logic;
	SRG_20 : IN std_logic;
	SRG_12 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_54
    PORT (
	sreg : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	\00012\ : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_55
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_4 : IN std_logic;
	dffs_41 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_56
    PORT (
	muxsel1 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	result_node1 : IN std_logic;
	result_node2 : IN std_logic;
	\00012\ : IN std_logic;
	result_node3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

BEGIN

ww_portadataout_4 <= portadataout_4;
ww_portadataout_12 <= portadataout_12;
ww_portadataout_20 <= portadataout_20;
ww_portadataout_28 <= portadataout_28;
ww_sreg <= sreg;
ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_muxsel3 <= muxsel3;
ww_muxsel2 <= muxsel2;
ww_dffs_4 <= dffs_4;
ww_dffs_41 <= dffs_41;
ww_SRG_4 <= SRG_4;
ww_SRG_28 <= SRG_28;
ww_SRG_20 <= SRG_20;
ww_SRG_12 <= SRG_12;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;
\$00012\ : muxlut_52
PORT MAP (
	portadataout_4 => ww_portadataout_4,
	portadataout_12 => ww_portadataout_12,
	portadataout_20 => ww_portadataout_20,
	portadataout_28 => ww_portadataout_28,
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => \$00012|result_node~26\);
\$00014\ : muxlut_53
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	SRG_4 => ww_SRG_4,
	SRG_28 => ww_SRG_28,
	SRG_20 => ww_SRG_20,
	SRG_12 => ww_SRG_12,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => \$00014|result_node~26\);
\$00016\ : muxlut_54
PORT MAP (
	sreg => ww_sreg,
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	\00012\ => \$00016|$00012~0\);
\$00018\ : muxlut_55
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	dffs_4 => ww_dffs_4,
	dffs_41 => ww_dffs_41,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => \$00018|result_node~28\);
\$00020\ : muxlut_56
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel3 => ww_muxsel3,
	muxsel2 => ww_muxsel2,
	result_node1 => \$00014|result_node~26\,
	result_node2 => \$00012|result_node~26\,
	\00012\ => \$00016|$00012~0\,
	result_node3 => \$00018|result_node~28\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_58 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_4 : IN std_logic;
	q_4 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_58;

ARCHITECTURE structure OF muxlut_58 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_dffs_4 : std_logic;
SIGNAL ww_q_4 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_dffs_4 <= dffs_4;
ww_q_4 <= q_4;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~18_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (!muxsel0 & dffs_4 # !muxsel1) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3F0F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_muxsel0,
	datac => ww_muxsel1,
	datad => ww_dffs_4,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel1 # !muxsel0 & q

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3F0",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	datab => ww_muxsel0,
	datac => ww_muxsel1,
	datad => ww_q_4,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_57 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_4 : IN std_logic;
	q_4 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_57;

ARCHITECTURE structure OF muxlut_57 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_dffs_4 : std_logic;
SIGNAL ww_q_4 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;

COMPONENT muxlut_58
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_4 : IN std_logic;
	q_4 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_dffs_4 <= dffs_4;
ww_q_4 <= q_4;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;
\$00012\ : muxlut_58
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	dffs_4 => ww_dffs_4,
	q_4 => ww_q_4,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_50 IS
    PORT (
	portadataout_4 : IN std_logic;
	portadataout_12 : IN std_logic;
	portadataout_20 : IN std_logic;
	portadataout_28 : IN std_logic;
	sreg : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	dffs_4 : IN std_logic;
	dffs_41 : IN std_logic;
	dffs_42 : IN std_logic;
	q_4 : IN std_logic;
	SRG_4 : IN std_logic;
	SRG_28 : IN std_logic;
	SRG_20 : IN std_logic;
	SRG_12 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic;
	result_node1 : OUT std_logic
	);
END muxlut_50;

ARCHITECTURE structure OF muxlut_50 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_portadataout_4 : std_logic;
SIGNAL ww_portadataout_12 : std_logic;
SIGNAL ww_portadataout_20 : std_logic;
SIGNAL ww_portadataout_28 : std_logic;
SIGNAL ww_sreg : std_logic;
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_muxsel3 : std_logic;
SIGNAL ww_muxsel2 : std_logic;
SIGNAL ww_dffs_4 : std_logic;
SIGNAL ww_dffs_41 : std_logic;
SIGNAL ww_dffs_42 : std_logic;
SIGNAL ww_q_4 : std_logic;
SIGNAL ww_SRG_4 : std_logic;
SIGNAL ww_SRG_28 : std_logic;
SIGNAL ww_SRG_20 : std_logic;
SIGNAL ww_SRG_12 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL ww_result_node1 : std_logic;

COMPONENT muxlut_51
    PORT (
	portadataout_4 : IN std_logic;
	portadataout_12 : IN std_logic;
	portadataout_20 : IN std_logic;
	portadataout_28 : IN std_logic;
	sreg : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	dffs_4 : IN std_logic;
	dffs_41 : IN std_logic;
	SRG_4 : IN std_logic;
	SRG_28 : IN std_logic;
	SRG_20 : IN std_logic;
	SRG_12 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_57
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_4 : IN std_logic;
	q_4 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

BEGIN

ww_portadataout_4 <= portadataout_4;
ww_portadataout_12 <= portadataout_12;
ww_portadataout_20 <= portadataout_20;
ww_portadataout_28 <= portadataout_28;
ww_sreg <= sreg;
ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_muxsel3 <= muxsel3;
ww_muxsel2 <= muxsel2;
ww_dffs_4 <= dffs_4;
ww_dffs_41 <= dffs_41;
ww_dffs_42 <= dffs_42;
ww_q_4 <= q_4;
ww_SRG_4 <= SRG_4;
ww_SRG_28 <= SRG_28;
ww_SRG_20 <= SRG_20;
ww_SRG_12 <= SRG_12;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;
result_node1 <= ww_result_node1;
\$00012\ : muxlut_51
PORT MAP (
	portadataout_4 => ww_portadataout_4,
	portadataout_12 => ww_portadataout_12,
	portadataout_20 => ww_portadataout_20,
	portadataout_28 => ww_portadataout_28,
	sreg => ww_sreg,
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	muxsel3 => ww_muxsel3,
	muxsel2 => ww_muxsel2,
	dffs_4 => ww_dffs_41,
	dffs_41 => ww_dffs_42,
	SRG_4 => ww_SRG_4,
	SRG_28 => ww_SRG_28,
	SRG_20 => ww_SRG_20,
	SRG_12 => ww_SRG_12,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node1);
\$00014\ : muxlut_57
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	dffs_4 => ww_dffs_4,
	q_4 => ww_q_4,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_62 IS
    PORT (
	portadataout_5 : IN std_logic;
	portadataout_13 : IN std_logic;
	portadataout_21 : IN std_logic;
	portadataout_29 : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_62;

ARCHITECTURE structure OF muxlut_62 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_portadataout_5 : std_logic;
SIGNAL ww_portadataout_13 : std_logic;
SIGNAL ww_portadataout_21 : std_logic;
SIGNAL ww_portadataout_29 : std_logic;
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_portadataout_5 <= portadataout_5;
ww_portadataout_13 <= portadataout_13;
ww_portadataout_21 <= portadataout_21;
ww_portadataout_29 <= portadataout_29;
ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~26_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (muxsel0 & portadataout # !muxsel0 & portadataout # !muxsel1) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BF8F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_portadataout_29,
	datab => ww_muxsel0,
	datac => ww_muxsel1,
	datad => ww_portadataout_21,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel1 # muxsel0 & portadataout # !muxsel0 & portadataout

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEF2",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_portadataout_5,
	datab => ww_muxsel0,
	datac => ww_muxsel1,
	datad => ww_portadataout_13,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_63 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	SRG_5 : IN std_logic;
	SRG_29 : IN std_logic;
	SRG_21 : IN std_logic;
	SRG_13 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_63;

ARCHITECTURE structure OF muxlut_63 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_SRG_5 : std_logic;
SIGNAL ww_SRG_29 : std_logic;
SIGNAL ww_SRG_21 : std_logic;
SIGNAL ww_SRG_13 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_SRG_5 <= SRG_5;
ww_SRG_29 <= SRG_29;
ww_SRG_21 <= SRG_21;
ww_SRG_13 <= SRG_13;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~26_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (muxsel0 & SRG_29 # !muxsel0 & SRG_21 # !muxsel1) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FB3B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_SRG_21,
	datab => ww_muxsel1,
	datac => ww_muxsel0,
	datad => ww_SRG_29,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel1 # muxsel0 & SRG_13 # !muxsel0 & SRG_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FDEC",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_muxsel0,
	datab => ww_muxsel1,
	datac => ww_SRG_13,
	datad => ww_SRG_5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_64 IS
    PORT (
	sreg : IN std_logic;
	send_ctrl : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	\00012\ : OUT std_logic
	);
END muxlut_64;

ARCHITECTURE structure OF muxlut_64 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sreg : std_logic;
SIGNAL ww_send_ctrl : std_logic;
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_00012 : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_sreg <= sreg;
ww_send_ctrl <= send_ctrl;
ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
\00012\ <= ww_00012;

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \00012\ = muxsel1 # muxsel0 & send_ctrl1 # !muxsel0 & sreg1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEF4",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_muxsel0,
	datab => ww_sreg,
	datac => ww_muxsel1,
	datad => ww_send_ctrl,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => ww_00012);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_65 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_5 : IN std_logic;
	dffs_51 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_65;

ARCHITECTURE structure OF muxlut_65 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_dffs_5 : std_logic;
SIGNAL ww_dffs_51 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_dffs_5 <= dffs_5;
ww_dffs_51 <= dffs_51;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~28_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (muxsel0 & dffs_5 # !muxsel0 & dffs_5 # !muxsel1) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BFB3",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_dffs_5,
	datab => ww_muxsel1,
	datac => ww_muxsel0,
	datad => ww_dffs_51,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel1 # !muxsel0

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF0F",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	datac => ww_muxsel0,
	datad => ww_muxsel1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_66 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	result_node1 : IN std_logic;
	result_node2 : IN std_logic;
	\00012\ : IN std_logic;
	result_node3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_66;

ARCHITECTURE structure OF muxlut_66 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel3 : std_logic;
SIGNAL ww_muxsel2 : std_logic;
SIGNAL ww_result_node1 : std_logic;
SIGNAL ww_result_node2 : std_logic;
SIGNAL ww_00012 : std_logic;
SIGNAL ww_result_node3 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \_~35\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel3 <= muxsel3;
ww_muxsel2 <= muxsel2;
ww_result_node1 <= result_node1;
ww_result_node2 <= result_node2;
ww_00012 <= \00012\;
ww_result_node3 <= result_node3;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~24_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (\_~35\ # result_node & muxsel2 # !muxsel3) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFB3",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_result_node3,
	datab => ww_muxsel3,
	datac => ww_muxsel2,
	datad => \_~35\,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\_~35_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~35\ = (!muxsel1 & !muxsel2) & CASCADE(\00012\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "000F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_muxsel1,
	datad => ww_muxsel2,
	cascin => ww_00012,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~35\);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel3 # muxsel2 & result_node # !muxsel2 & result_node

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EFEC",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_result_node1,
	datab => ww_muxsel3,
	datac => ww_muxsel2,
	datad => ww_result_node2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_61 IS
    PORT (
	portadataout_5 : IN std_logic;
	portadataout_13 : IN std_logic;
	portadataout_21 : IN std_logic;
	portadataout_29 : IN std_logic;
	sreg : IN std_logic;
	send_ctrl : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	SRG_5 : IN std_logic;
	SRG_29 : IN std_logic;
	SRG_21 : IN std_logic;
	SRG_13 : IN std_logic;
	dffs_5 : IN std_logic;
	dffs_51 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_61;

ARCHITECTURE structure OF muxlut_61 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_portadataout_5 : std_logic;
SIGNAL ww_portadataout_13 : std_logic;
SIGNAL ww_portadataout_21 : std_logic;
SIGNAL ww_portadataout_29 : std_logic;
SIGNAL ww_sreg : std_logic;
SIGNAL ww_send_ctrl : std_logic;
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_muxsel3 : std_logic;
SIGNAL ww_muxsel2 : std_logic;
SIGNAL ww_SRG_5 : std_logic;
SIGNAL ww_SRG_29 : std_logic;
SIGNAL ww_SRG_21 : std_logic;
SIGNAL ww_SRG_13 : std_logic;
SIGNAL ww_dffs_5 : std_logic;
SIGNAL ww_dffs_51 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00014|result_node~26\ : std_logic;
SIGNAL \$00012|result_node~26\ : std_logic;
SIGNAL \$00016|$00012~0\ : std_logic;
SIGNAL \$00018|result_node~28\ : std_logic;

COMPONENT muxlut_62
    PORT (
	portadataout_5 : IN std_logic;
	portadataout_13 : IN std_logic;
	portadataout_21 : IN std_logic;
	portadataout_29 : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_63
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	SRG_5 : IN std_logic;
	SRG_29 : IN std_logic;
	SRG_21 : IN std_logic;
	SRG_13 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_64
    PORT (
	sreg : IN std_logic;
	send_ctrl : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	\00012\ : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_65
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_5 : IN std_logic;
	dffs_51 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_66
    PORT (
	muxsel1 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	result_node1 : IN std_logic;
	result_node2 : IN std_logic;
	\00012\ : IN std_logic;
	result_node3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

BEGIN

ww_portadataout_5 <= portadataout_5;
ww_portadataout_13 <= portadataout_13;
ww_portadataout_21 <= portadataout_21;
ww_portadataout_29 <= portadataout_29;
ww_sreg <= sreg;
ww_send_ctrl <= send_ctrl;
ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_muxsel3 <= muxsel3;
ww_muxsel2 <= muxsel2;
ww_SRG_5 <= SRG_5;
ww_SRG_29 <= SRG_29;
ww_SRG_21 <= SRG_21;
ww_SRG_13 <= SRG_13;
ww_dffs_5 <= dffs_5;
ww_dffs_51 <= dffs_51;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;
\$00012\ : muxlut_62
PORT MAP (
	portadataout_5 => ww_portadataout_5,
	portadataout_13 => ww_portadataout_13,
	portadataout_21 => ww_portadataout_21,
	portadataout_29 => ww_portadataout_29,
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => \$00012|result_node~26\);
\$00014\ : muxlut_63
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	SRG_5 => ww_SRG_5,
	SRG_29 => ww_SRG_29,
	SRG_21 => ww_SRG_21,
	SRG_13 => ww_SRG_13,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => \$00014|result_node~26\);
\$00016\ : muxlut_64
PORT MAP (
	sreg => ww_sreg,
	send_ctrl => ww_send_ctrl,
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	\00012\ => \$00016|$00012~0\);
\$00018\ : muxlut_65
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	dffs_5 => ww_dffs_5,
	dffs_51 => ww_dffs_51,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => \$00018|result_node~28\);
\$00020\ : muxlut_66
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel3 => ww_muxsel3,
	muxsel2 => ww_muxsel2,
	result_node1 => \$00014|result_node~26\,
	result_node2 => \$00012|result_node~26\,
	\00012\ => \$00016|$00012~0\,
	result_node3 => \$00018|result_node~28\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_68 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_5 : IN std_logic;
	q_5 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_68;

ARCHITECTURE structure OF muxlut_68 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_dffs_5 : std_logic;
SIGNAL ww_q_5 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_dffs_5 <= dffs_5;
ww_q_5 <= q_5;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~18_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (!muxsel0 & dffs_5 # !muxsel1) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "50FF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_muxsel0,
	datac => ww_dffs_5,
	datad => ww_muxsel1,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel1 # !muxsel0 & q

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFCC",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	datab => ww_muxsel1,
	datac => ww_muxsel0,
	datad => ww_q_5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_67 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_5 : IN std_logic;
	q_5 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_67;

ARCHITECTURE structure OF muxlut_67 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_dffs_5 : std_logic;
SIGNAL ww_q_5 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;

COMPONENT muxlut_68
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_5 : IN std_logic;
	q_5 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_dffs_5 <= dffs_5;
ww_q_5 <= q_5;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;
\$00012\ : muxlut_68
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	dffs_5 => ww_dffs_5,
	q_5 => ww_q_5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_60 IS
    PORT (
	portadataout_5 : IN std_logic;
	portadataout_13 : IN std_logic;
	portadataout_21 : IN std_logic;
	portadataout_29 : IN std_logic;
	sreg : IN std_logic;
	send_ctrl : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	dffs_5 : IN std_logic;
	SRG_5 : IN std_logic;
	SRG_29 : IN std_logic;
	SRG_21 : IN std_logic;
	SRG_13 : IN std_logic;
	dffs_51 : IN std_logic;
	dffs_52 : IN std_logic;
	q_5 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic;
	result_node1 : OUT std_logic
	);
END muxlut_60;

ARCHITECTURE structure OF muxlut_60 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_portadataout_5 : std_logic;
SIGNAL ww_portadataout_13 : std_logic;
SIGNAL ww_portadataout_21 : std_logic;
SIGNAL ww_portadataout_29 : std_logic;
SIGNAL ww_sreg : std_logic;
SIGNAL ww_send_ctrl : std_logic;
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_muxsel3 : std_logic;
SIGNAL ww_muxsel2 : std_logic;
SIGNAL ww_dffs_5 : std_logic;
SIGNAL ww_SRG_5 : std_logic;
SIGNAL ww_SRG_29 : std_logic;
SIGNAL ww_SRG_21 : std_logic;
SIGNAL ww_SRG_13 : std_logic;
SIGNAL ww_dffs_51 : std_logic;
SIGNAL ww_dffs_52 : std_logic;
SIGNAL ww_q_5 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL ww_result_node1 : std_logic;

COMPONENT muxlut_61
    PORT (
	portadataout_5 : IN std_logic;
	portadataout_13 : IN std_logic;
	portadataout_21 : IN std_logic;
	portadataout_29 : IN std_logic;
	sreg : IN std_logic;
	send_ctrl : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	SRG_5 : IN std_logic;
	SRG_29 : IN std_logic;
	SRG_21 : IN std_logic;
	SRG_13 : IN std_logic;
	dffs_5 : IN std_logic;
	dffs_51 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_67
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_5 : IN std_logic;
	q_5 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

BEGIN

ww_portadataout_5 <= portadataout_5;
ww_portadataout_13 <= portadataout_13;
ww_portadataout_21 <= portadataout_21;
ww_portadataout_29 <= portadataout_29;
ww_sreg <= sreg;
ww_send_ctrl <= send_ctrl;
ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_muxsel3 <= muxsel3;
ww_muxsel2 <= muxsel2;
ww_dffs_5 <= dffs_5;
ww_SRG_5 <= SRG_5;
ww_SRG_29 <= SRG_29;
ww_SRG_21 <= SRG_21;
ww_SRG_13 <= SRG_13;
ww_dffs_51 <= dffs_51;
ww_dffs_52 <= dffs_52;
ww_q_5 <= q_5;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;
result_node1 <= ww_result_node1;
\$00012\ : muxlut_61
PORT MAP (
	portadataout_5 => ww_portadataout_5,
	portadataout_13 => ww_portadataout_13,
	portadataout_21 => ww_portadataout_21,
	portadataout_29 => ww_portadataout_29,
	sreg => ww_sreg,
	send_ctrl => ww_send_ctrl,
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	muxsel3 => ww_muxsel3,
	muxsel2 => ww_muxsel2,
	SRG_5 => ww_SRG_5,
	SRG_29 => ww_SRG_29,
	SRG_21 => ww_SRG_21,
	SRG_13 => ww_SRG_13,
	dffs_5 => ww_dffs_51,
	dffs_51 => ww_dffs_52,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node1);
\$00014\ : muxlut_67
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	dffs_5 => ww_dffs_5,
	q_5 => ww_q_5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_72 IS
    PORT (
	portadataout_6 : IN std_logic;
	portadataout_14 : IN std_logic;
	portadataout_22 : IN std_logic;
	portadataout_30 : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_72;

ARCHITECTURE structure OF muxlut_72 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_portadataout_6 : std_logic;
SIGNAL ww_portadataout_14 : std_logic;
SIGNAL ww_portadataout_22 : std_logic;
SIGNAL ww_portadataout_30 : std_logic;
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_portadataout_6 <= portadataout_6;
ww_portadataout_14 <= portadataout_14;
ww_portadataout_22 <= portadataout_22;
ww_portadataout_30 <= portadataout_30;
ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~26_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (muxsel0 & portadataout # !muxsel0 & portadataout # !muxsel1) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EF2F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_portadataout_22,
	datab => ww_muxsel0,
	datac => ww_muxsel1,
	datad => ww_portadataout_30,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel1 # muxsel0 & portadataout # !muxsel0 & portadataout

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FBEA",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_muxsel1,
	datab => ww_muxsel0,
	datac => ww_portadataout_14,
	datad => ww_portadataout_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_73 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	SRG_6 : IN std_logic;
	SRG_30 : IN std_logic;
	SRG_22 : IN std_logic;
	SRG_14 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_73;

ARCHITECTURE structure OF muxlut_73 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_SRG_6 : std_logic;
SIGNAL ww_SRG_30 : std_logic;
SIGNAL ww_SRG_22 : std_logic;
SIGNAL ww_SRG_14 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_SRG_6 <= SRG_6;
ww_SRG_30 <= SRG_30;
ww_SRG_22 <= SRG_22;
ww_SRG_14 <= SRG_14;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~26_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (muxsel0 & SRG_30 # !muxsel0 & SRG_22 # !muxsel1) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EF2F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_SRG_22,
	datab => ww_muxsel0,
	datac => ww_muxsel1,
	datad => ww_SRG_30,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel1 # muxsel0 & SRG_14 # !muxsel0 & SRG_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FBF8",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_SRG_14,
	datab => ww_muxsel0,
	datac => ww_muxsel1,
	datad => ww_SRG_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_74 IS
    PORT (
	sreg : IN std_logic;
	send_ctrl : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	\00012\ : OUT std_logic
	);
END muxlut_74;

ARCHITECTURE structure OF muxlut_74 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sreg : std_logic;
SIGNAL ww_send_ctrl : std_logic;
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_00012 : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_sreg <= sreg;
ww_send_ctrl <= send_ctrl;
ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
\00012\ <= ww_00012;

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \00012\ = muxsel1 # muxsel0 & send_ctrl1 # !muxsel0 & sreg1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FECE",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg,
	datab => ww_muxsel1,
	datac => ww_muxsel0,
	datad => ww_send_ctrl,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => ww_00012);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_75 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_6 : IN std_logic;
	dffs_61 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_75;

ARCHITECTURE structure OF muxlut_75 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_dffs_6 : std_logic;
SIGNAL ww_dffs_61 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_dffs_6 <= dffs_6;
ww_dffs_61 <= dffs_61;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~28_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (muxsel0 & dffs_6 # !muxsel0 & dffs_6 # !muxsel1) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E2FF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_dffs_61,
	datab => ww_muxsel0,
	datac => ww_dffs_6,
	datad => ww_muxsel1,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel1 # !muxsel0

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3F3",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	datab => ww_muxsel0,
	datac => ww_muxsel1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_76 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	result_node1 : IN std_logic;
	result_node2 : IN std_logic;
	\00012\ : IN std_logic;
	result_node3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_76;

ARCHITECTURE structure OF muxlut_76 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel3 : std_logic;
SIGNAL ww_muxsel2 : std_logic;
SIGNAL ww_result_node1 : std_logic;
SIGNAL ww_result_node2 : std_logic;
SIGNAL ww_00012 : std_logic;
SIGNAL ww_result_node3 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \_~35\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel3 <= muxsel3;
ww_muxsel2 <= muxsel2;
ww_result_node1 <= result_node1;
ww_result_node2 <= result_node2;
ww_00012 <= \00012\;
ww_result_node3 <= result_node3;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~24_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (\_~35\ # result_node & muxsel2 # !muxsel3) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFB3",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_result_node3,
	datab => ww_muxsel3,
	datac => ww_muxsel2,
	datad => \_~35\,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\_~35_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~35\ = (!muxsel1 & !muxsel2) & CASCADE(\00012\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0033",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_muxsel1,
	datad => ww_muxsel2,
	cascin => ww_00012,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~35\);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel3 # muxsel2 & result_node # !muxsel2 & result_node

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EFEA",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_muxsel3,
	datab => ww_result_node1,
	datac => ww_muxsel2,
	datad => ww_result_node2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_71 IS
    PORT (
	portadataout_6 : IN std_logic;
	portadataout_14 : IN std_logic;
	portadataout_22 : IN std_logic;
	portadataout_30 : IN std_logic;
	sreg : IN std_logic;
	send_ctrl : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	SRG_6 : IN std_logic;
	SRG_30 : IN std_logic;
	SRG_22 : IN std_logic;
	SRG_14 : IN std_logic;
	dffs_6 : IN std_logic;
	dffs_61 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_71;

ARCHITECTURE structure OF muxlut_71 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_portadataout_6 : std_logic;
SIGNAL ww_portadataout_14 : std_logic;
SIGNAL ww_portadataout_22 : std_logic;
SIGNAL ww_portadataout_30 : std_logic;
SIGNAL ww_sreg : std_logic;
SIGNAL ww_send_ctrl : std_logic;
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_muxsel3 : std_logic;
SIGNAL ww_muxsel2 : std_logic;
SIGNAL ww_SRG_6 : std_logic;
SIGNAL ww_SRG_30 : std_logic;
SIGNAL ww_SRG_22 : std_logic;
SIGNAL ww_SRG_14 : std_logic;
SIGNAL ww_dffs_6 : std_logic;
SIGNAL ww_dffs_61 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00014|result_node~26\ : std_logic;
SIGNAL \$00012|result_node~26\ : std_logic;
SIGNAL \$00016|$00012~0\ : std_logic;
SIGNAL \$00018|result_node~28\ : std_logic;

COMPONENT muxlut_72
    PORT (
	portadataout_6 : IN std_logic;
	portadataout_14 : IN std_logic;
	portadataout_22 : IN std_logic;
	portadataout_30 : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_73
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	SRG_6 : IN std_logic;
	SRG_30 : IN std_logic;
	SRG_22 : IN std_logic;
	SRG_14 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_74
    PORT (
	sreg : IN std_logic;
	send_ctrl : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	\00012\ : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_75
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_6 : IN std_logic;
	dffs_61 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_76
    PORT (
	muxsel1 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	result_node1 : IN std_logic;
	result_node2 : IN std_logic;
	\00012\ : IN std_logic;
	result_node3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

BEGIN

ww_portadataout_6 <= portadataout_6;
ww_portadataout_14 <= portadataout_14;
ww_portadataout_22 <= portadataout_22;
ww_portadataout_30 <= portadataout_30;
ww_sreg <= sreg;
ww_send_ctrl <= send_ctrl;
ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_muxsel3 <= muxsel3;
ww_muxsel2 <= muxsel2;
ww_SRG_6 <= SRG_6;
ww_SRG_30 <= SRG_30;
ww_SRG_22 <= SRG_22;
ww_SRG_14 <= SRG_14;
ww_dffs_6 <= dffs_6;
ww_dffs_61 <= dffs_61;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;
\$00012\ : muxlut_72
PORT MAP (
	portadataout_6 => ww_portadataout_6,
	portadataout_14 => ww_portadataout_14,
	portadataout_22 => ww_portadataout_22,
	portadataout_30 => ww_portadataout_30,
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => \$00012|result_node~26\);
\$00014\ : muxlut_73
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	SRG_6 => ww_SRG_6,
	SRG_30 => ww_SRG_30,
	SRG_22 => ww_SRG_22,
	SRG_14 => ww_SRG_14,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => \$00014|result_node~26\);
\$00016\ : muxlut_74
PORT MAP (
	sreg => ww_sreg,
	send_ctrl => ww_send_ctrl,
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	\00012\ => \$00016|$00012~0\);
\$00018\ : muxlut_75
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	dffs_6 => ww_dffs_6,
	dffs_61 => ww_dffs_61,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => \$00018|result_node~28\);
\$00020\ : muxlut_76
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel3 => ww_muxsel3,
	muxsel2 => ww_muxsel2,
	result_node1 => \$00014|result_node~26\,
	result_node2 => \$00012|result_node~26\,
	\00012\ => \$00016|$00012~0\,
	result_node3 => \$00018|result_node~28\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_78 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_6 : IN std_logic;
	q_6 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_78;

ARCHITECTURE structure OF muxlut_78 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_dffs_6 : std_logic;
SIGNAL ww_q_6 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_dffs_6 <= dffs_6;
ww_q_6 <= q_6;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~18_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (!muxsel0 & dffs_6 # !muxsel1) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3F0F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_muxsel0,
	datac => ww_muxsel1,
	datad => ww_dffs_6,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel1 # !muxsel0 & q

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3F0",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	datab => ww_muxsel0,
	datac => ww_muxsel1,
	datad => ww_q_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_77 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_6 : IN std_logic;
	q_6 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_77;

ARCHITECTURE structure OF muxlut_77 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_dffs_6 : std_logic;
SIGNAL ww_q_6 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;

COMPONENT muxlut_78
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_6 : IN std_logic;
	q_6 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_dffs_6 <= dffs_6;
ww_q_6 <= q_6;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;
\$00012\ : muxlut_78
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	dffs_6 => ww_dffs_6,
	q_6 => ww_q_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_70 IS
    PORT (
	portadataout_6 : IN std_logic;
	portadataout_14 : IN std_logic;
	portadataout_22 : IN std_logic;
	portadataout_30 : IN std_logic;
	sreg : IN std_logic;
	send_ctrl : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	SRG_6 : IN std_logic;
	SRG_30 : IN std_logic;
	SRG_22 : IN std_logic;
	SRG_14 : IN std_logic;
	dffs_6 : IN std_logic;
	dffs_61 : IN std_logic;
	dffs_62 : IN std_logic;
	q_6 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic;
	result_node1 : OUT std_logic
	);
END muxlut_70;

ARCHITECTURE structure OF muxlut_70 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_portadataout_6 : std_logic;
SIGNAL ww_portadataout_14 : std_logic;
SIGNAL ww_portadataout_22 : std_logic;
SIGNAL ww_portadataout_30 : std_logic;
SIGNAL ww_sreg : std_logic;
SIGNAL ww_send_ctrl : std_logic;
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_muxsel3 : std_logic;
SIGNAL ww_muxsel2 : std_logic;
SIGNAL ww_SRG_6 : std_logic;
SIGNAL ww_SRG_30 : std_logic;
SIGNAL ww_SRG_22 : std_logic;
SIGNAL ww_SRG_14 : std_logic;
SIGNAL ww_dffs_6 : std_logic;
SIGNAL ww_dffs_61 : std_logic;
SIGNAL ww_dffs_62 : std_logic;
SIGNAL ww_q_6 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL ww_result_node1 : std_logic;

COMPONENT muxlut_71
    PORT (
	portadataout_6 : IN std_logic;
	portadataout_14 : IN std_logic;
	portadataout_22 : IN std_logic;
	portadataout_30 : IN std_logic;
	sreg : IN std_logic;
	send_ctrl : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	SRG_6 : IN std_logic;
	SRG_30 : IN std_logic;
	SRG_22 : IN std_logic;
	SRG_14 : IN std_logic;
	dffs_6 : IN std_logic;
	dffs_61 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_77
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_6 : IN std_logic;
	q_6 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

BEGIN

ww_portadataout_6 <= portadataout_6;
ww_portadataout_14 <= portadataout_14;
ww_portadataout_22 <= portadataout_22;
ww_portadataout_30 <= portadataout_30;
ww_sreg <= sreg;
ww_send_ctrl <= send_ctrl;
ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_muxsel3 <= muxsel3;
ww_muxsel2 <= muxsel2;
ww_SRG_6 <= SRG_6;
ww_SRG_30 <= SRG_30;
ww_SRG_22 <= SRG_22;
ww_SRG_14 <= SRG_14;
ww_dffs_6 <= dffs_6;
ww_dffs_61 <= dffs_61;
ww_dffs_62 <= dffs_62;
ww_q_6 <= q_6;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;
result_node1 <= ww_result_node1;
\$00012\ : muxlut_71
PORT MAP (
	portadataout_6 => ww_portadataout_6,
	portadataout_14 => ww_portadataout_14,
	portadataout_22 => ww_portadataout_22,
	portadataout_30 => ww_portadataout_30,
	sreg => ww_sreg,
	send_ctrl => ww_send_ctrl,
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	muxsel3 => ww_muxsel3,
	muxsel2 => ww_muxsel2,
	SRG_6 => ww_SRG_6,
	SRG_30 => ww_SRG_30,
	SRG_22 => ww_SRG_22,
	SRG_14 => ww_SRG_14,
	dffs_6 => ww_dffs_61,
	dffs_61 => ww_dffs_62,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node1);
\$00014\ : muxlut_77
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	dffs_6 => ww_dffs_6,
	q_6 => ww_q_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_82 IS
    PORT (
	portadataout_7 : IN std_logic;
	portadataout_15 : IN std_logic;
	portadataout_23 : IN std_logic;
	portadataout_31 : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dom_adr_en : IN std_logic;
	A_nB : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_82;

ARCHITECTURE structure OF muxlut_82 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_portadataout_7 : std_logic;
SIGNAL ww_portadataout_15 : std_logic;
SIGNAL ww_portadataout_23 : std_logic;
SIGNAL ww_portadataout_31 : std_logic;
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_dom_adr_en : std_logic;
SIGNAL ww_A_nB : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \_~133\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_portadataout_7 <= portadataout_7;
ww_portadataout_15 <= portadataout_15;
ww_portadataout_23 <= portadataout_23;
ww_portadataout_31 <= portadataout_31;
ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_dom_adr_en <= dom_adr_en;
ww_A_nB <= A_nB;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~26_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (muxsel0 & portadataout # !muxsel0 & portadataout # !muxsel1) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BF8F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_portadataout_31,
	datab => ww_muxsel0,
	datac => ww_muxsel1,
	datad => ww_portadataout_23,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\_~133_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~133\ = \A_nB~combout\ & (portadataout # !dom_adr_en) # !\A_nB~combout\ & dom_adr_en & portadataout

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_A_nB,
	datac => ww_dom_adr_en,
	datad => ww_portadataout_15,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~133\);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel1 # muxsel0 & \_~133\ # !muxsel0 & portadataout

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEF2",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_portadataout_7,
	datab => ww_muxsel0,
	datac => ww_muxsel1,
	datad => \_~133\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_83 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	SRG_7 : IN std_logic;
	SRG_31 : IN std_logic;
	SRG_23 : IN std_logic;
	SRG_15 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_83;

ARCHITECTURE structure OF muxlut_83 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_SRG_7 : std_logic;
SIGNAL ww_SRG_31 : std_logic;
SIGNAL ww_SRG_23 : std_logic;
SIGNAL ww_SRG_15 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_SRG_7 <= SRG_7;
ww_SRG_31 <= SRG_31;
ww_SRG_23 <= SRG_23;
ww_SRG_15 <= SRG_15;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~26_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (muxsel0 & SRG_31 # !muxsel0 & SRG_23 # !muxsel1) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F7D5",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_muxsel1,
	datab => ww_muxsel0,
	datac => ww_SRG_31,
	datad => ww_SRG_23,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel1 # muxsel0 & SRG_15 # !muxsel0 & SRG_7

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FDF8",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_muxsel0,
	datab => ww_SRG_15,
	datac => ww_muxsel1,
	datad => ww_SRG_7,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_84 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	A_nB : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	\_\ : OUT std_logic
	);
END muxlut_84;

ARCHITECTURE structure OF muxlut_84 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_A_nB : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL \ww_\ : std_logic;
SIGNAL \_~1\ : std_logic;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_A_nB <= A_nB;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
\_\ <= \ww_\;

\_~1_I\ : apex20ke_lcell 
-- Equation(s):
-- \_\ = muxsel1 # muxsel0 & \A_nB~combout\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FCF0",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	datab => ww_muxsel0,
	datac => ww_muxsel1,
	datad => ww_A_nB,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \ww_\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_85 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_7 : IN std_logic;
	dffs_71 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_85;

ARCHITECTURE structure OF muxlut_85 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_dffs_7 : std_logic;
SIGNAL ww_dffs_71 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_dffs_7 <= dffs_7;
ww_dffs_71 <= dffs_71;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~27_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = muxsel0 & dffs_7 # !muxsel0 & dffs_7 # !muxsel1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BF8F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_dffs_7,
	datab => ww_muxsel0,
	datac => ww_muxsel1,
	datad => ww_dffs_71,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_86 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	result_node1 : IN std_logic;
	result_node2 : IN std_logic;
	\_\ : IN std_logic;
	result_node3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_86;

ARCHITECTURE structure OF muxlut_86 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel3 : std_logic;
SIGNAL ww_muxsel2 : std_logic;
SIGNAL ww_result_node1 : std_logic;
SIGNAL ww_result_node2 : std_logic;
SIGNAL \ww_\ : std_logic;
SIGNAL ww_result_node3 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \_~45\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel3 <= muxsel3;
ww_muxsel2 <= muxsel2;
ww_result_node1 <= result_node1;
ww_result_node2 <= result_node2;
\ww_\ <= \_\;
ww_result_node3 <= result_node3;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~24_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (\_~45\ # muxsel2 & result_node # !muxsel3) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EFAF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \_~45\,
	datab => ww_muxsel2,
	datac => ww_muxsel3,
	datad => ww_result_node3,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\_~45_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~45\ = (!muxsel1 & !muxsel2) & CASCADE(\_\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "000F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_muxsel1,
	datad => ww_muxsel2,
	cascin => \ww_\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~45\);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel3 # muxsel2 & result_node # !muxsel2 & result_node

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEF2",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_result_node2,
	datab => ww_muxsel2,
	datac => ww_muxsel3,
	datad => ww_result_node1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_81 IS
    PORT (
	portadataout_7 : IN std_logic;
	portadataout_15 : IN std_logic;
	portadataout_23 : IN std_logic;
	portadataout_31 : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	SRG_7 : IN std_logic;
	SRG_31 : IN std_logic;
	SRG_23 : IN std_logic;
	SRG_15 : IN std_logic;
	dffs_7 : IN std_logic;
	dffs_71 : IN std_logic;
	dom_adr_en : IN std_logic;
	A_nB : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_81;

ARCHITECTURE structure OF muxlut_81 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_portadataout_7 : std_logic;
SIGNAL ww_portadataout_15 : std_logic;
SIGNAL ww_portadataout_23 : std_logic;
SIGNAL ww_portadataout_31 : std_logic;
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_muxsel3 : std_logic;
SIGNAL ww_muxsel2 : std_logic;
SIGNAL ww_SRG_7 : std_logic;
SIGNAL ww_SRG_31 : std_logic;
SIGNAL ww_SRG_23 : std_logic;
SIGNAL ww_SRG_15 : std_logic;
SIGNAL ww_dffs_7 : std_logic;
SIGNAL ww_dffs_71 : std_logic;
SIGNAL ww_dom_adr_en : std_logic;
SIGNAL ww_A_nB : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00014|result_node~26\ : std_logic;
SIGNAL \$00012|result_node~26\ : std_logic;
SIGNAL \$00016|_~1\ : std_logic;
SIGNAL \$00018|result_node~27\ : std_logic;

COMPONENT muxlut_82
    PORT (
	portadataout_7 : IN std_logic;
	portadataout_15 : IN std_logic;
	portadataout_23 : IN std_logic;
	portadataout_31 : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dom_adr_en : IN std_logic;
	A_nB : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_83
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	SRG_7 : IN std_logic;
	SRG_31 : IN std_logic;
	SRG_23 : IN std_logic;
	SRG_15 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_84
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	A_nB : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	\_\ : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_85
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_7 : IN std_logic;
	dffs_71 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_86
    PORT (
	muxsel1 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	result_node1 : IN std_logic;
	result_node2 : IN std_logic;
	\_\ : IN std_logic;
	result_node3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

BEGIN

ww_portadataout_7 <= portadataout_7;
ww_portadataout_15 <= portadataout_15;
ww_portadataout_23 <= portadataout_23;
ww_portadataout_31 <= portadataout_31;
ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_muxsel3 <= muxsel3;
ww_muxsel2 <= muxsel2;
ww_SRG_7 <= SRG_7;
ww_SRG_31 <= SRG_31;
ww_SRG_23 <= SRG_23;
ww_SRG_15 <= SRG_15;
ww_dffs_7 <= dffs_7;
ww_dffs_71 <= dffs_71;
ww_dom_adr_en <= dom_adr_en;
ww_A_nB <= A_nB;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;
\$00012\ : muxlut_82
PORT MAP (
	portadataout_7 => ww_portadataout_7,
	portadataout_15 => ww_portadataout_15,
	portadataout_23 => ww_portadataout_23,
	portadataout_31 => ww_portadataout_31,
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	dom_adr_en => ww_dom_adr_en,
	A_nB => ww_A_nB,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => \$00012|result_node~26\);
\$00014\ : muxlut_83
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	SRG_7 => ww_SRG_7,
	SRG_31 => ww_SRG_31,
	SRG_23 => ww_SRG_23,
	SRG_15 => ww_SRG_15,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => \$00014|result_node~26\);
\$00016\ : muxlut_84
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	A_nB => ww_A_nB,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	\_\ => \$00016|_~1\);
\$00018\ : muxlut_85
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	dffs_7 => ww_dffs_7,
	dffs_71 => ww_dffs_71,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => \$00018|result_node~27\);
\$00020\ : muxlut_86
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel3 => ww_muxsel3,
	muxsel2 => ww_muxsel2,
	result_node1 => \$00014|result_node~26\,
	result_node2 => \$00012|result_node~26\,
	\_\ => \$00016|_~1\,
	result_node3 => \$00018|result_node~27\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_88 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_7 : IN std_logic;
	q_7 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_88;

ARCHITECTURE structure OF muxlut_88 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_dffs_7 : std_logic;
SIGNAL ww_q_7 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0_1\ : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_dffs_7 <= dffs_7;
ww_q_7 <= q_7;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;

\result_node~18_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = (dffs_7 & !muxsel0 # !muxsel1) & CASCADE(\$00012~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "55F5",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_muxsel1,
	datac => ww_dffs_7,
	datad => ww_muxsel0,
	cascin => \$00012~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \$00012~0\ = muxsel1 # !muxsel0 & q

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3F0",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	datab => ww_muxsel0,
	datac => ww_muxsel1,
	datad => ww_q_7,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_87 IS
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_7 : IN std_logic;
	q_7 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic
	);
END muxlut_87;

ARCHITECTURE structure OF muxlut_87 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_dffs_7 : std_logic;
SIGNAL ww_q_7 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;

COMPONENT muxlut_88
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_7 : IN std_logic;
	q_7 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

BEGIN

ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_dffs_7 <= dffs_7;
ww_q_7 <= q_7;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;
\$00012\ : muxlut_88
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	dffs_7 => ww_dffs_7,
	q_7 => ww_q_7,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_80 IS
    PORT (
	portadataout_7 : IN std_logic;
	portadataout_15 : IN std_logic;
	portadataout_23 : IN std_logic;
	portadataout_31 : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	SRG_7 : IN std_logic;
	SRG_31 : IN std_logic;
	SRG_23 : IN std_logic;
	SRG_15 : IN std_logic;
	dffs_7 : IN std_logic;
	q_7 : IN std_logic;
	dffs_71 : IN std_logic;
	dffs_72 : IN std_logic;
	dom_adr_en : IN std_logic;
	A_nB : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic;
	result_node1 : OUT std_logic
	);
END muxlut_80;

ARCHITECTURE structure OF muxlut_80 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_portadataout_7 : std_logic;
SIGNAL ww_portadataout_15 : std_logic;
SIGNAL ww_portadataout_23 : std_logic;
SIGNAL ww_portadataout_31 : std_logic;
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_muxsel3 : std_logic;
SIGNAL ww_muxsel2 : std_logic;
SIGNAL ww_SRG_7 : std_logic;
SIGNAL ww_SRG_31 : std_logic;
SIGNAL ww_SRG_23 : std_logic;
SIGNAL ww_SRG_15 : std_logic;
SIGNAL ww_dffs_7 : std_logic;
SIGNAL ww_q_7 : std_logic;
SIGNAL ww_dffs_71 : std_logic;
SIGNAL ww_dffs_72 : std_logic;
SIGNAL ww_dom_adr_en : std_logic;
SIGNAL ww_A_nB : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL ww_result_node1 : std_logic;

COMPONENT muxlut_81
    PORT (
	portadataout_7 : IN std_logic;
	portadataout_15 : IN std_logic;
	portadataout_23 : IN std_logic;
	portadataout_31 : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	SRG_7 : IN std_logic;
	SRG_31 : IN std_logic;
	SRG_23 : IN std_logic;
	SRG_15 : IN std_logic;
	dffs_7 : IN std_logic;
	dffs_71 : IN std_logic;
	dom_adr_en : IN std_logic;
	A_nB : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_87
    PORT (
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_7 : IN std_logic;
	q_7 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic);
END COMPONENT;

BEGIN

ww_portadataout_7 <= portadataout_7;
ww_portadataout_15 <= portadataout_15;
ww_portadataout_23 <= portadataout_23;
ww_portadataout_31 <= portadataout_31;
ww_muxsel1 <= muxsel1;
ww_muxsel0 <= muxsel0;
ww_muxsel3 <= muxsel3;
ww_muxsel2 <= muxsel2;
ww_SRG_7 <= SRG_7;
ww_SRG_31 <= SRG_31;
ww_SRG_23 <= SRG_23;
ww_SRG_15 <= SRG_15;
ww_dffs_7 <= dffs_7;
ww_q_7 <= q_7;
ww_dffs_71 <= dffs_71;
ww_dffs_72 <= dffs_72;
ww_dom_adr_en <= dom_adr_en;
ww_A_nB <= A_nB;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;
result_node1 <= ww_result_node1;
\$00012\ : muxlut_81
PORT MAP (
	portadataout_7 => ww_portadataout_7,
	portadataout_15 => ww_portadataout_15,
	portadataout_23 => ww_portadataout_23,
	portadataout_31 => ww_portadataout_31,
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	muxsel3 => ww_muxsel3,
	muxsel2 => ww_muxsel2,
	SRG_7 => ww_SRG_7,
	SRG_31 => ww_SRG_31,
	SRG_23 => ww_SRG_23,
	SRG_15 => ww_SRG_15,
	dffs_7 => ww_dffs_71,
	dffs_71 => ww_dffs_72,
	dom_adr_en => ww_dom_adr_en,
	A_nB => ww_A_nB,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node1);
\$00014\ : muxlut_87
PORT MAP (
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	dffs_7 => ww_dffs_7,
	q_7 => ww_q_7,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_mux_1 IS
    PORT (
	portadataout_0 : IN std_logic;
	portadataout_1 : IN std_logic;
	portadataout_2 : IN std_logic;
	portadataout_3 : IN std_logic;
	portadataout_4 : IN std_logic;
	portadataout_5 : IN std_logic;
	portadataout_6 : IN std_logic;
	portadataout_7 : IN std_logic;
	portadataout_8 : IN std_logic;
	portadataout_9 : IN std_logic;
	portadataout_10 : IN std_logic;
	portadataout_11 : IN std_logic;
	portadataout_12 : IN std_logic;
	portadataout_13 : IN std_logic;
	portadataout_14 : IN std_logic;
	portadataout_15 : IN std_logic;
	portadataout_16 : IN std_logic;
	portadataout_17 : IN std_logic;
	portadataout_18 : IN std_logic;
	portadataout_19 : IN std_logic;
	portadataout_20 : IN std_logic;
	portadataout_21 : IN std_logic;
	portadataout_22 : IN std_logic;
	portadataout_23 : IN std_logic;
	portadataout_24 : IN std_logic;
	portadataout_25 : IN std_logic;
	portadataout_26 : IN std_logic;
	portadataout_27 : IN std_logic;
	portadataout_28 : IN std_logic;
	portadataout_29 : IN std_logic;
	portadataout_30 : IN std_logic;
	portadataout_31 : IN std_logic;
	sreg : IN std_logic;
	sreg1 : IN std_logic;
	send_ctrl : IN std_logic;
	muxsel1 : IN std_logic;
	q_8 : IN std_logic;
	q_0 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	cmd_snd0 : IN std_logic;
	dffs_1 : IN std_logic;
	q_9 : IN std_logic;
	q_1 : IN std_logic;
	cmd_snd1 : IN std_logic;
	dffs_2 : IN std_logic;
	SRG_8 : IN std_logic;
	SRG_0 : IN std_logic;
	SRG_24 : IN std_logic;
	SRG_16 : IN std_logic;
	dffs_01 : IN std_logic;
	dffs_02 : IN std_logic;
	q_2 : IN std_logic;
	dffs_21 : IN std_logic;
	dffs_22 : IN std_logic;
	dffs_3 : IN std_logic;
	SRG_7 : IN std_logic;
	SRG_31 : IN std_logic;
	SRG_23 : IN std_logic;
	SRG_15 : IN std_logic;
	dffs_11 : IN std_logic;
	dffs_12 : IN std_logic;
	SRG_9 : IN std_logic;
	SRG_1 : IN std_logic;
	SRG_25 : IN std_logic;
	SRG_17 : IN std_logic;
	dffs_31 : IN std_logic;
	dffs_32 : IN std_logic;
	q_3 : IN std_logic;
	dffs_4 : IN std_logic;
	SRG_6 : IN std_logic;
	SRG_30 : IN std_logic;
	SRG_22 : IN std_logic;
	SRG_14 : IN std_logic;
	SRG_10 : IN std_logic;
	SRG_2 : IN std_logic;
	SRG_26 : IN std_logic;
	SRG_18 : IN std_logic;
	dffs_41 : IN std_logic;
	dffs_42 : IN std_logic;
	q_4 : IN std_logic;
	dffs_5 : IN std_logic;
	SRG_5 : IN std_logic;
	SRG_29 : IN std_logic;
	SRG_21 : IN std_logic;
	SRG_13 : IN std_logic;
	dffs_51 : IN std_logic;
	dffs_52 : IN std_logic;
	SRG_11 : IN std_logic;
	SRG_3 : IN std_logic;
	SRG_27 : IN std_logic;
	SRG_19 : IN std_logic;
	cmd_snd3 : IN std_logic;
	q_5 : IN std_logic;
	dffs_6 : IN std_logic;
	SRG_4 : IN std_logic;
	SRG_28 : IN std_logic;
	SRG_20 : IN std_logic;
	SRG_12 : IN std_logic;
	dffs_61 : IN std_logic;
	dffs_62 : IN std_logic;
	q_6 : IN std_logic;
	dffs_7 : IN std_logic;
	q_7 : IN std_logic;
	dffs_71 : IN std_logic;
	dffs_72 : IN std_logic;
	dom_adr_en : IN std_logic;
	A_nB : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic;
	result_node1 : OUT std_logic;
	result_node2 : OUT std_logic;
	result_node3 : OUT std_logic;
	result_node4 : OUT std_logic;
	result_node5 : OUT std_logic;
	result_node6 : OUT std_logic;
	result_node7 : OUT std_logic;
	result_node8 : OUT std_logic;
	result_node9 : OUT std_logic;
	result_node10 : OUT std_logic;
	result_node11 : OUT std_logic;
	result_node12 : OUT std_logic;
	result_node13 : OUT std_logic;
	result_node14 : OUT std_logic;
	result_node15 : OUT std_logic
	);
END lpm_mux_1;

ARCHITECTURE structure OF lpm_mux_1 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_portadataout_0 : std_logic;
SIGNAL ww_portadataout_1 : std_logic;
SIGNAL ww_portadataout_2 : std_logic;
SIGNAL ww_portadataout_3 : std_logic;
SIGNAL ww_portadataout_4 : std_logic;
SIGNAL ww_portadataout_5 : std_logic;
SIGNAL ww_portadataout_6 : std_logic;
SIGNAL ww_portadataout_7 : std_logic;
SIGNAL ww_portadataout_8 : std_logic;
SIGNAL ww_portadataout_9 : std_logic;
SIGNAL ww_portadataout_10 : std_logic;
SIGNAL ww_portadataout_11 : std_logic;
SIGNAL ww_portadataout_12 : std_logic;
SIGNAL ww_portadataout_13 : std_logic;
SIGNAL ww_portadataout_14 : std_logic;
SIGNAL ww_portadataout_15 : std_logic;
SIGNAL ww_portadataout_16 : std_logic;
SIGNAL ww_portadataout_17 : std_logic;
SIGNAL ww_portadataout_18 : std_logic;
SIGNAL ww_portadataout_19 : std_logic;
SIGNAL ww_portadataout_20 : std_logic;
SIGNAL ww_portadataout_21 : std_logic;
SIGNAL ww_portadataout_22 : std_logic;
SIGNAL ww_portadataout_23 : std_logic;
SIGNAL ww_portadataout_24 : std_logic;
SIGNAL ww_portadataout_25 : std_logic;
SIGNAL ww_portadataout_26 : std_logic;
SIGNAL ww_portadataout_27 : std_logic;
SIGNAL ww_portadataout_28 : std_logic;
SIGNAL ww_portadataout_29 : std_logic;
SIGNAL ww_portadataout_30 : std_logic;
SIGNAL ww_portadataout_31 : std_logic;
SIGNAL ww_sreg : std_logic;
SIGNAL ww_sreg1 : std_logic;
SIGNAL ww_send_ctrl : std_logic;
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_q_8 : std_logic;
SIGNAL ww_q_0 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_dffs_0 : std_logic;
SIGNAL ww_muxsel3 : std_logic;
SIGNAL ww_muxsel2 : std_logic;
SIGNAL ww_cmd_snd0 : std_logic;
SIGNAL ww_dffs_1 : std_logic;
SIGNAL ww_q_9 : std_logic;
SIGNAL ww_q_1 : std_logic;
SIGNAL ww_cmd_snd1 : std_logic;
SIGNAL ww_dffs_2 : std_logic;
SIGNAL ww_SRG_8 : std_logic;
SIGNAL ww_SRG_0 : std_logic;
SIGNAL ww_SRG_24 : std_logic;
SIGNAL ww_SRG_16 : std_logic;
SIGNAL ww_dffs_01 : std_logic;
SIGNAL ww_dffs_02 : std_logic;
SIGNAL ww_q_2 : std_logic;
SIGNAL ww_dffs_21 : std_logic;
SIGNAL ww_dffs_22 : std_logic;
SIGNAL ww_dffs_3 : std_logic;
SIGNAL ww_SRG_7 : std_logic;
SIGNAL ww_SRG_31 : std_logic;
SIGNAL ww_SRG_23 : std_logic;
SIGNAL ww_SRG_15 : std_logic;
SIGNAL ww_dffs_11 : std_logic;
SIGNAL ww_dffs_12 : std_logic;
SIGNAL ww_SRG_9 : std_logic;
SIGNAL ww_SRG_1 : std_logic;
SIGNAL ww_SRG_25 : std_logic;
SIGNAL ww_SRG_17 : std_logic;
SIGNAL ww_dffs_31 : std_logic;
SIGNAL ww_dffs_32 : std_logic;
SIGNAL ww_q_3 : std_logic;
SIGNAL ww_dffs_4 : std_logic;
SIGNAL ww_SRG_6 : std_logic;
SIGNAL ww_SRG_30 : std_logic;
SIGNAL ww_SRG_22 : std_logic;
SIGNAL ww_SRG_14 : std_logic;
SIGNAL ww_SRG_10 : std_logic;
SIGNAL ww_SRG_2 : std_logic;
SIGNAL ww_SRG_26 : std_logic;
SIGNAL ww_SRG_18 : std_logic;
SIGNAL ww_dffs_41 : std_logic;
SIGNAL ww_dffs_42 : std_logic;
SIGNAL ww_q_4 : std_logic;
SIGNAL ww_dffs_5 : std_logic;
SIGNAL ww_SRG_5 : std_logic;
SIGNAL ww_SRG_29 : std_logic;
SIGNAL ww_SRG_21 : std_logic;
SIGNAL ww_SRG_13 : std_logic;
SIGNAL ww_dffs_51 : std_logic;
SIGNAL ww_dffs_52 : std_logic;
SIGNAL ww_SRG_11 : std_logic;
SIGNAL ww_SRG_3 : std_logic;
SIGNAL ww_SRG_27 : std_logic;
SIGNAL ww_SRG_19 : std_logic;
SIGNAL ww_cmd_snd3 : std_logic;
SIGNAL ww_q_5 : std_logic;
SIGNAL ww_dffs_6 : std_logic;
SIGNAL ww_SRG_4 : std_logic;
SIGNAL ww_SRG_28 : std_logic;
SIGNAL ww_SRG_20 : std_logic;
SIGNAL ww_SRG_12 : std_logic;
SIGNAL ww_dffs_61 : std_logic;
SIGNAL ww_dffs_62 : std_logic;
SIGNAL ww_q_6 : std_logic;
SIGNAL ww_dffs_7 : std_logic;
SIGNAL ww_q_7 : std_logic;
SIGNAL ww_dffs_71 : std_logic;
SIGNAL ww_dffs_72 : std_logic;
SIGNAL ww_dom_adr_en : std_logic;
SIGNAL ww_A_nB : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL ww_result_node1 : std_logic;
SIGNAL ww_result_node2 : std_logic;
SIGNAL ww_result_node3 : std_logic;
SIGNAL ww_result_node4 : std_logic;
SIGNAL ww_result_node5 : std_logic;
SIGNAL ww_result_node6 : std_logic;
SIGNAL ww_result_node7 : std_logic;
SIGNAL ww_result_node8 : std_logic;
SIGNAL ww_result_node9 : std_logic;
SIGNAL ww_result_node10 : std_logic;
SIGNAL ww_result_node11 : std_logic;
SIGNAL ww_result_node12 : std_logic;
SIGNAL ww_result_node13 : std_logic;
SIGNAL ww_result_node14 : std_logic;
SIGNAL ww_result_node15 : std_logic;

COMPONENT muxlut_10
    PORT (
	portadataout_0 : IN std_logic;
	portadataout_8 : IN std_logic;
	portadataout_16 : IN std_logic;
	portadataout_24 : IN std_logic;
	sreg : IN std_logic;
	muxsel1 : IN std_logic;
	q_8 : IN std_logic;
	q_0 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	cmd_snd0 : IN std_logic;
	SRG_8 : IN std_logic;
	SRG_0 : IN std_logic;
	SRG_24 : IN std_logic;
	SRG_16 : IN std_logic;
	dffs_01 : IN std_logic;
	dffs_02 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic;
	result_node1 : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_20
    PORT (
	portadataout_1 : IN std_logic;
	portadataout_9 : IN std_logic;
	portadataout_17 : IN std_logic;
	portadataout_25 : IN std_logic;
	sreg : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	dffs_1 : IN std_logic;
	q_9 : IN std_logic;
	q_1 : IN std_logic;
	cmd_snd1 : IN std_logic;
	dffs_11 : IN std_logic;
	dffs_12 : IN std_logic;
	SRG_9 : IN std_logic;
	SRG_1 : IN std_logic;
	SRG_25 : IN std_logic;
	SRG_17 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic;
	result_node1 : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_30
    PORT (
	portadataout_2 : IN std_logic;
	portadataout_10 : IN std_logic;
	portadataout_18 : IN std_logic;
	portadataout_26 : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	cmd_snd1 : IN std_logic;
	dffs_2 : IN std_logic;
	q_2 : IN std_logic;
	dffs_21 : IN std_logic;
	dffs_22 : IN std_logic;
	SRG_10 : IN std_logic;
	SRG_2 : IN std_logic;
	SRG_26 : IN std_logic;
	SRG_18 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic;
	result_node1 : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_40
    PORT (
	portadataout_3 : IN std_logic;
	portadataout_11 : IN std_logic;
	portadataout_19 : IN std_logic;
	portadataout_27 : IN std_logic;
	sreg : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	dffs_3 : IN std_logic;
	dffs_31 : IN std_logic;
	dffs_32 : IN std_logic;
	q_3 : IN std_logic;
	SRG_11 : IN std_logic;
	SRG_3 : IN std_logic;
	SRG_27 : IN std_logic;
	SRG_19 : IN std_logic;
	cmd_snd3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic;
	result_node1 : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_50
    PORT (
	portadataout_4 : IN std_logic;
	portadataout_12 : IN std_logic;
	portadataout_20 : IN std_logic;
	portadataout_28 : IN std_logic;
	sreg : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	dffs_4 : IN std_logic;
	dffs_41 : IN std_logic;
	dffs_42 : IN std_logic;
	q_4 : IN std_logic;
	SRG_4 : IN std_logic;
	SRG_28 : IN std_logic;
	SRG_20 : IN std_logic;
	SRG_12 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic;
	result_node1 : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_60
    PORT (
	portadataout_5 : IN std_logic;
	portadataout_13 : IN std_logic;
	portadataout_21 : IN std_logic;
	portadataout_29 : IN std_logic;
	sreg : IN std_logic;
	send_ctrl : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	dffs_5 : IN std_logic;
	SRG_5 : IN std_logic;
	SRG_29 : IN std_logic;
	SRG_21 : IN std_logic;
	SRG_13 : IN std_logic;
	dffs_51 : IN std_logic;
	dffs_52 : IN std_logic;
	q_5 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic;
	result_node1 : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_70
    PORT (
	portadataout_6 : IN std_logic;
	portadataout_14 : IN std_logic;
	portadataout_22 : IN std_logic;
	portadataout_30 : IN std_logic;
	sreg : IN std_logic;
	send_ctrl : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	SRG_6 : IN std_logic;
	SRG_30 : IN std_logic;
	SRG_22 : IN std_logic;
	SRG_14 : IN std_logic;
	dffs_6 : IN std_logic;
	dffs_61 : IN std_logic;
	dffs_62 : IN std_logic;
	q_6 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic;
	result_node1 : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_80
    PORT (
	portadataout_7 : IN std_logic;
	portadataout_15 : IN std_logic;
	portadataout_23 : IN std_logic;
	portadataout_31 : IN std_logic;
	muxsel1 : IN std_logic;
	muxsel0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	SRG_7 : IN std_logic;
	SRG_31 : IN std_logic;
	SRG_23 : IN std_logic;
	SRG_15 : IN std_logic;
	dffs_7 : IN std_logic;
	q_7 : IN std_logic;
	dffs_71 : IN std_logic;
	dffs_72 : IN std_logic;
	dom_adr_en : IN std_logic;
	A_nB : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic;
	result_node1 : OUT std_logic);
END COMPONENT;

BEGIN

ww_portadataout_0 <= portadataout_0;
ww_portadataout_1 <= portadataout_1;
ww_portadataout_2 <= portadataout_2;
ww_portadataout_3 <= portadataout_3;
ww_portadataout_4 <= portadataout_4;
ww_portadataout_5 <= portadataout_5;
ww_portadataout_6 <= portadataout_6;
ww_portadataout_7 <= portadataout_7;
ww_portadataout_8 <= portadataout_8;
ww_portadataout_9 <= portadataout_9;
ww_portadataout_10 <= portadataout_10;
ww_portadataout_11 <= portadataout_11;
ww_portadataout_12 <= portadataout_12;
ww_portadataout_13 <= portadataout_13;
ww_portadataout_14 <= portadataout_14;
ww_portadataout_15 <= portadataout_15;
ww_portadataout_16 <= portadataout_16;
ww_portadataout_17 <= portadataout_17;
ww_portadataout_18 <= portadataout_18;
ww_portadataout_19 <= portadataout_19;
ww_portadataout_20 <= portadataout_20;
ww_portadataout_21 <= portadataout_21;
ww_portadataout_22 <= portadataout_22;
ww_portadataout_23 <= portadataout_23;
ww_portadataout_24 <= portadataout_24;
ww_portadataout_25 <= portadataout_25;
ww_portadataout_26 <= portadataout_26;
ww_portadataout_27 <= portadataout_27;
ww_portadataout_28 <= portadataout_28;
ww_portadataout_29 <= portadataout_29;
ww_portadataout_30 <= portadataout_30;
ww_portadataout_31 <= portadataout_31;
ww_sreg <= sreg;
ww_sreg1 <= sreg1;
ww_send_ctrl <= send_ctrl;
ww_muxsel1 <= muxsel1;
ww_q_8 <= q_8;
ww_q_0 <= q_0;
ww_muxsel0 <= muxsel0;
ww_dffs_0 <= dffs_0;
ww_muxsel3 <= muxsel3;
ww_muxsel2 <= muxsel2;
ww_cmd_snd0 <= cmd_snd0;
ww_dffs_1 <= dffs_1;
ww_q_9 <= q_9;
ww_q_1 <= q_1;
ww_cmd_snd1 <= cmd_snd1;
ww_dffs_2 <= dffs_2;
ww_SRG_8 <= SRG_8;
ww_SRG_0 <= SRG_0;
ww_SRG_24 <= SRG_24;
ww_SRG_16 <= SRG_16;
ww_dffs_01 <= dffs_01;
ww_dffs_02 <= dffs_02;
ww_q_2 <= q_2;
ww_dffs_21 <= dffs_21;
ww_dffs_22 <= dffs_22;
ww_dffs_3 <= dffs_3;
ww_SRG_7 <= SRG_7;
ww_SRG_31 <= SRG_31;
ww_SRG_23 <= SRG_23;
ww_SRG_15 <= SRG_15;
ww_dffs_11 <= dffs_11;
ww_dffs_12 <= dffs_12;
ww_SRG_9 <= SRG_9;
ww_SRG_1 <= SRG_1;
ww_SRG_25 <= SRG_25;
ww_SRG_17 <= SRG_17;
ww_dffs_31 <= dffs_31;
ww_dffs_32 <= dffs_32;
ww_q_3 <= q_3;
ww_dffs_4 <= dffs_4;
ww_SRG_6 <= SRG_6;
ww_SRG_30 <= SRG_30;
ww_SRG_22 <= SRG_22;
ww_SRG_14 <= SRG_14;
ww_SRG_10 <= SRG_10;
ww_SRG_2 <= SRG_2;
ww_SRG_26 <= SRG_26;
ww_SRG_18 <= SRG_18;
ww_dffs_41 <= dffs_41;
ww_dffs_42 <= dffs_42;
ww_q_4 <= q_4;
ww_dffs_5 <= dffs_5;
ww_SRG_5 <= SRG_5;
ww_SRG_29 <= SRG_29;
ww_SRG_21 <= SRG_21;
ww_SRG_13 <= SRG_13;
ww_dffs_51 <= dffs_51;
ww_dffs_52 <= dffs_52;
ww_SRG_11 <= SRG_11;
ww_SRG_3 <= SRG_3;
ww_SRG_27 <= SRG_27;
ww_SRG_19 <= SRG_19;
ww_cmd_snd3 <= cmd_snd3;
ww_q_5 <= q_5;
ww_dffs_6 <= dffs_6;
ww_SRG_4 <= SRG_4;
ww_SRG_28 <= SRG_28;
ww_SRG_20 <= SRG_20;
ww_SRG_12 <= SRG_12;
ww_dffs_61 <= dffs_61;
ww_dffs_62 <= dffs_62;
ww_q_6 <= q_6;
ww_dffs_7 <= dffs_7;
ww_q_7 <= q_7;
ww_dffs_71 <= dffs_71;
ww_dffs_72 <= dffs_72;
ww_dom_adr_en <= dom_adr_en;
ww_A_nB <= A_nB;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;
result_node1 <= ww_result_node1;
result_node2 <= ww_result_node2;
result_node3 <= ww_result_node3;
result_node4 <= ww_result_node4;
result_node5 <= ww_result_node5;
result_node6 <= ww_result_node6;
result_node7 <= ww_result_node7;
result_node8 <= ww_result_node8;
result_node9 <= ww_result_node9;
result_node10 <= ww_result_node10;
result_node11 <= ww_result_node11;
result_node12 <= ww_result_node12;
result_node13 <= ww_result_node13;
result_node14 <= ww_result_node14;
result_node15 <= ww_result_node15;
\$00010\ : muxlut_10
PORT MAP (
	portadataout_0 => ww_portadataout_0,
	portadataout_8 => ww_portadataout_8,
	portadataout_16 => ww_portadataout_16,
	portadataout_24 => ww_portadataout_24,
	sreg => ww_sreg,
	muxsel1 => ww_muxsel1,
	q_8 => ww_q_8,
	q_0 => ww_q_0,
	muxsel0 => ww_muxsel0,
	dffs_0 => ww_dffs_0,
	muxsel3 => ww_muxsel3,
	muxsel2 => ww_muxsel2,
	cmd_snd0 => ww_cmd_snd0,
	SRG_8 => ww_SRG_8,
	SRG_0 => ww_SRG_0,
	SRG_24 => ww_SRG_24,
	SRG_16 => ww_SRG_16,
	dffs_01 => ww_dffs_01,
	dffs_02 => ww_dffs_02,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node,
	result_node1 => ww_result_node1);
\$00012\ : muxlut_20
PORT MAP (
	portadataout_1 => ww_portadataout_1,
	portadataout_9 => ww_portadataout_9,
	portadataout_17 => ww_portadataout_17,
	portadataout_25 => ww_portadataout_25,
	sreg => ww_sreg1,
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	muxsel3 => ww_muxsel3,
	muxsel2 => ww_muxsel2,
	dffs_1 => ww_dffs_1,
	q_9 => ww_q_9,
	q_1 => ww_q_1,
	cmd_snd1 => ww_cmd_snd1,
	dffs_11 => ww_dffs_11,
	dffs_12 => ww_dffs_12,
	SRG_9 => ww_SRG_9,
	SRG_1 => ww_SRG_1,
	SRG_25 => ww_SRG_25,
	SRG_17 => ww_SRG_17,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node2,
	result_node1 => ww_result_node3);
\$00014\ : muxlut_30
PORT MAP (
	portadataout_2 => ww_portadataout_2,
	portadataout_10 => ww_portadataout_10,
	portadataout_18 => ww_portadataout_18,
	portadataout_26 => ww_portadataout_26,
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	muxsel3 => ww_muxsel3,
	muxsel2 => ww_muxsel2,
	cmd_snd1 => ww_cmd_snd1,
	dffs_2 => ww_dffs_2,
	q_2 => ww_q_2,
	dffs_21 => ww_dffs_21,
	dffs_22 => ww_dffs_22,
	SRG_10 => ww_SRG_10,
	SRG_2 => ww_SRG_2,
	SRG_26 => ww_SRG_26,
	SRG_18 => ww_SRG_18,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node4,
	result_node1 => ww_result_node5);
\$00016\ : muxlut_40
PORT MAP (
	portadataout_3 => ww_portadataout_3,
	portadataout_11 => ww_portadataout_11,
	portadataout_19 => ww_portadataout_19,
	portadataout_27 => ww_portadataout_27,
	sreg => ww_sreg1,
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	muxsel3 => ww_muxsel3,
	muxsel2 => ww_muxsel2,
	dffs_3 => ww_dffs_3,
	dffs_31 => ww_dffs_31,
	dffs_32 => ww_dffs_32,
	q_3 => ww_q_3,
	SRG_11 => ww_SRG_11,
	SRG_3 => ww_SRG_3,
	SRG_27 => ww_SRG_27,
	SRG_19 => ww_SRG_19,
	cmd_snd3 => ww_cmd_snd3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node6,
	result_node1 => ww_result_node7);
\$00018\ : muxlut_50
PORT MAP (
	portadataout_4 => ww_portadataout_4,
	portadataout_12 => ww_portadataout_12,
	portadataout_20 => ww_portadataout_20,
	portadataout_28 => ww_portadataout_28,
	sreg => ww_sreg,
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	muxsel3 => ww_muxsel3,
	muxsel2 => ww_muxsel2,
	dffs_4 => ww_dffs_4,
	dffs_41 => ww_dffs_41,
	dffs_42 => ww_dffs_42,
	q_4 => ww_q_4,
	SRG_4 => ww_SRG_4,
	SRG_28 => ww_SRG_28,
	SRG_20 => ww_SRG_20,
	SRG_12 => ww_SRG_12,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node8,
	result_node1 => ww_result_node9);
\$00020\ : muxlut_60
PORT MAP (
	portadataout_5 => ww_portadataout_5,
	portadataout_13 => ww_portadataout_13,
	portadataout_21 => ww_portadataout_21,
	portadataout_29 => ww_portadataout_29,
	sreg => ww_sreg,
	send_ctrl => ww_send_ctrl,
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	muxsel3 => ww_muxsel3,
	muxsel2 => ww_muxsel2,
	dffs_5 => ww_dffs_5,
	SRG_5 => ww_SRG_5,
	SRG_29 => ww_SRG_29,
	SRG_21 => ww_SRG_21,
	SRG_13 => ww_SRG_13,
	dffs_51 => ww_dffs_51,
	dffs_52 => ww_dffs_52,
	q_5 => ww_q_5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node10,
	result_node1 => ww_result_node11);
\$00022\ : muxlut_70
PORT MAP (
	portadataout_6 => ww_portadataout_6,
	portadataout_14 => ww_portadataout_14,
	portadataout_22 => ww_portadataout_22,
	portadataout_30 => ww_portadataout_30,
	sreg => ww_sreg,
	send_ctrl => ww_send_ctrl,
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	muxsel3 => ww_muxsel3,
	muxsel2 => ww_muxsel2,
	SRG_6 => ww_SRG_6,
	SRG_30 => ww_SRG_30,
	SRG_22 => ww_SRG_22,
	SRG_14 => ww_SRG_14,
	dffs_6 => ww_dffs_6,
	dffs_61 => ww_dffs_61,
	dffs_62 => ww_dffs_62,
	q_6 => ww_q_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node12,
	result_node1 => ww_result_node13);
\$00024\ : muxlut_80
PORT MAP (
	portadataout_7 => ww_portadataout_7,
	portadataout_15 => ww_portadataout_15,
	portadataout_23 => ww_portadataout_23,
	portadataout_31 => ww_portadataout_31,
	muxsel1 => ww_muxsel1,
	muxsel0 => ww_muxsel0,
	muxsel3 => ww_muxsel3,
	muxsel2 => ww_muxsel2,
	SRG_7 => ww_SRG_7,
	SRG_31 => ww_SRG_31,
	SRG_23 => ww_SRG_23,
	SRG_15 => ww_SRG_15,
	dffs_7 => ww_dffs_7,
	q_7 => ww_q_7,
	dffs_71 => ww_dffs_71,
	dffs_72 => ww_dffs_72,
	dom_adr_en => ww_dom_adr_en,
	A_nB => ww_A_nB,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node14,
	result_node1 => ww_result_node15);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	dc_tx_mux IS
    PORT (
	portadataout_0 : IN std_logic;
	portadataout_1 : IN std_logic;
	portadataout_2 : IN std_logic;
	portadataout_3 : IN std_logic;
	portadataout_4 : IN std_logic;
	portadataout_5 : IN std_logic;
	portadataout_6 : IN std_logic;
	portadataout_7 : IN std_logic;
	portadataout_8 : IN std_logic;
	portadataout_9 : IN std_logic;
	portadataout_10 : IN std_logic;
	portadataout_11 : IN std_logic;
	portadataout_12 : IN std_logic;
	portadataout_13 : IN std_logic;
	portadataout_14 : IN std_logic;
	portadataout_15 : IN std_logic;
	portadataout_16 : IN std_logic;
	portadataout_17 : IN std_logic;
	portadataout_18 : IN std_logic;
	portadataout_19 : IN std_logic;
	portadataout_20 : IN std_logic;
	portadataout_21 : IN std_logic;
	portadataout_22 : IN std_logic;
	portadataout_23 : IN std_logic;
	portadataout_24 : IN std_logic;
	portadataout_25 : IN std_logic;
	portadataout_26 : IN std_logic;
	portadataout_27 : IN std_logic;
	portadataout_28 : IN std_logic;
	portadataout_29 : IN std_logic;
	portadataout_30 : IN std_logic;
	portadataout_31 : IN std_logic;
	sreg : IN std_logic;
	sreg1 : IN std_logic;
	send_ctrl : IN std_logic;
	muxsel1 : IN std_logic;
	q_8 : IN std_logic;
	q_0 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	cmd_snd0 : IN std_logic;
	dffs_1 : IN std_logic;
	q_9 : IN std_logic;
	q_1 : IN std_logic;
	cmd_snd1 : IN std_logic;
	dffs_2 : IN std_logic;
	SRG_8 : IN std_logic;
	SRG_0 : IN std_logic;
	SRG_24 : IN std_logic;
	SRG_16 : IN std_logic;
	dffs_01 : IN std_logic;
	dffs_02 : IN std_logic;
	q_2 : IN std_logic;
	dffs_21 : IN std_logic;
	dffs_22 : IN std_logic;
	dffs_3 : IN std_logic;
	SRG_7 : IN std_logic;
	SRG_31 : IN std_logic;
	SRG_23 : IN std_logic;
	SRG_15 : IN std_logic;
	dffs_11 : IN std_logic;
	dffs_12 : IN std_logic;
	SRG_9 : IN std_logic;
	SRG_1 : IN std_logic;
	SRG_25 : IN std_logic;
	SRG_17 : IN std_logic;
	dffs_31 : IN std_logic;
	dffs_32 : IN std_logic;
	q_3 : IN std_logic;
	dffs_4 : IN std_logic;
	SRG_6 : IN std_logic;
	SRG_30 : IN std_logic;
	SRG_22 : IN std_logic;
	SRG_14 : IN std_logic;
	SRG_10 : IN std_logic;
	SRG_2 : IN std_logic;
	SRG_26 : IN std_logic;
	SRG_18 : IN std_logic;
	dffs_41 : IN std_logic;
	dffs_42 : IN std_logic;
	q_4 : IN std_logic;
	dffs_5 : IN std_logic;
	SRG_5 : IN std_logic;
	SRG_29 : IN std_logic;
	SRG_21 : IN std_logic;
	SRG_13 : IN std_logic;
	dffs_51 : IN std_logic;
	dffs_52 : IN std_logic;
	SRG_11 : IN std_logic;
	SRG_3 : IN std_logic;
	SRG_27 : IN std_logic;
	SRG_19 : IN std_logic;
	cmd_snd3 : IN std_logic;
	q_5 : IN std_logic;
	dffs_6 : IN std_logic;
	SRG_4 : IN std_logic;
	SRG_28 : IN std_logic;
	SRG_20 : IN std_logic;
	SRG_12 : IN std_logic;
	dffs_61 : IN std_logic;
	dffs_62 : IN std_logic;
	q_6 : IN std_logic;
	dffs_7 : IN std_logic;
	q_7 : IN std_logic;
	dffs_71 : IN std_logic;
	dffs_72 : IN std_logic;
	dom_adr_en : IN std_logic;
	A_nB : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic;
	result_node1 : OUT std_logic;
	result_node2 : OUT std_logic;
	result_node3 : OUT std_logic;
	result_node4 : OUT std_logic;
	result_node5 : OUT std_logic;
	result_node6 : OUT std_logic;
	result_node7 : OUT std_logic;
	result_node8 : OUT std_logic;
	result_node9 : OUT std_logic;
	result_node10 : OUT std_logic;
	result_node11 : OUT std_logic;
	result_node12 : OUT std_logic;
	result_node13 : OUT std_logic;
	result_node14 : OUT std_logic;
	result_node15 : OUT std_logic
	);
END dc_tx_mux;

ARCHITECTURE structure OF dc_tx_mux IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_portadataout_0 : std_logic;
SIGNAL ww_portadataout_1 : std_logic;
SIGNAL ww_portadataout_2 : std_logic;
SIGNAL ww_portadataout_3 : std_logic;
SIGNAL ww_portadataout_4 : std_logic;
SIGNAL ww_portadataout_5 : std_logic;
SIGNAL ww_portadataout_6 : std_logic;
SIGNAL ww_portadataout_7 : std_logic;
SIGNAL ww_portadataout_8 : std_logic;
SIGNAL ww_portadataout_9 : std_logic;
SIGNAL ww_portadataout_10 : std_logic;
SIGNAL ww_portadataout_11 : std_logic;
SIGNAL ww_portadataout_12 : std_logic;
SIGNAL ww_portadataout_13 : std_logic;
SIGNAL ww_portadataout_14 : std_logic;
SIGNAL ww_portadataout_15 : std_logic;
SIGNAL ww_portadataout_16 : std_logic;
SIGNAL ww_portadataout_17 : std_logic;
SIGNAL ww_portadataout_18 : std_logic;
SIGNAL ww_portadataout_19 : std_logic;
SIGNAL ww_portadataout_20 : std_logic;
SIGNAL ww_portadataout_21 : std_logic;
SIGNAL ww_portadataout_22 : std_logic;
SIGNAL ww_portadataout_23 : std_logic;
SIGNAL ww_portadataout_24 : std_logic;
SIGNAL ww_portadataout_25 : std_logic;
SIGNAL ww_portadataout_26 : std_logic;
SIGNAL ww_portadataout_27 : std_logic;
SIGNAL ww_portadataout_28 : std_logic;
SIGNAL ww_portadataout_29 : std_logic;
SIGNAL ww_portadataout_30 : std_logic;
SIGNAL ww_portadataout_31 : std_logic;
SIGNAL ww_sreg : std_logic;
SIGNAL ww_sreg1 : std_logic;
SIGNAL ww_send_ctrl : std_logic;
SIGNAL ww_muxsel1 : std_logic;
SIGNAL ww_q_8 : std_logic;
SIGNAL ww_q_0 : std_logic;
SIGNAL ww_muxsel0 : std_logic;
SIGNAL ww_dffs_0 : std_logic;
SIGNAL ww_muxsel3 : std_logic;
SIGNAL ww_muxsel2 : std_logic;
SIGNAL ww_cmd_snd0 : std_logic;
SIGNAL ww_dffs_1 : std_logic;
SIGNAL ww_q_9 : std_logic;
SIGNAL ww_q_1 : std_logic;
SIGNAL ww_cmd_snd1 : std_logic;
SIGNAL ww_dffs_2 : std_logic;
SIGNAL ww_SRG_8 : std_logic;
SIGNAL ww_SRG_0 : std_logic;
SIGNAL ww_SRG_24 : std_logic;
SIGNAL ww_SRG_16 : std_logic;
SIGNAL ww_dffs_01 : std_logic;
SIGNAL ww_dffs_02 : std_logic;
SIGNAL ww_q_2 : std_logic;
SIGNAL ww_dffs_21 : std_logic;
SIGNAL ww_dffs_22 : std_logic;
SIGNAL ww_dffs_3 : std_logic;
SIGNAL ww_SRG_7 : std_logic;
SIGNAL ww_SRG_31 : std_logic;
SIGNAL ww_SRG_23 : std_logic;
SIGNAL ww_SRG_15 : std_logic;
SIGNAL ww_dffs_11 : std_logic;
SIGNAL ww_dffs_12 : std_logic;
SIGNAL ww_SRG_9 : std_logic;
SIGNAL ww_SRG_1 : std_logic;
SIGNAL ww_SRG_25 : std_logic;
SIGNAL ww_SRG_17 : std_logic;
SIGNAL ww_dffs_31 : std_logic;
SIGNAL ww_dffs_32 : std_logic;
SIGNAL ww_q_3 : std_logic;
SIGNAL ww_dffs_4 : std_logic;
SIGNAL ww_SRG_6 : std_logic;
SIGNAL ww_SRG_30 : std_logic;
SIGNAL ww_SRG_22 : std_logic;
SIGNAL ww_SRG_14 : std_logic;
SIGNAL ww_SRG_10 : std_logic;
SIGNAL ww_SRG_2 : std_logic;
SIGNAL ww_SRG_26 : std_logic;
SIGNAL ww_SRG_18 : std_logic;
SIGNAL ww_dffs_41 : std_logic;
SIGNAL ww_dffs_42 : std_logic;
SIGNAL ww_q_4 : std_logic;
SIGNAL ww_dffs_5 : std_logic;
SIGNAL ww_SRG_5 : std_logic;
SIGNAL ww_SRG_29 : std_logic;
SIGNAL ww_SRG_21 : std_logic;
SIGNAL ww_SRG_13 : std_logic;
SIGNAL ww_dffs_51 : std_logic;
SIGNAL ww_dffs_52 : std_logic;
SIGNAL ww_SRG_11 : std_logic;
SIGNAL ww_SRG_3 : std_logic;
SIGNAL ww_SRG_27 : std_logic;
SIGNAL ww_SRG_19 : std_logic;
SIGNAL ww_cmd_snd3 : std_logic;
SIGNAL ww_q_5 : std_logic;
SIGNAL ww_dffs_6 : std_logic;
SIGNAL ww_SRG_4 : std_logic;
SIGNAL ww_SRG_28 : std_logic;
SIGNAL ww_SRG_20 : std_logic;
SIGNAL ww_SRG_12 : std_logic;
SIGNAL ww_dffs_61 : std_logic;
SIGNAL ww_dffs_62 : std_logic;
SIGNAL ww_q_6 : std_logic;
SIGNAL ww_dffs_7 : std_logic;
SIGNAL ww_q_7 : std_logic;
SIGNAL ww_dffs_71 : std_logic;
SIGNAL ww_dffs_72 : std_logic;
SIGNAL ww_dom_adr_en : std_logic;
SIGNAL ww_A_nB : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL ww_result_node1 : std_logic;
SIGNAL ww_result_node2 : std_logic;
SIGNAL ww_result_node3 : std_logic;
SIGNAL ww_result_node4 : std_logic;
SIGNAL ww_result_node5 : std_logic;
SIGNAL ww_result_node6 : std_logic;
SIGNAL ww_result_node7 : std_logic;
SIGNAL ww_result_node8 : std_logic;
SIGNAL ww_result_node9 : std_logic;
SIGNAL ww_result_node10 : std_logic;
SIGNAL ww_result_node11 : std_logic;
SIGNAL ww_result_node12 : std_logic;
SIGNAL ww_result_node13 : std_logic;
SIGNAL ww_result_node14 : std_logic;
SIGNAL ww_result_node15 : std_logic;

COMPONENT lpm_mux_1
    PORT (
	portadataout_0 : IN std_logic;
	portadataout_1 : IN std_logic;
	portadataout_2 : IN std_logic;
	portadataout_3 : IN std_logic;
	portadataout_4 : IN std_logic;
	portadataout_5 : IN std_logic;
	portadataout_6 : IN std_logic;
	portadataout_7 : IN std_logic;
	portadataout_8 : IN std_logic;
	portadataout_9 : IN std_logic;
	portadataout_10 : IN std_logic;
	portadataout_11 : IN std_logic;
	portadataout_12 : IN std_logic;
	portadataout_13 : IN std_logic;
	portadataout_14 : IN std_logic;
	portadataout_15 : IN std_logic;
	portadataout_16 : IN std_logic;
	portadataout_17 : IN std_logic;
	portadataout_18 : IN std_logic;
	portadataout_19 : IN std_logic;
	portadataout_20 : IN std_logic;
	portadataout_21 : IN std_logic;
	portadataout_22 : IN std_logic;
	portadataout_23 : IN std_logic;
	portadataout_24 : IN std_logic;
	portadataout_25 : IN std_logic;
	portadataout_26 : IN std_logic;
	portadataout_27 : IN std_logic;
	portadataout_28 : IN std_logic;
	portadataout_29 : IN std_logic;
	portadataout_30 : IN std_logic;
	portadataout_31 : IN std_logic;
	sreg : IN std_logic;
	sreg1 : IN std_logic;
	send_ctrl : IN std_logic;
	muxsel1 : IN std_logic;
	q_8 : IN std_logic;
	q_0 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	cmd_snd0 : IN std_logic;
	dffs_1 : IN std_logic;
	q_9 : IN std_logic;
	q_1 : IN std_logic;
	cmd_snd1 : IN std_logic;
	dffs_2 : IN std_logic;
	SRG_8 : IN std_logic;
	SRG_0 : IN std_logic;
	SRG_24 : IN std_logic;
	SRG_16 : IN std_logic;
	dffs_01 : IN std_logic;
	dffs_02 : IN std_logic;
	q_2 : IN std_logic;
	dffs_21 : IN std_logic;
	dffs_22 : IN std_logic;
	dffs_3 : IN std_logic;
	SRG_7 : IN std_logic;
	SRG_31 : IN std_logic;
	SRG_23 : IN std_logic;
	SRG_15 : IN std_logic;
	dffs_11 : IN std_logic;
	dffs_12 : IN std_logic;
	SRG_9 : IN std_logic;
	SRG_1 : IN std_logic;
	SRG_25 : IN std_logic;
	SRG_17 : IN std_logic;
	dffs_31 : IN std_logic;
	dffs_32 : IN std_logic;
	q_3 : IN std_logic;
	dffs_4 : IN std_logic;
	SRG_6 : IN std_logic;
	SRG_30 : IN std_logic;
	SRG_22 : IN std_logic;
	SRG_14 : IN std_logic;
	SRG_10 : IN std_logic;
	SRG_2 : IN std_logic;
	SRG_26 : IN std_logic;
	SRG_18 : IN std_logic;
	dffs_41 : IN std_logic;
	dffs_42 : IN std_logic;
	q_4 : IN std_logic;
	dffs_5 : IN std_logic;
	SRG_5 : IN std_logic;
	SRG_29 : IN std_logic;
	SRG_21 : IN std_logic;
	SRG_13 : IN std_logic;
	dffs_51 : IN std_logic;
	dffs_52 : IN std_logic;
	SRG_11 : IN std_logic;
	SRG_3 : IN std_logic;
	SRG_27 : IN std_logic;
	SRG_19 : IN std_logic;
	cmd_snd3 : IN std_logic;
	q_5 : IN std_logic;
	dffs_6 : IN std_logic;
	SRG_4 : IN std_logic;
	SRG_28 : IN std_logic;
	SRG_20 : IN std_logic;
	SRG_12 : IN std_logic;
	dffs_61 : IN std_logic;
	dffs_62 : IN std_logic;
	q_6 : IN std_logic;
	dffs_7 : IN std_logic;
	q_7 : IN std_logic;
	dffs_71 : IN std_logic;
	dffs_72 : IN std_logic;
	dom_adr_en : IN std_logic;
	A_nB : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic;
	result_node1 : OUT std_logic;
	result_node2 : OUT std_logic;
	result_node3 : OUT std_logic;
	result_node4 : OUT std_logic;
	result_node5 : OUT std_logic;
	result_node6 : OUT std_logic;
	result_node7 : OUT std_logic;
	result_node8 : OUT std_logic;
	result_node9 : OUT std_logic;
	result_node10 : OUT std_logic;
	result_node11 : OUT std_logic;
	result_node12 : OUT std_logic;
	result_node13 : OUT std_logic;
	result_node14 : OUT std_logic;
	result_node15 : OUT std_logic);
END COMPONENT;

BEGIN

ww_portadataout_0 <= portadataout_0;
ww_portadataout_1 <= portadataout_1;
ww_portadataout_2 <= portadataout_2;
ww_portadataout_3 <= portadataout_3;
ww_portadataout_4 <= portadataout_4;
ww_portadataout_5 <= portadataout_5;
ww_portadataout_6 <= portadataout_6;
ww_portadataout_7 <= portadataout_7;
ww_portadataout_8 <= portadataout_8;
ww_portadataout_9 <= portadataout_9;
ww_portadataout_10 <= portadataout_10;
ww_portadataout_11 <= portadataout_11;
ww_portadataout_12 <= portadataout_12;
ww_portadataout_13 <= portadataout_13;
ww_portadataout_14 <= portadataout_14;
ww_portadataout_15 <= portadataout_15;
ww_portadataout_16 <= portadataout_16;
ww_portadataout_17 <= portadataout_17;
ww_portadataout_18 <= portadataout_18;
ww_portadataout_19 <= portadataout_19;
ww_portadataout_20 <= portadataout_20;
ww_portadataout_21 <= portadataout_21;
ww_portadataout_22 <= portadataout_22;
ww_portadataout_23 <= portadataout_23;
ww_portadataout_24 <= portadataout_24;
ww_portadataout_25 <= portadataout_25;
ww_portadataout_26 <= portadataout_26;
ww_portadataout_27 <= portadataout_27;
ww_portadataout_28 <= portadataout_28;
ww_portadataout_29 <= portadataout_29;
ww_portadataout_30 <= portadataout_30;
ww_portadataout_31 <= portadataout_31;
ww_sreg <= sreg;
ww_sreg1 <= sreg1;
ww_send_ctrl <= send_ctrl;
ww_muxsel1 <= muxsel1;
ww_q_8 <= q_8;
ww_q_0 <= q_0;
ww_muxsel0 <= muxsel0;
ww_dffs_0 <= dffs_0;
ww_muxsel3 <= muxsel3;
ww_muxsel2 <= muxsel2;
ww_cmd_snd0 <= cmd_snd0;
ww_dffs_1 <= dffs_1;
ww_q_9 <= q_9;
ww_q_1 <= q_1;
ww_cmd_snd1 <= cmd_snd1;
ww_dffs_2 <= dffs_2;
ww_SRG_8 <= SRG_8;
ww_SRG_0 <= SRG_0;
ww_SRG_24 <= SRG_24;
ww_SRG_16 <= SRG_16;
ww_dffs_01 <= dffs_01;
ww_dffs_02 <= dffs_02;
ww_q_2 <= q_2;
ww_dffs_21 <= dffs_21;
ww_dffs_22 <= dffs_22;
ww_dffs_3 <= dffs_3;
ww_SRG_7 <= SRG_7;
ww_SRG_31 <= SRG_31;
ww_SRG_23 <= SRG_23;
ww_SRG_15 <= SRG_15;
ww_dffs_11 <= dffs_11;
ww_dffs_12 <= dffs_12;
ww_SRG_9 <= SRG_9;
ww_SRG_1 <= SRG_1;
ww_SRG_25 <= SRG_25;
ww_SRG_17 <= SRG_17;
ww_dffs_31 <= dffs_31;
ww_dffs_32 <= dffs_32;
ww_q_3 <= q_3;
ww_dffs_4 <= dffs_4;
ww_SRG_6 <= SRG_6;
ww_SRG_30 <= SRG_30;
ww_SRG_22 <= SRG_22;
ww_SRG_14 <= SRG_14;
ww_SRG_10 <= SRG_10;
ww_SRG_2 <= SRG_2;
ww_SRG_26 <= SRG_26;
ww_SRG_18 <= SRG_18;
ww_dffs_41 <= dffs_41;
ww_dffs_42 <= dffs_42;
ww_q_4 <= q_4;
ww_dffs_5 <= dffs_5;
ww_SRG_5 <= SRG_5;
ww_SRG_29 <= SRG_29;
ww_SRG_21 <= SRG_21;
ww_SRG_13 <= SRG_13;
ww_dffs_51 <= dffs_51;
ww_dffs_52 <= dffs_52;
ww_SRG_11 <= SRG_11;
ww_SRG_3 <= SRG_3;
ww_SRG_27 <= SRG_27;
ww_SRG_19 <= SRG_19;
ww_cmd_snd3 <= cmd_snd3;
ww_q_5 <= q_5;
ww_dffs_6 <= dffs_6;
ww_SRG_4 <= SRG_4;
ww_SRG_28 <= SRG_28;
ww_SRG_20 <= SRG_20;
ww_SRG_12 <= SRG_12;
ww_dffs_61 <= dffs_61;
ww_dffs_62 <= dffs_62;
ww_q_6 <= q_6;
ww_dffs_7 <= dffs_7;
ww_q_7 <= q_7;
ww_dffs_71 <= dffs_71;
ww_dffs_72 <= dffs_72;
ww_dom_adr_en <= dom_adr_en;
ww_A_nB <= A_nB;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
result_node <= ww_result_node;
result_node1 <= ww_result_node1;
result_node2 <= ww_result_node2;
result_node3 <= ww_result_node3;
result_node4 <= ww_result_node4;
result_node5 <= ww_result_node5;
result_node6 <= ww_result_node6;
result_node7 <= ww_result_node7;
result_node8 <= ww_result_node8;
result_node9 <= ww_result_node9;
result_node10 <= ww_result_node10;
result_node11 <= ww_result_node11;
result_node12 <= ww_result_node12;
result_node13 <= ww_result_node13;
result_node14 <= ww_result_node14;
result_node15 <= ww_result_node15;
lpm_mux_component : lpm_mux_1
PORT MAP (
	portadataout_0 => ww_portadataout_0,
	portadataout_1 => ww_portadataout_1,
	portadataout_2 => ww_portadataout_2,
	portadataout_3 => ww_portadataout_3,
	portadataout_4 => ww_portadataout_4,
	portadataout_5 => ww_portadataout_5,
	portadataout_6 => ww_portadataout_6,
	portadataout_7 => ww_portadataout_7,
	portadataout_8 => ww_portadataout_8,
	portadataout_9 => ww_portadataout_9,
	portadataout_10 => ww_portadataout_10,
	portadataout_11 => ww_portadataout_11,
	portadataout_12 => ww_portadataout_12,
	portadataout_13 => ww_portadataout_13,
	portadataout_14 => ww_portadataout_14,
	portadataout_15 => ww_portadataout_15,
	portadataout_16 => ww_portadataout_16,
	portadataout_17 => ww_portadataout_17,
	portadataout_18 => ww_portadataout_18,
	portadataout_19 => ww_portadataout_19,
	portadataout_20 => ww_portadataout_20,
	portadataout_21 => ww_portadataout_21,
	portadataout_22 => ww_portadataout_22,
	portadataout_23 => ww_portadataout_23,
	portadataout_24 => ww_portadataout_24,
	portadataout_25 => ww_portadataout_25,
	portadataout_26 => ww_portadataout_26,
	portadataout_27 => ww_portadataout_27,
	portadataout_28 => ww_portadataout_28,
	portadataout_29 => ww_portadataout_29,
	portadataout_30 => ww_portadataout_30,
	portadataout_31 => ww_portadataout_31,
	sreg => ww_sreg,
	sreg1 => ww_sreg1,
	send_ctrl => ww_send_ctrl,
	muxsel1 => ww_muxsel1,
	q_8 => ww_q_8,
	q_0 => ww_q_0,
	muxsel0 => ww_muxsel0,
	dffs_0 => ww_dffs_0,
	muxsel3 => ww_muxsel3,
	muxsel2 => ww_muxsel2,
	cmd_snd0 => ww_cmd_snd0,
	dffs_1 => ww_dffs_1,
	q_9 => ww_q_9,
	q_1 => ww_q_1,
	cmd_snd1 => ww_cmd_snd1,
	dffs_2 => ww_dffs_2,
	SRG_8 => ww_SRG_8,
	SRG_0 => ww_SRG_0,
	SRG_24 => ww_SRG_24,
	SRG_16 => ww_SRG_16,
	dffs_01 => ww_dffs_01,
	dffs_02 => ww_dffs_02,
	q_2 => ww_q_2,
	dffs_21 => ww_dffs_21,
	dffs_22 => ww_dffs_22,
	dffs_3 => ww_dffs_3,
	SRG_7 => ww_SRG_7,
	SRG_31 => ww_SRG_31,
	SRG_23 => ww_SRG_23,
	SRG_15 => ww_SRG_15,
	dffs_11 => ww_dffs_11,
	dffs_12 => ww_dffs_12,
	SRG_9 => ww_SRG_9,
	SRG_1 => ww_SRG_1,
	SRG_25 => ww_SRG_25,
	SRG_17 => ww_SRG_17,
	dffs_31 => ww_dffs_31,
	dffs_32 => ww_dffs_32,
	q_3 => ww_q_3,
	dffs_4 => ww_dffs_4,
	SRG_6 => ww_SRG_6,
	SRG_30 => ww_SRG_30,
	SRG_22 => ww_SRG_22,
	SRG_14 => ww_SRG_14,
	SRG_10 => ww_SRG_10,
	SRG_2 => ww_SRG_2,
	SRG_26 => ww_SRG_26,
	SRG_18 => ww_SRG_18,
	dffs_41 => ww_dffs_41,
	dffs_42 => ww_dffs_42,
	q_4 => ww_q_4,
	dffs_5 => ww_dffs_5,
	SRG_5 => ww_SRG_5,
	SRG_29 => ww_SRG_29,
	SRG_21 => ww_SRG_21,
	SRG_13 => ww_SRG_13,
	dffs_51 => ww_dffs_51,
	dffs_52 => ww_dffs_52,
	SRG_11 => ww_SRG_11,
	SRG_3 => ww_SRG_3,
	SRG_27 => ww_SRG_27,
	SRG_19 => ww_SRG_19,
	cmd_snd3 => ww_cmd_snd3,
	q_5 => ww_q_5,
	dffs_6 => ww_dffs_6,
	SRG_4 => ww_SRG_4,
	SRG_28 => ww_SRG_28,
	SRG_20 => ww_SRG_20,
	SRG_12 => ww_SRG_12,
	dffs_61 => ww_dffs_61,
	dffs_62 => ww_dffs_62,
	q_6 => ww_q_6,
	dffs_7 => ww_dffs_7,
	q_7 => ww_q_7,
	dffs_71 => ww_dffs_71,
	dffs_72 => ww_dffs_72,
	dom_adr_en => ww_dom_adr_en,
	A_nB => ww_A_nB,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => ww_result_node,
	result_node1 => ww_result_node1,
	result_node2 => ww_result_node2,
	result_node3 => ww_result_node3,
	result_node4 => ww_result_node4,
	result_node5 => ww_result_node5,
	result_node6 => ww_result_node6,
	result_node7 => ww_result_node7,
	result_node8 => ww_result_node8,
	result_node9 => ww_result_node9,
	result_node10 => ww_result_node10,
	result_node11 => ww_result_node11,
	result_node12 => ww_result_node12,
	result_node13 => ww_result_node13,
	result_node14 => ww_result_node14,
	result_node15 => ww_result_node15);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_shiftreg_1 IS
    PORT (
	clock : IN std_logic;
	sload_path_47 : IN std_logic;
	sload_path_46 : IN std_logic;
	sload_path_45 : IN std_logic;
	sload_path_44 : IN std_logic;
	sload_path_43 : IN std_logic;
	sload_path_42 : IN std_logic;
	sload_path_41 : IN std_logic;
	sload_path_40 : IN std_logic;
	sload_path_39 : IN std_logic;
	sload_path_38 : IN std_logic;
	sload_path_37 : IN std_logic;
	sload_path_36 : IN std_logic;
	sload_path_35 : IN std_logic;
	sload_path_34 : IN std_logic;
	sload_path_33 : IN std_logic;
	sload_path_32 : IN std_logic;
	sload_path_31 : IN std_logic;
	sload_path_30 : IN std_logic;
	sload_path_29 : IN std_logic;
	sload_path_28 : IN std_logic;
	sload_path_27 : IN std_logic;
	sload_path_26 : IN std_logic;
	sload_path_25 : IN std_logic;
	sload_path_24 : IN std_logic;
	sload_path_23 : IN std_logic;
	sload_path_22 : IN std_logic;
	sload_path_21 : IN std_logic;
	sload_path_20 : IN std_logic;
	sload_path_19 : IN std_logic;
	sload_path_18 : IN std_logic;
	sload_path_17 : IN std_logic;
	sload_path_16 : IN std_logic;
	sload_path_15 : IN std_logic;
	sload_path_14 : IN std_logic;
	sload_path_13 : IN std_logic;
	sload_path_12 : IN std_logic;
	sload_path_11 : IN std_logic;
	sload_path_10 : IN std_logic;
	sload_path_9 : IN std_logic;
	sload_path_8 : IN std_logic;
	sload_path_7 : IN std_logic;
	sload_path_6 : IN std_logic;
	sload_path_5 : IN std_logic;
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	sreg : IN std_logic;
	enable : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	dffs_0 : OUT std_logic;
	dffs_2 : OUT std_logic;
	dffs_1 : OUT std_logic;
	dffs_3 : OUT std_logic;
	dffs_4 : OUT std_logic;
	dffs_5 : OUT std_logic;
	dffs_6 : OUT std_logic;
	dffs_7 : OUT std_logic
	);
END lpm_shiftreg_1;

ARCHITECTURE structure OF lpm_shiftreg_1 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_sload_path_47 : std_logic;
SIGNAL ww_sload_path_46 : std_logic;
SIGNAL ww_sload_path_45 : std_logic;
SIGNAL ww_sload_path_44 : std_logic;
SIGNAL ww_sload_path_43 : std_logic;
SIGNAL ww_sload_path_42 : std_logic;
SIGNAL ww_sload_path_41 : std_logic;
SIGNAL ww_sload_path_40 : std_logic;
SIGNAL ww_sload_path_39 : std_logic;
SIGNAL ww_sload_path_38 : std_logic;
SIGNAL ww_sload_path_37 : std_logic;
SIGNAL ww_sload_path_36 : std_logic;
SIGNAL ww_sload_path_35 : std_logic;
SIGNAL ww_sload_path_34 : std_logic;
SIGNAL ww_sload_path_33 : std_logic;
SIGNAL ww_sload_path_32 : std_logic;
SIGNAL ww_sload_path_31 : std_logic;
SIGNAL ww_sload_path_30 : std_logic;
SIGNAL ww_sload_path_29 : std_logic;
SIGNAL ww_sload_path_28 : std_logic;
SIGNAL ww_sload_path_27 : std_logic;
SIGNAL ww_sload_path_26 : std_logic;
SIGNAL ww_sload_path_25 : std_logic;
SIGNAL ww_sload_path_24 : std_logic;
SIGNAL ww_sload_path_23 : std_logic;
SIGNAL ww_sload_path_22 : std_logic;
SIGNAL ww_sload_path_21 : std_logic;
SIGNAL ww_sload_path_20 : std_logic;
SIGNAL ww_sload_path_19 : std_logic;
SIGNAL ww_sload_path_18 : std_logic;
SIGNAL ww_sload_path_17 : std_logic;
SIGNAL ww_sload_path_16 : std_logic;
SIGNAL ww_sload_path_15 : std_logic;
SIGNAL ww_sload_path_14 : std_logic;
SIGNAL ww_sload_path_13 : std_logic;
SIGNAL ww_sload_path_12 : std_logic;
SIGNAL ww_sload_path_11 : std_logic;
SIGNAL ww_sload_path_10 : std_logic;
SIGNAL ww_sload_path_9 : std_logic;
SIGNAL ww_sload_path_8 : std_logic;
SIGNAL ww_sload_path_7 : std_logic;
SIGNAL ww_sload_path_6 : std_logic;
SIGNAL ww_sload_path_5 : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_sreg : std_logic;
SIGNAL ww_enable : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_dffs_0 : std_logic;
SIGNAL ww_dffs_2 : std_logic;
SIGNAL ww_dffs_1 : std_logic;
SIGNAL ww_dffs_3 : std_logic;
SIGNAL ww_dffs_4 : std_logic;
SIGNAL ww_dffs_5 : std_logic;
SIGNAL ww_dffs_6 : std_logic;
SIGNAL ww_dffs_7 : std_logic;
SIGNAL \dffs[47]\ : std_logic;
SIGNAL \dffs[46]\ : std_logic;
SIGNAL \dffs[45]\ : std_logic;
SIGNAL \dffs[44]\ : std_logic;
SIGNAL \dffs[43]\ : std_logic;
SIGNAL \dffs[42]\ : std_logic;
SIGNAL \dffs[41]\ : std_logic;
SIGNAL \dffs[40]\ : std_logic;
SIGNAL \dffs[39]\ : std_logic;
SIGNAL \dffs[38]\ : std_logic;
SIGNAL \dffs[37]\ : std_logic;
SIGNAL \dffs[36]\ : std_logic;
SIGNAL \dffs[35]\ : std_logic;
SIGNAL \dffs[34]\ : std_logic;
SIGNAL \dffs[33]\ : std_logic;
SIGNAL \dffs[32]\ : std_logic;
SIGNAL \dffs[31]\ : std_logic;
SIGNAL \dffs[30]\ : std_logic;
SIGNAL \dffs[29]\ : std_logic;
SIGNAL \dffs[28]\ : std_logic;
SIGNAL \dffs[27]\ : std_logic;
SIGNAL \dffs[26]\ : std_logic;
SIGNAL \dffs[25]\ : std_logic;
SIGNAL \dffs[24]\ : std_logic;
SIGNAL \dffs[23]\ : std_logic;
SIGNAL \dffs[22]\ : std_logic;
SIGNAL \dffs[21]\ : std_logic;
SIGNAL \dffs[20]\ : std_logic;
SIGNAL \dffs[19]\ : std_logic;
SIGNAL \dffs[18]\ : std_logic;
SIGNAL \dffs[17]\ : std_logic;
SIGNAL \dffs[16]\ : std_logic;
SIGNAL \dffs[15]\ : std_logic;
SIGNAL \dffs[14]\ : std_logic;
SIGNAL \dffs[13]\ : std_logic;
SIGNAL \dffs[12]\ : std_logic;
SIGNAL \dffs[11]\ : std_logic;
SIGNAL \dffs[10]\ : std_logic;
SIGNAL \dffs[9]\ : std_logic;
SIGNAL \dffs[8]\ : std_logic;

BEGIN

ww_clock <= clock;
ww_sload_path_47 <= sload_path_47;
ww_sload_path_46 <= sload_path_46;
ww_sload_path_45 <= sload_path_45;
ww_sload_path_44 <= sload_path_44;
ww_sload_path_43 <= sload_path_43;
ww_sload_path_42 <= sload_path_42;
ww_sload_path_41 <= sload_path_41;
ww_sload_path_40 <= sload_path_40;
ww_sload_path_39 <= sload_path_39;
ww_sload_path_38 <= sload_path_38;
ww_sload_path_37 <= sload_path_37;
ww_sload_path_36 <= sload_path_36;
ww_sload_path_35 <= sload_path_35;
ww_sload_path_34 <= sload_path_34;
ww_sload_path_33 <= sload_path_33;
ww_sload_path_32 <= sload_path_32;
ww_sload_path_31 <= sload_path_31;
ww_sload_path_30 <= sload_path_30;
ww_sload_path_29 <= sload_path_29;
ww_sload_path_28 <= sload_path_28;
ww_sload_path_27 <= sload_path_27;
ww_sload_path_26 <= sload_path_26;
ww_sload_path_25 <= sload_path_25;
ww_sload_path_24 <= sload_path_24;
ww_sload_path_23 <= sload_path_23;
ww_sload_path_22 <= sload_path_22;
ww_sload_path_21 <= sload_path_21;
ww_sload_path_20 <= sload_path_20;
ww_sload_path_19 <= sload_path_19;
ww_sload_path_18 <= sload_path_18;
ww_sload_path_17 <= sload_path_17;
ww_sload_path_16 <= sload_path_16;
ww_sload_path_15 <= sload_path_15;
ww_sload_path_14 <= sload_path_14;
ww_sload_path_13 <= sload_path_13;
ww_sload_path_12 <= sload_path_12;
ww_sload_path_11 <= sload_path_11;
ww_sload_path_10 <= sload_path_10;
ww_sload_path_9 <= sload_path_9;
ww_sload_path_8 <= sload_path_8;
ww_sload_path_7 <= sload_path_7;
ww_sload_path_6 <= sload_path_6;
ww_sload_path_5 <= sload_path_5;
ww_sload_path_4 <= sload_path_4;
ww_sload_path_3 <= sload_path_3;
ww_sload_path_2 <= sload_path_2;
ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_sreg <= sreg;
ww_enable <= enable;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
dffs_0 <= ww_dffs_0;
dffs_2 <= ww_dffs_2;
dffs_1 <= ww_dffs_1;
dffs_3 <= ww_dffs_3;
dffs_4 <= ww_dffs_4;
dffs_5 <= ww_dffs_5;
dffs_6 <= ww_dffs_6;
dffs_7 <= ww_dffs_7;

\dffs[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- dffs_0 = DFFE(dffs_1 & (sload_path_0 # !sreg) # !dffs_1 & sreg & sload_path_0, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_dffs_1,
	datac => ww_sreg,
	datad => ww_sload_path_0,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dffs_0);

\dffs[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- dffs_2 = DFFE(sreg & sload_path_2 # !sreg & dffs_3, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA50",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg,
	datac => ww_dffs_3,
	datad => ww_sload_path_2,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dffs_2);

\dffs[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- dffs_1 = DFFE(sreg & sload_path_1 # !sreg & dffs_2, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F5A0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg,
	datac => ww_sload_path_1,
	datad => ww_dffs_2,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dffs_1);

\dffs[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- dffs_3 = DFFE(dffs_4 & (sload_path_3 # !sreg) # !dffs_4 & sreg & sload_path_3, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_dffs_4,
	datac => ww_sreg,
	datad => ww_sload_path_3,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dffs_3);

\dffs[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- dffs_4 = DFFE(sreg & sload_path_4 # !sreg & dffs_5, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA50",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg,
	datac => ww_dffs_5,
	datad => ww_sload_path_4,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dffs_4);

\dffs[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- dffs_5 = DFFE(dffs_6 & (sload_path_5 # !sreg) # !dffs_6 & sload_path_5 & sreg, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0CC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_dffs_6,
	datac => ww_sload_path_5,
	datad => ww_sreg,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dffs_5);

\dffs[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- dffs_6 = DFFE(dffs_7 & (sload_path_6 # !sreg) # !dffs_7 & sreg & sload_path_6, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EE22",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_dffs_7,
	datab => ww_sreg,
	datad => ww_sload_path_6,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dffs_6);

\dffs[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- dffs_7 = DFFE(\dffs[8]\ & (sload_path_7 # !sreg) # !\dffs[8]\ & sreg & sload_path_7, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E2E2",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[8]\,
	datab => ww_sreg,
	datac => ww_sload_path_7,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dffs_7);

\dffs[47]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[47]\ = DFFE(sreg & sload_path_47, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_sreg,
	datad => ww_sload_path_47,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[47]\);

\dffs[46]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[46]\ = DFFE(\dffs[47]\ & (sload_path_46 # !sreg) # !\dffs[47]\ & sreg & sload_path_46, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[47]\,
	datac => ww_sreg,
	datad => ww_sload_path_46,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[46]\);

\dffs[45]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[45]\ = DFFE(\dffs[46]\ & (sload_path_45 # !sreg) # !\dffs[46]\ & sreg & sload_path_45, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[46]\,
	datac => ww_sreg,
	datad => ww_sload_path_45,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[45]\);

\dffs[44]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[44]\ = DFFE(\dffs[45]\ & (sload_path_44 # !sreg) # !\dffs[45]\ & sreg & sload_path_44, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[45]\,
	datac => ww_sreg,
	datad => ww_sload_path_44,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[44]\);

\dffs[43]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[43]\ = DFFE(\dffs[44]\ & (sload_path_43 # !sreg) # !\dffs[44]\ & sreg & sload_path_43, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[44]\,
	datac => ww_sreg,
	datad => ww_sload_path_43,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[43]\);

\dffs[42]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[42]\ = DFFE(\dffs[43]\ & (sload_path_42 # !sreg) # !\dffs[43]\ & sreg & sload_path_42, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[43]\,
	datac => ww_sreg,
	datad => ww_sload_path_42,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[42]\);

\dffs[41]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[41]\ = DFFE(\dffs[42]\ & (sload_path_41 # !sreg) # !\dffs[42]\ & sreg & sload_path_41, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[42]\,
	datac => ww_sreg,
	datad => ww_sload_path_41,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[41]\);

\dffs[40]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[40]\ = DFFE(\dffs[41]\ & (sload_path_40 # !sreg) # !\dffs[41]\ & sreg & sload_path_40, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[41]\,
	datac => ww_sreg,
	datad => ww_sload_path_40,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[40]\);

\dffs[39]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[39]\ = DFFE(\dffs[40]\ & (sload_path_39 # !sreg) # !\dffs[40]\ & sreg & sload_path_39, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[40]\,
	datac => ww_sreg,
	datad => ww_sload_path_39,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[39]\);

\dffs[38]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[38]\ = DFFE(sreg & sload_path_38 # !sreg & \dffs[39]\, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC30",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sreg,
	datac => \dffs[39]\,
	datad => ww_sload_path_38,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[38]\);

\dffs[37]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[37]\ = DFFE(sreg & sload_path_37 # !sreg & \dffs[38]\, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC30",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sreg,
	datac => \dffs[38]\,
	datad => ww_sload_path_37,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[37]\);

\dffs[36]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[36]\ = DFFE(\dffs[37]\ & (sload_path_36 # !sreg) # !\dffs[37]\ & sreg & sload_path_36, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[37]\,
	datac => ww_sreg,
	datad => ww_sload_path_36,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[36]\);

\dffs[35]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[35]\ = DFFE(\dffs[36]\ & (sload_path_35 # !sreg) # !\dffs[36]\ & sload_path_35 & sreg, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0CC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[36]\,
	datac => ww_sload_path_35,
	datad => ww_sreg,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[35]\);

\dffs[34]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[34]\ = DFFE(\dffs[35]\ & (sload_path_34 # !sreg) # !\dffs[35]\ & sreg & sload_path_34, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[35]\,
	datac => ww_sreg,
	datad => ww_sload_path_34,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[34]\);

\dffs[33]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[33]\ = DFFE(sreg & sload_path_33 # !sreg & \dffs[34]\, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC30",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sreg,
	datac => \dffs[34]\,
	datad => ww_sload_path_33,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[33]\);

\dffs[32]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[32]\ = DFFE(\dffs[33]\ & (sload_path_32 # !sreg) # !\dffs[33]\ & sreg & sload_path_32, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[33]\,
	datac => ww_sreg,
	datad => ww_sload_path_32,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[32]\);

\dffs[31]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[31]\ = DFFE(sreg & sload_path_31 # !sreg & \dffs[32]\, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC30",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sreg,
	datac => \dffs[32]\,
	datad => ww_sload_path_31,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[31]\);

\dffs[30]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[30]\ = DFFE(sreg & sload_path_30 # !sreg & \dffs[31]\, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA50",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg,
	datac => \dffs[31]\,
	datad => ww_sload_path_30,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[30]\);

\dffs[29]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[29]\ = DFFE(sreg & sload_path_29 # !sreg & \dffs[30]\, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC30",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sreg,
	datac => \dffs[30]\,
	datad => ww_sload_path_29,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[29]\);

\dffs[28]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[28]\ = DFFE(\dffs[29]\ & (sload_path_28 # !sreg) # !\dffs[29]\ & sreg & sload_path_28, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[29]\,
	datac => ww_sreg,
	datad => ww_sload_path_28,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[28]\);

\dffs[27]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[27]\ = DFFE(\dffs[28]\ & (sload_path_27 # !sreg) # !\dffs[28]\ & sreg & sload_path_27, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[28]\,
	datac => ww_sreg,
	datad => ww_sload_path_27,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[27]\);

\dffs[26]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[26]\ = DFFE(\dffs[27]\ & (sload_path_26 # !sreg) # !\dffs[27]\ & sreg & sload_path_26, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[27]\,
	datac => ww_sreg,
	datad => ww_sload_path_26,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[26]\);

\dffs[25]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[25]\ = DFFE(\dffs[26]\ & (sload_path_25 # !sreg) # !\dffs[26]\ & sreg & sload_path_25, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[26]\,
	datac => ww_sreg,
	datad => ww_sload_path_25,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[25]\);

\dffs[24]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[24]\ = DFFE(\dffs[25]\ & (sload_path_24 # !sreg) # !\dffs[25]\ & sreg & sload_path_24, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[25]\,
	datac => ww_sreg,
	datad => ww_sload_path_24,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[24]\);

\dffs[23]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[23]\ = DFFE(\dffs[24]\ & (sload_path_23 # !sreg) # !\dffs[24]\ & sreg & sload_path_23, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[24]\,
	datac => ww_sreg,
	datad => ww_sload_path_23,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[23]\);

\dffs[22]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[22]\ = DFFE(\dffs[23]\ & (sload_path_22 # !sreg) # !\dffs[23]\ & sreg & sload_path_22, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[23]\,
	datac => ww_sreg,
	datad => ww_sload_path_22,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[22]\);

\dffs[21]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[21]\ = DFFE(\dffs[22]\ & (sload_path_21 # !sreg) # !\dffs[22]\ & sreg & sload_path_21, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[22]\,
	datac => ww_sreg,
	datad => ww_sload_path_21,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[21]\);

\dffs[20]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[20]\ = DFFE(\dffs[21]\ & (sload_path_20 # !sreg) # !\dffs[21]\ & sreg & sload_path_20, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[21]\,
	datac => ww_sreg,
	datad => ww_sload_path_20,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[20]\);

\dffs[19]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[19]\ = DFFE(\dffs[20]\ & (sload_path_19 # !sreg) # !\dffs[20]\ & sreg & sload_path_19, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[20]\,
	datac => ww_sreg,
	datad => ww_sload_path_19,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[19]\);

\dffs[18]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[18]\ = DFFE(\dffs[19]\ & (sload_path_18 # !sreg) # !\dffs[19]\ & sreg & sload_path_18, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[19]\,
	datac => ww_sreg,
	datad => ww_sload_path_18,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[18]\);

\dffs[17]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[17]\ = DFFE(\dffs[18]\ & (sload_path_17 # !sreg) # !\dffs[18]\ & sreg & sload_path_17, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[18]\,
	datac => ww_sreg,
	datad => ww_sload_path_17,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[17]\);

\dffs[16]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[16]\ = DFFE(\dffs[17]\ & (sload_path_16 # !sreg) # !\dffs[17]\ & sreg & sload_path_16, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[17]\,
	datac => ww_sreg,
	datad => ww_sload_path_16,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[16]\);

\dffs[15]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[15]\ = DFFE(\dffs[16]\ & (sload_path_15 # !sreg) # !\dffs[16]\ & sreg & sload_path_15, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[16]\,
	datac => ww_sreg,
	datad => ww_sload_path_15,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[15]\);

\dffs[14]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[14]\ = DFFE(\dffs[15]\ & (sload_path_14 # !sreg) # !\dffs[15]\ & sreg & sload_path_14, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[15]\,
	datac => ww_sreg,
	datad => ww_sload_path_14,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[14]\);

\dffs[13]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[13]\ = DFFE(\dffs[14]\ & (sload_path_13 # !sreg) # !\dffs[14]\ & sreg & sload_path_13, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[14]\,
	datac => ww_sreg,
	datad => ww_sload_path_13,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[13]\);

\dffs[12]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[12]\ = DFFE(\dffs[13]\ & (sload_path_12 # !sreg) # !\dffs[13]\ & sreg & sload_path_12, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[13]\,
	datac => ww_sreg,
	datad => ww_sload_path_12,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[12]\);

\dffs[11]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[11]\ = DFFE(sreg & sload_path_11 # !sreg & \dffs[12]\, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC30",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sreg,
	datac => \dffs[12]\,
	datad => ww_sload_path_11,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[11]\);

\dffs[10]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[10]\ = DFFE(\dffs[11]\ & (sload_path_10 # !sreg) # !\dffs[11]\ & sreg & sload_path_10, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[11]\,
	datac => ww_sreg,
	datad => ww_sload_path_10,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[10]\);

\dffs[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[9]\ = DFFE(\dffs[10]\ & (sload_path_9 # !sreg) # !\dffs[10]\ & sreg & sload_path_9, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[10]\,
	datac => ww_sreg,
	datad => ww_sload_path_9,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[9]\);

\dffs[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[8]\ = DFFE(sreg & sload_path_8 # !sreg & \dffs[9]\, GLOBAL(outclock0), , , inst38)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3C0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sreg,
	datac => ww_sload_path_8,
	datad => \dffs[9]\,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[8]\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	shrg48pld_1 IS
    PORT (
	clock : IN std_logic;
	sload_path_47 : IN std_logic;
	sload_path_46 : IN std_logic;
	sload_path_45 : IN std_logic;
	sload_path_44 : IN std_logic;
	sload_path_43 : IN std_logic;
	sload_path_42 : IN std_logic;
	sload_path_41 : IN std_logic;
	sload_path_40 : IN std_logic;
	sload_path_39 : IN std_logic;
	sload_path_38 : IN std_logic;
	sload_path_37 : IN std_logic;
	sload_path_36 : IN std_logic;
	sload_path_35 : IN std_logic;
	sload_path_34 : IN std_logic;
	sload_path_33 : IN std_logic;
	sload_path_32 : IN std_logic;
	sload_path_31 : IN std_logic;
	sload_path_30 : IN std_logic;
	sload_path_29 : IN std_logic;
	sload_path_28 : IN std_logic;
	sload_path_27 : IN std_logic;
	sload_path_26 : IN std_logic;
	sload_path_25 : IN std_logic;
	sload_path_24 : IN std_logic;
	sload_path_23 : IN std_logic;
	sload_path_22 : IN std_logic;
	sload_path_21 : IN std_logic;
	sload_path_20 : IN std_logic;
	sload_path_19 : IN std_logic;
	sload_path_18 : IN std_logic;
	sload_path_17 : IN std_logic;
	sload_path_16 : IN std_logic;
	sload_path_15 : IN std_logic;
	sload_path_14 : IN std_logic;
	sload_path_13 : IN std_logic;
	sload_path_12 : IN std_logic;
	sload_path_11 : IN std_logic;
	sload_path_10 : IN std_logic;
	sload_path_9 : IN std_logic;
	sload_path_8 : IN std_logic;
	sload_path_7 : IN std_logic;
	sload_path_6 : IN std_logic;
	sload_path_5 : IN std_logic;
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	sreg : IN std_logic;
	enable : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	dffs_0 : OUT std_logic;
	dffs_2 : OUT std_logic;
	dffs_1 : OUT std_logic;
	dffs_3 : OUT std_logic;
	dffs_4 : OUT std_logic;
	dffs_5 : OUT std_logic;
	dffs_6 : OUT std_logic;
	dffs_7 : OUT std_logic
	);
END shrg48pld_1;

ARCHITECTURE structure OF shrg48pld_1 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_sload_path_47 : std_logic;
SIGNAL ww_sload_path_46 : std_logic;
SIGNAL ww_sload_path_45 : std_logic;
SIGNAL ww_sload_path_44 : std_logic;
SIGNAL ww_sload_path_43 : std_logic;
SIGNAL ww_sload_path_42 : std_logic;
SIGNAL ww_sload_path_41 : std_logic;
SIGNAL ww_sload_path_40 : std_logic;
SIGNAL ww_sload_path_39 : std_logic;
SIGNAL ww_sload_path_38 : std_logic;
SIGNAL ww_sload_path_37 : std_logic;
SIGNAL ww_sload_path_36 : std_logic;
SIGNAL ww_sload_path_35 : std_logic;
SIGNAL ww_sload_path_34 : std_logic;
SIGNAL ww_sload_path_33 : std_logic;
SIGNAL ww_sload_path_32 : std_logic;
SIGNAL ww_sload_path_31 : std_logic;
SIGNAL ww_sload_path_30 : std_logic;
SIGNAL ww_sload_path_29 : std_logic;
SIGNAL ww_sload_path_28 : std_logic;
SIGNAL ww_sload_path_27 : std_logic;
SIGNAL ww_sload_path_26 : std_logic;
SIGNAL ww_sload_path_25 : std_logic;
SIGNAL ww_sload_path_24 : std_logic;
SIGNAL ww_sload_path_23 : std_logic;
SIGNAL ww_sload_path_22 : std_logic;
SIGNAL ww_sload_path_21 : std_logic;
SIGNAL ww_sload_path_20 : std_logic;
SIGNAL ww_sload_path_19 : std_logic;
SIGNAL ww_sload_path_18 : std_logic;
SIGNAL ww_sload_path_17 : std_logic;
SIGNAL ww_sload_path_16 : std_logic;
SIGNAL ww_sload_path_15 : std_logic;
SIGNAL ww_sload_path_14 : std_logic;
SIGNAL ww_sload_path_13 : std_logic;
SIGNAL ww_sload_path_12 : std_logic;
SIGNAL ww_sload_path_11 : std_logic;
SIGNAL ww_sload_path_10 : std_logic;
SIGNAL ww_sload_path_9 : std_logic;
SIGNAL ww_sload_path_8 : std_logic;
SIGNAL ww_sload_path_7 : std_logic;
SIGNAL ww_sload_path_6 : std_logic;
SIGNAL ww_sload_path_5 : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_sreg : std_logic;
SIGNAL ww_enable : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_dffs_0 : std_logic;
SIGNAL ww_dffs_2 : std_logic;
SIGNAL ww_dffs_1 : std_logic;
SIGNAL ww_dffs_3 : std_logic;
SIGNAL ww_dffs_4 : std_logic;
SIGNAL ww_dffs_5 : std_logic;
SIGNAL ww_dffs_6 : std_logic;
SIGNAL ww_dffs_7 : std_logic;

COMPONENT lpm_shiftreg_1
    PORT (
	clock : IN std_logic;
	sload_path_47 : IN std_logic;
	sload_path_46 : IN std_logic;
	sload_path_45 : IN std_logic;
	sload_path_44 : IN std_logic;
	sload_path_43 : IN std_logic;
	sload_path_42 : IN std_logic;
	sload_path_41 : IN std_logic;
	sload_path_40 : IN std_logic;
	sload_path_39 : IN std_logic;
	sload_path_38 : IN std_logic;
	sload_path_37 : IN std_logic;
	sload_path_36 : IN std_logic;
	sload_path_35 : IN std_logic;
	sload_path_34 : IN std_logic;
	sload_path_33 : IN std_logic;
	sload_path_32 : IN std_logic;
	sload_path_31 : IN std_logic;
	sload_path_30 : IN std_logic;
	sload_path_29 : IN std_logic;
	sload_path_28 : IN std_logic;
	sload_path_27 : IN std_logic;
	sload_path_26 : IN std_logic;
	sload_path_25 : IN std_logic;
	sload_path_24 : IN std_logic;
	sload_path_23 : IN std_logic;
	sload_path_22 : IN std_logic;
	sload_path_21 : IN std_logic;
	sload_path_20 : IN std_logic;
	sload_path_19 : IN std_logic;
	sload_path_18 : IN std_logic;
	sload_path_17 : IN std_logic;
	sload_path_16 : IN std_logic;
	sload_path_15 : IN std_logic;
	sload_path_14 : IN std_logic;
	sload_path_13 : IN std_logic;
	sload_path_12 : IN std_logic;
	sload_path_11 : IN std_logic;
	sload_path_10 : IN std_logic;
	sload_path_9 : IN std_logic;
	sload_path_8 : IN std_logic;
	sload_path_7 : IN std_logic;
	sload_path_6 : IN std_logic;
	sload_path_5 : IN std_logic;
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	sreg : IN std_logic;
	enable : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	dffs_0 : OUT std_logic;
	dffs_2 : OUT std_logic;
	dffs_1 : OUT std_logic;
	dffs_3 : OUT std_logic;
	dffs_4 : OUT std_logic;
	dffs_5 : OUT std_logic;
	dffs_6 : OUT std_logic;
	dffs_7 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_sload_path_47 <= sload_path_47;
ww_sload_path_46 <= sload_path_46;
ww_sload_path_45 <= sload_path_45;
ww_sload_path_44 <= sload_path_44;
ww_sload_path_43 <= sload_path_43;
ww_sload_path_42 <= sload_path_42;
ww_sload_path_41 <= sload_path_41;
ww_sload_path_40 <= sload_path_40;
ww_sload_path_39 <= sload_path_39;
ww_sload_path_38 <= sload_path_38;
ww_sload_path_37 <= sload_path_37;
ww_sload_path_36 <= sload_path_36;
ww_sload_path_35 <= sload_path_35;
ww_sload_path_34 <= sload_path_34;
ww_sload_path_33 <= sload_path_33;
ww_sload_path_32 <= sload_path_32;
ww_sload_path_31 <= sload_path_31;
ww_sload_path_30 <= sload_path_30;
ww_sload_path_29 <= sload_path_29;
ww_sload_path_28 <= sload_path_28;
ww_sload_path_27 <= sload_path_27;
ww_sload_path_26 <= sload_path_26;
ww_sload_path_25 <= sload_path_25;
ww_sload_path_24 <= sload_path_24;
ww_sload_path_23 <= sload_path_23;
ww_sload_path_22 <= sload_path_22;
ww_sload_path_21 <= sload_path_21;
ww_sload_path_20 <= sload_path_20;
ww_sload_path_19 <= sload_path_19;
ww_sload_path_18 <= sload_path_18;
ww_sload_path_17 <= sload_path_17;
ww_sload_path_16 <= sload_path_16;
ww_sload_path_15 <= sload_path_15;
ww_sload_path_14 <= sload_path_14;
ww_sload_path_13 <= sload_path_13;
ww_sload_path_12 <= sload_path_12;
ww_sload_path_11 <= sload_path_11;
ww_sload_path_10 <= sload_path_10;
ww_sload_path_9 <= sload_path_9;
ww_sload_path_8 <= sload_path_8;
ww_sload_path_7 <= sload_path_7;
ww_sload_path_6 <= sload_path_6;
ww_sload_path_5 <= sload_path_5;
ww_sload_path_4 <= sload_path_4;
ww_sload_path_3 <= sload_path_3;
ww_sload_path_2 <= sload_path_2;
ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_sreg <= sreg;
ww_enable <= enable;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
dffs_0 <= ww_dffs_0;
dffs_2 <= ww_dffs_2;
dffs_1 <= ww_dffs_1;
dffs_3 <= ww_dffs_3;
dffs_4 <= ww_dffs_4;
dffs_5 <= ww_dffs_5;
dffs_6 <= ww_dffs_6;
dffs_7 <= ww_dffs_7;
lpm_shiftreg_component : lpm_shiftreg_1
PORT MAP (
	clock => ww_clock,
	sload_path_47 => ww_sload_path_47,
	sload_path_46 => ww_sload_path_46,
	sload_path_45 => ww_sload_path_45,
	sload_path_44 => ww_sload_path_44,
	sload_path_43 => ww_sload_path_43,
	sload_path_42 => ww_sload_path_42,
	sload_path_41 => ww_sload_path_41,
	sload_path_40 => ww_sload_path_40,
	sload_path_39 => ww_sload_path_39,
	sload_path_38 => ww_sload_path_38,
	sload_path_37 => ww_sload_path_37,
	sload_path_36 => ww_sload_path_36,
	sload_path_35 => ww_sload_path_35,
	sload_path_34 => ww_sload_path_34,
	sload_path_33 => ww_sload_path_33,
	sload_path_32 => ww_sload_path_32,
	sload_path_31 => ww_sload_path_31,
	sload_path_30 => ww_sload_path_30,
	sload_path_29 => ww_sload_path_29,
	sload_path_28 => ww_sload_path_28,
	sload_path_27 => ww_sload_path_27,
	sload_path_26 => ww_sload_path_26,
	sload_path_25 => ww_sload_path_25,
	sload_path_24 => ww_sload_path_24,
	sload_path_23 => ww_sload_path_23,
	sload_path_22 => ww_sload_path_22,
	sload_path_21 => ww_sload_path_21,
	sload_path_20 => ww_sload_path_20,
	sload_path_19 => ww_sload_path_19,
	sload_path_18 => ww_sload_path_18,
	sload_path_17 => ww_sload_path_17,
	sload_path_16 => ww_sload_path_16,
	sload_path_15 => ww_sload_path_15,
	sload_path_14 => ww_sload_path_14,
	sload_path_13 => ww_sload_path_13,
	sload_path_12 => ww_sload_path_12,
	sload_path_11 => ww_sload_path_11,
	sload_path_10 => ww_sload_path_10,
	sload_path_9 => ww_sload_path_9,
	sload_path_8 => ww_sload_path_8,
	sload_path_7 => ww_sload_path_7,
	sload_path_6 => ww_sload_path_6,
	sload_path_5 => ww_sload_path_5,
	sload_path_4 => ww_sload_path_4,
	sload_path_3 => ww_sload_path_3,
	sload_path_2 => ww_sload_path_2,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	sreg => ww_sreg,
	enable => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	dffs_0 => ww_dffs_0,
	dffs_2 => ww_dffs_2,
	dffs_1 => ww_dffs_1,
	dffs_3 => ww_dffs_3,
	dffs_4 => ww_dffs_4,
	dffs_5 => ww_dffs_5,
	dffs_6 => ww_dffs_6,
	dffs_7 => ww_dffs_7);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_shiftreg_3 IS
    PORT (
	clock : IN std_logic;
	sload_path_47 : IN std_logic;
	sload_path_46 : IN std_logic;
	sload_path_45 : IN std_logic;
	sload_path_44 : IN std_logic;
	sload_path_43 : IN std_logic;
	sload_path_42 : IN std_logic;
	sload_path_41 : IN std_logic;
	sload_path_40 : IN std_logic;
	sload_path_39 : IN std_logic;
	sload_path_38 : IN std_logic;
	sload_path_37 : IN std_logic;
	sload_path_36 : IN std_logic;
	sload_path_35 : IN std_logic;
	sload_path_34 : IN std_logic;
	sload_path_33 : IN std_logic;
	sload_path_32 : IN std_logic;
	sload_path_31 : IN std_logic;
	sload_path_30 : IN std_logic;
	sload_path_29 : IN std_logic;
	sload_path_28 : IN std_logic;
	sload_path_27 : IN std_logic;
	sload_path_26 : IN std_logic;
	sload_path_25 : IN std_logic;
	sload_path_24 : IN std_logic;
	sload_path_23 : IN std_logic;
	sload_path_22 : IN std_logic;
	sload_path_21 : IN std_logic;
	sload_path_20 : IN std_logic;
	sload_path_19 : IN std_logic;
	sload_path_18 : IN std_logic;
	sload_path_17 : IN std_logic;
	sload_path_16 : IN std_logic;
	sload_path_15 : IN std_logic;
	sload_path_14 : IN std_logic;
	sload_path_13 : IN std_logic;
	sload_path_12 : IN std_logic;
	sload_path_11 : IN std_logic;
	sload_path_10 : IN std_logic;
	sload_path_9 : IN std_logic;
	sload_path_8 : IN std_logic;
	sload_path_7 : IN std_logic;
	sload_path_6 : IN std_logic;
	sload_path_5 : IN std_logic;
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	tx_time_lat : IN std_logic;
	enable : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	dffs_0 : OUT std_logic;
	dffs_2 : OUT std_logic;
	dffs_1 : OUT std_logic;
	dffs_3 : OUT std_logic;
	dffs_4 : OUT std_logic;
	dffs_5 : OUT std_logic;
	dffs_6 : OUT std_logic;
	dffs_7 : OUT std_logic
	);
END lpm_shiftreg_3;

ARCHITECTURE structure OF lpm_shiftreg_3 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_sload_path_47 : std_logic;
SIGNAL ww_sload_path_46 : std_logic;
SIGNAL ww_sload_path_45 : std_logic;
SIGNAL ww_sload_path_44 : std_logic;
SIGNAL ww_sload_path_43 : std_logic;
SIGNAL ww_sload_path_42 : std_logic;
SIGNAL ww_sload_path_41 : std_logic;
SIGNAL ww_sload_path_40 : std_logic;
SIGNAL ww_sload_path_39 : std_logic;
SIGNAL ww_sload_path_38 : std_logic;
SIGNAL ww_sload_path_37 : std_logic;
SIGNAL ww_sload_path_36 : std_logic;
SIGNAL ww_sload_path_35 : std_logic;
SIGNAL ww_sload_path_34 : std_logic;
SIGNAL ww_sload_path_33 : std_logic;
SIGNAL ww_sload_path_32 : std_logic;
SIGNAL ww_sload_path_31 : std_logic;
SIGNAL ww_sload_path_30 : std_logic;
SIGNAL ww_sload_path_29 : std_logic;
SIGNAL ww_sload_path_28 : std_logic;
SIGNAL ww_sload_path_27 : std_logic;
SIGNAL ww_sload_path_26 : std_logic;
SIGNAL ww_sload_path_25 : std_logic;
SIGNAL ww_sload_path_24 : std_logic;
SIGNAL ww_sload_path_23 : std_logic;
SIGNAL ww_sload_path_22 : std_logic;
SIGNAL ww_sload_path_21 : std_logic;
SIGNAL ww_sload_path_20 : std_logic;
SIGNAL ww_sload_path_19 : std_logic;
SIGNAL ww_sload_path_18 : std_logic;
SIGNAL ww_sload_path_17 : std_logic;
SIGNAL ww_sload_path_16 : std_logic;
SIGNAL ww_sload_path_15 : std_logic;
SIGNAL ww_sload_path_14 : std_logic;
SIGNAL ww_sload_path_13 : std_logic;
SIGNAL ww_sload_path_12 : std_logic;
SIGNAL ww_sload_path_11 : std_logic;
SIGNAL ww_sload_path_10 : std_logic;
SIGNAL ww_sload_path_9 : std_logic;
SIGNAL ww_sload_path_8 : std_logic;
SIGNAL ww_sload_path_7 : std_logic;
SIGNAL ww_sload_path_6 : std_logic;
SIGNAL ww_sload_path_5 : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_tx_time_lat : std_logic;
SIGNAL ww_enable : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_dffs_0 : std_logic;
SIGNAL ww_dffs_2 : std_logic;
SIGNAL ww_dffs_1 : std_logic;
SIGNAL ww_dffs_3 : std_logic;
SIGNAL ww_dffs_4 : std_logic;
SIGNAL ww_dffs_5 : std_logic;
SIGNAL ww_dffs_6 : std_logic;
SIGNAL ww_dffs_7 : std_logic;
SIGNAL \dffs[47]\ : std_logic;
SIGNAL \dffs[46]\ : std_logic;
SIGNAL \dffs[45]\ : std_logic;
SIGNAL \dffs[44]\ : std_logic;
SIGNAL \dffs[43]\ : std_logic;
SIGNAL \dffs[42]\ : std_logic;
SIGNAL \dffs[41]\ : std_logic;
SIGNAL \dffs[40]\ : std_logic;
SIGNAL \dffs[39]\ : std_logic;
SIGNAL \dffs[38]\ : std_logic;
SIGNAL \dffs[37]\ : std_logic;
SIGNAL \dffs[36]\ : std_logic;
SIGNAL \dffs[35]\ : std_logic;
SIGNAL \dffs[34]\ : std_logic;
SIGNAL \dffs[33]\ : std_logic;
SIGNAL \dffs[32]\ : std_logic;
SIGNAL \dffs[31]\ : std_logic;
SIGNAL \dffs[30]\ : std_logic;
SIGNAL \dffs[29]\ : std_logic;
SIGNAL \dffs[28]\ : std_logic;
SIGNAL \dffs[27]\ : std_logic;
SIGNAL \dffs[26]\ : std_logic;
SIGNAL \dffs[25]\ : std_logic;
SIGNAL \dffs[24]\ : std_logic;
SIGNAL \dffs[23]\ : std_logic;
SIGNAL \dffs[22]\ : std_logic;
SIGNAL \dffs[21]\ : std_logic;
SIGNAL \dffs[20]\ : std_logic;
SIGNAL \dffs[19]\ : std_logic;
SIGNAL \dffs[18]\ : std_logic;
SIGNAL \dffs[17]\ : std_logic;
SIGNAL \dffs[16]\ : std_logic;
SIGNAL \dffs[15]\ : std_logic;
SIGNAL \dffs[14]\ : std_logic;
SIGNAL \dffs[13]\ : std_logic;
SIGNAL \dffs[12]\ : std_logic;
SIGNAL \dffs[11]\ : std_logic;
SIGNAL \dffs[10]\ : std_logic;
SIGNAL \dffs[9]\ : std_logic;
SIGNAL \dffs[8]\ : std_logic;

BEGIN

ww_clock <= clock;
ww_sload_path_47 <= sload_path_47;
ww_sload_path_46 <= sload_path_46;
ww_sload_path_45 <= sload_path_45;
ww_sload_path_44 <= sload_path_44;
ww_sload_path_43 <= sload_path_43;
ww_sload_path_42 <= sload_path_42;
ww_sload_path_41 <= sload_path_41;
ww_sload_path_40 <= sload_path_40;
ww_sload_path_39 <= sload_path_39;
ww_sload_path_38 <= sload_path_38;
ww_sload_path_37 <= sload_path_37;
ww_sload_path_36 <= sload_path_36;
ww_sload_path_35 <= sload_path_35;
ww_sload_path_34 <= sload_path_34;
ww_sload_path_33 <= sload_path_33;
ww_sload_path_32 <= sload_path_32;
ww_sload_path_31 <= sload_path_31;
ww_sload_path_30 <= sload_path_30;
ww_sload_path_29 <= sload_path_29;
ww_sload_path_28 <= sload_path_28;
ww_sload_path_27 <= sload_path_27;
ww_sload_path_26 <= sload_path_26;
ww_sload_path_25 <= sload_path_25;
ww_sload_path_24 <= sload_path_24;
ww_sload_path_23 <= sload_path_23;
ww_sload_path_22 <= sload_path_22;
ww_sload_path_21 <= sload_path_21;
ww_sload_path_20 <= sload_path_20;
ww_sload_path_19 <= sload_path_19;
ww_sload_path_18 <= sload_path_18;
ww_sload_path_17 <= sload_path_17;
ww_sload_path_16 <= sload_path_16;
ww_sload_path_15 <= sload_path_15;
ww_sload_path_14 <= sload_path_14;
ww_sload_path_13 <= sload_path_13;
ww_sload_path_12 <= sload_path_12;
ww_sload_path_11 <= sload_path_11;
ww_sload_path_10 <= sload_path_10;
ww_sload_path_9 <= sload_path_9;
ww_sload_path_8 <= sload_path_8;
ww_sload_path_7 <= sload_path_7;
ww_sload_path_6 <= sload_path_6;
ww_sload_path_5 <= sload_path_5;
ww_sload_path_4 <= sload_path_4;
ww_sload_path_3 <= sload_path_3;
ww_sload_path_2 <= sload_path_2;
ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_tx_time_lat <= tx_time_lat;
ww_enable <= enable;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
dffs_0 <= ww_dffs_0;
dffs_2 <= ww_dffs_2;
dffs_1 <= ww_dffs_1;
dffs_3 <= ww_dffs_3;
dffs_4 <= ww_dffs_4;
dffs_5 <= ww_dffs_5;
dffs_6 <= ww_dffs_6;
dffs_7 <= ww_dffs_7;

\dffs[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- dffs_0 = DFFE(dffs_1 & (sload_path_0 # !tx_time_lat) # !dffs_1 & tx_time_lat & sload_path_0, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_dffs_1,
	datac => ww_tx_time_lat,
	datad => ww_sload_path_0,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dffs_0);

\dffs[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- dffs_2 = DFFE(dffs_3 & (sload_path_2 # !tx_time_lat) # !dffs_3 & tx_time_lat & sload_path_2, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_dffs_3,
	datac => ww_tx_time_lat,
	datad => ww_sload_path_2,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dffs_2);

\dffs[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- dffs_1 = DFFE(dffs_2 & (sload_path_1 # !tx_time_lat) # !dffs_2 & tx_time_lat & sload_path_1, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_dffs_2,
	datac => ww_tx_time_lat,
	datad => ww_sload_path_1,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dffs_1);

\dffs[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- dffs_3 = DFFE(dffs_4 & (sload_path_3 # !tx_time_lat) # !dffs_4 & tx_time_lat & sload_path_3, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_dffs_4,
	datac => ww_tx_time_lat,
	datad => ww_sload_path_3,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dffs_3);

\dffs[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- dffs_4 = DFFE(tx_time_lat & sload_path_4 # !tx_time_lat & dffs_5, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F5A0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_tx_time_lat,
	datac => ww_sload_path_4,
	datad => ww_dffs_5,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dffs_4);

\dffs[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- dffs_5 = DFFE(dffs_6 & (sload_path_5 # !tx_time_lat) # !dffs_6 & tx_time_lat & sload_path_5, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_dffs_6,
	datac => ww_tx_time_lat,
	datad => ww_sload_path_5,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dffs_5);

\dffs[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- dffs_6 = DFFE(dffs_7 & (sload_path_6 # !tx_time_lat) # !dffs_7 & tx_time_lat & sload_path_6, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_dffs_7,
	datac => ww_tx_time_lat,
	datad => ww_sload_path_6,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dffs_6);

\dffs[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- dffs_7 = DFFE(\dffs[8]\ & (sload_path_7 # !tx_time_lat) # !\dffs[8]\ & tx_time_lat & sload_path_7, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[8]\,
	datac => ww_tx_time_lat,
	datad => ww_sload_path_7,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dffs_7);

\dffs[47]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[47]\ = DFFE(sload_path_47 & tx_time_lat, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "A0A0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_47,
	datac => ww_tx_time_lat,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[47]\);

\dffs[46]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[46]\ = DFFE(\dffs[47]\ & (sload_path_46 # !tx_time_lat) # !\dffs[47]\ & tx_time_lat & sload_path_46, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[47]\,
	datac => ww_tx_time_lat,
	datad => ww_sload_path_46,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[46]\);

\dffs[45]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[45]\ = DFFE(\dffs[46]\ & (sload_path_45 # !tx_time_lat) # !\dffs[46]\ & tx_time_lat & sload_path_45, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[46]\,
	datac => ww_tx_time_lat,
	datad => ww_sload_path_45,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[45]\);

\dffs[44]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[44]\ = DFFE(\dffs[45]\ & (sload_path_44 # !tx_time_lat) # !\dffs[45]\ & tx_time_lat & sload_path_44, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[45]\,
	datac => ww_tx_time_lat,
	datad => ww_sload_path_44,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[44]\);

\dffs[43]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[43]\ = DFFE(sload_path_43 & (tx_time_lat # \dffs[44]\) # !sload_path_43 & !tx_time_lat & \dffs[44]\, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AFA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_43,
	datac => ww_tx_time_lat,
	datad => \dffs[44]\,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[43]\);

\dffs[42]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[42]\ = DFFE(sload_path_42 & (tx_time_lat # \dffs[43]\) # !sload_path_42 & !tx_time_lat & \dffs[43]\, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AFA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_42,
	datac => ww_tx_time_lat,
	datad => \dffs[43]\,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[42]\);

\dffs[41]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[41]\ = DFFE(sload_path_41 & (tx_time_lat # \dffs[42]\) # !sload_path_41 & !tx_time_lat & \dffs[42]\, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AFA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_41,
	datac => ww_tx_time_lat,
	datad => \dffs[42]\,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[41]\);

\dffs[40]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[40]\ = DFFE(tx_time_lat & sload_path_40 # !tx_time_lat & \dffs[41]\, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC30",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_tx_time_lat,
	datac => \dffs[41]\,
	datad => ww_sload_path_40,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[40]\);

\dffs[39]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[39]\ = DFFE(\dffs[40]\ & (sload_path_39 # !tx_time_lat) # !\dffs[40]\ & tx_time_lat & sload_path_39, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[40]\,
	datac => ww_tx_time_lat,
	datad => ww_sload_path_39,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[39]\);

\dffs[38]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[38]\ = DFFE(\dffs[39]\ & (sload_path_38 # !tx_time_lat) # !\dffs[39]\ & tx_time_lat & sload_path_38, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[39]\,
	datac => ww_tx_time_lat,
	datad => ww_sload_path_38,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[38]\);

\dffs[37]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[37]\ = DFFE(\dffs[38]\ & (sload_path_37 # !tx_time_lat) # !\dffs[38]\ & tx_time_lat & sload_path_37, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[38]\,
	datac => ww_tx_time_lat,
	datad => ww_sload_path_37,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[37]\);

\dffs[36]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[36]\ = DFFE(\dffs[37]\ & (sload_path_36 # !tx_time_lat) # !\dffs[37]\ & tx_time_lat & sload_path_36, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[37]\,
	datac => ww_tx_time_lat,
	datad => ww_sload_path_36,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[36]\);

\dffs[35]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[35]\ = DFFE(\dffs[36]\ & (sload_path_35 # !tx_time_lat) # !\dffs[36]\ & tx_time_lat & sload_path_35, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[36]\,
	datac => ww_tx_time_lat,
	datad => ww_sload_path_35,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[35]\);

\dffs[34]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[34]\ = DFFE(\dffs[35]\ & (sload_path_34 # !tx_time_lat) # !\dffs[35]\ & tx_time_lat & sload_path_34, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[35]\,
	datac => ww_tx_time_lat,
	datad => ww_sload_path_34,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[34]\);

\dffs[33]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[33]\ = DFFE(\dffs[34]\ & (sload_path_33 # !tx_time_lat) # !\dffs[34]\ & tx_time_lat & sload_path_33, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[34]\,
	datac => ww_tx_time_lat,
	datad => ww_sload_path_33,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[33]\);

\dffs[32]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[32]\ = DFFE(\dffs[33]\ & (sload_path_32 # !tx_time_lat) # !\dffs[33]\ & tx_time_lat & sload_path_32, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[33]\,
	datac => ww_tx_time_lat,
	datad => ww_sload_path_32,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[32]\);

\dffs[31]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[31]\ = DFFE(\dffs[32]\ & (sload_path_31 # !tx_time_lat) # !\dffs[32]\ & tx_time_lat & sload_path_31, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[32]\,
	datac => ww_tx_time_lat,
	datad => ww_sload_path_31,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[31]\);

\dffs[30]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[30]\ = DFFE(\dffs[31]\ & (sload_path_30 # !tx_time_lat) # !\dffs[31]\ & tx_time_lat & sload_path_30, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[31]\,
	datac => ww_tx_time_lat,
	datad => ww_sload_path_30,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[30]\);

\dffs[29]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[29]\ = DFFE(tx_time_lat & sload_path_29 # !tx_time_lat & \dffs[30]\, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC30",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_tx_time_lat,
	datac => \dffs[30]\,
	datad => ww_sload_path_29,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[29]\);

\dffs[28]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[28]\ = DFFE(\dffs[29]\ & (sload_path_28 # !tx_time_lat) # !\dffs[29]\ & tx_time_lat & sload_path_28, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[29]\,
	datac => ww_tx_time_lat,
	datad => ww_sload_path_28,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[28]\);

\dffs[27]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[27]\ = DFFE(\dffs[28]\ & (sload_path_27 # !tx_time_lat) # !\dffs[28]\ & tx_time_lat & sload_path_27, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[28]\,
	datac => ww_tx_time_lat,
	datad => ww_sload_path_27,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[27]\);

\dffs[26]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[26]\ = DFFE(tx_time_lat & sload_path_26 # !tx_time_lat & \dffs[27]\, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC30",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_tx_time_lat,
	datac => \dffs[27]\,
	datad => ww_sload_path_26,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[26]\);

\dffs[25]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[25]\ = DFFE(tx_time_lat & sload_path_25 # !tx_time_lat & \dffs[26]\, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EE44",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_tx_time_lat,
	datab => \dffs[26]\,
	datad => ww_sload_path_25,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[25]\);

\dffs[24]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[24]\ = DFFE(tx_time_lat & sload_path_24 # !tx_time_lat & \dffs[25]\, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA50",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_tx_time_lat,
	datac => \dffs[25]\,
	datad => ww_sload_path_24,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[24]\);

\dffs[23]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[23]\ = DFFE(\dffs[24]\ & (sload_path_23 # !tx_time_lat) # !\dffs[24]\ & sload_path_23 & tx_time_lat, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0CC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[24]\,
	datac => ww_sload_path_23,
	datad => ww_tx_time_lat,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[23]\);

\dffs[22]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[22]\ = DFFE(\dffs[23]\ & (sload_path_22 # !tx_time_lat) # !\dffs[23]\ & tx_time_lat & sload_path_22, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[23]\,
	datac => ww_tx_time_lat,
	datad => ww_sload_path_22,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[22]\);

\dffs[21]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[21]\ = DFFE(tx_time_lat & sload_path_21 # !tx_time_lat & \dffs[22]\, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E4E4",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_tx_time_lat,
	datab => \dffs[22]\,
	datac => ww_sload_path_21,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[21]\);

\dffs[20]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[20]\ = DFFE(tx_time_lat & sload_path_20 # !tx_time_lat & \dffs[21]\, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC30",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_tx_time_lat,
	datac => \dffs[21]\,
	datad => ww_sload_path_20,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[20]\);

\dffs[19]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[19]\ = DFFE(tx_time_lat & sload_path_19 # !tx_time_lat & \dffs[20]\, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC30",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_tx_time_lat,
	datac => \dffs[20]\,
	datad => ww_sload_path_19,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[19]\);

\dffs[18]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[18]\ = DFFE(\dffs[19]\ & (sload_path_18 # !tx_time_lat) # !\dffs[19]\ & tx_time_lat & sload_path_18, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[19]\,
	datac => ww_tx_time_lat,
	datad => ww_sload_path_18,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[18]\);

\dffs[17]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[17]\ = DFFE(tx_time_lat & sload_path_17 # !tx_time_lat & \dffs[18]\, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC30",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_tx_time_lat,
	datac => \dffs[18]\,
	datad => ww_sload_path_17,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[17]\);

\dffs[16]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[16]\ = DFFE(\dffs[17]\ & (sload_path_16 # !tx_time_lat) # !\dffs[17]\ & tx_time_lat & sload_path_16, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[17]\,
	datac => ww_tx_time_lat,
	datad => ww_sload_path_16,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[16]\);

\dffs[15]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[15]\ = DFFE(tx_time_lat & sload_path_15 # !tx_time_lat & \dffs[16]\, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E4E4",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_tx_time_lat,
	datab => \dffs[16]\,
	datac => ww_sload_path_15,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[15]\);

\dffs[14]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[14]\ = DFFE(\dffs[15]\ & (sload_path_14 # !tx_time_lat) # !\dffs[15]\ & tx_time_lat & sload_path_14, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[15]\,
	datac => ww_tx_time_lat,
	datad => ww_sload_path_14,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[14]\);

\dffs[13]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[13]\ = DFFE(tx_time_lat & sload_path_13 # !tx_time_lat & \dffs[14]\, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E4E4",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_tx_time_lat,
	datab => \dffs[14]\,
	datac => ww_sload_path_13,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[13]\);

\dffs[12]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[12]\ = DFFE(\dffs[13]\ & (sload_path_12 # !tx_time_lat) # !\dffs[13]\ & tx_time_lat & sload_path_12, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[13]\,
	datac => ww_tx_time_lat,
	datad => ww_sload_path_12,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[12]\);

\dffs[11]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[11]\ = DFFE(tx_time_lat & sload_path_11 # !tx_time_lat & \dffs[12]\, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E4E4",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_tx_time_lat,
	datab => \dffs[12]\,
	datac => ww_sload_path_11,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[11]\);

\dffs[10]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[10]\ = DFFE(\dffs[11]\ & (sload_path_10 # !tx_time_lat) # !\dffs[11]\ & sload_path_10 & tx_time_lat, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0CC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[11]\,
	datac => ww_sload_path_10,
	datad => ww_tx_time_lat,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[10]\);

\dffs[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[9]\ = DFFE(tx_time_lat & sload_path_9 # !tx_time_lat & \dffs[10]\, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA50",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_tx_time_lat,
	datac => \dffs[10]\,
	datad => ww_sload_path_9,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[9]\);

\dffs[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[8]\ = DFFE(\dffs[9]\ & (sload_path_8 # !tx_time_lat) # !\dffs[9]\ & tx_time_lat & sload_path_8, GLOBAL(outclock0), , , inst36)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[9]\,
	datac => ww_tx_time_lat,
	datad => ww_sload_path_8,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[8]\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	shrg48pld IS
    PORT (
	clock : IN std_logic;
	sload_path_47 : IN std_logic;
	sload_path_46 : IN std_logic;
	sload_path_45 : IN std_logic;
	sload_path_44 : IN std_logic;
	sload_path_43 : IN std_logic;
	sload_path_42 : IN std_logic;
	sload_path_41 : IN std_logic;
	sload_path_40 : IN std_logic;
	sload_path_39 : IN std_logic;
	sload_path_38 : IN std_logic;
	sload_path_37 : IN std_logic;
	sload_path_36 : IN std_logic;
	sload_path_35 : IN std_logic;
	sload_path_34 : IN std_logic;
	sload_path_33 : IN std_logic;
	sload_path_32 : IN std_logic;
	sload_path_31 : IN std_logic;
	sload_path_30 : IN std_logic;
	sload_path_29 : IN std_logic;
	sload_path_28 : IN std_logic;
	sload_path_27 : IN std_logic;
	sload_path_26 : IN std_logic;
	sload_path_25 : IN std_logic;
	sload_path_24 : IN std_logic;
	sload_path_23 : IN std_logic;
	sload_path_22 : IN std_logic;
	sload_path_21 : IN std_logic;
	sload_path_20 : IN std_logic;
	sload_path_19 : IN std_logic;
	sload_path_18 : IN std_logic;
	sload_path_17 : IN std_logic;
	sload_path_16 : IN std_logic;
	sload_path_15 : IN std_logic;
	sload_path_14 : IN std_logic;
	sload_path_13 : IN std_logic;
	sload_path_12 : IN std_logic;
	sload_path_11 : IN std_logic;
	sload_path_10 : IN std_logic;
	sload_path_9 : IN std_logic;
	sload_path_8 : IN std_logic;
	sload_path_7 : IN std_logic;
	sload_path_6 : IN std_logic;
	sload_path_5 : IN std_logic;
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	tx_time_lat : IN std_logic;
	enable : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	dffs_0 : OUT std_logic;
	dffs_2 : OUT std_logic;
	dffs_1 : OUT std_logic;
	dffs_3 : OUT std_logic;
	dffs_4 : OUT std_logic;
	dffs_5 : OUT std_logic;
	dffs_6 : OUT std_logic;
	dffs_7 : OUT std_logic
	);
END shrg48pld;

ARCHITECTURE structure OF shrg48pld IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_sload_path_47 : std_logic;
SIGNAL ww_sload_path_46 : std_logic;
SIGNAL ww_sload_path_45 : std_logic;
SIGNAL ww_sload_path_44 : std_logic;
SIGNAL ww_sload_path_43 : std_logic;
SIGNAL ww_sload_path_42 : std_logic;
SIGNAL ww_sload_path_41 : std_logic;
SIGNAL ww_sload_path_40 : std_logic;
SIGNAL ww_sload_path_39 : std_logic;
SIGNAL ww_sload_path_38 : std_logic;
SIGNAL ww_sload_path_37 : std_logic;
SIGNAL ww_sload_path_36 : std_logic;
SIGNAL ww_sload_path_35 : std_logic;
SIGNAL ww_sload_path_34 : std_logic;
SIGNAL ww_sload_path_33 : std_logic;
SIGNAL ww_sload_path_32 : std_logic;
SIGNAL ww_sload_path_31 : std_logic;
SIGNAL ww_sload_path_30 : std_logic;
SIGNAL ww_sload_path_29 : std_logic;
SIGNAL ww_sload_path_28 : std_logic;
SIGNAL ww_sload_path_27 : std_logic;
SIGNAL ww_sload_path_26 : std_logic;
SIGNAL ww_sload_path_25 : std_logic;
SIGNAL ww_sload_path_24 : std_logic;
SIGNAL ww_sload_path_23 : std_logic;
SIGNAL ww_sload_path_22 : std_logic;
SIGNAL ww_sload_path_21 : std_logic;
SIGNAL ww_sload_path_20 : std_logic;
SIGNAL ww_sload_path_19 : std_logic;
SIGNAL ww_sload_path_18 : std_logic;
SIGNAL ww_sload_path_17 : std_logic;
SIGNAL ww_sload_path_16 : std_logic;
SIGNAL ww_sload_path_15 : std_logic;
SIGNAL ww_sload_path_14 : std_logic;
SIGNAL ww_sload_path_13 : std_logic;
SIGNAL ww_sload_path_12 : std_logic;
SIGNAL ww_sload_path_11 : std_logic;
SIGNAL ww_sload_path_10 : std_logic;
SIGNAL ww_sload_path_9 : std_logic;
SIGNAL ww_sload_path_8 : std_logic;
SIGNAL ww_sload_path_7 : std_logic;
SIGNAL ww_sload_path_6 : std_logic;
SIGNAL ww_sload_path_5 : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_tx_time_lat : std_logic;
SIGNAL ww_enable : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_dffs_0 : std_logic;
SIGNAL ww_dffs_2 : std_logic;
SIGNAL ww_dffs_1 : std_logic;
SIGNAL ww_dffs_3 : std_logic;
SIGNAL ww_dffs_4 : std_logic;
SIGNAL ww_dffs_5 : std_logic;
SIGNAL ww_dffs_6 : std_logic;
SIGNAL ww_dffs_7 : std_logic;

COMPONENT lpm_shiftreg_3
    PORT (
	clock : IN std_logic;
	sload_path_47 : IN std_logic;
	sload_path_46 : IN std_logic;
	sload_path_45 : IN std_logic;
	sload_path_44 : IN std_logic;
	sload_path_43 : IN std_logic;
	sload_path_42 : IN std_logic;
	sload_path_41 : IN std_logic;
	sload_path_40 : IN std_logic;
	sload_path_39 : IN std_logic;
	sload_path_38 : IN std_logic;
	sload_path_37 : IN std_logic;
	sload_path_36 : IN std_logic;
	sload_path_35 : IN std_logic;
	sload_path_34 : IN std_logic;
	sload_path_33 : IN std_logic;
	sload_path_32 : IN std_logic;
	sload_path_31 : IN std_logic;
	sload_path_30 : IN std_logic;
	sload_path_29 : IN std_logic;
	sload_path_28 : IN std_logic;
	sload_path_27 : IN std_logic;
	sload_path_26 : IN std_logic;
	sload_path_25 : IN std_logic;
	sload_path_24 : IN std_logic;
	sload_path_23 : IN std_logic;
	sload_path_22 : IN std_logic;
	sload_path_21 : IN std_logic;
	sload_path_20 : IN std_logic;
	sload_path_19 : IN std_logic;
	sload_path_18 : IN std_logic;
	sload_path_17 : IN std_logic;
	sload_path_16 : IN std_logic;
	sload_path_15 : IN std_logic;
	sload_path_14 : IN std_logic;
	sload_path_13 : IN std_logic;
	sload_path_12 : IN std_logic;
	sload_path_11 : IN std_logic;
	sload_path_10 : IN std_logic;
	sload_path_9 : IN std_logic;
	sload_path_8 : IN std_logic;
	sload_path_7 : IN std_logic;
	sload_path_6 : IN std_logic;
	sload_path_5 : IN std_logic;
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	tx_time_lat : IN std_logic;
	enable : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	dffs_0 : OUT std_logic;
	dffs_2 : OUT std_logic;
	dffs_1 : OUT std_logic;
	dffs_3 : OUT std_logic;
	dffs_4 : OUT std_logic;
	dffs_5 : OUT std_logic;
	dffs_6 : OUT std_logic;
	dffs_7 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_sload_path_47 <= sload_path_47;
ww_sload_path_46 <= sload_path_46;
ww_sload_path_45 <= sload_path_45;
ww_sload_path_44 <= sload_path_44;
ww_sload_path_43 <= sload_path_43;
ww_sload_path_42 <= sload_path_42;
ww_sload_path_41 <= sload_path_41;
ww_sload_path_40 <= sload_path_40;
ww_sload_path_39 <= sload_path_39;
ww_sload_path_38 <= sload_path_38;
ww_sload_path_37 <= sload_path_37;
ww_sload_path_36 <= sload_path_36;
ww_sload_path_35 <= sload_path_35;
ww_sload_path_34 <= sload_path_34;
ww_sload_path_33 <= sload_path_33;
ww_sload_path_32 <= sload_path_32;
ww_sload_path_31 <= sload_path_31;
ww_sload_path_30 <= sload_path_30;
ww_sload_path_29 <= sload_path_29;
ww_sload_path_28 <= sload_path_28;
ww_sload_path_27 <= sload_path_27;
ww_sload_path_26 <= sload_path_26;
ww_sload_path_25 <= sload_path_25;
ww_sload_path_24 <= sload_path_24;
ww_sload_path_23 <= sload_path_23;
ww_sload_path_22 <= sload_path_22;
ww_sload_path_21 <= sload_path_21;
ww_sload_path_20 <= sload_path_20;
ww_sload_path_19 <= sload_path_19;
ww_sload_path_18 <= sload_path_18;
ww_sload_path_17 <= sload_path_17;
ww_sload_path_16 <= sload_path_16;
ww_sload_path_15 <= sload_path_15;
ww_sload_path_14 <= sload_path_14;
ww_sload_path_13 <= sload_path_13;
ww_sload_path_12 <= sload_path_12;
ww_sload_path_11 <= sload_path_11;
ww_sload_path_10 <= sload_path_10;
ww_sload_path_9 <= sload_path_9;
ww_sload_path_8 <= sload_path_8;
ww_sload_path_7 <= sload_path_7;
ww_sload_path_6 <= sload_path_6;
ww_sload_path_5 <= sload_path_5;
ww_sload_path_4 <= sload_path_4;
ww_sload_path_3 <= sload_path_3;
ww_sload_path_2 <= sload_path_2;
ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_tx_time_lat <= tx_time_lat;
ww_enable <= enable;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
dffs_0 <= ww_dffs_0;
dffs_2 <= ww_dffs_2;
dffs_1 <= ww_dffs_1;
dffs_3 <= ww_dffs_3;
dffs_4 <= ww_dffs_4;
dffs_5 <= ww_dffs_5;
dffs_6 <= ww_dffs_6;
dffs_7 <= ww_dffs_7;
lpm_shiftreg_component : lpm_shiftreg_3
PORT MAP (
	clock => ww_clock,
	sload_path_47 => ww_sload_path_47,
	sload_path_46 => ww_sload_path_46,
	sload_path_45 => ww_sload_path_45,
	sload_path_44 => ww_sload_path_44,
	sload_path_43 => ww_sload_path_43,
	sload_path_42 => ww_sload_path_42,
	sload_path_41 => ww_sload_path_41,
	sload_path_40 => ww_sload_path_40,
	sload_path_39 => ww_sload_path_39,
	sload_path_38 => ww_sload_path_38,
	sload_path_37 => ww_sload_path_37,
	sload_path_36 => ww_sload_path_36,
	sload_path_35 => ww_sload_path_35,
	sload_path_34 => ww_sload_path_34,
	sload_path_33 => ww_sload_path_33,
	sload_path_32 => ww_sload_path_32,
	sload_path_31 => ww_sload_path_31,
	sload_path_30 => ww_sload_path_30,
	sload_path_29 => ww_sload_path_29,
	sload_path_28 => ww_sload_path_28,
	sload_path_27 => ww_sload_path_27,
	sload_path_26 => ww_sload_path_26,
	sload_path_25 => ww_sload_path_25,
	sload_path_24 => ww_sload_path_24,
	sload_path_23 => ww_sload_path_23,
	sload_path_22 => ww_sload_path_22,
	sload_path_21 => ww_sload_path_21,
	sload_path_20 => ww_sload_path_20,
	sload_path_19 => ww_sload_path_19,
	sload_path_18 => ww_sload_path_18,
	sload_path_17 => ww_sload_path_17,
	sload_path_16 => ww_sload_path_16,
	sload_path_15 => ww_sload_path_15,
	sload_path_14 => ww_sload_path_14,
	sload_path_13 => ww_sload_path_13,
	sload_path_12 => ww_sload_path_12,
	sload_path_11 => ww_sload_path_11,
	sload_path_10 => ww_sload_path_10,
	sload_path_9 => ww_sload_path_9,
	sload_path_8 => ww_sload_path_8,
	sload_path_7 => ww_sload_path_7,
	sload_path_6 => ww_sload_path_6,
	sload_path_5 => ww_sload_path_5,
	sload_path_4 => ww_sload_path_4,
	sload_path_3 => ww_sload_path_3,
	sload_path_2 => ww_sload_path_2,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	tx_time_lat => ww_tx_time_lat,
	enable => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	dffs_0 => ww_dffs_0,
	dffs_2 => ww_dffs_2,
	dffs_1 => ww_dffs_1,
	dffs_3 => ww_dffs_3,
	dffs_4 => ww_dffs_4,
	dffs_5 => ww_dffs_5,
	dffs_6 => ww_dffs_6,
	dffs_7 => ww_dffs_7);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_shiftreg_2 IS
    PORT (
	clock : IN std_logic;
	sreg : IN std_logic;
	dom_id_0 : IN std_logic;
	enable : IN std_logic;
	dom_id_1 : IN std_logic;
	dom_id_2 : IN std_logic;
	dom_id_3 : IN std_logic;
	dom_id_4 : IN std_logic;
	dom_id_5 : IN std_logic;
	dom_id_6 : IN std_logic;
	dom_id_7 : IN std_logic;
	dom_id_8 : IN std_logic;
	dom_id_9 : IN std_logic;
	dom_id_10 : IN std_logic;
	dom_id_11 : IN std_logic;
	dom_id_12 : IN std_logic;
	dom_id_13 : IN std_logic;
	dom_id_14 : IN std_logic;
	dom_id_15 : IN std_logic;
	dom_id_16 : IN std_logic;
	dom_id_17 : IN std_logic;
	dom_id_18 : IN std_logic;
	dom_id_19 : IN std_logic;
	dom_id_20 : IN std_logic;
	dom_id_21 : IN std_logic;
	dom_id_22 : IN std_logic;
	dom_id_23 : IN std_logic;
	dom_id_24 : IN std_logic;
	dom_id_25 : IN std_logic;
	dom_id_26 : IN std_logic;
	dom_id_27 : IN std_logic;
	dom_id_28 : IN std_logic;
	dom_id_29 : IN std_logic;
	dom_id_30 : IN std_logic;
	dom_id_31 : IN std_logic;
	dom_id_32 : IN std_logic;
	dom_id_33 : IN std_logic;
	dom_id_34 : IN std_logic;
	dom_id_35 : IN std_logic;
	dom_id_36 : IN std_logic;
	dom_id_37 : IN std_logic;
	dom_id_38 : IN std_logic;
	dom_id_39 : IN std_logic;
	dom_id_40 : IN std_logic;
	dom_id_41 : IN std_logic;
	dom_id_42 : IN std_logic;
	dom_id_43 : IN std_logic;
	dom_id_44 : IN std_logic;
	dom_id_45 : IN std_logic;
	dom_id_46 : IN std_logic;
	dom_id_47 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	dffs_0 : OUT std_logic;
	dffs_1 : OUT std_logic;
	dffs_2 : OUT std_logic;
	dffs_3 : OUT std_logic;
	dffs_4 : OUT std_logic;
	dffs_5 : OUT std_logic;
	dffs_6 : OUT std_logic;
	dffs_7 : OUT std_logic
	);
END lpm_shiftreg_2;

ARCHITECTURE structure OF lpm_shiftreg_2 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_sreg : std_logic;
SIGNAL ww_dom_id_0 : std_logic;
SIGNAL ww_enable : std_logic;
SIGNAL ww_dom_id_1 : std_logic;
SIGNAL ww_dom_id_2 : std_logic;
SIGNAL ww_dom_id_3 : std_logic;
SIGNAL ww_dom_id_4 : std_logic;
SIGNAL ww_dom_id_5 : std_logic;
SIGNAL ww_dom_id_6 : std_logic;
SIGNAL ww_dom_id_7 : std_logic;
SIGNAL ww_dom_id_8 : std_logic;
SIGNAL ww_dom_id_9 : std_logic;
SIGNAL ww_dom_id_10 : std_logic;
SIGNAL ww_dom_id_11 : std_logic;
SIGNAL ww_dom_id_12 : std_logic;
SIGNAL ww_dom_id_13 : std_logic;
SIGNAL ww_dom_id_14 : std_logic;
SIGNAL ww_dom_id_15 : std_logic;
SIGNAL ww_dom_id_16 : std_logic;
SIGNAL ww_dom_id_17 : std_logic;
SIGNAL ww_dom_id_18 : std_logic;
SIGNAL ww_dom_id_19 : std_logic;
SIGNAL ww_dom_id_20 : std_logic;
SIGNAL ww_dom_id_21 : std_logic;
SIGNAL ww_dom_id_22 : std_logic;
SIGNAL ww_dom_id_23 : std_logic;
SIGNAL ww_dom_id_24 : std_logic;
SIGNAL ww_dom_id_25 : std_logic;
SIGNAL ww_dom_id_26 : std_logic;
SIGNAL ww_dom_id_27 : std_logic;
SIGNAL ww_dom_id_28 : std_logic;
SIGNAL ww_dom_id_29 : std_logic;
SIGNAL ww_dom_id_30 : std_logic;
SIGNAL ww_dom_id_31 : std_logic;
SIGNAL ww_dom_id_32 : std_logic;
SIGNAL ww_dom_id_33 : std_logic;
SIGNAL ww_dom_id_34 : std_logic;
SIGNAL ww_dom_id_35 : std_logic;
SIGNAL ww_dom_id_36 : std_logic;
SIGNAL ww_dom_id_37 : std_logic;
SIGNAL ww_dom_id_38 : std_logic;
SIGNAL ww_dom_id_39 : std_logic;
SIGNAL ww_dom_id_40 : std_logic;
SIGNAL ww_dom_id_41 : std_logic;
SIGNAL ww_dom_id_42 : std_logic;
SIGNAL ww_dom_id_43 : std_logic;
SIGNAL ww_dom_id_44 : std_logic;
SIGNAL ww_dom_id_45 : std_logic;
SIGNAL ww_dom_id_46 : std_logic;
SIGNAL ww_dom_id_47 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_dffs_0 : std_logic;
SIGNAL ww_dffs_1 : std_logic;
SIGNAL ww_dffs_2 : std_logic;
SIGNAL ww_dffs_3 : std_logic;
SIGNAL ww_dffs_4 : std_logic;
SIGNAL ww_dffs_5 : std_logic;
SIGNAL ww_dffs_6 : std_logic;
SIGNAL ww_dffs_7 : std_logic;
SIGNAL \dffs[47]\ : std_logic;
SIGNAL \dffs[46]\ : std_logic;
SIGNAL \dffs[45]\ : std_logic;
SIGNAL \dffs[44]\ : std_logic;
SIGNAL \dffs[43]\ : std_logic;
SIGNAL \dffs[42]\ : std_logic;
SIGNAL \dffs[41]\ : std_logic;
SIGNAL \dffs[40]\ : std_logic;
SIGNAL \dffs[39]\ : std_logic;
SIGNAL \dffs[38]\ : std_logic;
SIGNAL \dffs[37]\ : std_logic;
SIGNAL \dffs[36]\ : std_logic;
SIGNAL \dffs[35]\ : std_logic;
SIGNAL \dffs[34]\ : std_logic;
SIGNAL \dffs[33]\ : std_logic;
SIGNAL \dffs[32]\ : std_logic;
SIGNAL \dffs[31]\ : std_logic;
SIGNAL \dffs[30]\ : std_logic;
SIGNAL \dffs[29]\ : std_logic;
SIGNAL \dffs[28]\ : std_logic;
SIGNAL \dffs[27]\ : std_logic;
SIGNAL \dffs[26]\ : std_logic;
SIGNAL \dffs[25]\ : std_logic;
SIGNAL \dffs[24]\ : std_logic;
SIGNAL \dffs[23]\ : std_logic;
SIGNAL \dffs[22]\ : std_logic;
SIGNAL \dffs[21]\ : std_logic;
SIGNAL \dffs[20]\ : std_logic;
SIGNAL \dffs[19]\ : std_logic;
SIGNAL \dffs[18]\ : std_logic;
SIGNAL \dffs[17]\ : std_logic;
SIGNAL \dffs[16]\ : std_logic;
SIGNAL \dffs[15]\ : std_logic;
SIGNAL \dffs[14]\ : std_logic;
SIGNAL \dffs[13]\ : std_logic;
SIGNAL \dffs[12]\ : std_logic;
SIGNAL \dffs[11]\ : std_logic;
SIGNAL \dffs[10]\ : std_logic;
SIGNAL \dffs[9]\ : std_logic;
SIGNAL \dffs[8]\ : std_logic;

BEGIN

ww_clock <= clock;
ww_sreg <= sreg;
ww_dom_id_0 <= dom_id_0;
ww_enable <= enable;
ww_dom_id_1 <= dom_id_1;
ww_dom_id_2 <= dom_id_2;
ww_dom_id_3 <= dom_id_3;
ww_dom_id_4 <= dom_id_4;
ww_dom_id_5 <= dom_id_5;
ww_dom_id_6 <= dom_id_6;
ww_dom_id_7 <= dom_id_7;
ww_dom_id_8 <= dom_id_8;
ww_dom_id_9 <= dom_id_9;
ww_dom_id_10 <= dom_id_10;
ww_dom_id_11 <= dom_id_11;
ww_dom_id_12 <= dom_id_12;
ww_dom_id_13 <= dom_id_13;
ww_dom_id_14 <= dom_id_14;
ww_dom_id_15 <= dom_id_15;
ww_dom_id_16 <= dom_id_16;
ww_dom_id_17 <= dom_id_17;
ww_dom_id_18 <= dom_id_18;
ww_dom_id_19 <= dom_id_19;
ww_dom_id_20 <= dom_id_20;
ww_dom_id_21 <= dom_id_21;
ww_dom_id_22 <= dom_id_22;
ww_dom_id_23 <= dom_id_23;
ww_dom_id_24 <= dom_id_24;
ww_dom_id_25 <= dom_id_25;
ww_dom_id_26 <= dom_id_26;
ww_dom_id_27 <= dom_id_27;
ww_dom_id_28 <= dom_id_28;
ww_dom_id_29 <= dom_id_29;
ww_dom_id_30 <= dom_id_30;
ww_dom_id_31 <= dom_id_31;
ww_dom_id_32 <= dom_id_32;
ww_dom_id_33 <= dom_id_33;
ww_dom_id_34 <= dom_id_34;
ww_dom_id_35 <= dom_id_35;
ww_dom_id_36 <= dom_id_36;
ww_dom_id_37 <= dom_id_37;
ww_dom_id_38 <= dom_id_38;
ww_dom_id_39 <= dom_id_39;
ww_dom_id_40 <= dom_id_40;
ww_dom_id_41 <= dom_id_41;
ww_dom_id_42 <= dom_id_42;
ww_dom_id_43 <= dom_id_43;
ww_dom_id_44 <= dom_id_44;
ww_dom_id_45 <= dom_id_45;
ww_dom_id_46 <= dom_id_46;
ww_dom_id_47 <= dom_id_47;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
dffs_0 <= ww_dffs_0;
dffs_1 <= ww_dffs_1;
dffs_2 <= ww_dffs_2;
dffs_3 <= ww_dffs_3;
dffs_4 <= ww_dffs_4;
dffs_5 <= ww_dffs_5;
dffs_6 <= ww_dffs_6;
dffs_7 <= ww_dffs_7;

\dffs[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- dffs_0 = DFFE(sreg7 & dom_id_0 # !sreg7 & dffs_1, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E4E4",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg,
	datab => ww_dffs_1,
	datac => ww_dom_id_0,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dffs_0);

\dffs[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- dffs_1 = DFFE(sreg7 & dom_id_1 # !sreg7 & dffs_2, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3C0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sreg,
	datac => ww_dom_id_1,
	datad => ww_dffs_2,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dffs_1);

\dffs[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- dffs_2 = DFFE(sreg7 & dom_id_2 # !sreg7 & dffs_3, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC30",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sreg,
	datac => ww_dffs_3,
	datad => ww_dom_id_2,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dffs_2);

\dffs[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- dffs_3 = DFFE(dffs_4 & (dom_id_3 # !sreg7) # !dffs_4 & sreg7 & dom_id_3, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_dffs_4,
	datac => ww_sreg,
	datad => ww_dom_id_3,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dffs_3);

\dffs[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- dffs_4 = DFFE(sreg7 & dom_id_4 # !sreg7 & dffs_5, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3C0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sreg,
	datac => ww_dom_id_4,
	datad => ww_dffs_5,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dffs_4);

\dffs[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- dffs_5 = DFFE(sreg7 & dom_id_5 # !sreg7 & dffs_6, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F5A0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg,
	datac => ww_dom_id_5,
	datad => ww_dffs_6,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dffs_5);

\dffs[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- dffs_6 = DFFE(sreg7 & dom_id_6 # !sreg7 & dffs_7, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3C0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sreg,
	datac => ww_dom_id_6,
	datad => ww_dffs_7,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dffs_6);

\dffs[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- dffs_7 = DFFE(sreg7 & dom_id_7 # !sreg7 & \dffs[8]\, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3C0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sreg,
	datac => ww_dom_id_7,
	datad => \dffs[8]\,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dffs_7);

\dffs[47]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[47]\ = DFFE(dom_id_47 & sreg7, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_dom_id_47,
	datad => ww_sreg,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[47]\);

\dffs[46]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[46]\ = DFFE(\dffs[47]\ & (dom_id_46 # !sreg7) # !\dffs[47]\ & sreg7 & dom_id_46, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[47]\,
	datac => ww_sreg,
	datad => ww_dom_id_46,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[46]\);

\dffs[45]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[45]\ = DFFE(dom_id_45 & (sreg7 # \dffs[46]\) # !dom_id_45 & !sreg7 & \dffs[46]\, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_dom_id_45,
	datac => ww_sreg,
	datad => \dffs[46]\,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[45]\);

\dffs[44]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[44]\ = DFFE(\dffs[45]\ & (dom_id_44 # !sreg7) # !\dffs[45]\ & sreg7 & dom_id_44, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[45]\,
	datac => ww_sreg,
	datad => ww_dom_id_44,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[44]\);

\dffs[43]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[43]\ = DFFE(\dffs[44]\ & (dom_id_43 # !sreg7) # !\dffs[44]\ & sreg7 & dom_id_43, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[44]\,
	datac => ww_sreg,
	datad => ww_dom_id_43,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[43]\);

\dffs[42]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[42]\ = DFFE(dom_id_42 & (sreg7 # \dffs[43]\) # !dom_id_42 & !sreg7 & \dffs[43]\, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_dom_id_42,
	datac => ww_sreg,
	datad => \dffs[43]\,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[42]\);

\dffs[41]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[41]\ = DFFE(\dffs[42]\ & (dom_id_41 # !sreg7) # !\dffs[42]\ & sreg7 & dom_id_41, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[42]\,
	datac => ww_sreg,
	datad => ww_dom_id_41,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[41]\);

\dffs[40]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[40]\ = DFFE(dom_id_40 & (sreg7 # \dffs[41]\) # !dom_id_40 & !sreg7 & \dffs[41]\, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_dom_id_40,
	datac => ww_sreg,
	datad => \dffs[41]\,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[40]\);

\dffs[39]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[39]\ = DFFE(\dffs[40]\ & (dom_id_39 # !sreg7) # !\dffs[40]\ & sreg7 & dom_id_39, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[40]\,
	datac => ww_sreg,
	datad => ww_dom_id_39,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[39]\);

\dffs[38]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[38]\ = DFFE(dom_id_38 & (sreg7 # \dffs[39]\) # !dom_id_38 & !sreg7 & \dffs[39]\, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_dom_id_38,
	datac => ww_sreg,
	datad => \dffs[39]\,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[38]\);

\dffs[37]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[37]\ = DFFE(\dffs[38]\ & (dom_id_37 # !sreg7) # !\dffs[38]\ & sreg7 & dom_id_37, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[38]\,
	datac => ww_sreg,
	datad => ww_dom_id_37,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[37]\);

\dffs[36]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[36]\ = DFFE(\dffs[37]\ & (dom_id_36 # !sreg7) # !\dffs[37]\ & dom_id_36 & sreg7, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CACA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[37]\,
	datab => ww_dom_id_36,
	datac => ww_sreg,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[36]\);

\dffs[35]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[35]\ = DFFE(\dffs[36]\ & (dom_id_35 # !sreg7) # !\dffs[36]\ & sreg7 & dom_id_35, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[36]\,
	datac => ww_sreg,
	datad => ww_dom_id_35,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[35]\);

\dffs[34]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[34]\ = DFFE(\dffs[35]\ & (dom_id_34 # !sreg7) # !\dffs[35]\ & sreg7 & dom_id_34, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EE22",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[35]\,
	datab => ww_sreg,
	datad => ww_dom_id_34,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[34]\);

\dffs[33]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[33]\ = DFFE(dom_id_33 & (\dffs[34]\ # sreg7) # !dom_id_33 & \dffs[34]\ & !sreg7, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CCF0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_dom_id_33,
	datac => \dffs[34]\,
	datad => ww_sreg,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[33]\);

\dffs[32]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[32]\ = DFFE(\dffs[33]\ & (dom_id_32 # !sreg7) # !\dffs[33]\ & sreg7 & dom_id_32, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[33]\,
	datac => ww_sreg,
	datad => ww_dom_id_32,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[32]\);

\dffs[31]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[31]\ = DFFE(\dffs[32]\ & (dom_id_31 # !sreg7) # !\dffs[32]\ & dom_id_31 & sreg7, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CACA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[32]\,
	datab => ww_dom_id_31,
	datac => ww_sreg,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[31]\);

\dffs[30]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[30]\ = DFFE(dom_id_30 & (sreg7 # \dffs[31]\) # !dom_id_30 & !sreg7 & \dffs[31]\, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_dom_id_30,
	datac => ww_sreg,
	datad => \dffs[31]\,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[30]\);

\dffs[29]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[29]\ = DFFE(\dffs[30]\ & (dom_id_29 # !sreg7) # !\dffs[30]\ & sreg7 & dom_id_29, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[30]\,
	datac => ww_sreg,
	datad => ww_dom_id_29,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[29]\);

\dffs[28]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[28]\ = DFFE(sreg7 & dom_id_28 # !sreg7 & \dffs[29]\, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3C0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sreg,
	datac => ww_dom_id_28,
	datad => \dffs[29]\,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[28]\);

\dffs[27]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[27]\ = DFFE(\dffs[28]\ & (dom_id_27 # !sreg7) # !\dffs[28]\ & dom_id_27 & sreg7, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0AA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[28]\,
	datac => ww_dom_id_27,
	datad => ww_sreg,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[27]\);

\dffs[26]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[26]\ = DFFE(sreg7 & dom_id_26 # !sreg7 & \dffs[27]\, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3C0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sreg,
	datac => ww_dom_id_26,
	datad => \dffs[27]\,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[26]\);

\dffs[25]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[25]\ = DFFE(dom_id_25 & (sreg7 # \dffs[26]\) # !dom_id_25 & !sreg7 & \dffs[26]\, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_dom_id_25,
	datac => ww_sreg,
	datad => \dffs[26]\,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[25]\);

\dffs[24]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[24]\ = DFFE(sreg7 & dom_id_24 # !sreg7 & \dffs[25]\, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3C0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sreg,
	datac => ww_dom_id_24,
	datad => \dffs[25]\,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[24]\);

\dffs[23]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[23]\ = DFFE(dom_id_23 & (sreg7 # \dffs[24]\) # !dom_id_23 & !sreg7 & \dffs[24]\, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_dom_id_23,
	datac => ww_sreg,
	datad => \dffs[24]\,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[23]\);

\dffs[22]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[22]\ = DFFE(dom_id_22 & (sreg7 # \dffs[23]\) # !dom_id_22 & !sreg7 & \dffs[23]\, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_dom_id_22,
	datac => ww_sreg,
	datad => \dffs[23]\,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[22]\);

\dffs[21]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[21]\ = DFFE(sreg7 & dom_id_21 # !sreg7 & \dffs[22]\, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC30",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sreg,
	datac => \dffs[22]\,
	datad => ww_dom_id_21,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[21]\);

\dffs[20]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[20]\ = DFFE(dom_id_20 & (sreg7 # \dffs[21]\) # !dom_id_20 & !sreg7 & \dffs[21]\, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_dom_id_20,
	datac => ww_sreg,
	datad => \dffs[21]\,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[20]\);

\dffs[19]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[19]\ = DFFE(sreg7 & dom_id_19 # !sreg7 & \dffs[20]\, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA50",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg,
	datac => \dffs[20]\,
	datad => ww_dom_id_19,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[19]\);

\dffs[18]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[18]\ = DFFE(dom_id_18 & (sreg7 # \dffs[19]\) # !dom_id_18 & !sreg7 & \dffs[19]\, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_dom_id_18,
	datac => ww_sreg,
	datad => \dffs[19]\,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[18]\);

\dffs[17]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[17]\ = DFFE(\dffs[18]\ & (dom_id_17 # !sreg7) # !\dffs[18]\ & sreg7 & dom_id_17, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \dffs[18]\,
	datac => ww_sreg,
	datad => ww_dom_id_17,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[17]\);

\dffs[16]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[16]\ = DFFE(\dffs[17]\ & (dom_id_16 # !sreg7) # !\dffs[17]\ & sreg7 & dom_id_16, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \dffs[17]\,
	datac => ww_sreg,
	datad => ww_dom_id_16,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[16]\);

\dffs[15]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[15]\ = DFFE(sreg7 & dom_id_15 # !sreg7 & \dffs[16]\, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3C0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sreg,
	datac => ww_dom_id_15,
	datad => \dffs[16]\,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[15]\);

\dffs[14]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[14]\ = DFFE(sreg7 & dom_id_14 # !sreg7 & \dffs[15]\, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3C0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sreg,
	datac => ww_dom_id_14,
	datad => \dffs[15]\,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[14]\);

\dffs[13]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[13]\ = DFFE(dom_id_13 & (\dffs[14]\ # sreg7) # !dom_id_13 & \dffs[14]\ & !sreg7, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AAF0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_dom_id_13,
	datac => \dffs[14]\,
	datad => ww_sreg,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[13]\);

\dffs[12]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[12]\ = DFFE(sreg7 & dom_id_12 # !sreg7 & \dffs[13]\, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3C0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sreg,
	datac => ww_dom_id_12,
	datad => \dffs[13]\,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[12]\);

\dffs[11]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[11]\ = DFFE(sreg7 & dom_id_11 # !sreg7 & \dffs[12]\, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3C0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sreg,
	datac => ww_dom_id_11,
	datad => \dffs[12]\,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[11]\);

\dffs[10]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[10]\ = DFFE(sreg7 & dom_id_10 # !sreg7 & \dffs[11]\, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3C0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sreg,
	datac => ww_dom_id_10,
	datad => \dffs[11]\,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[10]\);

\dffs[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[9]\ = DFFE(sreg7 & dom_id_9 # !sreg7 & \dffs[10]\, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3C0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sreg,
	datac => ww_dom_id_9,
	datad => \dffs[10]\,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[9]\);

\dffs[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dffs[8]\ = DFFE(sreg7 & dom_id_8 # !sreg7 & \dffs[9]\, GLOBAL(outclock0), , , inst37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3C0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sreg,
	datac => ww_dom_id_8,
	datad => \dffs[9]\,
	clk => ww_clock,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dffs[8]\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	shrg48pld_2 IS
    PORT (
	clock : IN std_logic;
	sreg : IN std_logic;
	dom_id_0 : IN std_logic;
	enable : IN std_logic;
	dom_id_1 : IN std_logic;
	dom_id_2 : IN std_logic;
	dom_id_3 : IN std_logic;
	dom_id_4 : IN std_logic;
	dom_id_5 : IN std_logic;
	dom_id_6 : IN std_logic;
	dom_id_7 : IN std_logic;
	dom_id_8 : IN std_logic;
	dom_id_9 : IN std_logic;
	dom_id_10 : IN std_logic;
	dom_id_11 : IN std_logic;
	dom_id_12 : IN std_logic;
	dom_id_13 : IN std_logic;
	dom_id_14 : IN std_logic;
	dom_id_15 : IN std_logic;
	dom_id_16 : IN std_logic;
	dom_id_17 : IN std_logic;
	dom_id_18 : IN std_logic;
	dom_id_19 : IN std_logic;
	dom_id_20 : IN std_logic;
	dom_id_21 : IN std_logic;
	dom_id_22 : IN std_logic;
	dom_id_23 : IN std_logic;
	dom_id_24 : IN std_logic;
	dom_id_25 : IN std_logic;
	dom_id_26 : IN std_logic;
	dom_id_27 : IN std_logic;
	dom_id_28 : IN std_logic;
	dom_id_29 : IN std_logic;
	dom_id_30 : IN std_logic;
	dom_id_31 : IN std_logic;
	dom_id_32 : IN std_logic;
	dom_id_33 : IN std_logic;
	dom_id_34 : IN std_logic;
	dom_id_35 : IN std_logic;
	dom_id_36 : IN std_logic;
	dom_id_37 : IN std_logic;
	dom_id_38 : IN std_logic;
	dom_id_39 : IN std_logic;
	dom_id_40 : IN std_logic;
	dom_id_41 : IN std_logic;
	dom_id_42 : IN std_logic;
	dom_id_43 : IN std_logic;
	dom_id_44 : IN std_logic;
	dom_id_45 : IN std_logic;
	dom_id_46 : IN std_logic;
	dom_id_47 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	dffs_0 : OUT std_logic;
	dffs_1 : OUT std_logic;
	dffs_2 : OUT std_logic;
	dffs_3 : OUT std_logic;
	dffs_4 : OUT std_logic;
	dffs_5 : OUT std_logic;
	dffs_6 : OUT std_logic;
	dffs_7 : OUT std_logic
	);
END shrg48pld_2;

ARCHITECTURE structure OF shrg48pld_2 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_sreg : std_logic;
SIGNAL ww_dom_id_0 : std_logic;
SIGNAL ww_enable : std_logic;
SIGNAL ww_dom_id_1 : std_logic;
SIGNAL ww_dom_id_2 : std_logic;
SIGNAL ww_dom_id_3 : std_logic;
SIGNAL ww_dom_id_4 : std_logic;
SIGNAL ww_dom_id_5 : std_logic;
SIGNAL ww_dom_id_6 : std_logic;
SIGNAL ww_dom_id_7 : std_logic;
SIGNAL ww_dom_id_8 : std_logic;
SIGNAL ww_dom_id_9 : std_logic;
SIGNAL ww_dom_id_10 : std_logic;
SIGNAL ww_dom_id_11 : std_logic;
SIGNAL ww_dom_id_12 : std_logic;
SIGNAL ww_dom_id_13 : std_logic;
SIGNAL ww_dom_id_14 : std_logic;
SIGNAL ww_dom_id_15 : std_logic;
SIGNAL ww_dom_id_16 : std_logic;
SIGNAL ww_dom_id_17 : std_logic;
SIGNAL ww_dom_id_18 : std_logic;
SIGNAL ww_dom_id_19 : std_logic;
SIGNAL ww_dom_id_20 : std_logic;
SIGNAL ww_dom_id_21 : std_logic;
SIGNAL ww_dom_id_22 : std_logic;
SIGNAL ww_dom_id_23 : std_logic;
SIGNAL ww_dom_id_24 : std_logic;
SIGNAL ww_dom_id_25 : std_logic;
SIGNAL ww_dom_id_26 : std_logic;
SIGNAL ww_dom_id_27 : std_logic;
SIGNAL ww_dom_id_28 : std_logic;
SIGNAL ww_dom_id_29 : std_logic;
SIGNAL ww_dom_id_30 : std_logic;
SIGNAL ww_dom_id_31 : std_logic;
SIGNAL ww_dom_id_32 : std_logic;
SIGNAL ww_dom_id_33 : std_logic;
SIGNAL ww_dom_id_34 : std_logic;
SIGNAL ww_dom_id_35 : std_logic;
SIGNAL ww_dom_id_36 : std_logic;
SIGNAL ww_dom_id_37 : std_logic;
SIGNAL ww_dom_id_38 : std_logic;
SIGNAL ww_dom_id_39 : std_logic;
SIGNAL ww_dom_id_40 : std_logic;
SIGNAL ww_dom_id_41 : std_logic;
SIGNAL ww_dom_id_42 : std_logic;
SIGNAL ww_dom_id_43 : std_logic;
SIGNAL ww_dom_id_44 : std_logic;
SIGNAL ww_dom_id_45 : std_logic;
SIGNAL ww_dom_id_46 : std_logic;
SIGNAL ww_dom_id_47 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_dffs_0 : std_logic;
SIGNAL ww_dffs_1 : std_logic;
SIGNAL ww_dffs_2 : std_logic;
SIGNAL ww_dffs_3 : std_logic;
SIGNAL ww_dffs_4 : std_logic;
SIGNAL ww_dffs_5 : std_logic;
SIGNAL ww_dffs_6 : std_logic;
SIGNAL ww_dffs_7 : std_logic;

COMPONENT lpm_shiftreg_2
    PORT (
	clock : IN std_logic;
	sreg : IN std_logic;
	dom_id_0 : IN std_logic;
	enable : IN std_logic;
	dom_id_1 : IN std_logic;
	dom_id_2 : IN std_logic;
	dom_id_3 : IN std_logic;
	dom_id_4 : IN std_logic;
	dom_id_5 : IN std_logic;
	dom_id_6 : IN std_logic;
	dom_id_7 : IN std_logic;
	dom_id_8 : IN std_logic;
	dom_id_9 : IN std_logic;
	dom_id_10 : IN std_logic;
	dom_id_11 : IN std_logic;
	dom_id_12 : IN std_logic;
	dom_id_13 : IN std_logic;
	dom_id_14 : IN std_logic;
	dom_id_15 : IN std_logic;
	dom_id_16 : IN std_logic;
	dom_id_17 : IN std_logic;
	dom_id_18 : IN std_logic;
	dom_id_19 : IN std_logic;
	dom_id_20 : IN std_logic;
	dom_id_21 : IN std_logic;
	dom_id_22 : IN std_logic;
	dom_id_23 : IN std_logic;
	dom_id_24 : IN std_logic;
	dom_id_25 : IN std_logic;
	dom_id_26 : IN std_logic;
	dom_id_27 : IN std_logic;
	dom_id_28 : IN std_logic;
	dom_id_29 : IN std_logic;
	dom_id_30 : IN std_logic;
	dom_id_31 : IN std_logic;
	dom_id_32 : IN std_logic;
	dom_id_33 : IN std_logic;
	dom_id_34 : IN std_logic;
	dom_id_35 : IN std_logic;
	dom_id_36 : IN std_logic;
	dom_id_37 : IN std_logic;
	dom_id_38 : IN std_logic;
	dom_id_39 : IN std_logic;
	dom_id_40 : IN std_logic;
	dom_id_41 : IN std_logic;
	dom_id_42 : IN std_logic;
	dom_id_43 : IN std_logic;
	dom_id_44 : IN std_logic;
	dom_id_45 : IN std_logic;
	dom_id_46 : IN std_logic;
	dom_id_47 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	dffs_0 : OUT std_logic;
	dffs_1 : OUT std_logic;
	dffs_2 : OUT std_logic;
	dffs_3 : OUT std_logic;
	dffs_4 : OUT std_logic;
	dffs_5 : OUT std_logic;
	dffs_6 : OUT std_logic;
	dffs_7 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_sreg <= sreg;
ww_dom_id_0 <= dom_id_0;
ww_enable <= enable;
ww_dom_id_1 <= dom_id_1;
ww_dom_id_2 <= dom_id_2;
ww_dom_id_3 <= dom_id_3;
ww_dom_id_4 <= dom_id_4;
ww_dom_id_5 <= dom_id_5;
ww_dom_id_6 <= dom_id_6;
ww_dom_id_7 <= dom_id_7;
ww_dom_id_8 <= dom_id_8;
ww_dom_id_9 <= dom_id_9;
ww_dom_id_10 <= dom_id_10;
ww_dom_id_11 <= dom_id_11;
ww_dom_id_12 <= dom_id_12;
ww_dom_id_13 <= dom_id_13;
ww_dom_id_14 <= dom_id_14;
ww_dom_id_15 <= dom_id_15;
ww_dom_id_16 <= dom_id_16;
ww_dom_id_17 <= dom_id_17;
ww_dom_id_18 <= dom_id_18;
ww_dom_id_19 <= dom_id_19;
ww_dom_id_20 <= dom_id_20;
ww_dom_id_21 <= dom_id_21;
ww_dom_id_22 <= dom_id_22;
ww_dom_id_23 <= dom_id_23;
ww_dom_id_24 <= dom_id_24;
ww_dom_id_25 <= dom_id_25;
ww_dom_id_26 <= dom_id_26;
ww_dom_id_27 <= dom_id_27;
ww_dom_id_28 <= dom_id_28;
ww_dom_id_29 <= dom_id_29;
ww_dom_id_30 <= dom_id_30;
ww_dom_id_31 <= dom_id_31;
ww_dom_id_32 <= dom_id_32;
ww_dom_id_33 <= dom_id_33;
ww_dom_id_34 <= dom_id_34;
ww_dom_id_35 <= dom_id_35;
ww_dom_id_36 <= dom_id_36;
ww_dom_id_37 <= dom_id_37;
ww_dom_id_38 <= dom_id_38;
ww_dom_id_39 <= dom_id_39;
ww_dom_id_40 <= dom_id_40;
ww_dom_id_41 <= dom_id_41;
ww_dom_id_42 <= dom_id_42;
ww_dom_id_43 <= dom_id_43;
ww_dom_id_44 <= dom_id_44;
ww_dom_id_45 <= dom_id_45;
ww_dom_id_46 <= dom_id_46;
ww_dom_id_47 <= dom_id_47;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
dffs_0 <= ww_dffs_0;
dffs_1 <= ww_dffs_1;
dffs_2 <= ww_dffs_2;
dffs_3 <= ww_dffs_3;
dffs_4 <= ww_dffs_4;
dffs_5 <= ww_dffs_5;
dffs_6 <= ww_dffs_6;
dffs_7 <= ww_dffs_7;
lpm_shiftreg_component : lpm_shiftreg_2
PORT MAP (
	clock => ww_clock,
	sreg => ww_sreg,
	dom_id_0 => ww_dom_id_0,
	enable => ww_enable,
	dom_id_1 => ww_dom_id_1,
	dom_id_2 => ww_dom_id_2,
	dom_id_3 => ww_dom_id_3,
	dom_id_4 => ww_dom_id_4,
	dom_id_5 => ww_dom_id_5,
	dom_id_6 => ww_dom_id_6,
	dom_id_7 => ww_dom_id_7,
	dom_id_8 => ww_dom_id_8,
	dom_id_9 => ww_dom_id_9,
	dom_id_10 => ww_dom_id_10,
	dom_id_11 => ww_dom_id_11,
	dom_id_12 => ww_dom_id_12,
	dom_id_13 => ww_dom_id_13,
	dom_id_14 => ww_dom_id_14,
	dom_id_15 => ww_dom_id_15,
	dom_id_16 => ww_dom_id_16,
	dom_id_17 => ww_dom_id_17,
	dom_id_18 => ww_dom_id_18,
	dom_id_19 => ww_dom_id_19,
	dom_id_20 => ww_dom_id_20,
	dom_id_21 => ww_dom_id_21,
	dom_id_22 => ww_dom_id_22,
	dom_id_23 => ww_dom_id_23,
	dom_id_24 => ww_dom_id_24,
	dom_id_25 => ww_dom_id_25,
	dom_id_26 => ww_dom_id_26,
	dom_id_27 => ww_dom_id_27,
	dom_id_28 => ww_dom_id_28,
	dom_id_29 => ww_dom_id_29,
	dom_id_30 => ww_dom_id_30,
	dom_id_31 => ww_dom_id_31,
	dom_id_32 => ww_dom_id_32,
	dom_id_33 => ww_dom_id_33,
	dom_id_34 => ww_dom_id_34,
	dom_id_35 => ww_dom_id_35,
	dom_id_36 => ww_dom_id_36,
	dom_id_37 => ww_dom_id_37,
	dom_id_38 => ww_dom_id_38,
	dom_id_39 => ww_dom_id_39,
	dom_id_40 => ww_dom_id_40,
	dom_id_41 => ww_dom_id_41,
	dom_id_42 => ww_dom_id_42,
	dom_id_43 => ww_dom_id_43,
	dom_id_44 => ww_dom_id_44,
	dom_id_45 => ww_dom_id_45,
	dom_id_46 => ww_dom_id_46,
	dom_id_47 => ww_dom_id_47,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	dffs_0 => ww_dffs_0,
	dffs_1 => ww_dffs_1,
	dffs_2 => ww_dffs_2,
	dffs_3 => ww_dffs_3,
	dffs_4 => ww_dffs_4,
	dffs_5 => ww_dffs_5,
	dffs_6 => ww_dffs_6,
	dffs_7 => ww_dffs_7);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	alt_synch_counter_15 IS
    PORT (
	clock : IN std_logic;
	portadataout_2 : IN std_logic;
	portadataout_3 : IN std_logic;
	portadataout_4 : IN std_logic;
	portadataout_5 : IN std_logic;
	portadataout_6 : IN std_logic;
	portadataout_7 : IN std_logic;
	portadataout_8 : IN std_logic;
	portadataout_9 : IN std_logic;
	portadataout_10 : IN std_logic;
	portadataout_11 : IN std_logic;
	sreg : IN std_logic;
	sreg1 : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	the_carries_10 : OUT std_logic
	);
END alt_synch_counter_15;

ARCHITECTURE structure OF alt_synch_counter_15 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_portadataout_2 : std_logic;
SIGNAL ww_portadataout_3 : std_logic;
SIGNAL ww_portadataout_4 : std_logic;
SIGNAL ww_portadataout_5 : std_logic;
SIGNAL ww_portadataout_6 : std_logic;
SIGNAL ww_portadataout_7 : std_logic;
SIGNAL ww_portadataout_8 : std_logic;
SIGNAL ww_portadataout_9 : std_logic;
SIGNAL ww_portadataout_10 : std_logic;
SIGNAL ww_portadataout_11 : std_logic;
SIGNAL ww_sreg : std_logic;
SIGNAL ww_sreg1 : std_logic;
SIGNAL ww_clk_en : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_the_carries_10 : std_logic;
SIGNAL \q[0]\ : std_logic;
SIGNAL \the_carries[1]\ : std_logic;
SIGNAL \pre_out[1]\ : std_logic;
SIGNAL \the_carries[2]\ : std_logic;
SIGNAL \pre_out[2]\ : std_logic;
SIGNAL \the_carries[3]\ : std_logic;
SIGNAL \pre_out[3]\ : std_logic;
SIGNAL \the_carries[4]\ : std_logic;
SIGNAL \pre_out[4]\ : std_logic;
SIGNAL \the_carries[5]\ : std_logic;
SIGNAL \pre_out[5]\ : std_logic;
SIGNAL \the_carries[6]\ : std_logic;
SIGNAL \pre_out[6]\ : std_logic;
SIGNAL \the_carries[7]\ : std_logic;
SIGNAL \pre_out[7]\ : std_logic;
SIGNAL \the_carries[8]\ : std_logic;
SIGNAL \pre_out[8]\ : std_logic;
SIGNAL \the_carries[9]\ : std_logic;
SIGNAL \pre_out[9]\ : std_logic;
SIGNAL \the_carries[10]\ : std_logic;

BEGIN

ww_clock <= clock;
ww_portadataout_2 <= portadataout_2;
ww_portadataout_3 <= portadataout_3;
ww_portadataout_4 <= portadataout_4;
ww_portadataout_5 <= portadataout_5;
ww_portadataout_6 <= portadataout_6;
ww_portadataout_7 <= portadataout_7;
ww_portadataout_8 <= portadataout_8;
ww_portadataout_9 <= portadataout_9;
ww_portadataout_10 <= portadataout_10;
ww_portadataout_11 <= portadataout_11;
ww_sreg <= sreg;
ww_sreg1 <= sreg1;
ww_clk_en <= clk_en;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
the_carries_10 <= ww_the_carries_10;

\the_carries[10]~0_I\ : apex20ke_lcell 
-- Equation(s):
-- the_carries_10 = !\the_carries[10]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0F0F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	cin => \the_carries[10]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_the_carries_10);

lsb : apex20ke_lcell 
-- Equation(s):
-- \the_carries[1]\ = CARRY(sreg8 $ !)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "qfbk_counter",
	packed_mode => "false",
	lut_mask => "0FA5",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg1,
	datac => ww_portadataout_2,
	clk => ww_clock,
	ena => ww_clk_en,
	sload => ww_sreg,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \the_carries[1]\);

\$00006\ : apex20ke_lcell 
-- Equation(s):
-- \pre_out[1]\ = DFFE((sreg2 & portadataout) # (!sreg2 & \pre_out[1]\ $ \the_carries[1]\), GLOBAL(outclock0), , , plen_clk_en)
-- \the_carries[2]\ = CARRY(sreg8 $ \pre_out[1]\ # !\the_carries[1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C6F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg1,
	datab => \pre_out[1]\,
	datac => ww_portadataout_3,
	cin => \the_carries[1]\,
	clk => ww_clock,
	ena => ww_clk_en,
	sload => ww_sreg,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \pre_out[1]\,
	cout => \the_carries[2]\);

\$00008\ : apex20ke_lcell 
-- Equation(s):
-- \pre_out[2]\ = DFFE((sreg2 & portadataout) # (!sreg2 & \pre_out[2]\ $ !\the_carries[2]\), GLOBAL(outclock0), , , plen_clk_en)
-- \the_carries[3]\ = CARRY(!\the_carries[2]\ & (sreg8 $ !\pre_out[2]\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C309",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg1,
	datab => \pre_out[2]\,
	datac => ww_portadataout_4,
	cin => \the_carries[2]\,
	clk => ww_clock,
	ena => ww_clk_en,
	sload => ww_sreg,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \pre_out[2]\,
	cout => \the_carries[3]\);

\$00010\ : apex20ke_lcell 
-- Equation(s):
-- \pre_out[3]\ = DFFE((sreg2 & portadataout) # (!sreg2 & \pre_out[3]\ $ \the_carries[3]\), GLOBAL(outclock0), , , plen_clk_en)
-- \the_carries[4]\ = CARRY(sreg8 $ \pre_out[3]\ # !\the_carries[3]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C6F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg1,
	datab => \pre_out[3]\,
	datac => ww_portadataout_5,
	cin => \the_carries[3]\,
	clk => ww_clock,
	ena => ww_clk_en,
	sload => ww_sreg,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \pre_out[3]\,
	cout => \the_carries[4]\);

\$00012\ : apex20ke_lcell 
-- Equation(s):
-- \pre_out[4]\ = DFFE((sreg2 & portadataout) # (!sreg2 & \pre_out[4]\ $ !\the_carries[4]\), GLOBAL(outclock0), , , plen_clk_en)
-- \the_carries[5]\ = CARRY(!\the_carries[4]\ & (sreg8 $ !\pre_out[4]\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C309",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg1,
	datab => \pre_out[4]\,
	datac => ww_portadataout_6,
	cin => \the_carries[4]\,
	clk => ww_clock,
	ena => ww_clk_en,
	sload => ww_sreg,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \pre_out[4]\,
	cout => \the_carries[5]\);

\$00014\ : apex20ke_lcell 
-- Equation(s):
-- \pre_out[5]\ = DFFE((sreg2 & portadataout) # (!sreg2 & \pre_out[5]\ $ \the_carries[5]\), GLOBAL(outclock0), , , plen_clk_en)
-- \the_carries[6]\ = CARRY(sreg8 $ \pre_out[5]\ # !\the_carries[5]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C6F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg1,
	datab => \pre_out[5]\,
	datac => ww_portadataout_7,
	cin => \the_carries[5]\,
	clk => ww_clock,
	ena => ww_clk_en,
	sload => ww_sreg,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \pre_out[5]\,
	cout => \the_carries[6]\);

\$00016\ : apex20ke_lcell 
-- Equation(s):
-- \pre_out[6]\ = DFFE((sreg2 & portadataout) # (!sreg2 & \pre_out[6]\ $ !\the_carries[6]\), GLOBAL(outclock0), , , plen_clk_en)
-- \the_carries[7]\ = CARRY(!\the_carries[6]\ & (sreg8 $ !\pre_out[6]\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C309",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg1,
	datab => \pre_out[6]\,
	datac => ww_portadataout_8,
	cin => \the_carries[6]\,
	clk => ww_clock,
	ena => ww_clk_en,
	sload => ww_sreg,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \pre_out[6]\,
	cout => \the_carries[7]\);

\$00018\ : apex20ke_lcell 
-- Equation(s):
-- \pre_out[7]\ = DFFE((sreg2 & portadataout) # (!sreg2 & \pre_out[7]\ $ \the_carries[7]\), GLOBAL(outclock0), , , plen_clk_en)
-- \the_carries[8]\ = CARRY(sreg8 $ \pre_out[7]\ # !\the_carries[7]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C6F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg1,
	datab => \pre_out[7]\,
	datac => ww_portadataout_9,
	cin => \the_carries[7]\,
	clk => ww_clock,
	ena => ww_clk_en,
	sload => ww_sreg,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \pre_out[7]\,
	cout => \the_carries[8]\);

\$00020\ : apex20ke_lcell 
-- Equation(s):
-- \pre_out[8]\ = DFFE((sreg2 & portadataout) # (!sreg2 & \pre_out[8]\ $ !\the_carries[8]\), GLOBAL(outclock0), , , plen_clk_en)
-- \the_carries[9]\ = CARRY(!\the_carries[8]\ & (sreg8 $ !\pre_out[8]\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C309",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg1,
	datab => \pre_out[8]\,
	datac => ww_portadataout_10,
	cin => \the_carries[8]\,
	clk => ww_clock,
	ena => ww_clk_en,
	sload => ww_sreg,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \pre_out[8]\,
	cout => \the_carries[9]\);

\$00022\ : apex20ke_lcell 
-- Equation(s):
-- \pre_out[9]\ = DFFE((sreg2 & portadataout) # (!sreg2 & \pre_out[9]\ $ \the_carries[9]\), GLOBAL(outclock0), , , plen_clk_en)
-- \the_carries[10]\ = CARRY(sreg8 $ \pre_out[9]\ # !\the_carries[9]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C6F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg1,
	datab => \pre_out[9]\,
	datac => ww_portadataout_11,
	cin => \the_carries[9]\,
	clk => ww_clock,
	ena => ww_clk_en,
	sload => ww_sreg,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \pre_out[9]\,
	cout => \the_carries[10]\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_counter_15 IS
    PORT (
	clock : IN std_logic;
	portadataout_2 : IN std_logic;
	portadataout_3 : IN std_logic;
	portadataout_4 : IN std_logic;
	portadataout_5 : IN std_logic;
	portadataout_6 : IN std_logic;
	portadataout_7 : IN std_logic;
	portadataout_8 : IN std_logic;
	portadataout_9 : IN std_logic;
	portadataout_10 : IN std_logic;
	portadataout_11 : IN std_logic;
	sreg : IN std_logic;
	sreg1 : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	the_carries_10 : OUT std_logic
	);
END lpm_counter_15;

ARCHITECTURE structure OF lpm_counter_15 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_portadataout_2 : std_logic;
SIGNAL ww_portadataout_3 : std_logic;
SIGNAL ww_portadataout_4 : std_logic;
SIGNAL ww_portadataout_5 : std_logic;
SIGNAL ww_portadataout_6 : std_logic;
SIGNAL ww_portadataout_7 : std_logic;
SIGNAL ww_portadataout_8 : std_logic;
SIGNAL ww_portadataout_9 : std_logic;
SIGNAL ww_portadataout_10 : std_logic;
SIGNAL ww_portadataout_11 : std_logic;
SIGNAL ww_sreg : std_logic;
SIGNAL ww_sreg1 : std_logic;
SIGNAL ww_clk_en : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_the_carries_10 : std_logic;

COMPONENT alt_synch_counter_15
    PORT (
	clock : IN std_logic;
	portadataout_2 : IN std_logic;
	portadataout_3 : IN std_logic;
	portadataout_4 : IN std_logic;
	portadataout_5 : IN std_logic;
	portadataout_6 : IN std_logic;
	portadataout_7 : IN std_logic;
	portadataout_8 : IN std_logic;
	portadataout_9 : IN std_logic;
	portadataout_10 : IN std_logic;
	portadataout_11 : IN std_logic;
	sreg : IN std_logic;
	sreg1 : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	the_carries_10 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_portadataout_2 <= portadataout_2;
ww_portadataout_3 <= portadataout_3;
ww_portadataout_4 <= portadataout_4;
ww_portadataout_5 <= portadataout_5;
ww_portadataout_6 <= portadataout_6;
ww_portadataout_7 <= portadataout_7;
ww_portadataout_8 <= portadataout_8;
ww_portadataout_9 <= portadataout_9;
ww_portadataout_10 <= portadataout_10;
ww_portadataout_11 <= portadataout_11;
ww_sreg <= sreg;
ww_sreg1 <= sreg1;
ww_clk_en <= clk_en;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
the_carries_10 <= ww_the_carries_10;
wysi_counter : alt_synch_counter_15
PORT MAP (
	clock => ww_clock,
	portadataout_2 => ww_portadataout_2,
	portadataout_3 => ww_portadataout_3,
	portadataout_4 => ww_portadataout_4,
	portadataout_5 => ww_portadataout_5,
	portadataout_6 => ww_portadataout_6,
	portadataout_7 => ww_portadataout_7,
	portadataout_8 => ww_portadataout_8,
	portadataout_9 => ww_portadataout_9,
	portadataout_10 => ww_portadataout_10,
	portadataout_11 => ww_portadataout_11,
	sreg => ww_sreg,
	sreg1 => ww_sreg1,
	clk_en => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	the_carries_10 => ww_the_carries_10);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	tx_plen_ct_ap IS
    PORT (
	clock : IN std_logic;
	portadataout_2 : IN std_logic;
	portadataout_3 : IN std_logic;
	portadataout_4 : IN std_logic;
	portadataout_5 : IN std_logic;
	portadataout_6 : IN std_logic;
	portadataout_7 : IN std_logic;
	portadataout_8 : IN std_logic;
	portadataout_9 : IN std_logic;
	portadataout_10 : IN std_logic;
	portadataout_11 : IN std_logic;
	sreg : IN std_logic;
	sreg1 : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	the_carries_10 : OUT std_logic
	);
END tx_plen_ct_ap;

ARCHITECTURE structure OF tx_plen_ct_ap IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_portadataout_2 : std_logic;
SIGNAL ww_portadataout_3 : std_logic;
SIGNAL ww_portadataout_4 : std_logic;
SIGNAL ww_portadataout_5 : std_logic;
SIGNAL ww_portadataout_6 : std_logic;
SIGNAL ww_portadataout_7 : std_logic;
SIGNAL ww_portadataout_8 : std_logic;
SIGNAL ww_portadataout_9 : std_logic;
SIGNAL ww_portadataout_10 : std_logic;
SIGNAL ww_portadataout_11 : std_logic;
SIGNAL ww_sreg : std_logic;
SIGNAL ww_sreg1 : std_logic;
SIGNAL ww_clk_en : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_the_carries_10 : std_logic;

COMPONENT lpm_counter_15
    PORT (
	clock : IN std_logic;
	portadataout_2 : IN std_logic;
	portadataout_3 : IN std_logic;
	portadataout_4 : IN std_logic;
	portadataout_5 : IN std_logic;
	portadataout_6 : IN std_logic;
	portadataout_7 : IN std_logic;
	portadataout_8 : IN std_logic;
	portadataout_9 : IN std_logic;
	portadataout_10 : IN std_logic;
	portadataout_11 : IN std_logic;
	sreg : IN std_logic;
	sreg1 : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	the_carries_10 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_portadataout_2 <= portadataout_2;
ww_portadataout_3 <= portadataout_3;
ww_portadataout_4 <= portadataout_4;
ww_portadataout_5 <= portadataout_5;
ww_portadataout_6 <= portadataout_6;
ww_portadataout_7 <= portadataout_7;
ww_portadataout_8 <= portadataout_8;
ww_portadataout_9 <= portadataout_9;
ww_portadataout_10 <= portadataout_10;
ww_portadataout_11 <= portadataout_11;
ww_sreg <= sreg;
ww_sreg1 <= sreg1;
ww_clk_en <= clk_en;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
the_carries_10 <= ww_the_carries_10;
lpm_counter_component : lpm_counter_15
PORT MAP (
	clock => ww_clock,
	portadataout_2 => ww_portadataout_2,
	portadataout_3 => ww_portadataout_3,
	portadataout_4 => ww_portadataout_4,
	portadataout_5 => ww_portadataout_5,
	portadataout_6 => ww_portadataout_6,
	portadataout_7 => ww_portadataout_7,
	portadataout_8 => ww_portadataout_8,
	portadataout_9 => ww_portadataout_9,
	portadataout_10 => ww_portadataout_10,
	portadataout_11 => ww_portadataout_11,
	sreg => ww_sreg,
	sreg1 => ww_sreg1,
	clk_en => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	the_carries_10 => ww_the_carries_10);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	alt_synch_counter_12 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	cout1 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cout2 : OUT std_logic
	);
END alt_synch_counter_12;

ARCHITECTURE structure OF alt_synch_counter_12 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_clk_en : std_logic;
SIGNAL ww_cout1 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_cout2 : std_logic;
SIGNAL \counter_cell[0]~0\ : std_logic;
SIGNAL \sload_path[0]\ : std_logic;
SIGNAL \counter_cell[0]~COUT\ : std_logic;
SIGNAL \sload_path[1]\ : std_logic;
SIGNAL \counter_cell[1]~COUT\ : std_logic;
SIGNAL \sload_path[2]\ : std_logic;
SIGNAL cout : std_logic;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_clk_en <= clk_en;
ww_cout1 <= cout1;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
cout2 <= ww_cout2;

\cout~0_I\ : apex20ke_lcell 
-- Equation(s):
-- cout2 = !cout

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0F0F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	cin => cout,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_cout2);

\counter_cell[0]~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \counter_cell[0]~0\ = CARRY(cout1)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "00CC",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	datab => ww_cout1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \counter_cell[0]~0\);

\counter_cell[0]\ : apex20ke_lcell 
-- Equation(s):
-- \sload_path[0]\ = DFFE(\sload_path[0]\ $ \counter_cell[0]~0\, GLOBAL(outclock0), !sreg2, , shift_ct_en)
-- \counter_cell[0]~COUT\ = CARRY(!\counter_cell[0]~0\ # !\sload_path[0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \sload_path[0]\,
	cin => \counter_cell[0]~0\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sload_path[0]\,
	cout => \counter_cell[0]~COUT\);

\counter_cell[1]\ : apex20ke_lcell 
-- Equation(s):
-- \sload_path[1]\ = DFFE(\sload_path[1]\ $ !\counter_cell[0]~COUT\, GLOBAL(outclock0), !sreg2, , shift_ct_en)
-- \counter_cell[1]~COUT\ = CARRY(\sload_path[1]\ & !\counter_cell[0]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \sload_path[1]\,
	cin => \counter_cell[0]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sload_path[1]\,
	cout => \counter_cell[1]~COUT\);

\counter_cell[2]\ : apex20ke_lcell 
-- Equation(s):
-- \sload_path[2]\ = DFFE(\sload_path[2]\ $ \counter_cell[1]~COUT\, GLOBAL(outclock0), !sreg2, , shift_ct_en)
-- cout = CARRY(!\counter_cell[1]~COUT\ # !\sload_path[2]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \sload_path[2]\,
	cin => \counter_cell[1]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sload_path[2]\,
	cout => cout);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_counter_12 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	cout : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cout1 : OUT std_logic
	);
END lpm_counter_12;

ARCHITECTURE structure OF lpm_counter_12 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_clk_en : std_logic;
SIGNAL ww_cout : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_cout1 : std_logic;

COMPONENT alt_synch_counter_12
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	cout1 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cout2 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_clk_en <= clk_en;
ww_cout <= cout;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
cout1 <= ww_cout1;
wysi_counter : alt_synch_counter_12
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	clk_en => ww_clk_en,
	cout1 => ww_cout,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	cout2 => ww_cout1);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	shift_ct_1 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	cout : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cout1 : OUT std_logic
	);
END shift_ct_1;

ARCHITECTURE structure OF shift_ct_1 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_clk_en : std_logic;
SIGNAL ww_cout : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_cout1 : std_logic;

COMPONENT lpm_counter_12
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	cout : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cout1 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_clk_en <= clk_en;
ww_cout <= cout;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
cout1 <= ww_cout1;
lpm_counter_component : lpm_counter_12
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	clk_en => ww_clk_en,
	cout => ww_cout,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	cout1 => ww_cout1);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	alt_synch_counter_11 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cout1 : OUT std_logic
	);
END alt_synch_counter_11;

ARCHITECTURE structure OF alt_synch_counter_11 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_clk_en : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_cout1 : std_logic;
SIGNAL \sload_path[0]\ : std_logic;
SIGNAL \counter_cell[0]~COUT\ : std_logic;
SIGNAL \sload_path[1]\ : std_logic;
SIGNAL \counter_cell[1]~COUT\ : std_logic;
SIGNAL \sload_path[2]\ : std_logic;
SIGNAL cout : std_logic;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_clk_en <= clk_en;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
cout1 <= ww_cout1;

\cout~0_I\ : apex20ke_lcell 
-- Equation(s):
-- cout1 = cout

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	cin => cout,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_cout1);

\counter_cell[0]\ : apex20ke_lcell 
-- Equation(s):
-- \sload_path[0]\ = DFFE(!\sload_path[0]\, GLOBAL(outclock0), !sreg2, , shift_ct_en)
-- \counter_cell[0]~COUT\ = CARRY(\sload_path[0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "33CC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \sload_path[0]\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sload_path[0]\,
	cout => \counter_cell[0]~COUT\);

\counter_cell[1]\ : apex20ke_lcell 
-- Equation(s):
-- \sload_path[1]\ = DFFE(\sload_path[1]\ $ \counter_cell[0]~COUT\, GLOBAL(outclock0), !sreg2, , shift_ct_en)
-- \counter_cell[1]~COUT\ = CARRY(!\counter_cell[0]~COUT\ # !\sload_path[1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \sload_path[1]\,
	cin => \counter_cell[0]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sload_path[1]\,
	cout => \counter_cell[1]~COUT\);

\counter_cell[2]\ : apex20ke_lcell 
-- Equation(s):
-- \sload_path[2]\ = DFFE(\sload_path[2]\ $ !\counter_cell[1]~COUT\, GLOBAL(outclock0), !sreg2, , shift_ct_en)
-- cout = CARRY(\sload_path[2]\ & !\counter_cell[1]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \sload_path[2]\,
	cin => \counter_cell[1]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sload_path[2]\,
	cout => cout);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_counter_11 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cout : OUT std_logic
	);
END lpm_counter_11;

ARCHITECTURE structure OF lpm_counter_11 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_clk_en : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_cout : std_logic;

COMPONENT alt_synch_counter_11
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cout1 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_clk_en <= clk_en;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
cout <= ww_cout;
wysi_counter : alt_synch_counter_11
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	clk_en => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	cout1 => ww_cout);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	shift_ct IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cout : OUT std_logic
	);
END shift_ct;

ARCHITECTURE structure OF shift_ct IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_clk_en : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_cout : std_logic;

COMPONENT lpm_counter_11
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cout : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_clk_en <= clk_en;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
cout <= ww_cout;
lpm_counter_component : lpm_counter_11
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	clk_en => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	cout => ww_cout);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_or_5 IS
    PORT (
	sload_path_0 : IN std_logic;
	pre_out_1 : IN std_logic;
	pre_out_2 : IN std_logic;
	pre_out_3 : IN std_logic;
	pre_out_4 : IN std_logic;
	pre_out_5 : IN std_logic;
	pre_out_6 : IN std_logic;
	pre_out_7 : IN std_logic;
	pre_out_8 : IN std_logic;
	pre_out_9 : IN std_logic;
	pre_out_10 : IN std_logic;
	pre_out_11 : IN std_logic;
	pre_out_12 : IN std_logic;
	pre_out_13 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	or_node_6_0 : OUT std_logic
	);
END lpm_or_5;

ARCHITECTURE structure OF lpm_or_5 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_pre_out_1 : std_logic;
SIGNAL ww_pre_out_2 : std_logic;
SIGNAL ww_pre_out_3 : std_logic;
SIGNAL ww_pre_out_4 : std_logic;
SIGNAL ww_pre_out_5 : std_logic;
SIGNAL ww_pre_out_6 : std_logic;
SIGNAL ww_pre_out_7 : std_logic;
SIGNAL ww_pre_out_8 : std_logic;
SIGNAL ww_pre_out_9 : std_logic;
SIGNAL ww_pre_out_10 : std_logic;
SIGNAL ww_pre_out_11 : std_logic;
SIGNAL ww_pre_out_12 : std_logic;
SIGNAL ww_pre_out_13 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_or_node_6_0 : std_logic;
SIGNAL \or_node[0][6]~134\ : std_logic;
SIGNAL \or_node[0][5]~135\ : std_logic;
SIGNAL \or_node[0][4]~136\ : std_logic;
SIGNAL \or_node[0][3]~137\ : std_logic;
SIGNAL \or_node[0][2]~138\ : std_logic;
SIGNAL \or_node[0][1]~139\ : std_logic;
SIGNAL \or_node[0][0]~140\ : std_logic;
SIGNAL \or_node[0][0]\ : std_logic;
SIGNAL \or_node[0][1]\ : std_logic;
SIGNAL \or_node[0][2]\ : std_logic;
SIGNAL \or_node[0][3]\ : std_logic;
SIGNAL \or_node[0][4]\ : std_logic;
SIGNAL \or_node[0][5]\ : std_logic;
SIGNAL \or_node[0][6]\ : std_logic;

BEGIN

ww_sload_path_0 <= sload_path_0;
ww_pre_out_1 <= pre_out_1;
ww_pre_out_2 <= pre_out_2;
ww_pre_out_3 <= pre_out_3;
ww_pre_out_4 <= pre_out_4;
ww_pre_out_5 <= pre_out_5;
ww_pre_out_6 <= pre_out_6;
ww_pre_out_7 <= pre_out_7;
ww_pre_out_8 <= pre_out_8;
ww_pre_out_9 <= pre_out_9;
ww_pre_out_10 <= pre_out_10;
ww_pre_out_11 <= pre_out_11;
ww_pre_out_12 <= pre_out_12;
ww_pre_out_13 <= pre_out_13;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
or_node_6_0 <= ww_or_node_6_0;

\or_node[0][6]~161\ : apex20ke_lcell 
-- Equation(s):
-- or_node_6_0 = \or_node[0][6]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	cin => \or_node[0][6]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_or_node_6_0);

\or_node[0][0]~140_I\ : apex20ke_lcell 
-- Equation(s):
-- \or_node[0][0]\ = CARRY(pre_out_1 # sload_path_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "00EE",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_1,
	datab => ww_sload_path_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \or_node[0][0]\);

\or_node[0][1]~139_I\ : apex20ke_lcell 
-- Equation(s):
-- \or_node[0][1]\ = CARRY(!pre_out_3 & !pre_out_2 & !\or_node[0][0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_3,
	datab => ww_pre_out_2,
	cin => \or_node[0][0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \or_node[0][1]\);

\or_node[0][2]~138_I\ : apex20ke_lcell 
-- Equation(s):
-- \or_node[0][2]\ = CARRY(pre_out_5 # pre_out_4 # !\or_node[0][1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "00EF",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_5,
	datab => ww_pre_out_4,
	cin => \or_node[0][1]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \or_node[0][2]\);

\or_node[0][3]~137_I\ : apex20ke_lcell 
-- Equation(s):
-- \or_node[0][3]\ = CARRY(!pre_out_7 & !pre_out_6 & !\or_node[0][2]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_7,
	datab => ww_pre_out_6,
	cin => \or_node[0][2]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \or_node[0][3]\);

\or_node[0][4]~136_I\ : apex20ke_lcell 
-- Equation(s):
-- \or_node[0][4]\ = CARRY(pre_out_9 # pre_out_8 # !\or_node[0][3]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "00EF",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_9,
	datab => ww_pre_out_8,
	cin => \or_node[0][3]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \or_node[0][4]\);

\or_node[0][5]~135_I\ : apex20ke_lcell 
-- Equation(s):
-- \or_node[0][5]\ = CARRY(!pre_out_11 & !pre_out_10 & !\or_node[0][4]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_11,
	datab => ww_pre_out_10,
	cin => \or_node[0][4]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \or_node[0][5]\);

\or_node[0][6]~134_I\ : apex20ke_lcell 
-- Equation(s):
-- \or_node[0][6]\ = CARRY(pre_out_13 # pre_out_12 # !\or_node[0][5]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "00EF",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_13,
	datab => ww_pre_out_12,
	cin => \or_node[0][5]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \or_node[0][6]\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	my_or16b_1 IS
    PORT (
	sload_path_0 : IN std_logic;
	pre_out_1 : IN std_logic;
	pre_out_2 : IN std_logic;
	pre_out_3 : IN std_logic;
	pre_out_4 : IN std_logic;
	pre_out_5 : IN std_logic;
	pre_out_6 : IN std_logic;
	pre_out_7 : IN std_logic;
	pre_out_8 : IN std_logic;
	pre_out_9 : IN std_logic;
	pre_out_10 : IN std_logic;
	pre_out_11 : IN std_logic;
	pre_out_12 : IN std_logic;
	pre_out_13 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	or_node_6_0 : OUT std_logic
	);
END my_or16b_1;

ARCHITECTURE structure OF my_or16b_1 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_pre_out_1 : std_logic;
SIGNAL ww_pre_out_2 : std_logic;
SIGNAL ww_pre_out_3 : std_logic;
SIGNAL ww_pre_out_4 : std_logic;
SIGNAL ww_pre_out_5 : std_logic;
SIGNAL ww_pre_out_6 : std_logic;
SIGNAL ww_pre_out_7 : std_logic;
SIGNAL ww_pre_out_8 : std_logic;
SIGNAL ww_pre_out_9 : std_logic;
SIGNAL ww_pre_out_10 : std_logic;
SIGNAL ww_pre_out_11 : std_logic;
SIGNAL ww_pre_out_12 : std_logic;
SIGNAL ww_pre_out_13 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_or_node_6_0 : std_logic;

COMPONENT lpm_or_5
    PORT (
	sload_path_0 : IN std_logic;
	pre_out_1 : IN std_logic;
	pre_out_2 : IN std_logic;
	pre_out_3 : IN std_logic;
	pre_out_4 : IN std_logic;
	pre_out_5 : IN std_logic;
	pre_out_6 : IN std_logic;
	pre_out_7 : IN std_logic;
	pre_out_8 : IN std_logic;
	pre_out_9 : IN std_logic;
	pre_out_10 : IN std_logic;
	pre_out_11 : IN std_logic;
	pre_out_12 : IN std_logic;
	pre_out_13 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	or_node_6_0 : OUT std_logic);
END COMPONENT;

BEGIN

ww_sload_path_0 <= sload_path_0;
ww_pre_out_1 <= pre_out_1;
ww_pre_out_2 <= pre_out_2;
ww_pre_out_3 <= pre_out_3;
ww_pre_out_4 <= pre_out_4;
ww_pre_out_5 <= pre_out_5;
ww_pre_out_6 <= pre_out_6;
ww_pre_out_7 <= pre_out_7;
ww_pre_out_8 <= pre_out_8;
ww_pre_out_9 <= pre_out_9;
ww_pre_out_10 <= pre_out_10;
ww_pre_out_11 <= pre_out_11;
ww_pre_out_12 <= pre_out_12;
ww_pre_out_13 <= pre_out_13;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
or_node_6_0 <= ww_or_node_6_0;
lpm_or_component : lpm_or_5
PORT MAP (
	sload_path_0 => ww_sload_path_0,
	pre_out_1 => ww_pre_out_1,
	pre_out_2 => ww_pre_out_2,
	pre_out_3 => ww_pre_out_3,
	pre_out_4 => ww_pre_out_4,
	pre_out_5 => ww_pre_out_5,
	pre_out_6 => ww_pre_out_6,
	pre_out_7 => ww_pre_out_7,
	pre_out_8 => ww_pre_out_8,
	pre_out_9 => ww_pre_out_9,
	pre_out_10 => ww_pre_out_10,
	pre_out_11 => ww_pre_out_11,
	pre_out_12 => ww_pre_out_12,
	pre_out_13 => ww_pre_out_13,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	or_node_6_0 => ww_or_node_6_0);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	alt_synch_counter_14 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	updown : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_0 : OUT std_logic;
	pre_out_1 : OUT std_logic;
	pre_out_2 : OUT std_logic;
	pre_out_3 : OUT std_logic;
	pre_out_4 : OUT std_logic;
	pre_out_5 : OUT std_logic;
	pre_out_6 : OUT std_logic;
	pre_out_7 : OUT std_logic;
	pre_out_8 : OUT std_logic;
	pre_out_9 : OUT std_logic;
	pre_out_10 : OUT std_logic;
	pre_out_11 : OUT std_logic;
	pre_out_12 : OUT std_logic;
	pre_out_13 : OUT std_logic;
	pre_out_14 : OUT std_logic;
	pre_out_15 : OUT std_logic
	);
END alt_synch_counter_14;

ARCHITECTURE structure OF alt_synch_counter_14 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_updown : std_logic;
SIGNAL ww_clk_en : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_pre_out_1 : std_logic;
SIGNAL ww_pre_out_2 : std_logic;
SIGNAL ww_pre_out_3 : std_logic;
SIGNAL ww_pre_out_4 : std_logic;
SIGNAL ww_pre_out_5 : std_logic;
SIGNAL ww_pre_out_6 : std_logic;
SIGNAL ww_pre_out_7 : std_logic;
SIGNAL ww_pre_out_8 : std_logic;
SIGNAL ww_pre_out_9 : std_logic;
SIGNAL ww_pre_out_10 : std_logic;
SIGNAL ww_pre_out_11 : std_logic;
SIGNAL ww_pre_out_12 : std_logic;
SIGNAL ww_pre_out_13 : std_logic;
SIGNAL ww_pre_out_14 : std_logic;
SIGNAL ww_pre_out_15 : std_logic;
SIGNAL \the_carries[1]\ : std_logic;
SIGNAL \the_carries[2]\ : std_logic;
SIGNAL \the_carries[3]\ : std_logic;
SIGNAL \the_carries[4]\ : std_logic;
SIGNAL \the_carries[5]\ : std_logic;
SIGNAL \the_carries[6]\ : std_logic;
SIGNAL \the_carries[7]\ : std_logic;
SIGNAL \the_carries[8]\ : std_logic;
SIGNAL \the_carries[9]\ : std_logic;
SIGNAL \the_carries[10]\ : std_logic;
SIGNAL \the_carries[11]\ : std_logic;
SIGNAL \the_carries[12]\ : std_logic;
SIGNAL \the_carries[13]\ : std_logic;
SIGNAL \the_carries[14]\ : std_logic;
SIGNAL \the_carries[15]\ : std_logic;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_updown <= updown;
ww_clk_en <= clk_en;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_0 <= ww_sload_path_0;
pre_out_1 <= ww_pre_out_1;
pre_out_2 <= ww_pre_out_2;
pre_out_3 <= ww_pre_out_3;
pre_out_4 <= ww_pre_out_4;
pre_out_5 <= ww_pre_out_5;
pre_out_6 <= ww_pre_out_6;
pre_out_7 <= ww_pre_out_7;
pre_out_8 <= ww_pre_out_8;
pre_out_9 <= ww_pre_out_9;
pre_out_10 <= ww_pre_out_10;
pre_out_11 <= ww_pre_out_11;
pre_out_12 <= ww_pre_out_12;
pre_out_13 <= ww_pre_out_13;
pre_out_14 <= ww_pre_out_14;
pre_out_15 <= ww_pre_out_15;

lsb : apex20ke_lcell 
-- Equation(s):
-- sload_path_0 = DFFE(!sload_path_0, GLOBAL(outclock0), !buf_res, , inst48)
-- \the_carries[1]\ = CARRY(inst46 $ !sload_path_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "qfbk_counter",
	packed_mode => "false",
	lut_mask => "0FA5",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_updown,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_0,
	cout => \the_carries[1]\);

\$00006\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_1 = DFFE(pre_out_1 $ \the_carries[1]\, GLOBAL(outclock0), !buf_res, , inst48)
-- \the_carries[2]\ = CARRY(inst46 $ pre_out_1 # !\the_carries[1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C6F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_updown,
	datab => ww_pre_out_1,
	cin => \the_carries[1]\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_1,
	cout => \the_carries[2]\);

\$00008\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_2 = DFFE(pre_out_2 $ !\the_carries[2]\, GLOBAL(outclock0), !buf_res, , inst48)
-- \the_carries[3]\ = CARRY(!\the_carries[2]\ & (pre_out_2 $ !inst46))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A509",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_2,
	datab => ww_updown,
	cin => \the_carries[2]\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_2,
	cout => \the_carries[3]\);

\$00010\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_3 = DFFE(pre_out_3 $ \the_carries[3]\, GLOBAL(outclock0), !buf_res, , inst48)
-- \the_carries[4]\ = CARRY(inst46 $ pre_out_3 # !\the_carries[3]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C6F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_updown,
	datab => ww_pre_out_3,
	cin => \the_carries[3]\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_3,
	cout => \the_carries[4]\);

\$00012\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_4 = DFFE(pre_out_4 $ !\the_carries[4]\, GLOBAL(outclock0), !buf_res, , inst48)
-- \the_carries[5]\ = CARRY(!\the_carries[4]\ & (pre_out_4 $ !inst46))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A509",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_4,
	datab => ww_updown,
	cin => \the_carries[4]\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_4,
	cout => \the_carries[5]\);

\$00014\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_5 = DFFE(pre_out_5 $ \the_carries[5]\, GLOBAL(outclock0), !buf_res, , inst48)
-- \the_carries[6]\ = CARRY(inst46 $ pre_out_5 # !\the_carries[5]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C6F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_updown,
	datab => ww_pre_out_5,
	cin => \the_carries[5]\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_5,
	cout => \the_carries[6]\);

\$00016\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_6 = DFFE(pre_out_6 $ !\the_carries[6]\, GLOBAL(outclock0), !buf_res, , inst48)
-- \the_carries[7]\ = CARRY(!\the_carries[6]\ & (pre_out_6 $ !inst46))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A509",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_6,
	datab => ww_updown,
	cin => \the_carries[6]\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_6,
	cout => \the_carries[7]\);

\$00018\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_7 = DFFE(pre_out_7 $ \the_carries[7]\, GLOBAL(outclock0), !buf_res, , inst48)
-- \the_carries[8]\ = CARRY(inst46 $ pre_out_7 # !\the_carries[7]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C6F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_updown,
	datab => ww_pre_out_7,
	cin => \the_carries[7]\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_7,
	cout => \the_carries[8]\);

\$00020\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_8 = DFFE(pre_out_8 $ !\the_carries[8]\, GLOBAL(outclock0), !buf_res, , inst48)
-- \the_carries[9]\ = CARRY(!\the_carries[8]\ & (pre_out_8 $ !inst46))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A509",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_8,
	datab => ww_updown,
	cin => \the_carries[8]\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_8,
	cout => \the_carries[9]\);

\$00022\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_9 = DFFE(pre_out_9 $ \the_carries[9]\, GLOBAL(outclock0), !buf_res, , inst48)
-- \the_carries[10]\ = CARRY(inst46 $ pre_out_9 # !\the_carries[9]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C6F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_updown,
	datab => ww_pre_out_9,
	cin => \the_carries[9]\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_9,
	cout => \the_carries[10]\);

\$00024\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_10 = DFFE(pre_out_10 $ !\the_carries[10]\, GLOBAL(outclock0), !buf_res, , inst48)
-- \the_carries[11]\ = CARRY(!\the_carries[10]\ & (inst46 $ !pre_out_10))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C309",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_updown,
	datab => ww_pre_out_10,
	cin => \the_carries[10]\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_10,
	cout => \the_carries[11]\);

\$00026\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_11 = DFFE(pre_out_11 $ \the_carries[11]\, GLOBAL(outclock0), !buf_res, , inst48)
-- \the_carries[12]\ = CARRY(inst46 $ pre_out_11 # !\the_carries[11]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C6F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_updown,
	datab => ww_pre_out_11,
	cin => \the_carries[11]\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_11,
	cout => \the_carries[12]\);

\$00028\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_12 = DFFE(pre_out_12 $ !\the_carries[12]\, GLOBAL(outclock0), !buf_res, , inst48)
-- \the_carries[13]\ = CARRY(!\the_carries[12]\ & (inst46 $ !pre_out_12))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C309",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_updown,
	datab => ww_pre_out_12,
	cin => \the_carries[12]\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_12,
	cout => \the_carries[13]\);

\$00030\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_13 = DFFE(pre_out_13 $ \the_carries[13]\, GLOBAL(outclock0), !buf_res, , inst48)
-- \the_carries[14]\ = CARRY(inst46 $ pre_out_13 # !\the_carries[13]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C6F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_updown,
	datab => ww_pre_out_13,
	cin => \the_carries[13]\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_13,
	cout => \the_carries[14]\);

\$00032\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_14 = DFFE(pre_out_14 $ !\the_carries[14]\, GLOBAL(outclock0), !buf_res, , inst48)
-- \the_carries[15]\ = CARRY(!\the_carries[14]\ & (inst46 $ !pre_out_14))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C309",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_updown,
	datab => ww_pre_out_14,
	cin => \the_carries[14]\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_14,
	cout => \the_carries[15]\);

\$00034\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_15 = DFFE(\the_carries[15]\ $ pre_out_15, GLOBAL(outclock0), !buf_res, , inst48)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_pre_out_15,
	cin => \the_carries[15]\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_15);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_counter_14 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	updown : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_0 : OUT std_logic;
	pre_out_1 : OUT std_logic;
	pre_out_2 : OUT std_logic;
	pre_out_3 : OUT std_logic;
	pre_out_4 : OUT std_logic;
	pre_out_5 : OUT std_logic;
	pre_out_6 : OUT std_logic;
	pre_out_7 : OUT std_logic;
	pre_out_8 : OUT std_logic;
	pre_out_9 : OUT std_logic;
	pre_out_10 : OUT std_logic;
	pre_out_11 : OUT std_logic;
	pre_out_12 : OUT std_logic;
	pre_out_13 : OUT std_logic;
	pre_out_14 : OUT std_logic;
	pre_out_15 : OUT std_logic
	);
END lpm_counter_14;

ARCHITECTURE structure OF lpm_counter_14 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_updown : std_logic;
SIGNAL ww_clk_en : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_pre_out_1 : std_logic;
SIGNAL ww_pre_out_2 : std_logic;
SIGNAL ww_pre_out_3 : std_logic;
SIGNAL ww_pre_out_4 : std_logic;
SIGNAL ww_pre_out_5 : std_logic;
SIGNAL ww_pre_out_6 : std_logic;
SIGNAL ww_pre_out_7 : std_logic;
SIGNAL ww_pre_out_8 : std_logic;
SIGNAL ww_pre_out_9 : std_logic;
SIGNAL ww_pre_out_10 : std_logic;
SIGNAL ww_pre_out_11 : std_logic;
SIGNAL ww_pre_out_12 : std_logic;
SIGNAL ww_pre_out_13 : std_logic;
SIGNAL ww_pre_out_14 : std_logic;
SIGNAL ww_pre_out_15 : std_logic;

COMPONENT alt_synch_counter_14
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	updown : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_0 : OUT std_logic;
	pre_out_1 : OUT std_logic;
	pre_out_2 : OUT std_logic;
	pre_out_3 : OUT std_logic;
	pre_out_4 : OUT std_logic;
	pre_out_5 : OUT std_logic;
	pre_out_6 : OUT std_logic;
	pre_out_7 : OUT std_logic;
	pre_out_8 : OUT std_logic;
	pre_out_9 : OUT std_logic;
	pre_out_10 : OUT std_logic;
	pre_out_11 : OUT std_logic;
	pre_out_12 : OUT std_logic;
	pre_out_13 : OUT std_logic;
	pre_out_14 : OUT std_logic;
	pre_out_15 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_updown <= updown;
ww_clk_en <= clk_en;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_0 <= ww_sload_path_0;
pre_out_1 <= ww_pre_out_1;
pre_out_2 <= ww_pre_out_2;
pre_out_3 <= ww_pre_out_3;
pre_out_4 <= ww_pre_out_4;
pre_out_5 <= ww_pre_out_5;
pre_out_6 <= ww_pre_out_6;
pre_out_7 <= ww_pre_out_7;
pre_out_8 <= ww_pre_out_8;
pre_out_9 <= ww_pre_out_9;
pre_out_10 <= ww_pre_out_10;
pre_out_11 <= ww_pre_out_11;
pre_out_12 <= ww_pre_out_12;
pre_out_13 <= ww_pre_out_13;
pre_out_14 <= ww_pre_out_14;
pre_out_15 <= ww_pre_out_15;
wysi_counter : alt_synch_counter_14
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	updown => ww_updown,
	clk_en => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_0 => ww_sload_path_0,
	pre_out_1 => ww_pre_out_1,
	pre_out_2 => ww_pre_out_2,
	pre_out_3 => ww_pre_out_3,
	pre_out_4 => ww_pre_out_4,
	pre_out_5 => ww_pre_out_5,
	pre_out_6 => ww_pre_out_6,
	pre_out_7 => ww_pre_out_7,
	pre_out_8 => ww_pre_out_8,
	pre_out_9 => ww_pre_out_9,
	pre_out_10 => ww_pre_out_10,
	pre_out_11 => ww_pre_out_11,
	pre_out_12 => ww_pre_out_12,
	pre_out_13 => ww_pre_out_13,
	pre_out_14 => ww_pre_out_14,
	pre_out_15 => ww_pre_out_15);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	tx_packet_ct IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	updown : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_0 : OUT std_logic;
	pre_out_1 : OUT std_logic;
	pre_out_2 : OUT std_logic;
	pre_out_3 : OUT std_logic;
	pre_out_4 : OUT std_logic;
	pre_out_5 : OUT std_logic;
	pre_out_6 : OUT std_logic;
	pre_out_7 : OUT std_logic;
	pre_out_8 : OUT std_logic;
	pre_out_9 : OUT std_logic;
	pre_out_10 : OUT std_logic;
	pre_out_11 : OUT std_logic;
	pre_out_12 : OUT std_logic;
	pre_out_13 : OUT std_logic;
	pre_out_14 : OUT std_logic;
	pre_out_15 : OUT std_logic
	);
END tx_packet_ct;

ARCHITECTURE structure OF tx_packet_ct IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_updown : std_logic;
SIGNAL ww_clk_en : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_pre_out_1 : std_logic;
SIGNAL ww_pre_out_2 : std_logic;
SIGNAL ww_pre_out_3 : std_logic;
SIGNAL ww_pre_out_4 : std_logic;
SIGNAL ww_pre_out_5 : std_logic;
SIGNAL ww_pre_out_6 : std_logic;
SIGNAL ww_pre_out_7 : std_logic;
SIGNAL ww_pre_out_8 : std_logic;
SIGNAL ww_pre_out_9 : std_logic;
SIGNAL ww_pre_out_10 : std_logic;
SIGNAL ww_pre_out_11 : std_logic;
SIGNAL ww_pre_out_12 : std_logic;
SIGNAL ww_pre_out_13 : std_logic;
SIGNAL ww_pre_out_14 : std_logic;
SIGNAL ww_pre_out_15 : std_logic;

COMPONENT lpm_counter_14
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	updown : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_0 : OUT std_logic;
	pre_out_1 : OUT std_logic;
	pre_out_2 : OUT std_logic;
	pre_out_3 : OUT std_logic;
	pre_out_4 : OUT std_logic;
	pre_out_5 : OUT std_logic;
	pre_out_6 : OUT std_logic;
	pre_out_7 : OUT std_logic;
	pre_out_8 : OUT std_logic;
	pre_out_9 : OUT std_logic;
	pre_out_10 : OUT std_logic;
	pre_out_11 : OUT std_logic;
	pre_out_12 : OUT std_logic;
	pre_out_13 : OUT std_logic;
	pre_out_14 : OUT std_logic;
	pre_out_15 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_updown <= updown;
ww_clk_en <= clk_en;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_0 <= ww_sload_path_0;
pre_out_1 <= ww_pre_out_1;
pre_out_2 <= ww_pre_out_2;
pre_out_3 <= ww_pre_out_3;
pre_out_4 <= ww_pre_out_4;
pre_out_5 <= ww_pre_out_5;
pre_out_6 <= ww_pre_out_6;
pre_out_7 <= ww_pre_out_7;
pre_out_8 <= ww_pre_out_8;
pre_out_9 <= ww_pre_out_9;
pre_out_10 <= ww_pre_out_10;
pre_out_11 <= ww_pre_out_11;
pre_out_12 <= ww_pre_out_12;
pre_out_13 <= ww_pre_out_13;
pre_out_14 <= ww_pre_out_14;
pre_out_15 <= ww_pre_out_15;
lpm_counter_component : lpm_counter_14
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	updown => ww_updown,
	clk_en => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_0 => ww_sload_path_0,
	pre_out_1 => ww_pre_out_1,
	pre_out_2 => ww_pre_out_2,
	pre_out_3 => ww_pre_out_3,
	pre_out_4 => ww_pre_out_4,
	pre_out_5 => ww_pre_out_5,
	pre_out_6 => ww_pre_out_6,
	pre_out_7 => ww_pre_out_7,
	pre_out_8 => ww_pre_out_8,
	pre_out_9 => ww_pre_out_9,
	pre_out_10 => ww_pre_out_10,
	pre_out_11 => ww_pre_out_11,
	pre_out_12 => ww_pre_out_12,
	pre_out_13 => ww_pre_out_13,
	pre_out_14 => ww_pre_out_14,
	pre_out_15 => ww_pre_out_15);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	dac_rs_tab_rect_01 IS
    PORT (
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	dac_d_6 : OUT std_logic;
	dac_d_0 : OUT std_logic
	);
END dac_rs_tab_rect_01;

ARCHITECTURE structure OF dac_rs_tab_rect_01 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_dac_d_6 : std_logic;
SIGNAL ww_dac_d_0 : std_logic;

BEGIN

ww_sload_path_4 <= sload_path_4;
ww_sload_path_3 <= sload_path_3;
ww_sload_path_2 <= sload_path_2;
ww_sload_path_1 <= sload_path_1;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
dac_d_6 <= ww_dac_d_6;
dac_d_0 <= ww_dac_d_0;

\dac_d[6]~675_I\ : apex20ke_lcell 
-- Equation(s):
-- dac_d_6 = !sload_path_4 & (!sload_path_2 & !sload_path_1 # !sload_path_3)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0515",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_4,
	datab => ww_sload_path_2,
	datac => ww_sload_path_3,
	datad => ww_sload_path_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_dac_d_6);

\dac_d[0]~678_I\ : apex20ke_lcell 
-- Equation(s):
-- dac_d_0 = !sload_path_3 & !sload_path_2 # !sload_path_4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F3F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_3,
	datac => ww_sload_path_4,
	datad => ww_sload_path_2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_dac_d_0);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	alt_synch_counter_13 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q_15 : OUT std_logic;
	q_14 : OUT std_logic;
	q_13 : OUT std_logic;
	q_12 : OUT std_logic;
	q_11 : OUT std_logic;
	q_10 : OUT std_logic;
	q_9 : OUT std_logic;
	q_8 : OUT std_logic;
	q_7 : OUT std_logic;
	q_6 : OUT std_logic;
	q_5 : OUT std_logic;
	q_4 : OUT std_logic;
	q_3 : OUT std_logic;
	q_2 : OUT std_logic;
	q_1 : OUT std_logic;
	q_0 : OUT std_logic
	);
END alt_synch_counter_13;

ARCHITECTURE structure OF alt_synch_counter_13 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_clk_en : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_q_15 : std_logic;
SIGNAL ww_q_14 : std_logic;
SIGNAL ww_q_13 : std_logic;
SIGNAL ww_q_12 : std_logic;
SIGNAL ww_q_11 : std_logic;
SIGNAL ww_q_10 : std_logic;
SIGNAL ww_q_9 : std_logic;
SIGNAL ww_q_8 : std_logic;
SIGNAL ww_q_7 : std_logic;
SIGNAL ww_q_6 : std_logic;
SIGNAL ww_q_5 : std_logic;
SIGNAL ww_q_4 : std_logic;
SIGNAL ww_q_3 : std_logic;
SIGNAL ww_q_2 : std_logic;
SIGNAL ww_q_1 : std_logic;
SIGNAL ww_q_0 : std_logic;
SIGNAL \counter_cell[14]~COUT\ : std_logic;
SIGNAL \counter_cell[13]~COUT\ : std_logic;
SIGNAL \counter_cell[12]~COUT\ : std_logic;
SIGNAL \counter_cell[11]~COUT\ : std_logic;
SIGNAL \counter_cell[10]~COUT\ : std_logic;
SIGNAL \counter_cell[9]~COUT\ : std_logic;
SIGNAL \counter_cell[8]~COUT\ : std_logic;
SIGNAL \counter_cell[7]~COUT\ : std_logic;
SIGNAL \counter_cell[6]~COUT\ : std_logic;
SIGNAL \counter_cell[5]~COUT\ : std_logic;
SIGNAL \counter_cell[4]~COUT\ : std_logic;
SIGNAL \counter_cell[3]~COUT\ : std_logic;
SIGNAL \counter_cell[2]~COUT\ : std_logic;
SIGNAL \counter_cell[1]~COUT\ : std_logic;
SIGNAL \counter_cell[0]~COUT\ : std_logic;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_clk_en <= clk_en;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
q_15 <= ww_q_15;
q_14 <= ww_q_14;
q_13 <= ww_q_13;
q_12 <= ww_q_12;
q_11 <= ww_q_11;
q_10 <= ww_q_10;
q_9 <= ww_q_9;
q_8 <= ww_q_8;
q_7 <= ww_q_7;
q_6 <= ww_q_6;
q_5 <= ww_q_5;
q_4 <= ww_q_4;
q_3 <= ww_q_3;
q_2 <= ww_q_2;
q_1 <= ww_q_1;
q_0 <= ww_q_0;

\counter_cell[15]\ : apex20ke_lcell 
-- Equation(s):
-- q_15 = DFFE(q_15 $ \counter_cell[14]~COUT\, GLOBAL(outclock0), !buf_res, , dpr_ren)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_15,
	cin => \counter_cell[14]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_q_15);

\counter_cell[14]\ : apex20ke_lcell 
-- Equation(s):
-- q_14 = DFFE(q_14 $ !\counter_cell[13]~COUT\, GLOBAL(outclock0), !buf_res, , dpr_ren)
-- \counter_cell[14]~COUT\ = CARRY(q_14 & !\counter_cell[13]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_q_14,
	cin => \counter_cell[13]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_q_14,
	cout => \counter_cell[14]~COUT\);

\counter_cell[13]\ : apex20ke_lcell 
-- Equation(s):
-- q_13 = DFFE(q_13 $ \counter_cell[12]~COUT\, GLOBAL(outclock0), !buf_res, , dpr_ren)
-- \counter_cell[13]~COUT\ = CARRY(!\counter_cell[12]~COUT\ # !q_13)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_q_13,
	cin => \counter_cell[12]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_q_13,
	cout => \counter_cell[13]~COUT\);

\counter_cell[12]\ : apex20ke_lcell 
-- Equation(s):
-- q_12 = DFFE(q_12 $ !\counter_cell[11]~COUT\, GLOBAL(outclock0), !buf_res, , dpr_ren)
-- \counter_cell[12]~COUT\ = CARRY(q_12 & !\counter_cell[11]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_12,
	cin => \counter_cell[11]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_q_12,
	cout => \counter_cell[12]~COUT\);

\counter_cell[11]\ : apex20ke_lcell 
-- Equation(s):
-- q_11 = DFFE(q_11 $ \counter_cell[10]~COUT\, GLOBAL(outclock0), !buf_res, , dpr_ren)
-- \counter_cell[11]~COUT\ = CARRY(!\counter_cell[10]~COUT\ # !q_11)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_q_11,
	cin => \counter_cell[10]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_q_11,
	cout => \counter_cell[11]~COUT\);

\counter_cell[10]\ : apex20ke_lcell 
-- Equation(s):
-- q_10 = DFFE(q_10 $ !\counter_cell[9]~COUT\, GLOBAL(outclock0), !buf_res, , dpr_ren)
-- \counter_cell[10]~COUT\ = CARRY(q_10 & !\counter_cell[9]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_10,
	cin => \counter_cell[9]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_q_10,
	cout => \counter_cell[10]~COUT\);

\counter_cell[9]\ : apex20ke_lcell 
-- Equation(s):
-- q_9 = DFFE(q_9 $ \counter_cell[8]~COUT\, GLOBAL(outclock0), !buf_res, , dpr_ren)
-- \counter_cell[9]~COUT\ = CARRY(!\counter_cell[8]~COUT\ # !q_9)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_q_9,
	cin => \counter_cell[8]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_q_9,
	cout => \counter_cell[9]~COUT\);

\counter_cell[8]\ : apex20ke_lcell 
-- Equation(s):
-- q_8 = DFFE(q_8 $ !\counter_cell[7]~COUT\, GLOBAL(outclock0), !buf_res, , dpr_ren)
-- \counter_cell[8]~COUT\ = CARRY(q_8 & !\counter_cell[7]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_q_8,
	cin => \counter_cell[7]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_q_8,
	cout => \counter_cell[8]~COUT\);

\counter_cell[7]\ : apex20ke_lcell 
-- Equation(s):
-- q_7 = DFFE(q_7 $ \counter_cell[6]~COUT\, GLOBAL(outclock0), !buf_res, , dpr_ren)
-- \counter_cell[7]~COUT\ = CARRY(!\counter_cell[6]~COUT\ # !q_7)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_q_7,
	cin => \counter_cell[6]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_q_7,
	cout => \counter_cell[7]~COUT\);

\counter_cell[6]\ : apex20ke_lcell 
-- Equation(s):
-- q_6 = DFFE(q_6 $ !\counter_cell[5]~COUT\, GLOBAL(outclock0), !buf_res, , dpr_ren)
-- \counter_cell[6]~COUT\ = CARRY(q_6 & !\counter_cell[5]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_q_6,
	cin => \counter_cell[5]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_q_6,
	cout => \counter_cell[6]~COUT\);

\counter_cell[5]\ : apex20ke_lcell 
-- Equation(s):
-- q_5 = DFFE(q_5 $ \counter_cell[4]~COUT\, GLOBAL(outclock0), !buf_res, , dpr_ren)
-- \counter_cell[5]~COUT\ = CARRY(!\counter_cell[4]~COUT\ # !q_5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_5,
	cin => \counter_cell[4]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_q_5,
	cout => \counter_cell[5]~COUT\);

\counter_cell[4]\ : apex20ke_lcell 
-- Equation(s):
-- q_4 = DFFE(q_4 $ !\counter_cell[3]~COUT\, GLOBAL(outclock0), !buf_res, , dpr_ren)
-- \counter_cell[4]~COUT\ = CARRY(q_4 & !\counter_cell[3]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_4,
	cin => \counter_cell[3]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_q_4,
	cout => \counter_cell[4]~COUT\);

\counter_cell[3]\ : apex20ke_lcell 
-- Equation(s):
-- q_3 = DFFE(q_3 $ \counter_cell[2]~COUT\, GLOBAL(outclock0), !buf_res, , dpr_ren)
-- \counter_cell[3]~COUT\ = CARRY(!\counter_cell[2]~COUT\ # !q_3)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_3,
	cin => \counter_cell[2]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_q_3,
	cout => \counter_cell[3]~COUT\);

\counter_cell[2]\ : apex20ke_lcell 
-- Equation(s):
-- q_2 = DFFE(q_2 $ !\counter_cell[1]~COUT\, GLOBAL(outclock0), !buf_res, , dpr_ren)
-- \counter_cell[2]~COUT\ = CARRY(q_2 & !\counter_cell[1]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_2,
	cin => \counter_cell[1]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_q_2,
	cout => \counter_cell[2]~COUT\);

\counter_cell[1]\ : apex20ke_lcell 
-- Equation(s):
-- q_1 = DFFE(q_1 $ \counter_cell[0]~COUT\, GLOBAL(outclock0), !buf_res, , dpr_ren)
-- \counter_cell[1]~COUT\ = CARRY(!\counter_cell[0]~COUT\ # !q_1)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_1,
	cin => \counter_cell[0]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_q_1,
	cout => \counter_cell[1]~COUT\);

\counter_cell[0]\ : apex20ke_lcell 
-- Equation(s):
-- q_0 = DFFE(!q_0, GLOBAL(outclock0), !buf_res, , dpr_ren)
-- \counter_cell[0]~COUT\ = CARRY(q_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "qfbk_counter",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_q_0,
	cout => \counter_cell[0]~COUT\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_counter_13 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q_15 : OUT std_logic;
	q_14 : OUT std_logic;
	q_13 : OUT std_logic;
	q_12 : OUT std_logic;
	q_11 : OUT std_logic;
	q_10 : OUT std_logic;
	q_9 : OUT std_logic;
	q_8 : OUT std_logic;
	q_7 : OUT std_logic;
	q_6 : OUT std_logic;
	q_5 : OUT std_logic;
	q_4 : OUT std_logic;
	q_3 : OUT std_logic;
	q_2 : OUT std_logic;
	q_1 : OUT std_logic;
	q_0 : OUT std_logic
	);
END lpm_counter_13;

ARCHITECTURE structure OF lpm_counter_13 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_clk_en : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_q_15 : std_logic;
SIGNAL ww_q_14 : std_logic;
SIGNAL ww_q_13 : std_logic;
SIGNAL ww_q_12 : std_logic;
SIGNAL ww_q_11 : std_logic;
SIGNAL ww_q_10 : std_logic;
SIGNAL ww_q_9 : std_logic;
SIGNAL ww_q_8 : std_logic;
SIGNAL ww_q_7 : std_logic;
SIGNAL ww_q_6 : std_logic;
SIGNAL ww_q_5 : std_logic;
SIGNAL ww_q_4 : std_logic;
SIGNAL ww_q_3 : std_logic;
SIGNAL ww_q_2 : std_logic;
SIGNAL ww_q_1 : std_logic;
SIGNAL ww_q_0 : std_logic;

COMPONENT alt_synch_counter_13
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q_15 : OUT std_logic;
	q_14 : OUT std_logic;
	q_13 : OUT std_logic;
	q_12 : OUT std_logic;
	q_11 : OUT std_logic;
	q_10 : OUT std_logic;
	q_9 : OUT std_logic;
	q_8 : OUT std_logic;
	q_7 : OUT std_logic;
	q_6 : OUT std_logic;
	q_5 : OUT std_logic;
	q_4 : OUT std_logic;
	q_3 : OUT std_logic;
	q_2 : OUT std_logic;
	q_1 : OUT std_logic;
	q_0 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_clk_en <= clk_en;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
q_15 <= ww_q_15;
q_14 <= ww_q_14;
q_13 <= ww_q_13;
q_12 <= ww_q_12;
q_11 <= ww_q_11;
q_10 <= ww_q_10;
q_9 <= ww_q_9;
q_8 <= ww_q_8;
q_7 <= ww_q_7;
q_6 <= ww_q_6;
q_5 <= ww_q_5;
q_4 <= ww_q_4;
q_3 <= ww_q_3;
q_2 <= ww_q_2;
q_1 <= ww_q_1;
q_0 <= ww_q_0;
wysi_counter : alt_synch_counter_13
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	clk_en => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	q_15 => ww_q_15,
	q_14 => ww_q_14,
	q_13 => ww_q_13,
	q_12 => ww_q_12,
	q_11 => ww_q_11,
	q_10 => ww_q_10,
	q_9 => ww_q_9,
	q_8 => ww_q_8,
	q_7 => ww_q_7,
	q_6 => ww_q_6,
	q_5 => ww_q_5,
	q_4 => ww_q_4,
	q_3 => ww_q_3,
	q_2 => ww_q_2,
	q_1 => ww_q_1,
	q_0 => ww_q_0);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	tx_dpr_radr_ct IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q_15 : OUT std_logic;
	q_14 : OUT std_logic;
	q_13 : OUT std_logic;
	q_12 : OUT std_logic;
	q_11 : OUT std_logic;
	q_10 : OUT std_logic;
	q_9 : OUT std_logic;
	q_8 : OUT std_logic;
	q_7 : OUT std_logic;
	q_6 : OUT std_logic;
	q_5 : OUT std_logic;
	q_4 : OUT std_logic;
	q_3 : OUT std_logic;
	q_2 : OUT std_logic;
	q_1 : OUT std_logic;
	q_0 : OUT std_logic
	);
END tx_dpr_radr_ct;

ARCHITECTURE structure OF tx_dpr_radr_ct IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_clk_en : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_q_15 : std_logic;
SIGNAL ww_q_14 : std_logic;
SIGNAL ww_q_13 : std_logic;
SIGNAL ww_q_12 : std_logic;
SIGNAL ww_q_11 : std_logic;
SIGNAL ww_q_10 : std_logic;
SIGNAL ww_q_9 : std_logic;
SIGNAL ww_q_8 : std_logic;
SIGNAL ww_q_7 : std_logic;
SIGNAL ww_q_6 : std_logic;
SIGNAL ww_q_5 : std_logic;
SIGNAL ww_q_4 : std_logic;
SIGNAL ww_q_3 : std_logic;
SIGNAL ww_q_2 : std_logic;
SIGNAL ww_q_1 : std_logic;
SIGNAL ww_q_0 : std_logic;

COMPONENT lpm_counter_13
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q_15 : OUT std_logic;
	q_14 : OUT std_logic;
	q_13 : OUT std_logic;
	q_12 : OUT std_logic;
	q_11 : OUT std_logic;
	q_10 : OUT std_logic;
	q_9 : OUT std_logic;
	q_8 : OUT std_logic;
	q_7 : OUT std_logic;
	q_6 : OUT std_logic;
	q_5 : OUT std_logic;
	q_4 : OUT std_logic;
	q_3 : OUT std_logic;
	q_2 : OUT std_logic;
	q_1 : OUT std_logic;
	q_0 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_clk_en <= clk_en;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
q_15 <= ww_q_15;
q_14 <= ww_q_14;
q_13 <= ww_q_13;
q_12 <= ww_q_12;
q_11 <= ww_q_11;
q_10 <= ww_q_10;
q_9 <= ww_q_9;
q_8 <= ww_q_8;
q_7 <= ww_q_7;
q_6 <= ww_q_6;
q_5 <= ww_q_5;
q_4 <= ww_q_4;
q_3 <= ww_q_3;
q_2 <= ww_q_2;
q_1 <= ww_q_1;
q_0 <= ww_q_0;
lpm_counter_component : lpm_counter_13
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	clk_en => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	q_15 => ww_q_15,
	q_14 => ww_q_14,
	q_13 => ww_q_13,
	q_12 => ww_q_12,
	q_11 => ww_q_11,
	q_10 => ww_q_10,
	q_9 => ww_q_9,
	q_8 => ww_q_8,
	q_7 => ww_q_7,
	q_6 => ww_q_6,
	q_5 => ww_q_5,
	q_4 => ww_q_4,
	q_3 => ww_q_3,
	q_2 => ww_q_2,
	q_1 => ww_q_1,
	q_0 => ww_q_0);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	Tx_dpr_ctrl_ap IS
    PORT (
	CLK20 : IN std_logic;
	buf_res : IN std_logic;
	tx_dpr_ren : IN std_logic;
	tx_dpr_wadr_local_0 : IN std_logic;
	tx_dpr_wadr_local_1 : IN std_logic;
	tx_dpr_wadr_local_2 : IN std_logic;
	tx_dpr_wadr_local_3 : IN std_logic;
	tx_dpr_wadr_local_4 : IN std_logic;
	tx_dpr_wadr_local_5 : IN std_logic;
	tx_dpr_wadr_local_6 : IN std_logic;
	tx_dpr_wadr_local_7 : IN std_logic;
	tx_dpr_wadr_local_8 : IN std_logic;
	tx_dpr_wadr_local_9 : IN std_logic;
	tx_dpr_wadr_local_10 : IN std_logic;
	tx_dpr_wadr_local_11 : IN std_logic;
	tx_dpr_wadr_local_12 : IN std_logic;
	tx_dpr_wadr_local_13 : IN std_logic;
	tx_dpr_wadr_local_14 : IN std_logic;
	tx_dpr_wadr_local_15 : IN std_logic;
	tx_pack_ct_up : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q_15 : OUT std_logic;
	q_14 : OUT std_logic;
	q_13 : OUT std_logic;
	q_12 : OUT std_logic;
	q_11 : OUT std_logic;
	q_10 : OUT std_logic;
	q_9 : OUT std_logic;
	q_8 : OUT std_logic;
	q_7 : OUT std_logic;
	q_6 : OUT std_logic;
	q_5 : OUT std_logic;
	q_4 : OUT std_logic;
	q_3 : OUT std_logic;
	q_2 : OUT std_logic;
	q_1 : OUT std_logic;
	q_0 : OUT std_logic;
	op_6 : OUT std_logic
	);
END Tx_dpr_ctrl_ap;

ARCHITECTURE structure OF Tx_dpr_ctrl_ap IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK20 : std_logic;
SIGNAL ww_buf_res : std_logic;
SIGNAL ww_tx_dpr_ren : std_logic;
SIGNAL ww_tx_dpr_wadr_local_0 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_1 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_2 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_3 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_4 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_5 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_6 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_7 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_8 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_9 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_10 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_11 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_12 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_13 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_14 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_15 : std_logic;
SIGNAL ww_tx_pack_ct_up : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_q_15 : std_logic;
SIGNAL ww_q_14 : std_logic;
SIGNAL ww_q_13 : std_logic;
SIGNAL ww_q_12 : std_logic;
SIGNAL ww_q_11 : std_logic;
SIGNAL ww_q_10 : std_logic;
SIGNAL ww_q_9 : std_logic;
SIGNAL ww_q_8 : std_logic;
SIGNAL ww_q_7 : std_logic;
SIGNAL ww_q_6 : std_logic;
SIGNAL ww_q_5 : std_logic;
SIGNAL ww_q_4 : std_logic;
SIGNAL ww_q_3 : std_logic;
SIGNAL ww_q_2 : std_logic;
SIGNAL ww_q_1 : std_logic;
SIGNAL ww_q_0 : std_logic;
SIGNAL ww_op_6 : std_logic;
SIGNAL \tx_dpr_waddr[10]\ : std_logic;
SIGNAL \tx_dpr_waddr[9]\ : std_logic;
SIGNAL \tx_dpr_waddr[8]\ : std_logic;
SIGNAL \tx_dpr_waddr[7]\ : std_logic;
SIGNAL \tx_dpr_waddr[6]\ : std_logic;
SIGNAL \tx_dpr_waddr[5]\ : std_logic;
SIGNAL \tx_dpr_waddr[4]\ : std_logic;
SIGNAL \tx_dpr_waddr[3]\ : std_logic;
SIGNAL \tx_dpr_waddr[2]\ : std_logic;
SIGNAL \tx_dpr_waddr[1]\ : std_logic;
SIGNAL \tx_dpr_waddr[0]\ : std_logic;
SIGNAL \op_5~1COUT\ : std_logic;
SIGNAL \op_5~2COUT\ : std_logic;
SIGNAL \op_5~3COUT\ : std_logic;
SIGNAL \op_5~4COUT\ : std_logic;
SIGNAL \op_5~5COUT\ : std_logic;
SIGNAL \op_5~6COUT\ : std_logic;
SIGNAL \op_5~7COUT\ : std_logic;
SIGNAL \op_5~8COUT\ : std_logic;
SIGNAL \op_5~9COUT\ : std_logic;
SIGNAL \op_5~10COUT\ : std_logic;
SIGNAL \op_5~11\ : std_logic;
SIGNAL \op_5~2\ : std_logic;
SIGNAL \op_5~8\ : std_logic;
SIGNAL \op_5~1\ : std_logic;
SIGNAL \op_5~7\ : std_logic;
SIGNAL \op_6~344\ : std_logic;
SIGNAL \op_5~4\ : std_logic;
SIGNAL \op_5~5\ : std_logic;
SIGNAL \op_5~6\ : std_logic;
SIGNAL \op_6~340\ : std_logic;
SIGNAL \tx_dpr_waddr[12]\ : std_logic;
SIGNAL \tx_dpr_waddr[11]\ : std_logic;
SIGNAL \op_5~11COUT\ : std_logic;
SIGNAL \op_5~12COUT\ : std_logic;
SIGNAL \op_5~13\ : std_logic;
SIGNAL \op_5~3\ : std_logic;
SIGNAL \op_5~9\ : std_logic;
SIGNAL \op_6~336\ : std_logic;
SIGNAL \op_5~12\ : std_logic;
SIGNAL \op_5~10\ : std_logic;
SIGNAL \tx_dpr_waddr[13]\ : std_logic;
SIGNAL \tx_dpr_waddr[14]\ : std_logic;
SIGNAL \tx_dpr_waddr[15]\ : std_logic;
SIGNAL \op_1~152\ : std_logic;
SIGNAL \op_1~151\ : std_logic;
SIGNAL \op_1~154\ : std_logic;
SIGNAL \op_6~353\ : std_logic;
SIGNAL \op_2~1COUT\ : std_logic;
SIGNAL \op_2~2COUT\ : std_logic;
SIGNAL \op_2~3COUT\ : std_logic;
SIGNAL \op_2~4COUT\ : std_logic;
SIGNAL \op_2~5COUT\ : std_logic;
SIGNAL \op_2~6COUT\ : std_logic;
SIGNAL \op_2~7COUT\ : std_logic;
SIGNAL \op_2~8COUT\ : std_logic;
SIGNAL \op_2~9COUT\ : std_logic;
SIGNAL \op_2~10COUT\ : std_logic;
SIGNAL \op_2~11COUT\ : std_logic;
SIGNAL \op_2~12\ : std_logic;
SIGNAL \op_2~11\ : std_logic;
SIGNAL \op_2~10\ : std_logic;
SIGNAL \op_2~9\ : std_logic;
SIGNAL \op_2~8\ : std_logic;
SIGNAL \op_2~7\ : std_logic;
SIGNAL \op_2~6\ : std_logic;
SIGNAL \op_2~5\ : std_logic;
SIGNAL \op_2~4\ : std_logic;
SIGNAL \op_2~3\ : std_logic;
SIGNAL \op_2~2\ : std_logic;
SIGNAL \op_2~1\ : std_logic;
SIGNAL \op_3~1COUT\ : std_logic;
SIGNAL \op_3~2COUT\ : std_logic;
SIGNAL \op_3~3COUT\ : std_logic;
SIGNAL \op_3~4COUT\ : std_logic;
SIGNAL \op_3~5COUT\ : std_logic;
SIGNAL \op_3~6COUT\ : std_logic;
SIGNAL \op_3~7COUT\ : std_logic;
SIGNAL \op_3~8COUT\ : std_logic;
SIGNAL \op_3~9COUT\ : std_logic;
SIGNAL \op_3~10COUT\ : std_logic;
SIGNAL \op_3~11COUT\ : std_logic;
SIGNAL \op_3~12\ : std_logic;
SIGNAL \op_3~3\ : std_logic;
SIGNAL \op_3~2\ : std_logic;
SIGNAL \op_3~4\ : std_logic;
SIGNAL \op_3~1\ : std_logic;
SIGNAL \op_6~345\ : std_logic;
SIGNAL \op_3~6\ : std_logic;
SIGNAL \op_3~8\ : std_logic;
SIGNAL \op_3~5\ : std_logic;
SIGNAL \op_3~7\ : std_logic;
SIGNAL \op_6~346\ : std_logic;
SIGNAL \op_3~9\ : std_logic;
SIGNAL \op_6~347\ : std_logic;
SIGNAL \op_2~12COUT\ : std_logic;
SIGNAL \op_2~13\ : std_logic;
SIGNAL \op_3~12COUT\ : std_logic;
SIGNAL \op_3~13\ : std_logic;
SIGNAL \op_3~10\ : std_logic;
SIGNAL \op_3~11\ : std_logic;
SIGNAL \op_6~348\ : std_logic;
SIGNAL \op_6~349\ : std_logic;
SIGNAL \op_1~9\ : std_logic;
SIGNAL \op_2~13COUT\ : std_logic;
SIGNAL \op_2~14\ : std_logic;
SIGNAL \op_3~13COUT\ : std_logic;
SIGNAL \op_3~14\ : std_logic;

COMPONENT tx_dpr_radr_ct
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q_15 : OUT std_logic;
	q_14 : OUT std_logic;
	q_13 : OUT std_logic;
	q_12 : OUT std_logic;
	q_11 : OUT std_logic;
	q_10 : OUT std_logic;
	q_9 : OUT std_logic;
	q_8 : OUT std_logic;
	q_7 : OUT std_logic;
	q_6 : OUT std_logic;
	q_5 : OUT std_logic;
	q_4 : OUT std_logic;
	q_3 : OUT std_logic;
	q_2 : OUT std_logic;
	q_1 : OUT std_logic;
	q_0 : OUT std_logic);
END COMPONENT;

BEGIN

ww_CLK20 <= CLK20;
ww_buf_res <= buf_res;
ww_tx_dpr_ren <= tx_dpr_ren;
ww_tx_dpr_wadr_local_0 <= tx_dpr_wadr_local_0;
ww_tx_dpr_wadr_local_1 <= tx_dpr_wadr_local_1;
ww_tx_dpr_wadr_local_2 <= tx_dpr_wadr_local_2;
ww_tx_dpr_wadr_local_3 <= tx_dpr_wadr_local_3;
ww_tx_dpr_wadr_local_4 <= tx_dpr_wadr_local_4;
ww_tx_dpr_wadr_local_5 <= tx_dpr_wadr_local_5;
ww_tx_dpr_wadr_local_6 <= tx_dpr_wadr_local_6;
ww_tx_dpr_wadr_local_7 <= tx_dpr_wadr_local_7;
ww_tx_dpr_wadr_local_8 <= tx_dpr_wadr_local_8;
ww_tx_dpr_wadr_local_9 <= tx_dpr_wadr_local_9;
ww_tx_dpr_wadr_local_10 <= tx_dpr_wadr_local_10;
ww_tx_dpr_wadr_local_11 <= tx_dpr_wadr_local_11;
ww_tx_dpr_wadr_local_12 <= tx_dpr_wadr_local_12;
ww_tx_dpr_wadr_local_13 <= tx_dpr_wadr_local_13;
ww_tx_dpr_wadr_local_14 <= tx_dpr_wadr_local_14;
ww_tx_dpr_wadr_local_15 <= tx_dpr_wadr_local_15;
ww_tx_pack_ct_up <= tx_pack_ct_up;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
q_15 <= ww_q_15;
q_14 <= ww_q_14;
q_13 <= ww_q_13;
q_12 <= ww_q_12;
q_11 <= ww_q_11;
q_10 <= ww_q_10;
q_9 <= ww_q_9;
q_8 <= ww_q_8;
q_7 <= ww_q_7;
q_6 <= ww_q_6;
q_5 <= ww_q_5;
q_4 <= ww_q_4;
q_3 <= ww_q_3;
q_2 <= ww_q_2;
q_1 <= ww_q_1;
q_0 <= ww_q_0;
op_6 <= ww_op_6;
tx_dpr_rad : tx_dpr_radr_ct
PORT MAP (
	clock => ww_CLK20,
	aclr => ww_buf_res,
	clk_en => ww_tx_dpr_ren,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	q_15 => ww_q_15,
	q_14 => ww_q_14,
	q_13 => ww_q_13,
	q_12 => ww_q_12,
	q_11 => ww_q_11,
	q_10 => ww_q_10,
	q_9 => ww_q_9,
	q_8 => ww_q_8,
	q_7 => ww_q_7,
	q_6 => ww_q_6,
	q_5 => ww_q_5,
	q_4 => ww_q_4,
	q_3 => ww_q_3,
	q_2 => ww_q_2,
	q_1 => ww_q_1,
	q_0 => ww_q_0);

\op_6~350_I\ : apex20ke_lcell 
-- Equation(s):
-- op_6 = \op_6~353\ # !\op_1~9\ & (\op_6~349\ # \op_3~14\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AFAE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \op_6~353\,
	datab => \op_6~349\,
	datac => \op_1~9\,
	datad => \op_3~14\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_op_6);

\tx_dpr_waddr[10]~I\ : apex20ke_lcell 
-- Equation(s):
-- \tx_dpr_waddr[10]\ = DFFE(tx_dpr_wadr_local_10, GLOBAL(outclock0), !buf_res, , inst46)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_tx_dpr_wadr_local_10,
	clk => ww_CLK20,
	aclr => ww_buf_res,
	ena => ww_tx_pack_ct_up,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \tx_dpr_waddr[10]\);

\tx_dpr_waddr[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- \tx_dpr_waddr[9]\ = DFFE(tx_dpr_wadr_local_9, GLOBAL(outclock0), !buf_res, , inst46)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_tx_dpr_wadr_local_9,
	clk => ww_CLK20,
	aclr => ww_buf_res,
	ena => ww_tx_pack_ct_up,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \tx_dpr_waddr[9]\);

\tx_dpr_waddr[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- \tx_dpr_waddr[8]\ = DFFE(tx_dpr_wadr_local_8, GLOBAL(outclock0), !buf_res, , inst46)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_tx_dpr_wadr_local_8,
	clk => ww_CLK20,
	aclr => ww_buf_res,
	ena => ww_tx_pack_ct_up,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \tx_dpr_waddr[8]\);

\tx_dpr_waddr[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- \tx_dpr_waddr[7]\ = DFFE(tx_dpr_wadr_local_7, GLOBAL(outclock0), !buf_res, , inst46)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_tx_dpr_wadr_local_7,
	clk => ww_CLK20,
	aclr => ww_buf_res,
	ena => ww_tx_pack_ct_up,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \tx_dpr_waddr[7]\);

\tx_dpr_waddr[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \tx_dpr_waddr[6]\ = DFFE(tx_dpr_wadr_local_6, GLOBAL(outclock0), !buf_res, , inst46)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_tx_dpr_wadr_local_6,
	clk => ww_CLK20,
	aclr => ww_buf_res,
	ena => ww_tx_pack_ct_up,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \tx_dpr_waddr[6]\);

\tx_dpr_waddr[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \tx_dpr_waddr[5]\ = DFFE(tx_dpr_wadr_local_5, GLOBAL(outclock0), !buf_res, , inst46)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_tx_dpr_wadr_local_5,
	clk => ww_CLK20,
	aclr => ww_buf_res,
	ena => ww_tx_pack_ct_up,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \tx_dpr_waddr[5]\);

\tx_dpr_waddr[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \tx_dpr_waddr[4]\ = DFFE(tx_dpr_wadr_local_4, GLOBAL(outclock0), !buf_res, , inst46)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_tx_dpr_wadr_local_4,
	clk => ww_CLK20,
	aclr => ww_buf_res,
	ena => ww_tx_pack_ct_up,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \tx_dpr_waddr[4]\);

\tx_dpr_waddr[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \tx_dpr_waddr[3]\ = DFFE(tx_dpr_wadr_local_3, GLOBAL(outclock0), !buf_res, , inst46)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_tx_dpr_wadr_local_3,
	clk => ww_CLK20,
	aclr => ww_buf_res,
	ena => ww_tx_pack_ct_up,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \tx_dpr_waddr[3]\);

\tx_dpr_waddr[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \tx_dpr_waddr[2]\ = DFFE(tx_dpr_wadr_local_2, GLOBAL(outclock0), !buf_res, , inst46)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_tx_dpr_wadr_local_2,
	clk => ww_CLK20,
	aclr => ww_buf_res,
	ena => ww_tx_pack_ct_up,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \tx_dpr_waddr[2]\);

\tx_dpr_waddr[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \tx_dpr_waddr[1]\ = DFFE(tx_dpr_wadr_local_1, GLOBAL(outclock0), !buf_res, , inst46)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_tx_dpr_wadr_local_1,
	clk => ww_CLK20,
	aclr => ww_buf_res,
	ena => ww_tx_pack_ct_up,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \tx_dpr_waddr[1]\);

\tx_dpr_waddr[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \tx_dpr_waddr[0]\ = DFFE(tx_dpr_wadr_local_0, GLOBAL(outclock0), !buf_res, , inst46)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_tx_dpr_wadr_local_0,
	clk => ww_CLK20,
	aclr => ww_buf_res,
	ena => ww_tx_pack_ct_up,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \tx_dpr_waddr[0]\);

\op_5~1_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~1\ = \tx_dpr_waddr[0]\ $ q_0
-- \op_5~1COUT\ = CARRY(q_0 # !\tx_dpr_waddr[0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "66DD",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \tx_dpr_waddr[0]\,
	datab => ww_q_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~1\,
	cout => \op_5~1COUT\);

\op_5~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~2\ = \tx_dpr_waddr[1]\ $ q_1 $ !\op_5~1COUT\
-- \op_5~2COUT\ = CARRY(\tx_dpr_waddr[1]\ & (!\op_5~1COUT\ # !q_1) # !\tx_dpr_waddr[1]\ & !q_1 & !\op_5~1COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "692B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \tx_dpr_waddr[1]\,
	datab => ww_q_1,
	cin => \op_5~1COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~2\,
	cout => \op_5~2COUT\);

\op_5~3_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~3\ = \tx_dpr_waddr[2]\ $ q_2 $ \op_5~2COUT\
-- \op_5~3COUT\ = CARRY(\tx_dpr_waddr[2]\ & q_2 & !\op_5~2COUT\ # !\tx_dpr_waddr[2]\ & (q_2 # !\op_5~2COUT\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "964D",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \tx_dpr_waddr[2]\,
	datab => ww_q_2,
	cin => \op_5~2COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~3\,
	cout => \op_5~3COUT\);

\op_5~4_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~4\ = \tx_dpr_waddr[3]\ $ q_3 $ !\op_5~3COUT\
-- \op_5~4COUT\ = CARRY(\tx_dpr_waddr[3]\ & (!\op_5~3COUT\ # !q_3) # !\tx_dpr_waddr[3]\ & !q_3 & !\op_5~3COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "692B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \tx_dpr_waddr[3]\,
	datab => ww_q_3,
	cin => \op_5~3COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~4\,
	cout => \op_5~4COUT\);

\op_5~5_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~5\ = \tx_dpr_waddr[4]\ $ q_4 $ \op_5~4COUT\
-- \op_5~5COUT\ = CARRY(\tx_dpr_waddr[4]\ & q_4 & !\op_5~4COUT\ # !\tx_dpr_waddr[4]\ & (q_4 # !\op_5~4COUT\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "964D",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \tx_dpr_waddr[4]\,
	datab => ww_q_4,
	cin => \op_5~4COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~5\,
	cout => \op_5~5COUT\);

\op_5~6_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~6\ = \tx_dpr_waddr[5]\ $ q_5 $ !\op_5~5COUT\
-- \op_5~6COUT\ = CARRY(\tx_dpr_waddr[5]\ & (!\op_5~5COUT\ # !q_5) # !\tx_dpr_waddr[5]\ & !q_5 & !\op_5~5COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "692B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \tx_dpr_waddr[5]\,
	datab => ww_q_5,
	cin => \op_5~5COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~6\,
	cout => \op_5~6COUT\);

\op_5~7_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~7\ = q_6 $ \tx_dpr_waddr[6]\ $ \op_5~6COUT\
-- \op_5~7COUT\ = CARRY(q_6 & (!\op_5~6COUT\ # !\tx_dpr_waddr[6]\) # !q_6 & !\tx_dpr_waddr[6]\ & !\op_5~6COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "962B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_6,
	datab => \tx_dpr_waddr[6]\,
	cin => \op_5~6COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~7\,
	cout => \op_5~7COUT\);

\op_5~8_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~8\ = q_7 $ \tx_dpr_waddr[7]\ $ !\op_5~7COUT\
-- \op_5~8COUT\ = CARRY(q_7 & \tx_dpr_waddr[7]\ & !\op_5~7COUT\ # !q_7 & (\tx_dpr_waddr[7]\ # !\op_5~7COUT\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "694D",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_7,
	datab => \tx_dpr_waddr[7]\,
	cin => \op_5~7COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~8\,
	cout => \op_5~8COUT\);

\op_5~9_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~9\ = q_8 $ \tx_dpr_waddr[8]\ $ \op_5~8COUT\
-- \op_5~9COUT\ = CARRY(q_8 & (!\op_5~8COUT\ # !\tx_dpr_waddr[8]\) # !q_8 & !\tx_dpr_waddr[8]\ & !\op_5~8COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "962B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_8,
	datab => \tx_dpr_waddr[8]\,
	cin => \op_5~8COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~9\,
	cout => \op_5~9COUT\);

\op_5~10_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~10\ = q_9 $ \tx_dpr_waddr[9]\ $ !\op_5~9COUT\
-- \op_5~10COUT\ = CARRY(q_9 & \tx_dpr_waddr[9]\ & !\op_5~9COUT\ # !q_9 & (\tx_dpr_waddr[9]\ # !\op_5~9COUT\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "694D",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_9,
	datab => \tx_dpr_waddr[9]\,
	cin => \op_5~9COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~10\,
	cout => \op_5~10COUT\);

\op_5~11_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~11\ = \tx_dpr_waddr[10]\ $ q_10 $ \op_5~10COUT\
-- \op_5~11COUT\ = CARRY(\tx_dpr_waddr[10]\ & q_10 & !\op_5~10COUT\ # !\tx_dpr_waddr[10]\ & (q_10 # !\op_5~10COUT\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "964D",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \tx_dpr_waddr[10]\,
	datab => ww_q_10,
	cin => \op_5~10COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~11\,
	cout => \op_5~11COUT\);

\op_6~344_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_6~344\ = \op_5~8\ # \op_5~7\ # \op_5~2\ & \op_5~1\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFEC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \op_5~2\,
	datab => \op_5~8\,
	datac => \op_5~1\,
	datad => \op_5~7\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_6~344\);

\op_6~340_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_6~340\ = \op_6~344\ # \op_5~4\ # \op_5~5\ # \op_5~6\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \op_6~344\,
	datab => \op_5~4\,
	datac => \op_5~5\,
	datad => \op_5~6\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_6~340\);

\tx_dpr_waddr[12]~I\ : apex20ke_lcell 
-- Equation(s):
-- \tx_dpr_waddr[12]\ = DFFE(tx_dpr_wadr_local_12, GLOBAL(outclock0), !buf_res, , inst46)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_tx_dpr_wadr_local_12,
	clk => ww_CLK20,
	aclr => ww_buf_res,
	ena => ww_tx_pack_ct_up,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \tx_dpr_waddr[12]\);

\tx_dpr_waddr[11]~I\ : apex20ke_lcell 
-- Equation(s):
-- \tx_dpr_waddr[11]\ = DFFE(tx_dpr_wadr_local_11, GLOBAL(outclock0), !buf_res, , inst46)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_tx_dpr_wadr_local_11,
	clk => ww_CLK20,
	aclr => ww_buf_res,
	ena => ww_tx_pack_ct_up,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \tx_dpr_waddr[11]\);

\op_5~12_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~12\ = \tx_dpr_waddr[11]\ $ q_11 $ !\op_5~11COUT\
-- \op_5~12COUT\ = CARRY(\tx_dpr_waddr[11]\ & (!\op_5~11COUT\ # !q_11) # !\tx_dpr_waddr[11]\ & !q_11 & !\op_5~11COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "692B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \tx_dpr_waddr[11]\,
	datab => ww_q_11,
	cin => \op_5~11COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~12\,
	cout => \op_5~12COUT\);

\op_5~13_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~13\ = \tx_dpr_waddr[12]\ $ \op_5~12COUT\ $ q_12

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C33C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \tx_dpr_waddr[12]\,
	datad => ww_q_12,
	cin => \op_5~12COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~13\);

\op_6~336_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_6~336\ = \op_5~13\ # \op_5~9\ & (\op_6~340\ # \op_5~3\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FECC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \op_6~340\,
	datab => \op_5~13\,
	datac => \op_5~3\,
	datad => \op_5~9\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_6~336\);

\tx_dpr_waddr[13]~I\ : apex20ke_lcell 
-- Equation(s):
-- \tx_dpr_waddr[13]\ = DFFE(tx_dpr_wadr_local_13, GLOBAL(outclock0), !buf_res, , inst46)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_tx_dpr_wadr_local_13,
	clk => ww_CLK20,
	aclr => ww_buf_res,
	ena => ww_tx_pack_ct_up,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \tx_dpr_waddr[13]\);

\tx_dpr_waddr[14]~I\ : apex20ke_lcell 
-- Equation(s):
-- \tx_dpr_waddr[14]\ = DFFE(tx_dpr_wadr_local_14, GLOBAL(outclock0), !buf_res, , inst46)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_tx_dpr_wadr_local_14,
	clk => ww_CLK20,
	aclr => ww_buf_res,
	ena => ww_tx_pack_ct_up,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \tx_dpr_waddr[14]\);

\tx_dpr_waddr[15]~I\ : apex20ke_lcell 
-- Equation(s):
-- \tx_dpr_waddr[15]\ = DFFE(tx_dpr_wadr_local_15, GLOBAL(outclock0), !buf_res, , inst46)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_tx_dpr_wadr_local_15,
	clk => ww_CLK20,
	aclr => ww_buf_res,
	ena => ww_tx_pack_ct_up,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \tx_dpr_waddr[15]\);

\op_1~152_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_1~152\ = q_14 & \tx_dpr_waddr[14]\ & (q_15 $ !\tx_dpr_waddr[15]\) # !q_14 & !\tx_dpr_waddr[14]\ & (q_15 $ !\tx_dpr_waddr[15]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "9009",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_14,
	datab => \tx_dpr_waddr[14]\,
	datac => ww_q_15,
	datad => \tx_dpr_waddr[15]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_1~152\);

\op_1~151_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_1~151\ = q_15 & (q_14 & !\tx_dpr_waddr[14]\ # !\tx_dpr_waddr[15]\) # !q_15 & q_14 & !\tx_dpr_waddr[14]\ & !\tx_dpr_waddr[15]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "20F2",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_14,
	datab => \tx_dpr_waddr[14]\,
	datac => ww_q_15,
	datad => \tx_dpr_waddr[15]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_1~151\);

\op_1~9_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_1~9\ = \op_1~151\ # !\tx_dpr_waddr[13]\ & \op_1~152\ & q_13
-- \op_1~154\ = \op_1~151\ # !\tx_dpr_waddr[13]\ & \op_1~152\ & q_13

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF40",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \tx_dpr_waddr[13]\,
	datab => \op_1~152\,
	datac => ww_q_13,
	datad => \op_1~151\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_1~9\,
	cascout => \op_1~154\);

\op_6~353_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_6~353\ = (\op_5~11\ # \op_6~336\ # \op_5~12\ # \op_5~10\) & CASCADE(\op_1~154\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \op_5~11\,
	datab => \op_6~336\,
	datac => \op_5~12\,
	datad => \op_5~10\,
	cascin => \op_1~154\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_6~353\);

\op_2~1_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_2~1\ = q_0 $ \tx_dpr_waddr[0]\
-- \op_2~1COUT\ = CARRY(\tx_dpr_waddr[0]\ # !q_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "66DD",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_0,
	datab => \tx_dpr_waddr[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_2~1\,
	cout => \op_2~1COUT\);

\op_2~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_2~2\ = q_1 $ \tx_dpr_waddr[1]\ $ !\op_2~1COUT\
-- \op_2~2COUT\ = CARRY(q_1 & (!\op_2~1COUT\ # !\tx_dpr_waddr[1]\) # !q_1 & !\tx_dpr_waddr[1]\ & !\op_2~1COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "692B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_1,
	datab => \tx_dpr_waddr[1]\,
	cin => \op_2~1COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_2~2\,
	cout => \op_2~2COUT\);

\op_2~3_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_2~3\ = q_2 $ \tx_dpr_waddr[2]\ $ \op_2~2COUT\
-- \op_2~3COUT\ = CARRY(q_2 & \tx_dpr_waddr[2]\ & !\op_2~2COUT\ # !q_2 & (\tx_dpr_waddr[2]\ # !\op_2~2COUT\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "964D",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_2,
	datab => \tx_dpr_waddr[2]\,
	cin => \op_2~2COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_2~3\,
	cout => \op_2~3COUT\);

\op_2~4_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_2~4\ = \tx_dpr_waddr[3]\ $ q_3 $ !\op_2~3COUT\
-- \op_2~4COUT\ = CARRY(\tx_dpr_waddr[3]\ & q_3 & !\op_2~3COUT\ # !\tx_dpr_waddr[3]\ & (q_3 # !\op_2~3COUT\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "694D",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \tx_dpr_waddr[3]\,
	datab => ww_q_3,
	cin => \op_2~3COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_2~4\,
	cout => \op_2~4COUT\);

\op_2~5_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_2~5\ = \tx_dpr_waddr[4]\ $ q_4 $ \op_2~4COUT\
-- \op_2~5COUT\ = CARRY(\tx_dpr_waddr[4]\ & (!\op_2~4COUT\ # !q_4) # !\tx_dpr_waddr[4]\ & !q_4 & !\op_2~4COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "962B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \tx_dpr_waddr[4]\,
	datab => ww_q_4,
	cin => \op_2~4COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_2~5\,
	cout => \op_2~5COUT\);

\op_2~6_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_2~6\ = q_5 $ \tx_dpr_waddr[5]\ $ !\op_2~5COUT\
-- \op_2~6COUT\ = CARRY(q_5 & (!\op_2~5COUT\ # !\tx_dpr_waddr[5]\) # !q_5 & !\tx_dpr_waddr[5]\ & !\op_2~5COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "692B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_5,
	datab => \tx_dpr_waddr[5]\,
	cin => \op_2~5COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_2~6\,
	cout => \op_2~6COUT\);

\op_2~7_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_2~7\ = q_6 $ \tx_dpr_waddr[6]\ $ \op_2~6COUT\
-- \op_2~7COUT\ = CARRY(q_6 & \tx_dpr_waddr[6]\ & !\op_2~6COUT\ # !q_6 & (\tx_dpr_waddr[6]\ # !\op_2~6COUT\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "964D",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_6,
	datab => \tx_dpr_waddr[6]\,
	cin => \op_2~6COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_2~7\,
	cout => \op_2~7COUT\);

\op_2~8_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_2~8\ = q_7 $ \tx_dpr_waddr[7]\ $ !\op_2~7COUT\
-- \op_2~8COUT\ = CARRY(q_7 & (!\op_2~7COUT\ # !\tx_dpr_waddr[7]\) # !q_7 & !\tx_dpr_waddr[7]\ & !\op_2~7COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "692B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_7,
	datab => \tx_dpr_waddr[7]\,
	cin => \op_2~7COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_2~8\,
	cout => \op_2~8COUT\);

\op_2~9_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_2~9\ = \tx_dpr_waddr[8]\ $ q_8 $ \op_2~8COUT\
-- \op_2~9COUT\ = CARRY(\tx_dpr_waddr[8]\ & (!\op_2~8COUT\ # !q_8) # !\tx_dpr_waddr[8]\ & !q_8 & !\op_2~8COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "962B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \tx_dpr_waddr[8]\,
	datab => ww_q_8,
	cin => \op_2~8COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_2~9\,
	cout => \op_2~9COUT\);

\op_2~10_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_2~10\ = q_9 $ \tx_dpr_waddr[9]\ $ !\op_2~9COUT\
-- \op_2~10COUT\ = CARRY(q_9 & (!\op_2~9COUT\ # !\tx_dpr_waddr[9]\) # !q_9 & !\tx_dpr_waddr[9]\ & !\op_2~9COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "692B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_9,
	datab => \tx_dpr_waddr[9]\,
	cin => \op_2~9COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_2~10\,
	cout => \op_2~10COUT\);

\op_2~11_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_2~11\ = q_10 $ \tx_dpr_waddr[10]\ $ \op_2~10COUT\
-- \op_2~11COUT\ = CARRY(q_10 & \tx_dpr_waddr[10]\ & !\op_2~10COUT\ # !q_10 & (\tx_dpr_waddr[10]\ # !\op_2~10COUT\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "964D",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_10,
	datab => \tx_dpr_waddr[10]\,
	cin => \op_2~10COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_2~11\,
	cout => \op_2~11COUT\);

\op_2~12_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_2~12\ = q_11 $ \tx_dpr_waddr[11]\ $ !\op_2~11COUT\
-- \op_2~12COUT\ = CARRY(q_11 & (!\op_2~11COUT\ # !\tx_dpr_waddr[11]\) # !q_11 & !\tx_dpr_waddr[11]\ & !\op_2~11COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "692B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_11,
	datab => \tx_dpr_waddr[11]\,
	cin => \op_2~11COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_2~12\,
	cout => \op_2~12COUT\);

\op_3~1_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_3~1\ = \op_2~1\
-- \op_3~1COUT\ = CARRY(!\op_2~1\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "CC33",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \op_2~1\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_3~1\,
	cout => \op_3~1COUT\);

\op_3~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_3~2\ = \op_2~2\ $ !\op_3~1COUT\
-- \op_3~2COUT\ = CARRY(\op_2~2\ # !\op_3~1COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C3CF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \op_2~2\,
	cin => \op_3~1COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_3~2\,
	cout => \op_3~2COUT\);

\op_3~3_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_3~3\ = \op_2~3\ $ \op_3~2COUT\
-- \op_3~3COUT\ = CARRY(!\op_2~3\ & !\op_3~2COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C03",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \op_2~3\,
	cin => \op_3~2COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_3~3\,
	cout => \op_3~3COUT\);

\op_3~4_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_3~4\ = \op_2~4\ $ !\op_3~3COUT\
-- \op_3~4COUT\ = CARRY(\op_2~4\ # !\op_3~3COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C3CF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \op_2~4\,
	cin => \op_3~3COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_3~4\,
	cout => \op_3~4COUT\);

\op_3~5_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_3~5\ = \op_2~5\ $ \op_3~4COUT\
-- \op_3~5COUT\ = CARRY(!\op_2~5\ & !\op_3~4COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C03",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \op_2~5\,
	cin => \op_3~4COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_3~5\,
	cout => \op_3~5COUT\);

\op_3~6_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_3~6\ = \op_2~6\ $ !\op_3~5COUT\
-- \op_3~6COUT\ = CARRY(\op_2~6\ # !\op_3~5COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C3CF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \op_2~6\,
	cin => \op_3~5COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_3~6\,
	cout => \op_3~6COUT\);

\op_3~7_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_3~7\ = \op_2~7\ $ \op_3~6COUT\
-- \op_3~7COUT\ = CARRY(!\op_2~7\ & !\op_3~6COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C03",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \op_2~7\,
	cin => \op_3~6COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_3~7\,
	cout => \op_3~7COUT\);

\op_3~8_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_3~8\ = \op_2~8\ $ !\op_3~7COUT\
-- \op_3~8COUT\ = CARRY(\op_2~8\ # !\op_3~7COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C3CF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \op_2~8\,
	cin => \op_3~7COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_3~8\,
	cout => \op_3~8COUT\);

\op_3~9_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_3~9\ = \op_2~9\ $ \op_3~8COUT\
-- \op_3~9COUT\ = CARRY(!\op_2~9\ & !\op_3~8COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C03",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \op_2~9\,
	cin => \op_3~8COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_3~9\,
	cout => \op_3~9COUT\);

\op_3~10_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_3~10\ = \op_2~10\ $ !\op_3~9COUT\
-- \op_3~10COUT\ = CARRY(\op_2~10\ # !\op_3~9COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C3CF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \op_2~10\,
	cin => \op_3~9COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_3~10\,
	cout => \op_3~10COUT\);

\op_3~11_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_3~11\ = \op_2~11\ $ \op_3~10COUT\
-- \op_3~11COUT\ = CARRY(!\op_2~11\ & !\op_3~10COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C03",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \op_2~11\,
	cin => \op_3~10COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_3~11\,
	cout => \op_3~11COUT\);

\op_3~12_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_3~12\ = \op_2~12\ $ !\op_3~11COUT\
-- \op_3~12COUT\ = CARRY(\op_2~12\ # !\op_3~11COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C3CF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \op_2~12\,
	cin => \op_3~11COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_3~12\,
	cout => \op_3~12COUT\);

\op_6~345_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_6~345\ = \op_3~3\ # \op_3~4\ # \op_3~2\ & \op_3~1\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEFA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \op_3~3\,
	datab => \op_3~2\,
	datac => \op_3~4\,
	datad => \op_3~1\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_6~345\);

\op_6~346_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_6~346\ = \op_3~6\ # \op_3~8\ # \op_3~5\ # \op_3~7\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \op_3~6\,
	datab => \op_3~8\,
	datac => \op_3~5\,
	datad => \op_3~7\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_6~346\);

\op_6~347_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_6~347\ = \op_3~9\ & (\op_6~345\ # \op_6~346\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E0E0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \op_6~345\,
	datab => \op_6~346\,
	datac => \op_3~9\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_6~347\);

\op_2~13_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_2~13\ = q_12 $ \tx_dpr_waddr[12]\ $ \op_2~12COUT\
-- \op_2~13COUT\ = CARRY(q_12 & \tx_dpr_waddr[12]\ & !\op_2~12COUT\ # !q_12 & (\tx_dpr_waddr[12]\ # !\op_2~12COUT\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "964D",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_12,
	datab => \tx_dpr_waddr[12]\,
	cin => \op_2~12COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_2~13\,
	cout => \op_2~13COUT\);

\op_3~13_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_3~13\ = \op_2~13\ $ \op_3~12COUT\
-- \op_3~13COUT\ = CARRY(!\op_2~13\ & !\op_3~12COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C03",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \op_2~13\,
	cin => \op_3~12COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_3~13\,
	cout => \op_3~13COUT\);

\op_6~348_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_6~348\ = \op_3~10\ # \op_3~11\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FAFA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \op_3~10\,
	datac => \op_3~11\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_6~348\);

\op_6~349_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_6~349\ = \op_3~12\ # \op_6~347\ # \op_3~13\ # \op_6~348\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \op_3~12\,
	datab => \op_6~347\,
	datac => \op_3~13\,
	datad => \op_6~348\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_6~349\);

\op_2~14_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_2~14\ = \tx_dpr_waddr[13]\ $ q_13 $ !\op_2~13COUT\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6969",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \tx_dpr_waddr[13]\,
	datab => ww_q_13,
	cin => \op_2~13COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_2~14\);

\op_3~14_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_3~14\ = \op_3~13COUT\ $ \op_2~14\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datad => \op_2~14\,
	cin => \op_3~13COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_3~14\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	DC_Tx_chan_ap IS
    PORT (
	CLK20 : IN std_logic;
	sload_path_47 : IN std_logic;
	sload_path_46 : IN std_logic;
	sload_path_45 : IN std_logic;
	sload_path_44 : IN std_logic;
	sload_path_43 : IN std_logic;
	sload_path_42 : IN std_logic;
	sload_path_41 : IN std_logic;
	sload_path_40 : IN std_logic;
	sload_path_39 : IN std_logic;
	sload_path_38 : IN std_logic;
	sload_path_37 : IN std_logic;
	sload_path_36 : IN std_logic;
	sload_path_35 : IN std_logic;
	sload_path_34 : IN std_logic;
	sload_path_33 : IN std_logic;
	sload_path_32 : IN std_logic;
	sload_path_31 : IN std_logic;
	sload_path_30 : IN std_logic;
	sload_path_29 : IN std_logic;
	sload_path_28 : IN std_logic;
	sload_path_27 : IN std_logic;
	sload_path_26 : IN std_logic;
	sload_path_25 : IN std_logic;
	sload_path_24 : IN std_logic;
	sload_path_23 : IN std_logic;
	sload_path_22 : IN std_logic;
	sload_path_21 : IN std_logic;
	sload_path_20 : IN std_logic;
	sload_path_19 : IN std_logic;
	sload_path_18 : IN std_logic;
	sload_path_17 : IN std_logic;
	sload_path_16 : IN std_logic;
	sload_path_15 : IN std_logic;
	sload_path_14 : IN std_logic;
	sload_path_13 : IN std_logic;
	sload_path_12 : IN std_logic;
	sload_path_11 : IN std_logic;
	sload_path_10 : IN std_logic;
	sload_path_9 : IN std_logic;
	sload_path_8 : IN std_logic;
	sload_path_7 : IN std_logic;
	sload_path_6 : IN std_logic;
	sload_path_5 : IN std_logic;
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	portadataout_0 : IN std_logic;
	portadataout_1 : IN std_logic;
	portadataout_2 : IN std_logic;
	portadataout_3 : IN std_logic;
	portadataout_4 : IN std_logic;
	portadataout_5 : IN std_logic;
	portadataout_6 : IN std_logic;
	portadataout_7 : IN std_logic;
	portadataout_8 : IN std_logic;
	portadataout_9 : IN std_logic;
	portadataout_10 : IN std_logic;
	portadataout_11 : IN std_logic;
	portadataout_12 : IN std_logic;
	portadataout_13 : IN std_logic;
	portadataout_14 : IN std_logic;
	portadataout_15 : IN std_logic;
	portadataout_16 : IN std_logic;
	portadataout_17 : IN std_logic;
	portadataout_18 : IN std_logic;
	portadataout_19 : IN std_logic;
	portadataout_20 : IN std_logic;
	portadataout_21 : IN std_logic;
	portadataout_22 : IN std_logic;
	portadataout_23 : IN std_logic;
	portadataout_24 : IN std_logic;
	portadataout_25 : IN std_logic;
	portadataout_26 : IN std_logic;
	portadataout_27 : IN std_logic;
	portadataout_28 : IN std_logic;
	portadataout_29 : IN std_logic;
	portadataout_30 : IN std_logic;
	portadataout_31 : IN std_logic;
	buf_res : IN std_logic;
	RST : IN std_logic;
	h_pulse : IN std_logic;
	l_pulse : IN std_logic;
	sreg : IN std_logic;
	tx_dpr_wadr_local_0 : IN std_logic;
	tx_dpr_wadr_local_1 : IN std_logic;
	send_data : IN std_logic;
	send_ctrl : IN std_logic;
	tx_dpr_wadr_local_2 : IN std_logic;
	tx_dpr_wadr_local_3 : IN std_logic;
	tx_dpr_wadr_local_4 : IN std_logic;
	tx_dpr_wadr_local_5 : IN std_logic;
	tx_dpr_wadr_local_6 : IN std_logic;
	tx_dpr_wadr_local_7 : IN std_logic;
	tx_dpr_wadr_local_8 : IN std_logic;
	tx_dpr_wadr_local_9 : IN std_logic;
	tx_dpr_wadr_local_10 : IN std_logic;
	tx_dpr_wadr_local_11 : IN std_logic;
	tx_dpr_wadr_local_12 : IN std_logic;
	tx_dpr_wadr_local_13 : IN std_logic;
	tx_dpr_wadr_local_14 : IN std_logic;
	tx_dpr_wadr_local_15 : IN std_logic;
	sreg1 : IN std_logic;
	sreg2 : IN std_logic;
	tx_pack_rdy : IN std_logic;
	send_ctrl1 : IN std_logic;
	dom_id_48 : IN std_logic;
	b_non_empty : IN std_logic;
	q_81 : IN std_logic;
	q_01 : IN std_logic;
	cmd_snd0 : IN std_logic;
	dom_id_0 : IN std_logic;
	q_91 : IN std_logic;
	q_13 : IN std_logic;
	cmd_snd1 : IN std_logic;
	dom_id_1 : IN std_logic;
	q_21 : IN std_logic;
	dom_id_2 : IN std_logic;
	tx_time_lat : IN std_logic;
	q_31 : IN std_logic;
	dom_id_3 : IN std_logic;
	q_41 : IN std_logic;
	dom_id_4 : IN std_logic;
	cmd_snd3 : IN std_logic;
	q_51 : IN std_logic;
	dom_id_5 : IN std_logic;
	q_61 : IN std_logic;
	dom_id_6 : IN std_logic;
	q_71 : IN std_logic;
	dom_id_7 : IN std_logic;
	dom_id_8 : IN std_logic;
	dom_id_9 : IN std_logic;
	dom_id_10 : IN std_logic;
	dom_id_11 : IN std_logic;
	dom_id_12 : IN std_logic;
	dom_id_13 : IN std_logic;
	dom_id_14 : IN std_logic;
	dom_id_15 : IN std_logic;
	dom_id_16 : IN std_logic;
	dom_id_17 : IN std_logic;
	dom_id_18 : IN std_logic;
	dom_id_19 : IN std_logic;
	dom_id_20 : IN std_logic;
	dom_id_21 : IN std_logic;
	dom_id_22 : IN std_logic;
	dom_id_23 : IN std_logic;
	dom_id_24 : IN std_logic;
	dom_id_25 : IN std_logic;
	dom_id_26 : IN std_logic;
	dom_id_27 : IN std_logic;
	dom_id_28 : IN std_logic;
	dom_id_29 : IN std_logic;
	dom_id_30 : IN std_logic;
	dom_id_31 : IN std_logic;
	dom_id_32 : IN std_logic;
	dom_id_33 : IN std_logic;
	dom_id_34 : IN std_logic;
	dom_id_35 : IN std_logic;
	dom_id_36 : IN std_logic;
	dom_id_37 : IN std_logic;
	dom_id_38 : IN std_logic;
	dom_id_39 : IN std_logic;
	dom_id_40 : IN std_logic;
	dom_id_41 : IN std_logic;
	dom_id_42 : IN std_logic;
	dom_id_43 : IN std_logic;
	dom_id_44 : IN std_logic;
	dom_id_45 : IN std_logic;
	dom_id_46 : IN std_logic;
	dom_id_47 : IN std_logic;
	GND_port : IN std_logic;
	A_nB : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q_12 : OUT std_logic;
	q_11 : OUT std_logic;
	q_10 : OUT std_logic;
	q_9 : OUT std_logic;
	q_8 : OUT std_logic;
	q_7 : OUT std_logic;
	q_6 : OUT std_logic;
	q_5 : OUT std_logic;
	q_4 : OUT std_logic;
	q_3 : OUT std_logic;
	q_2 : OUT std_logic;
	q_1 : OUT std_logic;
	q_0 : OUT std_logic;
	pre_out_14 : OUT std_logic;
	pre_out_15 : OUT std_logic;
	inst23_7 : OUT std_logic;
	inst23_6 : OUT std_logic;
	inst23_0 : OUT std_logic;
	op_6 : OUT std_logic;
	inst16_0 : OUT std_logic;
	msg_sent : OUT std_logic;
	inst50 : OUT std_logic;
	inst16_1 : OUT std_logic;
	inst16_2 : OUT std_logic;
	inst16_3 : OUT std_logic;
	inst16_4 : OUT std_logic;
	inst16_5 : OUT std_logic;
	inst16_6 : OUT std_logic;
	inst16_7 : OUT std_logic;
	inst16_8 : OUT std_logic;
	inst16_9 : OUT std_logic;
	inst16_10 : OUT std_logic;
	inst16_11 : OUT std_logic;
	inst16_12 : OUT std_logic;
	inst16_13 : OUT std_logic;
	inst16_14 : OUT std_logic;
	inst16_15 : OUT std_logic;
	\_\ : OUT std_logic;
	inst9 : OUT std_logic;
	sreg3 : OUT std_logic;
	or_node_6_0 : OUT std_logic
	);
END DC_Tx_chan_ap;

ARCHITECTURE structure OF DC_Tx_chan_ap IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK20 : std_logic;
SIGNAL ww_sload_path_47 : std_logic;
SIGNAL ww_sload_path_46 : std_logic;
SIGNAL ww_sload_path_45 : std_logic;
SIGNAL ww_sload_path_44 : std_logic;
SIGNAL ww_sload_path_43 : std_logic;
SIGNAL ww_sload_path_42 : std_logic;
SIGNAL ww_sload_path_41 : std_logic;
SIGNAL ww_sload_path_40 : std_logic;
SIGNAL ww_sload_path_39 : std_logic;
SIGNAL ww_sload_path_38 : std_logic;
SIGNAL ww_sload_path_37 : std_logic;
SIGNAL ww_sload_path_36 : std_logic;
SIGNAL ww_sload_path_35 : std_logic;
SIGNAL ww_sload_path_34 : std_logic;
SIGNAL ww_sload_path_33 : std_logic;
SIGNAL ww_sload_path_32 : std_logic;
SIGNAL ww_sload_path_31 : std_logic;
SIGNAL ww_sload_path_30 : std_logic;
SIGNAL ww_sload_path_29 : std_logic;
SIGNAL ww_sload_path_28 : std_logic;
SIGNAL ww_sload_path_27 : std_logic;
SIGNAL ww_sload_path_26 : std_logic;
SIGNAL ww_sload_path_25 : std_logic;
SIGNAL ww_sload_path_24 : std_logic;
SIGNAL ww_sload_path_23 : std_logic;
SIGNAL ww_sload_path_22 : std_logic;
SIGNAL ww_sload_path_21 : std_logic;
SIGNAL ww_sload_path_20 : std_logic;
SIGNAL ww_sload_path_19 : std_logic;
SIGNAL ww_sload_path_18 : std_logic;
SIGNAL ww_sload_path_17 : std_logic;
SIGNAL ww_sload_path_16 : std_logic;
SIGNAL ww_sload_path_15 : std_logic;
SIGNAL ww_sload_path_14 : std_logic;
SIGNAL ww_sload_path_13 : std_logic;
SIGNAL ww_sload_path_12 : std_logic;
SIGNAL ww_sload_path_11 : std_logic;
SIGNAL ww_sload_path_10 : std_logic;
SIGNAL ww_sload_path_9 : std_logic;
SIGNAL ww_sload_path_8 : std_logic;
SIGNAL ww_sload_path_7 : std_logic;
SIGNAL ww_sload_path_6 : std_logic;
SIGNAL ww_sload_path_5 : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_portadataout_0 : std_logic;
SIGNAL ww_portadataout_1 : std_logic;
SIGNAL ww_portadataout_2 : std_logic;
SIGNAL ww_portadataout_3 : std_logic;
SIGNAL ww_portadataout_4 : std_logic;
SIGNAL ww_portadataout_5 : std_logic;
SIGNAL ww_portadataout_6 : std_logic;
SIGNAL ww_portadataout_7 : std_logic;
SIGNAL ww_portadataout_8 : std_logic;
SIGNAL ww_portadataout_9 : std_logic;
SIGNAL ww_portadataout_10 : std_logic;
SIGNAL ww_portadataout_11 : std_logic;
SIGNAL ww_portadataout_12 : std_logic;
SIGNAL ww_portadataout_13 : std_logic;
SIGNAL ww_portadataout_14 : std_logic;
SIGNAL ww_portadataout_15 : std_logic;
SIGNAL ww_portadataout_16 : std_logic;
SIGNAL ww_portadataout_17 : std_logic;
SIGNAL ww_portadataout_18 : std_logic;
SIGNAL ww_portadataout_19 : std_logic;
SIGNAL ww_portadataout_20 : std_logic;
SIGNAL ww_portadataout_21 : std_logic;
SIGNAL ww_portadataout_22 : std_logic;
SIGNAL ww_portadataout_23 : std_logic;
SIGNAL ww_portadataout_24 : std_logic;
SIGNAL ww_portadataout_25 : std_logic;
SIGNAL ww_portadataout_26 : std_logic;
SIGNAL ww_portadataout_27 : std_logic;
SIGNAL ww_portadataout_28 : std_logic;
SIGNAL ww_portadataout_29 : std_logic;
SIGNAL ww_portadataout_30 : std_logic;
SIGNAL ww_portadataout_31 : std_logic;
SIGNAL ww_buf_res : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_h_pulse : std_logic;
SIGNAL ww_l_pulse : std_logic;
SIGNAL ww_sreg : std_logic;
SIGNAL ww_tx_dpr_wadr_local_0 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_1 : std_logic;
SIGNAL ww_send_data : std_logic;
SIGNAL ww_send_ctrl : std_logic;
SIGNAL ww_tx_dpr_wadr_local_2 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_3 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_4 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_5 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_6 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_7 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_8 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_9 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_10 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_11 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_12 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_13 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_14 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_15 : std_logic;
SIGNAL ww_sreg1 : std_logic;
SIGNAL ww_sreg2 : std_logic;
SIGNAL ww_tx_pack_rdy : std_logic;
SIGNAL ww_send_ctrl1 : std_logic;
SIGNAL ww_dom_id_48 : std_logic;
SIGNAL ww_b_non_empty : std_logic;
SIGNAL ww_q_81 : std_logic;
SIGNAL ww_q_01 : std_logic;
SIGNAL ww_cmd_snd0 : std_logic;
SIGNAL ww_dom_id_0 : std_logic;
SIGNAL ww_q_91 : std_logic;
SIGNAL ww_q_13 : std_logic;
SIGNAL ww_cmd_snd1 : std_logic;
SIGNAL ww_dom_id_1 : std_logic;
SIGNAL ww_q_21 : std_logic;
SIGNAL ww_dom_id_2 : std_logic;
SIGNAL ww_tx_time_lat : std_logic;
SIGNAL ww_q_31 : std_logic;
SIGNAL ww_dom_id_3 : std_logic;
SIGNAL ww_q_41 : std_logic;
SIGNAL ww_dom_id_4 : std_logic;
SIGNAL ww_cmd_snd3 : std_logic;
SIGNAL ww_q_51 : std_logic;
SIGNAL ww_dom_id_5 : std_logic;
SIGNAL ww_q_61 : std_logic;
SIGNAL ww_dom_id_6 : std_logic;
SIGNAL ww_q_71 : std_logic;
SIGNAL ww_dom_id_7 : std_logic;
SIGNAL ww_dom_id_8 : std_logic;
SIGNAL ww_dom_id_9 : std_logic;
SIGNAL ww_dom_id_10 : std_logic;
SIGNAL ww_dom_id_11 : std_logic;
SIGNAL ww_dom_id_12 : std_logic;
SIGNAL ww_dom_id_13 : std_logic;
SIGNAL ww_dom_id_14 : std_logic;
SIGNAL ww_dom_id_15 : std_logic;
SIGNAL ww_dom_id_16 : std_logic;
SIGNAL ww_dom_id_17 : std_logic;
SIGNAL ww_dom_id_18 : std_logic;
SIGNAL ww_dom_id_19 : std_logic;
SIGNAL ww_dom_id_20 : std_logic;
SIGNAL ww_dom_id_21 : std_logic;
SIGNAL ww_dom_id_22 : std_logic;
SIGNAL ww_dom_id_23 : std_logic;
SIGNAL ww_dom_id_24 : std_logic;
SIGNAL ww_dom_id_25 : std_logic;
SIGNAL ww_dom_id_26 : std_logic;
SIGNAL ww_dom_id_27 : std_logic;
SIGNAL ww_dom_id_28 : std_logic;
SIGNAL ww_dom_id_29 : std_logic;
SIGNAL ww_dom_id_30 : std_logic;
SIGNAL ww_dom_id_31 : std_logic;
SIGNAL ww_dom_id_32 : std_logic;
SIGNAL ww_dom_id_33 : std_logic;
SIGNAL ww_dom_id_34 : std_logic;
SIGNAL ww_dom_id_35 : std_logic;
SIGNAL ww_dom_id_36 : std_logic;
SIGNAL ww_dom_id_37 : std_logic;
SIGNAL ww_dom_id_38 : std_logic;
SIGNAL ww_dom_id_39 : std_logic;
SIGNAL ww_dom_id_40 : std_logic;
SIGNAL ww_dom_id_41 : std_logic;
SIGNAL ww_dom_id_42 : std_logic;
SIGNAL ww_dom_id_43 : std_logic;
SIGNAL ww_dom_id_44 : std_logic;
SIGNAL ww_dom_id_45 : std_logic;
SIGNAL ww_dom_id_46 : std_logic;
SIGNAL ww_dom_id_47 : std_logic;
SIGNAL ww_GND_port : std_logic;
SIGNAL ww_A_nB : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_q_12 : std_logic;
SIGNAL ww_q_11 : std_logic;
SIGNAL ww_q_10 : std_logic;
SIGNAL ww_q_9 : std_logic;
SIGNAL ww_q_8 : std_logic;
SIGNAL ww_q_7 : std_logic;
SIGNAL ww_q_6 : std_logic;
SIGNAL ww_q_5 : std_logic;
SIGNAL ww_q_4 : std_logic;
SIGNAL ww_q_3 : std_logic;
SIGNAL ww_q_2 : std_logic;
SIGNAL ww_q_1 : std_logic;
SIGNAL ww_q_0 : std_logic;
SIGNAL ww_pre_out_14 : std_logic;
SIGNAL ww_pre_out_15 : std_logic;
SIGNAL ww_inst23_7 : std_logic;
SIGNAL ww_inst23_6 : std_logic;
SIGNAL ww_inst23_0 : std_logic;
SIGNAL ww_op_6 : std_logic;
SIGNAL ww_inst16_0 : std_logic;
SIGNAL ww_msg_sent : std_logic;
SIGNAL ww_inst50 : std_logic;
SIGNAL ww_inst16_1 : std_logic;
SIGNAL ww_inst16_2 : std_logic;
SIGNAL ww_inst16_3 : std_logic;
SIGNAL ww_inst16_4 : std_logic;
SIGNAL ww_inst16_5 : std_logic;
SIGNAL ww_inst16_6 : std_logic;
SIGNAL ww_inst16_7 : std_logic;
SIGNAL ww_inst16_8 : std_logic;
SIGNAL ww_inst16_9 : std_logic;
SIGNAL ww_inst16_10 : std_logic;
SIGNAL ww_inst16_11 : std_logic;
SIGNAL ww_inst16_12 : std_logic;
SIGNAL ww_inst16_13 : std_logic;
SIGNAL ww_inst16_14 : std_logic;
SIGNAL ww_inst16_15 : std_logic;
SIGNAL \ww_\ : std_logic;
SIGNAL ww_inst9 : std_logic;
SIGNAL ww_sreg3 : std_logic;
SIGNAL ww_or_node_6_0 : std_logic;
SIGNAL \wysi_counter|q[15]\ : std_logic;
SIGNAL \wysi_counter|q[14]\ : std_logic;
SIGNAL \wysi_counter|q[13]\ : std_logic;
SIGNAL \wysi_counter|sload_path[0]\ : std_logic;
SIGNAL \wysi_counter|pre_out[1]\ : std_logic;
SIGNAL \wysi_counter|pre_out[2]\ : std_logic;
SIGNAL \wysi_counter|pre_out[3]\ : std_logic;
SIGNAL \wysi_counter|pre_out[4]\ : std_logic;
SIGNAL \wysi_counter|pre_out[5]\ : std_logic;
SIGNAL \wysi_counter|pre_out[6]\ : std_logic;
SIGNAL \wysi_counter|pre_out[7]\ : std_logic;
SIGNAL \wysi_counter|pre_out[8]\ : std_logic;
SIGNAL \wysi_counter|pre_out[9]\ : std_logic;
SIGNAL \wysi_counter|pre_out[10]\ : std_logic;
SIGNAL \wysi_counter|pre_out[11]\ : std_logic;
SIGNAL \wysi_counter|pre_out[12]\ : std_logic;
SIGNAL \wysi_counter|pre_out[13]\ : std_logic;
SIGNAL \wysi_counter|sload_path[4]\ : std_logic;
SIGNAL \wysi_counter|sload_path[3]\ : std_logic;
SIGNAL \wysi_counter|sload_path[2]\ : std_logic;
SIGNAL \wysi_counter|sload_path[1]\ : std_logic;
SIGNAL \inst15|dac_d[6]~675\ : std_logic;
SIGNAL \lpm_shiftreg_component|dffs[0]\ : std_logic;
SIGNAL \inst15|dac_d[0]~678\ : std_logic;
SIGNAL \inst11|dpr_ren~reg\ : std_logic;
SIGNAL \inst|txshld~reg\ : std_logic;
SIGNAL inst44 : std_logic;
SIGNAL inst46 : std_logic;
SIGNAL \inst|txidle~reg\ : std_logic;
SIGNAL inst48 : std_logic;
SIGNAL \inst11|ctrl_val~reg\ : std_logic;
SIGNAL \inst11|data_val~reg\ : std_logic;
SIGNAL \inst11|muxsel4~reg\ : std_logic;
SIGNAL \inst3|i~826\ : std_logic;
SIGNAL \inst11|sreg~53\ : std_logic;
SIGNAL \inst11|sreg~39\ : std_logic;
SIGNAL \inst3|done~reg0\ : std_logic;
SIGNAL \inst11|sreg~52\ : std_logic;
SIGNAL \inst11|sreg~59\ : std_logic;
SIGNAL \inst11|sreg~46\ : std_logic;
SIGNAL \inst11|sreg~50\ : std_logic;
SIGNAL \inst11|sreg~47\ : std_logic;
SIGNAL \inst3|i~827\ : std_logic;
SIGNAL \inst11|shift_ct_en~reg\ : std_logic;
SIGNAL \inst11|plen_clk_en~reg\ : std_logic;
SIGNAL \inst11|muxsel1~reg\ : std_logic;
SIGNAL \inst11|muxsel0~reg\ : std_logic;
SIGNAL \lpm_shiftreg_component|dffs[0]~1\ : std_logic;
SIGNAL \$00012|result_node~16\ : std_logic;
SIGNAL \inst11|muxsel3~reg\ : std_logic;
SIGNAL \inst11|muxsel2~reg\ : std_logic;
SIGNAL \$00020|result_node~26\ : std_logic;
SIGNAL \inst3|i~828\ : std_logic;
SIGNAL \lpm_shiftreg_component|dffs[1]\ : std_logic;
SIGNAL inst37 : std_logic;
SIGNAL \$00012|result_node~18\ : std_logic;
SIGNAL \$00020|result_node~28\ : std_logic;
SIGNAL \inst3|i~830\ : std_logic;
SIGNAL \lpm_shiftreg_component|dffs[2]\ : std_logic;
SIGNAL \inst_crc32|SRG[8]\ : std_logic;
SIGNAL \inst_crc32|SRG[0]\ : std_logic;
SIGNAL \inst_crc32|SRG[24]\ : std_logic;
SIGNAL \inst_crc32|SRG[16]\ : std_logic;
SIGNAL \lpm_shiftreg_component|dffs[0]~2\ : std_logic;
SIGNAL \lpm_shiftreg_component|dffs[0]~3\ : std_logic;
SIGNAL \$00012|result_node~18_1\ : std_logic;
SIGNAL \lpm_shiftreg_component|dffs[2]~1\ : std_logic;
SIGNAL \lpm_shiftreg_component|dffs[2]~2\ : std_logic;
SIGNAL \$00020|result_node~28_1\ : std_logic;
SIGNAL \inst3|i~831\ : std_logic;
SIGNAL \lpm_shiftreg_component|dffs[3]\ : std_logic;
SIGNAL \inst_crc32|SRG[7]\ : std_logic;
SIGNAL \inst_crc32|SRG[31]\ : std_logic;
SIGNAL \inst_crc32|SRG[23]\ : std_logic;
SIGNAL \inst_crc32|SRG[15]\ : std_logic;
SIGNAL \lpm_shiftreg_component|dffs[1]~1\ : std_logic;
SIGNAL inst36 : std_logic;
SIGNAL \lpm_shiftreg_component|dffs[1]~2\ : std_logic;
SIGNAL inst38 : std_logic;
SIGNAL \inst_crc32|SRG[9]\ : std_logic;
SIGNAL \inst_crc32|SRG[1]\ : std_logic;
SIGNAL \inst_crc32|SRG[25]\ : std_logic;
SIGNAL \inst_crc32|SRG[17]\ : std_logic;
SIGNAL \lpm_shiftreg_component|dffs[3]~1\ : std_logic;
SIGNAL \lpm_shiftreg_component|dffs[3]~2\ : std_logic;
SIGNAL \$00012|result_node~18_2\ : std_logic;
SIGNAL \$00020|result_node~28_2\ : std_logic;
SIGNAL \inst3|i~832\ : std_logic;
SIGNAL \lpm_shiftreg_component|dffs[4]\ : std_logic;
SIGNAL \inst_crc32|SRG[6]\ : std_logic;
SIGNAL \inst_crc32|SRG[30]\ : std_logic;
SIGNAL \inst_crc32|SRG[22]\ : std_logic;
SIGNAL \inst_crc32|SRG[14]\ : std_logic;
SIGNAL \inst_crc32|SRG[10]\ : std_logic;
SIGNAL \inst_crc32|SRG[2]\ : std_logic;
SIGNAL \inst_crc32|SRG[26]\ : std_logic;
SIGNAL \inst_crc32|SRG[18]\ : std_logic;
SIGNAL \lpm_shiftreg_component|dffs[4]~1\ : std_logic;
SIGNAL \lpm_shiftreg_component|dffs[4]~2\ : std_logic;
SIGNAL \$00012|result_node~18_3\ : std_logic;
SIGNAL \$00020|result_node~24\ : std_logic;
SIGNAL \inst3|i~833\ : std_logic;
SIGNAL \lpm_shiftreg_component|dffs[5]\ : std_logic;
SIGNAL \inst_crc32|SRG[5]\ : std_logic;
SIGNAL \inst_crc32|SRG[29]\ : std_logic;
SIGNAL \inst3|i~835\ : std_logic;
SIGNAL \inst_crc32|SRG[21]\ : std_logic;
SIGNAL \inst_crc32|SRG[13]\ : std_logic;
SIGNAL \lpm_shiftreg_component|dffs[5]~1\ : std_logic;
SIGNAL \lpm_shiftreg_component|dffs[5]~2\ : std_logic;
SIGNAL \inst_crc32|SRG[11]\ : std_logic;
SIGNAL \inst_crc32|SRG[3]\ : std_logic;
SIGNAL \inst_crc32|SRG[27]\ : std_logic;
SIGNAL \inst_crc32|SRG[19]\ : std_logic;
SIGNAL \$00012|result_node~18_4\ : std_logic;
SIGNAL \$00020|result_node~24_1\ : std_logic;
SIGNAL \lpm_shiftreg_component|dffs[6]\ : std_logic;
SIGNAL \inst_crc32|SRG[4]\ : std_logic;
SIGNAL \inst_crc32|SRG[28]\ : std_logic;
SIGNAL \inst_crc32|SRG[20]\ : std_logic;
SIGNAL \inst_crc32|SRG[12]\ : std_logic;
SIGNAL \lpm_shiftreg_component|dffs[6]~1\ : std_logic;
SIGNAL \lpm_shiftreg_component|dffs[6]~2\ : std_logic;
SIGNAL \$00012|result_node~18_5\ : std_logic;
SIGNAL \$00020|result_node~24_2\ : std_logic;
SIGNAL \lpm_shiftreg_component|dffs[7]\ : std_logic;
SIGNAL \$00012|result_node~18_6\ : std_logic;
SIGNAL \$00020|result_node~24_3\ : std_logic;
SIGNAL \lpm_shiftreg_component|dffs[7]~1\ : std_logic;
SIGNAL \lpm_shiftreg_component|dffs[7]~2\ : std_logic;
SIGNAL \inst11|dom_adr_en~reg\ : std_logic;
SIGNAL \wysi_counter|cout~0\ : std_logic;
SIGNAL \wysi_counter|cout~0_1\ : std_logic;
SIGNAL \wysi_counter|the_carries[10]~0\ : std_logic;
SIGNAL ALT_NOT_ww_CLK20 : std_logic;

COMPONENT tx_uart_ap
    PORT (
	tx_clk : IN std_logic;
	RST : IN std_logic;
	ctrl_val : IN std_logic;
	data_val : IN std_logic;
	i : IN std_logic;
	i1 : IN std_logic;
	i2 : IN std_logic;
	i3 : IN std_logic;
	i4 : IN std_logic;
	i5 : IN std_logic;
	i6 : IN std_logic;
	i7 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	dffs_0 : OUT std_logic;
	txshld : OUT std_logic;
	tx_idle : OUT std_logic);
END COMPONENT;

COMPONENT DC_SNAP
    PORT (
	CLK : IN std_logic;
	portadataout_0 : IN std_logic;
	portadataout_1 : IN std_logic;
	buf_res : IN std_logic;
	send_data : IN std_logic;
	sreg : IN std_logic;
	sreg1 : IN std_logic;
	txshld : IN std_logic;
	txidle : IN std_logic;
	send_ctrl : IN std_logic;
	done : IN std_logic;
	b_non_empty : IN std_logic;
	cout : IN std_logic;
	cout1 : IN std_logic;
	the_carries_10 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	dpr_ren : OUT std_logic;
	msg_sent : OUT std_logic;
	\_\ : OUT std_logic;
	ctrl_val : OUT std_logic;
	data_val : OUT std_logic;
	muxsel4 : OUT std_logic;
	sreg2 : OUT std_logic;
	sreg3 : OUT std_logic;
	sreg4 : OUT std_logic;
	sreg5 : OUT std_logic;
	sreg6 : OUT std_logic;
	sreg7 : OUT std_logic;
	sreg8 : OUT std_logic;
	sreg9 : OUT std_logic;
	shift_ct_en : OUT std_logic;
	plen_clk_en : OUT std_logic;
	muxsel1 : OUT std_logic;
	muxsel0 : OUT std_logic;
	muxsel3 : OUT std_logic;
	muxsel2 : OUT std_logic;
	dom_adr_en : OUT std_logic);
END COMPONENT;

COMPONENT crc_tx
    PORT (
	CLK : IN std_logic;
	RST : IN std_logic;
	txshld : IN std_logic;
	data_val : IN std_logic;
	muxsel4 : IN std_logic;
	sreg : IN std_logic;
	sreg1 : IN std_logic;
	result_node : IN std_logic;
	result_node1 : IN std_logic;
	result_node2 : IN std_logic;
	result_node3 : IN std_logic;
	result_node4 : IN std_logic;
	result_node5 : IN std_logic;
	result_node6 : IN std_logic;
	result_node7 : IN std_logic;
	result_node8 : IN std_logic;
	result_node9 : IN std_logic;
	result_node10 : IN std_logic;
	result_node11 : IN std_logic;
	result_node12 : IN std_logic;
	result_node13 : IN std_logic;
	result_node14 : IN std_logic;
	result_node15 : IN std_logic;
	GND_port : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	i : OUT std_logic;
	done : OUT std_logic;
	i1 : OUT std_logic;
	i2 : OUT std_logic;
	i3 : OUT std_logic;
	SRG_8 : OUT std_logic;
	SRG_0 : OUT std_logic;
	SRG_24 : OUT std_logic;
	SRG_16 : OUT std_logic;
	i4 : OUT std_logic;
	SRG_7 : OUT std_logic;
	SRG_31 : OUT std_logic;
	SRG_23 : OUT std_logic;
	SRG_15 : OUT std_logic;
	SRG_9 : OUT std_logic;
	SRG_1 : OUT std_logic;
	SRG_25 : OUT std_logic;
	SRG_17 : OUT std_logic;
	i5 : OUT std_logic;
	SRG_6 : OUT std_logic;
	SRG_30 : OUT std_logic;
	SRG_22 : OUT std_logic;
	SRG_14 : OUT std_logic;
	SRG_10 : OUT std_logic;
	SRG_2 : OUT std_logic;
	SRG_26 : OUT std_logic;
	SRG_18 : OUT std_logic;
	i6 : OUT std_logic;
	SRG_5 : OUT std_logic;
	SRG_29 : OUT std_logic;
	i7 : OUT std_logic;
	SRG_21 : OUT std_logic;
	SRG_13 : OUT std_logic;
	SRG_11 : OUT std_logic;
	SRG_3 : OUT std_logic;
	SRG_27 : OUT std_logic;
	SRG_19 : OUT std_logic;
	SRG_4 : OUT std_logic;
	SRG_28 : OUT std_logic;
	SRG_20 : OUT std_logic;
	SRG_12 : OUT std_logic);
END COMPONENT;

COMPONENT dc_tx_mux
    PORT (
	portadataout_0 : IN std_logic;
	portadataout_1 : IN std_logic;
	portadataout_2 : IN std_logic;
	portadataout_3 : IN std_logic;
	portadataout_4 : IN std_logic;
	portadataout_5 : IN std_logic;
	portadataout_6 : IN std_logic;
	portadataout_7 : IN std_logic;
	portadataout_8 : IN std_logic;
	portadataout_9 : IN std_logic;
	portadataout_10 : IN std_logic;
	portadataout_11 : IN std_logic;
	portadataout_12 : IN std_logic;
	portadataout_13 : IN std_logic;
	portadataout_14 : IN std_logic;
	portadataout_15 : IN std_logic;
	portadataout_16 : IN std_logic;
	portadataout_17 : IN std_logic;
	portadataout_18 : IN std_logic;
	portadataout_19 : IN std_logic;
	portadataout_20 : IN std_logic;
	portadataout_21 : IN std_logic;
	portadataout_22 : IN std_logic;
	portadataout_23 : IN std_logic;
	portadataout_24 : IN std_logic;
	portadataout_25 : IN std_logic;
	portadataout_26 : IN std_logic;
	portadataout_27 : IN std_logic;
	portadataout_28 : IN std_logic;
	portadataout_29 : IN std_logic;
	portadataout_30 : IN std_logic;
	portadataout_31 : IN std_logic;
	sreg : IN std_logic;
	sreg1 : IN std_logic;
	send_ctrl : IN std_logic;
	muxsel1 : IN std_logic;
	q_8 : IN std_logic;
	q_0 : IN std_logic;
	muxsel0 : IN std_logic;
	dffs_0 : IN std_logic;
	muxsel3 : IN std_logic;
	muxsel2 : IN std_logic;
	cmd_snd0 : IN std_logic;
	dffs_1 : IN std_logic;
	q_9 : IN std_logic;
	q_1 : IN std_logic;
	cmd_snd1 : IN std_logic;
	dffs_2 : IN std_logic;
	SRG_8 : IN std_logic;
	SRG_0 : IN std_logic;
	SRG_24 : IN std_logic;
	SRG_16 : IN std_logic;
	dffs_01 : IN std_logic;
	dffs_02 : IN std_logic;
	q_2 : IN std_logic;
	dffs_21 : IN std_logic;
	dffs_22 : IN std_logic;
	dffs_3 : IN std_logic;
	SRG_7 : IN std_logic;
	SRG_31 : IN std_logic;
	SRG_23 : IN std_logic;
	SRG_15 : IN std_logic;
	dffs_11 : IN std_logic;
	dffs_12 : IN std_logic;
	SRG_9 : IN std_logic;
	SRG_1 : IN std_logic;
	SRG_25 : IN std_logic;
	SRG_17 : IN std_logic;
	dffs_31 : IN std_logic;
	dffs_32 : IN std_logic;
	q_3 : IN std_logic;
	dffs_4 : IN std_logic;
	SRG_6 : IN std_logic;
	SRG_30 : IN std_logic;
	SRG_22 : IN std_logic;
	SRG_14 : IN std_logic;
	SRG_10 : IN std_logic;
	SRG_2 : IN std_logic;
	SRG_26 : IN std_logic;
	SRG_18 : IN std_logic;
	dffs_41 : IN std_logic;
	dffs_42 : IN std_logic;
	q_4 : IN std_logic;
	dffs_5 : IN std_logic;
	SRG_5 : IN std_logic;
	SRG_29 : IN std_logic;
	SRG_21 : IN std_logic;
	SRG_13 : IN std_logic;
	dffs_51 : IN std_logic;
	dffs_52 : IN std_logic;
	SRG_11 : IN std_logic;
	SRG_3 : IN std_logic;
	SRG_27 : IN std_logic;
	SRG_19 : IN std_logic;
	cmd_snd3 : IN std_logic;
	q_5 : IN std_logic;
	dffs_6 : IN std_logic;
	SRG_4 : IN std_logic;
	SRG_28 : IN std_logic;
	SRG_20 : IN std_logic;
	SRG_12 : IN std_logic;
	dffs_61 : IN std_logic;
	dffs_62 : IN std_logic;
	q_6 : IN std_logic;
	dffs_7 : IN std_logic;
	q_7 : IN std_logic;
	dffs_71 : IN std_logic;
	dffs_72 : IN std_logic;
	dom_adr_en : IN std_logic;
	A_nB : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	result_node : OUT std_logic;
	result_node1 : OUT std_logic;
	result_node2 : OUT std_logic;
	result_node3 : OUT std_logic;
	result_node4 : OUT std_logic;
	result_node5 : OUT std_logic;
	result_node6 : OUT std_logic;
	result_node7 : OUT std_logic;
	result_node8 : OUT std_logic;
	result_node9 : OUT std_logic;
	result_node10 : OUT std_logic;
	result_node11 : OUT std_logic;
	result_node12 : OUT std_logic;
	result_node13 : OUT std_logic;
	result_node14 : OUT std_logic;
	result_node15 : OUT std_logic);
END COMPONENT;

COMPONENT shrg48pld_1
    PORT (
	clock : IN std_logic;
	sload_path_47 : IN std_logic;
	sload_path_46 : IN std_logic;
	sload_path_45 : IN std_logic;
	sload_path_44 : IN std_logic;
	sload_path_43 : IN std_logic;
	sload_path_42 : IN std_logic;
	sload_path_41 : IN std_logic;
	sload_path_40 : IN std_logic;
	sload_path_39 : IN std_logic;
	sload_path_38 : IN std_logic;
	sload_path_37 : IN std_logic;
	sload_path_36 : IN std_logic;
	sload_path_35 : IN std_logic;
	sload_path_34 : IN std_logic;
	sload_path_33 : IN std_logic;
	sload_path_32 : IN std_logic;
	sload_path_31 : IN std_logic;
	sload_path_30 : IN std_logic;
	sload_path_29 : IN std_logic;
	sload_path_28 : IN std_logic;
	sload_path_27 : IN std_logic;
	sload_path_26 : IN std_logic;
	sload_path_25 : IN std_logic;
	sload_path_24 : IN std_logic;
	sload_path_23 : IN std_logic;
	sload_path_22 : IN std_logic;
	sload_path_21 : IN std_logic;
	sload_path_20 : IN std_logic;
	sload_path_19 : IN std_logic;
	sload_path_18 : IN std_logic;
	sload_path_17 : IN std_logic;
	sload_path_16 : IN std_logic;
	sload_path_15 : IN std_logic;
	sload_path_14 : IN std_logic;
	sload_path_13 : IN std_logic;
	sload_path_12 : IN std_logic;
	sload_path_11 : IN std_logic;
	sload_path_10 : IN std_logic;
	sload_path_9 : IN std_logic;
	sload_path_8 : IN std_logic;
	sload_path_7 : IN std_logic;
	sload_path_6 : IN std_logic;
	sload_path_5 : IN std_logic;
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	sreg : IN std_logic;
	enable : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	dffs_0 : OUT std_logic;
	dffs_2 : OUT std_logic;
	dffs_1 : OUT std_logic;
	dffs_3 : OUT std_logic;
	dffs_4 : OUT std_logic;
	dffs_5 : OUT std_logic;
	dffs_6 : OUT std_logic;
	dffs_7 : OUT std_logic);
END COMPONENT;

COMPONENT shrg48pld
    PORT (
	clock : IN std_logic;
	sload_path_47 : IN std_logic;
	sload_path_46 : IN std_logic;
	sload_path_45 : IN std_logic;
	sload_path_44 : IN std_logic;
	sload_path_43 : IN std_logic;
	sload_path_42 : IN std_logic;
	sload_path_41 : IN std_logic;
	sload_path_40 : IN std_logic;
	sload_path_39 : IN std_logic;
	sload_path_38 : IN std_logic;
	sload_path_37 : IN std_logic;
	sload_path_36 : IN std_logic;
	sload_path_35 : IN std_logic;
	sload_path_34 : IN std_logic;
	sload_path_33 : IN std_logic;
	sload_path_32 : IN std_logic;
	sload_path_31 : IN std_logic;
	sload_path_30 : IN std_logic;
	sload_path_29 : IN std_logic;
	sload_path_28 : IN std_logic;
	sload_path_27 : IN std_logic;
	sload_path_26 : IN std_logic;
	sload_path_25 : IN std_logic;
	sload_path_24 : IN std_logic;
	sload_path_23 : IN std_logic;
	sload_path_22 : IN std_logic;
	sload_path_21 : IN std_logic;
	sload_path_20 : IN std_logic;
	sload_path_19 : IN std_logic;
	sload_path_18 : IN std_logic;
	sload_path_17 : IN std_logic;
	sload_path_16 : IN std_logic;
	sload_path_15 : IN std_logic;
	sload_path_14 : IN std_logic;
	sload_path_13 : IN std_logic;
	sload_path_12 : IN std_logic;
	sload_path_11 : IN std_logic;
	sload_path_10 : IN std_logic;
	sload_path_9 : IN std_logic;
	sload_path_8 : IN std_logic;
	sload_path_7 : IN std_logic;
	sload_path_6 : IN std_logic;
	sload_path_5 : IN std_logic;
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	tx_time_lat : IN std_logic;
	enable : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	dffs_0 : OUT std_logic;
	dffs_2 : OUT std_logic;
	dffs_1 : OUT std_logic;
	dffs_3 : OUT std_logic;
	dffs_4 : OUT std_logic;
	dffs_5 : OUT std_logic;
	dffs_6 : OUT std_logic;
	dffs_7 : OUT std_logic);
END COMPONENT;

COMPONENT shrg48pld_2
    PORT (
	clock : IN std_logic;
	sreg : IN std_logic;
	dom_id_0 : IN std_logic;
	enable : IN std_logic;
	dom_id_1 : IN std_logic;
	dom_id_2 : IN std_logic;
	dom_id_3 : IN std_logic;
	dom_id_4 : IN std_logic;
	dom_id_5 : IN std_logic;
	dom_id_6 : IN std_logic;
	dom_id_7 : IN std_logic;
	dom_id_8 : IN std_logic;
	dom_id_9 : IN std_logic;
	dom_id_10 : IN std_logic;
	dom_id_11 : IN std_logic;
	dom_id_12 : IN std_logic;
	dom_id_13 : IN std_logic;
	dom_id_14 : IN std_logic;
	dom_id_15 : IN std_logic;
	dom_id_16 : IN std_logic;
	dom_id_17 : IN std_logic;
	dom_id_18 : IN std_logic;
	dom_id_19 : IN std_logic;
	dom_id_20 : IN std_logic;
	dom_id_21 : IN std_logic;
	dom_id_22 : IN std_logic;
	dom_id_23 : IN std_logic;
	dom_id_24 : IN std_logic;
	dom_id_25 : IN std_logic;
	dom_id_26 : IN std_logic;
	dom_id_27 : IN std_logic;
	dom_id_28 : IN std_logic;
	dom_id_29 : IN std_logic;
	dom_id_30 : IN std_logic;
	dom_id_31 : IN std_logic;
	dom_id_32 : IN std_logic;
	dom_id_33 : IN std_logic;
	dom_id_34 : IN std_logic;
	dom_id_35 : IN std_logic;
	dom_id_36 : IN std_logic;
	dom_id_37 : IN std_logic;
	dom_id_38 : IN std_logic;
	dom_id_39 : IN std_logic;
	dom_id_40 : IN std_logic;
	dom_id_41 : IN std_logic;
	dom_id_42 : IN std_logic;
	dom_id_43 : IN std_logic;
	dom_id_44 : IN std_logic;
	dom_id_45 : IN std_logic;
	dom_id_46 : IN std_logic;
	dom_id_47 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	dffs_0 : OUT std_logic;
	dffs_1 : OUT std_logic;
	dffs_2 : OUT std_logic;
	dffs_3 : OUT std_logic;
	dffs_4 : OUT std_logic;
	dffs_5 : OUT std_logic;
	dffs_6 : OUT std_logic;
	dffs_7 : OUT std_logic);
END COMPONENT;

COMPONENT tx_plen_ct_ap
    PORT (
	clock : IN std_logic;
	portadataout_2 : IN std_logic;
	portadataout_3 : IN std_logic;
	portadataout_4 : IN std_logic;
	portadataout_5 : IN std_logic;
	portadataout_6 : IN std_logic;
	portadataout_7 : IN std_logic;
	portadataout_8 : IN std_logic;
	portadataout_9 : IN std_logic;
	portadataout_10 : IN std_logic;
	portadataout_11 : IN std_logic;
	sreg : IN std_logic;
	sreg1 : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	the_carries_10 : OUT std_logic);
END COMPONENT;

COMPONENT shift_ct_1
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	cout : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cout1 : OUT std_logic);
END COMPONENT;

COMPONENT shift_ct
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cout : OUT std_logic);
END COMPONENT;

COMPONENT my_or16b_1
    PORT (
	sload_path_0 : IN std_logic;
	pre_out_1 : IN std_logic;
	pre_out_2 : IN std_logic;
	pre_out_3 : IN std_logic;
	pre_out_4 : IN std_logic;
	pre_out_5 : IN std_logic;
	pre_out_6 : IN std_logic;
	pre_out_7 : IN std_logic;
	pre_out_8 : IN std_logic;
	pre_out_9 : IN std_logic;
	pre_out_10 : IN std_logic;
	pre_out_11 : IN std_logic;
	pre_out_12 : IN std_logic;
	pre_out_13 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	or_node_6_0 : OUT std_logic);
END COMPONENT;

COMPONENT tx_packet_ct
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	updown : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_0 : OUT std_logic;
	pre_out_1 : OUT std_logic;
	pre_out_2 : OUT std_logic;
	pre_out_3 : OUT std_logic;
	pre_out_4 : OUT std_logic;
	pre_out_5 : OUT std_logic;
	pre_out_6 : OUT std_logic;
	pre_out_7 : OUT std_logic;
	pre_out_8 : OUT std_logic;
	pre_out_9 : OUT std_logic;
	pre_out_10 : OUT std_logic;
	pre_out_11 : OUT std_logic;
	pre_out_12 : OUT std_logic;
	pre_out_13 : OUT std_logic;
	pre_out_14 : OUT std_logic;
	pre_out_15 : OUT std_logic);
END COMPONENT;

COMPONENT dac_rs_tab_rect_01
    PORT (
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	dac_d_6 : OUT std_logic;
	dac_d_0 : OUT std_logic);
END COMPONENT;

COMPONENT Tx_dpr_ctrl_ap
    PORT (
	CLK20 : IN std_logic;
	buf_res : IN std_logic;
	tx_dpr_ren : IN std_logic;
	tx_dpr_wadr_local_0 : IN std_logic;
	tx_dpr_wadr_local_1 : IN std_logic;
	tx_dpr_wadr_local_2 : IN std_logic;
	tx_dpr_wadr_local_3 : IN std_logic;
	tx_dpr_wadr_local_4 : IN std_logic;
	tx_dpr_wadr_local_5 : IN std_logic;
	tx_dpr_wadr_local_6 : IN std_logic;
	tx_dpr_wadr_local_7 : IN std_logic;
	tx_dpr_wadr_local_8 : IN std_logic;
	tx_dpr_wadr_local_9 : IN std_logic;
	tx_dpr_wadr_local_10 : IN std_logic;
	tx_dpr_wadr_local_11 : IN std_logic;
	tx_dpr_wadr_local_12 : IN std_logic;
	tx_dpr_wadr_local_13 : IN std_logic;
	tx_dpr_wadr_local_14 : IN std_logic;
	tx_dpr_wadr_local_15 : IN std_logic;
	tx_pack_ct_up : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q_15 : OUT std_logic;
	q_14 : OUT std_logic;
	q_13 : OUT std_logic;
	q_12 : OUT std_logic;
	q_11 : OUT std_logic;
	q_10 : OUT std_logic;
	q_9 : OUT std_logic;
	q_8 : OUT std_logic;
	q_7 : OUT std_logic;
	q_6 : OUT std_logic;
	q_5 : OUT std_logic;
	q_4 : OUT std_logic;
	q_3 : OUT std_logic;
	q_2 : OUT std_logic;
	q_1 : OUT std_logic;
	q_0 : OUT std_logic;
	op_6 : OUT std_logic);
END COMPONENT;

BEGIN

ww_CLK20 <= CLK20;
ww_sload_path_47 <= sload_path_47;
ww_sload_path_46 <= sload_path_46;
ww_sload_path_45 <= sload_path_45;
ww_sload_path_44 <= sload_path_44;
ww_sload_path_43 <= sload_path_43;
ww_sload_path_42 <= sload_path_42;
ww_sload_path_41 <= sload_path_41;
ww_sload_path_40 <= sload_path_40;
ww_sload_path_39 <= sload_path_39;
ww_sload_path_38 <= sload_path_38;
ww_sload_path_37 <= sload_path_37;
ww_sload_path_36 <= sload_path_36;
ww_sload_path_35 <= sload_path_35;
ww_sload_path_34 <= sload_path_34;
ww_sload_path_33 <= sload_path_33;
ww_sload_path_32 <= sload_path_32;
ww_sload_path_31 <= sload_path_31;
ww_sload_path_30 <= sload_path_30;
ww_sload_path_29 <= sload_path_29;
ww_sload_path_28 <= sload_path_28;
ww_sload_path_27 <= sload_path_27;
ww_sload_path_26 <= sload_path_26;
ww_sload_path_25 <= sload_path_25;
ww_sload_path_24 <= sload_path_24;
ww_sload_path_23 <= sload_path_23;
ww_sload_path_22 <= sload_path_22;
ww_sload_path_21 <= sload_path_21;
ww_sload_path_20 <= sload_path_20;
ww_sload_path_19 <= sload_path_19;
ww_sload_path_18 <= sload_path_18;
ww_sload_path_17 <= sload_path_17;
ww_sload_path_16 <= sload_path_16;
ww_sload_path_15 <= sload_path_15;
ww_sload_path_14 <= sload_path_14;
ww_sload_path_13 <= sload_path_13;
ww_sload_path_12 <= sload_path_12;
ww_sload_path_11 <= sload_path_11;
ww_sload_path_10 <= sload_path_10;
ww_sload_path_9 <= sload_path_9;
ww_sload_path_8 <= sload_path_8;
ww_sload_path_7 <= sload_path_7;
ww_sload_path_6 <= sload_path_6;
ww_sload_path_5 <= sload_path_5;
ww_sload_path_4 <= sload_path_4;
ww_sload_path_3 <= sload_path_3;
ww_sload_path_2 <= sload_path_2;
ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_portadataout_0 <= portadataout_0;
ww_portadataout_1 <= portadataout_1;
ww_portadataout_2 <= portadataout_2;
ww_portadataout_3 <= portadataout_3;
ww_portadataout_4 <= portadataout_4;
ww_portadataout_5 <= portadataout_5;
ww_portadataout_6 <= portadataout_6;
ww_portadataout_7 <= portadataout_7;
ww_portadataout_8 <= portadataout_8;
ww_portadataout_9 <= portadataout_9;
ww_portadataout_10 <= portadataout_10;
ww_portadataout_11 <= portadataout_11;
ww_portadataout_12 <= portadataout_12;
ww_portadataout_13 <= portadataout_13;
ww_portadataout_14 <= portadataout_14;
ww_portadataout_15 <= portadataout_15;
ww_portadataout_16 <= portadataout_16;
ww_portadataout_17 <= portadataout_17;
ww_portadataout_18 <= portadataout_18;
ww_portadataout_19 <= portadataout_19;
ww_portadataout_20 <= portadataout_20;
ww_portadataout_21 <= portadataout_21;
ww_portadataout_22 <= portadataout_22;
ww_portadataout_23 <= portadataout_23;
ww_portadataout_24 <= portadataout_24;
ww_portadataout_25 <= portadataout_25;
ww_portadataout_26 <= portadataout_26;
ww_portadataout_27 <= portadataout_27;
ww_portadataout_28 <= portadataout_28;
ww_portadataout_29 <= portadataout_29;
ww_portadataout_30 <= portadataout_30;
ww_portadataout_31 <= portadataout_31;
ww_buf_res <= buf_res;
ww_RST <= RST;
ww_h_pulse <= h_pulse;
ww_l_pulse <= l_pulse;
ww_sreg <= sreg;
ww_tx_dpr_wadr_local_0 <= tx_dpr_wadr_local_0;
ww_tx_dpr_wadr_local_1 <= tx_dpr_wadr_local_1;
ww_send_data <= send_data;
ww_send_ctrl <= send_ctrl;
ww_tx_dpr_wadr_local_2 <= tx_dpr_wadr_local_2;
ww_tx_dpr_wadr_local_3 <= tx_dpr_wadr_local_3;
ww_tx_dpr_wadr_local_4 <= tx_dpr_wadr_local_4;
ww_tx_dpr_wadr_local_5 <= tx_dpr_wadr_local_5;
ww_tx_dpr_wadr_local_6 <= tx_dpr_wadr_local_6;
ww_tx_dpr_wadr_local_7 <= tx_dpr_wadr_local_7;
ww_tx_dpr_wadr_local_8 <= tx_dpr_wadr_local_8;
ww_tx_dpr_wadr_local_9 <= tx_dpr_wadr_local_9;
ww_tx_dpr_wadr_local_10 <= tx_dpr_wadr_local_10;
ww_tx_dpr_wadr_local_11 <= tx_dpr_wadr_local_11;
ww_tx_dpr_wadr_local_12 <= tx_dpr_wadr_local_12;
ww_tx_dpr_wadr_local_13 <= tx_dpr_wadr_local_13;
ww_tx_dpr_wadr_local_14 <= tx_dpr_wadr_local_14;
ww_tx_dpr_wadr_local_15 <= tx_dpr_wadr_local_15;
ww_sreg1 <= sreg1;
ww_sreg2 <= sreg2;
ww_tx_pack_rdy <= tx_pack_rdy;
ww_send_ctrl1 <= send_ctrl1;
ww_dom_id_48 <= dom_id_48;
ww_b_non_empty <= b_non_empty;
ww_q_81 <= q_81;
ww_q_01 <= q_01;
ww_cmd_snd0 <= cmd_snd0;
ww_dom_id_0 <= dom_id_0;
ww_q_91 <= q_91;
ww_q_13 <= q_13;
ww_cmd_snd1 <= cmd_snd1;
ww_dom_id_1 <= dom_id_1;
ww_q_21 <= q_21;
ww_dom_id_2 <= dom_id_2;
ww_tx_time_lat <= tx_time_lat;
ww_q_31 <= q_31;
ww_dom_id_3 <= dom_id_3;
ww_q_41 <= q_41;
ww_dom_id_4 <= dom_id_4;
ww_cmd_snd3 <= cmd_snd3;
ww_q_51 <= q_51;
ww_dom_id_5 <= dom_id_5;
ww_q_61 <= q_61;
ww_dom_id_6 <= dom_id_6;
ww_q_71 <= q_71;
ww_dom_id_7 <= dom_id_7;
ww_dom_id_8 <= dom_id_8;
ww_dom_id_9 <= dom_id_9;
ww_dom_id_10 <= dom_id_10;
ww_dom_id_11 <= dom_id_11;
ww_dom_id_12 <= dom_id_12;
ww_dom_id_13 <= dom_id_13;
ww_dom_id_14 <= dom_id_14;
ww_dom_id_15 <= dom_id_15;
ww_dom_id_16 <= dom_id_16;
ww_dom_id_17 <= dom_id_17;
ww_dom_id_18 <= dom_id_18;
ww_dom_id_19 <= dom_id_19;
ww_dom_id_20 <= dom_id_20;
ww_dom_id_21 <= dom_id_21;
ww_dom_id_22 <= dom_id_22;
ww_dom_id_23 <= dom_id_23;
ww_dom_id_24 <= dom_id_24;
ww_dom_id_25 <= dom_id_25;
ww_dom_id_26 <= dom_id_26;
ww_dom_id_27 <= dom_id_27;
ww_dom_id_28 <= dom_id_28;
ww_dom_id_29 <= dom_id_29;
ww_dom_id_30 <= dom_id_30;
ww_dom_id_31 <= dom_id_31;
ww_dom_id_32 <= dom_id_32;
ww_dom_id_33 <= dom_id_33;
ww_dom_id_34 <= dom_id_34;
ww_dom_id_35 <= dom_id_35;
ww_dom_id_36 <= dom_id_36;
ww_dom_id_37 <= dom_id_37;
ww_dom_id_38 <= dom_id_38;
ww_dom_id_39 <= dom_id_39;
ww_dom_id_40 <= dom_id_40;
ww_dom_id_41 <= dom_id_41;
ww_dom_id_42 <= dom_id_42;
ww_dom_id_43 <= dom_id_43;
ww_dom_id_44 <= dom_id_44;
ww_dom_id_45 <= dom_id_45;
ww_dom_id_46 <= dom_id_46;
ww_dom_id_47 <= dom_id_47;
ww_GND_port <= GND_port;
ww_A_nB <= A_nB;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
q_12 <= ww_q_12;
q_11 <= ww_q_11;
q_10 <= ww_q_10;
q_9 <= ww_q_9;
q_8 <= ww_q_8;
q_7 <= ww_q_7;
q_6 <= ww_q_6;
q_5 <= ww_q_5;
q_4 <= ww_q_4;
q_3 <= ww_q_3;
q_2 <= ww_q_2;
q_1 <= ww_q_1;
q_0 <= ww_q_0;
pre_out_14 <= ww_pre_out_14;
pre_out_15 <= ww_pre_out_15;
inst23_7 <= ww_inst23_7;
inst23_6 <= ww_inst23_6;
inst23_0 <= ww_inst23_0;
op_6 <= ww_op_6;
inst16_0 <= ww_inst16_0;
msg_sent <= ww_msg_sent;
inst50 <= ww_inst50;
inst16_1 <= ww_inst16_1;
inst16_2 <= ww_inst16_2;
inst16_3 <= ww_inst16_3;
inst16_4 <= ww_inst16_4;
inst16_5 <= ww_inst16_5;
inst16_6 <= ww_inst16_6;
inst16_7 <= ww_inst16_7;
inst16_8 <= ww_inst16_8;
inst16_9 <= ww_inst16_9;
inst16_10 <= ww_inst16_10;
inst16_11 <= ww_inst16_11;
inst16_12 <= ww_inst16_12;
inst16_13 <= ww_inst16_13;
inst16_14 <= ww_inst16_14;
inst16_15 <= ww_inst16_15;
\_\ <= \ww_\;
inst9 <= ww_inst9;
sreg3 <= ww_sreg3;
or_node_6_0 <= ww_or_node_6_0;
ALT_NOT_ww_CLK20 <= NOT ww_CLK20;
inst7 : tx_uart_ap
PORT MAP (
	tx_clk => ww_CLK20,
	RST => ww_RST,
	ctrl_val => \inst11|ctrl_val~reg\,
	data_val => \inst11|data_val~reg\,
	i => \inst3|i~826\,
	i1 => \inst3|i~827\,
	i2 => \inst3|i~828\,
	i3 => \inst3|i~830\,
	i4 => \inst3|i~831\,
	i5 => \inst3|i~832\,
	i6 => \inst3|i~833\,
	i7 => \inst3|i~835\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_4 => \wysi_counter|sload_path[4]\,
	sload_path_3 => \wysi_counter|sload_path[3]\,
	sload_path_2 => \wysi_counter|sload_path[2]\,
	sload_path_1 => \wysi_counter|sload_path[1]\,
	dffs_0 => \lpm_shiftreg_component|dffs[0]\,
	txshld => \inst|txshld~reg\,
	tx_idle => \inst|txidle~reg\);
inst11 : DC_SNAP
PORT MAP (
	CLK => ww_CLK20,
	portadataout_0 => ww_portadataout_0,
	portadataout_1 => ww_portadataout_1,
	buf_res => ww_buf_res,
	send_data => ww_send_data,
	sreg => ww_sreg1,
	sreg1 => ww_sreg2,
	txshld => \inst|txshld~reg\,
	txidle => \inst|txidle~reg\,
	send_ctrl => ww_send_ctrl1,
	done => \inst3|done~reg0\,
	b_non_empty => ww_b_non_empty,
	cout => \wysi_counter|cout~0\,
	cout1 => \wysi_counter|cout~0_1\,
	the_carries_10 => \wysi_counter|the_carries[10]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	dpr_ren => \inst11|dpr_ren~reg\,
	msg_sent => ww_msg_sent,
	\_\ => \ww_\,
	ctrl_val => \inst11|ctrl_val~reg\,
	data_val => \inst11|data_val~reg\,
	muxsel4 => \inst11|muxsel4~reg\,
	sreg2 => \inst11|sreg~53\,
	sreg3 => \inst11|sreg~39\,
	sreg4 => \inst11|sreg~52\,
	sreg5 => \inst11|sreg~59\,
	sreg6 => ww_sreg3,
	sreg7 => \inst11|sreg~46\,
	sreg8 => \inst11|sreg~50\,
	sreg9 => \inst11|sreg~47\,
	shift_ct_en => \inst11|shift_ct_en~reg\,
	plen_clk_en => \inst11|plen_clk_en~reg\,
	muxsel1 => \inst11|muxsel1~reg\,
	muxsel0 => \inst11|muxsel0~reg\,
	muxsel3 => \inst11|muxsel3~reg\,
	muxsel2 => \inst11|muxsel2~reg\,
	dom_adr_en => \inst11|dom_adr_en~reg\);
inst3 : crc_tx
PORT MAP (
	CLK => ww_CLK20,
	RST => ww_RST,
	txshld => \inst|txshld~reg\,
	data_val => \inst11|data_val~reg\,
	muxsel4 => \inst11|muxsel4~reg\,
	sreg => \inst11|sreg~53\,
	sreg1 => \inst11|sreg~39\,
	result_node => \$00012|result_node~16\,
	result_node1 => \$00020|result_node~26\,
	result_node2 => \$00012|result_node~18\,
	result_node3 => \$00020|result_node~28\,
	result_node4 => \$00012|result_node~18_1\,
	result_node5 => \$00020|result_node~28_1\,
	result_node6 => \$00012|result_node~18_2\,
	result_node7 => \$00020|result_node~28_2\,
	result_node8 => \$00012|result_node~18_3\,
	result_node9 => \$00020|result_node~24\,
	result_node10 => \$00012|result_node~18_4\,
	result_node11 => \$00020|result_node~24_1\,
	result_node12 => \$00012|result_node~18_5\,
	result_node13 => \$00020|result_node~24_2\,
	result_node14 => \$00012|result_node~18_6\,
	result_node15 => \$00020|result_node~24_3\,
	GND_port => ww_GND_port,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	i => \inst3|i~826\,
	done => \inst3|done~reg0\,
	i1 => \inst3|i~827\,
	i2 => \inst3|i~828\,
	i3 => \inst3|i~830\,
	SRG_8 => \inst_crc32|SRG[8]\,
	SRG_0 => \inst_crc32|SRG[0]\,
	SRG_24 => \inst_crc32|SRG[24]\,
	SRG_16 => \inst_crc32|SRG[16]\,
	i4 => \inst3|i~831\,
	SRG_7 => \inst_crc32|SRG[7]\,
	SRG_31 => \inst_crc32|SRG[31]\,
	SRG_23 => \inst_crc32|SRG[23]\,
	SRG_15 => \inst_crc32|SRG[15]\,
	SRG_9 => \inst_crc32|SRG[9]\,
	SRG_1 => \inst_crc32|SRG[1]\,
	SRG_25 => \inst_crc32|SRG[25]\,
	SRG_17 => \inst_crc32|SRG[17]\,
	i5 => \inst3|i~832\,
	SRG_6 => \inst_crc32|SRG[6]\,
	SRG_30 => \inst_crc32|SRG[30]\,
	SRG_22 => \inst_crc32|SRG[22]\,
	SRG_14 => \inst_crc32|SRG[14]\,
	SRG_10 => \inst_crc32|SRG[10]\,
	SRG_2 => \inst_crc32|SRG[2]\,
	SRG_26 => \inst_crc32|SRG[26]\,
	SRG_18 => \inst_crc32|SRG[18]\,
	i6 => \inst3|i~833\,
	SRG_5 => \inst_crc32|SRG[5]\,
	SRG_29 => \inst_crc32|SRG[29]\,
	i7 => \inst3|i~835\,
	SRG_21 => \inst_crc32|SRG[21]\,
	SRG_13 => \inst_crc32|SRG[13]\,
	SRG_11 => \inst_crc32|SRG[11]\,
	SRG_3 => \inst_crc32|SRG[3]\,
	SRG_27 => \inst_crc32|SRG[27]\,
	SRG_19 => \inst_crc32|SRG[19]\,
	SRG_4 => \inst_crc32|SRG[4]\,
	SRG_28 => \inst_crc32|SRG[28]\,
	SRG_20 => \inst_crc32|SRG[20]\,
	SRG_12 => \inst_crc32|SRG[12]\);
inst5 : dc_tx_mux
PORT MAP (
	portadataout_0 => ww_portadataout_0,
	portadataout_1 => ww_portadataout_1,
	portadataout_2 => ww_portadataout_2,
	portadataout_3 => ww_portadataout_3,
	portadataout_4 => ww_portadataout_4,
	portadataout_5 => ww_portadataout_5,
	portadataout_6 => ww_portadataout_6,
	portadataout_7 => ww_portadataout_7,
	portadataout_8 => ww_portadataout_8,
	portadataout_9 => ww_portadataout_9,
	portadataout_10 => ww_portadataout_10,
	portadataout_11 => ww_portadataout_11,
	portadataout_12 => ww_portadataout_12,
	portadataout_13 => ww_portadataout_13,
	portadataout_14 => ww_portadataout_14,
	portadataout_15 => ww_portadataout_15,
	portadataout_16 => ww_portadataout_16,
	portadataout_17 => ww_portadataout_17,
	portadataout_18 => ww_portadataout_18,
	portadataout_19 => ww_portadataout_19,
	portadataout_20 => ww_portadataout_20,
	portadataout_21 => ww_portadataout_21,
	portadataout_22 => ww_portadataout_22,
	portadataout_23 => ww_portadataout_23,
	portadataout_24 => ww_portadataout_24,
	portadataout_25 => ww_portadataout_25,
	portadataout_26 => ww_portadataout_26,
	portadataout_27 => ww_portadataout_27,
	portadataout_28 => ww_portadataout_28,
	portadataout_29 => ww_portadataout_29,
	portadataout_30 => ww_portadataout_30,
	portadataout_31 => ww_portadataout_31,
	sreg => ww_sreg1,
	sreg1 => ww_sreg2,
	send_ctrl => ww_send_ctrl1,
	muxsel1 => \inst11|muxsel1~reg\,
	q_8 => ww_q_81,
	q_0 => ww_q_01,
	muxsel0 => \inst11|muxsel0~reg\,
	dffs_0 => \lpm_shiftreg_component|dffs[0]~1\,
	muxsel3 => \inst11|muxsel3~reg\,
	muxsel2 => \inst11|muxsel2~reg\,
	cmd_snd0 => ww_cmd_snd0,
	dffs_1 => \lpm_shiftreg_component|dffs[1]\,
	q_9 => ww_q_91,
	q_1 => ww_q_13,
	cmd_snd1 => ww_cmd_snd1,
	dffs_2 => \lpm_shiftreg_component|dffs[2]\,
	SRG_8 => \inst_crc32|SRG[8]\,
	SRG_0 => \inst_crc32|SRG[0]\,
	SRG_24 => \inst_crc32|SRG[24]\,
	SRG_16 => \inst_crc32|SRG[16]\,
	dffs_01 => \lpm_shiftreg_component|dffs[0]~2\,
	dffs_02 => \lpm_shiftreg_component|dffs[0]~3\,
	q_2 => ww_q_21,
	dffs_21 => \lpm_shiftreg_component|dffs[2]~1\,
	dffs_22 => \lpm_shiftreg_component|dffs[2]~2\,
	dffs_3 => \lpm_shiftreg_component|dffs[3]\,
	SRG_7 => \inst_crc32|SRG[7]\,
	SRG_31 => \inst_crc32|SRG[31]\,
	SRG_23 => \inst_crc32|SRG[23]\,
	SRG_15 => \inst_crc32|SRG[15]\,
	dffs_11 => \lpm_shiftreg_component|dffs[1]~1\,
	dffs_12 => \lpm_shiftreg_component|dffs[1]~2\,
	SRG_9 => \inst_crc32|SRG[9]\,
	SRG_1 => \inst_crc32|SRG[1]\,
	SRG_25 => \inst_crc32|SRG[25]\,
	SRG_17 => \inst_crc32|SRG[17]\,
	dffs_31 => \lpm_shiftreg_component|dffs[3]~1\,
	dffs_32 => \lpm_shiftreg_component|dffs[3]~2\,
	q_3 => ww_q_31,
	dffs_4 => \lpm_shiftreg_component|dffs[4]\,
	SRG_6 => \inst_crc32|SRG[6]\,
	SRG_30 => \inst_crc32|SRG[30]\,
	SRG_22 => \inst_crc32|SRG[22]\,
	SRG_14 => \inst_crc32|SRG[14]\,
	SRG_10 => \inst_crc32|SRG[10]\,
	SRG_2 => \inst_crc32|SRG[2]\,
	SRG_26 => \inst_crc32|SRG[26]\,
	SRG_18 => \inst_crc32|SRG[18]\,
	dffs_41 => \lpm_shiftreg_component|dffs[4]~1\,
	dffs_42 => \lpm_shiftreg_component|dffs[4]~2\,
	q_4 => ww_q_41,
	dffs_5 => \lpm_shiftreg_component|dffs[5]\,
	SRG_5 => \inst_crc32|SRG[5]\,
	SRG_29 => \inst_crc32|SRG[29]\,
	SRG_21 => \inst_crc32|SRG[21]\,
	SRG_13 => \inst_crc32|SRG[13]\,
	dffs_51 => \lpm_shiftreg_component|dffs[5]~1\,
	dffs_52 => \lpm_shiftreg_component|dffs[5]~2\,
	SRG_11 => \inst_crc32|SRG[11]\,
	SRG_3 => \inst_crc32|SRG[3]\,
	SRG_27 => \inst_crc32|SRG[27]\,
	SRG_19 => \inst_crc32|SRG[19]\,
	cmd_snd3 => ww_cmd_snd3,
	q_5 => ww_q_51,
	dffs_6 => \lpm_shiftreg_component|dffs[6]\,
	SRG_4 => \inst_crc32|SRG[4]\,
	SRG_28 => \inst_crc32|SRG[28]\,
	SRG_20 => \inst_crc32|SRG[20]\,
	SRG_12 => \inst_crc32|SRG[12]\,
	dffs_61 => \lpm_shiftreg_component|dffs[6]~1\,
	dffs_62 => \lpm_shiftreg_component|dffs[6]~2\,
	q_6 => ww_q_61,
	dffs_7 => \lpm_shiftreg_component|dffs[7]\,
	q_7 => ww_q_71,
	dffs_71 => \lpm_shiftreg_component|dffs[7]~1\,
	dffs_72 => \lpm_shiftreg_component|dffs[7]~2\,
	dom_adr_en => \inst11|dom_adr_en~reg\,
	A_nB => ww_A_nB,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	result_node => \$00012|result_node~16\,
	result_node1 => \$00020|result_node~26\,
	result_node2 => \$00012|result_node~18\,
	result_node3 => \$00020|result_node~28\,
	result_node4 => \$00012|result_node~18_1\,
	result_node5 => \$00020|result_node~28_1\,
	result_node6 => \$00012|result_node~18_2\,
	result_node7 => \$00020|result_node~28_2\,
	result_node8 => \$00012|result_node~18_3\,
	result_node9 => \$00020|result_node~24\,
	result_node10 => \$00012|result_node~18_4\,
	result_node11 => \$00020|result_node~24_1\,
	result_node12 => \$00012|result_node~18_5\,
	result_node13 => \$00020|result_node~24_2\,
	result_node14 => \$00012|result_node~18_6\,
	result_node15 => \$00020|result_node~24_3\);
inst30 : shrg48pld_1
PORT MAP (
	clock => ww_CLK20,
	sload_path_47 => ww_sload_path_47,
	sload_path_46 => ww_sload_path_46,
	sload_path_45 => ww_sload_path_45,
	sload_path_44 => ww_sload_path_44,
	sload_path_43 => ww_sload_path_43,
	sload_path_42 => ww_sload_path_42,
	sload_path_41 => ww_sload_path_41,
	sload_path_40 => ww_sload_path_40,
	sload_path_39 => ww_sload_path_39,
	sload_path_38 => ww_sload_path_38,
	sload_path_37 => ww_sload_path_37,
	sload_path_36 => ww_sload_path_36,
	sload_path_35 => ww_sload_path_35,
	sload_path_34 => ww_sload_path_34,
	sload_path_33 => ww_sload_path_33,
	sload_path_32 => ww_sload_path_32,
	sload_path_31 => ww_sload_path_31,
	sload_path_30 => ww_sload_path_30,
	sload_path_29 => ww_sload_path_29,
	sload_path_28 => ww_sload_path_28,
	sload_path_27 => ww_sload_path_27,
	sload_path_26 => ww_sload_path_26,
	sload_path_25 => ww_sload_path_25,
	sload_path_24 => ww_sload_path_24,
	sload_path_23 => ww_sload_path_23,
	sload_path_22 => ww_sload_path_22,
	sload_path_21 => ww_sload_path_21,
	sload_path_20 => ww_sload_path_20,
	sload_path_19 => ww_sload_path_19,
	sload_path_18 => ww_sload_path_18,
	sload_path_17 => ww_sload_path_17,
	sload_path_16 => ww_sload_path_16,
	sload_path_15 => ww_sload_path_15,
	sload_path_14 => ww_sload_path_14,
	sload_path_13 => ww_sload_path_13,
	sload_path_12 => ww_sload_path_12,
	sload_path_11 => ww_sload_path_11,
	sload_path_10 => ww_sload_path_10,
	sload_path_9 => ww_sload_path_9,
	sload_path_8 => ww_sload_path_8,
	sload_path_7 => ww_sload_path_7,
	sload_path_6 => ww_sload_path_6,
	sload_path_5 => ww_sload_path_5,
	sload_path_4 => ww_sload_path_4,
	sload_path_3 => ww_sload_path_3,
	sload_path_2 => ww_sload_path_2,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	sreg => ww_sreg,
	enable => inst38,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	dffs_0 => \lpm_shiftreg_component|dffs[0]~3\,
	dffs_2 => \lpm_shiftreg_component|dffs[2]~2\,
	dffs_1 => \lpm_shiftreg_component|dffs[1]~2\,
	dffs_3 => \lpm_shiftreg_component|dffs[3]~2\,
	dffs_4 => \lpm_shiftreg_component|dffs[4]~2\,
	dffs_5 => \lpm_shiftreg_component|dffs[5]~2\,
	dffs_6 => \lpm_shiftreg_component|dffs[6]~2\,
	dffs_7 => \lpm_shiftreg_component|dffs[7]~2\);
inst : shrg48pld
PORT MAP (
	clock => ww_CLK20,
	sload_path_47 => ww_sload_path_47,
	sload_path_46 => ww_sload_path_46,
	sload_path_45 => ww_sload_path_45,
	sload_path_44 => ww_sload_path_44,
	sload_path_43 => ww_sload_path_43,
	sload_path_42 => ww_sload_path_42,
	sload_path_41 => ww_sload_path_41,
	sload_path_40 => ww_sload_path_40,
	sload_path_39 => ww_sload_path_39,
	sload_path_38 => ww_sload_path_38,
	sload_path_37 => ww_sload_path_37,
	sload_path_36 => ww_sload_path_36,
	sload_path_35 => ww_sload_path_35,
	sload_path_34 => ww_sload_path_34,
	sload_path_33 => ww_sload_path_33,
	sload_path_32 => ww_sload_path_32,
	sload_path_31 => ww_sload_path_31,
	sload_path_30 => ww_sload_path_30,
	sload_path_29 => ww_sload_path_29,
	sload_path_28 => ww_sload_path_28,
	sload_path_27 => ww_sload_path_27,
	sload_path_26 => ww_sload_path_26,
	sload_path_25 => ww_sload_path_25,
	sload_path_24 => ww_sload_path_24,
	sload_path_23 => ww_sload_path_23,
	sload_path_22 => ww_sload_path_22,
	sload_path_21 => ww_sload_path_21,
	sload_path_20 => ww_sload_path_20,
	sload_path_19 => ww_sload_path_19,
	sload_path_18 => ww_sload_path_18,
	sload_path_17 => ww_sload_path_17,
	sload_path_16 => ww_sload_path_16,
	sload_path_15 => ww_sload_path_15,
	sload_path_14 => ww_sload_path_14,
	sload_path_13 => ww_sload_path_13,
	sload_path_12 => ww_sload_path_12,
	sload_path_11 => ww_sload_path_11,
	sload_path_10 => ww_sload_path_10,
	sload_path_9 => ww_sload_path_9,
	sload_path_8 => ww_sload_path_8,
	sload_path_7 => ww_sload_path_7,
	sload_path_6 => ww_sload_path_6,
	sload_path_5 => ww_sload_path_5,
	sload_path_4 => ww_sload_path_4,
	sload_path_3 => ww_sload_path_3,
	sload_path_2 => ww_sload_path_2,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	tx_time_lat => ww_tx_time_lat,
	enable => inst36,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	dffs_0 => \lpm_shiftreg_component|dffs[0]~2\,
	dffs_2 => \lpm_shiftreg_component|dffs[2]~1\,
	dffs_1 => \lpm_shiftreg_component|dffs[1]~1\,
	dffs_3 => \lpm_shiftreg_component|dffs[3]~1\,
	dffs_4 => \lpm_shiftreg_component|dffs[4]~1\,
	dffs_5 => \lpm_shiftreg_component|dffs[5]~1\,
	dffs_6 => \lpm_shiftreg_component|dffs[6]~1\,
	dffs_7 => \lpm_shiftreg_component|dffs[7]~1\);
inst4 : shrg48pld_2
PORT MAP (
	clock => ww_CLK20,
	sreg => \inst11|sreg~46\,
	dom_id_0 => ww_dom_id_0,
	enable => inst37,
	dom_id_1 => ww_dom_id_1,
	dom_id_2 => ww_dom_id_2,
	dom_id_3 => ww_dom_id_3,
	dom_id_4 => ww_dom_id_4,
	dom_id_5 => ww_dom_id_5,
	dom_id_6 => ww_dom_id_6,
	dom_id_7 => ww_dom_id_7,
	dom_id_8 => ww_dom_id_8,
	dom_id_9 => ww_dom_id_9,
	dom_id_10 => ww_dom_id_10,
	dom_id_11 => ww_dom_id_11,
	dom_id_12 => ww_dom_id_12,
	dom_id_13 => ww_dom_id_13,
	dom_id_14 => ww_dom_id_14,
	dom_id_15 => ww_dom_id_15,
	dom_id_16 => ww_dom_id_16,
	dom_id_17 => ww_dom_id_17,
	dom_id_18 => ww_dom_id_18,
	dom_id_19 => ww_dom_id_19,
	dom_id_20 => ww_dom_id_20,
	dom_id_21 => ww_dom_id_21,
	dom_id_22 => ww_dom_id_22,
	dom_id_23 => ww_dom_id_23,
	dom_id_24 => ww_dom_id_24,
	dom_id_25 => ww_dom_id_25,
	dom_id_26 => ww_dom_id_26,
	dom_id_27 => ww_dom_id_27,
	dom_id_28 => ww_dom_id_28,
	dom_id_29 => ww_dom_id_29,
	dom_id_30 => ww_dom_id_30,
	dom_id_31 => ww_dom_id_31,
	dom_id_32 => ww_dom_id_32,
	dom_id_33 => ww_dom_id_33,
	dom_id_34 => ww_dom_id_34,
	dom_id_35 => ww_dom_id_35,
	dom_id_36 => ww_dom_id_36,
	dom_id_37 => ww_dom_id_37,
	dom_id_38 => ww_dom_id_38,
	dom_id_39 => ww_dom_id_39,
	dom_id_40 => ww_dom_id_40,
	dom_id_41 => ww_dom_id_41,
	dom_id_42 => ww_dom_id_42,
	dom_id_43 => ww_dom_id_43,
	dom_id_44 => ww_dom_id_44,
	dom_id_45 => ww_dom_id_45,
	dom_id_46 => ww_dom_id_46,
	dom_id_47 => ww_dom_id_47,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	dffs_0 => \lpm_shiftreg_component|dffs[0]~1\,
	dffs_1 => \lpm_shiftreg_component|dffs[1]\,
	dffs_2 => \lpm_shiftreg_component|dffs[2]\,
	dffs_3 => \lpm_shiftreg_component|dffs[3]\,
	dffs_4 => \lpm_shiftreg_component|dffs[4]\,
	dffs_5 => \lpm_shiftreg_component|dffs[5]\,
	dffs_6 => \lpm_shiftreg_component|dffs[6]\,
	dffs_7 => \lpm_shiftreg_component|dffs[7]\);
inst8 : tx_plen_ct_ap
PORT MAP (
	clock => ww_CLK20,
	portadataout_2 => ww_portadataout_2,
	portadataout_3 => ww_portadataout_3,
	portadataout_4 => ww_portadataout_4,
	portadataout_5 => ww_portadataout_5,
	portadataout_6 => ww_portadataout_6,
	portadataout_7 => ww_portadataout_7,
	portadataout_8 => ww_portadataout_8,
	portadataout_9 => ww_portadataout_9,
	portadataout_10 => ww_portadataout_10,
	portadataout_11 => ww_portadataout_11,
	sreg => \inst11|sreg~53\,
	sreg1 => \inst11|sreg~50\,
	clk_en => \inst11|plen_clk_en~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	the_carries_10 => \wysi_counter|the_carries[10]~0\);
inst33 : shift_ct_1
PORT MAP (
	clock => ww_CLK20,
	aclr => \inst11|sreg~53\,
	clk_en => \inst11|shift_ct_en~reg\,
	cout => \wysi_counter|cout~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	cout1 => \wysi_counter|cout~0_1\);
inst32 : shift_ct
PORT MAP (
	clock => ww_CLK20,
	aclr => \inst11|sreg~53\,
	clk_en => \inst11|shift_ct_en~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	cout => \wysi_counter|cout~0\);
inst1 : my_or16b_1
PORT MAP (
	sload_path_0 => \wysi_counter|sload_path[0]\,
	pre_out_1 => \wysi_counter|pre_out[1]\,
	pre_out_2 => \wysi_counter|pre_out[2]\,
	pre_out_3 => \wysi_counter|pre_out[3]\,
	pre_out_4 => \wysi_counter|pre_out[4]\,
	pre_out_5 => \wysi_counter|pre_out[5]\,
	pre_out_6 => \wysi_counter|pre_out[6]\,
	pre_out_7 => \wysi_counter|pre_out[7]\,
	pre_out_8 => \wysi_counter|pre_out[8]\,
	pre_out_9 => \wysi_counter|pre_out[9]\,
	pre_out_10 => \wysi_counter|pre_out[10]\,
	pre_out_11 => \wysi_counter|pre_out[11]\,
	pre_out_12 => \wysi_counter|pre_out[12]\,
	pre_out_13 => \wysi_counter|pre_out[13]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	or_node_6_0 => ww_or_node_6_0);
inst39 : tx_packet_ct
PORT MAP (
	clock => ww_CLK20,
	aclr => ww_buf_res,
	updown => inst46,
	clk_en => inst48,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_0 => \wysi_counter|sload_path[0]\,
	pre_out_1 => \wysi_counter|pre_out[1]\,
	pre_out_2 => \wysi_counter|pre_out[2]\,
	pre_out_3 => \wysi_counter|pre_out[3]\,
	pre_out_4 => \wysi_counter|pre_out[4]\,
	pre_out_5 => \wysi_counter|pre_out[5]\,
	pre_out_6 => \wysi_counter|pre_out[6]\,
	pre_out_7 => \wysi_counter|pre_out[7]\,
	pre_out_8 => \wysi_counter|pre_out[8]\,
	pre_out_9 => \wysi_counter|pre_out[9]\,
	pre_out_10 => \wysi_counter|pre_out[10]\,
	pre_out_11 => \wysi_counter|pre_out[11]\,
	pre_out_12 => \wysi_counter|pre_out[12]\,
	pre_out_13 => \wysi_counter|pre_out[13]\,
	pre_out_14 => ww_pre_out_14,
	pre_out_15 => ww_pre_out_15);
inst15 : dac_rs_tab_rect_01
PORT MAP (
	sload_path_4 => \wysi_counter|sload_path[4]\,
	sload_path_3 => \wysi_counter|sload_path[3]\,
	sload_path_2 => \wysi_counter|sload_path[2]\,
	sload_path_1 => \wysi_counter|sload_path[1]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	dac_d_6 => \inst15|dac_d[6]~675\,
	dac_d_0 => \inst15|dac_d[0]~678\);
inst6 : Tx_dpr_ctrl_ap
PORT MAP (
	CLK20 => ww_CLK20,
	buf_res => ww_buf_res,
	tx_dpr_ren => \inst11|dpr_ren~reg\,
	tx_dpr_wadr_local_0 => ww_tx_dpr_wadr_local_0,
	tx_dpr_wadr_local_1 => ww_tx_dpr_wadr_local_1,
	tx_dpr_wadr_local_2 => ww_tx_dpr_wadr_local_2,
	tx_dpr_wadr_local_3 => ww_tx_dpr_wadr_local_3,
	tx_dpr_wadr_local_4 => ww_tx_dpr_wadr_local_4,
	tx_dpr_wadr_local_5 => ww_tx_dpr_wadr_local_5,
	tx_dpr_wadr_local_6 => ww_tx_dpr_wadr_local_6,
	tx_dpr_wadr_local_7 => ww_tx_dpr_wadr_local_7,
	tx_dpr_wadr_local_8 => ww_tx_dpr_wadr_local_8,
	tx_dpr_wadr_local_9 => ww_tx_dpr_wadr_local_9,
	tx_dpr_wadr_local_10 => ww_tx_dpr_wadr_local_10,
	tx_dpr_wadr_local_11 => ww_tx_dpr_wadr_local_11,
	tx_dpr_wadr_local_12 => ww_tx_dpr_wadr_local_12,
	tx_dpr_wadr_local_13 => ww_tx_dpr_wadr_local_13,
	tx_dpr_wadr_local_14 => ww_tx_dpr_wadr_local_14,
	tx_dpr_wadr_local_15 => ww_tx_dpr_wadr_local_15,
	tx_pack_ct_up => inst46,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	q_15 => \wysi_counter|q[15]\,
	q_14 => \wysi_counter|q[14]\,
	q_13 => \wysi_counter|q[13]\,
	q_12 => ww_q_12,
	q_11 => ww_q_11,
	q_10 => ww_q_10,
	q_9 => ww_q_9,
	q_8 => ww_q_8,
	q_7 => ww_q_7,
	q_6 => ww_q_6,
	q_5 => ww_q_5,
	q_4 => ww_q_4,
	q_3 => ww_q_3,
	q_2 => ww_q_2,
	q_1 => ww_q_1,
	q_0 => ww_q_0,
	op_6 => ww_op_6);

\inst44~I\ : apex20ke_lcell 
-- Equation(s):
-- inst44 = DFFE(tx_pack_rdy, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_tx_pack_rdy,
	clk => ww_CLK20,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => inst44);

\inst46~I\ : apex20ke_lcell 
-- Equation(s):
-- inst46 = !inst44 & tx_pack_rdy

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => inst44,
	datad => ww_tx_pack_rdy,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => inst46);

\inst48~I\ : apex20ke_lcell 
-- Equation(s):
-- inst48 = inst46 $ (send_data & msg_sent & !send_ctrl)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CC6C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_send_data,
	datab => inst46,
	datac => ww_msg_sent,
	datad => ww_send_ctrl,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => inst48);

\inst37~I\ : apex20ke_lcell 
-- Equation(s):
-- inst37 = sreg7 # sreg9

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \inst11|sreg~46\,
	datad => \inst11|sreg~47\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => inst37);

\inst36~I\ : apex20ke_lcell 
-- Equation(s):
-- inst36 = tx_time_lat # sreg5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_tx_time_lat,
	datad => \inst11|sreg~59\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => inst36);

\inst38~I\ : apex20ke_lcell 
-- Equation(s):
-- inst38 = sreg # sreg4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_sreg,
	datad => \inst11|sreg~52\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => inst38);

\inst23[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst23_7 = DFFE(!l_pulse & (h_pulse # dac_d_6 # !dffs_0), !GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F0D",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \lpm_shiftreg_component|dffs[0]\,
	datab => ww_h_pulse,
	datac => ww_l_pulse,
	datad => \inst15|dac_d[6]~675\,
	clk => ALT_NOT_ww_CLK20,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst23_7);

\inst23[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst23_6 = DFFE(!l_pulse & (h_pulse # dffs_0 & dac_d_6), !GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0E0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \lpm_shiftreg_component|dffs[0]\,
	datab => ww_h_pulse,
	datac => ww_l_pulse,
	datad => \inst15|dac_d[6]~675\,
	clk => ALT_NOT_ww_CLK20,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst23_6);

\inst23[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst23_0 = DFFE(l_pulse & !h_pulse # !l_pulse & (h_pulse # dffs_0 & dac_d_0), !GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "7666",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_l_pulse,
	datab => ww_h_pulse,
	datac => \lpm_shiftreg_component|dffs[0]\,
	datad => \inst15|dac_d[0]~678\,
	clk => ALT_NOT_ww_CLK20,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst23_0);

\inst16[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst16_0 = DFFE(q_0, GLOBAL(outclock0), !buf_res, , inst50)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_0,
	clk => ww_CLK20,
	aclr => ww_buf_res,
	ena => ww_inst50,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst16_0);

\inst50~I\ : apex20ke_lcell 
-- Equation(s):
-- inst50 = !send_ctrl & send_data & msg_sent

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "4040",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_send_ctrl,
	datab => ww_send_data,
	datac => ww_msg_sent,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_inst50);

\inst16[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst16_1 = DFFE(q_1, GLOBAL(outclock0), !buf_res, , inst50)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_1,
	clk => ww_CLK20,
	aclr => ww_buf_res,
	ena => ww_inst50,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst16_1);

\inst16[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst16_2 = DFFE(q_2, GLOBAL(outclock0), !buf_res, , inst50)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_2,
	clk => ww_CLK20,
	aclr => ww_buf_res,
	ena => ww_inst50,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst16_2);

\inst16[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst16_3 = DFFE(q_3, GLOBAL(outclock0), !buf_res, , inst50)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_3,
	clk => ww_CLK20,
	aclr => ww_buf_res,
	ena => ww_inst50,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst16_3);

\inst16[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst16_4 = DFFE(q_4, GLOBAL(outclock0), !buf_res, , inst50)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_4,
	clk => ww_CLK20,
	aclr => ww_buf_res,
	ena => ww_inst50,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst16_4);

\inst16[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst16_5 = DFFE(q_5, GLOBAL(outclock0), !buf_res, , inst50)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_5,
	clk => ww_CLK20,
	aclr => ww_buf_res,
	ena => ww_inst50,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst16_5);

\inst16[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst16_6 = DFFE(q_6, GLOBAL(outclock0), !buf_res, , inst50)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_6,
	clk => ww_CLK20,
	aclr => ww_buf_res,
	ena => ww_inst50,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst16_6);

\inst16[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst16_7 = DFFE(q_7, GLOBAL(outclock0), !buf_res, , inst50)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_7,
	clk => ww_CLK20,
	aclr => ww_buf_res,
	ena => ww_inst50,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst16_7);

\inst16[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst16_8 = DFFE(q_8, GLOBAL(outclock0), !buf_res, , inst50)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_8,
	clk => ww_CLK20,
	aclr => ww_buf_res,
	ena => ww_inst50,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst16_8);

\inst16[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst16_9 = DFFE(q_9, GLOBAL(outclock0), !buf_res, , inst50)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_9,
	clk => ww_CLK20,
	aclr => ww_buf_res,
	ena => ww_inst50,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst16_9);

\inst16[10]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst16_10 = DFFE(q_10, GLOBAL(outclock0), !buf_res, , inst50)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_10,
	clk => ww_CLK20,
	aclr => ww_buf_res,
	ena => ww_inst50,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst16_10);

\inst16[11]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst16_11 = DFFE(q_11, GLOBAL(outclock0), !buf_res, , inst50)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_q_11,
	clk => ww_CLK20,
	aclr => ww_buf_res,
	ena => ww_inst50,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst16_11);

\inst16[12]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst16_12 = DFFE(q_12, GLOBAL(outclock0), !buf_res, , inst50)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_12,
	clk => ww_CLK20,
	aclr => ww_buf_res,
	ena => ww_inst50,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst16_12);

\inst16[13]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst16_13 = DFFE(q_13, GLOBAL(outclock0), !buf_res, , inst50)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|q[13]\,
	clk => ww_CLK20,
	aclr => ww_buf_res,
	ena => ww_inst50,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst16_13);

\inst16[14]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst16_14 = DFFE(q_14, GLOBAL(outclock0), !buf_res, , inst50)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|q[14]\,
	clk => ww_CLK20,
	aclr => ww_buf_res,
	ena => ww_inst50,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst16_14);

\inst16[15]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst16_15 = DFFE(q_15, GLOBAL(outclock0), !buf_res, , inst50)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|q[15]\,
	clk => ww_CLK20,
	aclr => ww_buf_res,
	ena => ww_inst50,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst16_15);

\inst9~I\ : apex20ke_lcell 
-- Equation(s):
-- inst9 = DFFE(dom_id_481, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_dom_id_48,
	clk => ww_CLK20,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst9);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	DC_CTRAP IS
    PORT (
	pre_out_14 : IN std_logic;
	pre_out_15 : IN std_logic;
	CLK : IN std_logic;
	sload_path_5 : IN std_logic;
	pulse_sent : IN std_logic;
	pulse_rcvd : IN std_logic;
	tcal_rcvd : IN std_logic;
	idle_rcvd : IN std_logic;
	drreq_rcvd : IN std_logic;
	com_ctrl_local_2 : IN std_logic;
	sysres_rcvd : IN std_logic;
	RST : IN std_logic;
	stf_stb : IN std_logic;
	comres_rcvd : IN std_logic;
	msg_sent : IN std_logic;
	\_\ : IN std_logic;
	del_15us : IN std_logic;
	data_rcvd : IN std_logic;
	inst9 : IN std_logic;
	idreq_rcvd : IN std_logic;
	bfstat_rcvd : IN std_logic;
	op_6 : IN std_logic;
	op_61 : IN std_logic;
	or_node_6_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	COMM_RESET : OUT std_logic;
	buf_res : OUT std_logic;
	tcal_psnd : OUT std_logic;
	timer_clrn : OUT std_logic;
	send_data : OUT std_logic;
	send_ctrl : OUT std_logic;
	reboot_gnt : OUT std_logic;
	com_avail : OUT std_logic;
	sreg : OUT std_logic;
	sreg1 : OUT std_logic;
	sreg2 : OUT std_logic;
	send_ctrl1 : OUT std_logic;
	cmd_snd0 : OUT std_logic;
	cmd_snd1 : OUT std_logic;
	cmd_snd3 : OUT std_logic
	);
END DC_CTRAP;

ARCHITECTURE structure OF DC_CTRAP IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_pre_out_14 : std_logic;
SIGNAL ww_pre_out_15 : std_logic;
SIGNAL ww_CLK : std_logic;
SIGNAL ww_sload_path_5 : std_logic;
SIGNAL ww_pulse_sent : std_logic;
SIGNAL ww_pulse_rcvd : std_logic;
SIGNAL ww_tcal_rcvd : std_logic;
SIGNAL ww_idle_rcvd : std_logic;
SIGNAL ww_drreq_rcvd : std_logic;
SIGNAL ww_com_ctrl_local_2 : std_logic;
SIGNAL ww_sysres_rcvd : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_stf_stb : std_logic;
SIGNAL ww_comres_rcvd : std_logic;
SIGNAL ww_msg_sent : std_logic;
SIGNAL \ww_\ : std_logic;
SIGNAL ww_del_15us : std_logic;
SIGNAL ww_data_rcvd : std_logic;
SIGNAL ww_inst9 : std_logic;
SIGNAL ww_idreq_rcvd : std_logic;
SIGNAL ww_bfstat_rcvd : std_logic;
SIGNAL ww_op_6 : std_logic;
SIGNAL ww_op_61 : std_logic;
SIGNAL ww_or_node_6_0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_COMM_RESET : std_logic;
SIGNAL ww_buf_res : std_logic;
SIGNAL ww_tcal_psnd : std_logic;
SIGNAL ww_timer_clrn : std_logic;
SIGNAL ww_send_data : std_logic;
SIGNAL ww_send_ctrl : std_logic;
SIGNAL ww_reboot_gnt : std_logic;
SIGNAL ww_com_avail : std_logic;
SIGNAL ww_sreg : std_logic;
SIGNAL ww_sreg1 : std_logic;
SIGNAL ww_sreg2 : std_logic;
SIGNAL ww_send_ctrl1 : std_logic;
SIGNAL ww_cmd_snd0 : std_logic;
SIGNAL ww_cmd_snd1 : std_logic;
SIGNAL ww_cmd_snd3 : std_logic;
SIGNAL \_~2004_1\ : std_logic;
SIGNAL \CMD_WAIT~236_1\ : std_logic;
SIGNAL \CMD_WAIT~240_1\ : std_logic;
SIGNAL \_~24_1\ : std_logic;
SIGNAL \_~1996\ : std_logic;
SIGNAL \_~1994\ : std_logic;
SIGNAL \sreg~41\ : std_logic;
SIGNAL \SND_IDLE~52\ : std_logic;
SIGNAL \sreg~44\ : std_logic;
SIGNAL \_~1998\ : std_logic;
SIGNAL \_~1997\ : std_logic;
SIGNAL \sreg~46\ : std_logic;
SIGNAL \_~1999\ : std_logic;
SIGNAL \sreg~45\ : std_logic;
SIGNAL \CMD_WAIT~225\ : std_logic;
SIGNAL \CMD_WAIT~224\ : std_logic;
SIGNAL \CMD_WAIT~226\ : std_logic;
SIGNAL \CMD_WAIT~236\ : std_logic;
SIGNAL \CMD_WAIT~240\ : std_logic;
SIGNAL \CMD_WAIT~239\ : std_logic;
SIGNAL \sreg~32\ : std_logic;
SIGNAL \sreg~36\ : std_logic;
SIGNAL \CRES_WAIT~27\ : std_logic;
SIGNAL \sreg~33\ : std_logic;
SIGNAL \tcal_psnd~28\ : std_logic;
SIGNAL \SEND_WT~28\ : std_logic;
SIGNAL \sreg~39\ : std_logic;
SIGNAL \timer_clrn~54\ : std_logic;
SIGNAL \timer_clrn~53\ : std_logic;
SIGNAL \sreg~38\ : std_logic;
SIGNAL \_~1992\ : std_logic;
SIGNAL \_~1993\ : std_logic;
SIGNAL \_~2000\ : std_logic;
SIGNAL \sreg~42\ : std_logic;
SIGNAL \_~2003\ : std_logic;
SIGNAL \send_data~1\ : std_logic;
SIGNAL \SND_DRBT~2\ : std_logic;
SIGNAL \SV8~80\ : std_logic;
SIGNAL \SND_MRWB~2\ : std_logic;
SIGNAL \SND_MRNB~2\ : std_logic;
SIGNAL \SEND_WT~29\ : std_logic;
SIGNAL \_~1995\ : std_logic;
SIGNAL \SND_ID~2\ : std_logic;
SIGNAL \SND_DRAND~2\ : std_logic;
SIGNAL \SV8~79\ : std_logic;
SIGNAL SV8 : std_logic;
SIGNAL \DRREQ_WT~27\ : std_logic;
SIGNAL \sreg~35\ : std_logic;
SIGNAL \SND_TC_DAT~36\ : std_logic;
SIGNAL \tcal_psnd~30\ : std_logic;
SIGNAL \COMM_RESET~1\ : std_logic;
SIGNAL SV3 : std_logic;
SIGNAL \REC_WT~2\ : std_logic;
SIGNAL \REC_PULSE~36\ : std_logic;
SIGNAL \REC_PULSE~37\ : std_logic;
SIGNAL \SV9~70\ : std_logic;
SIGNAL \SND_IDLE~2\ : std_logic;
SIGNAL \DRREQ_WT~28\ : std_logic;
SIGNAL \PON~2\ : std_logic;
SIGNAL \SV9~69\ : std_logic;
SIGNAL SV9 : std_logic;
SIGNAL \_~49\ : std_logic;
SIGNAL \SV8~81\ : std_logic;
SIGNAL \CMD_WAIT~227\ : std_logic;
SIGNAL \SND_TC_DAT~34\ : std_logic;
SIGNAL \SND_TC_DAT~35\ : std_logic;
SIGNAL \reboot_gnt~31\ : std_logic;
SIGNAL \SV11~62\ : std_logic;
SIGNAL \SV11~63\ : std_logic;
SIGNAL SV11 : std_logic;
SIGNAL \SV10~69\ : std_logic;
SIGNAL \CRES_WAIT~28\ : std_logic;
SIGNAL \SV10~70\ : std_logic;
SIGNAL SV10 : std_logic;
SIGNAL \_~2004\ : std_logic;
SIGNAL \_~2009\ : std_logic;
SIGNAL \COM_ON~94\ : std_logic;
SIGNAL \CMD_WAIT~235\ : std_logic;
SIGNAL \send_ctrl~144\ : std_logic;
SIGNAL \send_ctrl~145\ : std_logic;
SIGNAL \cmd_snd0~78\ : std_logic;
SIGNAL \cmd_snd0~79\ : std_logic;
SIGNAL \_~2006\ : std_logic;
SIGNAL \cmd_snd0~80\ : std_logic;
SIGNAL \cmd_snd0~84\ : std_logic;
SIGNAL \_~2008\ : std_logic;
SIGNAL \_~24\ : std_logic;
SIGNAL \cmd_snd0~86\ : std_logic;
SIGNAL \send_ctrl~147\ : std_logic;
SIGNAL \cmd_snd1~90\ : std_logic;
SIGNAL \cmd_snd1~91\ : std_logic;
SIGNAL \cmd_snd3~111\ : std_logic;
SIGNAL \cmd_snd3~112\ : std_logic;

BEGIN

ww_pre_out_14 <= pre_out_14;
ww_pre_out_15 <= pre_out_15;
ww_CLK <= CLK;
ww_sload_path_5 <= sload_path_5;
ww_pulse_sent <= pulse_sent;
ww_pulse_rcvd <= pulse_rcvd;
ww_tcal_rcvd <= tcal_rcvd;
ww_idle_rcvd <= idle_rcvd;
ww_drreq_rcvd <= drreq_rcvd;
ww_com_ctrl_local_2 <= com_ctrl_local_2;
ww_sysres_rcvd <= sysres_rcvd;
ww_RST <= RST;
ww_stf_stb <= stf_stb;
ww_comres_rcvd <= comres_rcvd;
ww_msg_sent <= msg_sent;
\ww_\ <= \_\;
ww_del_15us <= del_15us;
ww_data_rcvd <= data_rcvd;
ww_inst9 <= inst9;
ww_idreq_rcvd <= idreq_rcvd;
ww_bfstat_rcvd <= bfstat_rcvd;
ww_op_6 <= op_6;
ww_op_61 <= op_61;
ww_or_node_6_0 <= or_node_6_0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
COMM_RESET <= ww_COMM_RESET;
buf_res <= ww_buf_res;
tcal_psnd <= ww_tcal_psnd;
timer_clrn <= ww_timer_clrn;
send_data <= ww_send_data;
send_ctrl <= ww_send_ctrl;
reboot_gnt <= ww_reboot_gnt;
com_avail <= ww_com_avail;
sreg <= ww_sreg;
sreg1 <= ww_sreg1;
sreg2 <= ww_sreg2;
send_ctrl1 <= ww_send_ctrl1;
cmd_snd0 <= ww_cmd_snd0;
cmd_snd1 <= ww_cmd_snd1;
cmd_snd3 <= ww_cmd_snd3;

\COMM_RESET~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- COMM_RESET = DFFE(!RST & (COMM_RESET # sysres_rcvd & \sreg~32\), GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00EA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_COMM_RESET,
	datab => ww_sysres_rcvd,
	datac => \sreg~32\,
	datad => ww_RST,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_COMM_RESET);

\buf_res~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- buf_res = DFFE(!RST & comres_rcvd & (\sreg~33\ # \sreg~32\), GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3020",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~33\,
	datab => ww_RST,
	datac => ww_comres_rcvd,
	datad => \sreg~32\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_buf_res);

\tcal_psnd~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- tcal_psnd = DFFE(!RST & (\tcal_psnd~28\ # del_15us & \sreg~39\), GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3230",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_del_15us,
	datab => ww_RST,
	datac => \tcal_psnd~28\,
	datad => \sreg~39\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_tcal_psnd);

\timer_clrn~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- timer_clrn = DFFE(!RST & (\timer_clrn~54\ # \timer_clrn~53\ # \_~1992\), GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3332",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \timer_clrn~54\,
	datab => ww_RST,
	datac => \timer_clrn~53\,
	datad => \_~1992\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_timer_clrn);

\send_data~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- send_data = DFFE(send_ctrl & \_~1993\ & send_data # !send_ctrl & (\_~1994\ # \_~1993\ & send_data), GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F444",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_send_ctrl,
	datab => \_~1994\,
	datac => \_~1993\,
	datad => ww_send_data,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_send_data);

\send_ctrl~143_I\ : apex20ke_lcell 
-- Equation(s):
-- send_ctrl = !or_node_6_0 & !pre_out_14 & !pre_out_15

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0003",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_or_node_6_0,
	datac => ww_pre_out_14,
	datad => ww_pre_out_15,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_send_ctrl);

\reboot_gnt~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- reboot_gnt = DFFE(!RST & (reboot_gnt # msg_sent & \sreg~42\), GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5450",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_RST,
	datab => ww_msg_sent,
	datac => ww_reboot_gnt,
	datad => \sreg~42\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_reboot_gnt);

\com_avail~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- com_avail = DFFE(\_~2009\ # com_avail & (SV8 # \COM_ON~94\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EEEC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_com_avail,
	datab => \_~2009\,
	datac => SV8,
	datad => \COM_ON~94\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_com_avail);

\sreg~37_I\ : apex20ke_lcell 
-- Equation(s):
-- sreg = DFFE(!RST & (\REC_PULSE~36\ # del_15us & \sreg~38\), GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00EA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \REC_PULSE~36\,
	datab => ww_del_15us,
	datac => \sreg~38\,
	datad => ww_RST,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sreg);

\sreg~48_I\ : apex20ke_lcell 
-- Equation(s):
-- sreg1 = DFFE(!RST & (\SND_TC_DAT~34\ # drreq_rcvd & \sreg~35\), GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3230",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_drreq_rcvd,
	datab => ww_RST,
	datac => \SND_TC_DAT~34\,
	datad => \sreg~35\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sreg1);

\sreg~43_I\ : apex20ke_lcell 
-- Equation(s):
-- sreg2 = DFFE(\_~1995\ # sreg2 & !msg_sent & !RST, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CCCE",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg2,
	datab => \_~1995\,
	datac => ww_msg_sent,
	datad => ww_RST,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sreg2);

\send_ctrl~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- send_ctrl1 = DFFE(!RST & (buf_res # \send_ctrl~144\ # \send_ctrl~145\), GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5554",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_RST,
	datab => ww_buf_res,
	datac => \send_ctrl~144\,
	datad => \send_ctrl~145\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_send_ctrl1);

\cmd_snd0~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- cmd_snd0 = DFFE(\cmd_snd0~80\ # \cmd_snd0~86\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFCC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cmd_snd0~80\,
	datad => \cmd_snd0~86\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_cmd_snd0);

\cmd_snd1~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- cmd_snd1 = DFFE(!RST & (\cmd_snd1~91\ # buf_res), GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5550",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_RST,
	datac => \cmd_snd1~91\,
	datad => ww_buf_res,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_cmd_snd1);

\cmd_snd3~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- cmd_snd3 = DFFE(\cmd_snd3~112\ # !msg_sent & !RST & \sreg~44\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF10",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_msg_sent,
	datab => ww_RST,
	datac => \sreg~44\,
	datad => \cmd_snd3~112\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_cmd_snd3);

\_~1996_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~1996\ = !msg_sent & !RST & \sreg~41\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0500",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_msg_sent,
	datac => ww_RST,
	datad => \sreg~41\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~1996\);

\_~1994_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~1994\ = drreq_rcvd & !RST & \sreg~32\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0C00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_drreq_rcvd,
	datac => ww_RST,
	datad => \sreg~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~1994\);

\sreg~41_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~41\ = DFFE(\_~1996\ # !com_ctrl_local_2 & \_~1994\ & send_ctrl, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DCCC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_com_ctrl_local_2,
	datab => \_~1996\,
	datac => \_~1994\,
	datad => ww_send_ctrl,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~41\);

\SND_IDLE~52_I\ : apex20ke_lcell 
-- Equation(s):
-- \SND_IDLE~52\ = !RST & (buf_res # idle_rcvd & \sreg~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00F8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_idle_rcvd,
	datab => \sreg~32\,
	datac => ww_buf_res,
	datad => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SND_IDLE~52\);

\sreg~44_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~44\ = DFFE(\SND_IDLE~52\ # \sreg~44\ & !RST & !msg_sent, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CCCE",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~44\,
	datab => \SND_IDLE~52\,
	datac => ww_RST,
	datad => ww_msg_sent,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~44\);

\_~1998_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~1998\ = !RST & \sreg~32\ & (data_rcvd # bfstat_rcvd)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5040",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_RST,
	datab => ww_data_rcvd,
	datac => \sreg~32\,
	datad => ww_bfstat_rcvd,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~1998\);

\_~1997_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~1997\ = !RST & \sreg~46\ & !msg_sent

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0030",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_RST,
	datac => \sreg~46\,
	datad => ww_msg_sent,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~1997\);

\sreg~46_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~46\ = DFFE(\_~1997\ # !op_62 & \_~1998\ & !op_61, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F4",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_op_61,
	datab => \_~1998\,
	datac => \_~1997\,
	datad => ww_op_6,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~46\);

\_~1999_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~1999\ = !msg_sent & !RST & \sreg~45\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0300",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_msg_sent,
	datac => ww_RST,
	datad => \sreg~45\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~1999\);

\sreg~45_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~45\ = DFFE(\_~1999\ # \_~1998\ & (op_62 # op_61), GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FCF8",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_op_61,
	datab => \_~1998\,
	datac => \_~1999\,
	datad => ww_op_6,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~45\);

\CMD_WAIT~225_I\ : apex20ke_lcell 
-- Equation(s):
-- \CMD_WAIT~225\ = !\sreg~41\ & !\sreg~44\ & !\sreg~46\ & !\sreg~45\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~41\,
	datab => \sreg~44\,
	datac => \sreg~46\,
	datad => \sreg~45\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \CMD_WAIT~225\);

\CMD_WAIT~224_I\ : apex20ke_lcell 
-- Equation(s):
-- \CMD_WAIT~224\ = stf_stb & sreg

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_stf_stb,
	datad => ww_sreg,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \CMD_WAIT~224\);

\CMD_WAIT~226_I\ : apex20ke_lcell 
-- Equation(s):
-- \CMD_WAIT~226\ = \CMD_WAIT~224\ # msg_sent & (!\_\ # !\CMD_WAIT~225\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF4C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \CMD_WAIT~225\,
	datab => ww_msg_sent,
	datac => \ww_\,
	datad => \CMD_WAIT~224\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \CMD_WAIT~226\);

\CMD_WAIT~236_I\ : apex20ke_lcell 
-- Equation(s):
-- \CMD_WAIT~236\ = !sysres_rcvd & !drreq_rcvd & (!inst9 # !idreq_rcvd)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0111",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_sysres_rcvd,
	datab => ww_drreq_rcvd,
	datac => ww_idreq_rcvd,
	datad => ww_inst9,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \CMD_WAIT~236\);

\CMD_WAIT~240_I\ : apex20ke_lcell 
-- Equation(s):
-- \CMD_WAIT~240\ = (\sreg~32\ & !comres_rcvd) & CASCADE(\CMD_WAIT~236\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00F0",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	datac => \sreg~32\,
	datad => ww_comres_rcvd,
	cascin => \CMD_WAIT~236\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \CMD_WAIT~240\);

\CMD_WAIT~239_I\ : apex20ke_lcell 
-- Equation(s):
-- \CMD_WAIT~239\ = (!tcal_rcvd & !data_rcvd & !idle_rcvd & !bfstat_rcvd) & CASCADE(\CMD_WAIT~240\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_tcal_rcvd,
	datab => ww_data_rcvd,
	datac => ww_idle_rcvd,
	datad => ww_bfstat_rcvd,
	cascin => \CMD_WAIT~240\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \CMD_WAIT~239\);

\sreg~32_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~32\ = DFFE(!RST & (\CMD_WAIT~226\ # \CMD_WAIT~239\), GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \CMD_WAIT~226\,
	datac => ww_RST,
	datad => \CMD_WAIT~239\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~32\);

\sreg~36_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~36\ = DFFE(RST # \sreg~36\ & !sload_path_5, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AAFA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_RST,
	datac => \sreg~36\,
	datad => ww_sload_path_5,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~36\);

\CRES_WAIT~27_I\ : apex20ke_lcell 
-- Equation(s):
-- \CRES_WAIT~27\ = !comres_rcvd & \sreg~33\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_comres_rcvd,
	datad => \sreg~33\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \CRES_WAIT~27\);

\sreg~33_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~33\ = DFFE(!RST & (\CRES_WAIT~27\ # \sreg~36\ & sload_path_5), GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5450",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_RST,
	datab => \sreg~36\,
	datac => \CRES_WAIT~27\,
	datad => ww_sload_path_5,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~33\);

\tcal_psnd~28_I\ : apex20ke_lcell 
-- Equation(s):
-- \tcal_psnd~28\ = tcal_psnd & !pulse_sent

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00CC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_tcal_psnd,
	datad => ww_pulse_sent,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \tcal_psnd~28\);

\SEND_WT~28_I\ : apex20ke_lcell 
-- Equation(s):
-- \SEND_WT~28\ = !stf_stb & sreg & pulse_rcvd

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_stf_stb,
	datac => ww_sreg,
	datad => ww_pulse_rcvd,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SEND_WT~28\);

\sreg~39_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~39\ = DFFE(!RST & (\SEND_WT~28\ # \sreg~39\ & !del_15us), GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00F2",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~39\,
	datab => ww_del_15us,
	datac => \SEND_WT~28\,
	datad => ww_RST,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~39\);

\timer_clrn~54_I\ : apex20ke_lcell 
-- Equation(s):
-- \timer_clrn~54\ = \sreg~39\ # sreg & pulse_rcvd & !stf_stb

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF08",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg,
	datab => ww_pulse_rcvd,
	datac => ww_stf_stb,
	datad => \sreg~39\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \timer_clrn~54\);

\timer_clrn~53_I\ : apex20ke_lcell 
-- Equation(s):
-- \timer_clrn~53\ = \sreg~32\ & (tcal_rcvd # tcal_psnd & !pulse_sent) # !\sreg~32\ & tcal_psnd & !pulse_sent

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "A0EC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~32\,
	datab => ww_tcal_psnd,
	datac => ww_tcal_rcvd,
	datad => ww_pulse_sent,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \timer_clrn~53\);

\sreg~38_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~38\ = DFFE(!RST & (\_~1992\ # tcal_rcvd & \sreg~32\), GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F08",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_tcal_rcvd,
	datab => \sreg~32\,
	datac => ww_RST,
	datad => \_~1992\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~38\);

\_~1992_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~1992\ = !del_15us & \sreg~38\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_del_15us,
	datad => \sreg~38\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~1992\);

\_~1993_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~1993\ = !RST & !msg_sent

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "000F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_RST,
	datad => ww_msg_sent,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~1993\);

\_~2000_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~2000\ = \sreg~42\ & !msg_sent & !RST

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "000A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~42\,
	datac => ww_msg_sent,
	datad => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~2000\);

\sreg~42_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~42\ = DFFE(\_~2000\ # send_ctrl & \_~1994\ & com_ctrl_local_2, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF80",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_send_ctrl,
	datab => \_~1994\,
	datac => ww_com_ctrl_local_2,
	datad => \_~2000\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~42\);

\_~2003_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~2003\ = \sreg~44\ & !RST & !msg_sent

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "000A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~44\,
	datac => ww_RST,
	datad => ww_msg_sent,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~2003\);

\send_data~1_I\ : apex20ke_lcell 
-- Equation(s):
-- \send_data~1\ = send_ctrl & send_data & \_~1993\ # !send_ctrl & (\_~1994\ # send_data & \_~1993\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "D5C0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_send_ctrl,
	datab => ww_send_data,
	datac => \_~1993\,
	datad => \_~1994\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \send_data~1\);

\SND_DRBT~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \SND_DRBT~2\ = \_~2000\ # send_ctrl & \_~1994\ & com_ctrl_local_2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF80",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_send_ctrl,
	datab => \_~1994\,
	datac => ww_com_ctrl_local_2,
	datad => \_~2000\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SND_DRBT~2\);

\SV8~80_I\ : apex20ke_lcell 
-- Equation(s):
-- \SV8~80\ = !\_~2003\ & !\send_data~1\ & !\SND_DRBT~2\ & !\SND_IDLE~52\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \_~2003\,
	datab => \send_data~1\,
	datac => \SND_DRBT~2\,
	datad => \SND_IDLE~52\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SV8~80\);

\SND_MRWB~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \SND_MRWB~2\ = \_~1997\ # \_~1998\ & !op_61 & !op_62

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF02",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \_~1998\,
	datab => ww_op_6,
	datac => ww_op_61,
	datad => \_~1997\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SND_MRWB~2\);

\SND_MRNB~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \SND_MRNB~2\ = \_~1999\ # \_~1998\ & (op_62 # op_61)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFA8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \_~1998\,
	datab => ww_op_61,
	datac => ww_op_6,
	datad => \_~1999\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SND_MRNB~2\);

\SEND_WT~29_I\ : apex20ke_lcell 
-- Equation(s):
-- \SEND_WT~29\ = !RST & (\SEND_WT~28\ # !del_15us & \sreg~39\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F04",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_del_15us,
	datab => \sreg~39\,
	datac => ww_RST,
	datad => \SEND_WT~28\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SEND_WT~29\);

\_~1995_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~1995\ = idreq_rcvd & \sreg~32\ & !RST & inst9

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0800",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_idreq_rcvd,
	datab => \sreg~32\,
	datac => ww_RST,
	datad => ww_inst9,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~1995\);

\SND_ID~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \SND_ID~2\ = \_~1995\ # sreg2 & !msg_sent & !RST

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CCCE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sreg2,
	datab => \_~1995\,
	datac => ww_msg_sent,
	datad => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SND_ID~2\);

\SND_DRAND~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \SND_DRAND~2\ = \_~1996\ # !com_ctrl_local_2 & send_ctrl & \_~1994\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF40",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_com_ctrl_local_2,
	datab => ww_send_ctrl,
	datac => \_~1994\,
	datad => \_~1996\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SND_DRAND~2\);

\SV8~79_I\ : apex20ke_lcell 
-- Equation(s):
-- \SV8~79\ = \SEND_WT~29\ # \SND_ID~2\ # \SND_DRAND~2\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \SEND_WT~29\,
	datac => \SND_ID~2\,
	datad => \SND_DRAND~2\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SV8~79\);

\SV8~I\ : apex20ke_lcell 
-- Equation(s):
-- SV8 = DFFE(\SND_MRWB~2\ # \SND_MRNB~2\ # \SV8~79\ # !\SV8~80\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFD",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \SV8~80\,
	datab => \SND_MRWB~2\,
	datac => \SND_MRNB~2\,
	datad => \SV8~79\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => SV8);

\DRREQ_WT~27_I\ : apex20ke_lcell 
-- Equation(s):
-- \DRREQ_WT~27\ = tcal_psnd & pulse_sent

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_tcal_psnd,
	datad => ww_pulse_sent,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \DRREQ_WT~27\);

\sreg~35_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~35\ = DFFE(!RST & (\DRREQ_WT~27\ # \sreg~35\ & !drreq_rcvd), GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00F2",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~35\,
	datab => ww_drreq_rcvd,
	datac => \DRREQ_WT~27\,
	datad => ww_RST,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~35\);

\SND_TC_DAT~36_I\ : apex20ke_lcell 
-- Equation(s):
-- \SND_TC_DAT~36\ = msg_sent & drreq_rcvd & \sreg~35\ # !msg_sent & (sreg1 # drreq_rcvd & \sreg~35\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F444",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_msg_sent,
	datab => ww_sreg1,
	datac => ww_drreq_rcvd,
	datad => \sreg~35\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SND_TC_DAT~36\);

\tcal_psnd~30_I\ : apex20ke_lcell 
-- Equation(s):
-- \tcal_psnd~30\ = tcal_psnd & (\sreg~39\ & del_15us # !pulse_sent) # !tcal_psnd & \sreg~39\ & del_15us

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F222",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_tcal_psnd,
	datab => ww_pulse_sent,
	datac => \sreg~39\,
	datad => ww_del_15us,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \tcal_psnd~30\);

\COMM_RESET~1_I\ : apex20ke_lcell 
-- Equation(s):
-- \COMM_RESET~1\ = !RST & (COMM_RESET # sysres_rcvd & \sreg~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00EA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_COMM_RESET,
	datab => ww_sysres_rcvd,
	datac => \sreg~32\,
	datad => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \COMM_RESET~1\);

\SV3~I\ : apex20ke_lcell 
-- Equation(s):
-- SV3 = DFFE(\COMM_RESET~1\ # !RST & (\SND_TC_DAT~36\ # \tcal_psnd~30\), GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF32",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \SND_TC_DAT~36\,
	datab => ww_RST,
	datac => \tcal_psnd~30\,
	datad => \COMM_RESET~1\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => SV3);

\REC_WT~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \REC_WT~2\ = !RST & (\_~1992\ # tcal_rcvd & \sreg~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F08",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_tcal_rcvd,
	datab => \sreg~32\,
	datac => ww_RST,
	datad => \_~1992\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \REC_WT~2\);

\REC_PULSE~36_I\ : apex20ke_lcell 
-- Equation(s):
-- \REC_PULSE~36\ = !stf_stb & sreg & !pulse_rcvd

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0030",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_stf_stb,
	datac => ww_sreg,
	datad => ww_pulse_rcvd,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \REC_PULSE~36\);

\REC_PULSE~37_I\ : apex20ke_lcell 
-- Equation(s):
-- \REC_PULSE~37\ = !RST & (\REC_PULSE~36\ # del_15us & \sreg~38\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0E0C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_del_15us,
	datab => \REC_PULSE~36\,
	datac => ww_RST,
	datad => \sreg~38\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \REC_PULSE~37\);

\SV9~70_I\ : apex20ke_lcell 
-- Equation(s):
-- \SV9~70\ = !\REC_WT~2\ & !\REC_PULSE~37\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0033",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \REC_WT~2\,
	datad => \REC_PULSE~37\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SV9~70\);

\SND_IDLE~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \SND_IDLE~2\ = \SND_IDLE~52\ # \sreg~44\ & !RST & !msg_sent

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CCCE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~44\,
	datab => \SND_IDLE~52\,
	datac => ww_RST,
	datad => ww_msg_sent,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SND_IDLE~2\);

\DRREQ_WT~28_I\ : apex20ke_lcell 
-- Equation(s):
-- \DRREQ_WT~28\ = !RST & (\DRREQ_WT~27\ # !drreq_rcvd & \sreg~35\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0D0C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_drreq_rcvd,
	datab => \DRREQ_WT~27\,
	datac => ww_RST,
	datad => \sreg~35\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \DRREQ_WT~28\);

\PON~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \PON~2\ = RST # \sreg~36\ & !sload_path_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CCFC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_RST,
	datac => \sreg~36\,
	datad => ww_sload_path_5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \PON~2\);

\SV9~69_I\ : apex20ke_lcell 
-- Equation(s):
-- \SV9~69\ = \SND_IDLE~2\ # \DRREQ_WT~28\ # \SND_ID~2\ # \PON~2\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \SND_IDLE~2\,
	datab => \DRREQ_WT~28\,
	datac => \SND_ID~2\,
	datad => \PON~2\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SV9~69\);

\SV9~I\ : apex20ke_lcell 
-- Equation(s):
-- SV9 = DFFE(\SND_MRNB~2\ # \SND_MRWB~2\ # \SV9~69\ # !\SV9~70\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFB",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \SND_MRNB~2\,
	datab => \SV9~70\,
	datac => \SND_MRWB~2\,
	datad => \SV9~69\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => SV9);

\_~49_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~49\ = \_~1994\ & (pre_out_14 # pre_out_15 # or_node_6_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FE00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_14,
	datab => ww_pre_out_15,
	datac => ww_or_node_6_0,
	datad => \_~1994\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~49\);

\SV8~81_I\ : apex20ke_lcell 
-- Equation(s):
-- \SV8~81\ = !\SND_IDLE~2\ & !\_~49\ & (!\_~1993\ # !send_data)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0103",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_send_data,
	datab => \SND_IDLE~2\,
	datac => \_~49\,
	datad => \_~1993\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SV8~81\);

\CMD_WAIT~227_I\ : apex20ke_lcell 
-- Equation(s):
-- \CMD_WAIT~227\ = !RST & (\CMD_WAIT~239\ # \CMD_WAIT~226\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F0C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \CMD_WAIT~239\,
	datac => ww_RST,
	datad => \CMD_WAIT~226\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \CMD_WAIT~227\);

\SND_TC_DAT~34_I\ : apex20ke_lcell 
-- Equation(s):
-- \SND_TC_DAT~34\ = !msg_sent & sreg1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3300",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_msg_sent,
	datad => ww_sreg1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SND_TC_DAT~34\);

\SND_TC_DAT~35_I\ : apex20ke_lcell 
-- Equation(s):
-- \SND_TC_DAT~35\ = !RST & (\SND_TC_DAT~34\ # \sreg~35\ & drreq_rcvd)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0E0C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~35\,
	datab => \SND_TC_DAT~34\,
	datac => ww_RST,
	datad => ww_drreq_rcvd,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SND_TC_DAT~35\);

\reboot_gnt~31_I\ : apex20ke_lcell 
-- Equation(s):
-- \reboot_gnt~31\ = !RST & (reboot_gnt # msg_sent & \sreg~42\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5450",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_RST,
	datab => ww_msg_sent,
	datac => ww_reboot_gnt,
	datad => \sreg~42\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \reboot_gnt~31\);

\SV11~62_I\ : apex20ke_lcell 
-- Equation(s):
-- \SV11~62\ = RST # \reboot_gnt~31\ # !sload_path_5 & \sreg~36\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFF4",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_5,
	datab => \sreg~36\,
	datac => ww_RST,
	datad => \reboot_gnt~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SV11~62\);

\SV11~63_I\ : apex20ke_lcell 
-- Equation(s):
-- \SV11~63\ = \CMD_WAIT~227\ # \SND_TC_DAT~35\ # \REC_WT~2\ # \SV11~62\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \CMD_WAIT~227\,
	datab => \SND_TC_DAT~35\,
	datac => \REC_WT~2\,
	datad => \SV11~62\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SV11~63\);

\SV11~I\ : apex20ke_lcell 
-- Equation(s):
-- SV11 = DFFE(\SND_MRWB~2\ # \SND_DRBT~2\ # \SV11~63\ # !\SV8~81\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFD",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \SV8~81\,
	datab => \SND_MRWB~2\,
	datac => \SND_DRBT~2\,
	datad => \SV11~63\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => SV11);

\SV10~69_I\ : apex20ke_lcell 
-- Equation(s):
-- \SV10~69\ = \reboot_gnt~31\ # \COMM_RESET~1\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \reboot_gnt~31\,
	datad => \COMM_RESET~1\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SV10~69\);

\CRES_WAIT~28_I\ : apex20ke_lcell 
-- Equation(s):
-- \CRES_WAIT~28\ = !RST & (\CRES_WAIT~27\ # \sreg~36\ & sload_path_5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0E0C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~36\,
	datab => \CRES_WAIT~27\,
	datac => ww_RST,
	datad => ww_sload_path_5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \CRES_WAIT~28\);

\SV10~70_I\ : apex20ke_lcell 
-- Equation(s):
-- \SV10~70\ = \SND_DRBT~2\ # \SV10~69\ # \SND_DRAND~2\ # \CRES_WAIT~28\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \SND_DRBT~2\,
	datab => \SV10~69\,
	datac => \SND_DRAND~2\,
	datad => \CRES_WAIT~28\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \SV10~70\);

\SV10~I\ : apex20ke_lcell 
-- Equation(s):
-- SV10 = DFFE(\SND_MRNB~2\ # \SND_MRWB~2\ # \SV10~70\ # !\SV9~70\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFD",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \SV9~70\,
	datab => \SND_MRNB~2\,
	datac => \SND_MRWB~2\,
	datad => \SV10~70\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => SV10);

\_~2004_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~2004\ = SV9 & msg_sent & SV11 & !SV10

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0080",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => SV9,
	datab => ww_msg_sent,
	datac => SV11,
	datad => SV10,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \_~2004\);

\_~2009_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~2009\ = (SV8 & !SV3) & CASCADE(\_~2004\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00F0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => SV8,
	datad => SV3,
	cascin => \_~2004\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~2009\);

\COM_ON~94_I\ : apex20ke_lcell 
-- Equation(s):
-- \COM_ON~94\ = SV9 # SV3 $ !SV11 # !SV10

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EBFF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => SV9,
	datab => SV3,
	datac => SV11,
	datad => SV10,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \COM_ON~94\);

\CMD_WAIT~235_I\ : apex20ke_lcell 
-- Equation(s):
-- \CMD_WAIT~235\ = !data_rcvd & !idle_rcvd & !bfstat_rcvd

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0003",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_data_rcvd,
	datac => ww_idle_rcvd,
	datad => ww_bfstat_rcvd,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \CMD_WAIT~235\);

\send_ctrl~144_I\ : apex20ke_lcell 
-- Equation(s):
-- \send_ctrl~144\ = \sreg~32\ & (drreq_rcvd & send_ctrl # !\CMD_WAIT~235\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "80CC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_drreq_rcvd,
	datab => \sreg~32\,
	datac => ww_send_ctrl,
	datad => \CMD_WAIT~235\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \send_ctrl~144\);

\send_ctrl~145_I\ : apex20ke_lcell 
-- Equation(s):
-- \send_ctrl~145\ = !msg_sent & (\sreg~42\ # !\CMD_WAIT~225\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5505",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_msg_sent,
	datac => \CMD_WAIT~225\,
	datad => \sreg~42\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \send_ctrl~145\);

\cmd_snd0~78_I\ : apex20ke_lcell 
-- Equation(s):
-- \cmd_snd0~78\ = \sreg~42\ # sreg2 # \sreg~45\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~42\,
	datac => ww_sreg2,
	datad => \sreg~45\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \cmd_snd0~78\);

\cmd_snd0~79_I\ : apex20ke_lcell 
-- Equation(s):
-- \cmd_snd0~79\ = !RST & (buf_res # !msg_sent & \cmd_snd0~78\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00DC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_msg_sent,
	datab => ww_buf_res,
	datac => \cmd_snd0~78\,
	datad => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \cmd_snd0~79\);

\_~2006_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~2006\ = !pre_out_14 & !pre_out_15 & !or_node_6_0 & \_~1994\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0100",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_14,
	datab => ww_pre_out_15,
	datac => ww_or_node_6_0,
	datad => \_~1994\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~2006\);

\cmd_snd0~80_I\ : apex20ke_lcell 
-- Equation(s):
-- \cmd_snd0~80\ = \cmd_snd0~79\ # \_~2003\ # \_~2006\ & com_ctrl_local_2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEEE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cmd_snd0~79\,
	datab => \_~2003\,
	datac => \_~2006\,
	datad => ww_com_ctrl_local_2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \cmd_snd0~80\);

\cmd_snd0~84_I\ : apex20ke_lcell 
-- Equation(s):
-- \cmd_snd0~84\ = idle_rcvd # idreq_rcvd & inst9

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FAF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_idreq_rcvd,
	datac => ww_idle_rcvd,
	datad => ww_inst9,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \cmd_snd0~84\);

\_~2008_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~2008\ = !data_rcvd & !bfstat_rcvd

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "000F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_data_rcvd,
	datad => ww_bfstat_rcvd,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~2008\);

\_~24_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~24\ = !RST & \sreg~32\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3300",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	datab => ww_RST,
	datad => \sreg~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \_~24\);

\cmd_snd0~86_I\ : apex20ke_lcell 
-- Equation(s):
-- \cmd_snd0~86\ = (\cmd_snd0~84\ # !\_~2008\ & (op_61 # op_62)) & CASCADE(\_~24\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFCE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_op_6,
	datab => \cmd_snd0~84\,
	datac => \_~2008\,
	datad => ww_op_61,
	cascin => \_~24\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \cmd_snd0~86\);

\send_ctrl~147_I\ : apex20ke_lcell 
-- Equation(s):
-- \send_ctrl~147\ = !pre_out_14 & drreq_rcvd & !or_node_6_0 & !pre_out_15

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0004",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_14,
	datab => ww_drreq_rcvd,
	datac => ww_or_node_6_0,
	datad => ww_pre_out_15,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \send_ctrl~147\);

\cmd_snd1~90_I\ : apex20ke_lcell 
-- Equation(s):
-- \cmd_snd1~90\ = !msg_sent & (\sreg~42\ # \sreg~44\ # \sreg~41\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00FE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~42\,
	datab => \sreg~44\,
	datac => \sreg~41\,
	datad => ww_msg_sent,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \cmd_snd1~90\);

\cmd_snd1~91_I\ : apex20ke_lcell 
-- Equation(s):
-- \cmd_snd1~91\ = \cmd_snd1~90\ # \sreg~32\ & (idle_rcvd # \send_ctrl~147\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFC8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_idle_rcvd,
	datab => \sreg~32\,
	datac => \send_ctrl~147\,
	datad => \cmd_snd1~90\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \cmd_snd1~91\);

\cmd_snd3~111_I\ : apex20ke_lcell 
-- Equation(s):
-- \cmd_snd3~111\ = buf_res # !msg_sent & (\sreg~46\ # \sreg~45\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BBBA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_buf_res,
	datab => ww_msg_sent,
	datac => \sreg~46\,
	datad => \sreg~45\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \cmd_snd3~111\);

\cmd_snd3~112_I\ : apex20ke_lcell 
-- Equation(s):
-- \cmd_snd3~112\ = !RST & (\cmd_snd3~111\ # !\CMD_WAIT~235\ & \sreg~32\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "2322",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cmd_snd3~111\,
	datab => ww_RST,
	datac => \CMD_WAIT~235\,
	datad => \sreg~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \cmd_snd3~112\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	UA_RX_AP IS
    PORT (
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	sload_path_31 : IN std_logic;
	CLK : IN std_logic;
	RST : IN std_logic;
	dffs_0 : IN std_logic;
	dffs_1 : IN std_logic;
	dffs_2 : IN std_logic;
	dffs_3 : IN std_logic;
	dffs_4 : IN std_logic;
	dffs_5 : IN std_logic;
	dffs_6 : IN std_logic;
	dffs_7 : IN std_logic;
	rxd : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	stf_stb : OUT std_logic;
	eof_stb : OUT std_logic;
	data_stb : OUT std_logic;
	ctclr : OUT std_logic;
	shen : OUT std_logic;
	shd : OUT std_logic
	);
END UA_RX_AP;

ARCHITECTURE structure OF UA_RX_AP IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_sload_path_31 : std_logic;
SIGNAL ww_CLK : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_dffs_0 : std_logic;
SIGNAL ww_dffs_1 : std_logic;
SIGNAL ww_dffs_2 : std_logic;
SIGNAL ww_dffs_3 : std_logic;
SIGNAL ww_dffs_4 : std_logic;
SIGNAL ww_dffs_5 : std_logic;
SIGNAL ww_dffs_6 : std_logic;
SIGNAL ww_dffs_7 : std_logic;
SIGNAL ww_rxd : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_stf_stb : std_logic;
SIGNAL ww_eof_stb : std_logic;
SIGNAL ww_data_stb : std_logic;
SIGNAL ww_ctclr : std_logic;
SIGNAL ww_shen : std_logic;
SIGNAL ww_shd : std_logic;
SIGNAL \rxcteq5~41\ : std_logic;
SIGNAL \rxcteq5~42\ : std_logic;
SIGNAL rxcteq9 : std_logic;
SIGNAL rxcteq5 : std_logic;
SIGNAL \sreg~35\ : std_logic;
SIGNAL \rxcteq9~21\ : std_logic;
SIGNAL \RXDAT~70\ : std_logic;
SIGNAL \sreg~34\ : std_logic;
SIGNAL \sreg~37\ : std_logic;
SIGNAL \sreg~40\ : std_logic;
SIGNAL \RXSTOP~189\ : std_logic;
SIGNAL \sreg~36\ : std_logic;
SIGNAL \_~627\ : std_logic;
SIGNAL \_~628\ : std_logic;
SIGNAL \_~629\ : std_logic;
SIGNAL \_~630\ : std_logic;
SIGNAL \ctclr~36\ : std_logic;
SIGNAL \_~632\ : std_logic;
SIGNAL \_~631\ : std_logic;
SIGNAL \sreg~33\ : std_logic;

BEGIN

ww_sload_path_4 <= sload_path_4;
ww_sload_path_3 <= sload_path_3;
ww_sload_path_2 <= sload_path_2;
ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_sload_path_31 <= sload_path_31;
ww_CLK <= CLK;
ww_RST <= RST;
ww_dffs_0 <= dffs_0;
ww_dffs_1 <= dffs_1;
ww_dffs_2 <= dffs_2;
ww_dffs_3 <= dffs_3;
ww_dffs_4 <= dffs_4;
ww_dffs_5 <= dffs_5;
ww_dffs_6 <= dffs_6;
ww_dffs_7 <= dffs_7;
ww_rxd <= rxd;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
stf_stb <= ww_stf_stb;
eof_stb <= ww_eof_stb;
data_stb <= ww_data_stb;
ctclr <= ww_ctclr;
shen <= ww_shen;
shd <= ww_shd;

\stf_stb~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- stf_stb = DFFE(\_~627\ & \_~628\ & \_~629\ & !dffs_3, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0080",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \_~627\,
	datab => \_~628\,
	datac => \_~629\,
	datad => ww_dffs_3,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_stf_stb);

\eof_stb~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- eof_stb = DFFE(\_~627\ & \_~628\ & \_~630\ & !dffs_6, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0080",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \_~627\,
	datab => \_~628\,
	datac => \_~630\,
	datad => ww_dffs_6,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_eof_stb);

\data_stb~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- data_stb = DFFE(\sreg~36\ & rxd, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \sreg~36\,
	datad => ww_rxd,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_data_stb);

\ctclr~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- ctclr = DFFE(!\ctclr~36\ & !stf_stb & !data_stb & !\sreg~33\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \ctclr~36\,
	datab => ww_stf_stb,
	datac => ww_data_stb,
	datad => \sreg~33\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_ctclr);

\shen~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- shen = DFFE(\sreg~34\ & (rxd # \rxcteq5~41\ & sload_path_2), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C8C0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \rxcteq5~41\,
	datab => \sreg~34\,
	datac => ww_rxd,
	datad => ww_sload_path_2,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_shen);

\shd~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- shd = DFFE(rxd & \sreg~34\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_rxd,
	datad => \sreg~34\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_shd);

\rxcteq5~41_I\ : apex20ke_lcell 
-- Equation(s):
-- \rxcteq5~41\ = !sload_path_4 & !sload_path_1 & !sload_path_3 & sload_path_0

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0100",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_4,
	datab => ww_sload_path_1,
	datac => ww_sload_path_3,
	datad => ww_sload_path_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \rxcteq5~41\);

\rxcteq5~42_I\ : apex20ke_lcell 
-- Equation(s):
-- \rxcteq5~42\ = !sload_path_1 & sload_path_0

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3300",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_1,
	datad => ww_sload_path_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \rxcteq5~42\);

\rxcteq9~I\ : apex20ke_lcell 
-- Equation(s):
-- rxcteq9 = sload_path_3 & !sload_path_2 & !sload_path_4 & \rxcteq5~42\
-- \rxcteq9~21\ = sload_path_3 & !sload_path_2 & !sload_path_4 & \rxcteq5~42\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0200",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_3,
	datab => ww_sload_path_2,
	datac => ww_sload_path_4,
	datad => \rxcteq5~42\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => rxcteq9,
	cascout => \rxcteq9~21\);

\rxcteq5~I\ : apex20ke_lcell 
-- Equation(s):
-- rxcteq5 = !sload_path_3 & sload_path_2 & !sload_path_4 & \rxcteq5~42\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0400",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_3,
	datab => ww_sload_path_2,
	datac => ww_sload_path_4,
	datad => \rxcteq5~42\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => rxcteq5);

\sreg~35_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~35\ = DFFE(ctclr & \sreg~35\ & !rxcteq9 # !ctclr & (rxd # \sreg~35\ & !rxcteq9), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "44F4",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_ctclr,
	datab => ww_rxd,
	datac => \sreg~35\,
	datad => rxcteq9,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~35\);

\RXDAT~70_I\ : apex20ke_lcell 
-- Equation(s):
-- \RXDAT~70\ = (\sreg~35\ # !sload_path_3 & \sreg~40\) & CASCADE(\rxcteq9~21\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFCC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \sreg~35\,
	datac => ww_sload_path_31,
	datad => \sreg~40\,
	cascin => \rxcteq9~21\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \RXDAT~70\);

\sreg~34_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~34\ = DFFE(\RXDAT~70\ # !rxcteq5 & !rxd & \sreg~34\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CDCC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => rxcteq5,
	datab => \RXDAT~70\,
	datac => ww_rxd,
	datad => \sreg~34\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~34\);

\sreg~37_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~37\ = DFFE(\sreg~34\ & !rxd & sload_path_2 & \rxcteq5~41\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "2000",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~34\,
	datab => ww_rxd,
	datac => ww_sload_path_2,
	datad => \rxcteq5~41\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~37\);

\sreg~40_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~40\ = DFFE(shd # \sreg~37\ # !rxcteq9 & \sreg~40\, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFF4",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => rxcteq9,
	datab => \sreg~40\,
	datac => ww_shd,
	datad => \sreg~37\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~40\);

\RXSTOP~189_I\ : apex20ke_lcell 
-- Equation(s):
-- \RXSTOP~189\ = !rxd & \sreg~36\ & (!\rxcteq5~41\ # !sload_path_2)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "1030",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_2,
	datab => ww_rxd,
	datac => \sreg~36\,
	datad => \rxcteq5~41\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \RXSTOP~189\);

\sreg~36_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~36\ = DFFE(\RXSTOP~189\ # \sreg~40\ & rxcteq9 & sload_path_3, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF80",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~40\,
	datab => rxcteq9,
	datac => ww_sload_path_31,
	datad => \RXSTOP~189\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~36\);

\_~627_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~627\ = \rxcteq5~41\ & \sreg~36\ & !rxd & sload_path_2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0800",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \rxcteq5~41\,
	datab => \sreg~36\,
	datac => ww_rxd,
	datad => ww_sload_path_2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~627\);

\_~628_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~628\ = !dffs_2 & dffs_7 & dffs_0

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_dffs_2,
	datac => ww_dffs_7,
	datad => ww_dffs_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~628\);

\_~629_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~629\ = dffs_5 & dffs_6 & !dffs_4 & dffs_1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0800",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_dffs_5,
	datab => ww_dffs_6,
	datac => ww_dffs_4,
	datad => ww_dffs_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~629\);

\_~630_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~630\ = dffs_4 & dffs_3 & !dffs_5 & !dffs_1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0008",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_dffs_4,
	datab => ww_dffs_3,
	datac => ww_dffs_5,
	datad => ww_dffs_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~630\);

\ctclr~36_I\ : apex20ke_lcell 
-- Equation(s):
-- \ctclr~36\ = eof_stb # !ctclr & !rxd

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF03",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_ctclr,
	datac => ww_rxd,
	datad => ww_eof_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \ctclr~36\);

\_~632_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~632\ = dffs_4 & !dffs_3 # !dffs_4 & !dffs_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "05AF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_dffs_4,
	datac => ww_dffs_6,
	datad => ww_dffs_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~632\);

\_~631_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~631\ = dffs_5 & (dffs_3 # dffs_6 & !dffs_1) # !dffs_5 & (dffs_6 # dffs_1)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DDF8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_dffs_5,
	datab => ww_dffs_3,
	datac => ww_dffs_6,
	datad => ww_dffs_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~631\);

\sreg~33_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~33\ = DFFE(\_~627\ & (\_~632\ # \_~631\ # !\_~628\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0B0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \_~632\,
	datab => \_~628\,
	datac => \_~627\,
	datad => \_~631\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~33\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	alt_synch_counter_9 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_3 : OUT std_logic
	);
END alt_synch_counter_9;

ARCHITECTURE structure OF alt_synch_counter_9 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_clk_en : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL \sload_path[0]\ : std_logic;
SIGNAL \counter_cell[0]~COUT\ : std_logic;
SIGNAL \sload_path[1]\ : std_logic;
SIGNAL \counter_cell[1]~COUT\ : std_logic;
SIGNAL \sload_path[2]\ : std_logic;
SIGNAL \counter_cell[2]~COUT\ : std_logic;
SIGNAL ALT_NOT_ww_aclr : std_logic;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_clk_en <= clk_en;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_3 <= ww_sload_path_3;
ALT_NOT_ww_aclr <= NOT ww_aclr;

\counter_cell[3]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_3 = DFFE(sload_path_3 $ \counter_cell[2]~COUT\, GLOBAL(outclock0), ctclr, , cout1)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_3,
	cin => \counter_cell[2]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_3);

\counter_cell[0]\ : apex20ke_lcell 
-- Equation(s):
-- \counter_cell[0]~COUT\ = CARRY()

-- pragma translate_off
GENERIC MAP (
	operation_mode => "qfbk_counter",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \counter_cell[0]~COUT\);

\counter_cell[1]\ : apex20ke_lcell 
-- Equation(s):
-- \sload_path[1]\ = DFFE(\sload_path[1]\ $ \counter_cell[0]~COUT\, GLOBAL(outclock0), ctclr, , cout1)
-- \counter_cell[1]~COUT\ = CARRY(!\counter_cell[0]~COUT\ # !\sload_path[1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \sload_path[1]\,
	cin => \counter_cell[0]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sload_path[1]\,
	cout => \counter_cell[1]~COUT\);

\counter_cell[2]\ : apex20ke_lcell 
-- Equation(s):
-- \sload_path[2]\ = DFFE(\sload_path[2]\ $ !\counter_cell[1]~COUT\, GLOBAL(outclock0), ctclr, , cout1)
-- \counter_cell[2]~COUT\ = CARRY(\sload_path[2]\ & !\counter_cell[1]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \sload_path[2]\,
	cin => \counter_cell[1]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sload_path[2]\,
	cout => \counter_cell[2]~COUT\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_counter_9 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_3 : OUT std_logic
	);
END lpm_counter_9;

ARCHITECTURE structure OF lpm_counter_9 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_clk_en : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_3 : std_logic;

COMPONENT alt_synch_counter_9
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_3 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_clk_en <= clk_en;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_3 <= ww_sload_path_3;
wysi_counter : alt_synch_counter_9
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	clk_en => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_3 => ww_sload_path_3);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	rxct4 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_3 : OUT std_logic
	);
END rxct4;

ARCHITECTURE structure OF rxct4 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_clk_en : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_3 : std_logic;

COMPONENT lpm_counter_9
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_3 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_clk_en <= clk_en;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_3 <= ww_sload_path_3;
lpm_counter_component : lpm_counter_9
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	clk_en => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_3 => ww_sload_path_3);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	cmpchain_6 IS
    PORT (
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic
	);
END cmpchain_6;

ARCHITECTURE structure OF cmpchain_6 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_aeb_out : std_logic;

BEGIN

ww_sload_path_3 <= sload_path_3;
ww_sload_path_2 <= sload_path_2;
ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
aeb_out <= ww_aeb_out;

\aeb_out~25\ : apex20ke_lcell 
-- Equation(s):
-- aeb_out = sload_path_1 & !sload_path_3 & !sload_path_2 & sload_path_0

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0200",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_1,
	datab => ww_sload_path_3,
	datac => ww_sload_path_2,
	datad => ww_sload_path_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_aeb_out);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	cmpchain_7 IS
    PORT (
	sload_path_4 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic
	);
END cmpchain_7;

ARCHITECTURE structure OF cmpchain_7 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_aeb_out : std_logic;

BEGIN

ww_sload_path_4 <= sload_path_4;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
aeb_out <= ww_aeb_out;

\aeb_out~0\ : apex20ke_lcell 
-- Equation(s):
-- aeb_out = sload_path_4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_4,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_aeb_out);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	cmpchain_8 IS
    PORT (
	aeb_out1 : IN std_logic;
	aeb_out2 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic
	);
END cmpchain_8;

ARCHITECTURE structure OF cmpchain_8 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_aeb_out1 : std_logic;
SIGNAL ww_aeb_out2 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_aeb_out : std_logic;

BEGIN

ww_aeb_out1 <= aeb_out1;
ww_aeb_out2 <= aeb_out2;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
aeb_out <= ww_aeb_out;

\aeb_out~0\ : apex20ke_lcell 
-- Equation(s):
-- aeb_out = aeb_out & aeb_out

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_aeb_out1,
	datad => ww_aeb_out2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_aeb_out);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	comptree_7 IS
    PORT (
	aeb_out1 : IN std_logic;
	aeb_out2 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic
	);
END comptree_7;

ARCHITECTURE structure OF comptree_7 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_aeb_out1 : std_logic;
SIGNAL ww_aeb_out2 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_aeb_out : std_logic;

COMPONENT cmpchain_8
    PORT (
	aeb_out1 : IN std_logic;
	aeb_out2 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic);
END COMPONENT;

BEGIN

ww_aeb_out1 <= aeb_out1;
ww_aeb_out2 <= aeb_out2;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
aeb_out <= ww_aeb_out;
cmp_end : cmpchain_8
PORT MAP (
	aeb_out1 => ww_aeb_out1,
	aeb_out2 => ww_aeb_out2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	aeb_out => ww_aeb_out);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	comptree_6 IS
    PORT (
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic
	);
END comptree_6;

ARCHITECTURE structure OF comptree_6 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_aeb_out : std_logic;
SIGNAL \cmp[0]|aeb_out\ : std_logic;
SIGNAL \cmp_end|aeb_out\ : std_logic;

COMPONENT cmpchain_6
    PORT (
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic);
END COMPONENT;

COMPONENT cmpchain_7
    PORT (
	sload_path_4 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic);
END COMPONENT;

COMPONENT comptree_7
    PORT (
	aeb_out1 : IN std_logic;
	aeb_out2 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic);
END COMPONENT;

BEGIN

ww_sload_path_4 <= sload_path_4;
ww_sload_path_3 <= sload_path_3;
ww_sload_path_2 <= sload_path_2;
ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
aeb_out <= ww_aeb_out;
\cmp[0]\ : cmpchain_6
PORT MAP (
	sload_path_3 => ww_sload_path_3,
	sload_path_2 => ww_sload_path_2,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	aeb_out => \cmp[0]|aeb_out\);
cmp_end : cmpchain_7
PORT MAP (
	sload_path_4 => ww_sload_path_4,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	aeb_out => \cmp_end|aeb_out\);
sub_comptree : comptree_7
PORT MAP (
	aeb_out1 => \cmp[0]|aeb_out\,
	aeb_out2 => \cmp_end|aeb_out\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	aeb_out => ww_aeb_out);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	cmpchain_5 IS
    PORT (
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic
	);
END cmpchain_5;

ARCHITECTURE structure OF cmpchain_5 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_aeb_out : std_logic;

COMPONENT comptree_6
    PORT (
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic);
END COMPONENT;

BEGIN

ww_sload_path_4 <= sload_path_4;
ww_sload_path_3 <= sload_path_3;
ww_sload_path_2 <= sload_path_2;
ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
aeb_out <= ww_aeb_out;
comp : comptree_6
PORT MAP (
	sload_path_4 => ww_sload_path_4,
	sload_path_3 => ww_sload_path_3,
	sload_path_2 => ww_sload_path_2,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	aeb_out => ww_aeb_out);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	comptree_5 IS
    PORT (
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic
	);
END comptree_5;

ARCHITECTURE structure OF comptree_5 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_aeb_out : std_logic;

COMPONENT cmpchain_5
    PORT (
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic);
END COMPONENT;

BEGIN

ww_sload_path_4 <= sload_path_4;
ww_sload_path_3 <= sload_path_3;
ww_sload_path_2 <= sload_path_2;
ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
aeb_out <= ww_aeb_out;
cmp_end : cmpchain_5
PORT MAP (
	sload_path_4 => ww_sload_path_4,
	sload_path_3 => ww_sload_path_3,
	sload_path_2 => ww_sload_path_2,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	aeb_out => ww_aeb_out);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_compare_5 IS
    PORT (
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic
	);
END lpm_compare_5;

ARCHITECTURE structure OF lpm_compare_5 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_aeb_out : std_logic;

COMPONENT comptree_5
    PORT (
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic);
END COMPONENT;

BEGIN

ww_sload_path_4 <= sload_path_4;
ww_sload_path_3 <= sload_path_3;
ww_sload_path_2 <= sload_path_2;
ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
aeb_out <= ww_aeb_out;
comparator : comptree_5
PORT MAP (
	sload_path_4 => ww_sload_path_4,
	sload_path_3 => ww_sload_path_3,
	sload_path_2 => ww_sload_path_2,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	aeb_out => ww_aeb_out);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	alt_synch_counter_10 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic;
	cout1 : OUT std_logic
	);
END alt_synch_counter_10;

ARCHITECTURE structure OF alt_synch_counter_10 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_cout1 : std_logic;
SIGNAL \the_cout~COMBOUT\ : std_logic;
SIGNAL \cmp_end|aeb_out\ : std_logic;
SIGNAL \counter_cell[4]~COUT\ : std_logic;
SIGNAL \counter_cell[3]~COUT\ : std_logic;
SIGNAL \counter_cell[2]~COUT\ : std_logic;
SIGNAL \counter_cell[1]~COUT\ : std_logic;
SIGNAL \counter_cell[0]~COUT\ : std_logic;
SIGNAL cout : std_logic;
SIGNAL ALT_NOT_ww_aclr : std_logic;

COMPONENT lpm_compare_5
    PORT (
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_4 <= ww_sload_path_4;
sload_path_3 <= ww_sload_path_3;
sload_path_2 <= ww_sload_path_2;
sload_path_1 <= ww_sload_path_1;
sload_path_0 <= ww_sload_path_0;
cout1 <= ww_cout1;
ALT_NOT_ww_aclr <= NOT ww_aclr;
\$00013\ : lpm_compare_5
PORT MAP (
	sload_path_4 => ww_sload_path_4,
	sload_path_3 => ww_sload_path_3,
	sload_path_2 => ww_sload_path_2,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	aeb_out => \cmp_end|aeb_out\);

\counter_cell[4]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_4 = DFFE(!aeb_out & sload_path_4 $ !\counter_cell[3]~COUT\, GLOBAL(outclock0), ctclr, , )
-- \counter_cell[4]~COUT\ = CARRY(sload_path_4 & !\counter_cell[3]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_4,
	cin => \counter_cell[3]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sclr => \cmp_end|aeb_out\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_4,
	cout => \counter_cell[4]~COUT\);

\counter_cell[3]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_3 = DFFE(!aeb_out & sload_path_3 $ \counter_cell[2]~COUT\, GLOBAL(outclock0), ctclr, , )
-- \counter_cell[3]~COUT\ = CARRY(!\counter_cell[2]~COUT\ # !sload_path_3)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_3,
	cin => \counter_cell[2]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sclr => \cmp_end|aeb_out\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_3,
	cout => \counter_cell[3]~COUT\);

\counter_cell[2]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_2 = DFFE(!aeb_out & sload_path_2 $ !\counter_cell[1]~COUT\, GLOBAL(outclock0), ctclr, , )
-- \counter_cell[2]~COUT\ = CARRY(sload_path_2 & !\counter_cell[1]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_2,
	cin => \counter_cell[1]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sclr => \cmp_end|aeb_out\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_2,
	cout => \counter_cell[2]~COUT\);

\counter_cell[1]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_1 = DFFE(!aeb_out & sload_path_1 $ \counter_cell[0]~COUT\, GLOBAL(outclock0), ctclr, , )
-- \counter_cell[1]~COUT\ = CARRY(!\counter_cell[0]~COUT\ # !sload_path_1)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_1,
	cin => \counter_cell[0]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sclr => \cmp_end|aeb_out\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_1,
	cout => \counter_cell[1]~COUT\);

\counter_cell[0]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_0 = DFFE(!aeb_out & !sload_path_0, GLOBAL(outclock0), ctclr, , )
-- \counter_cell[0]~COUT\ = CARRY(sload_path_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "qfbk_counter",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sclr => \cmp_end|aeb_out\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_0,
	cout => \counter_cell[0]~COUT\);

\cout~0_I\ : apex20ke_lcell 
-- Equation(s):
-- cout1 = !cout

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0F0F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	cin => cout,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_cout1);

the_cout : apex20ke_lcell 
-- Equation(s):
-- cout = CARRY(!aeb_out & !\counter_cell[4]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0005",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \cmp_end|aeb_out\,
	cin => \counter_cell[4]~COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => cout);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_counter_10 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic;
	cout : OUT std_logic
	);
END lpm_counter_10;

ARCHITECTURE structure OF lpm_counter_10 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_cout : std_logic;

COMPONENT alt_synch_counter_10
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic;
	cout1 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_4 <= ww_sload_path_4;
sload_path_3 <= ww_sload_path_3;
sload_path_2 <= ww_sload_path_2;
sload_path_1 <= ww_sload_path_1;
sload_path_0 <= ww_sload_path_0;
cout <= ww_cout;
wysi_counter : alt_synch_counter_10
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_4 => ww_sload_path_4,
	sload_path_3 => ww_sload_path_3,
	sload_path_2 => ww_sload_path_2,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	cout1 => ww_cout);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	rxct5 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic;
	cout : OUT std_logic
	);
END rxct5;

ARCHITECTURE structure OF rxct5 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_cout : std_logic;

COMPONENT lpm_counter_10
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic;
	cout : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_4 <= ww_sload_path_4;
sload_path_3 <= ww_sload_path_3;
sload_path_2 <= ww_sload_path_2;
sload_path_1 <= ww_sload_path_1;
sload_path_0 <= ww_sload_path_0;
cout <= ww_cout;
lpm_counter_component : lpm_counter_10
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_4 => ww_sload_path_4,
	sload_path_3 => ww_sload_path_3,
	sload_path_2 => ww_sload_path_2,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	cout => ww_cout);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_shiftreg IS
    PORT (
	clock : IN std_logic;
	ctclr : IN std_logic;
	enable : IN std_logic;
	shd : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	dffs_0 : OUT std_logic;
	dffs_1 : OUT std_logic;
	dffs_2 : OUT std_logic;
	dffs_3 : OUT std_logic;
	dffs_4 : OUT std_logic;
	dffs_5 : OUT std_logic;
	dffs_6 : OUT std_logic;
	dffs_7 : OUT std_logic
	);
END lpm_shiftreg;

ARCHITECTURE structure OF lpm_shiftreg IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_ctclr : std_logic;
SIGNAL ww_enable : std_logic;
SIGNAL ww_shd : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_dffs_0 : std_logic;
SIGNAL ww_dffs_1 : std_logic;
SIGNAL ww_dffs_2 : std_logic;
SIGNAL ww_dffs_3 : std_logic;
SIGNAL ww_dffs_4 : std_logic;
SIGNAL ww_dffs_5 : std_logic;
SIGNAL ww_dffs_6 : std_logic;
SIGNAL ww_dffs_7 : std_logic;
SIGNAL ALT_NOT_ww_ctclr : std_logic;

BEGIN

ww_clock <= clock;
ww_ctclr <= ctclr;
ww_enable <= enable;
ww_shd <= shd;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
dffs_0 <= ww_dffs_0;
dffs_1 <= ww_dffs_1;
dffs_2 <= ww_dffs_2;
dffs_3 <= ww_dffs_3;
dffs_4 <= ww_dffs_4;
dffs_5 <= ww_dffs_5;
dffs_6 <= ww_dffs_6;
dffs_7 <= ww_dffs_7;
ALT_NOT_ww_ctclr <= NOT ww_ctclr;

\dffs[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- dffs_0 = DFFE(dffs_1, GLOBAL(outclock0), ctclr, , shen)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_dffs_1,
	clk => ww_clock,
	aclr => ALT_NOT_ww_ctclr,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dffs_0);

\dffs[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- dffs_1 = DFFE(dffs_2, GLOBAL(outclock0), ctclr, , shen)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_dffs_2,
	clk => ww_clock,
	aclr => ALT_NOT_ww_ctclr,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dffs_1);

\dffs[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- dffs_2 = DFFE(dffs_3, GLOBAL(outclock0), ctclr, , shen)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_dffs_3,
	clk => ww_clock,
	aclr => ALT_NOT_ww_ctclr,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dffs_2);

\dffs[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- dffs_3 = DFFE(dffs_4, GLOBAL(outclock0), ctclr, , shen)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_dffs_4,
	clk => ww_clock,
	aclr => ALT_NOT_ww_ctclr,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dffs_3);

\dffs[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- dffs_4 = DFFE(dffs_5, GLOBAL(outclock0), ctclr, , shen)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_dffs_5,
	clk => ww_clock,
	aclr => ALT_NOT_ww_ctclr,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dffs_4);

\dffs[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- dffs_5 = DFFE(dffs_6, GLOBAL(outclock0), ctclr, , shen)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_dffs_6,
	clk => ww_clock,
	aclr => ALT_NOT_ww_ctclr,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dffs_5);

\dffs[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- dffs_6 = DFFE(dffs_7, GLOBAL(outclock0), ctclr, , shen)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_dffs_7,
	clk => ww_clock,
	aclr => ALT_NOT_ww_ctclr,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dffs_6);

\dffs[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- dffs_7 = DFFE(shd, GLOBAL(outclock0), ctclr, , shen)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_shd,
	clk => ww_clock,
	aclr => ALT_NOT_ww_ctclr,
	ena => ww_enable,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dffs_7);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	rxshr8 IS
    PORT (
	clock : IN std_logic;
	ctclr : IN std_logic;
	enable : IN std_logic;
	shd : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	dffs_0 : OUT std_logic;
	dffs_1 : OUT std_logic;
	dffs_2 : OUT std_logic;
	dffs_3 : OUT std_logic;
	dffs_4 : OUT std_logic;
	dffs_5 : OUT std_logic;
	dffs_6 : OUT std_logic;
	dffs_7 : OUT std_logic
	);
END rxshr8;

ARCHITECTURE structure OF rxshr8 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_ctclr : std_logic;
SIGNAL ww_enable : std_logic;
SIGNAL ww_shd : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_dffs_0 : std_logic;
SIGNAL ww_dffs_1 : std_logic;
SIGNAL ww_dffs_2 : std_logic;
SIGNAL ww_dffs_3 : std_logic;
SIGNAL ww_dffs_4 : std_logic;
SIGNAL ww_dffs_5 : std_logic;
SIGNAL ww_dffs_6 : std_logic;
SIGNAL ww_dffs_7 : std_logic;

COMPONENT lpm_shiftreg
    PORT (
	clock : IN std_logic;
	ctclr : IN std_logic;
	enable : IN std_logic;
	shd : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	dffs_0 : OUT std_logic;
	dffs_1 : OUT std_logic;
	dffs_2 : OUT std_logic;
	dffs_3 : OUT std_logic;
	dffs_4 : OUT std_logic;
	dffs_5 : OUT std_logic;
	dffs_6 : OUT std_logic;
	dffs_7 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_ctclr <= ctclr;
ww_enable <= enable;
ww_shd <= shd;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
dffs_0 <= ww_dffs_0;
dffs_1 <= ww_dffs_1;
dffs_2 <= ww_dffs_2;
dffs_3 <= ww_dffs_3;
dffs_4 <= ww_dffs_4;
dffs_5 <= ww_dffs_5;
dffs_6 <= ww_dffs_6;
dffs_7 <= ww_dffs_7;
lpm_shiftreg_component : lpm_shiftreg
PORT MAP (
	clock => ww_clock,
	ctclr => ww_ctclr,
	enable => ww_enable,
	shd => ww_shd,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	dffs_0 => ww_dffs_0,
	dffs_1 => ww_dffs_1,
	dffs_2 => ww_dffs_2,
	dffs_3 => ww_dffs_3,
	dffs_4 => ww_dffs_4,
	dffs_5 => ww_dffs_5,
	dffs_6 => ww_dffs_6,
	dffs_7 => ww_dffs_7);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	RX_UART_ap IS
    PORT (
	clk : IN std_logic;
	RST : IN std_logic;
	rxd : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	stf_stb : OUT std_logic;
	eof_stb : OUT std_logic;
	data_stb : OUT std_logic;
	dffs_0 : OUT std_logic;
	dffs_1 : OUT std_logic;
	dffs_2 : OUT std_logic;
	dffs_3 : OUT std_logic;
	dffs_4 : OUT std_logic;
	dffs_5 : OUT std_logic;
	dffs_6 : OUT std_logic;
	dffs_7 : OUT std_logic;
	ctclr : OUT std_logic
	);
END RX_UART_ap;

ARCHITECTURE structure OF RX_UART_ap IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clk : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_rxd : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_stf_stb : std_logic;
SIGNAL ww_eof_stb : std_logic;
SIGNAL ww_data_stb : std_logic;
SIGNAL ww_dffs_0 : std_logic;
SIGNAL ww_dffs_1 : std_logic;
SIGNAL ww_dffs_2 : std_logic;
SIGNAL ww_dffs_3 : std_logic;
SIGNAL ww_dffs_4 : std_logic;
SIGNAL ww_dffs_5 : std_logic;
SIGNAL ww_dffs_6 : std_logic;
SIGNAL ww_dffs_7 : std_logic;
SIGNAL ww_ctclr : std_logic;
SIGNAL \wysi_counter|sload_path[4]\ : std_logic;
SIGNAL \wysi_counter|sload_path[3]\ : std_logic;
SIGNAL \wysi_counter|sload_path[2]\ : std_logic;
SIGNAL \wysi_counter|sload_path[1]\ : std_logic;
SIGNAL \wysi_counter|sload_path[0]\ : std_logic;
SIGNAL \wysi_counter|sload_path[3]~1\ : std_logic;
SIGNAL \inst|shen~reg\ : std_logic;
SIGNAL \inst|shd~reg\ : std_logic;
SIGNAL \wysi_counter|cout~0\ : std_logic;

COMPONENT UA_RX_AP
    PORT (
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	sload_path_31 : IN std_logic;
	CLK : IN std_logic;
	RST : IN std_logic;
	dffs_0 : IN std_logic;
	dffs_1 : IN std_logic;
	dffs_2 : IN std_logic;
	dffs_3 : IN std_logic;
	dffs_4 : IN std_logic;
	dffs_5 : IN std_logic;
	dffs_6 : IN std_logic;
	dffs_7 : IN std_logic;
	rxd : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	stf_stb : OUT std_logic;
	eof_stb : OUT std_logic;
	data_stb : OUT std_logic;
	ctclr : OUT std_logic;
	shen : OUT std_logic;
	shd : OUT std_logic);
END COMPONENT;

COMPONENT rxct4
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_3 : OUT std_logic);
END COMPONENT;

COMPONENT rxct5
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic;
	cout : OUT std_logic);
END COMPONENT;

COMPONENT rxshr8
    PORT (
	clock : IN std_logic;
	ctclr : IN std_logic;
	enable : IN std_logic;
	shd : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	dffs_0 : OUT std_logic;
	dffs_1 : OUT std_logic;
	dffs_2 : OUT std_logic;
	dffs_3 : OUT std_logic;
	dffs_4 : OUT std_logic;
	dffs_5 : OUT std_logic;
	dffs_6 : OUT std_logic;
	dffs_7 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clk <= clk;
ww_RST <= RST;
ww_rxd <= rxd;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
stf_stb <= ww_stf_stb;
eof_stb <= ww_eof_stb;
data_stb <= ww_data_stb;
dffs_0 <= ww_dffs_0;
dffs_1 <= ww_dffs_1;
dffs_2 <= ww_dffs_2;
dffs_3 <= ww_dffs_3;
dffs_4 <= ww_dffs_4;
dffs_5 <= ww_dffs_5;
dffs_6 <= ww_dffs_6;
dffs_7 <= ww_dffs_7;
ctclr <= ww_ctclr;
inst : UA_RX_AP
PORT MAP (
	sload_path_4 => \wysi_counter|sload_path[4]\,
	sload_path_3 => \wysi_counter|sload_path[3]\,
	sload_path_2 => \wysi_counter|sload_path[2]\,
	sload_path_1 => \wysi_counter|sload_path[1]\,
	sload_path_0 => \wysi_counter|sload_path[0]\,
	sload_path_31 => \wysi_counter|sload_path[3]~1\,
	CLK => ww_clk,
	RST => ww_RST,
	dffs_0 => ww_dffs_0,
	dffs_1 => ww_dffs_1,
	dffs_2 => ww_dffs_2,
	dffs_3 => ww_dffs_3,
	dffs_4 => ww_dffs_4,
	dffs_5 => ww_dffs_5,
	dffs_6 => ww_dffs_6,
	dffs_7 => ww_dffs_7,
	rxd => ww_rxd,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	stf_stb => ww_stf_stb,
	eof_stb => ww_eof_stb,
	data_stb => ww_data_stb,
	ctclr => ww_ctclr,
	shen => \inst|shen~reg\,
	shd => \inst|shd~reg\);
inst4 : rxct4
PORT MAP (
	clock => ww_clk,
	aclr => ww_ctclr,
	clk_en => \wysi_counter|cout~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_3 => \wysi_counter|sload_path[3]~1\);
inst3 : rxct5
PORT MAP (
	clock => ww_clk,
	aclr => ww_ctclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_4 => \wysi_counter|sload_path[4]\,
	sload_path_3 => \wysi_counter|sload_path[3]\,
	sload_path_2 => \wysi_counter|sload_path[2]\,
	sload_path_1 => \wysi_counter|sload_path[1]\,
	sload_path_0 => \wysi_counter|sload_path[0]\,
	cout => \wysi_counter|cout~0\);
inst1 : rxshr8
PORT MAP (
	clock => ww_clk,
	ctclr => ww_ctclr,
	enable => \inst|shen~reg\,
	shd => \inst|shd~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	dffs_0 => ww_dffs_0,
	dffs_1 => ww_dffs_1,
	dffs_2 => ww_dffs_2,
	dffs_3 => ww_dffs_3,
	dffs_4 => ww_dffs_4,
	dffs_5 => ww_dffs_5,
	dffs_6 => ww_dffs_6,
	dffs_7 => ww_dffs_7);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	alt_synch_counter IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_2 : OUT std_logic
	);
END alt_synch_counter;

ARCHITECTURE structure OF alt_synch_counter IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL \sload_path[0]\ : std_logic;
SIGNAL \counter_cell[2]~COUT\ : std_logic;
SIGNAL \sload_path[3]\ : std_logic;
SIGNAL \counter_cell[3]~COUT\ : std_logic;
SIGNAL \counter_cell[0]~COUT\ : std_logic;
SIGNAL \sload_path[1]\ : std_logic;
SIGNAL \counter_cell[1]~COUT\ : std_logic;
SIGNAL ALT_NOT_ww_aclr : std_logic;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_4 <= ww_sload_path_4;
sload_path_2 <= ww_sload_path_2;
ALT_NOT_ww_aclr <= NOT ww_aclr;

\counter_cell[4]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_4 = DFFE(sload_path_4 $ !\counter_cell[3]~COUT\, GLOBAL(outclock0), ct_aclr, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A5A5",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_4,
	cin => \counter_cell[3]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_4);

\counter_cell[2]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_2 = DFFE(sload_path_2 $ !\counter_cell[1]~COUT\, GLOBAL(outclock0), ct_aclr, , )
-- \counter_cell[2]~COUT\ = CARRY(sload_path_2 & !\counter_cell[1]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_2,
	cin => \counter_cell[1]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_2,
	cout => \counter_cell[2]~COUT\);

\counter_cell[3]\ : apex20ke_lcell 
-- Equation(s):
-- \sload_path[3]\ = DFFE(\sload_path[3]\ $ \counter_cell[2]~COUT\, GLOBAL(outclock0), ct_aclr, , )
-- \counter_cell[3]~COUT\ = CARRY(!\counter_cell[2]~COUT\ # !\sload_path[3]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \sload_path[3]\,
	cin => \counter_cell[2]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sload_path[3]\,
	cout => \counter_cell[3]~COUT\);

\counter_cell[0]\ : apex20ke_lcell 
-- Equation(s):
-- \counter_cell[0]~COUT\ = CARRY()

-- pragma translate_off
GENERIC MAP (
	operation_mode => "qfbk_counter",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \counter_cell[0]~COUT\);

\counter_cell[1]\ : apex20ke_lcell 
-- Equation(s):
-- \sload_path[1]\ = DFFE(\sload_path[1]\ $ \counter_cell[0]~COUT\, GLOBAL(outclock0), ct_aclr, , )
-- \counter_cell[1]~COUT\ = CARRY(!\counter_cell[0]~COUT\ # !\sload_path[1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \sload_path[1]\,
	cin => \counter_cell[0]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sload_path[1]\,
	cout => \counter_cell[1]~COUT\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_counter IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_2 : OUT std_logic
	);
END lpm_counter;

ARCHITECTURE structure OF lpm_counter IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;

COMPONENT alt_synch_counter
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_2 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_4 <= ww_sload_path_4;
sload_path_2 <= ww_sload_path_2;
wysi_counter : alt_synch_counter
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_4 => ww_sload_path_4,
	sload_path_2 => ww_sload_path_2);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	ctup5 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_2 : OUT std_logic
	);
END ctup5;

ARCHITECTURE structure OF ctup5 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;

COMPONENT lpm_counter
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_2 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_4 <= ww_sload_path_4;
sload_path_2 <= ww_sload_path_2;
lpm_counter_component : lpm_counter
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_4 => ww_sload_path_4,
	sload_path_2 => ww_sload_path_2);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	GET_DUDT IS
    PORT (
	sload_path_4 : IN std_logic;
	sload_path_2 : IN std_logic;
	CLK : IN std_logic;
	hl_edge : IN std_logic;
	ctclr : IN std_logic;
	inst1 : IN std_logic;
	max_level : IN std_logic;
	min_level : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	rxd : OUT std_logic;
	max_ena : OUT std_logic;
	dudt_ena : OUT std_logic;
	min_ena : OUT std_logic;
	ct_aclr : OUT std_logic
	);
END GET_DUDT;

ARCHITECTURE structure OF GET_DUDT IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_CLK : std_logic;
SIGNAL ww_hl_edge : std_logic;
SIGNAL ww_ctclr : std_logic;
SIGNAL ww_inst1 : std_logic;
SIGNAL ww_max_level : std_logic;
SIGNAL ww_min_level : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_rxd : std_logic;
SIGNAL ww_max_ena : std_logic;
SIGNAL ww_dudt_ena : std_logic;
SIGNAL ww_min_ena : std_logic;
SIGNAL ww_ct_aclr : std_logic;
SIGNAL \sreg~36\ : std_logic;
SIGNAL \HLWT~18\ : std_logic;
SIGNAL \sreg~31\ : std_logic;
SIGNAL \IDLE~48\ : std_logic;
SIGNAL \_~392\ : std_logic;
SIGNAL \sreg~30\ : std_logic;
SIGNAL \MIN_DUDT~20\ : std_logic;
SIGNAL \sreg~33\ : std_logic;
SIGNAL \_~29\ : std_logic;
SIGNAL \sreg~34\ : std_logic;
SIGNAL \STB~18\ : std_logic;
SIGNAL \max_ena~42\ : std_logic;
SIGNAL \dudt_ena~64\ : std_logic;
SIGNAL \_~391\ : std_logic;
SIGNAL \min_ena~102\ : std_logic;
SIGNAL \min_ena~101\ : std_logic;
SIGNAL \ct_aclr~127\ : std_logic;
SIGNAL \_~393\ : std_logic;

BEGIN

ww_sload_path_4 <= sload_path_4;
ww_sload_path_2 <= sload_path_2;
ww_CLK <= CLK;
ww_hl_edge <= hl_edge;
ww_ctclr <= ctclr;
ww_inst1 <= inst1;
ww_max_level <= max_level;
ww_min_level <= min_level;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
rxd <= ww_rxd;
max_ena <= ww_max_ena;
dudt_ena <= ww_dudt_ena;
min_ena <= ww_min_ena;
ct_aclr <= ww_ct_aclr;

\rxd~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- rxd = DFFE(hl_edge & (\STB~18\ # !sload_path_4 & \sreg~34\), GLOBAL(outclock0), !\inst1~45\, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AA20",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_hl_edge,
	datab => ww_sload_path_4,
	datac => \sreg~34\,
	datad => \STB~18\,
	clk => ww_CLK,
	aclr => ww_inst1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_rxd);

\max_ena~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- max_ena = DFFE(\max_ena~42\ # !\sreg~30\ & !ctclr & max_level, GLOBAL(outclock0), !\inst1~45\, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF10",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~30\,
	datab => ww_ctclr,
	datac => ww_max_level,
	datad => \max_ena~42\,
	clk => ww_CLK,
	aclr => ww_inst1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_max_ena);

\dudt_ena~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- dudt_ena = DFFE(!\IDLE~48\ & !\dudt_ena~64\ & (!sload_path_4 # !\sreg~34\), GLOBAL(outclock0), !\inst1~45\, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0013",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~34\,
	datab => \IDLE~48\,
	datac => ww_sload_path_4,
	datad => \dudt_ena~64\,
	clk => ww_CLK,
	aclr => ww_inst1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_dudt_ena);

\min_ena~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- min_ena = DFFE(!\_~391\ & !\min_ena~102\ & !\min_ena~101\ & !\IDLE~48\, GLOBAL(outclock0), !\inst1~45\, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \_~391\,
	datab => \min_ena~102\,
	datac => \min_ena~101\,
	datad => \IDLE~48\,
	clk => ww_CLK,
	aclr => ww_inst1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_min_ena);

\ct_aclr~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- ct_aclr = DFFE(!\ct_aclr~127\ & !\_~392\ & (\_~393\ # !\sreg~34\), GLOBAL(outclock0), !\inst1~45\, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "1101",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \ct_aclr~127\,
	datab => \_~392\,
	datac => \sreg~34\,
	datad => \_~393\,
	clk => ww_CLK,
	aclr => ww_inst1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_ct_aclr);

\sreg~36_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~36\ = DFFE(rxd # !sload_path_4 & ctclr & \sreg~36\, GLOBAL(outclock0), !\inst1~45\, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DCCC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_4,
	datab => ww_rxd,
	datac => ww_ctclr,
	datad => \sreg~36\,
	clk => ww_CLK,
	aclr => ww_inst1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~36\);

\HLWT~18_I\ : apex20ke_lcell 
-- Equation(s):
-- \HLWT~18\ = !hl_edge & \sreg~31\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_hl_edge,
	datad => \sreg~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \HLWT~18\);

\sreg~31_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~31\ = DFFE(ctclr & (\HLWT~18\ # sload_path_4 & \sreg~36\), GLOBAL(outclock0), !\inst1~45\, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E0A0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \HLWT~18\,
	datab => ww_sload_path_4,
	datac => ww_ctclr,
	datad => \sreg~36\,
	clk => ww_CLK,
	aclr => ww_inst1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~31\);

\IDLE~48_I\ : apex20ke_lcell 
-- Equation(s):
-- \IDLE~48\ = !ctclr & (\sreg~36\ # \sreg~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F0C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \sreg~36\,
	datac => ww_ctclr,
	datad => \sreg~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \IDLE~48\);

\_~392_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~392\ = !\sreg~30\ & (ctclr # !min_level & !max_level)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5501",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~30\,
	datab => ww_min_level,
	datac => ww_max_level,
	datad => ww_ctclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~392\);

\sreg~30_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~30\ = DFFE(!\IDLE~48\ & !\_~392\ & (!sload_path_4 # !\sreg~34\), GLOBAL(outclock0), !\inst1~45\, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0013",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~34\,
	datab => \IDLE~48\,
	datac => ww_sload_path_4,
	datad => \_~392\,
	clk => ww_CLK,
	aclr => ww_inst1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~30\);

\MIN_DUDT~20_I\ : apex20ke_lcell 
-- Equation(s):
-- \MIN_DUDT~20\ = min_level & !\sreg~30\ & !ctclr

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "000C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_min_level,
	datac => \sreg~30\,
	datad => ww_ctclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \MIN_DUDT~20\);

\sreg~33_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~33\ = DFFE(!max_level & (\MIN_DUDT~20\ # !sload_path_2 & \sreg~33\), GLOBAL(outclock0), !\inst1~45\, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F04",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_2,
	datab => \sreg~33\,
	datac => ww_max_level,
	datad => \MIN_DUDT~20\,
	clk => ww_CLK,
	aclr => ww_inst1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~33\);

\_~29_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~29\ = \sreg~34\ & !sload_path_4 & !hl_edge

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0202",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~34\,
	datab => ww_sload_path_4,
	datac => ww_hl_edge,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~29\);

\sreg~34_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~34\ = DFFE(\_~29\ # sload_path_2 & (max_ena # \sreg~33\), GLOBAL(outclock0), !\inst1~45\, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFE0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_max_ena,
	datab => \sreg~33\,
	datac => ww_sload_path_2,
	datad => \_~29\,
	clk => ww_CLK,
	aclr => ww_inst1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~34\);

\STB~18_I\ : apex20ke_lcell 
-- Equation(s):
-- \STB~18\ = ctclr & \sreg~31\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_ctclr,
	datad => \sreg~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \STB~18\);

\max_ena~42_I\ : apex20ke_lcell 
-- Equation(s):
-- \max_ena~42\ = !sload_path_2 & (max_ena # \sreg~33\ & max_level)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5540",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_2,
	datab => \sreg~33\,
	datac => ww_max_level,
	datad => ww_max_ena,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \max_ena~42\);

\dudt_ena~64_I\ : apex20ke_lcell 
-- Equation(s):
-- \dudt_ena~64\ = !sload_path_2 & (\sreg~33\ # max_ena) # !\sreg~30\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5F4F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_2,
	datab => \sreg~33\,
	datac => \sreg~30\,
	datad => ww_max_ena,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \dudt_ena~64\);

\_~391_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~391\ = \sreg~34\ & sload_path_4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \sreg~34\,
	datad => ww_sload_path_4,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~391\);

\min_ena~102_I\ : apex20ke_lcell 
-- Equation(s):
-- \min_ena~102\ = !sload_path_2 & !max_level & \sreg~33\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0500",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_2,
	datac => ww_max_level,
	datad => \sreg~33\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \min_ena~102\);

\min_ena~101_I\ : apex20ke_lcell 
-- Equation(s):
-- \min_ena~101\ = !\sreg~30\ & (ctclr # !max_level)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5505",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~30\,
	datac => ww_max_level,
	datad => ww_ctclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \min_ena~101\);

\ct_aclr~127_I\ : apex20ke_lcell 
-- Equation(s):
-- \ct_aclr~127\ = \sreg~31\ # \sreg~36\ & (sload_path_4 # !ctclr)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF8C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_4,
	datab => \sreg~36\,
	datac => ww_ctclr,
	datad => \sreg~31\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \ct_aclr~127\);

\_~393_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~393\ = !sload_path_4 & !hl_edge

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "000F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_sload_path_4,
	datad => ww_hl_edge,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~393\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	adc_to_ser_dudt IS
    PORT (
	CLK : IN std_logic;
	ctclr : IN std_logic;
	inst1 : IN std_logic;
	points_9_0 : IN std_logic;
	points_8_0 : IN std_logic;
	points_5_0 : IN std_logic;
	points_4_0 : IN std_logic;
	points_2_0 : IN std_logic;
	points_3_0 : IN std_logic;
	points_6_0 : IN std_logic;
	points_7_0 : IN std_logic;
	points_0_0 : IN std_logic;
	points_1_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	hl_edge : OUT std_logic;
	rxd : OUT std_logic
	);
END adc_to_ser_dudt;

ARCHITECTURE structure OF adc_to_ser_dudt IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK : std_logic;
SIGNAL ww_ctclr : std_logic;
SIGNAL ww_inst1 : std_logic;
SIGNAL ww_points_9_0 : std_logic;
SIGNAL ww_points_8_0 : std_logic;
SIGNAL ww_points_5_0 : std_logic;
SIGNAL ww_points_4_0 : std_logic;
SIGNAL ww_points_2_0 : std_logic;
SIGNAL ww_points_3_0 : std_logic;
SIGNAL ww_points_6_0 : std_logic;
SIGNAL ww_points_7_0 : std_logic;
SIGNAL ww_points_0_0 : std_logic;
SIGNAL ww_points_1_0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_hl_edge : std_logic;
SIGNAL ww_rxd : std_logic;
SIGNAL \wysi_counter|sload_path[4]\ : std_logic;
SIGNAL \wysi_counter|sload_path[2]\ : std_logic;
SIGNAL \d_greater_a~0COMBOUT\ : std_logic;
SIGNAL \d_greater_a~1COMBOUT\ : std_logic;
SIGNAL \d_greater_a~2COMBOUT\ : std_logic;
SIGNAL \d_greater_a~3COMBOUT\ : std_logic;
SIGNAL \d_greater_a~4COMBOUT\ : std_logic;
SIGNAL \d_greater_a~5COMBOUT\ : std_logic;
SIGNAL \d_greater_a~6COMBOUT\ : std_logic;
SIGNAL \d_greater_a~7COMBOUT\ : std_logic;
SIGNAL \d_greater_a~8COMBOUT\ : std_logic;
SIGNAL \a_greater_d~0\ : std_logic;
SIGNAL \a_greater_d~0COMBOUT\ : std_logic;
SIGNAL \a_greater_d~1\ : std_logic;
SIGNAL \a_greater_d~1COMBOUT\ : std_logic;
SIGNAL \a_greater_d~2\ : std_logic;
SIGNAL \a_greater_d~2COMBOUT\ : std_logic;
SIGNAL \a_greater_d~3\ : std_logic;
SIGNAL \a_greater_d~3COMBOUT\ : std_logic;
SIGNAL \a_greater_d~4\ : std_logic;
SIGNAL \a_greater_d~4COMBOUT\ : std_logic;
SIGNAL \a_greater_d~5\ : std_logic;
SIGNAL \a_greater_d~5COMBOUT\ : std_logic;
SIGNAL \a_greater_d~6\ : std_logic;
SIGNAL \a_greater_d~6COMBOUT\ : std_logic;
SIGNAL \a_greater_d~7\ : std_logic;
SIGNAL \a_greater_d~7COMBOUT\ : std_logic;
SIGNAL \a_greater_d~8\ : std_logic;
SIGNAL \a_greater_d~8COMBOUT\ : std_logic;
SIGNAL \a_greater_d~9\ : std_logic;
SIGNAL \op_1~1COUT\ : std_logic;
SIGNAL \op_1~1\ : std_logic;
SIGNAL \op_1~2COUT\ : std_logic;
SIGNAL \op_1~2\ : std_logic;
SIGNAL \op_1~3COUT\ : std_logic;
SIGNAL \op_1~3\ : std_logic;
SIGNAL \op_1~4COUT\ : std_logic;
SIGNAL \op_1~4\ : std_logic;
SIGNAL \op_1~5COUT\ : std_logic;
SIGNAL \op_1~5\ : std_logic;
SIGNAL \op_1~6COUT\ : std_logic;
SIGNAL \op_1~6\ : std_logic;
SIGNAL \op_1~7COUT\ : std_logic;
SIGNAL \op_1~7\ : std_logic;
SIGNAL \op_1~8COUT\ : std_logic;
SIGNAL \op_1~8\ : std_logic;
SIGNAL \op_1~9COUT\ : std_logic;
SIGNAL \op_1~9\ : std_logic;
SIGNAL \op_1~10\ : std_logic;
SIGNAL \get_dudt_stm|max_ena~reg\ : std_logic;
SIGNAL \get_dudt_stm|dudt_ena~reg\ : std_logic;
SIGNAL \get_dudt_stm|min_ena~reg\ : std_logic;
SIGNAL \get_dudt_stm|ct_aclr~reg\ : std_logic;
SIGNAL max_level : std_logic;
SIGNAL min_level : std_logic;
SIGNAL \op_4~84\ : std_logic;
SIGNAL \op_4~85\ : std_logic;
SIGNAL \op_4~29\ : std_logic;
SIGNAL \_~490\ : std_logic;
SIGNAL \ina[7]\ : std_logic;
SIGNAL \inb[7]\ : std_logic;
SIGNAL \inc[7]\ : std_logic;
SIGNAL \ind[7]\ : std_logic;
SIGNAL \ina[6]\ : std_logic;
SIGNAL \inb[6]\ : std_logic;
SIGNAL \inc[6]\ : std_logic;
SIGNAL \ind[6]\ : std_logic;
SIGNAL \ina[5]\ : std_logic;
SIGNAL \inb[5]\ : std_logic;
SIGNAL \inc[5]\ : std_logic;
SIGNAL \ind[5]\ : std_logic;
SIGNAL \ina[4]\ : std_logic;
SIGNAL \inb[4]\ : std_logic;
SIGNAL \inc[4]\ : std_logic;
SIGNAL \ind[4]\ : std_logic;
SIGNAL \ina[3]\ : std_logic;
SIGNAL \inb[3]\ : std_logic;
SIGNAL \inc[3]\ : std_logic;
SIGNAL \ind[3]\ : std_logic;
SIGNAL \ina[2]\ : std_logic;
SIGNAL \inb[2]\ : std_logic;
SIGNAL \inc[2]\ : std_logic;
SIGNAL \ind[2]\ : std_logic;
SIGNAL \ina[1]\ : std_logic;
SIGNAL \inb[1]\ : std_logic;
SIGNAL \inc[1]\ : std_logic;
SIGNAL \ind[1]\ : std_logic;
SIGNAL \ina[0]\ : std_logic;
SIGNAL \inb[0]\ : std_logic;
SIGNAL \inc[0]\ : std_logic;
SIGNAL \ind[0]\ : std_logic;
SIGNAL \op_5~1COUT\ : std_logic;
SIGNAL \op_5~2COUT\ : std_logic;
SIGNAL \op_5~3COUT\ : std_logic;
SIGNAL \op_5~4COUT\ : std_logic;
SIGNAL \op_5~5COUT\ : std_logic;
SIGNAL \op_5~6COUT\ : std_logic;
SIGNAL \op_5~7COUT\ : std_logic;
SIGNAL \op_5~8\ : std_logic;
SIGNAL \op_5~7\ : std_logic;
SIGNAL \op_6~375\ : std_logic;
SIGNAL \dudt[4]\ : std_logic;
SIGNAL \op_5~3\ : std_logic;
SIGNAL \op_5~5\ : std_logic;
SIGNAL \op_5~6\ : std_logic;
SIGNAL \op_5~4\ : std_logic;
SIGNAL \op_6~374\ : std_logic;
SIGNAL \op_5~2\ : std_logic;
SIGNAL \op_5~1\ : std_logic;
SIGNAL \op_6~376\ : std_logic;
SIGNAL \op_6~377\ : std_logic;
SIGNAL \op_6~378\ : std_logic;
SIGNAL \ina[9]\ : std_logic;
SIGNAL \inb[9]\ : std_logic;
SIGNAL \inc[9]\ : std_logic;
SIGNAL \ind[9]\ : std_logic;
SIGNAL \ina[8]\ : std_logic;
SIGNAL \inb[8]\ : std_logic;
SIGNAL \inc[8]\ : std_logic;
SIGNAL \ind[8]\ : std_logic;
SIGNAL \d_greater_a~0\ : std_logic;
SIGNAL \d_greater_a~1\ : std_logic;
SIGNAL \d_greater_a~2\ : std_logic;
SIGNAL \d_greater_a~3\ : std_logic;
SIGNAL \d_greater_a~4\ : std_logic;
SIGNAL \d_greater_a~5\ : std_logic;
SIGNAL \d_greater_a~6\ : std_logic;
SIGNAL \d_greater_a~7\ : std_logic;
SIGNAL \d_greater_a~8\ : std_logic;
SIGNAL \d_greater_a~9\ : std_logic;
SIGNAL \op_5~8COUT\ : std_logic;
SIGNAL \op_5~9COUT\ : std_logic;
SIGNAL \op_5~10\ : std_logic;
SIGNAL \dudt[8]\ : std_logic;
SIGNAL \op_5~9\ : std_logic;
SIGNAL \_~487\ : std_logic;
SIGNAL \op_6~44\ : std_logic;
SIGNAL \ALT_NOT_get_dudt_stm|dudt_ena~reg\ : std_logic;

COMPONENT ctup5
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_2 : OUT std_logic);
END COMPONENT;

COMPONENT GET_DUDT
    PORT (
	sload_path_4 : IN std_logic;
	sload_path_2 : IN std_logic;
	CLK : IN std_logic;
	hl_edge : IN std_logic;
	ctclr : IN std_logic;
	inst1 : IN std_logic;
	max_level : IN std_logic;
	min_level : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	rxd : OUT std_logic;
	max_ena : OUT std_logic;
	dudt_ena : OUT std_logic;
	min_ena : OUT std_logic;
	ct_aclr : OUT std_logic);
END COMPONENT;

BEGIN

ww_CLK <= CLK;
ww_ctclr <= ctclr;
ww_inst1 <= inst1;
ww_points_9_0 <= points_9_0;
ww_points_8_0 <= points_8_0;
ww_points_5_0 <= points_5_0;
ww_points_4_0 <= points_4_0;
ww_points_2_0 <= points_2_0;
ww_points_3_0 <= points_3_0;
ww_points_6_0 <= points_6_0;
ww_points_7_0 <= points_7_0;
ww_points_0_0 <= points_0_0;
ww_points_1_0 <= points_1_0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
hl_edge <= ww_hl_edge;
rxd <= ww_rxd;
\ALT_NOT_get_dudt_stm|dudt_ena~reg\ <= NOT \get_dudt_stm|dudt_ena~reg\;
ct : ctup5
PORT MAP (
	clock => ww_CLK,
	aclr => \get_dudt_stm|ct_aclr~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_4 => \wysi_counter|sload_path[4]\,
	sload_path_2 => \wysi_counter|sload_path[2]\);
get_dudt_stm : GET_DUDT
PORT MAP (
	sload_path_4 => \wysi_counter|sload_path[4]\,
	sload_path_2 => \wysi_counter|sload_path[2]\,
	CLK => ww_CLK,
	hl_edge => ww_hl_edge,
	ctclr => ww_ctclr,
	inst1 => ww_inst1,
	max_level => max_level,
	min_level => min_level,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	rxd => ww_rxd,
	max_ena => \get_dudt_stm|max_ena~reg\,
	dudt_ena => \get_dudt_stm|dudt_ena~reg\,
	min_ena => \get_dudt_stm|min_ena~reg\,
	ct_aclr => \get_dudt_stm|ct_aclr~reg\);

\a_greater_d~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \a_greater_d~0\ = CARRY(\ina[0]\ & !\ind[0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "0022",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \ina[0]\,
	datab => \ind[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \a_greater_d~0\);

\a_greater_d~1_I\ : apex20ke_lcell 
-- Equation(s):
-- \a_greater_d~1\ = CARRY(\ina[1]\ & \ind[1]\ & !\a_greater_d~0\ # !\ina[1]\ & (\ind[1]\ # !\a_greater_d~0\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "004D",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \ina[1]\,
	datab => \ind[1]\,
	cin => \a_greater_d~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \a_greater_d~1\);

\a_greater_d~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \a_greater_d~2\ = CARRY(\ind[2]\ & \ina[2]\ & !\a_greater_d~1\ # !\ind[2]\ & (\ina[2]\ # !\a_greater_d~1\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "004D",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \ind[2]\,
	datab => \ina[2]\,
	cin => \a_greater_d~1\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \a_greater_d~2\);

\a_greater_d~3_I\ : apex20ke_lcell 
-- Equation(s):
-- \a_greater_d~3\ = CARRY(\ina[3]\ & \ind[3]\ & !\a_greater_d~2\ # !\ina[3]\ & (\ind[3]\ # !\a_greater_d~2\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "004D",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \ina[3]\,
	datab => \ind[3]\,
	cin => \a_greater_d~2\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \a_greater_d~3\);

\a_greater_d~4_I\ : apex20ke_lcell 
-- Equation(s):
-- \a_greater_d~4\ = CARRY(\ind[4]\ & \ina[4]\ & !\a_greater_d~3\ # !\ind[4]\ & (\ina[4]\ # !\a_greater_d~3\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "004D",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \ind[4]\,
	datab => \ina[4]\,
	cin => \a_greater_d~3\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \a_greater_d~4\);

\a_greater_d~5_I\ : apex20ke_lcell 
-- Equation(s):
-- \a_greater_d~5\ = CARRY(\ind[5]\ & (!\a_greater_d~4\ # !\ina[5]\) # !\ind[5]\ & !\ina[5]\ & !\a_greater_d~4\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "002B",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \ind[5]\,
	datab => \ina[5]\,
	cin => \a_greater_d~4\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \a_greater_d~5\);

\a_greater_d~6_I\ : apex20ke_lcell 
-- Equation(s):
-- \a_greater_d~6\ = CARRY(\ind[6]\ & \ina[6]\ & !\a_greater_d~5\ # !\ind[6]\ & (\ina[6]\ # !\a_greater_d~5\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "004D",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \ind[6]\,
	datab => \ina[6]\,
	cin => \a_greater_d~5\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \a_greater_d~6\);

\a_greater_d~7_I\ : apex20ke_lcell 
-- Equation(s):
-- \a_greater_d~7\ = CARRY(\ina[7]\ & \ind[7]\ & !\a_greater_d~6\ # !\ina[7]\ & (\ind[7]\ # !\a_greater_d~6\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "004D",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \ina[7]\,
	datab => \ind[7]\,
	cin => \a_greater_d~6\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \a_greater_d~7\);

\a_greater_d~8_I\ : apex20ke_lcell 
-- Equation(s):
-- \a_greater_d~8\ = CARRY(\ina[8]\ & (!\a_greater_d~7\ # !\ind[8]\) # !\ina[8]\ & !\ind[8]\ & !\a_greater_d~7\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "002B",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \ina[8]\,
	datab => \ind[8]\,
	cin => \a_greater_d~7\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \a_greater_d~8\);

\a_greater_d~9_I\ : apex20ke_lcell 
-- Equation(s):
-- \a_greater_d~9\ = \ina[9]\ & (\a_greater_d~8\ # !\ind[9]\) # !\ina[9]\ & \a_greater_d~8\ & !\ind[9]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A0FA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \ina[9]\,
	datad => \ind[9]\,
	cin => \a_greater_d~8\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \a_greater_d~9\);

\op_1~1_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_1~1\ = \ind[0]\ $ \ina[0]\
-- \op_1~1COUT\ = CARRY(\ina[0]\ # !\ind[0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "66DD",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \ind[0]\,
	datab => \ina[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_1~1\,
	cout => \op_1~1COUT\);

\op_1~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_1~2\ = \ind[1]\ $ \ina[1]\ $ !\op_1~1COUT\
-- \op_1~2COUT\ = CARRY(\ind[1]\ & (!\op_1~1COUT\ # !\ina[1]\) # !\ind[1]\ & !\ina[1]\ & !\op_1~1COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "692B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \ind[1]\,
	datab => \ina[1]\,
	cin => \op_1~1COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_1~2\,
	cout => \op_1~2COUT\);

\op_1~3_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_1~3\ = \ina[2]\ $ \ind[2]\ $ \op_1~2COUT\
-- \op_1~3COUT\ = CARRY(\ina[2]\ & (!\op_1~2COUT\ # !\ind[2]\) # !\ina[2]\ & !\ind[2]\ & !\op_1~2COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "962B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \ina[2]\,
	datab => \ind[2]\,
	cin => \op_1~2COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_1~3\,
	cout => \op_1~3COUT\);

\op_1~4_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_1~4\ = \ind[3]\ $ \ina[3]\ $ !\op_1~3COUT\
-- \op_1~4COUT\ = CARRY(\ind[3]\ & (!\op_1~3COUT\ # !\ina[3]\) # !\ind[3]\ & !\ina[3]\ & !\op_1~3COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "692B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \ind[3]\,
	datab => \ina[3]\,
	cin => \op_1~3COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_1~4\,
	cout => \op_1~4COUT\);

\op_1~5_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_1~5\ = \ind[4]\ $ \ina[4]\ $ \op_1~4COUT\
-- \op_1~5COUT\ = CARRY(\ind[4]\ & \ina[4]\ & !\op_1~4COUT\ # !\ind[4]\ & (\ina[4]\ # !\op_1~4COUT\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "964D",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \ind[4]\,
	datab => \ina[4]\,
	cin => \op_1~4COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_1~5\,
	cout => \op_1~5COUT\);

\op_1~6_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_1~6\ = \ina[5]\ $ \ind[5]\ $ !\op_1~5COUT\
-- \op_1~6COUT\ = CARRY(\ina[5]\ & \ind[5]\ & !\op_1~5COUT\ # !\ina[5]\ & (\ind[5]\ # !\op_1~5COUT\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "694D",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \ina[5]\,
	datab => \ind[5]\,
	cin => \op_1~5COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_1~6\,
	cout => \op_1~6COUT\);

\op_1~7_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_1~7\ = \ina[6]\ $ \ind[6]\ $ \op_1~6COUT\
-- \op_1~7COUT\ = CARRY(\ina[6]\ & (!\op_1~6COUT\ # !\ind[6]\) # !\ina[6]\ & !\ind[6]\ & !\op_1~6COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "962B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \ina[6]\,
	datab => \ind[6]\,
	cin => \op_1~6COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_1~7\,
	cout => \op_1~7COUT\);

\op_1~8_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_1~8\ = \ind[7]\ $ \ina[7]\ $ !\op_1~7COUT\
-- \op_1~8COUT\ = CARRY(\ind[7]\ & (!\op_1~7COUT\ # !\ina[7]\) # !\ind[7]\ & !\ina[7]\ & !\op_1~7COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "692B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \ind[7]\,
	datab => \ina[7]\,
	cin => \op_1~7COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_1~8\,
	cout => \op_1~8COUT\);

\op_1~9_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_1~9\ = \ind[8]\ $ \ina[8]\ $ \op_1~8COUT\
-- \op_1~9COUT\ = CARRY(\ind[8]\ & \ina[8]\ & !\op_1~8COUT\ # !\ind[8]\ & (\ina[8]\ # !\op_1~8COUT\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "964D",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \ind[8]\,
	datab => \ina[8]\,
	cin => \op_1~8COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_1~9\,
	cout => \op_1~9COUT\);

\op_1~10_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_1~10\ = \ind[9]\ $ \op_1~9COUT\ $ !\ina[9]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5AA5",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \ind[9]\,
	datad => \ina[9]\,
	cin => \op_1~9COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_1~10\);

\max_level~I\ : apex20ke_lcell 
-- Equation(s):
-- max_level = DFFE(\a_greater_d~9\ & (\op_1~10\ # \op_1~9\ & \op_4~29\), GLOBAL(outclock0), !\inst1~45\, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C888",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \op_1~10\,
	datab => \a_greater_d~9\,
	datac => \op_1~9\,
	datad => \op_4~29\,
	clk => ww_CLK,
	aclr => ww_inst1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => max_level);

\min_level~I\ : apex20ke_lcell 
-- Equation(s):
-- min_level = DFFE(\a_greater_d~9\ & (\op_1~10\ # \_~490\ # !\op_4~85\), GLOBAL(outclock0), !\inst1~45\, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FB00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \op_1~10\,
	datab => \op_4~85\,
	datac => \_~490\,
	datad => \a_greater_d~9\,
	clk => ww_CLK,
	aclr => ww_inst1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => min_level);

\op_4~84_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_4~84\ = \op_1~4\ # \op_1~3\ # \op_1~2\ # \op_1~5\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \op_1~4\,
	datab => \op_1~3\,
	datac => \op_1~2\,
	datad => \op_1~5\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_4~84\);

\op_4~85_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_4~85\ = !\op_1~7\ & !\op_1~6\ & !\op_1~8\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0005",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \op_1~7\,
	datac => \op_1~6\,
	datad => \op_1~8\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_4~85\);

\op_4~29_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_4~29\ = \op_4~84\ # \op_1~1\ # !\op_4~85\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FBFB",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \op_4~84\,
	datab => \op_4~85\,
	datac => \op_1~1\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_4~29\);

\_~490_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~490\ = \op_1~9\ # \op_1~4\ & \op_1~5\ & \op_1~3\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F8F0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \op_1~4\,
	datab => \op_1~5\,
	datac => \op_1~9\,
	datad => \op_1~3\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~490\);

\hl_edge~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- hl_edge = DFFE(\d_greater_a~9\ & (\_~487\ # \op_6~378\ & !\op_6~44\), GLOBAL(outclock0), !\inst1~45\, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C0C8",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \op_6~378\,
	datab => \d_greater_a~9\,
	datac => \_~487\,
	datad => \op_6~44\,
	clk => ww_CLK,
	aclr => ww_inst1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_hl_edge);

\ina[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- \ina[7]\ = DFFE(points_7_0, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_points_7_0,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \ina[7]\);

\inb[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inb[7]\ = DFFE(\ina[7]\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \ina[7]\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inb[7]\);

\inc[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inc[7]\ = DFFE(\inb[7]\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \inb[7]\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inc[7]\);

\ind[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- \ind[7]\ = DFFE(\inc[7]\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \inc[7]\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \ind[7]\);

\ina[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \ina[6]\ = DFFE(points_6_0, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_points_6_0,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \ina[6]\);

\inb[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inb[6]\ = DFFE(\ina[6]\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \ina[6]\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inb[6]\);

\inc[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inc[6]\ = DFFE(\inb[6]\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \inb[6]\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inc[6]\);

\ind[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \ind[6]\ = DFFE(\inc[6]\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \inc[6]\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \ind[6]\);

\ina[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \ina[5]\ = DFFE(points_5_0, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_points_5_0,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \ina[5]\);

\inb[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inb[5]\ = DFFE(\ina[5]\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \ina[5]\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inb[5]\);

\inc[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inc[5]\ = DFFE(\inb[5]\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \inb[5]\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inc[5]\);

\ind[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \ind[5]\ = DFFE(\inc[5]\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \inc[5]\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \ind[5]\);

\ina[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \ina[4]\ = DFFE(points_4_0, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_points_4_0,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \ina[4]\);

\inb[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inb[4]\ = DFFE(\ina[4]\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \ina[4]\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inb[4]\);

\inc[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inc[4]\ = DFFE(\inb[4]\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \inb[4]\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inc[4]\);

\ind[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \ind[4]\ = DFFE(\inc[4]\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \inc[4]\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \ind[4]\);

\ina[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \ina[3]\ = DFFE(points_3_0, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_points_3_0,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \ina[3]\);

\inb[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inb[3]\ = DFFE(\ina[3]\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \ina[3]\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inb[3]\);

\inc[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inc[3]\ = DFFE(\inb[3]\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \inb[3]\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inc[3]\);

\ind[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \ind[3]\ = DFFE(\inc[3]\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \inc[3]\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \ind[3]\);

\ina[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \ina[2]\ = DFFE(points_2_0, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_points_2_0,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \ina[2]\);

\inb[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inb[2]\ = DFFE(\ina[2]\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \ina[2]\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inb[2]\);

\inc[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inc[2]\ = DFFE(\inb[2]\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \inb[2]\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inc[2]\);

\ind[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \ind[2]\ = DFFE(\inc[2]\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \inc[2]\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \ind[2]\);

\ina[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \ina[1]\ = DFFE(points_1_0, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_points_1_0,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \ina[1]\);

\inb[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inb[1]\ = DFFE(\ina[1]\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \ina[1]\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inb[1]\);

\inc[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inc[1]\ = DFFE(\inb[1]\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \inb[1]\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inc[1]\);

\ind[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \ind[1]\ = DFFE(\inc[1]\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \inc[1]\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \ind[1]\);

\ina[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \ina[0]\ = DFFE(points_0_0, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_points_0_0,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \ina[0]\);

\inb[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inb[0]\ = DFFE(\ina[0]\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \ina[0]\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inb[0]\);

\inc[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inc[0]\ = DFFE(\inb[0]\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \inb[0]\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inc[0]\);

\ind[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \ind[0]\ = DFFE(\inc[0]\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \inc[0]\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \ind[0]\);

\op_5~1_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~1\ = \ind[0]\ $ \ina[0]\
-- \op_5~1COUT\ = CARRY(\ind[0]\ # !\ina[0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "66BB",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \ind[0]\,
	datab => \ina[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~1\,
	cout => \op_5~1COUT\);

\op_5~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~2\ = \ina[1]\ $ \ind[1]\ $ !\op_5~1COUT\
-- \op_5~2COUT\ = CARRY(\ina[1]\ & (!\op_5~1COUT\ # !\ind[1]\) # !\ina[1]\ & !\ind[1]\ & !\op_5~1COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "692B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \ina[1]\,
	datab => \ind[1]\,
	cin => \op_5~1COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~2\,
	cout => \op_5~2COUT\);

\op_5~3_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~3\ = \ind[2]\ $ \ina[2]\ $ \op_5~2COUT\
-- \op_5~3COUT\ = CARRY(\ind[2]\ & (!\op_5~2COUT\ # !\ina[2]\) # !\ind[2]\ & !\ina[2]\ & !\op_5~2COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "962B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \ind[2]\,
	datab => \ina[2]\,
	cin => \op_5~2COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~3\,
	cout => \op_5~3COUT\);

\op_5~4_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~4\ = \ind[3]\ $ \ina[3]\ $ !\op_5~3COUT\
-- \op_5~4COUT\ = CARRY(\ind[3]\ & \ina[3]\ & !\op_5~3COUT\ # !\ind[3]\ & (\ina[3]\ # !\op_5~3COUT\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "694D",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \ind[3]\,
	datab => \ina[3]\,
	cin => \op_5~3COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~4\,
	cout => \op_5~4COUT\);

\op_5~5_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~5\ = \ind[4]\ $ \ina[4]\ $ \op_5~4COUT\
-- \op_5~5COUT\ = CARRY(\ind[4]\ & (!\op_5~4COUT\ # !\ina[4]\) # !\ind[4]\ & !\ina[4]\ & !\op_5~4COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "962B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \ind[4]\,
	datab => \ina[4]\,
	cin => \op_5~4COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~5\,
	cout => \op_5~5COUT\);

\op_5~6_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~6\ = \ina[5]\ $ \ind[5]\ $ !\op_5~5COUT\
-- \op_5~6COUT\ = CARRY(\ina[5]\ & (!\op_5~5COUT\ # !\ind[5]\) # !\ina[5]\ & !\ind[5]\ & !\op_5~5COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "692B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \ina[5]\,
	datab => \ind[5]\,
	cin => \op_5~5COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~6\,
	cout => \op_5~6COUT\);

\op_5~7_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~7\ = \ina[6]\ $ \ind[6]\ $ \op_5~6COUT\
-- \op_5~7COUT\ = CARRY(\ina[6]\ & \ind[6]\ & !\op_5~6COUT\ # !\ina[6]\ & (\ind[6]\ # !\op_5~6COUT\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "964D",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \ina[6]\,
	datab => \ind[6]\,
	cin => \op_5~6COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~7\,
	cout => \op_5~7COUT\);

\op_5~8_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~8\ = \ina[7]\ $ \ind[7]\ $ !\op_5~7COUT\
-- \op_5~8COUT\ = CARRY(\ina[7]\ & (!\op_5~7COUT\ # !\ind[7]\) # !\ina[7]\ & !\ind[7]\ & !\op_5~7COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "692B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \ina[7]\,
	datab => \ind[7]\,
	cin => \op_5~7COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~8\,
	cout => \op_5~8COUT\);

\op_6~375_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_6~375\ = \op_5~8\ # \op_5~7\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FCFC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \op_5~8\,
	datac => \op_5~7\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_6~375\);

\dudt[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dudt[4]\ = DFFE(!min_ena, GLOBAL(outclock0), , , !dudt_ena)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00FF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \get_dudt_stm|min_ena~reg\,
	clk => ww_CLK,
	ena => \ALT_NOT_get_dudt_stm|dudt_ena~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dudt[4]\);

\op_6~374_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_6~374\ = \op_5~6\ # \op_5~3\ & \op_5~5\ & \op_5~4\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F8F0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \op_5~3\,
	datab => \op_5~5\,
	datac => \op_5~6\,
	datad => \op_5~4\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_6~374\);

\op_6~376_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_6~376\ = \op_5~2\ # \op_5~1\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFCC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \op_5~2\,
	datad => \op_5~1\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_6~376\);

\op_6~377_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_6~377\ = \op_5~3\ # \op_5~4\ # \op_6~376\ # \op_5~5\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \op_5~3\,
	datab => \op_5~4\,
	datac => \op_6~376\,
	datad => \op_5~5\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_6~377\);

\op_6~378_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_6~378\ = \op_6~375\ # \op_6~374\ # !\dudt[4]\ & \op_6~377\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FBFA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \op_6~375\,
	datab => \dudt[4]\,
	datac => \op_6~374\,
	datad => \op_6~377\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_6~378\);

\ina[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- \ina[9]\ = DFFE(points_9_0, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_points_9_0,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \ina[9]\);

\inb[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inb[9]\ = DFFE(\ina[9]\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \ina[9]\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inb[9]\);

\inc[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inc[9]\ = DFFE(\inb[9]\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \inb[9]\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inc[9]\);

\ind[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- \ind[9]\ = DFFE(\inc[9]\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \inc[9]\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \ind[9]\);

\ina[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- \ina[8]\ = DFFE(points_8_0, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_points_8_0,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \ina[8]\);

\inb[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inb[8]\ = DFFE(\ina[8]\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \ina[8]\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inb[8]\);

\inc[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inc[8]\ = DFFE(\inb[8]\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \inb[8]\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inc[8]\);

\ind[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- \ind[8]\ = DFFE(\inc[8]\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \inc[8]\,
	clk => ww_CLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \ind[8]\);

\d_greater_a~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \d_greater_a~0\ = CARRY(\ind[0]\ & !\ina[0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "0022",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \ind[0]\,
	datab => \ina[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \d_greater_a~0\);

\d_greater_a~1_I\ : apex20ke_lcell 
-- Equation(s):
-- \d_greater_a~1\ = CARRY(\ind[1]\ & \ina[1]\ & !\d_greater_a~0\ # !\ind[1]\ & (\ina[1]\ # !\d_greater_a~0\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "004D",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \ind[1]\,
	datab => \ina[1]\,
	cin => \d_greater_a~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \d_greater_a~1\);

\d_greater_a~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \d_greater_a~2\ = CARRY(\ina[2]\ & \ind[2]\ & !\d_greater_a~1\ # !\ina[2]\ & (\ind[2]\ # !\d_greater_a~1\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "004D",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \ina[2]\,
	datab => \ind[2]\,
	cin => \d_greater_a~1\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \d_greater_a~2\);

\d_greater_a~3_I\ : apex20ke_lcell 
-- Equation(s):
-- \d_greater_a~3\ = CARRY(\ind[3]\ & \ina[3]\ & !\d_greater_a~2\ # !\ind[3]\ & (\ina[3]\ # !\d_greater_a~2\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "004D",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \ind[3]\,
	datab => \ina[3]\,
	cin => \d_greater_a~2\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \d_greater_a~3\);

\d_greater_a~4_I\ : apex20ke_lcell 
-- Equation(s):
-- \d_greater_a~4\ = CARRY(\ina[4]\ & \ind[4]\ & !\d_greater_a~3\ # !\ina[4]\ & (\ind[4]\ # !\d_greater_a~3\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "004D",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \ina[4]\,
	datab => \ind[4]\,
	cin => \d_greater_a~3\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \d_greater_a~4\);

\d_greater_a~5_I\ : apex20ke_lcell 
-- Equation(s):
-- \d_greater_a~5\ = CARRY(\ind[5]\ & \ina[5]\ & !\d_greater_a~4\ # !\ind[5]\ & (\ina[5]\ # !\d_greater_a~4\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "004D",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \ind[5]\,
	datab => \ina[5]\,
	cin => \d_greater_a~4\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \d_greater_a~5\);

\d_greater_a~6_I\ : apex20ke_lcell 
-- Equation(s):
-- \d_greater_a~6\ = CARRY(\ind[6]\ & (!\d_greater_a~5\ # !\ina[6]\) # !\ind[6]\ & !\ina[6]\ & !\d_greater_a~5\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "002B",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \ind[6]\,
	datab => \ina[6]\,
	cin => \d_greater_a~5\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \d_greater_a~6\);

\d_greater_a~7_I\ : apex20ke_lcell 
-- Equation(s):
-- \d_greater_a~7\ = CARRY(\ind[7]\ & \ina[7]\ & !\d_greater_a~6\ # !\ind[7]\ & (\ina[7]\ # !\d_greater_a~6\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "004D",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \ind[7]\,
	datab => \ina[7]\,
	cin => \d_greater_a~6\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \d_greater_a~7\);

\d_greater_a~8_I\ : apex20ke_lcell 
-- Equation(s):
-- \d_greater_a~8\ = CARRY(\ind[8]\ & (!\d_greater_a~7\ # !\ina[8]\) # !\ind[8]\ & !\ina[8]\ & !\d_greater_a~7\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "002B",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \ind[8]\,
	datab => \ina[8]\,
	cin => \d_greater_a~7\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \d_greater_a~8\);

\d_greater_a~9_I\ : apex20ke_lcell 
-- Equation(s):
-- \d_greater_a~9\ = \ina[9]\ & \d_greater_a~8\ & \ind[9]\ # !\ina[9]\ & (\d_greater_a~8\ # \ind[9]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "F550",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \ina[9]\,
	datad => \ind[9]\,
	cin => \d_greater_a~8\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \d_greater_a~9\);

\op_5~9_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~9\ = \ina[8]\ $ \ind[8]\ $ \op_5~8COUT\
-- \op_5~9COUT\ = CARRY(\ina[8]\ & \ind[8]\ & !\op_5~8COUT\ # !\ina[8]\ & (\ind[8]\ # !\op_5~8COUT\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "964D",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \ina[8]\,
	datab => \ind[8]\,
	cin => \op_5~8COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~9\,
	cout => \op_5~9COUT\);

\op_5~10_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~10\ = \ina[9]\ $ \op_5~9COUT\ $ !\ind[9]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3CC3",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \ina[9]\,
	datad => \ind[9]\,
	cin => \op_5~9COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~10\);

\dudt[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dudt[8]\ = DFFE(max_ena, GLOBAL(outclock0), , , !dudt_ena)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \get_dudt_stm|max_ena~reg\,
	clk => ww_CLK,
	ena => \ALT_NOT_get_dudt_stm|dudt_ena~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dudt[8]\);

\_~487_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~487\ = \op_5~10\ # !\dudt[8]\ & \op_5~9\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFCC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \op_5~10\,
	datac => \dudt[8]\,
	datad => \op_5~9\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~487\);

\op_6~44_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_6~44\ = \dudt[8]\ $ \op_5~9\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \dudt[8]\,
	datad => \op_5~9\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_6~44\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	altshift_23 IS
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	clock : IN std_logic;
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_3 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_31 : IN std_logic;
	sout_node_01 : IN std_logic;
	sout_node_11 : IN std_logic;
	sout_node_21 : IN std_logic;
	sout_node_32 : IN std_logic;
	sout_node_41 : IN std_logic;
	inst5 : IN std_logic;
	\00012\ : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	cs_buffer_02 : IN std_logic;
	\000121\ : IN std_logic;
	result_node : IN std_logic;
	\000122\ : IN std_logic;
	\000123\ : IN std_logic;
	\000124\ : IN std_logic;
	\000125\ : IN std_logic;
	\000126\ : IN std_logic;
	\000127\ : IN std_logic;
	\000128\ : IN std_logic;
	\000129\ : IN std_logic;
	cs_buffer_03 : IN std_logic;
	cs_buffer_04 : IN std_logic;
	cs_buffer_05 : IN std_logic;
	cs_buffer_06 : IN std_logic;
	cs_buffer_07 : IN std_logic;
	cs_buffer_08 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	points_9_0 : OUT std_logic;
	points_8_0 : OUT std_logic;
	points_5_0 : OUT std_logic;
	points_4_0 : OUT std_logic;
	points_2_0 : OUT std_logic;
	points_3_0 : OUT std_logic;
	points_6_0 : OUT std_logic;
	points_7_0 : OUT std_logic;
	points_0_0 : OUT std_logic;
	points_1_0 : OUT std_logic
	);
END altshift_23;

ARCHITECTURE structure OF altshift_23 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_clock : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_31 : std_logic;
SIGNAL ww_sout_node_01 : std_logic;
SIGNAL ww_sout_node_11 : std_logic;
SIGNAL ww_sout_node_21 : std_logic;
SIGNAL ww_sout_node_32 : std_logic;
SIGNAL ww_sout_node_41 : std_logic;
SIGNAL ww_inst5 : std_logic;
SIGNAL ww_00012 : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_000121 : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL ww_000122 : std_logic;
SIGNAL ww_000123 : std_logic;
SIGNAL ww_000124 : std_logic;
SIGNAL ww_000125 : std_logic;
SIGNAL ww_000126 : std_logic;
SIGNAL ww_000127 : std_logic;
SIGNAL ww_000128 : std_logic;
SIGNAL ww_000129 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_cs_buffer_04 : std_logic;
SIGNAL ww_cs_buffer_05 : std_logic;
SIGNAL ww_cs_buffer_06 : std_logic;
SIGNAL ww_cs_buffer_07 : std_logic;
SIGNAL ww_cs_buffer_08 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_points_9_0 : std_logic;
SIGNAL ww_points_8_0 : std_logic;
SIGNAL ww_points_5_0 : std_logic;
SIGNAL ww_points_4_0 : std_logic;
SIGNAL ww_points_2_0 : std_logic;
SIGNAL ww_points_3_0 : std_logic;
SIGNAL ww_points_6_0 : std_logic;
SIGNAL ww_points_7_0 : std_logic;
SIGNAL ww_points_0_0 : std_logic;
SIGNAL ww_points_1_0 : std_logic;
SIGNAL ALT_NOT_ww_clock : std_logic;
SIGNAL ALT_NOT_ww_inst5 : std_logic;

BEGIN

ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_clock <= clock;
ww_sout_node_0 <= sout_node_0;
ww_sout_node_1 <= sout_node_1;
ww_sout_node_2 <= sout_node_2;
ww_sout_node_3 <= sout_node_3;
ww_sout_node_4 <= sout_node_4;
ww_sout_node_31 <= sout_node_31;
ww_sout_node_01 <= sout_node_01;
ww_sout_node_11 <= sout_node_11;
ww_sout_node_21 <= sout_node_21;
ww_sout_node_32 <= sout_node_32;
ww_sout_node_41 <= sout_node_41;
ww_inst5 <= inst5;
ww_00012 <= \00012\;
ww_cs_buffer_0 <= cs_buffer_0;
ww_cs_buffer_01 <= cs_buffer_01;
ww_cs_buffer_02 <= cs_buffer_02;
ww_000121 <= \000121\;
ww_result_node <= result_node;
ww_000122 <= \000122\;
ww_000123 <= \000123\;
ww_000124 <= \000124\;
ww_000125 <= \000125\;
ww_000126 <= \000126\;
ww_000127 <= \000127\;
ww_000128 <= \000128\;
ww_000129 <= \000129\;
ww_cs_buffer_03 <= cs_buffer_03;
ww_cs_buffer_04 <= cs_buffer_04;
ww_cs_buffer_05 <= cs_buffer_05;
ww_cs_buffer_06 <= cs_buffer_06;
ww_cs_buffer_07 <= cs_buffer_07;
ww_cs_buffer_08 <= cs_buffer_08;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
points_9_0 <= ww_points_9_0;
points_8_0 <= ww_points_8_0;
points_5_0 <= ww_points_5_0;
points_4_0 <= ww_points_4_0;
points_2_0 <= ww_points_2_0;
points_3_0 <= ww_points_3_0;
points_6_0 <= ww_points_6_0;
points_7_0 <= ww_points_7_0;
points_0_0 <= ww_points_0_0;
points_1_0 <= ww_points_1_0;
ALT_NOT_ww_clock <= NOT ww_clock;
ALT_NOT_ww_inst5 <= NOT ww_inst5;

\points[0][9]~I\ : apex20ke_lcell 
-- Equation(s):
-- points_9_0 = DFFE((sload_path_0 & cs_buffer_01 # !sload_path_0 & cs_buffer_01 # !sload_path_1) & CASCADE(\00012\), !GLOBAL(outclock0), inst5, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DF8F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_0,
	datab => ww_cs_buffer_0,
	datac => ww_sload_path_1,
	datad => ww_cs_buffer_02,
	cascin => ww_00012,
	clk => ALT_NOT_ww_clock,
	aclr => ALT_NOT_ww_inst5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_points_9_0);

\points[0][8]~I\ : apex20ke_lcell 
-- Equation(s):
-- points_8_0 = DFFE((result_node # !sload_path_0 & (sout_node_3 $ cs_buffer_0)) & CASCADE(\00012\), !GLOBAL(outclock0), inst5, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F1F2",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_31,
	datab => ww_sload_path_0,
	datac => ww_result_node,
	datad => ww_cs_buffer_01,
	cascin => ww_000121,
	clk => ALT_NOT_ww_clock,
	aclr => ALT_NOT_ww_inst5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_points_8_0);

\points[0][5]~I\ : apex20ke_lcell 
-- Equation(s):
-- points_5_0 = DFFE((sload_path_0 & cs_buffer_03 # !sload_path_0 & cs_buffer_03 # !sload_path_1) & CASCADE(\00012\), !GLOBAL(outclock0), inst5, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BFB3",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_cs_buffer_03,
	datab => ww_sload_path_1,
	datac => ww_sload_path_0,
	datad => ww_cs_buffer_04,
	cascin => ww_000122,
	clk => ALT_NOT_ww_clock,
	aclr => ALT_NOT_ww_inst5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_points_5_0);

\points[0][4]~I\ : apex20ke_lcell 
-- Equation(s):
-- points_4_0 = DFFE((sload_path_0 & sout_node_4 # !sload_path_0 & sout_node_4 # !sload_path_1) & CASCADE(\00012\), !GLOBAL(outclock0), inst5, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FD75",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_1,
	datab => ww_sload_path_0,
	datac => ww_sout_node_41,
	datad => ww_sout_node_4,
	cascin => ww_000123,
	clk => ALT_NOT_ww_clock,
	aclr => ALT_NOT_ww_inst5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_points_4_0);

\points[0][2]~I\ : apex20ke_lcell 
-- Equation(s):
-- points_2_0 = DFFE((sload_path_0 & sout_node_2 # !sload_path_0 & sout_node_2 # !sload_path_1) & CASCADE(\00012\), !GLOBAL(outclock0), inst5, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FB3B",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_21,
	datab => ww_sload_path_1,
	datac => ww_sload_path_0,
	datad => ww_sout_node_2,
	cascin => ww_000124,
	clk => ALT_NOT_ww_clock,
	aclr => ALT_NOT_ww_inst5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_points_2_0);

\points[0][3]~I\ : apex20ke_lcell 
-- Equation(s):
-- points_3_0 = DFFE((sload_path_0 & sout_node_3 # !sload_path_0 & sout_node_3 # !sload_path_1) & CASCADE(\00012\), !GLOBAL(outclock0), inst5, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AFCF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_3,
	datab => ww_sout_node_32,
	datac => ww_sload_path_1,
	datad => ww_sload_path_0,
	cascin => ww_000125,
	clk => ALT_NOT_ww_clock,
	aclr => ALT_NOT_ww_inst5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_points_3_0);

\points[0][6]~I\ : apex20ke_lcell 
-- Equation(s):
-- points_6_0 = DFFE((sload_path_0 & cs_buffer_04 # !sload_path_0 & cs_buffer_04 # !sload_path_1) & CASCADE(\00012\), !GLOBAL(outclock0), inst5, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FB3B",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_cs_buffer_06,
	datab => ww_sload_path_1,
	datac => ww_sload_path_0,
	datad => ww_cs_buffer_05,
	cascin => ww_000126,
	clk => ALT_NOT_ww_clock,
	aclr => ALT_NOT_ww_inst5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_points_6_0);

\points[0][7]~I\ : apex20ke_lcell 
-- Equation(s):
-- points_7_0 = DFFE((sload_path_0 & cs_buffer_05 # !sload_path_0 & cs_buffer_05 # !sload_path_1) & CASCADE(\00012\), !GLOBAL(outclock0), inst5, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F7D5",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_1,
	datab => ww_sload_path_0,
	datac => ww_cs_buffer_07,
	datad => ww_cs_buffer_08,
	cascin => ww_000127,
	clk => ALT_NOT_ww_clock,
	aclr => ALT_NOT_ww_inst5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_points_7_0);

\points[0][0]~I\ : apex20ke_lcell 
-- Equation(s):
-- points_0_0 = DFFE((sload_path_0 & sout_node_0 # !sload_path_0 & sout_node_0 # !sload_path_1) & CASCADE(\00012\), !GLOBAL(outclock0), inst5, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EF4F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_0,
	datab => ww_sout_node_01,
	datac => ww_sload_path_1,
	datad => ww_sout_node_0,
	cascin => ww_000128,
	clk => ALT_NOT_ww_clock,
	aclr => ALT_NOT_ww_inst5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_points_0_0);

\points[0][1]~I\ : apex20ke_lcell 
-- Equation(s):
-- points_1_0 = DFFE((sload_path_0 & sout_node_1 # !sload_path_0 & sout_node_1 # !sload_path_1) & CASCADE(\00012\), !GLOBAL(outclock0), inst5, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FD75",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_1,
	datab => ww_sload_path_0,
	datac => ww_sout_node_11,
	datad => ww_sout_node_1,
	cascin => ww_000129,
	clk => ALT_NOT_ww_clock,
	aclr => ALT_NOT_ww_inst5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_points_1_0);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut IS
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	sout_node_0 : IN std_logic;
	sout_node_01 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	\00012\ : OUT std_logic
	);
END muxlut;

ARCHITECTURE structure OF muxlut IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_01 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_00012 : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_sout_node_0 <= sout_node_0;
ww_sout_node_01 <= sout_node_01;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
\00012\ <= ww_00012;

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \00012\ = sload_path_1 # sload_path_0 & sout_node_0 # !sload_path_0 & sout_node_0

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FDF8",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_0,
	datab => ww_sout_node_0,
	datac => ww_sload_path_1,
	datad => ww_sout_node_01,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => ww_00012);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_1 IS
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_11 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	\00012\ : OUT std_logic
	);
END muxlut_1;

ARCHITECTURE structure OF muxlut_1 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_11 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_00012 : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_sout_node_1 <= sout_node_1;
ww_sout_node_11 <= sout_node_11;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
\00012\ <= ww_00012;

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \00012\ = sload_path_1 # sload_path_0 & sout_node_1 # !sload_path_0 & sout_node_1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EEFC",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_1,
	datab => ww_sload_path_1,
	datac => ww_sout_node_11,
	datad => ww_sload_path_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => ww_00012);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_2 IS
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_21 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	\00012\ : OUT std_logic
	);
END muxlut_2;

ARCHITECTURE structure OF muxlut_2 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_21 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_00012 : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_sout_node_2 <= sout_node_2;
ww_sout_node_21 <= sout_node_21;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
\00012\ <= ww_00012;

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \00012\ = sload_path_1 # sload_path_0 & sout_node_2 # !sload_path_0 & sout_node_2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EFEC",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_2,
	datab => ww_sload_path_1,
	datac => ww_sload_path_0,
	datad => ww_sout_node_21,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => ww_00012);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_3 IS
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	sout_node_3 : IN std_logic;
	sout_node_31 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	\00012\ : OUT std_logic
	);
END muxlut_3;

ARCHITECTURE structure OF muxlut_3 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_31 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_00012 : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_sout_node_3 <= sout_node_3;
ww_sout_node_31 <= sout_node_31;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
\00012\ <= ww_00012;

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \00012\ = sload_path_1 # sload_path_0 & sout_node_3 # !sload_path_0 & sout_node_3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEF4",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_0,
	datab => ww_sout_node_31,
	datac => ww_sload_path_1,
	datad => ww_sout_node_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => ww_00012);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_4 IS
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_41 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	\00012\ : OUT std_logic
	);
END muxlut_4;

ARCHITECTURE structure OF muxlut_4 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_41 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_00012 : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_sout_node_4 <= sout_node_4;
ww_sout_node_41 <= sout_node_41;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
\00012\ <= ww_00012;

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \00012\ = sload_path_1 # sload_path_0 & sout_node_4 # !sload_path_0 & sout_node_4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FBF8",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_4,
	datab => ww_sload_path_0,
	datac => ww_sload_path_1,
	datad => ww_sout_node_41,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => ww_00012);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_5 IS
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	\00012\ : OUT std_logic
	);
END muxlut_5;

ARCHITECTURE structure OF muxlut_5 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_00012 : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_cs_buffer_0 <= cs_buffer_0;
ww_cs_buffer_01 <= cs_buffer_01;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
\00012\ <= ww_00012;

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \00012\ = sload_path_1 # sload_path_0 & cs_buffer_03 # !sload_path_0 & cs_buffer_03

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EFEA",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_1,
	datab => ww_cs_buffer_0,
	datac => ww_sload_path_0,
	datad => ww_cs_buffer_01,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => ww_00012);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_6 IS
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	\00012\ : OUT std_logic
	);
END muxlut_6;

ARCHITECTURE structure OF muxlut_6 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_00012 : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_cs_buffer_0 <= cs_buffer_0;
ww_cs_buffer_01 <= cs_buffer_01;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
\00012\ <= ww_00012;

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \00012\ = sload_path_1 # sload_path_0 & cs_buffer_04 # !sload_path_0 & cs_buffer_04

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFB8",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_cs_buffer_0,
	datab => ww_sload_path_0,
	datac => ww_cs_buffer_01,
	datad => ww_sload_path_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => ww_00012);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_7 IS
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	\00012\ : OUT std_logic
	);
END muxlut_7;

ARCHITECTURE structure OF muxlut_7 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_00012 : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_cs_buffer_0 <= cs_buffer_0;
ww_cs_buffer_01 <= cs_buffer_01;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
\00012\ <= ww_00012;

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \00012\ = sload_path_1 # sload_path_0 & cs_buffer_05 # !sload_path_0 & cs_buffer_05

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FBEA",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_1,
	datab => ww_sload_path_0,
	datac => ww_cs_buffer_0,
	datad => ww_cs_buffer_01,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => ww_00012);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_8 IS
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	sout_node_3 : IN std_logic;
	sout_node_31 : IN std_logic;
	sout_node_32 : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	cs_buffer_02 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	\00012\ : OUT std_logic;
	result_node : OUT std_logic
	);
END muxlut_8;

ARCHITECTURE structure OF muxlut_8 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_31 : std_logic;
SIGNAL ww_sout_node_32 : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_00012 : std_logic;
SIGNAL ww_result_node : std_logic;
SIGNAL \$00012~0\ : std_logic;
SIGNAL \_~4\ : std_logic;

BEGIN

ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_sout_node_3 <= sout_node_3;
ww_sout_node_31 <= sout_node_31;
ww_sout_node_32 <= sout_node_32;
ww_cs_buffer_0 <= cs_buffer_0;
ww_cs_buffer_01 <= cs_buffer_01;
ww_cs_buffer_02 <= cs_buffer_02;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
\00012\ <= ww_00012;
result_node <= ww_result_node;

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \00012\ = \_~4\ # !sload_path_0 & (cs_buffer_0 $ sout_node_3)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF12",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_cs_buffer_01,
	datab => ww_sload_path_0,
	datac => ww_sout_node_32,
	datad => \_~4\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => ww_00012);

\result_node~72_I\ : apex20ke_lcell 
-- Equation(s):
-- result_node = sload_path_0 & (cs_buffer_0 $ sout_node_3) # !sload_path_1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "75D5",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_1,
	datab => ww_cs_buffer_02,
	datac => ww_sload_path_0,
	datad => ww_sout_node_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_result_node);

\_~4_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~4\ = sload_path_1 # sload_path_0 & (sout_node_3 $ cs_buffer_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BAEA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_1,
	datab => ww_sout_node_31,
	datac => ww_sload_path_0,
	datad => ww_cs_buffer_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~4\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	muxlut_9 IS
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	\00012\ : OUT std_logic
	);
END muxlut_9;

ARCHITECTURE structure OF muxlut_9 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_00012 : std_logic;
SIGNAL \$00012~0\ : std_logic;

BEGIN

ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_cs_buffer_0 <= cs_buffer_0;
ww_cs_buffer_01 <= cs_buffer_01;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
\00012\ <= ww_00012;

\$00012~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \00012\ = sload_path_1 # sload_path_0 & cs_buffer_01 # !sload_path_0 & cs_buffer_01

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EFEA",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_1,
	datab => ww_cs_buffer_0,
	datac => ww_sload_path_0,
	datad => ww_cs_buffer_01,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => ww_00012);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_mux IS
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	clock : IN std_logic;
	sout_node_3 : IN std_logic;
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_31 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_32 : IN std_logic;
	sout_node_01 : IN std_logic;
	sout_node_11 : IN std_logic;
	sout_node_21 : IN std_logic;
	sout_node_33 : IN std_logic;
	sout_node_41 : IN std_logic;
	sout_node_34 : IN std_logic;
	sout_node_02 : IN std_logic;
	sout_node_12 : IN std_logic;
	sout_node_22 : IN std_logic;
	sout_node_35 : IN std_logic;
	sout_node_42 : IN std_logic;
	sout_node_36 : IN std_logic;
	sout_node_03 : IN std_logic;
	sout_node_13 : IN std_logic;
	sout_node_23 : IN std_logic;
	sout_node_37 : IN std_logic;
	sout_node_43 : IN std_logic;
	inst5 : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	cs_buffer_04 : IN std_logic;
	cs_buffer_05 : IN std_logic;
	cs_buffer_06 : IN std_logic;
	cs_buffer_07 : IN std_logic;
	cs_buffer_08 : IN std_logic;
	cs_buffer_09 : IN std_logic;
	cs_buffer_010 : IN std_logic;
	cs_buffer_011 : IN std_logic;
	cs_buffer_012 : IN std_logic;
	cs_buffer_013 : IN std_logic;
	cs_buffer_014 : IN std_logic;
	cs_buffer_015 : IN std_logic;
	cs_buffer_016 : IN std_logic;
	cs_buffer_017 : IN std_logic;
	cs_buffer_018 : IN std_logic;
	cs_buffer_019 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	points_9_0 : OUT std_logic;
	points_8_0 : OUT std_logic;
	points_5_0 : OUT std_logic;
	points_4_0 : OUT std_logic;
	points_2_0 : OUT std_logic;
	points_3_0 : OUT std_logic;
	points_6_0 : OUT std_logic;
	points_7_0 : OUT std_logic;
	points_0_0 : OUT std_logic;
	points_1_0 : OUT std_logic
	);
END lpm_mux;

ARCHITECTURE structure OF lpm_mux IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_clock : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_31 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_32 : std_logic;
SIGNAL ww_sout_node_01 : std_logic;
SIGNAL ww_sout_node_11 : std_logic;
SIGNAL ww_sout_node_21 : std_logic;
SIGNAL ww_sout_node_33 : std_logic;
SIGNAL ww_sout_node_41 : std_logic;
SIGNAL ww_sout_node_34 : std_logic;
SIGNAL ww_sout_node_02 : std_logic;
SIGNAL ww_sout_node_12 : std_logic;
SIGNAL ww_sout_node_22 : std_logic;
SIGNAL ww_sout_node_35 : std_logic;
SIGNAL ww_sout_node_42 : std_logic;
SIGNAL ww_sout_node_36 : std_logic;
SIGNAL ww_sout_node_03 : std_logic;
SIGNAL ww_sout_node_13 : std_logic;
SIGNAL ww_sout_node_23 : std_logic;
SIGNAL ww_sout_node_37 : std_logic;
SIGNAL ww_sout_node_43 : std_logic;
SIGNAL ww_inst5 : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_cs_buffer_04 : std_logic;
SIGNAL ww_cs_buffer_05 : std_logic;
SIGNAL ww_cs_buffer_06 : std_logic;
SIGNAL ww_cs_buffer_07 : std_logic;
SIGNAL ww_cs_buffer_08 : std_logic;
SIGNAL ww_cs_buffer_09 : std_logic;
SIGNAL ww_cs_buffer_010 : std_logic;
SIGNAL ww_cs_buffer_011 : std_logic;
SIGNAL ww_cs_buffer_012 : std_logic;
SIGNAL ww_cs_buffer_013 : std_logic;
SIGNAL ww_cs_buffer_014 : std_logic;
SIGNAL ww_cs_buffer_015 : std_logic;
SIGNAL ww_cs_buffer_016 : std_logic;
SIGNAL ww_cs_buffer_017 : std_logic;
SIGNAL ww_cs_buffer_018 : std_logic;
SIGNAL ww_cs_buffer_019 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_points_9_0 : std_logic;
SIGNAL ww_points_8_0 : std_logic;
SIGNAL ww_points_5_0 : std_logic;
SIGNAL ww_points_4_0 : std_logic;
SIGNAL ww_points_2_0 : std_logic;
SIGNAL ww_points_3_0 : std_logic;
SIGNAL ww_points_6_0 : std_logic;
SIGNAL ww_points_7_0 : std_logic;
SIGNAL ww_points_0_0 : std_logic;
SIGNAL ww_points_1_0 : std_logic;
SIGNAL \$00027|$00012~0\ : std_logic;
SIGNAL \$00025|$00012~0\ : std_logic;
SIGNAL \$00025|result_node~72\ : std_logic;
SIGNAL \$00019|$00012~0\ : std_logic;
SIGNAL \$00017|$00012~0\ : std_logic;
SIGNAL \$00013|$00012~0\ : std_logic;
SIGNAL \$00015|$00012~0\ : std_logic;
SIGNAL \$00021|$00012~0\ : std_logic;
SIGNAL \$00023|$00012~0\ : std_logic;
SIGNAL \$00009|$00012~0\ : std_logic;
SIGNAL \$00011|$00012~0\ : std_logic;

COMPONENT altshift_23
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	clock : IN std_logic;
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_3 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_31 : IN std_logic;
	sout_node_01 : IN std_logic;
	sout_node_11 : IN std_logic;
	sout_node_21 : IN std_logic;
	sout_node_32 : IN std_logic;
	sout_node_41 : IN std_logic;
	inst5 : IN std_logic;
	\00012\ : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	cs_buffer_02 : IN std_logic;
	\000121\ : IN std_logic;
	result_node : IN std_logic;
	\000122\ : IN std_logic;
	\000123\ : IN std_logic;
	\000124\ : IN std_logic;
	\000125\ : IN std_logic;
	\000126\ : IN std_logic;
	\000127\ : IN std_logic;
	\000128\ : IN std_logic;
	\000129\ : IN std_logic;
	cs_buffer_03 : IN std_logic;
	cs_buffer_04 : IN std_logic;
	cs_buffer_05 : IN std_logic;
	cs_buffer_06 : IN std_logic;
	cs_buffer_07 : IN std_logic;
	cs_buffer_08 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	points_9_0 : OUT std_logic;
	points_8_0 : OUT std_logic;
	points_5_0 : OUT std_logic;
	points_4_0 : OUT std_logic;
	points_2_0 : OUT std_logic;
	points_3_0 : OUT std_logic;
	points_6_0 : OUT std_logic;
	points_7_0 : OUT std_logic;
	points_0_0 : OUT std_logic;
	points_1_0 : OUT std_logic);
END COMPONENT;

COMPONENT muxlut
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	sout_node_0 : IN std_logic;
	sout_node_01 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	\00012\ : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_1
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_11 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	\00012\ : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_2
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_21 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	\00012\ : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_3
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	sout_node_3 : IN std_logic;
	sout_node_31 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	\00012\ : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_4
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_41 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	\00012\ : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_5
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	\00012\ : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_6
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	\00012\ : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_7
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	\00012\ : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_8
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	sout_node_3 : IN std_logic;
	sout_node_31 : IN std_logic;
	sout_node_32 : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	cs_buffer_02 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	\00012\ : OUT std_logic;
	result_node : OUT std_logic);
END COMPONENT;

COMPONENT muxlut_9
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	\00012\ : OUT std_logic);
END COMPONENT;

BEGIN

ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_clock <= clock;
ww_sout_node_3 <= sout_node_3;
ww_sout_node_0 <= sout_node_0;
ww_sout_node_1 <= sout_node_1;
ww_sout_node_2 <= sout_node_2;
ww_sout_node_31 <= sout_node_31;
ww_sout_node_4 <= sout_node_4;
ww_sout_node_32 <= sout_node_32;
ww_sout_node_01 <= sout_node_01;
ww_sout_node_11 <= sout_node_11;
ww_sout_node_21 <= sout_node_21;
ww_sout_node_33 <= sout_node_33;
ww_sout_node_41 <= sout_node_41;
ww_sout_node_34 <= sout_node_34;
ww_sout_node_02 <= sout_node_02;
ww_sout_node_12 <= sout_node_12;
ww_sout_node_22 <= sout_node_22;
ww_sout_node_35 <= sout_node_35;
ww_sout_node_42 <= sout_node_42;
ww_sout_node_36 <= sout_node_36;
ww_sout_node_03 <= sout_node_03;
ww_sout_node_13 <= sout_node_13;
ww_sout_node_23 <= sout_node_23;
ww_sout_node_37 <= sout_node_37;
ww_sout_node_43 <= sout_node_43;
ww_inst5 <= inst5;
ww_cs_buffer_0 <= cs_buffer_0;
ww_cs_buffer_01 <= cs_buffer_01;
ww_cs_buffer_02 <= cs_buffer_02;
ww_cs_buffer_03 <= cs_buffer_03;
ww_cs_buffer_04 <= cs_buffer_04;
ww_cs_buffer_05 <= cs_buffer_05;
ww_cs_buffer_06 <= cs_buffer_06;
ww_cs_buffer_07 <= cs_buffer_07;
ww_cs_buffer_08 <= cs_buffer_08;
ww_cs_buffer_09 <= cs_buffer_09;
ww_cs_buffer_010 <= cs_buffer_010;
ww_cs_buffer_011 <= cs_buffer_011;
ww_cs_buffer_012 <= cs_buffer_012;
ww_cs_buffer_013 <= cs_buffer_013;
ww_cs_buffer_014 <= cs_buffer_014;
ww_cs_buffer_015 <= cs_buffer_015;
ww_cs_buffer_016 <= cs_buffer_016;
ww_cs_buffer_017 <= cs_buffer_017;
ww_cs_buffer_018 <= cs_buffer_018;
ww_cs_buffer_019 <= cs_buffer_019;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
points_9_0 <= ww_points_9_0;
points_8_0 <= ww_points_8_0;
points_5_0 <= ww_points_5_0;
points_4_0 <= ww_points_4_0;
points_2_0 <= ww_points_2_0;
points_3_0 <= ww_points_3_0;
points_6_0 <= ww_points_6_0;
points_7_0 <= ww_points_7_0;
points_0_0 <= ww_points_0_0;
points_1_0 <= ww_points_1_0;
external_latency_ffs : altshift_23
PORT MAP (
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	clock => ww_clock,
	sout_node_0 => ww_sout_node_0,
	sout_node_1 => ww_sout_node_1,
	sout_node_2 => ww_sout_node_2,
	sout_node_3 => ww_sout_node_31,
	sout_node_4 => ww_sout_node_4,
	sout_node_31 => ww_sout_node_32,
	sout_node_01 => ww_sout_node_01,
	sout_node_11 => ww_sout_node_11,
	sout_node_21 => ww_sout_node_21,
	sout_node_32 => ww_sout_node_33,
	sout_node_41 => ww_sout_node_41,
	inst5 => ww_inst5,
	\00012\ => \$00027|$00012~0\,
	cs_buffer_0 => ww_cs_buffer_05,
	cs_buffer_01 => ww_cs_buffer_06,
	cs_buffer_02 => ww_cs_buffer_07,
	\000121\ => \$00025|$00012~0\,
	result_node => \$00025|result_node~72\,
	\000122\ => \$00019|$00012~0\,
	\000123\ => \$00017|$00012~0\,
	\000124\ => \$00013|$00012~0\,
	\000125\ => \$00015|$00012~0\,
	\000126\ => \$00021|$00012~0\,
	\000127\ => \$00023|$00012~0\,
	\000128\ => \$00009|$00012~0\,
	\000129\ => \$00011|$00012~0\,
	cs_buffer_03 => ww_cs_buffer_010,
	cs_buffer_04 => ww_cs_buffer_011,
	cs_buffer_05 => ww_cs_buffer_014,
	cs_buffer_06 => ww_cs_buffer_015,
	cs_buffer_07 => ww_cs_buffer_018,
	cs_buffer_08 => ww_cs_buffer_019,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	points_9_0 => ww_points_9_0,
	points_8_0 => ww_points_8_0,
	points_5_0 => ww_points_5_0,
	points_4_0 => ww_points_4_0,
	points_2_0 => ww_points_2_0,
	points_3_0 => ww_points_3_0,
	points_6_0 => ww_points_6_0,
	points_7_0 => ww_points_7_0,
	points_0_0 => ww_points_0_0,
	points_1_0 => ww_points_1_0);
\$00009\ : muxlut
PORT MAP (
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	sout_node_0 => ww_sout_node_02,
	sout_node_01 => ww_sout_node_03,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	\00012\ => \$00009|$00012~0\);
\$00011\ : muxlut_1
PORT MAP (
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	sout_node_1 => ww_sout_node_12,
	sout_node_11 => ww_sout_node_13,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	\00012\ => \$00011|$00012~0\);
\$00013\ : muxlut_2
PORT MAP (
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	sout_node_2 => ww_sout_node_22,
	sout_node_21 => ww_sout_node_23,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	\00012\ => \$00013|$00012~0\);
\$00015\ : muxlut_3
PORT MAP (
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	sout_node_3 => ww_sout_node_35,
	sout_node_31 => ww_sout_node_37,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	\00012\ => \$00015|$00012~0\);
\$00017\ : muxlut_4
PORT MAP (
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	sout_node_4 => ww_sout_node_42,
	sout_node_41 => ww_sout_node_43,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	\00012\ => \$00017|$00012~0\);
\$00019\ : muxlut_5
PORT MAP (
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	cs_buffer_0 => ww_cs_buffer_08,
	cs_buffer_01 => ww_cs_buffer_09,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	\00012\ => \$00019|$00012~0\);
\$00021\ : muxlut_6
PORT MAP (
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	cs_buffer_0 => ww_cs_buffer_012,
	cs_buffer_01 => ww_cs_buffer_013,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	\00012\ => \$00021|$00012~0\);
\$00023\ : muxlut_7
PORT MAP (
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	cs_buffer_0 => ww_cs_buffer_016,
	cs_buffer_01 => ww_cs_buffer_017,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	\00012\ => \$00023|$00012~0\);
\$00025\ : muxlut_8
PORT MAP (
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	sout_node_3 => ww_sout_node_3,
	sout_node_31 => ww_sout_node_34,
	sout_node_32 => ww_sout_node_36,
	cs_buffer_0 => ww_cs_buffer_0,
	cs_buffer_01 => ww_cs_buffer_02,
	cs_buffer_02 => ww_cs_buffer_04,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	\00012\ => \$00025|$00012~0\,
	result_node => \$00025|result_node~72\);
\$00027\ : muxlut_9
PORT MAP (
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	cs_buffer_0 => ww_cs_buffer_01,
	cs_buffer_01 => ww_cs_buffer_03,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	\00012\ => \$00027|$00012~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	mux4x10 IS
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	clock : IN std_logic;
	sout_node_3 : IN std_logic;
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_31 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_32 : IN std_logic;
	sout_node_01 : IN std_logic;
	sout_node_11 : IN std_logic;
	sout_node_21 : IN std_logic;
	sout_node_33 : IN std_logic;
	sout_node_41 : IN std_logic;
	sout_node_34 : IN std_logic;
	sout_node_02 : IN std_logic;
	sout_node_12 : IN std_logic;
	sout_node_22 : IN std_logic;
	sout_node_35 : IN std_logic;
	sout_node_42 : IN std_logic;
	sout_node_36 : IN std_logic;
	sout_node_03 : IN std_logic;
	sout_node_13 : IN std_logic;
	sout_node_23 : IN std_logic;
	sout_node_37 : IN std_logic;
	sout_node_43 : IN std_logic;
	inst5 : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	cs_buffer_04 : IN std_logic;
	cs_buffer_05 : IN std_logic;
	cs_buffer_06 : IN std_logic;
	cs_buffer_07 : IN std_logic;
	cs_buffer_08 : IN std_logic;
	cs_buffer_09 : IN std_logic;
	cs_buffer_010 : IN std_logic;
	cs_buffer_011 : IN std_logic;
	cs_buffer_012 : IN std_logic;
	cs_buffer_013 : IN std_logic;
	cs_buffer_014 : IN std_logic;
	cs_buffer_015 : IN std_logic;
	cs_buffer_016 : IN std_logic;
	cs_buffer_017 : IN std_logic;
	cs_buffer_018 : IN std_logic;
	cs_buffer_019 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	points_9_0 : OUT std_logic;
	points_8_0 : OUT std_logic;
	points_5_0 : OUT std_logic;
	points_4_0 : OUT std_logic;
	points_2_0 : OUT std_logic;
	points_3_0 : OUT std_logic;
	points_6_0 : OUT std_logic;
	points_7_0 : OUT std_logic;
	points_0_0 : OUT std_logic;
	points_1_0 : OUT std_logic
	);
END mux4x10;

ARCHITECTURE structure OF mux4x10 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_clock : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_31 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_32 : std_logic;
SIGNAL ww_sout_node_01 : std_logic;
SIGNAL ww_sout_node_11 : std_logic;
SIGNAL ww_sout_node_21 : std_logic;
SIGNAL ww_sout_node_33 : std_logic;
SIGNAL ww_sout_node_41 : std_logic;
SIGNAL ww_sout_node_34 : std_logic;
SIGNAL ww_sout_node_02 : std_logic;
SIGNAL ww_sout_node_12 : std_logic;
SIGNAL ww_sout_node_22 : std_logic;
SIGNAL ww_sout_node_35 : std_logic;
SIGNAL ww_sout_node_42 : std_logic;
SIGNAL ww_sout_node_36 : std_logic;
SIGNAL ww_sout_node_03 : std_logic;
SIGNAL ww_sout_node_13 : std_logic;
SIGNAL ww_sout_node_23 : std_logic;
SIGNAL ww_sout_node_37 : std_logic;
SIGNAL ww_sout_node_43 : std_logic;
SIGNAL ww_inst5 : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_cs_buffer_04 : std_logic;
SIGNAL ww_cs_buffer_05 : std_logic;
SIGNAL ww_cs_buffer_06 : std_logic;
SIGNAL ww_cs_buffer_07 : std_logic;
SIGNAL ww_cs_buffer_08 : std_logic;
SIGNAL ww_cs_buffer_09 : std_logic;
SIGNAL ww_cs_buffer_010 : std_logic;
SIGNAL ww_cs_buffer_011 : std_logic;
SIGNAL ww_cs_buffer_012 : std_logic;
SIGNAL ww_cs_buffer_013 : std_logic;
SIGNAL ww_cs_buffer_014 : std_logic;
SIGNAL ww_cs_buffer_015 : std_logic;
SIGNAL ww_cs_buffer_016 : std_logic;
SIGNAL ww_cs_buffer_017 : std_logic;
SIGNAL ww_cs_buffer_018 : std_logic;
SIGNAL ww_cs_buffer_019 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_points_9_0 : std_logic;
SIGNAL ww_points_8_0 : std_logic;
SIGNAL ww_points_5_0 : std_logic;
SIGNAL ww_points_4_0 : std_logic;
SIGNAL ww_points_2_0 : std_logic;
SIGNAL ww_points_3_0 : std_logic;
SIGNAL ww_points_6_0 : std_logic;
SIGNAL ww_points_7_0 : std_logic;
SIGNAL ww_points_0_0 : std_logic;
SIGNAL ww_points_1_0 : std_logic;

COMPONENT lpm_mux
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	clock : IN std_logic;
	sout_node_3 : IN std_logic;
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_31 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_32 : IN std_logic;
	sout_node_01 : IN std_logic;
	sout_node_11 : IN std_logic;
	sout_node_21 : IN std_logic;
	sout_node_33 : IN std_logic;
	sout_node_41 : IN std_logic;
	sout_node_34 : IN std_logic;
	sout_node_02 : IN std_logic;
	sout_node_12 : IN std_logic;
	sout_node_22 : IN std_logic;
	sout_node_35 : IN std_logic;
	sout_node_42 : IN std_logic;
	sout_node_36 : IN std_logic;
	sout_node_03 : IN std_logic;
	sout_node_13 : IN std_logic;
	sout_node_23 : IN std_logic;
	sout_node_37 : IN std_logic;
	sout_node_43 : IN std_logic;
	inst5 : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	cs_buffer_04 : IN std_logic;
	cs_buffer_05 : IN std_logic;
	cs_buffer_06 : IN std_logic;
	cs_buffer_07 : IN std_logic;
	cs_buffer_08 : IN std_logic;
	cs_buffer_09 : IN std_logic;
	cs_buffer_010 : IN std_logic;
	cs_buffer_011 : IN std_logic;
	cs_buffer_012 : IN std_logic;
	cs_buffer_013 : IN std_logic;
	cs_buffer_014 : IN std_logic;
	cs_buffer_015 : IN std_logic;
	cs_buffer_016 : IN std_logic;
	cs_buffer_017 : IN std_logic;
	cs_buffer_018 : IN std_logic;
	cs_buffer_019 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	points_9_0 : OUT std_logic;
	points_8_0 : OUT std_logic;
	points_5_0 : OUT std_logic;
	points_4_0 : OUT std_logic;
	points_2_0 : OUT std_logic;
	points_3_0 : OUT std_logic;
	points_6_0 : OUT std_logic;
	points_7_0 : OUT std_logic;
	points_0_0 : OUT std_logic;
	points_1_0 : OUT std_logic);
END COMPONENT;

BEGIN

ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_clock <= clock;
ww_sout_node_3 <= sout_node_3;
ww_sout_node_0 <= sout_node_0;
ww_sout_node_1 <= sout_node_1;
ww_sout_node_2 <= sout_node_2;
ww_sout_node_31 <= sout_node_31;
ww_sout_node_4 <= sout_node_4;
ww_sout_node_32 <= sout_node_32;
ww_sout_node_01 <= sout_node_01;
ww_sout_node_11 <= sout_node_11;
ww_sout_node_21 <= sout_node_21;
ww_sout_node_33 <= sout_node_33;
ww_sout_node_41 <= sout_node_41;
ww_sout_node_34 <= sout_node_34;
ww_sout_node_02 <= sout_node_02;
ww_sout_node_12 <= sout_node_12;
ww_sout_node_22 <= sout_node_22;
ww_sout_node_35 <= sout_node_35;
ww_sout_node_42 <= sout_node_42;
ww_sout_node_36 <= sout_node_36;
ww_sout_node_03 <= sout_node_03;
ww_sout_node_13 <= sout_node_13;
ww_sout_node_23 <= sout_node_23;
ww_sout_node_37 <= sout_node_37;
ww_sout_node_43 <= sout_node_43;
ww_inst5 <= inst5;
ww_cs_buffer_0 <= cs_buffer_0;
ww_cs_buffer_01 <= cs_buffer_01;
ww_cs_buffer_02 <= cs_buffer_02;
ww_cs_buffer_03 <= cs_buffer_03;
ww_cs_buffer_04 <= cs_buffer_04;
ww_cs_buffer_05 <= cs_buffer_05;
ww_cs_buffer_06 <= cs_buffer_06;
ww_cs_buffer_07 <= cs_buffer_07;
ww_cs_buffer_08 <= cs_buffer_08;
ww_cs_buffer_09 <= cs_buffer_09;
ww_cs_buffer_010 <= cs_buffer_010;
ww_cs_buffer_011 <= cs_buffer_011;
ww_cs_buffer_012 <= cs_buffer_012;
ww_cs_buffer_013 <= cs_buffer_013;
ww_cs_buffer_014 <= cs_buffer_014;
ww_cs_buffer_015 <= cs_buffer_015;
ww_cs_buffer_016 <= cs_buffer_016;
ww_cs_buffer_017 <= cs_buffer_017;
ww_cs_buffer_018 <= cs_buffer_018;
ww_cs_buffer_019 <= cs_buffer_019;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
points_9_0 <= ww_points_9_0;
points_8_0 <= ww_points_8_0;
points_5_0 <= ww_points_5_0;
points_4_0 <= ww_points_4_0;
points_2_0 <= ww_points_2_0;
points_3_0 <= ww_points_3_0;
points_6_0 <= ww_points_6_0;
points_7_0 <= ww_points_7_0;
points_0_0 <= ww_points_0_0;
points_1_0 <= ww_points_1_0;
lpm_mux_component : lpm_mux
PORT MAP (
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	clock => ww_clock,
	sout_node_3 => ww_sout_node_3,
	sout_node_0 => ww_sout_node_0,
	sout_node_1 => ww_sout_node_1,
	sout_node_2 => ww_sout_node_2,
	sout_node_31 => ww_sout_node_31,
	sout_node_4 => ww_sout_node_4,
	sout_node_32 => ww_sout_node_32,
	sout_node_01 => ww_sout_node_01,
	sout_node_11 => ww_sout_node_11,
	sout_node_21 => ww_sout_node_21,
	sout_node_33 => ww_sout_node_33,
	sout_node_41 => ww_sout_node_41,
	sout_node_34 => ww_sout_node_34,
	sout_node_02 => ww_sout_node_02,
	sout_node_12 => ww_sout_node_12,
	sout_node_22 => ww_sout_node_22,
	sout_node_35 => ww_sout_node_35,
	sout_node_42 => ww_sout_node_42,
	sout_node_36 => ww_sout_node_36,
	sout_node_03 => ww_sout_node_03,
	sout_node_13 => ww_sout_node_13,
	sout_node_23 => ww_sout_node_23,
	sout_node_37 => ww_sout_node_37,
	sout_node_43 => ww_sout_node_43,
	inst5 => ww_inst5,
	cs_buffer_0 => ww_cs_buffer_0,
	cs_buffer_01 => ww_cs_buffer_01,
	cs_buffer_02 => ww_cs_buffer_02,
	cs_buffer_03 => ww_cs_buffer_03,
	cs_buffer_04 => ww_cs_buffer_04,
	cs_buffer_05 => ww_cs_buffer_05,
	cs_buffer_06 => ww_cs_buffer_06,
	cs_buffer_07 => ww_cs_buffer_07,
	cs_buffer_08 => ww_cs_buffer_08,
	cs_buffer_09 => ww_cs_buffer_09,
	cs_buffer_010 => ww_cs_buffer_010,
	cs_buffer_011 => ww_cs_buffer_011,
	cs_buffer_012 => ww_cs_buffer_012,
	cs_buffer_013 => ww_cs_buffer_013,
	cs_buffer_014 => ww_cs_buffer_014,
	cs_buffer_015 => ww_cs_buffer_015,
	cs_buffer_016 => ww_cs_buffer_016,
	cs_buffer_017 => ww_cs_buffer_017,
	cs_buffer_018 => ww_cs_buffer_018,
	cs_buffer_019 => ww_cs_buffer_019,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	points_9_0 => ww_points_9_0,
	points_8_0 => ww_points_8_0,
	points_5_0 => ww_points_5_0,
	points_4_0 => ww_points_4_0,
	points_2_0 => ww_points_2_0,
	points_3_0 => ww_points_3_0,
	points_6_0 => ww_points_6_0,
	points_7_0 => ww_points_7_0,
	points_0_0 => ww_points_0_0,
	points_1_0 => ww_points_1_0);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	alt_synch_counter_6 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic;
	cout1 : OUT std_logic
	);
END alt_synch_counter_6;

ARCHITECTURE structure OF alt_synch_counter_6 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_cout1 : std_logic;
SIGNAL cout : std_logic;
SIGNAL \counter_cell[0]~COUT\ : std_logic;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_1 <= ww_sload_path_1;
sload_path_0 <= ww_sload_path_0;
cout1 <= ww_cout1;

\counter_cell[1]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_1 = DFFE(sload_path_1 $ \counter_cell[0]~COUT\, GLOBAL(outclock0), !\inst1~45\, , )
-- cout = CARRY(!\counter_cell[0]~COUT\ # !sload_path_1)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_1,
	cin => \counter_cell[0]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_1,
	cout => cout);

\counter_cell[0]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_0 = DFFE(!sload_path_0, GLOBAL(outclock0), !\inst1~45\, , )
-- \counter_cell[0]~COUT\ = CARRY(sload_path_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "qfbk_counter",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	clk => ww_clock,
	aclr => ww_aclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_0,
	cout => \counter_cell[0]~COUT\);

\cout~0_I\ : apex20ke_lcell 
-- Equation(s):
-- cout1 = !cout

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0F0F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	cin => cout,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_cout1);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_counter_6 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic;
	cout : OUT std_logic
	);
END lpm_counter_6;

ARCHITECTURE structure OF lpm_counter_6 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_cout : std_logic;

COMPONENT alt_synch_counter_6
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic;
	cout1 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_1 <= ww_sload_path_1;
sload_path_0 <= ww_sload_path_0;
cout <= ww_cout;
wysi_counter : alt_synch_counter_6
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	cout1 => ww_cout);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	ctup4 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic;
	cout : OUT std_logic
	);
END ctup4;

ARCHITECTURE structure OF ctup4 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_cout : std_logic;

COMPONENT lpm_counter_6
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic;
	cout : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_1 <= ww_sload_path_1;
sload_path_0 <= ww_sload_path_0;
cout <= ww_cout;
lpm_counter_component : lpm_counter_6
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	cout => ww_cout);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	a_csnbuffer_5 IS
    PORT (
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_3 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_5 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cs_buffer_0 : OUT std_logic;
	cs_buffer_01 : OUT std_logic;
	cs_buffer_02 : OUT std_logic;
	cs_buffer_03 : OUT std_logic;
	cs_buffer_04 : OUT std_logic;
	cs_buffer_05 : OUT std_logic
	);
END a_csnbuffer_5;

ARCHITECTURE structure OF a_csnbuffer_5 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_5 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_cs_buffer_04 : std_logic;
SIGNAL ww_cs_buffer_05 : std_logic;
SIGNAL \cs_buffer[0]~9\ : std_logic;

BEGIN

ww_sout_node_0 <= sout_node_0;
ww_sout_node_1 <= sout_node_1;
ww_sout_node_2 <= sout_node_2;
ww_sout_node_3 <= sout_node_3;
ww_sout_node_4 <= sout_node_4;
ww_sout_node_5 <= sout_node_5;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
cs_buffer_0 <= ww_cs_buffer_0;
cs_buffer_01 <= ww_cs_buffer_01;
cs_buffer_02 <= ww_cs_buffer_02;
cs_buffer_03 <= ww_cs_buffer_03;
cs_buffer_04 <= ww_cs_buffer_04;
cs_buffer_05 <= ww_cs_buffer_05;

\cs_buffer[0]~17_I\ : apex20ke_lcell 
-- Equation(s):
-- cs_buffer_0 = sout_node_1 & sout_node_2 & sout_node_5 & sout_node_0

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_1,
	datab => ww_sout_node_2,
	datac => ww_sout_node_5,
	datad => ww_sout_node_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_cs_buffer_0);

\cs_buffer[0]~25_I\ : apex20ke_lcell 
-- Equation(s):
-- cs_buffer_01 = sout_node_4 $ (sout_node_3 & cs_buffer_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3CCC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sout_node_4,
	datac => ww_sout_node_3,
	datad => ww_cs_buffer_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_cs_buffer_01);

\cs_buffer[0]~22_I\ : apex20ke_lcell 
-- Equation(s):
-- cs_buffer_02 = sout_node_1 & sout_node_2 & sout_node_3 & \cs_buffer[0]~9\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_1,
	datab => ww_sout_node_2,
	datac => ww_sout_node_3,
	datad => \cs_buffer[0]~9\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_cs_buffer_02);

\cs_buffer[0]~5_I\ : apex20ke_lcell 
-- Equation(s):
-- cs_buffer_03 = sout_node_0 $ sout_node_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_sout_node_0,
	datad => ww_sout_node_5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_cs_buffer_03);

\cs_buffer[0]~10_I\ : apex20ke_lcell 
-- Equation(s):
-- cs_buffer_04 = sout_node_1 $ (sout_node_5 & sout_node_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5AAA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_1,
	datac => ww_sout_node_5,
	datad => ww_sout_node_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_cs_buffer_04);

\cs_buffer[0]~15_I\ : apex20ke_lcell 
-- Equation(s):
-- cs_buffer_05 = sout_node_2 $ (sout_node_1 & sout_node_5 & sout_node_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "6CCC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_1,
	datab => ww_sout_node_2,
	datac => ww_sout_node_5,
	datad => ww_sout_node_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_cs_buffer_05);

\cs_buffer[0]~9_I\ : apex20ke_lcell 
-- Equation(s):
-- \cs_buffer[0]~9\ = sout_node_0 & sout_node_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_sout_node_0,
	datad => ww_sout_node_5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \cs_buffer[0]~9\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	addcore_1 IS
    PORT (
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_3 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_5 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cs_buffer_0 : OUT std_logic;
	cs_buffer_01 : OUT std_logic;
	cs_buffer_02 : OUT std_logic;
	cs_buffer_03 : OUT std_logic;
	cs_buffer_04 : OUT std_logic;
	cs_buffer_05 : OUT std_logic
	);
END addcore_1;

ARCHITECTURE structure OF addcore_1 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_5 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_cs_buffer_04 : std_logic;
SIGNAL ww_cs_buffer_05 : std_logic;

COMPONENT a_csnbuffer_5
    PORT (
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_3 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_5 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cs_buffer_0 : OUT std_logic;
	cs_buffer_01 : OUT std_logic;
	cs_buffer_02 : OUT std_logic;
	cs_buffer_03 : OUT std_logic;
	cs_buffer_04 : OUT std_logic;
	cs_buffer_05 : OUT std_logic);
END COMPONENT;

BEGIN

ww_sout_node_0 <= sout_node_0;
ww_sout_node_1 <= sout_node_1;
ww_sout_node_2 <= sout_node_2;
ww_sout_node_3 <= sout_node_3;
ww_sout_node_4 <= sout_node_4;
ww_sout_node_5 <= sout_node_5;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
cs_buffer_0 <= ww_cs_buffer_0;
cs_buffer_01 <= ww_cs_buffer_01;
cs_buffer_02 <= ww_cs_buffer_02;
cs_buffer_03 <= ww_cs_buffer_03;
cs_buffer_04 <= ww_cs_buffer_04;
cs_buffer_05 <= ww_cs_buffer_05;
result_node : a_csnbuffer_5
PORT MAP (
	sout_node_0 => ww_sout_node_0,
	sout_node_1 => ww_sout_node_1,
	sout_node_2 => ww_sout_node_2,
	sout_node_3 => ww_sout_node_3,
	sout_node_4 => ww_sout_node_4,
	sout_node_5 => ww_sout_node_5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	cs_buffer_0 => ww_cs_buffer_0,
	cs_buffer_01 => ww_cs_buffer_01,
	cs_buffer_02 => ww_cs_buffer_02,
	cs_buffer_03 => ww_cs_buffer_03,
	cs_buffer_04 => ww_cs_buffer_04,
	cs_buffer_05 => ww_cs_buffer_05);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	a_csnbuffer_2 IS
    PORT (
	clk : IN std_logic;
	clrn : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic;
	sout_node_5 : OUT std_logic
	);
END a_csnbuffer_2;

ARCHITECTURE structure OF a_csnbuffer_2 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clk : std_logic;
SIGNAL ww_clrn : std_logic;
SIGNAL ww_COM_AD_D_6 : std_logic;
SIGNAL ww_COM_AD_D_5 : std_logic;
SIGNAL ww_COM_AD_D_4 : std_logic;
SIGNAL ww_COM_AD_D_2 : std_logic;
SIGNAL ww_COM_AD_D_3 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_5 : std_logic;
SIGNAL \sout_node[0]~COUT\ : std_logic;
SIGNAL \sout_node[1]~COUT\ : std_logic;
SIGNAL \sout_node[2]~COUT\ : std_logic;
SIGNAL \sout_node[3]~COUT\ : std_logic;
SIGNAL \sout_node[4]~COUT\ : std_logic;

BEGIN

ww_clk <= clk;
ww_clrn <= clrn;
ww_COM_AD_D_6 <= COM_AD_D_6;
ww_COM_AD_D_5 <= COM_AD_D_5;
ww_COM_AD_D_4 <= COM_AD_D_4;
ww_COM_AD_D_2 <= COM_AD_D_2;
ww_COM_AD_D_3 <= COM_AD_D_3;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sout_node_0 <= ww_sout_node_0;
sout_node_1 <= ww_sout_node_1;
sout_node_2 <= ww_sout_node_2;
sout_node_3 <= ww_sout_node_3;
sout_node_4 <= ww_sout_node_4;
sout_node_5 <= ww_sout_node_5;

\sout_node[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_0 = DFFE(sout_node_0 $ \COM_AD_D[2]~combout\, GLOBAL(outclock0), !inst7, , )
-- \sout_node[0]~COUT\ = CARRY(sout_node_0 & \COM_AD_D[2]~combout\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "6688",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_0,
	datab => ww_COM_AD_D_2,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_0,
	cout => \sout_node[0]~COUT\);

\sout_node[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_1 = DFFE(\COM_AD_D[3]~combout\ $ sout_node_1 $ \sout_node[0]~COUT\, GLOBAL(outclock0), !inst7, , )
-- \sout_node[1]~COUT\ = CARRY(\COM_AD_D[3]~combout\ & !sout_node_1 & !\sout_node[0]~COUT\ # !\COM_AD_D[3]~combout\ & (!\sout_node[0]~COUT\ # !sout_node_1))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "9617",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_COM_AD_D_3,
	datab => ww_sout_node_1,
	cin => \sout_node[0]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_1,
	cout => \sout_node[1]~COUT\);

\sout_node[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_2 = DFFE(sout_node_2 $ \COM_AD_D[4]~combout\ $ !\sout_node[1]~COUT\, GLOBAL(outclock0), !inst7, , )
-- \sout_node[2]~COUT\ = CARRY(sout_node_2 & (\COM_AD_D[4]~combout\ # !\sout_node[1]~COUT\) # !sout_node_2 & \COM_AD_D[4]~combout\ & !\sout_node[1]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "698E",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_2,
	datab => ww_COM_AD_D_4,
	cin => \sout_node[1]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_2,
	cout => \sout_node[2]~COUT\);

\sout_node[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_3 = DFFE(\COM_AD_D[5]~combout\ $ sout_node_3 $ \sout_node[2]~COUT\, GLOBAL(outclock0), !inst7, , )
-- \sout_node[3]~COUT\ = CARRY(\COM_AD_D[5]~combout\ & !sout_node_3 & !\sout_node[2]~COUT\ # !\COM_AD_D[5]~combout\ & (!\sout_node[2]~COUT\ # !sout_node_3))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "9617",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_COM_AD_D_5,
	datab => ww_sout_node_3,
	cin => \sout_node[2]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_3,
	cout => \sout_node[3]~COUT\);

\sout_node[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_4 = DFFE(sout_node_4 $ \COM_AD_D[6]~combout\ $ !\sout_node[3]~COUT\, GLOBAL(outclock0), !inst7, , )
-- \sout_node[4]~COUT\ = CARRY(sout_node_4 & (\COM_AD_D[6]~combout\ # !\sout_node[3]~COUT\) # !sout_node_4 & \COM_AD_D[6]~combout\ & !\sout_node[3]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "698E",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_4,
	datab => ww_COM_AD_D_6,
	cin => \sout_node[3]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_4,
	cout => \sout_node[4]~COUT\);

\sout_node[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_5 = DFFE(\sout_node[4]~COUT\, GLOBAL(outclock0), !inst7, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	cin => \sout_node[4]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_5);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	addcore IS
    PORT (
	clock : IN std_logic;
	inst7 : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic;
	sout_node_5 : OUT std_logic
	);
END addcore;

ARCHITECTURE structure OF addcore IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_inst7 : std_logic;
SIGNAL ww_COM_AD_D_6 : std_logic;
SIGNAL ww_COM_AD_D_5 : std_logic;
SIGNAL ww_COM_AD_D_4 : std_logic;
SIGNAL ww_COM_AD_D_2 : std_logic;
SIGNAL ww_COM_AD_D_3 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_5 : std_logic;

COMPONENT a_csnbuffer_2
    PORT (
	clk : IN std_logic;
	clrn : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic;
	sout_node_5 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_inst7 <= inst7;
ww_COM_AD_D_6 <= COM_AD_D_6;
ww_COM_AD_D_5 <= COM_AD_D_5;
ww_COM_AD_D_4 <= COM_AD_D_4;
ww_COM_AD_D_2 <= COM_AD_D_2;
ww_COM_AD_D_3 <= COM_AD_D_3;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sout_node_0 <= ww_sout_node_0;
sout_node_1 <= ww_sout_node_1;
sout_node_2 <= ww_sout_node_2;
sout_node_3 <= ww_sout_node_3;
sout_node_4 <= ww_sout_node_4;
sout_node_5 <= ww_sout_node_5;
result_node : a_csnbuffer_2
PORT MAP (
	clk => ww_clock,
	clrn => ww_inst7,
	COM_AD_D_6 => ww_COM_AD_D_6,
	COM_AD_D_5 => ww_COM_AD_D_5,
	COM_AD_D_4 => ww_COM_AD_D_4,
	COM_AD_D_2 => ww_COM_AD_D_2,
	COM_AD_D_3 => ww_COM_AD_D_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sout_node_0 => ww_sout_node_0,
	sout_node_1 => ww_sout_node_1,
	sout_node_2 => ww_sout_node_2,
	sout_node_3 => ww_sout_node_3,
	sout_node_4 => ww_sout_node_4,
	sout_node_5 => ww_sout_node_5);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	a_csnbuffer_8 IS
    PORT (
	clk : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	clrn : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	cs_buffer_04 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic
	);
END a_csnbuffer_8;

ARCHITECTURE structure OF a_csnbuffer_8 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clk : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_clrn : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_cs_buffer_04 : std_logic;
SIGNAL ww_COM_AD_D_9 : std_logic;
SIGNAL ww_COM_AD_D_8 : std_logic;
SIGNAL ww_COM_AD_D_7 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL \sout_node[0]~COUT\ : std_logic;
SIGNAL \sout_node[1]~COUT\ : std_logic;
SIGNAL \sout_node[2]~COUT\ : std_logic;
SIGNAL \sout_node[3]~COUT\ : std_logic;

BEGIN

ww_clk <= clk;
ww_cs_buffer_0 <= cs_buffer_0;
ww_cs_buffer_01 <= cs_buffer_01;
ww_clrn <= clrn;
ww_cs_buffer_02 <= cs_buffer_02;
ww_cs_buffer_03 <= cs_buffer_03;
ww_cs_buffer_04 <= cs_buffer_04;
ww_COM_AD_D_9 <= COM_AD_D_9;
ww_COM_AD_D_8 <= COM_AD_D_8;
ww_COM_AD_D_7 <= COM_AD_D_7;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sout_node_0 <= ww_sout_node_0;
sout_node_1 <= ww_sout_node_1;
sout_node_2 <= ww_sout_node_2;
sout_node_3 <= ww_sout_node_3;
sout_node_4 <= ww_sout_node_4;

\sout_node[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_0 = DFFE(\COM_AD_D[7]~combout\ $ cs_buffer_03, GLOBAL(outclock0), !inst7, , )
-- \sout_node[0]~COUT\ = CARRY(\COM_AD_D[7]~combout\ & cs_buffer_03)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "6688",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_COM_AD_D_7,
	datab => ww_cs_buffer_02,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_0,
	cout => \sout_node[0]~COUT\);

\sout_node[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_1 = DFFE(\COM_AD_D[8]~combout\ $ cs_buffer_04 $ \sout_node[0]~COUT\, GLOBAL(outclock0), !inst7, , )
-- \sout_node[1]~COUT\ = CARRY(\COM_AD_D[8]~combout\ & !cs_buffer_04 & !\sout_node[0]~COUT\ # !\COM_AD_D[8]~combout\ & (!\sout_node[0]~COUT\ # !cs_buffer_04))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "9617",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_COM_AD_D_8,
	datab => ww_cs_buffer_03,
	cin => \sout_node[0]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_1,
	cout => \sout_node[1]~COUT\);

\sout_node[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_2 = DFFE(\COM_AD_D[9]~combout\ $ cs_buffer_05 $ !\sout_node[1]~COUT\, GLOBAL(outclock0), !inst7, , )
-- \sout_node[2]~COUT\ = CARRY(\COM_AD_D[9]~combout\ & (cs_buffer_05 # !\sout_node[1]~COUT\) # !\COM_AD_D[9]~combout\ & cs_buffer_05 & !\sout_node[1]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "698E",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_COM_AD_D_9,
	datab => ww_cs_buffer_04,
	cin => \sout_node[1]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_2,
	cout => \sout_node[2]~COUT\);

\sout_node[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_3 = DFFE(cs_buffer_0 $ sout_node_3 $ \sout_node[2]~COUT\, GLOBAL(outclock0), !inst7, , )
-- \sout_node[3]~COUT\ = CARRY(cs_buffer_0 $ !sout_node_3 # !\sout_node[2]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "969F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_cs_buffer_0,
	datab => ww_sout_node_3,
	cin => \sout_node[2]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_3,
	cout => \sout_node[3]~COUT\);

\sout_node[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_4 = DFFE(cs_buffer_02 $ \sout_node[3]~COUT\ $ !sout_node_4, GLOBAL(outclock0), !inst7, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3CC3",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_cs_buffer_01,
	datad => ww_sout_node_4,
	cin => \sout_node[3]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_4);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	addcore_2 IS
    PORT (
	clock : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	inst7 : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	cs_buffer_04 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic
	);
END addcore_2;

ARCHITECTURE structure OF addcore_2 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_inst7 : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_cs_buffer_04 : std_logic;
SIGNAL ww_COM_AD_D_9 : std_logic;
SIGNAL ww_COM_AD_D_8 : std_logic;
SIGNAL ww_COM_AD_D_7 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;

COMPONENT a_csnbuffer_8
    PORT (
	clk : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	clrn : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	cs_buffer_04 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_cs_buffer_0 <= cs_buffer_0;
ww_cs_buffer_01 <= cs_buffer_01;
ww_inst7 <= inst7;
ww_cs_buffer_02 <= cs_buffer_02;
ww_cs_buffer_03 <= cs_buffer_03;
ww_cs_buffer_04 <= cs_buffer_04;
ww_COM_AD_D_9 <= COM_AD_D_9;
ww_COM_AD_D_8 <= COM_AD_D_8;
ww_COM_AD_D_7 <= COM_AD_D_7;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sout_node_0 <= ww_sout_node_0;
sout_node_1 <= ww_sout_node_1;
sout_node_2 <= ww_sout_node_2;
sout_node_3 <= ww_sout_node_3;
sout_node_4 <= ww_sout_node_4;
result_node : a_csnbuffer_8
PORT MAP (
	clk => ww_clock,
	cs_buffer_0 => ww_cs_buffer_0,
	cs_buffer_01 => ww_cs_buffer_01,
	clrn => ww_inst7,
	cs_buffer_02 => ww_cs_buffer_02,
	cs_buffer_03 => ww_cs_buffer_03,
	cs_buffer_04 => ww_cs_buffer_04,
	COM_AD_D_9 => ww_COM_AD_D_9,
	COM_AD_D_8 => ww_COM_AD_D_8,
	COM_AD_D_7 => ww_COM_AD_D_7,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sout_node_0 => ww_sout_node_0,
	sout_node_1 => ww_sout_node_1,
	sout_node_2 => ww_sout_node_2,
	sout_node_3 => ww_sout_node_3,
	sout_node_4 => ww_sout_node_4);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_add_sub IS
    PORT (
	clock : IN std_logic;
	inst7 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_31 : OUT std_logic;
	sout_node_41 : OUT std_logic;
	cs_buffer_0 : OUT std_logic;
	cs_buffer_01 : OUT std_logic;
	cs_buffer_02 : OUT std_logic;
	cs_buffer_03 : OUT std_logic;
	cs_buffer_04 : OUT std_logic
	);
END lpm_add_sub;

ARCHITECTURE structure OF lpm_add_sub IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_inst7 : std_logic;
SIGNAL ww_COM_AD_D_9 : std_logic;
SIGNAL ww_COM_AD_D_8 : std_logic;
SIGNAL ww_COM_AD_D_7 : std_logic;
SIGNAL ww_COM_AD_D_6 : std_logic;
SIGNAL ww_COM_AD_D_5 : std_logic;
SIGNAL ww_COM_AD_D_4 : std_logic;
SIGNAL ww_COM_AD_D_2 : std_logic;
SIGNAL ww_COM_AD_D_3 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_31 : std_logic;
SIGNAL ww_sout_node_41 : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_cs_buffer_04 : std_logic;
SIGNAL \result_node|sout_node[0]\ : std_logic;
SIGNAL \result_node|sout_node[1]\ : std_logic;
SIGNAL \result_node|sout_node[2]\ : std_logic;
SIGNAL \result_node|sout_node[5]\ : std_logic;
SIGNAL \result_node|cs_buffer[0]~22\ : std_logic;

COMPONENT addcore_1
    PORT (
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_3 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_5 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cs_buffer_0 : OUT std_logic;
	cs_buffer_01 : OUT std_logic;
	cs_buffer_02 : OUT std_logic;
	cs_buffer_03 : OUT std_logic;
	cs_buffer_04 : OUT std_logic;
	cs_buffer_05 : OUT std_logic);
END COMPONENT;

COMPONENT addcore
    PORT (
	clock : IN std_logic;
	inst7 : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic;
	sout_node_5 : OUT std_logic);
END COMPONENT;

COMPONENT addcore_2
    PORT (
	clock : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	inst7 : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	cs_buffer_04 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_inst7 <= inst7;
ww_COM_AD_D_9 <= COM_AD_D_9;
ww_COM_AD_D_8 <= COM_AD_D_8;
ww_COM_AD_D_7 <= COM_AD_D_7;
ww_COM_AD_D_6 <= COM_AD_D_6;
ww_COM_AD_D_5 <= COM_AD_D_5;
ww_COM_AD_D_4 <= COM_AD_D_4;
ww_COM_AD_D_2 <= COM_AD_D_2;
ww_COM_AD_D_3 <= COM_AD_D_3;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sout_node_3 <= ww_sout_node_3;
sout_node_4 <= ww_sout_node_4;
sout_node_0 <= ww_sout_node_0;
sout_node_1 <= ww_sout_node_1;
sout_node_2 <= ww_sout_node_2;
sout_node_31 <= ww_sout_node_31;
sout_node_41 <= ww_sout_node_41;
cs_buffer_0 <= ww_cs_buffer_0;
cs_buffer_01 <= ww_cs_buffer_01;
cs_buffer_02 <= ww_cs_buffer_02;
cs_buffer_03 <= ww_cs_buffer_03;
cs_buffer_04 <= ww_cs_buffer_04;
\adder1[1]\ : addcore_1
PORT MAP (
	sout_node_0 => \result_node|sout_node[0]\,
	sout_node_1 => \result_node|sout_node[1]\,
	sout_node_2 => \result_node|sout_node[2]\,
	sout_node_3 => ww_sout_node_3,
	sout_node_4 => ww_sout_node_4,
	sout_node_5 => \result_node|sout_node[5]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	cs_buffer_0 => ww_cs_buffer_0,
	cs_buffer_01 => ww_cs_buffer_01,
	cs_buffer_02 => \result_node|cs_buffer[0]~22\,
	cs_buffer_03 => ww_cs_buffer_02,
	cs_buffer_04 => ww_cs_buffer_03,
	cs_buffer_05 => ww_cs_buffer_04);
\adder1[0]\ : addcore
PORT MAP (
	clock => ww_clock,
	inst7 => ww_inst7,
	COM_AD_D_6 => ww_COM_AD_D_6,
	COM_AD_D_5 => ww_COM_AD_D_5,
	COM_AD_D_4 => ww_COM_AD_D_4,
	COM_AD_D_2 => ww_COM_AD_D_2,
	COM_AD_D_3 => ww_COM_AD_D_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sout_node_0 => ww_sout_node_0,
	sout_node_1 => ww_sout_node_1,
	sout_node_2 => ww_sout_node_2,
	sout_node_3 => ww_sout_node_31,
	sout_node_4 => ww_sout_node_41,
	sout_node_5 => \result_node|sout_node[5]\);
\adder1_0[1]\ : addcore_2
PORT MAP (
	clock => ww_clock,
	cs_buffer_0 => ww_cs_buffer_0,
	cs_buffer_01 => \result_node|cs_buffer[0]~22\,
	inst7 => ww_inst7,
	cs_buffer_02 => ww_cs_buffer_02,
	cs_buffer_03 => ww_cs_buffer_03,
	cs_buffer_04 => ww_cs_buffer_04,
	COM_AD_D_9 => ww_COM_AD_D_9,
	COM_AD_D_8 => ww_COM_AD_D_8,
	COM_AD_D_7 => ww_COM_AD_D_7,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sout_node_0 => \result_node|sout_node[0]\,
	sout_node_1 => \result_node|sout_node[1]\,
	sout_node_2 => \result_node|sout_node[2]\,
	sout_node_3 => ww_sout_node_3,
	sout_node_4 => ww_sout_node_4);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	add10 IS
    PORT (
	clock : IN std_logic;
	inst7 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_31 : OUT std_logic;
	sout_node_41 : OUT std_logic;
	cs_buffer_0 : OUT std_logic;
	cs_buffer_01 : OUT std_logic;
	cs_buffer_02 : OUT std_logic;
	cs_buffer_03 : OUT std_logic;
	cs_buffer_04 : OUT std_logic
	);
END add10;

ARCHITECTURE structure OF add10 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_inst7 : std_logic;
SIGNAL ww_COM_AD_D_9 : std_logic;
SIGNAL ww_COM_AD_D_8 : std_logic;
SIGNAL ww_COM_AD_D_7 : std_logic;
SIGNAL ww_COM_AD_D_6 : std_logic;
SIGNAL ww_COM_AD_D_5 : std_logic;
SIGNAL ww_COM_AD_D_4 : std_logic;
SIGNAL ww_COM_AD_D_2 : std_logic;
SIGNAL ww_COM_AD_D_3 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_31 : std_logic;
SIGNAL ww_sout_node_41 : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_cs_buffer_04 : std_logic;

COMPONENT lpm_add_sub
    PORT (
	clock : IN std_logic;
	inst7 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_31 : OUT std_logic;
	sout_node_41 : OUT std_logic;
	cs_buffer_0 : OUT std_logic;
	cs_buffer_01 : OUT std_logic;
	cs_buffer_02 : OUT std_logic;
	cs_buffer_03 : OUT std_logic;
	cs_buffer_04 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_inst7 <= inst7;
ww_COM_AD_D_9 <= COM_AD_D_9;
ww_COM_AD_D_8 <= COM_AD_D_8;
ww_COM_AD_D_7 <= COM_AD_D_7;
ww_COM_AD_D_6 <= COM_AD_D_6;
ww_COM_AD_D_5 <= COM_AD_D_5;
ww_COM_AD_D_4 <= COM_AD_D_4;
ww_COM_AD_D_2 <= COM_AD_D_2;
ww_COM_AD_D_3 <= COM_AD_D_3;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sout_node_3 <= ww_sout_node_3;
sout_node_4 <= ww_sout_node_4;
sout_node_0 <= ww_sout_node_0;
sout_node_1 <= ww_sout_node_1;
sout_node_2 <= ww_sout_node_2;
sout_node_31 <= ww_sout_node_31;
sout_node_41 <= ww_sout_node_41;
cs_buffer_0 <= ww_cs_buffer_0;
cs_buffer_01 <= ww_cs_buffer_01;
cs_buffer_02 <= ww_cs_buffer_02;
cs_buffer_03 <= ww_cs_buffer_03;
cs_buffer_04 <= ww_cs_buffer_04;
lpm_add_sub_component : lpm_add_sub
PORT MAP (
	clock => ww_clock,
	inst7 => ww_inst7,
	COM_AD_D_9 => ww_COM_AD_D_9,
	COM_AD_D_8 => ww_COM_AD_D_8,
	COM_AD_D_7 => ww_COM_AD_D_7,
	COM_AD_D_6 => ww_COM_AD_D_6,
	COM_AD_D_5 => ww_COM_AD_D_5,
	COM_AD_D_4 => ww_COM_AD_D_4,
	COM_AD_D_2 => ww_COM_AD_D_2,
	COM_AD_D_3 => ww_COM_AD_D_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sout_node_3 => ww_sout_node_3,
	sout_node_4 => ww_sout_node_4,
	sout_node_0 => ww_sout_node_0,
	sout_node_1 => ww_sout_node_1,
	sout_node_2 => ww_sout_node_2,
	sout_node_31 => ww_sout_node_31,
	sout_node_41 => ww_sout_node_41,
	cs_buffer_0 => ww_cs_buffer_0,
	cs_buffer_01 => ww_cs_buffer_01,
	cs_buffer_02 => ww_cs_buffer_02,
	cs_buffer_03 => ww_cs_buffer_03,
	cs_buffer_04 => ww_cs_buffer_04);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_or IS
    PORT (
	sout_node_3 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_31 : IN std_logic;
	sout_node_41 : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	last_node_0 : OUT std_logic
	);
END lpm_or;

ARCHITECTURE structure OF lpm_or IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_31 : std_logic;
SIGNAL ww_sout_node_41 : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_last_node_0 : std_logic;
SIGNAL \or_node[0][3]~82\ : std_logic;
SIGNAL \or_node[0][2]~83\ : std_logic;
SIGNAL \or_node[0][1]~84\ : std_logic;
SIGNAL \or_node[0][0]~85\ : std_logic;
SIGNAL \or_node[0][0]\ : std_logic;
SIGNAL \or_node[0][1]\ : std_logic;
SIGNAL \or_node[0][2]\ : std_logic;
SIGNAL \or_node[0][3]\ : std_logic;

BEGIN

ww_sout_node_3 <= sout_node_3;
ww_sout_node_4 <= sout_node_4;
ww_sout_node_0 <= sout_node_0;
ww_sout_node_1 <= sout_node_1;
ww_sout_node_2 <= sout_node_2;
ww_sout_node_31 <= sout_node_31;
ww_sout_node_41 <= sout_node_41;
ww_cs_buffer_0 <= cs_buffer_0;
ww_cs_buffer_01 <= cs_buffer_01;
ww_cs_buffer_02 <= cs_buffer_02;
ww_cs_buffer_03 <= cs_buffer_03;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
last_node_0 <= ww_last_node_0;

\last_node[0]~47_I\ : apex20ke_lcell 
-- Equation(s):
-- last_node_0 = \or_node[0][3]\ & (sout_node_4 & sout_node_3 & cs_buffer_0 # !sout_node_4 & !sout_node_3 & !cs_buffer_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "8010",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_4,
	datab => ww_sout_node_3,
	datad => ww_cs_buffer_0,
	cin => \or_node[0][3]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_last_node_0);

\or_node[0][0]~85_I\ : apex20ke_lcell 
-- Equation(s):
-- \or_node[0][0]\ = CARRY(sout_node_1 # sout_node_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "00EE",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_1,
	datab => ww_sout_node_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \or_node[0][0]\);

\or_node[0][1]~84_I\ : apex20ke_lcell 
-- Equation(s):
-- \or_node[0][1]\ = CARRY(!sout_node_2 & !sout_node_3 & !\or_node[0][0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_2,
	datab => ww_sout_node_31,
	cin => \or_node[0][0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \or_node[0][1]\);

\or_node[0][2]~83_I\ : apex20ke_lcell 
-- Equation(s):
-- \or_node[0][2]\ = CARRY(sout_node_4 # cs_buffer_03 # !\or_node[0][1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "00EF",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_41,
	datab => ww_cs_buffer_01,
	cin => \or_node[0][1]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \or_node[0][2]\);

\or_node[0][3]~82_I\ : apex20ke_lcell 
-- Equation(s):
-- \or_node[0][3]\ = CARRY(!cs_buffer_05 & !cs_buffer_04 & !\or_node[0][2]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_cs_buffer_03,
	datab => ww_cs_buffer_02,
	cin => \or_node[0][2]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \or_node[0][3]\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	or10 IS
    PORT (
	sout_node_3 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_31 : IN std_logic;
	sout_node_41 : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	last_node_0 : OUT std_logic
	);
END or10;

ARCHITECTURE structure OF or10 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_31 : std_logic;
SIGNAL ww_sout_node_41 : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_last_node_0 : std_logic;

COMPONENT lpm_or
    PORT (
	sout_node_3 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_31 : IN std_logic;
	sout_node_41 : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	last_node_0 : OUT std_logic);
END COMPONENT;

BEGIN

ww_sout_node_3 <= sout_node_3;
ww_sout_node_4 <= sout_node_4;
ww_sout_node_0 <= sout_node_0;
ww_sout_node_1 <= sout_node_1;
ww_sout_node_2 <= sout_node_2;
ww_sout_node_31 <= sout_node_31;
ww_sout_node_41 <= sout_node_41;
ww_cs_buffer_0 <= cs_buffer_0;
ww_cs_buffer_01 <= cs_buffer_01;
ww_cs_buffer_02 <= cs_buffer_02;
ww_cs_buffer_03 <= cs_buffer_03;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
last_node_0 <= ww_last_node_0;
lpm_or_component : lpm_or
PORT MAP (
	sout_node_3 => ww_sout_node_3,
	sout_node_4 => ww_sout_node_4,
	sout_node_0 => ww_sout_node_0,
	sout_node_1 => ww_sout_node_1,
	sout_node_2 => ww_sout_node_2,
	sout_node_31 => ww_sout_node_31,
	sout_node_41 => ww_sout_node_41,
	cs_buffer_0 => ww_cs_buffer_0,
	cs_buffer_01 => ww_cs_buffer_01,
	cs_buffer_02 => ww_cs_buffer_02,
	cs_buffer_03 => ww_cs_buffer_03,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	last_node_0 => ww_last_node_0);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	cmpchain_1 IS
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic;
	aeb_out1 : OUT std_logic;
	aeb_out2 : OUT std_logic;
	aeb_out3 : OUT std_logic
	);
END cmpchain_1;

ARCHITECTURE structure OF cmpchain_1 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_aeb_out : std_logic;
SIGNAL ww_aeb_out1 : std_logic;
SIGNAL ww_aeb_out2 : std_logic;
SIGNAL ww_aeb_out3 : std_logic;

BEGIN

ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
aeb_out <= ww_aeb_out;
aeb_out1 <= ww_aeb_out1;
aeb_out2 <= ww_aeb_out2;
aeb_out3 <= ww_aeb_out3;

\aeb_out~3\ : apex20ke_lcell 
-- Equation(s):
-- aeb_out = sload_path_0 & !sload_path_1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00F0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_sload_path_0,
	datad => ww_sload_path_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_aeb_out);

\aeb_out~2\ : apex20ke_lcell 
-- Equation(s):
-- aeb_out1 = !sload_path_0 & !sload_path_1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0033",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_0,
	datad => ww_sload_path_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_aeb_out1);

\aeb_out~5\ : apex20ke_lcell 
-- Equation(s):
-- aeb_out2 = sload_path_0 & sload_path_1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_sload_path_0,
	datad => ww_sload_path_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_aeb_out2);

\aeb_out~4\ : apex20ke_lcell 
-- Equation(s):
-- aeb_out3 = !sload_path_0 & sload_path_1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_sload_path_0,
	datad => ww_sload_path_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_aeb_out3);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	comptree_1 IS
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic;
	aeb_out1 : OUT std_logic;
	aeb_out2 : OUT std_logic;
	aeb_out3 : OUT std_logic
	);
END comptree_1;

ARCHITECTURE structure OF comptree_1 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_aeb_out : std_logic;
SIGNAL ww_aeb_out1 : std_logic;
SIGNAL ww_aeb_out2 : std_logic;
SIGNAL ww_aeb_out3 : std_logic;

COMPONENT cmpchain_1
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic;
	aeb_out1 : OUT std_logic;
	aeb_out2 : OUT std_logic;
	aeb_out3 : OUT std_logic);
END COMPONENT;

BEGIN

ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
aeb_out <= ww_aeb_out;
aeb_out1 <= ww_aeb_out1;
aeb_out2 <= ww_aeb_out2;
aeb_out3 <= ww_aeb_out3;
cmp_end : cmpchain_1
PORT MAP (
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	aeb_out => ww_aeb_out,
	aeb_out1 => ww_aeb_out1,
	aeb_out2 => ww_aeb_out2,
	aeb_out3 => ww_aeb_out3);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_compare_1 IS
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic;
	aeb_out1 : OUT std_logic;
	aeb_out2 : OUT std_logic;
	aeb_out3 : OUT std_logic
	);
END lpm_compare_1;

ARCHITECTURE structure OF lpm_compare_1 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_aeb_out : std_logic;
SIGNAL ww_aeb_out1 : std_logic;
SIGNAL ww_aeb_out2 : std_logic;
SIGNAL ww_aeb_out3 : std_logic;

COMPONENT comptree_1
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic;
	aeb_out1 : OUT std_logic;
	aeb_out2 : OUT std_logic;
	aeb_out3 : OUT std_logic);
END COMPONENT;

BEGIN

ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
aeb_out <= ww_aeb_out;
aeb_out1 <= ww_aeb_out1;
aeb_out2 <= ww_aeb_out2;
aeb_out3 <= ww_aeb_out3;
comparator : comptree_1
PORT MAP (
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	aeb_out => ww_aeb_out,
	aeb_out1 => ww_aeb_out1,
	aeb_out2 => ww_aeb_out2,
	aeb_out3 => ww_aeb_out3);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_decode IS
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic;
	aeb_out1 : OUT std_logic;
	aeb_out2 : OUT std_logic;
	aeb_out3 : OUT std_logic
	);
END lpm_decode;

ARCHITECTURE structure OF lpm_decode IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_aeb_out : std_logic;
SIGNAL ww_aeb_out1 : std_logic;
SIGNAL ww_aeb_out2 : std_logic;
SIGNAL ww_aeb_out3 : std_logic;

COMPONENT lpm_compare_1
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic;
	aeb_out1 : OUT std_logic;
	aeb_out2 : OUT std_logic;
	aeb_out3 : OUT std_logic);
END COMPONENT;

BEGIN

ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
aeb_out <= ww_aeb_out;
aeb_out1 <= ww_aeb_out1;
aeb_out2 <= ww_aeb_out2;
aeb_out3 <= ww_aeb_out3;
\comparator[0]\ : lpm_compare_1
PORT MAP (
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	aeb_out => ww_aeb_out,
	aeb_out1 => ww_aeb_out1,
	aeb_out2 => ww_aeb_out2,
	aeb_out3 => ww_aeb_out3);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	dec2 IS
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic;
	aeb_out1 : OUT std_logic;
	aeb_out2 : OUT std_logic;
	aeb_out3 : OUT std_logic
	);
END dec2;

ARCHITECTURE structure OF dec2 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_aeb_out : std_logic;
SIGNAL ww_aeb_out1 : std_logic;
SIGNAL ww_aeb_out2 : std_logic;
SIGNAL ww_aeb_out3 : std_logic;

COMPONENT lpm_decode
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic;
	aeb_out1 : OUT std_logic;
	aeb_out2 : OUT std_logic;
	aeb_out3 : OUT std_logic);
END COMPONENT;

BEGIN

ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
aeb_out <= ww_aeb_out;
aeb_out1 <= ww_aeb_out1;
aeb_out2 <= ww_aeb_out2;
aeb_out3 <= ww_aeb_out3;
lpm_decode_component : lpm_decode
PORT MAP (
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	aeb_out => ww_aeb_out,
	aeb_out1 => ww_aeb_out1,
	aeb_out2 => ww_aeb_out2,
	aeb_out3 => ww_aeb_out3);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	a_csnbuffer_14 IS
    PORT (
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_3 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_5 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cs_buffer_0 : OUT std_logic;
	cs_buffer_01 : OUT std_logic;
	cs_buffer_02 : OUT std_logic;
	cs_buffer_03 : OUT std_logic;
	cs_buffer_04 : OUT std_logic;
	cs_buffer_05 : OUT std_logic
	);
END a_csnbuffer_14;

ARCHITECTURE structure OF a_csnbuffer_14 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_5 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_cs_buffer_04 : std_logic;
SIGNAL ww_cs_buffer_05 : std_logic;
SIGNAL \cs_buffer[0]~9\ : std_logic;

BEGIN

ww_sout_node_0 <= sout_node_0;
ww_sout_node_1 <= sout_node_1;
ww_sout_node_2 <= sout_node_2;
ww_sout_node_3 <= sout_node_3;
ww_sout_node_4 <= sout_node_4;
ww_sout_node_5 <= sout_node_5;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
cs_buffer_0 <= ww_cs_buffer_0;
cs_buffer_01 <= ww_cs_buffer_01;
cs_buffer_02 <= ww_cs_buffer_02;
cs_buffer_03 <= ww_cs_buffer_03;
cs_buffer_04 <= ww_cs_buffer_04;
cs_buffer_05 <= ww_cs_buffer_05;

\cs_buffer[0]~17_I\ : apex20ke_lcell 
-- Equation(s):
-- cs_buffer_0 = sout_node_2 & sout_node_0 & sout_node_1 & sout_node_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_2,
	datab => ww_sout_node_0,
	datac => ww_sout_node_1,
	datad => ww_sout_node_5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_cs_buffer_0);

\cs_buffer[0]~25_I\ : apex20ke_lcell 
-- Equation(s):
-- cs_buffer_01 = sout_node_4 $ (sout_node_3 & cs_buffer_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3CF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sout_node_3,
	datac => ww_sout_node_4,
	datad => ww_cs_buffer_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_cs_buffer_01);

\cs_buffer[0]~22_I\ : apex20ke_lcell 
-- Equation(s):
-- cs_buffer_02 = sout_node_1 & \cs_buffer[0]~9\ & sout_node_2 & sout_node_3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_1,
	datab => \cs_buffer[0]~9\,
	datac => ww_sout_node_2,
	datad => ww_sout_node_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_cs_buffer_02);

\cs_buffer[0]~5_I\ : apex20ke_lcell 
-- Equation(s):
-- cs_buffer_03 = sout_node_5 $ sout_node_0

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_sout_node_5,
	datad => ww_sout_node_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_cs_buffer_03);

\cs_buffer[0]~10_I\ : apex20ke_lcell 
-- Equation(s):
-- cs_buffer_04 = sout_node_1 $ (sout_node_0 & sout_node_5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3FC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sout_node_0,
	datac => ww_sout_node_5,
	datad => ww_sout_node_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_cs_buffer_04);

\cs_buffer[0]~15_I\ : apex20ke_lcell 
-- Equation(s):
-- cs_buffer_05 = sout_node_2 $ (sout_node_0 & sout_node_1 & sout_node_5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "6AAA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_2,
	datab => ww_sout_node_0,
	datac => ww_sout_node_1,
	datad => ww_sout_node_5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_cs_buffer_05);

\cs_buffer[0]~9_I\ : apex20ke_lcell 
-- Equation(s):
-- \cs_buffer[0]~9\ = sout_node_5 & sout_node_0

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_sout_node_5,
	datad => ww_sout_node_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \cs_buffer[0]~9\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	addcore_4 IS
    PORT (
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_3 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_5 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cs_buffer_0 : OUT std_logic;
	cs_buffer_01 : OUT std_logic;
	cs_buffer_02 : OUT std_logic;
	cs_buffer_03 : OUT std_logic;
	cs_buffer_04 : OUT std_logic;
	cs_buffer_05 : OUT std_logic
	);
END addcore_4;

ARCHITECTURE structure OF addcore_4 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_5 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_cs_buffer_04 : std_logic;
SIGNAL ww_cs_buffer_05 : std_logic;

COMPONENT a_csnbuffer_14
    PORT (
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_3 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_5 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cs_buffer_0 : OUT std_logic;
	cs_buffer_01 : OUT std_logic;
	cs_buffer_02 : OUT std_logic;
	cs_buffer_03 : OUT std_logic;
	cs_buffer_04 : OUT std_logic;
	cs_buffer_05 : OUT std_logic);
END COMPONENT;

BEGIN

ww_sout_node_0 <= sout_node_0;
ww_sout_node_1 <= sout_node_1;
ww_sout_node_2 <= sout_node_2;
ww_sout_node_3 <= sout_node_3;
ww_sout_node_4 <= sout_node_4;
ww_sout_node_5 <= sout_node_5;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
cs_buffer_0 <= ww_cs_buffer_0;
cs_buffer_01 <= ww_cs_buffer_01;
cs_buffer_02 <= ww_cs_buffer_02;
cs_buffer_03 <= ww_cs_buffer_03;
cs_buffer_04 <= ww_cs_buffer_04;
cs_buffer_05 <= ww_cs_buffer_05;
result_node : a_csnbuffer_14
PORT MAP (
	sout_node_0 => ww_sout_node_0,
	sout_node_1 => ww_sout_node_1,
	sout_node_2 => ww_sout_node_2,
	sout_node_3 => ww_sout_node_3,
	sout_node_4 => ww_sout_node_4,
	sout_node_5 => ww_sout_node_5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	cs_buffer_0 => ww_cs_buffer_0,
	cs_buffer_01 => ww_cs_buffer_01,
	cs_buffer_02 => ww_cs_buffer_02,
	cs_buffer_03 => ww_cs_buffer_03,
	cs_buffer_04 => ww_cs_buffer_04,
	cs_buffer_05 => ww_cs_buffer_05);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	a_csnbuffer_11 IS
    PORT (
	clk : IN std_logic;
	clrn : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic;
	sout_node_5 : OUT std_logic
	);
END a_csnbuffer_11;

ARCHITECTURE structure OF a_csnbuffer_11 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clk : std_logic;
SIGNAL ww_clrn : std_logic;
SIGNAL ww_COM_AD_D_6 : std_logic;
SIGNAL ww_COM_AD_D_5 : std_logic;
SIGNAL ww_COM_AD_D_4 : std_logic;
SIGNAL ww_COM_AD_D_2 : std_logic;
SIGNAL ww_COM_AD_D_3 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_5 : std_logic;
SIGNAL \sout_node[0]~COUT\ : std_logic;
SIGNAL \sout_node[1]~COUT\ : std_logic;
SIGNAL \sout_node[2]~COUT\ : std_logic;
SIGNAL \sout_node[3]~COUT\ : std_logic;
SIGNAL \sout_node[4]~COUT\ : std_logic;

BEGIN

ww_clk <= clk;
ww_clrn <= clrn;
ww_COM_AD_D_6 <= COM_AD_D_6;
ww_COM_AD_D_5 <= COM_AD_D_5;
ww_COM_AD_D_4 <= COM_AD_D_4;
ww_COM_AD_D_2 <= COM_AD_D_2;
ww_COM_AD_D_3 <= COM_AD_D_3;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sout_node_0 <= ww_sout_node_0;
sout_node_1 <= ww_sout_node_1;
sout_node_2 <= ww_sout_node_2;
sout_node_3 <= ww_sout_node_3;
sout_node_4 <= ww_sout_node_4;
sout_node_5 <= ww_sout_node_5;

\sout_node[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_0 = DFFE(sout_node_0 $ \COM_AD_D[2]~combout\, GLOBAL(outclock0), !inst8, , )
-- \sout_node[0]~COUT\ = CARRY(sout_node_0 & \COM_AD_D[2]~combout\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "6688",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_0,
	datab => ww_COM_AD_D_2,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_0,
	cout => \sout_node[0]~COUT\);

\sout_node[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_1 = DFFE(sout_node_1 $ \COM_AD_D[3]~combout\ $ \sout_node[0]~COUT\, GLOBAL(outclock0), !inst8, , )
-- \sout_node[1]~COUT\ = CARRY(sout_node_1 & !\COM_AD_D[3]~combout\ & !\sout_node[0]~COUT\ # !sout_node_1 & (!\sout_node[0]~COUT\ # !\COM_AD_D[3]~combout\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "9617",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_1,
	datab => ww_COM_AD_D_3,
	cin => \sout_node[0]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_1,
	cout => \sout_node[1]~COUT\);

\sout_node[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_2 = DFFE(sout_node_2 $ \COM_AD_D[4]~combout\ $ !\sout_node[1]~COUT\, GLOBAL(outclock0), !inst8, , )
-- \sout_node[2]~COUT\ = CARRY(sout_node_2 & (\COM_AD_D[4]~combout\ # !\sout_node[1]~COUT\) # !sout_node_2 & \COM_AD_D[4]~combout\ & !\sout_node[1]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "698E",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_2,
	datab => ww_COM_AD_D_4,
	cin => \sout_node[1]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_2,
	cout => \sout_node[2]~COUT\);

\sout_node[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_3 = DFFE(sout_node_3 $ \COM_AD_D[5]~combout\ $ \sout_node[2]~COUT\, GLOBAL(outclock0), !inst8, , )
-- \sout_node[3]~COUT\ = CARRY(sout_node_3 & !\COM_AD_D[5]~combout\ & !\sout_node[2]~COUT\ # !sout_node_3 & (!\sout_node[2]~COUT\ # !\COM_AD_D[5]~combout\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "9617",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_3,
	datab => ww_COM_AD_D_5,
	cin => \sout_node[2]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_3,
	cout => \sout_node[3]~COUT\);

\sout_node[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_4 = DFFE(sout_node_4 $ \COM_AD_D[6]~combout\ $ !\sout_node[3]~COUT\, GLOBAL(outclock0), !inst8, , )
-- \sout_node[4]~COUT\ = CARRY(sout_node_4 & (\COM_AD_D[6]~combout\ # !\sout_node[3]~COUT\) # !sout_node_4 & \COM_AD_D[6]~combout\ & !\sout_node[3]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "698E",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_4,
	datab => ww_COM_AD_D_6,
	cin => \sout_node[3]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_4,
	cout => \sout_node[4]~COUT\);

\sout_node[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_5 = DFFE(\sout_node[4]~COUT\, GLOBAL(outclock0), !inst8, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	cin => \sout_node[4]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_5);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	addcore_3 IS
    PORT (
	clock : IN std_logic;
	inst8 : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic;
	sout_node_5 : OUT std_logic
	);
END addcore_3;

ARCHITECTURE structure OF addcore_3 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_inst8 : std_logic;
SIGNAL ww_COM_AD_D_6 : std_logic;
SIGNAL ww_COM_AD_D_5 : std_logic;
SIGNAL ww_COM_AD_D_4 : std_logic;
SIGNAL ww_COM_AD_D_2 : std_logic;
SIGNAL ww_COM_AD_D_3 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_5 : std_logic;

COMPONENT a_csnbuffer_11
    PORT (
	clk : IN std_logic;
	clrn : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic;
	sout_node_5 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_inst8 <= inst8;
ww_COM_AD_D_6 <= COM_AD_D_6;
ww_COM_AD_D_5 <= COM_AD_D_5;
ww_COM_AD_D_4 <= COM_AD_D_4;
ww_COM_AD_D_2 <= COM_AD_D_2;
ww_COM_AD_D_3 <= COM_AD_D_3;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sout_node_0 <= ww_sout_node_0;
sout_node_1 <= ww_sout_node_1;
sout_node_2 <= ww_sout_node_2;
sout_node_3 <= ww_sout_node_3;
sout_node_4 <= ww_sout_node_4;
sout_node_5 <= ww_sout_node_5;
result_node : a_csnbuffer_11
PORT MAP (
	clk => ww_clock,
	clrn => ww_inst8,
	COM_AD_D_6 => ww_COM_AD_D_6,
	COM_AD_D_5 => ww_COM_AD_D_5,
	COM_AD_D_4 => ww_COM_AD_D_4,
	COM_AD_D_2 => ww_COM_AD_D_2,
	COM_AD_D_3 => ww_COM_AD_D_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sout_node_0 => ww_sout_node_0,
	sout_node_1 => ww_sout_node_1,
	sout_node_2 => ww_sout_node_2,
	sout_node_3 => ww_sout_node_3,
	sout_node_4 => ww_sout_node_4,
	sout_node_5 => ww_sout_node_5);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	a_csnbuffer_17 IS
    PORT (
	clk : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	clrn : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	cs_buffer_04 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic
	);
END a_csnbuffer_17;

ARCHITECTURE structure OF a_csnbuffer_17 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clk : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_clrn : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_cs_buffer_04 : std_logic;
SIGNAL ww_COM_AD_D_9 : std_logic;
SIGNAL ww_COM_AD_D_8 : std_logic;
SIGNAL ww_COM_AD_D_7 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL \sout_node[0]~COUT\ : std_logic;
SIGNAL \sout_node[1]~COUT\ : std_logic;
SIGNAL \sout_node[2]~COUT\ : std_logic;
SIGNAL \sout_node[3]~COUT\ : std_logic;

BEGIN

ww_clk <= clk;
ww_cs_buffer_0 <= cs_buffer_0;
ww_cs_buffer_01 <= cs_buffer_01;
ww_clrn <= clrn;
ww_cs_buffer_02 <= cs_buffer_02;
ww_cs_buffer_03 <= cs_buffer_03;
ww_cs_buffer_04 <= cs_buffer_04;
ww_COM_AD_D_9 <= COM_AD_D_9;
ww_COM_AD_D_8 <= COM_AD_D_8;
ww_COM_AD_D_7 <= COM_AD_D_7;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sout_node_0 <= ww_sout_node_0;
sout_node_1 <= ww_sout_node_1;
sout_node_2 <= ww_sout_node_2;
sout_node_3 <= ww_sout_node_3;
sout_node_4 <= ww_sout_node_4;

\sout_node[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_0 = DFFE(cs_buffer_03 $ \COM_AD_D[7]~combout\, GLOBAL(outclock0), !inst8, , )
-- \sout_node[0]~COUT\ = CARRY(cs_buffer_03 & \COM_AD_D[7]~combout\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "6688",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_cs_buffer_02,
	datab => ww_COM_AD_D_7,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_0,
	cout => \sout_node[0]~COUT\);

\sout_node[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_1 = DFFE(cs_buffer_04 $ \COM_AD_D[8]~combout\ $ \sout_node[0]~COUT\, GLOBAL(outclock0), !inst8, , )
-- \sout_node[1]~COUT\ = CARRY(cs_buffer_04 & !\COM_AD_D[8]~combout\ & !\sout_node[0]~COUT\ # !cs_buffer_04 & (!\sout_node[0]~COUT\ # !\COM_AD_D[8]~combout\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "9617",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_cs_buffer_03,
	datab => ww_COM_AD_D_8,
	cin => \sout_node[0]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_1,
	cout => \sout_node[1]~COUT\);

\sout_node[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_2 = DFFE(cs_buffer_05 $ \COM_AD_D[9]~combout\ $ !\sout_node[1]~COUT\, GLOBAL(outclock0), !inst8, , )
-- \sout_node[2]~COUT\ = CARRY(cs_buffer_05 & (\COM_AD_D[9]~combout\ # !\sout_node[1]~COUT\) # !cs_buffer_05 & \COM_AD_D[9]~combout\ & !\sout_node[1]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "698E",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_cs_buffer_04,
	datab => ww_COM_AD_D_9,
	cin => \sout_node[1]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_2,
	cout => \sout_node[2]~COUT\);

\sout_node[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_3 = DFFE(cs_buffer_0 $ sout_node_3 $ \sout_node[2]~COUT\, GLOBAL(outclock0), !inst8, , )
-- \sout_node[3]~COUT\ = CARRY(cs_buffer_0 $ !sout_node_3 # !\sout_node[2]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "969F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_cs_buffer_0,
	datab => ww_sout_node_3,
	cin => \sout_node[2]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_3,
	cout => \sout_node[3]~COUT\);

\sout_node[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_4 = DFFE(sout_node_4 $ \sout_node[3]~COUT\ $ !cs_buffer_02, GLOBAL(outclock0), !inst8, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3CC3",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sout_node_4,
	datad => ww_cs_buffer_01,
	cin => \sout_node[3]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_4);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	addcore_5 IS
    PORT (
	clock : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	inst8 : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	cs_buffer_04 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic
	);
END addcore_5;

ARCHITECTURE structure OF addcore_5 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_inst8 : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_cs_buffer_04 : std_logic;
SIGNAL ww_COM_AD_D_9 : std_logic;
SIGNAL ww_COM_AD_D_8 : std_logic;
SIGNAL ww_COM_AD_D_7 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;

COMPONENT a_csnbuffer_17
    PORT (
	clk : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	clrn : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	cs_buffer_04 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_cs_buffer_0 <= cs_buffer_0;
ww_cs_buffer_01 <= cs_buffer_01;
ww_inst8 <= inst8;
ww_cs_buffer_02 <= cs_buffer_02;
ww_cs_buffer_03 <= cs_buffer_03;
ww_cs_buffer_04 <= cs_buffer_04;
ww_COM_AD_D_9 <= COM_AD_D_9;
ww_COM_AD_D_8 <= COM_AD_D_8;
ww_COM_AD_D_7 <= COM_AD_D_7;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sout_node_0 <= ww_sout_node_0;
sout_node_1 <= ww_sout_node_1;
sout_node_2 <= ww_sout_node_2;
sout_node_3 <= ww_sout_node_3;
sout_node_4 <= ww_sout_node_4;
result_node : a_csnbuffer_17
PORT MAP (
	clk => ww_clock,
	cs_buffer_0 => ww_cs_buffer_0,
	cs_buffer_01 => ww_cs_buffer_01,
	clrn => ww_inst8,
	cs_buffer_02 => ww_cs_buffer_02,
	cs_buffer_03 => ww_cs_buffer_03,
	cs_buffer_04 => ww_cs_buffer_04,
	COM_AD_D_9 => ww_COM_AD_D_9,
	COM_AD_D_8 => ww_COM_AD_D_8,
	COM_AD_D_7 => ww_COM_AD_D_7,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sout_node_0 => ww_sout_node_0,
	sout_node_1 => ww_sout_node_1,
	sout_node_2 => ww_sout_node_2,
	sout_node_3 => ww_sout_node_3,
	sout_node_4 => ww_sout_node_4);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_add_sub_1 IS
    PORT (
	clock : IN std_logic;
	inst8 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_31 : OUT std_logic;
	sout_node_41 : OUT std_logic;
	cs_buffer_0 : OUT std_logic;
	cs_buffer_01 : OUT std_logic;
	cs_buffer_02 : OUT std_logic;
	cs_buffer_03 : OUT std_logic;
	cs_buffer_04 : OUT std_logic
	);
END lpm_add_sub_1;

ARCHITECTURE structure OF lpm_add_sub_1 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_inst8 : std_logic;
SIGNAL ww_COM_AD_D_9 : std_logic;
SIGNAL ww_COM_AD_D_8 : std_logic;
SIGNAL ww_COM_AD_D_7 : std_logic;
SIGNAL ww_COM_AD_D_6 : std_logic;
SIGNAL ww_COM_AD_D_5 : std_logic;
SIGNAL ww_COM_AD_D_4 : std_logic;
SIGNAL ww_COM_AD_D_2 : std_logic;
SIGNAL ww_COM_AD_D_3 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_31 : std_logic;
SIGNAL ww_sout_node_41 : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_cs_buffer_04 : std_logic;
SIGNAL \result_node|sout_node[0]\ : std_logic;
SIGNAL \result_node|sout_node[1]\ : std_logic;
SIGNAL \result_node|sout_node[2]\ : std_logic;
SIGNAL \result_node|sout_node[5]\ : std_logic;
SIGNAL \result_node|cs_buffer[0]~22\ : std_logic;

COMPONENT addcore_4
    PORT (
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_3 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_5 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cs_buffer_0 : OUT std_logic;
	cs_buffer_01 : OUT std_logic;
	cs_buffer_02 : OUT std_logic;
	cs_buffer_03 : OUT std_logic;
	cs_buffer_04 : OUT std_logic;
	cs_buffer_05 : OUT std_logic);
END COMPONENT;

COMPONENT addcore_3
    PORT (
	clock : IN std_logic;
	inst8 : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic;
	sout_node_5 : OUT std_logic);
END COMPONENT;

COMPONENT addcore_5
    PORT (
	clock : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	inst8 : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	cs_buffer_04 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_inst8 <= inst8;
ww_COM_AD_D_9 <= COM_AD_D_9;
ww_COM_AD_D_8 <= COM_AD_D_8;
ww_COM_AD_D_7 <= COM_AD_D_7;
ww_COM_AD_D_6 <= COM_AD_D_6;
ww_COM_AD_D_5 <= COM_AD_D_5;
ww_COM_AD_D_4 <= COM_AD_D_4;
ww_COM_AD_D_2 <= COM_AD_D_2;
ww_COM_AD_D_3 <= COM_AD_D_3;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sout_node_3 <= ww_sout_node_3;
sout_node_4 <= ww_sout_node_4;
sout_node_0 <= ww_sout_node_0;
sout_node_1 <= ww_sout_node_1;
sout_node_2 <= ww_sout_node_2;
sout_node_31 <= ww_sout_node_31;
sout_node_41 <= ww_sout_node_41;
cs_buffer_0 <= ww_cs_buffer_0;
cs_buffer_01 <= ww_cs_buffer_01;
cs_buffer_02 <= ww_cs_buffer_02;
cs_buffer_03 <= ww_cs_buffer_03;
cs_buffer_04 <= ww_cs_buffer_04;
\adder1[1]\ : addcore_4
PORT MAP (
	sout_node_0 => \result_node|sout_node[0]\,
	sout_node_1 => \result_node|sout_node[1]\,
	sout_node_2 => \result_node|sout_node[2]\,
	sout_node_3 => ww_sout_node_3,
	sout_node_4 => ww_sout_node_4,
	sout_node_5 => \result_node|sout_node[5]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	cs_buffer_0 => ww_cs_buffer_0,
	cs_buffer_01 => ww_cs_buffer_01,
	cs_buffer_02 => \result_node|cs_buffer[0]~22\,
	cs_buffer_03 => ww_cs_buffer_02,
	cs_buffer_04 => ww_cs_buffer_03,
	cs_buffer_05 => ww_cs_buffer_04);
\adder1[0]\ : addcore_3
PORT MAP (
	clock => ww_clock,
	inst8 => ww_inst8,
	COM_AD_D_6 => ww_COM_AD_D_6,
	COM_AD_D_5 => ww_COM_AD_D_5,
	COM_AD_D_4 => ww_COM_AD_D_4,
	COM_AD_D_2 => ww_COM_AD_D_2,
	COM_AD_D_3 => ww_COM_AD_D_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sout_node_0 => ww_sout_node_0,
	sout_node_1 => ww_sout_node_1,
	sout_node_2 => ww_sout_node_2,
	sout_node_3 => ww_sout_node_31,
	sout_node_4 => ww_sout_node_41,
	sout_node_5 => \result_node|sout_node[5]\);
\adder1_0[1]\ : addcore_5
PORT MAP (
	clock => ww_clock,
	cs_buffer_0 => ww_cs_buffer_0,
	cs_buffer_01 => \result_node|cs_buffer[0]~22\,
	inst8 => ww_inst8,
	cs_buffer_02 => ww_cs_buffer_02,
	cs_buffer_03 => ww_cs_buffer_03,
	cs_buffer_04 => ww_cs_buffer_04,
	COM_AD_D_9 => ww_COM_AD_D_9,
	COM_AD_D_8 => ww_COM_AD_D_8,
	COM_AD_D_7 => ww_COM_AD_D_7,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sout_node_0 => \result_node|sout_node[0]\,
	sout_node_1 => \result_node|sout_node[1]\,
	sout_node_2 => \result_node|sout_node[2]\,
	sout_node_3 => ww_sout_node_3,
	sout_node_4 => ww_sout_node_4);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	add10_1 IS
    PORT (
	clock : IN std_logic;
	inst8 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_31 : OUT std_logic;
	sout_node_41 : OUT std_logic;
	cs_buffer_0 : OUT std_logic;
	cs_buffer_01 : OUT std_logic;
	cs_buffer_02 : OUT std_logic;
	cs_buffer_03 : OUT std_logic;
	cs_buffer_04 : OUT std_logic
	);
END add10_1;

ARCHITECTURE structure OF add10_1 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_inst8 : std_logic;
SIGNAL ww_COM_AD_D_9 : std_logic;
SIGNAL ww_COM_AD_D_8 : std_logic;
SIGNAL ww_COM_AD_D_7 : std_logic;
SIGNAL ww_COM_AD_D_6 : std_logic;
SIGNAL ww_COM_AD_D_5 : std_logic;
SIGNAL ww_COM_AD_D_4 : std_logic;
SIGNAL ww_COM_AD_D_2 : std_logic;
SIGNAL ww_COM_AD_D_3 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_31 : std_logic;
SIGNAL ww_sout_node_41 : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_cs_buffer_04 : std_logic;

COMPONENT lpm_add_sub_1
    PORT (
	clock : IN std_logic;
	inst8 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_31 : OUT std_logic;
	sout_node_41 : OUT std_logic;
	cs_buffer_0 : OUT std_logic;
	cs_buffer_01 : OUT std_logic;
	cs_buffer_02 : OUT std_logic;
	cs_buffer_03 : OUT std_logic;
	cs_buffer_04 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_inst8 <= inst8;
ww_COM_AD_D_9 <= COM_AD_D_9;
ww_COM_AD_D_8 <= COM_AD_D_8;
ww_COM_AD_D_7 <= COM_AD_D_7;
ww_COM_AD_D_6 <= COM_AD_D_6;
ww_COM_AD_D_5 <= COM_AD_D_5;
ww_COM_AD_D_4 <= COM_AD_D_4;
ww_COM_AD_D_2 <= COM_AD_D_2;
ww_COM_AD_D_3 <= COM_AD_D_3;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sout_node_3 <= ww_sout_node_3;
sout_node_4 <= ww_sout_node_4;
sout_node_0 <= ww_sout_node_0;
sout_node_1 <= ww_sout_node_1;
sout_node_2 <= ww_sout_node_2;
sout_node_31 <= ww_sout_node_31;
sout_node_41 <= ww_sout_node_41;
cs_buffer_0 <= ww_cs_buffer_0;
cs_buffer_01 <= ww_cs_buffer_01;
cs_buffer_02 <= ww_cs_buffer_02;
cs_buffer_03 <= ww_cs_buffer_03;
cs_buffer_04 <= ww_cs_buffer_04;
lpm_add_sub_component : lpm_add_sub_1
PORT MAP (
	clock => ww_clock,
	inst8 => ww_inst8,
	COM_AD_D_9 => ww_COM_AD_D_9,
	COM_AD_D_8 => ww_COM_AD_D_8,
	COM_AD_D_7 => ww_COM_AD_D_7,
	COM_AD_D_6 => ww_COM_AD_D_6,
	COM_AD_D_5 => ww_COM_AD_D_5,
	COM_AD_D_4 => ww_COM_AD_D_4,
	COM_AD_D_2 => ww_COM_AD_D_2,
	COM_AD_D_3 => ww_COM_AD_D_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sout_node_3 => ww_sout_node_3,
	sout_node_4 => ww_sout_node_4,
	sout_node_0 => ww_sout_node_0,
	sout_node_1 => ww_sout_node_1,
	sout_node_2 => ww_sout_node_2,
	sout_node_31 => ww_sout_node_31,
	sout_node_41 => ww_sout_node_41,
	cs_buffer_0 => ww_cs_buffer_0,
	cs_buffer_01 => ww_cs_buffer_01,
	cs_buffer_02 => ww_cs_buffer_02,
	cs_buffer_03 => ww_cs_buffer_03,
	cs_buffer_04 => ww_cs_buffer_04);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_or_1 IS
    PORT (
	sout_node_3 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_31 : IN std_logic;
	sout_node_41 : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	last_node_0 : OUT std_logic
	);
END lpm_or_1;

ARCHITECTURE structure OF lpm_or_1 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_31 : std_logic;
SIGNAL ww_sout_node_41 : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_last_node_0 : std_logic;
SIGNAL \or_node[0][3]~82\ : std_logic;
SIGNAL \or_node[0][2]~83\ : std_logic;
SIGNAL \or_node[0][1]~84\ : std_logic;
SIGNAL \or_node[0][0]~85\ : std_logic;
SIGNAL \or_node[0][0]\ : std_logic;
SIGNAL \or_node[0][1]\ : std_logic;
SIGNAL \or_node[0][2]\ : std_logic;
SIGNAL \or_node[0][3]\ : std_logic;

BEGIN

ww_sout_node_3 <= sout_node_3;
ww_sout_node_4 <= sout_node_4;
ww_sout_node_0 <= sout_node_0;
ww_sout_node_1 <= sout_node_1;
ww_sout_node_2 <= sout_node_2;
ww_sout_node_31 <= sout_node_31;
ww_sout_node_41 <= sout_node_41;
ww_cs_buffer_0 <= cs_buffer_0;
ww_cs_buffer_01 <= cs_buffer_01;
ww_cs_buffer_02 <= cs_buffer_02;
ww_cs_buffer_03 <= cs_buffer_03;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
last_node_0 <= ww_last_node_0;

\last_node[0]~47_I\ : apex20ke_lcell 
-- Equation(s):
-- last_node_0 = \or_node[0][3]\ & (sout_node_4 & sout_node_3 & cs_buffer_0 # !sout_node_4 & !sout_node_3 & !cs_buffer_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "8010",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_4,
	datab => ww_sout_node_3,
	datad => ww_cs_buffer_0,
	cin => \or_node[0][3]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_last_node_0);

\or_node[0][0]~85_I\ : apex20ke_lcell 
-- Equation(s):
-- \or_node[0][0]\ = CARRY(sout_node_1 # sout_node_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "00EE",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_1,
	datab => ww_sout_node_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \or_node[0][0]\);

\or_node[0][1]~84_I\ : apex20ke_lcell 
-- Equation(s):
-- \or_node[0][1]\ = CARRY(!sout_node_2 & !sout_node_3 & !\or_node[0][0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_2,
	datab => ww_sout_node_31,
	cin => \or_node[0][0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \or_node[0][1]\);

\or_node[0][2]~83_I\ : apex20ke_lcell 
-- Equation(s):
-- \or_node[0][2]\ = CARRY(sout_node_4 # cs_buffer_03 # !\or_node[0][1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "00EF",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_41,
	datab => ww_cs_buffer_01,
	cin => \or_node[0][1]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \or_node[0][2]\);

\or_node[0][3]~82_I\ : apex20ke_lcell 
-- Equation(s):
-- \or_node[0][3]\ = CARRY(!cs_buffer_05 & !cs_buffer_04 & !\or_node[0][2]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_cs_buffer_03,
	datab => ww_cs_buffer_02,
	cin => \or_node[0][2]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \or_node[0][3]\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	or10_1 IS
    PORT (
	sout_node_3 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_31 : IN std_logic;
	sout_node_41 : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	last_node_0 : OUT std_logic
	);
END or10_1;

ARCHITECTURE structure OF or10_1 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_31 : std_logic;
SIGNAL ww_sout_node_41 : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_last_node_0 : std_logic;

COMPONENT lpm_or_1
    PORT (
	sout_node_3 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_31 : IN std_logic;
	sout_node_41 : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	last_node_0 : OUT std_logic);
END COMPONENT;

BEGIN

ww_sout_node_3 <= sout_node_3;
ww_sout_node_4 <= sout_node_4;
ww_sout_node_0 <= sout_node_0;
ww_sout_node_1 <= sout_node_1;
ww_sout_node_2 <= sout_node_2;
ww_sout_node_31 <= sout_node_31;
ww_sout_node_41 <= sout_node_41;
ww_cs_buffer_0 <= cs_buffer_0;
ww_cs_buffer_01 <= cs_buffer_01;
ww_cs_buffer_02 <= cs_buffer_02;
ww_cs_buffer_03 <= cs_buffer_03;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
last_node_0 <= ww_last_node_0;
lpm_or_component : lpm_or_1
PORT MAP (
	sout_node_3 => ww_sout_node_3,
	sout_node_4 => ww_sout_node_4,
	sout_node_0 => ww_sout_node_0,
	sout_node_1 => ww_sout_node_1,
	sout_node_2 => ww_sout_node_2,
	sout_node_31 => ww_sout_node_31,
	sout_node_41 => ww_sout_node_41,
	cs_buffer_0 => ww_cs_buffer_0,
	cs_buffer_01 => ww_cs_buffer_01,
	cs_buffer_02 => ww_cs_buffer_02,
	cs_buffer_03 => ww_cs_buffer_03,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	last_node_0 => ww_last_node_0);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	a_csnbuffer_23 IS
    PORT (
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_3 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_5 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cs_buffer_0 : OUT std_logic;
	cs_buffer_01 : OUT std_logic;
	cs_buffer_02 : OUT std_logic;
	cs_buffer_03 : OUT std_logic;
	cs_buffer_04 : OUT std_logic;
	cs_buffer_05 : OUT std_logic
	);
END a_csnbuffer_23;

ARCHITECTURE structure OF a_csnbuffer_23 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_5 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_cs_buffer_04 : std_logic;
SIGNAL ww_cs_buffer_05 : std_logic;
SIGNAL \cs_buffer[0]~9\ : std_logic;

BEGIN

ww_sout_node_0 <= sout_node_0;
ww_sout_node_1 <= sout_node_1;
ww_sout_node_2 <= sout_node_2;
ww_sout_node_3 <= sout_node_3;
ww_sout_node_4 <= sout_node_4;
ww_sout_node_5 <= sout_node_5;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
cs_buffer_0 <= ww_cs_buffer_0;
cs_buffer_01 <= ww_cs_buffer_01;
cs_buffer_02 <= ww_cs_buffer_02;
cs_buffer_03 <= ww_cs_buffer_03;
cs_buffer_04 <= ww_cs_buffer_04;
cs_buffer_05 <= ww_cs_buffer_05;

\cs_buffer[0]~17_I\ : apex20ke_lcell 
-- Equation(s):
-- cs_buffer_0 = sout_node_2 & sout_node_5 & sout_node_0 & sout_node_1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_2,
	datab => ww_sout_node_5,
	datac => ww_sout_node_0,
	datad => ww_sout_node_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_cs_buffer_0);

\cs_buffer[0]~25_I\ : apex20ke_lcell 
-- Equation(s):
-- cs_buffer_01 = sout_node_4 $ (sout_node_3 & cs_buffer_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3CCC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sout_node_4,
	datac => ww_sout_node_3,
	datad => ww_cs_buffer_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_cs_buffer_01);

\cs_buffer[0]~22_I\ : apex20ke_lcell 
-- Equation(s):
-- cs_buffer_02 = sout_node_1 & sout_node_2 & sout_node_3 & \cs_buffer[0]~9\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_1,
	datab => ww_sout_node_2,
	datac => ww_sout_node_3,
	datad => \cs_buffer[0]~9\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_cs_buffer_02);

\cs_buffer[0]~5_I\ : apex20ke_lcell 
-- Equation(s):
-- cs_buffer_03 = sout_node_5 $ sout_node_0

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_sout_node_5,
	datad => ww_sout_node_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_cs_buffer_03);

\cs_buffer[0]~10_I\ : apex20ke_lcell 
-- Equation(s):
-- cs_buffer_04 = sout_node_1 $ (sout_node_0 & sout_node_5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "66CC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_0,
	datab => ww_sout_node_1,
	datad => ww_sout_node_5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_cs_buffer_04);

\cs_buffer[0]~15_I\ : apex20ke_lcell 
-- Equation(s):
-- cs_buffer_05 = sout_node_2 $ (sout_node_5 & sout_node_0 & sout_node_1)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "6AAA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_2,
	datab => ww_sout_node_5,
	datac => ww_sout_node_0,
	datad => ww_sout_node_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_cs_buffer_05);

\cs_buffer[0]~9_I\ : apex20ke_lcell 
-- Equation(s):
-- \cs_buffer[0]~9\ = sout_node_0 & sout_node_5

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_sout_node_0,
	datad => ww_sout_node_5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \cs_buffer[0]~9\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	addcore_7 IS
    PORT (
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_3 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_5 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cs_buffer_0 : OUT std_logic;
	cs_buffer_01 : OUT std_logic;
	cs_buffer_02 : OUT std_logic;
	cs_buffer_03 : OUT std_logic;
	cs_buffer_04 : OUT std_logic;
	cs_buffer_05 : OUT std_logic
	);
END addcore_7;

ARCHITECTURE structure OF addcore_7 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_5 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_cs_buffer_04 : std_logic;
SIGNAL ww_cs_buffer_05 : std_logic;

COMPONENT a_csnbuffer_23
    PORT (
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_3 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_5 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cs_buffer_0 : OUT std_logic;
	cs_buffer_01 : OUT std_logic;
	cs_buffer_02 : OUT std_logic;
	cs_buffer_03 : OUT std_logic;
	cs_buffer_04 : OUT std_logic;
	cs_buffer_05 : OUT std_logic);
END COMPONENT;

BEGIN

ww_sout_node_0 <= sout_node_0;
ww_sout_node_1 <= sout_node_1;
ww_sout_node_2 <= sout_node_2;
ww_sout_node_3 <= sout_node_3;
ww_sout_node_4 <= sout_node_4;
ww_sout_node_5 <= sout_node_5;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
cs_buffer_0 <= ww_cs_buffer_0;
cs_buffer_01 <= ww_cs_buffer_01;
cs_buffer_02 <= ww_cs_buffer_02;
cs_buffer_03 <= ww_cs_buffer_03;
cs_buffer_04 <= ww_cs_buffer_04;
cs_buffer_05 <= ww_cs_buffer_05;
result_node : a_csnbuffer_23
PORT MAP (
	sout_node_0 => ww_sout_node_0,
	sout_node_1 => ww_sout_node_1,
	sout_node_2 => ww_sout_node_2,
	sout_node_3 => ww_sout_node_3,
	sout_node_4 => ww_sout_node_4,
	sout_node_5 => ww_sout_node_5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	cs_buffer_0 => ww_cs_buffer_0,
	cs_buffer_01 => ww_cs_buffer_01,
	cs_buffer_02 => ww_cs_buffer_02,
	cs_buffer_03 => ww_cs_buffer_03,
	cs_buffer_04 => ww_cs_buffer_04,
	cs_buffer_05 => ww_cs_buffer_05);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	a_csnbuffer_20 IS
    PORT (
	clk : IN std_logic;
	clrn : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic;
	sout_node_5 : OUT std_logic
	);
END a_csnbuffer_20;

ARCHITECTURE structure OF a_csnbuffer_20 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clk : std_logic;
SIGNAL ww_clrn : std_logic;
SIGNAL ww_COM_AD_D_6 : std_logic;
SIGNAL ww_COM_AD_D_5 : std_logic;
SIGNAL ww_COM_AD_D_4 : std_logic;
SIGNAL ww_COM_AD_D_2 : std_logic;
SIGNAL ww_COM_AD_D_3 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_5 : std_logic;
SIGNAL \sout_node[0]~COUT\ : std_logic;
SIGNAL \sout_node[1]~COUT\ : std_logic;
SIGNAL \sout_node[2]~COUT\ : std_logic;
SIGNAL \sout_node[3]~COUT\ : std_logic;
SIGNAL \sout_node[4]~COUT\ : std_logic;

BEGIN

ww_clk <= clk;
ww_clrn <= clrn;
ww_COM_AD_D_6 <= COM_AD_D_6;
ww_COM_AD_D_5 <= COM_AD_D_5;
ww_COM_AD_D_4 <= COM_AD_D_4;
ww_COM_AD_D_2 <= COM_AD_D_2;
ww_COM_AD_D_3 <= COM_AD_D_3;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sout_node_0 <= ww_sout_node_0;
sout_node_1 <= ww_sout_node_1;
sout_node_2 <= ww_sout_node_2;
sout_node_3 <= ww_sout_node_3;
sout_node_4 <= ww_sout_node_4;
sout_node_5 <= ww_sout_node_5;

\sout_node[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_0 = DFFE(sout_node_0 $ \COM_AD_D[2]~combout\, GLOBAL(outclock0), !inst6, , )
-- \sout_node[0]~COUT\ = CARRY(sout_node_0 & \COM_AD_D[2]~combout\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "6688",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_0,
	datab => ww_COM_AD_D_2,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_0,
	cout => \sout_node[0]~COUT\);

\sout_node[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_1 = DFFE(\COM_AD_D[3]~combout\ $ sout_node_1 $ \sout_node[0]~COUT\, GLOBAL(outclock0), !inst6, , )
-- \sout_node[1]~COUT\ = CARRY(\COM_AD_D[3]~combout\ & !sout_node_1 & !\sout_node[0]~COUT\ # !\COM_AD_D[3]~combout\ & (!\sout_node[0]~COUT\ # !sout_node_1))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "9617",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_COM_AD_D_3,
	datab => ww_sout_node_1,
	cin => \sout_node[0]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_1,
	cout => \sout_node[1]~COUT\);

\sout_node[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_2 = DFFE(\COM_AD_D[4]~combout\ $ sout_node_2 $ !\sout_node[1]~COUT\, GLOBAL(outclock0), !inst6, , )
-- \sout_node[2]~COUT\ = CARRY(\COM_AD_D[4]~combout\ & (sout_node_2 # !\sout_node[1]~COUT\) # !\COM_AD_D[4]~combout\ & sout_node_2 & !\sout_node[1]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "698E",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_COM_AD_D_4,
	datab => ww_sout_node_2,
	cin => \sout_node[1]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_2,
	cout => \sout_node[2]~COUT\);

\sout_node[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_3 = DFFE(\COM_AD_D[5]~combout\ $ sout_node_3 $ \sout_node[2]~COUT\, GLOBAL(outclock0), !inst6, , )
-- \sout_node[3]~COUT\ = CARRY(\COM_AD_D[5]~combout\ & !sout_node_3 & !\sout_node[2]~COUT\ # !\COM_AD_D[5]~combout\ & (!\sout_node[2]~COUT\ # !sout_node_3))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "9617",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_COM_AD_D_5,
	datab => ww_sout_node_3,
	cin => \sout_node[2]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_3,
	cout => \sout_node[3]~COUT\);

\sout_node[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_4 = DFFE(\COM_AD_D[6]~combout\ $ sout_node_4 $ !\sout_node[3]~COUT\, GLOBAL(outclock0), !inst6, , )
-- \sout_node[4]~COUT\ = CARRY(\COM_AD_D[6]~combout\ & (sout_node_4 # !\sout_node[3]~COUT\) # !\COM_AD_D[6]~combout\ & sout_node_4 & !\sout_node[3]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "698E",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_COM_AD_D_6,
	datab => ww_sout_node_4,
	cin => \sout_node[3]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_4,
	cout => \sout_node[4]~COUT\);

\sout_node[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_5 = DFFE(\sout_node[4]~COUT\, GLOBAL(outclock0), !inst6, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	cin => \sout_node[4]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_5);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	addcore_6 IS
    PORT (
	clock : IN std_logic;
	inst6 : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic;
	sout_node_5 : OUT std_logic
	);
END addcore_6;

ARCHITECTURE structure OF addcore_6 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_inst6 : std_logic;
SIGNAL ww_COM_AD_D_6 : std_logic;
SIGNAL ww_COM_AD_D_5 : std_logic;
SIGNAL ww_COM_AD_D_4 : std_logic;
SIGNAL ww_COM_AD_D_2 : std_logic;
SIGNAL ww_COM_AD_D_3 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_5 : std_logic;

COMPONENT a_csnbuffer_20
    PORT (
	clk : IN std_logic;
	clrn : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic;
	sout_node_5 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_inst6 <= inst6;
ww_COM_AD_D_6 <= COM_AD_D_6;
ww_COM_AD_D_5 <= COM_AD_D_5;
ww_COM_AD_D_4 <= COM_AD_D_4;
ww_COM_AD_D_2 <= COM_AD_D_2;
ww_COM_AD_D_3 <= COM_AD_D_3;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sout_node_0 <= ww_sout_node_0;
sout_node_1 <= ww_sout_node_1;
sout_node_2 <= ww_sout_node_2;
sout_node_3 <= ww_sout_node_3;
sout_node_4 <= ww_sout_node_4;
sout_node_5 <= ww_sout_node_5;
result_node : a_csnbuffer_20
PORT MAP (
	clk => ww_clock,
	clrn => ww_inst6,
	COM_AD_D_6 => ww_COM_AD_D_6,
	COM_AD_D_5 => ww_COM_AD_D_5,
	COM_AD_D_4 => ww_COM_AD_D_4,
	COM_AD_D_2 => ww_COM_AD_D_2,
	COM_AD_D_3 => ww_COM_AD_D_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sout_node_0 => ww_sout_node_0,
	sout_node_1 => ww_sout_node_1,
	sout_node_2 => ww_sout_node_2,
	sout_node_3 => ww_sout_node_3,
	sout_node_4 => ww_sout_node_4,
	sout_node_5 => ww_sout_node_5);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	a_csnbuffer_26 IS
    PORT (
	clk : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	clrn : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	cs_buffer_04 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic
	);
END a_csnbuffer_26;

ARCHITECTURE structure OF a_csnbuffer_26 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clk : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_clrn : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_cs_buffer_04 : std_logic;
SIGNAL ww_COM_AD_D_9 : std_logic;
SIGNAL ww_COM_AD_D_8 : std_logic;
SIGNAL ww_COM_AD_D_7 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL \sout_node[0]~COUT\ : std_logic;
SIGNAL \sout_node[1]~COUT\ : std_logic;
SIGNAL \sout_node[2]~COUT\ : std_logic;
SIGNAL \sout_node[3]~COUT\ : std_logic;

BEGIN

ww_clk <= clk;
ww_cs_buffer_0 <= cs_buffer_0;
ww_cs_buffer_01 <= cs_buffer_01;
ww_clrn <= clrn;
ww_cs_buffer_02 <= cs_buffer_02;
ww_cs_buffer_03 <= cs_buffer_03;
ww_cs_buffer_04 <= cs_buffer_04;
ww_COM_AD_D_9 <= COM_AD_D_9;
ww_COM_AD_D_8 <= COM_AD_D_8;
ww_COM_AD_D_7 <= COM_AD_D_7;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sout_node_0 <= ww_sout_node_0;
sout_node_1 <= ww_sout_node_1;
sout_node_2 <= ww_sout_node_2;
sout_node_3 <= ww_sout_node_3;
sout_node_4 <= ww_sout_node_4;

\sout_node[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_0 = DFFE(cs_buffer_03 $ \COM_AD_D[7]~combout\, GLOBAL(outclock0), !inst6, , )
-- \sout_node[0]~COUT\ = CARRY(cs_buffer_03 & \COM_AD_D[7]~combout\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "6688",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_cs_buffer_02,
	datab => ww_COM_AD_D_7,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_0,
	cout => \sout_node[0]~COUT\);

\sout_node[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_1 = DFFE(cs_buffer_04 $ \COM_AD_D[8]~combout\ $ \sout_node[0]~COUT\, GLOBAL(outclock0), !inst6, , )
-- \sout_node[1]~COUT\ = CARRY(cs_buffer_04 & !\COM_AD_D[8]~combout\ & !\sout_node[0]~COUT\ # !cs_buffer_04 & (!\sout_node[0]~COUT\ # !\COM_AD_D[8]~combout\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "9617",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_cs_buffer_03,
	datab => ww_COM_AD_D_8,
	cin => \sout_node[0]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_1,
	cout => \sout_node[1]~COUT\);

\sout_node[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_2 = DFFE(cs_buffer_05 $ \COM_AD_D[9]~combout\ $ !\sout_node[1]~COUT\, GLOBAL(outclock0), !inst6, , )
-- \sout_node[2]~COUT\ = CARRY(cs_buffer_05 & (\COM_AD_D[9]~combout\ # !\sout_node[1]~COUT\) # !cs_buffer_05 & \COM_AD_D[9]~combout\ & !\sout_node[1]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "698E",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_cs_buffer_04,
	datab => ww_COM_AD_D_9,
	cin => \sout_node[1]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_2,
	cout => \sout_node[2]~COUT\);

\sout_node[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_3 = DFFE(cs_buffer_0 $ sout_node_3 $ \sout_node[2]~COUT\, GLOBAL(outclock0), !inst6, , )
-- \sout_node[3]~COUT\ = CARRY(cs_buffer_0 $ !sout_node_3 # !\sout_node[2]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "969F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_cs_buffer_0,
	datab => ww_sout_node_3,
	cin => \sout_node[2]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_3,
	cout => \sout_node[3]~COUT\);

\sout_node[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_4 = DFFE(cs_buffer_02 $ \sout_node[3]~COUT\ $ !sout_node_4, GLOBAL(outclock0), !inst6, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5AA5",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_cs_buffer_01,
	datad => ww_sout_node_4,
	cin => \sout_node[3]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_4);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	addcore_8 IS
    PORT (
	clock : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	inst6 : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	cs_buffer_04 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic
	);
END addcore_8;

ARCHITECTURE structure OF addcore_8 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_inst6 : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_cs_buffer_04 : std_logic;
SIGNAL ww_COM_AD_D_9 : std_logic;
SIGNAL ww_COM_AD_D_8 : std_logic;
SIGNAL ww_COM_AD_D_7 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;

COMPONENT a_csnbuffer_26
    PORT (
	clk : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	clrn : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	cs_buffer_04 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_cs_buffer_0 <= cs_buffer_0;
ww_cs_buffer_01 <= cs_buffer_01;
ww_inst6 <= inst6;
ww_cs_buffer_02 <= cs_buffer_02;
ww_cs_buffer_03 <= cs_buffer_03;
ww_cs_buffer_04 <= cs_buffer_04;
ww_COM_AD_D_9 <= COM_AD_D_9;
ww_COM_AD_D_8 <= COM_AD_D_8;
ww_COM_AD_D_7 <= COM_AD_D_7;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sout_node_0 <= ww_sout_node_0;
sout_node_1 <= ww_sout_node_1;
sout_node_2 <= ww_sout_node_2;
sout_node_3 <= ww_sout_node_3;
sout_node_4 <= ww_sout_node_4;
result_node : a_csnbuffer_26
PORT MAP (
	clk => ww_clock,
	cs_buffer_0 => ww_cs_buffer_0,
	cs_buffer_01 => ww_cs_buffer_01,
	clrn => ww_inst6,
	cs_buffer_02 => ww_cs_buffer_02,
	cs_buffer_03 => ww_cs_buffer_03,
	cs_buffer_04 => ww_cs_buffer_04,
	COM_AD_D_9 => ww_COM_AD_D_9,
	COM_AD_D_8 => ww_COM_AD_D_8,
	COM_AD_D_7 => ww_COM_AD_D_7,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sout_node_0 => ww_sout_node_0,
	sout_node_1 => ww_sout_node_1,
	sout_node_2 => ww_sout_node_2,
	sout_node_3 => ww_sout_node_3,
	sout_node_4 => ww_sout_node_4);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_add_sub_2 IS
    PORT (
	clock : IN std_logic;
	inst6 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_31 : OUT std_logic;
	sout_node_41 : OUT std_logic;
	cs_buffer_0 : OUT std_logic;
	cs_buffer_01 : OUT std_logic;
	cs_buffer_02 : OUT std_logic;
	cs_buffer_03 : OUT std_logic;
	cs_buffer_04 : OUT std_logic
	);
END lpm_add_sub_2;

ARCHITECTURE structure OF lpm_add_sub_2 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_inst6 : std_logic;
SIGNAL ww_COM_AD_D_9 : std_logic;
SIGNAL ww_COM_AD_D_8 : std_logic;
SIGNAL ww_COM_AD_D_7 : std_logic;
SIGNAL ww_COM_AD_D_6 : std_logic;
SIGNAL ww_COM_AD_D_5 : std_logic;
SIGNAL ww_COM_AD_D_4 : std_logic;
SIGNAL ww_COM_AD_D_2 : std_logic;
SIGNAL ww_COM_AD_D_3 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_31 : std_logic;
SIGNAL ww_sout_node_41 : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_cs_buffer_04 : std_logic;
SIGNAL \result_node|sout_node[0]\ : std_logic;
SIGNAL \result_node|sout_node[1]\ : std_logic;
SIGNAL \result_node|sout_node[2]\ : std_logic;
SIGNAL \result_node|sout_node[5]\ : std_logic;
SIGNAL \result_node|cs_buffer[0]~22\ : std_logic;

COMPONENT addcore_7
    PORT (
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_3 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_5 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cs_buffer_0 : OUT std_logic;
	cs_buffer_01 : OUT std_logic;
	cs_buffer_02 : OUT std_logic;
	cs_buffer_03 : OUT std_logic;
	cs_buffer_04 : OUT std_logic;
	cs_buffer_05 : OUT std_logic);
END COMPONENT;

COMPONENT addcore_6
    PORT (
	clock : IN std_logic;
	inst6 : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic;
	sout_node_5 : OUT std_logic);
END COMPONENT;

COMPONENT addcore_8
    PORT (
	clock : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	inst6 : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	cs_buffer_04 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_inst6 <= inst6;
ww_COM_AD_D_9 <= COM_AD_D_9;
ww_COM_AD_D_8 <= COM_AD_D_8;
ww_COM_AD_D_7 <= COM_AD_D_7;
ww_COM_AD_D_6 <= COM_AD_D_6;
ww_COM_AD_D_5 <= COM_AD_D_5;
ww_COM_AD_D_4 <= COM_AD_D_4;
ww_COM_AD_D_2 <= COM_AD_D_2;
ww_COM_AD_D_3 <= COM_AD_D_3;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sout_node_3 <= ww_sout_node_3;
sout_node_4 <= ww_sout_node_4;
sout_node_0 <= ww_sout_node_0;
sout_node_1 <= ww_sout_node_1;
sout_node_2 <= ww_sout_node_2;
sout_node_31 <= ww_sout_node_31;
sout_node_41 <= ww_sout_node_41;
cs_buffer_0 <= ww_cs_buffer_0;
cs_buffer_01 <= ww_cs_buffer_01;
cs_buffer_02 <= ww_cs_buffer_02;
cs_buffer_03 <= ww_cs_buffer_03;
cs_buffer_04 <= ww_cs_buffer_04;
\adder1[1]\ : addcore_7
PORT MAP (
	sout_node_0 => \result_node|sout_node[0]\,
	sout_node_1 => \result_node|sout_node[1]\,
	sout_node_2 => \result_node|sout_node[2]\,
	sout_node_3 => ww_sout_node_3,
	sout_node_4 => ww_sout_node_4,
	sout_node_5 => \result_node|sout_node[5]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	cs_buffer_0 => ww_cs_buffer_0,
	cs_buffer_01 => ww_cs_buffer_01,
	cs_buffer_02 => \result_node|cs_buffer[0]~22\,
	cs_buffer_03 => ww_cs_buffer_02,
	cs_buffer_04 => ww_cs_buffer_03,
	cs_buffer_05 => ww_cs_buffer_04);
\adder1[0]\ : addcore_6
PORT MAP (
	clock => ww_clock,
	inst6 => ww_inst6,
	COM_AD_D_6 => ww_COM_AD_D_6,
	COM_AD_D_5 => ww_COM_AD_D_5,
	COM_AD_D_4 => ww_COM_AD_D_4,
	COM_AD_D_2 => ww_COM_AD_D_2,
	COM_AD_D_3 => ww_COM_AD_D_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sout_node_0 => ww_sout_node_0,
	sout_node_1 => ww_sout_node_1,
	sout_node_2 => ww_sout_node_2,
	sout_node_3 => ww_sout_node_31,
	sout_node_4 => ww_sout_node_41,
	sout_node_5 => \result_node|sout_node[5]\);
\adder1_0[1]\ : addcore_8
PORT MAP (
	clock => ww_clock,
	cs_buffer_0 => ww_cs_buffer_0,
	cs_buffer_01 => \result_node|cs_buffer[0]~22\,
	inst6 => ww_inst6,
	cs_buffer_02 => ww_cs_buffer_02,
	cs_buffer_03 => ww_cs_buffer_03,
	cs_buffer_04 => ww_cs_buffer_04,
	COM_AD_D_9 => ww_COM_AD_D_9,
	COM_AD_D_8 => ww_COM_AD_D_8,
	COM_AD_D_7 => ww_COM_AD_D_7,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sout_node_0 => \result_node|sout_node[0]\,
	sout_node_1 => \result_node|sout_node[1]\,
	sout_node_2 => \result_node|sout_node[2]\,
	sout_node_3 => ww_sout_node_3,
	sout_node_4 => ww_sout_node_4);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	add10_2 IS
    PORT (
	clock : IN std_logic;
	inst6 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_31 : OUT std_logic;
	sout_node_41 : OUT std_logic;
	cs_buffer_0 : OUT std_logic;
	cs_buffer_01 : OUT std_logic;
	cs_buffer_02 : OUT std_logic;
	cs_buffer_03 : OUT std_logic;
	cs_buffer_04 : OUT std_logic
	);
END add10_2;

ARCHITECTURE structure OF add10_2 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_inst6 : std_logic;
SIGNAL ww_COM_AD_D_9 : std_logic;
SIGNAL ww_COM_AD_D_8 : std_logic;
SIGNAL ww_COM_AD_D_7 : std_logic;
SIGNAL ww_COM_AD_D_6 : std_logic;
SIGNAL ww_COM_AD_D_5 : std_logic;
SIGNAL ww_COM_AD_D_4 : std_logic;
SIGNAL ww_COM_AD_D_2 : std_logic;
SIGNAL ww_COM_AD_D_3 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_31 : std_logic;
SIGNAL ww_sout_node_41 : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_cs_buffer_04 : std_logic;

COMPONENT lpm_add_sub_2
    PORT (
	clock : IN std_logic;
	inst6 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_31 : OUT std_logic;
	sout_node_41 : OUT std_logic;
	cs_buffer_0 : OUT std_logic;
	cs_buffer_01 : OUT std_logic;
	cs_buffer_02 : OUT std_logic;
	cs_buffer_03 : OUT std_logic;
	cs_buffer_04 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_inst6 <= inst6;
ww_COM_AD_D_9 <= COM_AD_D_9;
ww_COM_AD_D_8 <= COM_AD_D_8;
ww_COM_AD_D_7 <= COM_AD_D_7;
ww_COM_AD_D_6 <= COM_AD_D_6;
ww_COM_AD_D_5 <= COM_AD_D_5;
ww_COM_AD_D_4 <= COM_AD_D_4;
ww_COM_AD_D_2 <= COM_AD_D_2;
ww_COM_AD_D_3 <= COM_AD_D_3;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sout_node_3 <= ww_sout_node_3;
sout_node_4 <= ww_sout_node_4;
sout_node_0 <= ww_sout_node_0;
sout_node_1 <= ww_sout_node_1;
sout_node_2 <= ww_sout_node_2;
sout_node_31 <= ww_sout_node_31;
sout_node_41 <= ww_sout_node_41;
cs_buffer_0 <= ww_cs_buffer_0;
cs_buffer_01 <= ww_cs_buffer_01;
cs_buffer_02 <= ww_cs_buffer_02;
cs_buffer_03 <= ww_cs_buffer_03;
cs_buffer_04 <= ww_cs_buffer_04;
lpm_add_sub_component : lpm_add_sub_2
PORT MAP (
	clock => ww_clock,
	inst6 => ww_inst6,
	COM_AD_D_9 => ww_COM_AD_D_9,
	COM_AD_D_8 => ww_COM_AD_D_8,
	COM_AD_D_7 => ww_COM_AD_D_7,
	COM_AD_D_6 => ww_COM_AD_D_6,
	COM_AD_D_5 => ww_COM_AD_D_5,
	COM_AD_D_4 => ww_COM_AD_D_4,
	COM_AD_D_2 => ww_COM_AD_D_2,
	COM_AD_D_3 => ww_COM_AD_D_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sout_node_3 => ww_sout_node_3,
	sout_node_4 => ww_sout_node_4,
	sout_node_0 => ww_sout_node_0,
	sout_node_1 => ww_sout_node_1,
	sout_node_2 => ww_sout_node_2,
	sout_node_31 => ww_sout_node_31,
	sout_node_41 => ww_sout_node_41,
	cs_buffer_0 => ww_cs_buffer_0,
	cs_buffer_01 => ww_cs_buffer_01,
	cs_buffer_02 => ww_cs_buffer_02,
	cs_buffer_03 => ww_cs_buffer_03,
	cs_buffer_04 => ww_cs_buffer_04);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_or_2 IS
    PORT (
	sout_node_3 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_31 : IN std_logic;
	sout_node_41 : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	last_node_0 : OUT std_logic
	);
END lpm_or_2;

ARCHITECTURE structure OF lpm_or_2 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_31 : std_logic;
SIGNAL ww_sout_node_41 : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_last_node_0 : std_logic;
SIGNAL \or_node[0][3]~82\ : std_logic;
SIGNAL \or_node[0][2]~83\ : std_logic;
SIGNAL \or_node[0][1]~84\ : std_logic;
SIGNAL \or_node[0][0]~85\ : std_logic;
SIGNAL \or_node[0][0]\ : std_logic;
SIGNAL \or_node[0][1]\ : std_logic;
SIGNAL \or_node[0][2]\ : std_logic;
SIGNAL \or_node[0][3]\ : std_logic;

BEGIN

ww_sout_node_3 <= sout_node_3;
ww_sout_node_4 <= sout_node_4;
ww_sout_node_0 <= sout_node_0;
ww_sout_node_1 <= sout_node_1;
ww_sout_node_2 <= sout_node_2;
ww_sout_node_31 <= sout_node_31;
ww_sout_node_41 <= sout_node_41;
ww_cs_buffer_0 <= cs_buffer_0;
ww_cs_buffer_01 <= cs_buffer_01;
ww_cs_buffer_02 <= cs_buffer_02;
ww_cs_buffer_03 <= cs_buffer_03;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
last_node_0 <= ww_last_node_0;

\last_node[0]~47_I\ : apex20ke_lcell 
-- Equation(s):
-- last_node_0 = \or_node[0][3]\ & (sout_node_3 & sout_node_4 & cs_buffer_0 # !sout_node_3 & !sout_node_4 & !cs_buffer_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "8010",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_3,
	datab => ww_sout_node_4,
	datad => ww_cs_buffer_0,
	cin => \or_node[0][3]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_last_node_0);

\or_node[0][0]~85_I\ : apex20ke_lcell 
-- Equation(s):
-- \or_node[0][0]\ = CARRY(sout_node_1 # sout_node_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "00EE",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_1,
	datab => ww_sout_node_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \or_node[0][0]\);

\or_node[0][1]~84_I\ : apex20ke_lcell 
-- Equation(s):
-- \or_node[0][1]\ = CARRY(!sout_node_2 & !sout_node_3 & !\or_node[0][0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_2,
	datab => ww_sout_node_31,
	cin => \or_node[0][0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \or_node[0][1]\);

\or_node[0][2]~83_I\ : apex20ke_lcell 
-- Equation(s):
-- \or_node[0][2]\ = CARRY(sout_node_4 # cs_buffer_03 # !\or_node[0][1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "00EF",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_41,
	datab => ww_cs_buffer_01,
	cin => \or_node[0][1]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \or_node[0][2]\);

\or_node[0][3]~82_I\ : apex20ke_lcell 
-- Equation(s):
-- \or_node[0][3]\ = CARRY(!cs_buffer_05 & !cs_buffer_04 & !\or_node[0][2]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_cs_buffer_03,
	datab => ww_cs_buffer_02,
	cin => \or_node[0][2]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \or_node[0][3]\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	or10_2 IS
    PORT (
	sout_node_3 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_31 : IN std_logic;
	sout_node_41 : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	last_node_0 : OUT std_logic
	);
END or10_2;

ARCHITECTURE structure OF or10_2 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_31 : std_logic;
SIGNAL ww_sout_node_41 : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_last_node_0 : std_logic;

COMPONENT lpm_or_2
    PORT (
	sout_node_3 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_31 : IN std_logic;
	sout_node_41 : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	last_node_0 : OUT std_logic);
END COMPONENT;

BEGIN

ww_sout_node_3 <= sout_node_3;
ww_sout_node_4 <= sout_node_4;
ww_sout_node_0 <= sout_node_0;
ww_sout_node_1 <= sout_node_1;
ww_sout_node_2 <= sout_node_2;
ww_sout_node_31 <= sout_node_31;
ww_sout_node_41 <= sout_node_41;
ww_cs_buffer_0 <= cs_buffer_0;
ww_cs_buffer_01 <= cs_buffer_01;
ww_cs_buffer_02 <= cs_buffer_02;
ww_cs_buffer_03 <= cs_buffer_03;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
last_node_0 <= ww_last_node_0;
lpm_or_component : lpm_or_2
PORT MAP (
	sout_node_3 => ww_sout_node_3,
	sout_node_4 => ww_sout_node_4,
	sout_node_0 => ww_sout_node_0,
	sout_node_1 => ww_sout_node_1,
	sout_node_2 => ww_sout_node_2,
	sout_node_31 => ww_sout_node_31,
	sout_node_41 => ww_sout_node_41,
	cs_buffer_0 => ww_cs_buffer_0,
	cs_buffer_01 => ww_cs_buffer_01,
	cs_buffer_02 => ww_cs_buffer_02,
	cs_buffer_03 => ww_cs_buffer_03,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	last_node_0 => ww_last_node_0);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	a_csnbuffer_32 IS
    PORT (
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_3 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_5 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cs_buffer_0 : OUT std_logic;
	cs_buffer_01 : OUT std_logic;
	cs_buffer_02 : OUT std_logic;
	cs_buffer_03 : OUT std_logic;
	cs_buffer_04 : OUT std_logic;
	cs_buffer_05 : OUT std_logic
	);
END a_csnbuffer_32;

ARCHITECTURE structure OF a_csnbuffer_32 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_5 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_cs_buffer_04 : std_logic;
SIGNAL ww_cs_buffer_05 : std_logic;
SIGNAL \cs_buffer[0]~9\ : std_logic;

BEGIN

ww_sout_node_0 <= sout_node_0;
ww_sout_node_1 <= sout_node_1;
ww_sout_node_2 <= sout_node_2;
ww_sout_node_3 <= sout_node_3;
ww_sout_node_4 <= sout_node_4;
ww_sout_node_5 <= sout_node_5;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
cs_buffer_0 <= ww_cs_buffer_0;
cs_buffer_01 <= ww_cs_buffer_01;
cs_buffer_02 <= ww_cs_buffer_02;
cs_buffer_03 <= ww_cs_buffer_03;
cs_buffer_04 <= ww_cs_buffer_04;
cs_buffer_05 <= ww_cs_buffer_05;

\cs_buffer[0]~17_I\ : apex20ke_lcell 
-- Equation(s):
-- cs_buffer_0 = sout_node_5 & sout_node_0 & sout_node_2 & sout_node_1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_5,
	datab => ww_sout_node_0,
	datac => ww_sout_node_2,
	datad => ww_sout_node_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_cs_buffer_0);

\cs_buffer[0]~25_I\ : apex20ke_lcell 
-- Equation(s):
-- cs_buffer_01 = sout_node_4 $ (sout_node_3 & cs_buffer_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3CCC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sout_node_4,
	datac => ww_sout_node_3,
	datad => ww_cs_buffer_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_cs_buffer_01);

\cs_buffer[0]~22_I\ : apex20ke_lcell 
-- Equation(s):
-- cs_buffer_02 = sout_node_3 & sout_node_2 & \cs_buffer[0]~9\ & sout_node_1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_3,
	datab => ww_sout_node_2,
	datac => \cs_buffer[0]~9\,
	datad => ww_sout_node_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_cs_buffer_02);

\cs_buffer[0]~5_I\ : apex20ke_lcell 
-- Equation(s):
-- cs_buffer_03 = sout_node_5 $ sout_node_0

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_sout_node_5,
	datad => ww_sout_node_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_cs_buffer_03);

\cs_buffer[0]~10_I\ : apex20ke_lcell 
-- Equation(s):
-- cs_buffer_04 = sout_node_1 $ (sout_node_0 & sout_node_5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3FC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sout_node_0,
	datac => ww_sout_node_5,
	datad => ww_sout_node_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_cs_buffer_04);

\cs_buffer[0]~15_I\ : apex20ke_lcell 
-- Equation(s):
-- cs_buffer_05 = sout_node_2 $ (sout_node_5 & sout_node_0 & sout_node_1)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "6CCC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_5,
	datab => ww_sout_node_2,
	datac => ww_sout_node_0,
	datad => ww_sout_node_1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_cs_buffer_05);

\cs_buffer[0]~9_I\ : apex20ke_lcell 
-- Equation(s):
-- \cs_buffer[0]~9\ = sout_node_5 & sout_node_0

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_sout_node_5,
	datad => ww_sout_node_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \cs_buffer[0]~9\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	addcore_10 IS
    PORT (
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_3 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_5 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cs_buffer_0 : OUT std_logic;
	cs_buffer_01 : OUT std_logic;
	cs_buffer_02 : OUT std_logic;
	cs_buffer_03 : OUT std_logic;
	cs_buffer_04 : OUT std_logic;
	cs_buffer_05 : OUT std_logic
	);
END addcore_10;

ARCHITECTURE structure OF addcore_10 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_5 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_cs_buffer_04 : std_logic;
SIGNAL ww_cs_buffer_05 : std_logic;

COMPONENT a_csnbuffer_32
    PORT (
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_3 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_5 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cs_buffer_0 : OUT std_logic;
	cs_buffer_01 : OUT std_logic;
	cs_buffer_02 : OUT std_logic;
	cs_buffer_03 : OUT std_logic;
	cs_buffer_04 : OUT std_logic;
	cs_buffer_05 : OUT std_logic);
END COMPONENT;

BEGIN

ww_sout_node_0 <= sout_node_0;
ww_sout_node_1 <= sout_node_1;
ww_sout_node_2 <= sout_node_2;
ww_sout_node_3 <= sout_node_3;
ww_sout_node_4 <= sout_node_4;
ww_sout_node_5 <= sout_node_5;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
cs_buffer_0 <= ww_cs_buffer_0;
cs_buffer_01 <= ww_cs_buffer_01;
cs_buffer_02 <= ww_cs_buffer_02;
cs_buffer_03 <= ww_cs_buffer_03;
cs_buffer_04 <= ww_cs_buffer_04;
cs_buffer_05 <= ww_cs_buffer_05;
result_node : a_csnbuffer_32
PORT MAP (
	sout_node_0 => ww_sout_node_0,
	sout_node_1 => ww_sout_node_1,
	sout_node_2 => ww_sout_node_2,
	sout_node_3 => ww_sout_node_3,
	sout_node_4 => ww_sout_node_4,
	sout_node_5 => ww_sout_node_5,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	cs_buffer_0 => ww_cs_buffer_0,
	cs_buffer_01 => ww_cs_buffer_01,
	cs_buffer_02 => ww_cs_buffer_02,
	cs_buffer_03 => ww_cs_buffer_03,
	cs_buffer_04 => ww_cs_buffer_04,
	cs_buffer_05 => ww_cs_buffer_05);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	a_csnbuffer_29 IS
    PORT (
	clk : IN std_logic;
	clrn : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic;
	sout_node_5 : OUT std_logic
	);
END a_csnbuffer_29;

ARCHITECTURE structure OF a_csnbuffer_29 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clk : std_logic;
SIGNAL ww_clrn : std_logic;
SIGNAL ww_COM_AD_D_6 : std_logic;
SIGNAL ww_COM_AD_D_5 : std_logic;
SIGNAL ww_COM_AD_D_4 : std_logic;
SIGNAL ww_COM_AD_D_2 : std_logic;
SIGNAL ww_COM_AD_D_3 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_5 : std_logic;
SIGNAL \sout_node[0]~COUT\ : std_logic;
SIGNAL \sout_node[1]~COUT\ : std_logic;
SIGNAL \sout_node[2]~COUT\ : std_logic;
SIGNAL \sout_node[3]~COUT\ : std_logic;
SIGNAL \sout_node[4]~COUT\ : std_logic;

BEGIN

ww_clk <= clk;
ww_clrn <= clrn;
ww_COM_AD_D_6 <= COM_AD_D_6;
ww_COM_AD_D_5 <= COM_AD_D_5;
ww_COM_AD_D_4 <= COM_AD_D_4;
ww_COM_AD_D_2 <= COM_AD_D_2;
ww_COM_AD_D_3 <= COM_AD_D_3;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sout_node_0 <= ww_sout_node_0;
sout_node_1 <= ww_sout_node_1;
sout_node_2 <= ww_sout_node_2;
sout_node_3 <= ww_sout_node_3;
sout_node_4 <= ww_sout_node_4;
sout_node_5 <= ww_sout_node_5;

\sout_node[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_0 = DFFE(\COM_AD_D[2]~combout\ $ sout_node_0, GLOBAL(outclock0), !inst9, , )
-- \sout_node[0]~COUT\ = CARRY(\COM_AD_D[2]~combout\ & sout_node_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "6688",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_COM_AD_D_2,
	datab => ww_sout_node_0,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_0,
	cout => \sout_node[0]~COUT\);

\sout_node[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_1 = DFFE(sout_node_1 $ \COM_AD_D[3]~combout\ $ \sout_node[0]~COUT\, GLOBAL(outclock0), !inst9, , )
-- \sout_node[1]~COUT\ = CARRY(sout_node_1 & !\COM_AD_D[3]~combout\ & !\sout_node[0]~COUT\ # !sout_node_1 & (!\sout_node[0]~COUT\ # !\COM_AD_D[3]~combout\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "9617",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_1,
	datab => ww_COM_AD_D_3,
	cin => \sout_node[0]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_1,
	cout => \sout_node[1]~COUT\);

\sout_node[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_2 = DFFE(sout_node_2 $ \COM_AD_D[4]~combout\ $ !\sout_node[1]~COUT\, GLOBAL(outclock0), !inst9, , )
-- \sout_node[2]~COUT\ = CARRY(sout_node_2 & (\COM_AD_D[4]~combout\ # !\sout_node[1]~COUT\) # !sout_node_2 & \COM_AD_D[4]~combout\ & !\sout_node[1]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "698E",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_2,
	datab => ww_COM_AD_D_4,
	cin => \sout_node[1]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_2,
	cout => \sout_node[2]~COUT\);

\sout_node[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_3 = DFFE(\COM_AD_D[5]~combout\ $ sout_node_3 $ \sout_node[2]~COUT\, GLOBAL(outclock0), !inst9, , )
-- \sout_node[3]~COUT\ = CARRY(\COM_AD_D[5]~combout\ & !sout_node_3 & !\sout_node[2]~COUT\ # !\COM_AD_D[5]~combout\ & (!\sout_node[2]~COUT\ # !sout_node_3))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "9617",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_COM_AD_D_5,
	datab => ww_sout_node_3,
	cin => \sout_node[2]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_3,
	cout => \sout_node[3]~COUT\);

\sout_node[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_4 = DFFE(sout_node_4 $ \COM_AD_D[6]~combout\ $ !\sout_node[3]~COUT\, GLOBAL(outclock0), !inst9, , )
-- \sout_node[4]~COUT\ = CARRY(sout_node_4 & (\COM_AD_D[6]~combout\ # !\sout_node[3]~COUT\) # !sout_node_4 & \COM_AD_D[6]~combout\ & !\sout_node[3]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "698E",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_4,
	datab => ww_COM_AD_D_6,
	cin => \sout_node[3]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_4,
	cout => \sout_node[4]~COUT\);

\sout_node[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_5 = DFFE(\sout_node[4]~COUT\, GLOBAL(outclock0), !inst9, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	cin => \sout_node[4]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_5);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	addcore_9 IS
    PORT (
	clock : IN std_logic;
	inst9 : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic;
	sout_node_5 : OUT std_logic
	);
END addcore_9;

ARCHITECTURE structure OF addcore_9 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_inst9 : std_logic;
SIGNAL ww_COM_AD_D_6 : std_logic;
SIGNAL ww_COM_AD_D_5 : std_logic;
SIGNAL ww_COM_AD_D_4 : std_logic;
SIGNAL ww_COM_AD_D_2 : std_logic;
SIGNAL ww_COM_AD_D_3 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_5 : std_logic;

COMPONENT a_csnbuffer_29
    PORT (
	clk : IN std_logic;
	clrn : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic;
	sout_node_5 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_inst9 <= inst9;
ww_COM_AD_D_6 <= COM_AD_D_6;
ww_COM_AD_D_5 <= COM_AD_D_5;
ww_COM_AD_D_4 <= COM_AD_D_4;
ww_COM_AD_D_2 <= COM_AD_D_2;
ww_COM_AD_D_3 <= COM_AD_D_3;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sout_node_0 <= ww_sout_node_0;
sout_node_1 <= ww_sout_node_1;
sout_node_2 <= ww_sout_node_2;
sout_node_3 <= ww_sout_node_3;
sout_node_4 <= ww_sout_node_4;
sout_node_5 <= ww_sout_node_5;
result_node : a_csnbuffer_29
PORT MAP (
	clk => ww_clock,
	clrn => ww_inst9,
	COM_AD_D_6 => ww_COM_AD_D_6,
	COM_AD_D_5 => ww_COM_AD_D_5,
	COM_AD_D_4 => ww_COM_AD_D_4,
	COM_AD_D_2 => ww_COM_AD_D_2,
	COM_AD_D_3 => ww_COM_AD_D_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sout_node_0 => ww_sout_node_0,
	sout_node_1 => ww_sout_node_1,
	sout_node_2 => ww_sout_node_2,
	sout_node_3 => ww_sout_node_3,
	sout_node_4 => ww_sout_node_4,
	sout_node_5 => ww_sout_node_5);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	a_csnbuffer_35 IS
    PORT (
	clk : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	clrn : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	cs_buffer_04 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic
	);
END a_csnbuffer_35;

ARCHITECTURE structure OF a_csnbuffer_35 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clk : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_clrn : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_cs_buffer_04 : std_logic;
SIGNAL ww_COM_AD_D_9 : std_logic;
SIGNAL ww_COM_AD_D_8 : std_logic;
SIGNAL ww_COM_AD_D_7 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL \sout_node[0]~COUT\ : std_logic;
SIGNAL \sout_node[1]~COUT\ : std_logic;
SIGNAL \sout_node[2]~COUT\ : std_logic;
SIGNAL \sout_node[3]~COUT\ : std_logic;

BEGIN

ww_clk <= clk;
ww_cs_buffer_0 <= cs_buffer_0;
ww_cs_buffer_01 <= cs_buffer_01;
ww_clrn <= clrn;
ww_cs_buffer_02 <= cs_buffer_02;
ww_cs_buffer_03 <= cs_buffer_03;
ww_cs_buffer_04 <= cs_buffer_04;
ww_COM_AD_D_9 <= COM_AD_D_9;
ww_COM_AD_D_8 <= COM_AD_D_8;
ww_COM_AD_D_7 <= COM_AD_D_7;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sout_node_0 <= ww_sout_node_0;
sout_node_1 <= ww_sout_node_1;
sout_node_2 <= ww_sout_node_2;
sout_node_3 <= ww_sout_node_3;
sout_node_4 <= ww_sout_node_4;

\sout_node[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_0 = DFFE(cs_buffer_03 $ \COM_AD_D[7]~combout\, GLOBAL(outclock0), !inst9, , )
-- \sout_node[0]~COUT\ = CARRY(cs_buffer_03 & \COM_AD_D[7]~combout\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "6688",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_cs_buffer_02,
	datab => ww_COM_AD_D_7,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_0,
	cout => \sout_node[0]~COUT\);

\sout_node[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_1 = DFFE(cs_buffer_04 $ \COM_AD_D[8]~combout\ $ \sout_node[0]~COUT\, GLOBAL(outclock0), !inst9, , )
-- \sout_node[1]~COUT\ = CARRY(cs_buffer_04 & !\COM_AD_D[8]~combout\ & !\sout_node[0]~COUT\ # !cs_buffer_04 & (!\sout_node[0]~COUT\ # !\COM_AD_D[8]~combout\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "9617",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_cs_buffer_03,
	datab => ww_COM_AD_D_8,
	cin => \sout_node[0]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_1,
	cout => \sout_node[1]~COUT\);

\sout_node[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_2 = DFFE(cs_buffer_05 $ \COM_AD_D[9]~combout\ $ !\sout_node[1]~COUT\, GLOBAL(outclock0), !inst9, , )
-- \sout_node[2]~COUT\ = CARRY(cs_buffer_05 & (\COM_AD_D[9]~combout\ # !\sout_node[1]~COUT\) # !cs_buffer_05 & \COM_AD_D[9]~combout\ & !\sout_node[1]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "698E",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_cs_buffer_04,
	datab => ww_COM_AD_D_9,
	cin => \sout_node[1]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_2,
	cout => \sout_node[2]~COUT\);

\sout_node[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_3 = DFFE(cs_buffer_0 $ sout_node_3 $ \sout_node[2]~COUT\, GLOBAL(outclock0), !inst9, , )
-- \sout_node[3]~COUT\ = CARRY(cs_buffer_0 $ !sout_node_3 # !\sout_node[2]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "969F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_cs_buffer_0,
	datab => ww_sout_node_3,
	cin => \sout_node[2]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_3,
	cout => \sout_node[3]~COUT\);

\sout_node[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- sout_node_4 = DFFE(cs_buffer_02 $ \sout_node[3]~COUT\ $ !sout_node_4, GLOBAL(outclock0), !inst9, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5AA5",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_cs_buffer_01,
	datad => ww_sout_node_4,
	cin => \sout_node[3]~COUT\,
	clk => ww_clk,
	aclr => ww_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sout_node_4);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	addcore_11 IS
    PORT (
	clock : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	inst9 : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	cs_buffer_04 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic
	);
END addcore_11;

ARCHITECTURE structure OF addcore_11 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_inst9 : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_cs_buffer_04 : std_logic;
SIGNAL ww_COM_AD_D_9 : std_logic;
SIGNAL ww_COM_AD_D_8 : std_logic;
SIGNAL ww_COM_AD_D_7 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;

COMPONENT a_csnbuffer_35
    PORT (
	clk : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	clrn : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	cs_buffer_04 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_cs_buffer_0 <= cs_buffer_0;
ww_cs_buffer_01 <= cs_buffer_01;
ww_inst9 <= inst9;
ww_cs_buffer_02 <= cs_buffer_02;
ww_cs_buffer_03 <= cs_buffer_03;
ww_cs_buffer_04 <= cs_buffer_04;
ww_COM_AD_D_9 <= COM_AD_D_9;
ww_COM_AD_D_8 <= COM_AD_D_8;
ww_COM_AD_D_7 <= COM_AD_D_7;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sout_node_0 <= ww_sout_node_0;
sout_node_1 <= ww_sout_node_1;
sout_node_2 <= ww_sout_node_2;
sout_node_3 <= ww_sout_node_3;
sout_node_4 <= ww_sout_node_4;
result_node : a_csnbuffer_35
PORT MAP (
	clk => ww_clock,
	cs_buffer_0 => ww_cs_buffer_0,
	cs_buffer_01 => ww_cs_buffer_01,
	clrn => ww_inst9,
	cs_buffer_02 => ww_cs_buffer_02,
	cs_buffer_03 => ww_cs_buffer_03,
	cs_buffer_04 => ww_cs_buffer_04,
	COM_AD_D_9 => ww_COM_AD_D_9,
	COM_AD_D_8 => ww_COM_AD_D_8,
	COM_AD_D_7 => ww_COM_AD_D_7,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sout_node_0 => ww_sout_node_0,
	sout_node_1 => ww_sout_node_1,
	sout_node_2 => ww_sout_node_2,
	sout_node_3 => ww_sout_node_3,
	sout_node_4 => ww_sout_node_4);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_add_sub_3 IS
    PORT (
	clock : IN std_logic;
	inst9 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_31 : OUT std_logic;
	sout_node_41 : OUT std_logic;
	cs_buffer_0 : OUT std_logic;
	cs_buffer_01 : OUT std_logic;
	cs_buffer_02 : OUT std_logic;
	cs_buffer_03 : OUT std_logic;
	cs_buffer_04 : OUT std_logic
	);
END lpm_add_sub_3;

ARCHITECTURE structure OF lpm_add_sub_3 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_inst9 : std_logic;
SIGNAL ww_COM_AD_D_9 : std_logic;
SIGNAL ww_COM_AD_D_8 : std_logic;
SIGNAL ww_COM_AD_D_7 : std_logic;
SIGNAL ww_COM_AD_D_6 : std_logic;
SIGNAL ww_COM_AD_D_5 : std_logic;
SIGNAL ww_COM_AD_D_4 : std_logic;
SIGNAL ww_COM_AD_D_2 : std_logic;
SIGNAL ww_COM_AD_D_3 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_31 : std_logic;
SIGNAL ww_sout_node_41 : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_cs_buffer_04 : std_logic;
SIGNAL \result_node|sout_node[0]\ : std_logic;
SIGNAL \result_node|sout_node[1]\ : std_logic;
SIGNAL \result_node|sout_node[2]\ : std_logic;
SIGNAL \result_node|sout_node[5]\ : std_logic;
SIGNAL \result_node|cs_buffer[0]~22\ : std_logic;

COMPONENT addcore_10
    PORT (
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_3 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_5 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cs_buffer_0 : OUT std_logic;
	cs_buffer_01 : OUT std_logic;
	cs_buffer_02 : OUT std_logic;
	cs_buffer_03 : OUT std_logic;
	cs_buffer_04 : OUT std_logic;
	cs_buffer_05 : OUT std_logic);
END COMPONENT;

COMPONENT addcore_9
    PORT (
	clock : IN std_logic;
	inst9 : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic;
	sout_node_5 : OUT std_logic);
END COMPONENT;

COMPONENT addcore_11
    PORT (
	clock : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	inst9 : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	cs_buffer_04 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_inst9 <= inst9;
ww_COM_AD_D_9 <= COM_AD_D_9;
ww_COM_AD_D_8 <= COM_AD_D_8;
ww_COM_AD_D_7 <= COM_AD_D_7;
ww_COM_AD_D_6 <= COM_AD_D_6;
ww_COM_AD_D_5 <= COM_AD_D_5;
ww_COM_AD_D_4 <= COM_AD_D_4;
ww_COM_AD_D_2 <= COM_AD_D_2;
ww_COM_AD_D_3 <= COM_AD_D_3;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sout_node_3 <= ww_sout_node_3;
sout_node_4 <= ww_sout_node_4;
sout_node_0 <= ww_sout_node_0;
sout_node_1 <= ww_sout_node_1;
sout_node_2 <= ww_sout_node_2;
sout_node_31 <= ww_sout_node_31;
sout_node_41 <= ww_sout_node_41;
cs_buffer_0 <= ww_cs_buffer_0;
cs_buffer_01 <= ww_cs_buffer_01;
cs_buffer_02 <= ww_cs_buffer_02;
cs_buffer_03 <= ww_cs_buffer_03;
cs_buffer_04 <= ww_cs_buffer_04;
\adder1[1]\ : addcore_10
PORT MAP (
	sout_node_0 => \result_node|sout_node[0]\,
	sout_node_1 => \result_node|sout_node[1]\,
	sout_node_2 => \result_node|sout_node[2]\,
	sout_node_3 => ww_sout_node_3,
	sout_node_4 => ww_sout_node_4,
	sout_node_5 => \result_node|sout_node[5]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	cs_buffer_0 => ww_cs_buffer_0,
	cs_buffer_01 => ww_cs_buffer_01,
	cs_buffer_02 => \result_node|cs_buffer[0]~22\,
	cs_buffer_03 => ww_cs_buffer_02,
	cs_buffer_04 => ww_cs_buffer_03,
	cs_buffer_05 => ww_cs_buffer_04);
\adder1[0]\ : addcore_9
PORT MAP (
	clock => ww_clock,
	inst9 => ww_inst9,
	COM_AD_D_6 => ww_COM_AD_D_6,
	COM_AD_D_5 => ww_COM_AD_D_5,
	COM_AD_D_4 => ww_COM_AD_D_4,
	COM_AD_D_2 => ww_COM_AD_D_2,
	COM_AD_D_3 => ww_COM_AD_D_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sout_node_0 => ww_sout_node_0,
	sout_node_1 => ww_sout_node_1,
	sout_node_2 => ww_sout_node_2,
	sout_node_3 => ww_sout_node_31,
	sout_node_4 => ww_sout_node_41,
	sout_node_5 => \result_node|sout_node[5]\);
\adder1_0[1]\ : addcore_11
PORT MAP (
	clock => ww_clock,
	cs_buffer_0 => ww_cs_buffer_0,
	cs_buffer_01 => \result_node|cs_buffer[0]~22\,
	inst9 => ww_inst9,
	cs_buffer_02 => ww_cs_buffer_02,
	cs_buffer_03 => ww_cs_buffer_03,
	cs_buffer_04 => ww_cs_buffer_04,
	COM_AD_D_9 => ww_COM_AD_D_9,
	COM_AD_D_8 => ww_COM_AD_D_8,
	COM_AD_D_7 => ww_COM_AD_D_7,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sout_node_0 => \result_node|sout_node[0]\,
	sout_node_1 => \result_node|sout_node[1]\,
	sout_node_2 => \result_node|sout_node[2]\,
	sout_node_3 => ww_sout_node_3,
	sout_node_4 => ww_sout_node_4);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	add10_3 IS
    PORT (
	clock : IN std_logic;
	inst9 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_31 : OUT std_logic;
	sout_node_41 : OUT std_logic;
	cs_buffer_0 : OUT std_logic;
	cs_buffer_01 : OUT std_logic;
	cs_buffer_02 : OUT std_logic;
	cs_buffer_03 : OUT std_logic;
	cs_buffer_04 : OUT std_logic
	);
END add10_3;

ARCHITECTURE structure OF add10_3 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_inst9 : std_logic;
SIGNAL ww_COM_AD_D_9 : std_logic;
SIGNAL ww_COM_AD_D_8 : std_logic;
SIGNAL ww_COM_AD_D_7 : std_logic;
SIGNAL ww_COM_AD_D_6 : std_logic;
SIGNAL ww_COM_AD_D_5 : std_logic;
SIGNAL ww_COM_AD_D_4 : std_logic;
SIGNAL ww_COM_AD_D_2 : std_logic;
SIGNAL ww_COM_AD_D_3 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_31 : std_logic;
SIGNAL ww_sout_node_41 : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_cs_buffer_04 : std_logic;

COMPONENT lpm_add_sub_3
    PORT (
	clock : IN std_logic;
	inst9 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_31 : OUT std_logic;
	sout_node_41 : OUT std_logic;
	cs_buffer_0 : OUT std_logic;
	cs_buffer_01 : OUT std_logic;
	cs_buffer_02 : OUT std_logic;
	cs_buffer_03 : OUT std_logic;
	cs_buffer_04 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_inst9 <= inst9;
ww_COM_AD_D_9 <= COM_AD_D_9;
ww_COM_AD_D_8 <= COM_AD_D_8;
ww_COM_AD_D_7 <= COM_AD_D_7;
ww_COM_AD_D_6 <= COM_AD_D_6;
ww_COM_AD_D_5 <= COM_AD_D_5;
ww_COM_AD_D_4 <= COM_AD_D_4;
ww_COM_AD_D_2 <= COM_AD_D_2;
ww_COM_AD_D_3 <= COM_AD_D_3;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sout_node_3 <= ww_sout_node_3;
sout_node_4 <= ww_sout_node_4;
sout_node_0 <= ww_sout_node_0;
sout_node_1 <= ww_sout_node_1;
sout_node_2 <= ww_sout_node_2;
sout_node_31 <= ww_sout_node_31;
sout_node_41 <= ww_sout_node_41;
cs_buffer_0 <= ww_cs_buffer_0;
cs_buffer_01 <= ww_cs_buffer_01;
cs_buffer_02 <= ww_cs_buffer_02;
cs_buffer_03 <= ww_cs_buffer_03;
cs_buffer_04 <= ww_cs_buffer_04;
lpm_add_sub_component : lpm_add_sub_3
PORT MAP (
	clock => ww_clock,
	inst9 => ww_inst9,
	COM_AD_D_9 => ww_COM_AD_D_9,
	COM_AD_D_8 => ww_COM_AD_D_8,
	COM_AD_D_7 => ww_COM_AD_D_7,
	COM_AD_D_6 => ww_COM_AD_D_6,
	COM_AD_D_5 => ww_COM_AD_D_5,
	COM_AD_D_4 => ww_COM_AD_D_4,
	COM_AD_D_2 => ww_COM_AD_D_2,
	COM_AD_D_3 => ww_COM_AD_D_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sout_node_3 => ww_sout_node_3,
	sout_node_4 => ww_sout_node_4,
	sout_node_0 => ww_sout_node_0,
	sout_node_1 => ww_sout_node_1,
	sout_node_2 => ww_sout_node_2,
	sout_node_31 => ww_sout_node_31,
	sout_node_41 => ww_sout_node_41,
	cs_buffer_0 => ww_cs_buffer_0,
	cs_buffer_01 => ww_cs_buffer_01,
	cs_buffer_02 => ww_cs_buffer_02,
	cs_buffer_03 => ww_cs_buffer_03,
	cs_buffer_04 => ww_cs_buffer_04);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_or_3 IS
    PORT (
	sout_node_3 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_31 : IN std_logic;
	sout_node_41 : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	last_node_0 : OUT std_logic
	);
END lpm_or_3;

ARCHITECTURE structure OF lpm_or_3 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_31 : std_logic;
SIGNAL ww_sout_node_41 : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_last_node_0 : std_logic;
SIGNAL \or_node[0][3]~82\ : std_logic;
SIGNAL \or_node[0][2]~83\ : std_logic;
SIGNAL \or_node[0][1]~84\ : std_logic;
SIGNAL \or_node[0][0]~85\ : std_logic;
SIGNAL \or_node[0][0]\ : std_logic;
SIGNAL \or_node[0][1]\ : std_logic;
SIGNAL \or_node[0][2]\ : std_logic;
SIGNAL \or_node[0][3]\ : std_logic;

BEGIN

ww_sout_node_3 <= sout_node_3;
ww_sout_node_4 <= sout_node_4;
ww_sout_node_0 <= sout_node_0;
ww_sout_node_1 <= sout_node_1;
ww_sout_node_2 <= sout_node_2;
ww_sout_node_31 <= sout_node_31;
ww_sout_node_41 <= sout_node_41;
ww_cs_buffer_0 <= cs_buffer_0;
ww_cs_buffer_01 <= cs_buffer_01;
ww_cs_buffer_02 <= cs_buffer_02;
ww_cs_buffer_03 <= cs_buffer_03;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
last_node_0 <= ww_last_node_0;

\last_node[0]~47_I\ : apex20ke_lcell 
-- Equation(s):
-- last_node_0 = \or_node[0][3]\ & (sout_node_3 & sout_node_4 & cs_buffer_0 # !sout_node_3 & !sout_node_4 & !cs_buffer_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "8010",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_3,
	datab => ww_sout_node_4,
	datad => ww_cs_buffer_0,
	cin => \or_node[0][3]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_last_node_0);

\or_node[0][0]~85_I\ : apex20ke_lcell 
-- Equation(s):
-- \or_node[0][0]\ = CARRY(sout_node_1 # sout_node_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "00EE",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_1,
	datab => ww_sout_node_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \or_node[0][0]\);

\or_node[0][1]~84_I\ : apex20ke_lcell 
-- Equation(s):
-- \or_node[0][1]\ = CARRY(!sout_node_3 & !sout_node_2 & !\or_node[0][0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_sout_node_31,
	datab => ww_sout_node_2,
	cin => \or_node[0][0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \or_node[0][1]\);

\or_node[0][2]~83_I\ : apex20ke_lcell 
-- Equation(s):
-- \or_node[0][2]\ = CARRY(cs_buffer_03 # sout_node_4 # !\or_node[0][1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "00EF",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_cs_buffer_01,
	datab => ww_sout_node_41,
	cin => \or_node[0][1]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \or_node[0][2]\);

\or_node[0][3]~82_I\ : apex20ke_lcell 
-- Equation(s):
-- \or_node[0][3]\ = CARRY(!cs_buffer_04 & !cs_buffer_05 & !\or_node[0][2]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_cs_buffer_02,
	datab => ww_cs_buffer_03,
	cin => \or_node[0][2]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \or_node[0][3]\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	or10_3 IS
    PORT (
	sout_node_3 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_31 : IN std_logic;
	sout_node_41 : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	last_node_0 : OUT std_logic
	);
END or10_3;

ARCHITECTURE structure OF or10_3 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sout_node_3 : std_logic;
SIGNAL ww_sout_node_4 : std_logic;
SIGNAL ww_sout_node_0 : std_logic;
SIGNAL ww_sout_node_1 : std_logic;
SIGNAL ww_sout_node_2 : std_logic;
SIGNAL ww_sout_node_31 : std_logic;
SIGNAL ww_sout_node_41 : std_logic;
SIGNAL ww_cs_buffer_0 : std_logic;
SIGNAL ww_cs_buffer_01 : std_logic;
SIGNAL ww_cs_buffer_02 : std_logic;
SIGNAL ww_cs_buffer_03 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_last_node_0 : std_logic;

COMPONENT lpm_or_3
    PORT (
	sout_node_3 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_31 : IN std_logic;
	sout_node_41 : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	last_node_0 : OUT std_logic);
END COMPONENT;

BEGIN

ww_sout_node_3 <= sout_node_3;
ww_sout_node_4 <= sout_node_4;
ww_sout_node_0 <= sout_node_0;
ww_sout_node_1 <= sout_node_1;
ww_sout_node_2 <= sout_node_2;
ww_sout_node_31 <= sout_node_31;
ww_sout_node_41 <= sout_node_41;
ww_cs_buffer_0 <= cs_buffer_0;
ww_cs_buffer_01 <= cs_buffer_01;
ww_cs_buffer_02 <= cs_buffer_02;
ww_cs_buffer_03 <= cs_buffer_03;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
last_node_0 <= ww_last_node_0;
lpm_or_component : lpm_or_3
PORT MAP (
	sout_node_3 => ww_sout_node_3,
	sout_node_4 => ww_sout_node_4,
	sout_node_0 => ww_sout_node_0,
	sout_node_1 => ww_sout_node_1,
	sout_node_2 => ww_sout_node_2,
	sout_node_31 => ww_sout_node_31,
	sout_node_41 => ww_sout_node_41,
	cs_buffer_0 => ww_cs_buffer_0,
	cs_buffer_01 => ww_cs_buffer_01,
	cs_buffer_02 => ww_cs_buffer_02,
	cs_buffer_03 => ww_cs_buffer_03,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	last_node_0 => ww_last_node_0);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	mean_val IS
    PORT (
	clk : IN std_logic;
	reset : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	points_9_0 : OUT std_logic;
	points_8_0 : OUT std_logic;
	points_5_0 : OUT std_logic;
	points_4_0 : OUT std_logic;
	points_2_0 : OUT std_logic;
	points_3_0 : OUT std_logic;
	points_6_0 : OUT std_logic;
	points_7_0 : OUT std_logic;
	points_0_0 : OUT std_logic;
	points_1_0 : OUT std_logic
	);
END mean_val;

ARCHITECTURE structure OF mean_val IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clk : std_logic;
SIGNAL ww_reset : std_logic;
SIGNAL ww_COM_AD_D_9 : std_logic;
SIGNAL ww_COM_AD_D_8 : std_logic;
SIGNAL ww_COM_AD_D_7 : std_logic;
SIGNAL ww_COM_AD_D_6 : std_logic;
SIGNAL ww_COM_AD_D_5 : std_logic;
SIGNAL ww_COM_AD_D_4 : std_logic;
SIGNAL ww_COM_AD_D_2 : std_logic;
SIGNAL ww_COM_AD_D_3 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_points_9_0 : std_logic;
SIGNAL ww_points_8_0 : std_logic;
SIGNAL ww_points_5_0 : std_logic;
SIGNAL ww_points_4_0 : std_logic;
SIGNAL ww_points_2_0 : std_logic;
SIGNAL ww_points_3_0 : std_logic;
SIGNAL ww_points_6_0 : std_logic;
SIGNAL ww_points_7_0 : std_logic;
SIGNAL ww_points_0_0 : std_logic;
SIGNAL ww_points_1_0 : std_logic;
SIGNAL \wysi_counter|sload_path[1]\ : std_logic;
SIGNAL \wysi_counter|sload_path[0]\ : std_logic;
SIGNAL \result_node|sout_node[3]\ : std_logic;
SIGNAL \result_node|sout_node[4]\ : std_logic;
SIGNAL \result_node|sout_node[0]\ : std_logic;
SIGNAL \result_node|sout_node[1]\ : std_logic;
SIGNAL \result_node|sout_node[2]\ : std_logic;
SIGNAL \result_node|sout_node[3]~1\ : std_logic;
SIGNAL \result_node|sout_node[4]~1\ : std_logic;
SIGNAL \result_node|sout_node[3]~2\ : std_logic;
SIGNAL \result_node|sout_node[4]~2\ : std_logic;
SIGNAL \result_node|sout_node[0]~1\ : std_logic;
SIGNAL \result_node|sout_node[1]~1\ : std_logic;
SIGNAL \result_node|sout_node[2]~1\ : std_logic;
SIGNAL \result_node|sout_node[3]~3\ : std_logic;
SIGNAL \result_node|sout_node[4]~3\ : std_logic;
SIGNAL \result_node|sout_node[3]~4\ : std_logic;
SIGNAL \result_node|sout_node[4]~4\ : std_logic;
SIGNAL \result_node|sout_node[0]~2\ : std_logic;
SIGNAL \result_node|sout_node[1]~2\ : std_logic;
SIGNAL \result_node|sout_node[2]~2\ : std_logic;
SIGNAL \result_node|sout_node[3]~5\ : std_logic;
SIGNAL \result_node|sout_node[4]~5\ : std_logic;
SIGNAL \result_node|sout_node[3]~6\ : std_logic;
SIGNAL \result_node|sout_node[4]~6\ : std_logic;
SIGNAL \result_node|sout_node[0]~3\ : std_logic;
SIGNAL \result_node|sout_node[1]~3\ : std_logic;
SIGNAL \result_node|sout_node[2]~3\ : std_logic;
SIGNAL \result_node|sout_node[3]~7\ : std_logic;
SIGNAL \result_node|sout_node[4]~7\ : std_logic;
SIGNAL inst5 : std_logic;
SIGNAL \result_node|cs_buffer[0]~17\ : std_logic;
SIGNAL \result_node|cs_buffer[0]~25\ : std_logic;
SIGNAL \result_node|cs_buffer[0]~17_1\ : std_logic;
SIGNAL \result_node|cs_buffer[0]~25_1\ : std_logic;
SIGNAL \result_node|cs_buffer[0]~17_2\ : std_logic;
SIGNAL \result_node|cs_buffer[0]~25_2\ : std_logic;
SIGNAL \result_node|cs_buffer[0]~17_3\ : std_logic;
SIGNAL \result_node|cs_buffer[0]~25_3\ : std_logic;
SIGNAL inst : std_logic;
SIGNAL inst8 : std_logic;
SIGNAL inst4 : std_logic;
SIGNAL inst7 : std_logic;
SIGNAL inst2 : std_logic;
SIGNAL inst9 : std_logic;
SIGNAL inst3 : std_logic;
SIGNAL inst6 : std_logic;
SIGNAL \result_node|cs_buffer[0]~5\ : std_logic;
SIGNAL \result_node|cs_buffer[0]~5_1\ : std_logic;
SIGNAL \result_node|cs_buffer[0]~5_2\ : std_logic;
SIGNAL \result_node|cs_buffer[0]~5_3\ : std_logic;
SIGNAL \result_node|cs_buffer[0]~10\ : std_logic;
SIGNAL \result_node|cs_buffer[0]~10_1\ : std_logic;
SIGNAL \result_node|cs_buffer[0]~10_2\ : std_logic;
SIGNAL \result_node|cs_buffer[0]~10_3\ : std_logic;
SIGNAL \result_node|cs_buffer[0]~15\ : std_logic;
SIGNAL \result_node|cs_buffer[0]~15_1\ : std_logic;
SIGNAL \result_node|cs_buffer[0]~15_2\ : std_logic;
SIGNAL \result_node|cs_buffer[0]~15_3\ : std_logic;
SIGNAL \lpm_or_component|last_node[0]~47\ : std_logic;
SIGNAL \lpm_or_component|last_node[0]~47_1\ : std_logic;
SIGNAL \lpm_or_component|last_node[0]~47_2\ : std_logic;
SIGNAL \lpm_or_component|last_node[0]~47_3\ : std_logic;
SIGNAL \cmp_end|aeb_out\ : std_logic;
SIGNAL \cmp_end|aeb_out~1\ : std_logic;
SIGNAL \cmp_end|aeb_out~2\ : std_logic;
SIGNAL \cmp_end|aeb_out~3\ : std_logic;
SIGNAL \wysi_counter|cout~0\ : std_logic;
SIGNAL ALT_NOT_ww_clk : std_logic;

COMPONENT mux4x10
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	clock : IN std_logic;
	sout_node_3 : IN std_logic;
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_31 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_32 : IN std_logic;
	sout_node_01 : IN std_logic;
	sout_node_11 : IN std_logic;
	sout_node_21 : IN std_logic;
	sout_node_33 : IN std_logic;
	sout_node_41 : IN std_logic;
	sout_node_34 : IN std_logic;
	sout_node_02 : IN std_logic;
	sout_node_12 : IN std_logic;
	sout_node_22 : IN std_logic;
	sout_node_35 : IN std_logic;
	sout_node_42 : IN std_logic;
	sout_node_36 : IN std_logic;
	sout_node_03 : IN std_logic;
	sout_node_13 : IN std_logic;
	sout_node_23 : IN std_logic;
	sout_node_37 : IN std_logic;
	sout_node_43 : IN std_logic;
	inst5 : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	cs_buffer_04 : IN std_logic;
	cs_buffer_05 : IN std_logic;
	cs_buffer_06 : IN std_logic;
	cs_buffer_07 : IN std_logic;
	cs_buffer_08 : IN std_logic;
	cs_buffer_09 : IN std_logic;
	cs_buffer_010 : IN std_logic;
	cs_buffer_011 : IN std_logic;
	cs_buffer_012 : IN std_logic;
	cs_buffer_013 : IN std_logic;
	cs_buffer_014 : IN std_logic;
	cs_buffer_015 : IN std_logic;
	cs_buffer_016 : IN std_logic;
	cs_buffer_017 : IN std_logic;
	cs_buffer_018 : IN std_logic;
	cs_buffer_019 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	points_9_0 : OUT std_logic;
	points_8_0 : OUT std_logic;
	points_5_0 : OUT std_logic;
	points_4_0 : OUT std_logic;
	points_2_0 : OUT std_logic;
	points_3_0 : OUT std_logic;
	points_6_0 : OUT std_logic;
	points_7_0 : OUT std_logic;
	points_0_0 : OUT std_logic;
	points_1_0 : OUT std_logic);
END COMPONENT;

COMPONENT ctup4
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic;
	cout : OUT std_logic);
END COMPONENT;

COMPONENT add10
    PORT (
	clock : IN std_logic;
	inst7 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_31 : OUT std_logic;
	sout_node_41 : OUT std_logic;
	cs_buffer_0 : OUT std_logic;
	cs_buffer_01 : OUT std_logic;
	cs_buffer_02 : OUT std_logic;
	cs_buffer_03 : OUT std_logic;
	cs_buffer_04 : OUT std_logic);
END COMPONENT;

COMPONENT or10
    PORT (
	sout_node_3 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_31 : IN std_logic;
	sout_node_41 : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	last_node_0 : OUT std_logic);
END COMPONENT;

COMPONENT dec2
    PORT (
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic;
	aeb_out1 : OUT std_logic;
	aeb_out2 : OUT std_logic;
	aeb_out3 : OUT std_logic);
END COMPONENT;

COMPONENT add10_1
    PORT (
	clock : IN std_logic;
	inst8 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_31 : OUT std_logic;
	sout_node_41 : OUT std_logic;
	cs_buffer_0 : OUT std_logic;
	cs_buffer_01 : OUT std_logic;
	cs_buffer_02 : OUT std_logic;
	cs_buffer_03 : OUT std_logic;
	cs_buffer_04 : OUT std_logic);
END COMPONENT;

COMPONENT or10_1
    PORT (
	sout_node_3 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_31 : IN std_logic;
	sout_node_41 : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	last_node_0 : OUT std_logic);
END COMPONENT;

COMPONENT add10_2
    PORT (
	clock : IN std_logic;
	inst6 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_31 : OUT std_logic;
	sout_node_41 : OUT std_logic;
	cs_buffer_0 : OUT std_logic;
	cs_buffer_01 : OUT std_logic;
	cs_buffer_02 : OUT std_logic;
	cs_buffer_03 : OUT std_logic;
	cs_buffer_04 : OUT std_logic);
END COMPONENT;

COMPONENT or10_2
    PORT (
	sout_node_3 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_31 : IN std_logic;
	sout_node_41 : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	last_node_0 : OUT std_logic);
END COMPONENT;

COMPONENT add10_3
    PORT (
	clock : IN std_logic;
	inst9 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sout_node_3 : OUT std_logic;
	sout_node_4 : OUT std_logic;
	sout_node_0 : OUT std_logic;
	sout_node_1 : OUT std_logic;
	sout_node_2 : OUT std_logic;
	sout_node_31 : OUT std_logic;
	sout_node_41 : OUT std_logic;
	cs_buffer_0 : OUT std_logic;
	cs_buffer_01 : OUT std_logic;
	cs_buffer_02 : OUT std_logic;
	cs_buffer_03 : OUT std_logic;
	cs_buffer_04 : OUT std_logic);
END COMPONENT;

COMPONENT or10_3
    PORT (
	sout_node_3 : IN std_logic;
	sout_node_4 : IN std_logic;
	sout_node_0 : IN std_logic;
	sout_node_1 : IN std_logic;
	sout_node_2 : IN std_logic;
	sout_node_31 : IN std_logic;
	sout_node_41 : IN std_logic;
	cs_buffer_0 : IN std_logic;
	cs_buffer_01 : IN std_logic;
	cs_buffer_02 : IN std_logic;
	cs_buffer_03 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	last_node_0 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clk <= clk;
ww_reset <= reset;
ww_COM_AD_D_9 <= COM_AD_D_9;
ww_COM_AD_D_8 <= COM_AD_D_8;
ww_COM_AD_D_7 <= COM_AD_D_7;
ww_COM_AD_D_6 <= COM_AD_D_6;
ww_COM_AD_D_5 <= COM_AD_D_5;
ww_COM_AD_D_4 <= COM_AD_D_4;
ww_COM_AD_D_2 <= COM_AD_D_2;
ww_COM_AD_D_3 <= COM_AD_D_3;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
points_9_0 <= ww_points_9_0;
points_8_0 <= ww_points_8_0;
points_5_0 <= ww_points_5_0;
points_4_0 <= ww_points_4_0;
points_2_0 <= ww_points_2_0;
points_3_0 <= ww_points_3_0;
points_6_0 <= ww_points_6_0;
points_7_0 <= ww_points_7_0;
points_0_0 <= ww_points_0_0;
points_1_0 <= ww_points_1_0;
ALT_NOT_ww_clk <= NOT ww_clk;
\137\ : mux4x10
PORT MAP (
	sload_path_1 => \wysi_counter|sload_path[1]\,
	sload_path_0 => \wysi_counter|sload_path[0]\,
	clock => ww_clk,
	sout_node_3 => \result_node|sout_node[3]\,
	sout_node_0 => \result_node|sout_node[0]\,
	sout_node_1 => \result_node|sout_node[1]\,
	sout_node_2 => \result_node|sout_node[2]\,
	sout_node_31 => \result_node|sout_node[3]~1\,
	sout_node_4 => \result_node|sout_node[4]~1\,
	sout_node_32 => \result_node|sout_node[3]~2\,
	sout_node_01 => \result_node|sout_node[0]~1\,
	sout_node_11 => \result_node|sout_node[1]~1\,
	sout_node_21 => \result_node|sout_node[2]~1\,
	sout_node_33 => \result_node|sout_node[3]~3\,
	sout_node_41 => \result_node|sout_node[4]~3\,
	sout_node_34 => \result_node|sout_node[3]~4\,
	sout_node_02 => \result_node|sout_node[0]~2\,
	sout_node_12 => \result_node|sout_node[1]~2\,
	sout_node_22 => \result_node|sout_node[2]~2\,
	sout_node_35 => \result_node|sout_node[3]~5\,
	sout_node_42 => \result_node|sout_node[4]~5\,
	sout_node_36 => \result_node|sout_node[3]~6\,
	sout_node_03 => \result_node|sout_node[0]~3\,
	sout_node_13 => \result_node|sout_node[1]~3\,
	sout_node_23 => \result_node|sout_node[2]~3\,
	sout_node_37 => \result_node|sout_node[3]~7\,
	sout_node_43 => \result_node|sout_node[4]~7\,
	inst5 => inst5,
	cs_buffer_0 => \result_node|cs_buffer[0]~17\,
	cs_buffer_01 => \result_node|cs_buffer[0]~25\,
	cs_buffer_02 => \result_node|cs_buffer[0]~17_1\,
	cs_buffer_03 => \result_node|cs_buffer[0]~25_1\,
	cs_buffer_04 => \result_node|cs_buffer[0]~17_2\,
	cs_buffer_05 => \result_node|cs_buffer[0]~25_2\,
	cs_buffer_06 => \result_node|cs_buffer[0]~17_3\,
	cs_buffer_07 => \result_node|cs_buffer[0]~25_3\,
	cs_buffer_08 => \result_node|cs_buffer[0]~5\,
	cs_buffer_09 => \result_node|cs_buffer[0]~5_1\,
	cs_buffer_010 => \result_node|cs_buffer[0]~5_2\,
	cs_buffer_011 => \result_node|cs_buffer[0]~5_3\,
	cs_buffer_012 => \result_node|cs_buffer[0]~10\,
	cs_buffer_013 => \result_node|cs_buffer[0]~10_1\,
	cs_buffer_014 => \result_node|cs_buffer[0]~10_2\,
	cs_buffer_015 => \result_node|cs_buffer[0]~10_3\,
	cs_buffer_016 => \result_node|cs_buffer[0]~15\,
	cs_buffer_017 => \result_node|cs_buffer[0]~15_1\,
	cs_buffer_018 => \result_node|cs_buffer[0]~15_2\,
	cs_buffer_019 => \result_node|cs_buffer[0]~15_3\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	points_9_0 => ww_points_9_0,
	points_8_0 => ww_points_8_0,
	points_5_0 => ww_points_5_0,
	points_4_0 => ww_points_4_0,
	points_2_0 => ww_points_2_0,
	points_3_0 => ww_points_3_0,
	points_6_0 => ww_points_6_0,
	points_7_0 => ww_points_7_0,
	points_0_0 => ww_points_0_0,
	points_1_0 => ww_points_1_0);
\116\ : ctup4
PORT MAP (
	clock => ww_clk,
	aclr => ww_reset,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_1 => \wysi_counter|sload_path[1]\,
	sload_path_0 => \wysi_counter|sload_path[0]\,
	cout => \wysi_counter|cout~0\);
\138\ : add10
PORT MAP (
	clock => ww_clk,
	inst7 => inst7,
	COM_AD_D_9 => ww_COM_AD_D_9,
	COM_AD_D_8 => ww_COM_AD_D_8,
	COM_AD_D_7 => ww_COM_AD_D_7,
	COM_AD_D_6 => ww_COM_AD_D_6,
	COM_AD_D_5 => ww_COM_AD_D_5,
	COM_AD_D_4 => ww_COM_AD_D_4,
	COM_AD_D_2 => ww_COM_AD_D_2,
	COM_AD_D_3 => ww_COM_AD_D_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sout_node_3 => \result_node|sout_node[3]~6\,
	sout_node_4 => \result_node|sout_node[4]~6\,
	sout_node_0 => \result_node|sout_node[0]~3\,
	sout_node_1 => \result_node|sout_node[1]~3\,
	sout_node_2 => \result_node|sout_node[2]~3\,
	sout_node_31 => \result_node|sout_node[3]~7\,
	sout_node_41 => \result_node|sout_node[4]~7\,
	cs_buffer_0 => \result_node|cs_buffer[0]~17_1\,
	cs_buffer_01 => \result_node|cs_buffer[0]~25_1\,
	cs_buffer_02 => \result_node|cs_buffer[0]~5_1\,
	cs_buffer_03 => \result_node|cs_buffer[0]~10_1\,
	cs_buffer_04 => \result_node|cs_buffer[0]~15_1\);
\142\ : or10
PORT MAP (
	sout_node_3 => \result_node|sout_node[3]~6\,
	sout_node_4 => \result_node|sout_node[4]~6\,
	sout_node_0 => \result_node|sout_node[0]~3\,
	sout_node_1 => \result_node|sout_node[1]~3\,
	sout_node_2 => \result_node|sout_node[2]~3\,
	sout_node_31 => \result_node|sout_node[3]~7\,
	sout_node_41 => \result_node|sout_node[4]~7\,
	cs_buffer_0 => \result_node|cs_buffer[0]~17_1\,
	cs_buffer_01 => \result_node|cs_buffer[0]~5_1\,
	cs_buffer_02 => \result_node|cs_buffer[0]~10_1\,
	cs_buffer_03 => \result_node|cs_buffer[0]~15_1\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	last_node_0 => \lpm_or_component|last_node[0]~47_1\);
\119\ : dec2
PORT MAP (
	sload_path_1 => \wysi_counter|sload_path[1]\,
	sload_path_0 => \wysi_counter|sload_path[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	aeb_out => \cmp_end|aeb_out\,
	aeb_out1 => \cmp_end|aeb_out~1\,
	aeb_out2 => \cmp_end|aeb_out~2\,
	aeb_out3 => \cmp_end|aeb_out~3\);
\139\ : add10_1
PORT MAP (
	clock => ww_clk,
	inst8 => inst8,
	COM_AD_D_9 => ww_COM_AD_D_9,
	COM_AD_D_8 => ww_COM_AD_D_8,
	COM_AD_D_7 => ww_COM_AD_D_7,
	COM_AD_D_6 => ww_COM_AD_D_6,
	COM_AD_D_5 => ww_COM_AD_D_5,
	COM_AD_D_4 => ww_COM_AD_D_4,
	COM_AD_D_2 => ww_COM_AD_D_2,
	COM_AD_D_3 => ww_COM_AD_D_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sout_node_3 => \result_node|sout_node[3]~4\,
	sout_node_4 => \result_node|sout_node[4]~4\,
	sout_node_0 => \result_node|sout_node[0]~2\,
	sout_node_1 => \result_node|sout_node[1]~2\,
	sout_node_2 => \result_node|sout_node[2]~2\,
	sout_node_31 => \result_node|sout_node[3]~5\,
	sout_node_41 => \result_node|sout_node[4]~5\,
	cs_buffer_0 => \result_node|cs_buffer[0]~17\,
	cs_buffer_01 => \result_node|cs_buffer[0]~25\,
	cs_buffer_02 => \result_node|cs_buffer[0]~5\,
	cs_buffer_03 => \result_node|cs_buffer[0]~10\,
	cs_buffer_04 => \result_node|cs_buffer[0]~15\);
\143\ : or10_1
PORT MAP (
	sout_node_3 => \result_node|sout_node[3]~4\,
	sout_node_4 => \result_node|sout_node[4]~4\,
	sout_node_0 => \result_node|sout_node[0]~2\,
	sout_node_1 => \result_node|sout_node[1]~2\,
	sout_node_2 => \result_node|sout_node[2]~2\,
	sout_node_31 => \result_node|sout_node[3]~5\,
	sout_node_41 => \result_node|sout_node[4]~5\,
	cs_buffer_0 => \result_node|cs_buffer[0]~17\,
	cs_buffer_01 => \result_node|cs_buffer[0]~5\,
	cs_buffer_02 => \result_node|cs_buffer[0]~10\,
	cs_buffer_03 => \result_node|cs_buffer[0]~15\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	last_node_0 => \lpm_or_component|last_node[0]~47\);
\140\ : add10_2
PORT MAP (
	clock => ww_clk,
	inst6 => inst6,
	COM_AD_D_9 => ww_COM_AD_D_9,
	COM_AD_D_8 => ww_COM_AD_D_8,
	COM_AD_D_7 => ww_COM_AD_D_7,
	COM_AD_D_6 => ww_COM_AD_D_6,
	COM_AD_D_5 => ww_COM_AD_D_5,
	COM_AD_D_4 => ww_COM_AD_D_4,
	COM_AD_D_2 => ww_COM_AD_D_2,
	COM_AD_D_3 => ww_COM_AD_D_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sout_node_3 => \result_node|sout_node[3]~2\,
	sout_node_4 => \result_node|sout_node[4]~2\,
	sout_node_0 => \result_node|sout_node[0]~1\,
	sout_node_1 => \result_node|sout_node[1]~1\,
	sout_node_2 => \result_node|sout_node[2]~1\,
	sout_node_31 => \result_node|sout_node[3]~3\,
	sout_node_41 => \result_node|sout_node[4]~3\,
	cs_buffer_0 => \result_node|cs_buffer[0]~17_3\,
	cs_buffer_01 => \result_node|cs_buffer[0]~25_3\,
	cs_buffer_02 => \result_node|cs_buffer[0]~5_3\,
	cs_buffer_03 => \result_node|cs_buffer[0]~10_3\,
	cs_buffer_04 => \result_node|cs_buffer[0]~15_3\);
\144\ : or10_2
PORT MAP (
	sout_node_3 => \result_node|sout_node[3]~2\,
	sout_node_4 => \result_node|sout_node[4]~2\,
	sout_node_0 => \result_node|sout_node[0]~1\,
	sout_node_1 => \result_node|sout_node[1]~1\,
	sout_node_2 => \result_node|sout_node[2]~1\,
	sout_node_31 => \result_node|sout_node[3]~3\,
	sout_node_41 => \result_node|sout_node[4]~3\,
	cs_buffer_0 => \result_node|cs_buffer[0]~17_3\,
	cs_buffer_01 => \result_node|cs_buffer[0]~5_3\,
	cs_buffer_02 => \result_node|cs_buffer[0]~10_3\,
	cs_buffer_03 => \result_node|cs_buffer[0]~15_3\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	last_node_0 => \lpm_or_component|last_node[0]~47_3\);
\141\ : add10_3
PORT MAP (
	clock => ww_clk,
	inst9 => inst9,
	COM_AD_D_9 => ww_COM_AD_D_9,
	COM_AD_D_8 => ww_COM_AD_D_8,
	COM_AD_D_7 => ww_COM_AD_D_7,
	COM_AD_D_6 => ww_COM_AD_D_6,
	COM_AD_D_5 => ww_COM_AD_D_5,
	COM_AD_D_4 => ww_COM_AD_D_4,
	COM_AD_D_2 => ww_COM_AD_D_2,
	COM_AD_D_3 => ww_COM_AD_D_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sout_node_3 => \result_node|sout_node[3]\,
	sout_node_4 => \result_node|sout_node[4]\,
	sout_node_0 => \result_node|sout_node[0]\,
	sout_node_1 => \result_node|sout_node[1]\,
	sout_node_2 => \result_node|sout_node[2]\,
	sout_node_31 => \result_node|sout_node[3]~1\,
	sout_node_41 => \result_node|sout_node[4]~1\,
	cs_buffer_0 => \result_node|cs_buffer[0]~17_2\,
	cs_buffer_01 => \result_node|cs_buffer[0]~25_2\,
	cs_buffer_02 => \result_node|cs_buffer[0]~5_2\,
	cs_buffer_03 => \result_node|cs_buffer[0]~10_2\,
	cs_buffer_04 => \result_node|cs_buffer[0]~15_2\);
\145\ : or10_3
PORT MAP (
	sout_node_3 => \result_node|sout_node[3]\,
	sout_node_4 => \result_node|sout_node[4]\,
	sout_node_0 => \result_node|sout_node[0]\,
	sout_node_1 => \result_node|sout_node[1]\,
	sout_node_2 => \result_node|sout_node[2]\,
	sout_node_31 => \result_node|sout_node[3]~1\,
	sout_node_41 => \result_node|sout_node[4]~1\,
	cs_buffer_0 => \result_node|cs_buffer[0]~17_2\,
	cs_buffer_01 => \result_node|cs_buffer[0]~5_2\,
	cs_buffer_02 => \result_node|cs_buffer[0]~10_2\,
	cs_buffer_03 => \result_node|cs_buffer[0]~15_2\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	last_node_0 => \lpm_or_component|last_node[0]~47_2\);

\inst5~I\ : apex20ke_lcell 
-- Equation(s):
-- inst5 = DFFE(VCC, GLOBAL(cout1), !\inst1~45\, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	clk => \wysi_counter|cout~0\,
	aclr => ww_reset,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => inst5);

\inst~I\ : apex20ke_lcell 
-- Equation(s):
-- inst = DFFE(aeb_out, !GLOBAL(outclock0), !last_node_0, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \cmp_end|aeb_out\,
	clk => ALT_NOT_ww_clk,
	aclr => \lpm_or_component|last_node[0]~47\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => inst);

\inst8~I\ : apex20ke_lcell 
-- Equation(s):
-- inst8 = \inst1~45\ # inst

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_reset,
	datad => inst,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => inst8);

\inst4~I\ : apex20ke_lcell 
-- Equation(s):
-- inst4 = DFFE(aeb_out1, !GLOBAL(outclock0), !last_node_0, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \cmp_end|aeb_out~1\,
	clk => ALT_NOT_ww_clk,
	aclr => \lpm_or_component|last_node[0]~47_1\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => inst4);

\inst7~I\ : apex20ke_lcell 
-- Equation(s):
-- inst7 = \inst1~45\ # inst4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFCC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_reset,
	datad => inst4,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => inst7);

\inst2~I\ : apex20ke_lcell 
-- Equation(s):
-- inst2 = DFFE(aeb_out2, !GLOBAL(outclock0), !last_node_0, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \cmp_end|aeb_out~2\,
	clk => ALT_NOT_ww_clk,
	aclr => \lpm_or_component|last_node[0]~47_2\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => inst2);

\inst9~I\ : apex20ke_lcell 
-- Equation(s):
-- inst9 = inst2 # \inst1~45\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FAFA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => inst2,
	datac => ww_reset,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => inst9);

\inst3~I\ : apex20ke_lcell 
-- Equation(s):
-- inst3 = DFFE(aeb_out3, !GLOBAL(outclock0), !last_node_0, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \cmp_end|aeb_out~3\,
	clk => ALT_NOT_ww_clk,
	aclr => \lpm_or_component|last_node[0]~47_3\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => inst3);

\inst6~I\ : apex20ke_lcell 
-- Equation(s):
-- inst6 = \inst1~45\ # inst3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_reset,
	datad => inst3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => inst6);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	dc_hdr_dec_ap IS
    PORT (
	clk : IN std_logic;
	ctrl_rcvd : IN std_logic;
	stf_stb : IN std_logic;
	data_stb : IN std_logic;
	dffs_0 : IN std_logic;
	dffs_1 : IN std_logic;
	dffs_2 : IN std_logic;
	dffs_3 : IN std_logic;
	dffs_4 : IN std_logic;
	dffs_5 : IN std_logic;
	dffs_6 : IN std_logic;
	dffs_7 : IN std_logic;
	cmd_ena : IN std_logic;
	msg_type_ena : IN std_logic;
	A_nB : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	tcal_rcvd : OUT std_logic;
	idle_rcvd : OUT std_logic;
	drreq_rcvd : OUT std_logic;
	sysres_rcvd : OUT std_logic;
	comres_rcvd : OUT std_logic;
	cmd_rec_3 : OUT std_logic;
	data_msg : OUT std_logic;
	idreq_rcvd : OUT std_logic;
	bfstat_rcvd : OUT std_logic
	);
END dc_hdr_dec_ap;

ARCHITECTURE structure OF dc_hdr_dec_ap IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clk : std_logic;
SIGNAL ww_ctrl_rcvd : std_logic;
SIGNAL ww_stf_stb : std_logic;
SIGNAL ww_data_stb : std_logic;
SIGNAL ww_dffs_0 : std_logic;
SIGNAL ww_dffs_1 : std_logic;
SIGNAL ww_dffs_2 : std_logic;
SIGNAL ww_dffs_3 : std_logic;
SIGNAL ww_dffs_4 : std_logic;
SIGNAL ww_dffs_5 : std_logic;
SIGNAL ww_dffs_6 : std_logic;
SIGNAL ww_dffs_7 : std_logic;
SIGNAL ww_cmd_ena : std_logic;
SIGNAL ww_msg_type_ena : std_logic;
SIGNAL ww_A_nB : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_tcal_rcvd : std_logic;
SIGNAL ww_idle_rcvd : std_logic;
SIGNAL ww_drreq_rcvd : std_logic;
SIGNAL ww_sysres_rcvd : std_logic;
SIGNAL ww_comres_rcvd : std_logic;
SIGNAL ww_cmd_rec_3 : std_logic;
SIGNAL ww_data_msg : std_logic;
SIGNAL ww_idreq_rcvd : std_logic;
SIGNAL ww_bfstat_rcvd : std_logic;
SIGNAL \drreq_rcvd~29_1\ : std_logic;
SIGNAL \cmd_rec[0]~reg\ : std_logic;
SIGNAL \cmd_rec[1]~reg\ : std_logic;
SIGNAL \cmd_rec[3]~reg\ : std_logic;
SIGNAL \cmd_rec[2]~reg\ : std_logic;
SIGNAL \data_msg~58\ : std_logic;
SIGNAL \ctrl_msg~28\ : std_logic;
SIGNAL \ctrl_msg~reg\ : std_logic;
SIGNAL \sysres_rcvd~24\ : std_logic;
SIGNAL \drreq_rcvd~29\ : std_logic;
SIGNAL \idreq_rcvd~30\ : std_logic;
SIGNAL \data_msg~59\ : std_logic;

BEGIN

ww_clk <= clk;
ww_ctrl_rcvd <= ctrl_rcvd;
ww_stf_stb <= stf_stb;
ww_data_stb <= data_stb;
ww_dffs_0 <= dffs_0;
ww_dffs_1 <= dffs_1;
ww_dffs_2 <= dffs_2;
ww_dffs_3 <= dffs_3;
ww_dffs_4 <= dffs_4;
ww_dffs_5 <= dffs_5;
ww_dffs_6 <= dffs_6;
ww_dffs_7 <= dffs_7;
ww_cmd_ena <= cmd_ena;
ww_msg_type_ena <= msg_type_ena;
ww_A_nB <= A_nB;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
tcal_rcvd <= ww_tcal_rcvd;
idle_rcvd <= ww_idle_rcvd;
drreq_rcvd <= ww_drreq_rcvd;
sysres_rcvd <= ww_sysres_rcvd;
comres_rcvd <= ww_comres_rcvd;
cmd_rec_3 <= ww_cmd_rec_3;
data_msg <= ww_data_msg;
idreq_rcvd <= ww_idreq_rcvd;
bfstat_rcvd <= ww_bfstat_rcvd;

\tcal_rcvd~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- tcal_rcvd = DFFE(!\cmd_rec[0]~reg\ & \cmd_rec[1]~reg\ & \sysres_rcvd~24\, GLOBAL(outclock0), !stf_stb, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3000",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \cmd_rec[0]~reg\,
	datac => \cmd_rec[1]~reg\,
	datad => \sysres_rcvd~24\,
	clk => ww_clk,
	aclr => ww_stf_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_tcal_rcvd);

\idle_rcvd~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- idle_rcvd = DFFE(\cmd_rec[0]~reg\ & \sysres_rcvd~24\ & \cmd_rec[1]~reg\, GLOBAL(outclock0), !stf_stb, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "A000",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cmd_rec[0]~reg\,
	datac => \sysres_rcvd~24\,
	datad => \cmd_rec[1]~reg\,
	clk => ww_clk,
	aclr => ww_stf_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_idle_rcvd);

\drreq_rcvd~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- drreq_rcvd = DFFE((!\cmd_rec[3]~reg\ & \cmd_rec[2]~reg\) & CASCADE(\drreq_rcvd~29\), GLOBAL(outclock0), !stf_stb, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5050",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cmd_rec[3]~reg\,
	datac => \cmd_rec[2]~reg\,
	cascin => \drreq_rcvd~29\,
	clk => ww_clk,
	aclr => ww_stf_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_drreq_rcvd);

\sysres_rcvd~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- sysres_rcvd = DFFE(\cmd_rec[0]~reg\ & \sysres_rcvd~24\ & !\cmd_rec[1]~reg\, GLOBAL(outclock0), !stf_stb, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00A0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cmd_rec[0]~reg\,
	datac => \sysres_rcvd~24\,
	datad => \cmd_rec[1]~reg\,
	clk => ww_clk,
	aclr => ww_stf_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sysres_rcvd);

\comres_rcvd~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- comres_rcvd = DFFE(\cmd_rec[3]~reg\ & \cmd_rec[1]~reg\ & !\cmd_rec[2]~reg\ & \idreq_rcvd~30\, GLOBAL(outclock0), !stf_stb, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0800",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cmd_rec[3]~reg\,
	datab => \cmd_rec[1]~reg\,
	datac => \cmd_rec[2]~reg\,
	datad => \idreq_rcvd~30\,
	clk => ww_clk,
	aclr => ww_stf_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_comres_rcvd);

\cmd_rec[3]~11_I\ : apex20ke_lcell 
-- Equation(s):
-- cmd_rec_3 = data_stb & cmd_ena

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_data_stb,
	datad => ww_cmd_ena,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_cmd_rec_3);

\data_msg~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- data_msg = DFFE(VCC, GLOBAL(outclock0), !stf_stb, , \data_msg~59\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	clk => ww_clk,
	aclr => ww_stf_stb,
	ena => \data_msg~59\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_data_msg);

\idreq_rcvd~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- idreq_rcvd = DFFE(!\cmd_rec[3]~reg\ & \cmd_rec[1]~reg\ & !\cmd_rec[2]~reg\ & \idreq_rcvd~30\, GLOBAL(outclock0), !stf_stb, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0400",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cmd_rec[3]~reg\,
	datab => \cmd_rec[1]~reg\,
	datac => \cmd_rec[2]~reg\,
	datad => \idreq_rcvd~30\,
	clk => ww_clk,
	aclr => ww_stf_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_idreq_rcvd);

\bfstat_rcvd~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- bfstat_rcvd = DFFE(!\cmd_rec[0]~reg\ & \sysres_rcvd~24\ & !\cmd_rec[1]~reg\, GLOBAL(outclock0), !stf_stb, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0050",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \cmd_rec[0]~reg\,
	datac => \sysres_rcvd~24\,
	datad => \cmd_rec[1]~reg\,
	clk => ww_clk,
	aclr => ww_stf_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_bfstat_rcvd);

\cmd_rec[0]~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- \cmd_rec[0]~reg\ = DFFE(dffs_0, GLOBAL(outclock0), !stf_stb, , cmd_rec_3)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_dffs_0,
	clk => ww_clk,
	aclr => ww_stf_stb,
	ena => ww_cmd_rec_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cmd_rec[0]~reg\);

\cmd_rec[1]~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- \cmd_rec[1]~reg\ = DFFE(dffs_1, GLOBAL(outclock0), !stf_stb, , cmd_rec_3)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_dffs_1,
	clk => ww_clk,
	aclr => ww_stf_stb,
	ena => ww_cmd_rec_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cmd_rec[1]~reg\);

\cmd_rec[3]~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- \cmd_rec[3]~reg\ = DFFE(dffs_3, GLOBAL(outclock0), !stf_stb, , cmd_rec_3)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_dffs_3,
	clk => ww_clk,
	aclr => ww_stf_stb,
	ena => ww_cmd_rec_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cmd_rec[3]~reg\);

\cmd_rec[2]~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- \cmd_rec[2]~reg\ = DFFE(dffs_2, GLOBAL(outclock0), !stf_stb, , cmd_rec_3)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_dffs_2,
	clk => ww_clk,
	aclr => ww_stf_stb,
	ena => ww_cmd_rec_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \cmd_rec[2]~reg\);

\data_msg~58_I\ : apex20ke_lcell 
-- Equation(s):
-- \data_msg~58\ = data_stb & msg_type_ena & (dffs_7 $ !\A_nB~combout\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8200",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_data_stb,
	datab => ww_dffs_7,
	datac => ww_A_nB,
	datad => ww_msg_type_ena,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \data_msg~58\);

\ctrl_msg~28_I\ : apex20ke_lcell 
-- Equation(s):
-- \ctrl_msg~28\ = !dffs_4 & dffs_5 & dffs_6 & \data_msg~58\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "4000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_dffs_4,
	datab => ww_dffs_5,
	datac => ww_dffs_6,
	datad => \data_msg~58\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \ctrl_msg~28\);

\ctrl_msg~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- \ctrl_msg~reg\ = DFFE(VCC, GLOBAL(outclock0), !stf_stb, , \ctrl_msg~28\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	clk => ww_clk,
	aclr => ww_stf_stb,
	ena => \ctrl_msg~28\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \ctrl_msg~reg\);

\sysres_rcvd~24_I\ : apex20ke_lcell 
-- Equation(s):
-- \sysres_rcvd~24\ = \cmd_rec[3]~reg\ & ctrl_rcvd & \cmd_rec[2]~reg\ & \ctrl_msg~reg\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cmd_rec[3]~reg\,
	datab => ww_ctrl_rcvd,
	datac => \cmd_rec[2]~reg\,
	datad => \ctrl_msg~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \sysres_rcvd~24\);

\drreq_rcvd~29_I\ : apex20ke_lcell 
-- Equation(s):
-- \drreq_rcvd~29\ = !\cmd_rec[1]~reg\ & \cmd_rec[0]~reg\ & ctrl_rcvd & \ctrl_msg~reg\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "4000",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \cmd_rec[1]~reg\,
	datab => \cmd_rec[0]~reg\,
	datac => ww_ctrl_rcvd,
	datad => \ctrl_msg~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \drreq_rcvd~29\);

\idreq_rcvd~30_I\ : apex20ke_lcell 
-- Equation(s):
-- \idreq_rcvd~30\ = \cmd_rec[0]~reg\ & \ctrl_msg~reg\ & ctrl_rcvd

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "A000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \cmd_rec[0]~reg\,
	datac => \ctrl_msg~reg\,
	datad => ww_ctrl_rcvd,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \idreq_rcvd~30\);

\data_msg~59_I\ : apex20ke_lcell 
-- Equation(s):
-- \data_msg~59\ = \data_msg~58\ & (dffs_4 # !dffs_6 # !dffs_5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BF00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_dffs_4,
	datab => ww_dffs_5,
	datac => ww_dffs_6,
	datad => \data_msg~58\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \data_msg~59\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	DC_MRAP IS
    PORT (
	CLK : IN std_logic;
	stf_stb : IN std_logic;
	eof_stb : IN std_logic;
	i : IN std_logic;
	i1 : IN std_logic;
	data_stb : IN std_logic;
	cmd_rec_3 : IN std_logic;
	data_msg : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	ctrl_error : OUT std_logic;
	rx_we : OUT std_logic;
	ctrl_rcvd : OUT std_logic;
	byte_ena0b : OUT std_logic;
	byte_ena2 : OUT std_logic;
	byte_ena3 : OUT std_logic;
	data_error : OUT std_logic;
	cmd_ena : OUT std_logic;
	msg_type_ena : OUT std_logic;
	crc_init : OUT std_logic;
	byte_ena0a : OUT std_logic;
	data_rcvd : OUT std_logic
	);
END DC_MRAP;

ARCHITECTURE structure OF DC_MRAP IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK : std_logic;
SIGNAL ww_stf_stb : std_logic;
SIGNAL ww_eof_stb : std_logic;
SIGNAL ww_i : std_logic;
SIGNAL ww_i1 : std_logic;
SIGNAL ww_data_stb : std_logic;
SIGNAL ww_cmd_rec_3 : std_logic;
SIGNAL ww_data_msg : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_ctrl_error : std_logic;
SIGNAL ww_rx_we : std_logic;
SIGNAL ww_ctrl_rcvd : std_logic;
SIGNAL ww_byte_ena0b : std_logic;
SIGNAL ww_byte_ena2 : std_logic;
SIGNAL ww_byte_ena3 : std_logic;
SIGNAL ww_data_error : std_logic;
SIGNAL ww_cmd_ena : std_logic;
SIGNAL ww_msg_type_ena : std_logic;
SIGNAL ww_crc_init : std_logic;
SIGNAL ww_byte_ena0a : std_logic;
SIGNAL ww_data_rcvd : std_logic;
SIGNAL \sreg~41\ : std_logic;
SIGNAL \sreg~32\ : std_logic;
SIGNAL \sreg~33\ : std_logic;
SIGNAL \sreg~34\ : std_logic;
SIGNAL \byte_ena0a~124\ : std_logic;
SIGNAL \sreg~31\ : std_logic;
SIGNAL \byte_ena0b~57\ : std_logic;
SIGNAL \sreg~42\ : std_logic;
SIGNAL \sreg~44\ : std_logic;
SIGNAL \byte_ena3~73\ : std_logic;
SIGNAL \byte_ena0a~125\ : std_logic;
SIGNAL \STF_WAIT~27\ : std_logic;

BEGIN

ww_CLK <= CLK;
ww_stf_stb <= stf_stb;
ww_eof_stb <= eof_stb;
ww_i <= i;
ww_i1 <= i1;
ww_data_stb <= data_stb;
ww_cmd_rec_3 <= cmd_rec_3;
ww_data_msg <= data_msg;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
ctrl_error <= ww_ctrl_error;
rx_we <= ww_rx_we;
ctrl_rcvd <= ww_ctrl_rcvd;
byte_ena0b <= ww_byte_ena0b;
byte_ena2 <= ww_byte_ena2;
byte_ena3 <= ww_byte_ena3;
data_error <= ww_data_error;
cmd_ena <= ww_cmd_ena;
msg_type_ena <= ww_msg_type_ena;
crc_init <= ww_crc_init;
byte_ena0a <= ww_byte_ena0a;
data_rcvd <= ww_data_rcvd;

\ctrl_error~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- ctrl_error = DFFE(\sreg~41\ & eof_stb & (i1 # i), GLOBAL(outclock0), !stf_stb, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "A080",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~41\,
	datab => ww_i1,
	datac => ww_eof_stb,
	datad => ww_i,
	clk => ww_CLK,
	aclr => ww_stf_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_ctrl_error);

\rx_we~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- rx_we = DFFE(\sreg~31\ & data_stb, GLOBAL(outclock0), !stf_stb, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \sreg~31\,
	datad => ww_data_stb,
	clk => ww_CLK,
	aclr => ww_stf_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_rx_we);

\ctrl_rcvd~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- ctrl_rcvd = DFFE(\sreg~41\ & !i1 & eof_stb & !i, GLOBAL(outclock0), !stf_stb, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0020",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~41\,
	datab => ww_i1,
	datac => ww_eof_stb,
	datad => ww_i,
	clk => ww_CLK,
	aclr => ww_stf_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_ctrl_rcvd);

\byte_ena0b~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- byte_ena0b = DFFE(rx_we # data_stb & \sreg~42\ # !data_stb & \byte_ena0b~57\, GLOBAL(outclock0), !stf_stb, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FCFA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \byte_ena0b~57\,
	datab => \sreg~42\,
	datac => ww_rx_we,
	datad => ww_data_stb,
	clk => ww_CLK,
	aclr => ww_stf_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_byte_ena0b);

\byte_ena2~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- byte_ena2 = DFFE(data_stb & (\sreg~32\ # msg_type_ena) # !data_stb & \byte_ena3~73\, GLOBAL(outclock0), !stf_stb, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FDA8",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_data_stb,
	datab => \sreg~32\,
	datac => ww_msg_type_ena,
	datad => \byte_ena3~73\,
	clk => ww_CLK,
	aclr => ww_stf_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_byte_ena2);

\byte_ena3~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- byte_ena3 = DFFE(data_stb & \byte_ena3~73\ # !data_stb & (cmd_ena # \sreg~34\), GLOBAL(outclock0), !stf_stb, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FE54",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_data_stb,
	datab => ww_cmd_ena,
	datac => \sreg~34\,
	datad => \byte_ena3~73\,
	clk => ww_CLK,
	aclr => ww_stf_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_byte_ena3);

\data_error~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- data_error = DFFE(\sreg~31\ & eof_stb & (i1 # i), GLOBAL(outclock0), !stf_stb, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "A080",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~31\,
	datab => ww_i1,
	datac => ww_eof_stb,
	datad => ww_i,
	clk => ww_CLK,
	aclr => ww_stf_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_data_error);

\cmd_ena~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- cmd_ena = DFFE(cmd_ena & (\sreg~44\ # !data_stb) # !cmd_ena & data_stb & \sreg~44\, GLOBAL(outclock0), !stf_stb, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FC0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_cmd_ena,
	datac => ww_data_stb,
	datad => \sreg~44\,
	clk => ww_CLK,
	aclr => ww_stf_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_cmd_ena);

\msg_type_ena~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- msg_type_ena = DFFE(\sreg~42\ & (data_stb # msg_type_ena) # !\sreg~42\ & !data_stb & msg_type_ena, GLOBAL(outclock0), !stf_stb, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \sreg~42\,
	datac => ww_data_stb,
	datad => ww_msg_type_ena,
	clk => ww_CLK,
	aclr => ww_stf_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_msg_type_ena);

\crc_init~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- crc_init = DFFE(!data_rcvd & !data_error & !ctrl_error & !ctrl_rcvd, GLOBAL(outclock0), !stf_stb, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_data_rcvd,
	datab => ww_data_error,
	datac => ww_ctrl_error,
	datad => ww_ctrl_rcvd,
	clk => ww_CLK,
	aclr => ww_stf_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_crc_init);

\byte_ena0a~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- byte_ena0a = DFFE(!\byte_ena0a~125\ & \STF_WAIT~27\ & crc_init & !\byte_ena0a~124\, GLOBAL(outclock0), !stf_stb, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0040",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \byte_ena0a~125\,
	datab => \STF_WAIT~27\,
	datac => ww_crc_init,
	datad => \byte_ena0a~124\,
	clk => ww_CLK,
	aclr => ww_stf_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_byte_ena0a);

\data_rcvd~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- data_rcvd = DFFE(\sreg~31\ & !i1 & eof_stb & !i, GLOBAL(outclock0), !stf_stb, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0020",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~31\,
	datab => ww_i1,
	datac => ww_eof_stb,
	datad => ww_i,
	clk => ww_CLK,
	aclr => ww_stf_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_data_rcvd);

\sreg~41_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~41\ = DFFE(eof_stb & cmd_rec_3 & !data_msg # !eof_stb & (\sreg~41\ # cmd_rec_3 & !data_msg), GLOBAL(outclock0), !stf_stb, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5D0C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_eof_stb,
	datab => ww_cmd_rec_3,
	datac => ww_data_msg,
	datad => \sreg~41\,
	clk => ww_CLK,
	aclr => ww_stf_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~41\);

\sreg~32_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~32\ = DFFE(rx_we # !data_stb & \sreg~32\, GLOBAL(outclock0), !stf_stb, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF50",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_data_stb,
	datac => \sreg~32\,
	datad => ww_rx_we,
	clk => ww_CLK,
	aclr => ww_stf_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~32\);

\sreg~33_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~33\ = DFFE(\sreg~32\ & (data_stb # \sreg~33\) # !\sreg~32\ & !data_stb & \sreg~33\, GLOBAL(outclock0), !stf_stb, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CFC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \sreg~32\,
	datac => ww_data_stb,
	datad => \sreg~33\,
	clk => ww_CLK,
	aclr => ww_stf_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~33\);

\sreg~34_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~34\ = DFFE(data_stb & \sreg~33\ # !data_stb & \sreg~34\, GLOBAL(outclock0), !stf_stb, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FA50",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_data_stb,
	datac => \sreg~34\,
	datad => \sreg~33\,
	clk => ww_CLK,
	aclr => ww_stf_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~34\);

\byte_ena0a~124_I\ : apex20ke_lcell 
-- Equation(s):
-- \byte_ena0a~124\ = data_stb & (\sreg~34\ # cmd_ena & data_msg)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CC80",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_cmd_ena,
	datab => ww_data_stb,
	datac => ww_data_msg,
	datad => \sreg~34\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \byte_ena0a~124\);

\sreg~31_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~31\ = DFFE(\byte_ena0a~124\ # !eof_stb & !data_stb & \sreg~31\, GLOBAL(outclock0), !stf_stb, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CDCC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_eof_stb,
	datab => \byte_ena0a~124\,
	datac => ww_data_stb,
	datad => \sreg~31\,
	clk => ww_CLK,
	aclr => ww_stf_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~31\);

\byte_ena0b~57_I\ : apex20ke_lcell 
-- Equation(s):
-- \byte_ena0b~57\ = msg_type_ena # \sreg~32\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_msg_type_ena,
	datad => \sreg~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \byte_ena0b~57\);

\sreg~42_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~42\ = DFFE(!data_stb & \sreg~42\ # !crc_init, GLOBAL(outclock0), !stf_stb, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3F0F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_data_stb,
	datac => ww_crc_init,
	datad => \sreg~42\,
	clk => ww_CLK,
	aclr => ww_stf_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~42\);

\sreg~44_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~44\ = DFFE(data_stb & msg_type_ena # !data_stb & \sreg~44\, GLOBAL(outclock0), !stf_stb, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3C0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_data_stb,
	datac => ww_msg_type_ena,
	datad => \sreg~44\,
	clk => ww_CLK,
	aclr => ww_stf_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~44\);

\byte_ena3~73_I\ : apex20ke_lcell 
-- Equation(s):
-- \byte_ena3~73\ = \sreg~44\ # \sreg~33\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFCC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \sreg~44\,
	datad => \sreg~33\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \byte_ena3~73\);

\byte_ena0a~125_I\ : apex20ke_lcell 
-- Equation(s):
-- \byte_ena0a~125\ = !data_stb & (\sreg~42\ # !eof_stb & \sreg~31\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F04",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_eof_stb,
	datab => \sreg~31\,
	datac => ww_data_stb,
	datad => \sreg~42\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \byte_ena0a~125\);

\STF_WAIT~27_I\ : apex20ke_lcell 
-- Equation(s):
-- \STF_WAIT~27\ = !data_rcvd & !data_error & !ctrl_rcvd & !ctrl_error

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_data_rcvd,
	datab => ww_data_error,
	datac => ww_ctrl_rcvd,
	datad => ww_ctrl_error,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \STF_WAIT~27\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	crc32 IS
    PORT (
	CLK : IN std_logic;
	RST : IN std_logic;
	crc32_en : IN std_logic;
	crc_init : IN std_logic;
	crc32_data : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	SRG_27 : OUT std_logic;
	SRG_28 : OUT std_logic;
	SRG_29 : OUT std_logic;
	SRG_30 : OUT std_logic;
	SRG_23 : OUT std_logic;
	SRG_24 : OUT std_logic;
	SRG_25 : OUT std_logic;
	SRG_26 : OUT std_logic;
	SRG_19 : OUT std_logic;
	SRG_20 : OUT std_logic;
	SRG_21 : OUT std_logic;
	SRG_22 : OUT std_logic;
	SRG_15 : OUT std_logic;
	SRG_16 : OUT std_logic;
	SRG_17 : OUT std_logic;
	SRG_18 : OUT std_logic;
	SRG_11 : OUT std_logic;
	SRG_12 : OUT std_logic;
	SRG_13 : OUT std_logic;
	SRG_14 : OUT std_logic;
	SRG_7 : OUT std_logic;
	SRG_8 : OUT std_logic;
	SRG_9 : OUT std_logic;
	SRG_10 : OUT std_logic;
	SRG_3 : OUT std_logic;
	SRG_4 : OUT std_logic;
	SRG_5 : OUT std_logic;
	SRG_6 : OUT std_logic;
	SRG_31 : OUT std_logic;
	SRG_0 : OUT std_logic;
	SRG_1 : OUT std_logic;
	SRG_2 : OUT std_logic
	);
END crc32;

ARCHITECTURE structure OF crc32 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_crc32_en : std_logic;
SIGNAL ww_crc_init : std_logic;
SIGNAL ww_crc32_data : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_SRG_27 : std_logic;
SIGNAL ww_SRG_28 : std_logic;
SIGNAL ww_SRG_29 : std_logic;
SIGNAL ww_SRG_30 : std_logic;
SIGNAL ww_SRG_23 : std_logic;
SIGNAL ww_SRG_24 : std_logic;
SIGNAL ww_SRG_25 : std_logic;
SIGNAL ww_SRG_26 : std_logic;
SIGNAL ww_SRG_19 : std_logic;
SIGNAL ww_SRG_20 : std_logic;
SIGNAL ww_SRG_21 : std_logic;
SIGNAL ww_SRG_22 : std_logic;
SIGNAL ww_SRG_15 : std_logic;
SIGNAL ww_SRG_16 : std_logic;
SIGNAL ww_SRG_17 : std_logic;
SIGNAL ww_SRG_18 : std_logic;
SIGNAL ww_SRG_11 : std_logic;
SIGNAL ww_SRG_12 : std_logic;
SIGNAL ww_SRG_13 : std_logic;
SIGNAL ww_SRG_14 : std_logic;
SIGNAL ww_SRG_7 : std_logic;
SIGNAL ww_SRG_8 : std_logic;
SIGNAL ww_SRG_9 : std_logic;
SIGNAL ww_SRG_10 : std_logic;
SIGNAL ww_SRG_3 : std_logic;
SIGNAL ww_SRG_4 : std_logic;
SIGNAL ww_SRG_5 : std_logic;
SIGNAL ww_SRG_6 : std_logic;
SIGNAL ww_SRG_31 : std_logic;
SIGNAL ww_SRG_0 : std_logic;
SIGNAL ww_SRG_1 : std_logic;
SIGNAL ww_SRG_2 : std_logic;
SIGNAL i16 : std_logic;
SIGNAL i17 : std_logic;
SIGNAL i15 : std_logic;
SIGNAL i14 : std_logic;
SIGNAL i12 : std_logic;
SIGNAL i13 : std_logic;
SIGNAL i9 : std_logic;
SIGNAL i10 : std_logic;
SIGNAL i11 : std_logic;
SIGNAL i7 : std_logic;
SIGNAL i8 : std_logic;
SIGNAL i4 : std_logic;
SIGNAL i5 : std_logic;
SIGNAL i6 : std_logic;
SIGNAL ALT_NOT_ww_RST : std_logic;

BEGIN

ww_CLK <= CLK;
ww_RST <= RST;
ww_crc32_en <= crc32_en;
ww_crc_init <= crc_init;
ww_crc32_data <= crc32_data;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
SRG_27 <= ww_SRG_27;
SRG_28 <= ww_SRG_28;
SRG_29 <= ww_SRG_29;
SRG_30 <= ww_SRG_30;
SRG_23 <= ww_SRG_23;
SRG_24 <= ww_SRG_24;
SRG_25 <= ww_SRG_25;
SRG_26 <= ww_SRG_26;
SRG_19 <= ww_SRG_19;
SRG_20 <= ww_SRG_20;
SRG_21 <= ww_SRG_21;
SRG_22 <= ww_SRG_22;
SRG_15 <= ww_SRG_15;
SRG_16 <= ww_SRG_16;
SRG_17 <= ww_SRG_17;
SRG_18 <= ww_SRG_18;
SRG_11 <= ww_SRG_11;
SRG_12 <= ww_SRG_12;
SRG_13 <= ww_SRG_13;
SRG_14 <= ww_SRG_14;
SRG_7 <= ww_SRG_7;
SRG_8 <= ww_SRG_8;
SRG_9 <= ww_SRG_9;
SRG_10 <= ww_SRG_10;
SRG_3 <= ww_SRG_3;
SRG_4 <= ww_SRG_4;
SRG_5 <= ww_SRG_5;
SRG_6 <= ww_SRG_6;
SRG_31 <= ww_SRG_31;
SRG_0 <= ww_SRG_0;
SRG_1 <= ww_SRG_1;
SRG_2 <= ww_SRG_2;
ALT_NOT_ww_RST <= NOT ww_RST;

\SRG[27]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_27 = DFFE(crc32_en & SRG_26 # !crc32_en & SRG_27 # !crc_init, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BF8F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_SRG_26,
	datab => ww_crc32_en,
	datac => ww_crc_init,
	datad => ww_SRG_27,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_27);

\SRG[28]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_28 = DFFE(crc32_en & SRG_27 # !crc32_en & SRG_28 # !crc_init, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B8FF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_SRG_27,
	datab => ww_crc32_en,
	datac => ww_SRG_28,
	datad => ww_crc_init,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_28);

\SRG[29]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_29 = DFFE(crc32_en & SRG_28 # !crc32_en & SRG_29 # !crc_init, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BBF3",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_SRG_28,
	datab => ww_crc_init,
	datac => ww_SRG_29,
	datad => ww_crc32_en,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_29);

\SRG[30]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_30 = DFFE(crc32_en & SRG_29 # !crc32_en & SRG_30 # !crc_init, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3BB",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_SRG_30,
	datab => ww_crc_init,
	datac => ww_SRG_29,
	datad => ww_crc32_en,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_30);

\SRG[23]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_23 = DFFE(crc32_en & i16 # !crc32_en & SRG_23 # !crc_init, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FB73",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_crc32_en,
	datab => ww_crc_init,
	datac => ww_SRG_23,
	datad => i16,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_23);

\SRG[24]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_24 = DFFE(crc32_en & SRG_23 # !crc32_en & SRG_24 # !crc_init, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E2FF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_SRG_24,
	datab => ww_crc32_en,
	datac => ww_SRG_23,
	datad => ww_crc_init,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_24);

\SRG[25]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_25 = DFFE(crc32_en & SRG_24 # !crc32_en & SRG_25 # !crc_init, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EF2F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_SRG_25,
	datab => ww_crc32_en,
	datac => ww_crc_init,
	datad => ww_SRG_24,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_25);

\SRG[26]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_26 = DFFE(crc32_en & i17 # !crc32_en & SRG_26 # !crc_init, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EF2F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_SRG_26,
	datab => ww_crc32_en,
	datac => ww_crc_init,
	datad => i17,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_26);

\SRG[19]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_19 = DFFE(crc32_en & SRG_18 # !crc32_en & SRG_19 # !crc_init, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BBF3",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_SRG_18,
	datab => ww_crc_init,
	datac => ww_SRG_19,
	datad => ww_crc32_en,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_19);

\SRG[20]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_20 = DFFE(crc32_en & SRG_19 # !crc32_en & SRG_20 # !crc_init, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B8FF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_SRG_19,
	datab => ww_crc32_en,
	datac => ww_SRG_20,
	datad => ww_crc_init,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_20);

\SRG[21]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_21 = DFFE(crc32_en & SRG_20 # !crc32_en & SRG_21 # !crc_init, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3BB",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_SRG_21,
	datab => ww_crc_init,
	datac => ww_SRG_20,
	datad => ww_crc32_en,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_21);

\SRG[22]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_22 = DFFE(crc32_en & i15 # !crc32_en & SRG_22 # !crc_init, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FB73",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_crc32_en,
	datab => ww_crc_init,
	datac => ww_SRG_22,
	datad => i15,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_22);

\SRG[15]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_15 = DFFE(crc32_en & SRG_14 # !crc32_en & SRG_15 # !crc_init, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FB73",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_crc32_en,
	datab => ww_crc_init,
	datac => ww_SRG_15,
	datad => ww_SRG_14,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_15);

\SRG[16]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_16 = DFFE(crc32_en & i14 # !crc32_en & SRG_16 # !crc_init, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FD75",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_crc_init,
	datab => ww_crc32_en,
	datac => ww_SRG_16,
	datad => i14,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_16);

\SRG[17]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_17 = DFFE(crc32_en & SRG_16 # !crc32_en & SRG_17 # !crc_init, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BF8F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_SRG_16,
	datab => ww_crc32_en,
	datac => ww_crc_init,
	datad => ww_SRG_17,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_17);

\SRG[18]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_18 = DFFE(crc32_en & SRG_17 # !crc32_en & SRG_18 # !crc_init, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EF2F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_SRG_18,
	datab => ww_crc32_en,
	datac => ww_crc_init,
	datad => ww_SRG_17,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_18);

\SRG[11]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_11 = DFFE(crc32_en & i12 # !crc32_en & SRG_11 # !crc_init, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FD75",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_crc_init,
	datab => ww_crc32_en,
	datac => ww_SRG_11,
	datad => i12,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_11);

\SRG[12]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_12 = DFFE(crc32_en & i13 # !crc32_en & SRG_12 # !crc_init, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BF8F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i13,
	datab => ww_crc32_en,
	datac => ww_crc_init,
	datad => ww_SRG_12,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_12);

\SRG[13]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_13 = DFFE(crc32_en & SRG_12 # !crc32_en & SRG_13 # !crc_init, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EF2F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_SRG_13,
	datab => ww_crc32_en,
	datac => ww_crc_init,
	datad => ww_SRG_12,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_13);

\SRG[14]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_14 = DFFE(crc32_en & SRG_13 # !crc32_en & SRG_14 # !crc_init, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FB3B",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_SRG_14,
	datab => ww_crc_init,
	datac => ww_crc32_en,
	datad => ww_SRG_13,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_14);

\SRG[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_7 = DFFE(crc32_en & i9 # !crc32_en & SRG_7 # !crc_init, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FB73",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_crc32_en,
	datab => ww_crc_init,
	datac => ww_SRG_7,
	datad => i9,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_7);

\SRG[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_8 = DFFE(crc32_en & i10 # !crc32_en & SRG_8 # !crc_init, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B8FF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i10,
	datab => ww_crc32_en,
	datac => ww_SRG_8,
	datad => ww_crc_init,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_8);

\SRG[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_9 = DFFE(crc32_en & SRG_8 # !crc32_en & SRG_9 # !crc_init, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DDF5",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_crc_init,
	datab => ww_SRG_8,
	datac => ww_SRG_9,
	datad => ww_crc32_en,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_9);

\SRG[10]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_10 = DFFE(crc32_en & i11 # !crc32_en & SRG_10 # !crc_init, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FD75",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_crc_init,
	datab => ww_crc32_en,
	datac => ww_SRG_10,
	datad => i11,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_10);

\SRG[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_3 = DFFE(crc32_en & SRG_2 # !crc32_en & SRG_3 # !crc_init, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F7D5",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_crc_init,
	datab => ww_crc32_en,
	datac => ww_SRG_2,
	datad => ww_SRG_3,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_3);

\SRG[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_4 = DFFE(crc32_en & i7 # !crc32_en & SRG_4 # !crc_init, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DFD5",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_crc_init,
	datab => i7,
	datac => ww_crc32_en,
	datad => ww_SRG_4,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_4);

\SRG[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_5 = DFFE(crc32_en & i8 # !crc32_en & SRG_5 # !crc_init, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FD5D",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_crc_init,
	datab => ww_SRG_5,
	datac => ww_crc32_en,
	datad => i8,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_5);

\SRG[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_6 = DFFE(crc32_en & SRG_5 # !crc32_en & SRG_6 # !crc_init, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BF8F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_SRG_5,
	datab => ww_crc32_en,
	datac => ww_crc_init,
	datad => ww_SRG_6,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_6);

\SRG[31]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_31 = DFFE(crc32_en & SRG_30 # !crc32_en & SRG_31 # !crc_init, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F3BB",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_SRG_31,
	datab => ww_crc_init,
	datac => ww_SRG_30,
	datad => ww_crc32_en,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_31);

\SRG[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_0 = DFFE(crc32_en & i4 # !crc32_en & SRG_0 # !crc_init, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BF8F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i4,
	datab => ww_crc32_en,
	datac => ww_crc_init,
	datad => ww_SRG_0,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_0);

\SRG[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_1 = DFFE(crc32_en & i5 # !crc32_en & SRG_1 # !crc_init, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DF8F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_crc32_en,
	datab => i5,
	datac => ww_crc_init,
	datad => ww_SRG_1,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_1);

\SRG[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- SRG_2 = DFFE(crc32_en & i6 # !crc32_en & SRG_2 # !crc_init, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BFB3",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => i6,
	datab => ww_crc_init,
	datac => ww_crc32_en,
	datad => ww_SRG_2,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_SRG_2);

\i16~I\ : apex20ke_lcell 
-- Equation(s):
-- i16 = SRG_22 $ SRG_31

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_SRG_22,
	datad => ww_SRG_31,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i16);

\i17~I\ : apex20ke_lcell 
-- Equation(s):
-- i17 = SRG_25 $ SRG_31

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_SRG_25,
	datad => ww_SRG_31,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i17);

\i15~I\ : apex20ke_lcell 
-- Equation(s):
-- i15 = SRG_21 $ SRG_31

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_SRG_21,
	datad => ww_SRG_31,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i15);

\i14~I\ : apex20ke_lcell 
-- Equation(s):
-- i14 = SRG_31 $ SRG_15

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "33CC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_SRG_31,
	datad => ww_SRG_15,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i14);

\i12~I\ : apex20ke_lcell 
-- Equation(s):
-- i12 = SRG_10 $ SRG_31

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_SRG_10,
	datad => ww_SRG_31,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i12);

\i13~I\ : apex20ke_lcell 
-- Equation(s):
-- i13 = SRG_11 $ SRG_31

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_SRG_11,
	datad => ww_SRG_31,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i13);

\i9~I\ : apex20ke_lcell 
-- Equation(s):
-- i9 = SRG_6 $ SRG_31

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_SRG_6,
	datad => ww_SRG_31,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i9);

\i10~I\ : apex20ke_lcell 
-- Equation(s):
-- i10 = SRG_31 $ SRG_7

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_SRG_31,
	datad => ww_SRG_7,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i10);

\i11~I\ : apex20ke_lcell 
-- Equation(s):
-- i11 = SRG_9 $ SRG_31

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_SRG_9,
	datad => ww_SRG_31,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i11);

\i7~I\ : apex20ke_lcell 
-- Equation(s):
-- i7 = SRG_31 $ SRG_3

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5A5A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_SRG_31,
	datac => ww_SRG_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i7);

\i8~I\ : apex20ke_lcell 
-- Equation(s):
-- i8 = SRG_31 $ SRG_4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "55AA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_SRG_31,
	datad => ww_SRG_4,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i8);

\i4~I\ : apex20ke_lcell 
-- Equation(s):
-- i4 = crc32_data $ SRG_31

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5A5A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_crc32_data,
	datac => ww_SRG_31,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i4);

\i5~I\ : apex20ke_lcell 
-- Equation(s):
-- i5 = SRG_0 $ SRG_31

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_SRG_0,
	datad => ww_SRG_31,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i5);

\i6~I\ : apex20ke_lcell 
-- Equation(s):
-- i6 = SRG_1 $ SRG_31

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_SRG_1,
	datad => ww_SRG_31,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => i6);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	crc_rx IS
    PORT (
	CLK : IN std_logic;
	RST : IN std_logic;
	data_stb : IN std_logic;
	dffs_0 : IN std_logic;
	dffs_1 : IN std_logic;
	dffs_2 : IN std_logic;
	dffs_3 : IN std_logic;
	dffs_4 : IN std_logic;
	dffs_5 : IN std_logic;
	dffs_6 : IN std_logic;
	dffs_7 : IN std_logic;
	crc_init : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	i : OUT std_logic;
	i1 : OUT std_logic
	);
END crc_rx;

ARCHITECTURE structure OF crc_rx IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_data_stb : std_logic;
SIGNAL ww_dffs_0 : std_logic;
SIGNAL ww_dffs_1 : std_logic;
SIGNAL ww_dffs_2 : std_logic;
SIGNAL ww_dffs_3 : std_logic;
SIGNAL ww_dffs_4 : std_logic;
SIGNAL ww_dffs_5 : std_logic;
SIGNAL ww_dffs_6 : std_logic;
SIGNAL ww_dffs_7 : std_logic;
SIGNAL ww_crc_init : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_i : std_logic;
SIGNAL ww_i1 : std_logic;
SIGNAL \inst_crc32|SRG[27]\ : std_logic;
SIGNAL \inst_crc32|SRG[28]\ : std_logic;
SIGNAL \inst_crc32|SRG[29]\ : std_logic;
SIGNAL \inst_crc32|SRG[30]\ : std_logic;
SIGNAL \inst_crc32|SRG[23]\ : std_logic;
SIGNAL \inst_crc32|SRG[24]\ : std_logic;
SIGNAL \inst_crc32|SRG[25]\ : std_logic;
SIGNAL \inst_crc32|SRG[26]\ : std_logic;
SIGNAL \inst_crc32|SRG[19]\ : std_logic;
SIGNAL \inst_crc32|SRG[20]\ : std_logic;
SIGNAL \inst_crc32|SRG[21]\ : std_logic;
SIGNAL \inst_crc32|SRG[22]\ : std_logic;
SIGNAL \inst_crc32|SRG[15]\ : std_logic;
SIGNAL \inst_crc32|SRG[16]\ : std_logic;
SIGNAL \inst_crc32|SRG[17]\ : std_logic;
SIGNAL \inst_crc32|SRG[18]\ : std_logic;
SIGNAL \inst_crc32|SRG[11]\ : std_logic;
SIGNAL \inst_crc32|SRG[12]\ : std_logic;
SIGNAL \inst_crc32|SRG[13]\ : std_logic;
SIGNAL \inst_crc32|SRG[14]\ : std_logic;
SIGNAL \inst_crc32|SRG[7]\ : std_logic;
SIGNAL \inst_crc32|SRG[8]\ : std_logic;
SIGNAL \inst_crc32|SRG[9]\ : std_logic;
SIGNAL \inst_crc32|SRG[10]\ : std_logic;
SIGNAL \inst_crc32|SRG[3]\ : std_logic;
SIGNAL \inst_crc32|SRG[4]\ : std_logic;
SIGNAL \inst_crc32|SRG[5]\ : std_logic;
SIGNAL \inst_crc32|SRG[6]\ : std_logic;
SIGNAL \inst_crc32|SRG[31]\ : std_logic;
SIGNAL \inst_crc32|SRG[0]\ : std_logic;
SIGNAL \inst_crc32|SRG[1]\ : std_logic;
SIGNAL \inst_crc32|SRG[2]\ : std_logic;
SIGNAL crc32_en : std_logic;
SIGNAL crc32_data : std_logic;
SIGNAL \state~22\ : std_logic;
SIGNAL \srg[7]\ : std_logic;
SIGNAL \state~21\ : std_logic;
SIGNAL \i37~29\ : std_logic;
SIGNAL \loopcnt[0]\ : std_logic;
SIGNAL \loopcnt[1]\ : std_logic;
SIGNAL \loopcnt[2]\ : std_logic;
SIGNAL \loopcnt[3]\ : std_logic;
SIGNAL \i36~28\ : std_logic;
SIGNAL \srg[6]\ : std_logic;
SIGNAL \state~20\ : std_logic;
SIGNAL \i~704\ : std_logic;
SIGNAL \srg[7]~0\ : std_logic;
SIGNAL \i36~29\ : std_logic;
SIGNAL \i~706\ : std_logic;
SIGNAL \i36~31\ : std_logic;
SIGNAL \srg[5]\ : std_logic;
SIGNAL \i~707\ : std_logic;
SIGNAL \srg[4]\ : std_logic;
SIGNAL \i~708\ : std_logic;
SIGNAL \srg[3]\ : std_logic;
SIGNAL \i~709\ : std_logic;
SIGNAL \srg[2]\ : std_logic;
SIGNAL \i~710\ : std_logic;
SIGNAL \srg[1]\ : std_logic;
SIGNAL \i~711\ : std_logic;
SIGNAL \srg[0]\ : std_logic;
SIGNAL \i~712\ : std_logic;
SIGNAL \i~697\ : std_logic;
SIGNAL \i~695\ : std_logic;
SIGNAL \i~694\ : std_logic;
SIGNAL \i~696\ : std_logic;
SIGNAL \i~701\ : std_logic;
SIGNAL \i~700\ : std_logic;
SIGNAL \i~702\ : std_logic;
SIGNAL \i~699\ : std_logic;
SIGNAL ALT_NOT_ww_RST : std_logic;

COMPONENT crc32
    PORT (
	CLK : IN std_logic;
	RST : IN std_logic;
	crc32_en : IN std_logic;
	crc_init : IN std_logic;
	crc32_data : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	SRG_27 : OUT std_logic;
	SRG_28 : OUT std_logic;
	SRG_29 : OUT std_logic;
	SRG_30 : OUT std_logic;
	SRG_23 : OUT std_logic;
	SRG_24 : OUT std_logic;
	SRG_25 : OUT std_logic;
	SRG_26 : OUT std_logic;
	SRG_19 : OUT std_logic;
	SRG_20 : OUT std_logic;
	SRG_21 : OUT std_logic;
	SRG_22 : OUT std_logic;
	SRG_15 : OUT std_logic;
	SRG_16 : OUT std_logic;
	SRG_17 : OUT std_logic;
	SRG_18 : OUT std_logic;
	SRG_11 : OUT std_logic;
	SRG_12 : OUT std_logic;
	SRG_13 : OUT std_logic;
	SRG_14 : OUT std_logic;
	SRG_7 : OUT std_logic;
	SRG_8 : OUT std_logic;
	SRG_9 : OUT std_logic;
	SRG_10 : OUT std_logic;
	SRG_3 : OUT std_logic;
	SRG_4 : OUT std_logic;
	SRG_5 : OUT std_logic;
	SRG_6 : OUT std_logic;
	SRG_31 : OUT std_logic;
	SRG_0 : OUT std_logic;
	SRG_1 : OUT std_logic;
	SRG_2 : OUT std_logic);
END COMPONENT;

BEGIN

ww_CLK <= CLK;
ww_RST <= RST;
ww_data_stb <= data_stb;
ww_dffs_0 <= dffs_0;
ww_dffs_1 <= dffs_1;
ww_dffs_2 <= dffs_2;
ww_dffs_3 <= dffs_3;
ww_dffs_4 <= dffs_4;
ww_dffs_5 <= dffs_5;
ww_dffs_6 <= dffs_6;
ww_dffs_7 <= dffs_7;
ww_crc_init <= crc_init;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
i <= ww_i;
i1 <= ww_i1;
ALT_NOT_ww_RST <= NOT ww_RST;
inst_crc32 : crc32
PORT MAP (
	CLK => ww_CLK,
	RST => ww_RST,
	crc32_en => crc32_en,
	crc_init => ww_crc_init,
	crc32_data => crc32_data,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	SRG_27 => \inst_crc32|SRG[27]\,
	SRG_28 => \inst_crc32|SRG[28]\,
	SRG_29 => \inst_crc32|SRG[29]\,
	SRG_30 => \inst_crc32|SRG[30]\,
	SRG_23 => \inst_crc32|SRG[23]\,
	SRG_24 => \inst_crc32|SRG[24]\,
	SRG_25 => \inst_crc32|SRG[25]\,
	SRG_26 => \inst_crc32|SRG[26]\,
	SRG_19 => \inst_crc32|SRG[19]\,
	SRG_20 => \inst_crc32|SRG[20]\,
	SRG_21 => \inst_crc32|SRG[21]\,
	SRG_22 => \inst_crc32|SRG[22]\,
	SRG_15 => \inst_crc32|SRG[15]\,
	SRG_16 => \inst_crc32|SRG[16]\,
	SRG_17 => \inst_crc32|SRG[17]\,
	SRG_18 => \inst_crc32|SRG[18]\,
	SRG_11 => \inst_crc32|SRG[11]\,
	SRG_12 => \inst_crc32|SRG[12]\,
	SRG_13 => \inst_crc32|SRG[13]\,
	SRG_14 => \inst_crc32|SRG[14]\,
	SRG_7 => \inst_crc32|SRG[7]\,
	SRG_8 => \inst_crc32|SRG[8]\,
	SRG_9 => \inst_crc32|SRG[9]\,
	SRG_10 => \inst_crc32|SRG[10]\,
	SRG_3 => \inst_crc32|SRG[3]\,
	SRG_4 => \inst_crc32|SRG[4]\,
	SRG_5 => \inst_crc32|SRG[5]\,
	SRG_6 => \inst_crc32|SRG[6]\,
	SRG_31 => \inst_crc32|SRG[31]\,
	SRG_0 => \inst_crc32|SRG[0]\,
	SRG_1 => \inst_crc32|SRG[1]\,
	SRG_2 => \inst_crc32|SRG[2]\);

\crc32_en~I\ : apex20ke_lcell 
-- Equation(s):
-- crc32_en = DFFE(crc_init & \state~22\, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_crc_init,
	datad => \state~22\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => crc32_en);

\crc32_data~I\ : apex20ke_lcell 
-- Equation(s):
-- crc32_data = DFFE(\srg[7]\, GLOBAL(outclock0), , , !RST)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \srg[7]\,
	clk => ww_CLK,
	ena => ALT_NOT_ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => crc32_data);

\state~22_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~22\ = DFFE(crc_init & (\i37~29\ # !\i36~28\ & \state~22\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F040",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i36~28\,
	datab => \state~22\,
	datac => ww_crc_init,
	datad => \i37~29\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~22\);

\srg[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- \srg[7]\ = DFFE(\i~704\ # \state~21\ & dffs_7, GLOBAL(outclock0), , , \srg[7]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \state~21\,
	datac => ww_dffs_7,
	datad => \i~704\,
	clk => ww_CLK,
	ena => \srg[7]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \srg[7]\);

\state~21_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~21\ = DFFE(crc_init & (\i36~29\ # \state~22\ & \i36~28\), GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CC80",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datab => ww_crc_init,
	datac => \i36~28\,
	datad => \i36~29\,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~21\);

\i37~29_I\ : apex20ke_lcell 
-- Equation(s):
-- \i37~29\ = \state~21\ & data_stb

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \state~21\,
	datad => ww_data_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i37~29\);

\loopcnt[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \loopcnt[0]\ = DFFE(\state~22\ & (!\state~20\ # !\loopcnt[0]\) # !\state~22\ & \loopcnt[0]\ & !\state~20\, GLOBAL(outclock0), , , \srg[7]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0CFC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \state~22\,
	datac => \loopcnt[0]\,
	datad => \state~20\,
	clk => ww_CLK,
	ena => \srg[7]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \loopcnt[0]\);

\loopcnt[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \loopcnt[1]\ = DFFE(\loopcnt[1]\ & (\state~22\ & !\loopcnt[0]\ # !\state~20\) # !\loopcnt[1]\ & \state~22\ & \loopcnt[0]\, GLOBAL(outclock0), , , \srg[7]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "48EA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \loopcnt[1]\,
	datab => \state~22\,
	datac => \loopcnt[0]\,
	datad => \state~20\,
	clk => ww_CLK,
	ena => \srg[7]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \loopcnt[1]\);

\loopcnt[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \loopcnt[2]\ = DFFE(\loopcnt[2]\ & (\state~22\ & !\i~706\ # !\state~20\) # !\loopcnt[2]\ & \state~22\ & \i~706\, GLOBAL(outclock0), , , \srg[7]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "48EA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \loopcnt[2]\,
	datab => \state~22\,
	datac => \i~706\,
	datad => \state~20\,
	clk => ww_CLK,
	ena => \srg[7]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \loopcnt[2]\);

\loopcnt[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \loopcnt[3]\ = DFFE(\loopcnt[3]\ & (\state~22\ & !\i36~31\ # !\state~20\) # !\loopcnt[3]\ & \state~22\ & \i36~31\, GLOBAL(outclock0), , , \srg[7]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "48EA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \loopcnt[3]\,
	datab => \state~22\,
	datac => \i36~31\,
	datad => \state~20\,
	clk => ww_CLK,
	ena => \srg[7]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \loopcnt[3]\);

\i36~28_I\ : apex20ke_lcell 
-- Equation(s):
-- \i36~28\ = \loopcnt[1]\ & \loopcnt[2]\ & !\loopcnt[3]\ & \loopcnt[0]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0800",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \loopcnt[1]\,
	datab => \loopcnt[2]\,
	datac => \loopcnt[3]\,
	datad => \loopcnt[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i36~28\);

\srg[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \srg[6]\ = DFFE(\i~707\ # \state~21\ & dffs_6, GLOBAL(outclock0), , , \srg[7]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \state~21\,
	datac => ww_dffs_6,
	datad => \i~707\,
	clk => ww_CLK,
	ena => \srg[7]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \srg[6]\);

\state~20_I\ : apex20ke_lcell 
-- Equation(s):
-- \state~20\ = DFFE(crc_init, GLOBAL(outclock0), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_crc_init,
	clk => ww_CLK,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \state~20\);

\i~704_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~704\ = \srg[7]\ & (\state~22\ & \srg[6]\ # !\state~20\) # !\srg[7]\ & \state~22\ & \srg[6]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CE0A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \srg[7]\,
	datab => \state~22\,
	datac => \state~20\,
	datad => \srg[6]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~704\);

\srg[7]~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \srg[7]~0\ = crc_init & !RST

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00F0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_crc_init,
	datad => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \srg[7]~0\);

\i36~29_I\ : apex20ke_lcell 
-- Equation(s):
-- \i36~29\ = !data_stb & \state~21\ # !\state~20\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "30FF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_data_stb,
	datac => \state~21\,
	datad => \state~20\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i36~29\);

\i~706_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~706\ = \loopcnt[1]\ & \loopcnt[0]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \loopcnt[1]\,
	datad => \loopcnt[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~706\);

\i36~31_I\ : apex20ke_lcell 
-- Equation(s):
-- \i36~31\ = \loopcnt[2]\ & \loopcnt[1]\ & \loopcnt[0]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \loopcnt[2]\,
	datac => \loopcnt[1]\,
	datad => \loopcnt[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i36~31\);

\srg[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \srg[5]\ = DFFE(\i~708\ # \state~21\ & dffs_5, GLOBAL(outclock0), , , \srg[7]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \state~21\,
	datac => ww_dffs_5,
	datad => \i~708\,
	clk => ww_CLK,
	ena => \srg[7]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \srg[5]\);

\i~707_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~707\ = \srg[6]\ & (\state~22\ & \srg[5]\ # !\state~20\) # !\srg[6]\ & \state~22\ & \srg[5]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C0EA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \srg[6]\,
	datab => \state~22\,
	datac => \srg[5]\,
	datad => \state~20\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~707\);

\srg[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \srg[4]\ = DFFE(\i~709\ # \state~21\ & dffs_4, GLOBAL(outclock0), , , \srg[7]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \state~21\,
	datac => ww_dffs_4,
	datad => \i~709\,
	clk => ww_CLK,
	ena => \srg[7]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \srg[4]\);

\i~708_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~708\ = \srg[5]\ & (\state~22\ & \srg[4]\ # !\state~20\) # !\srg[5]\ & \state~22\ & \srg[4]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C0EA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \srg[5]\,
	datab => \state~22\,
	datac => \srg[4]\,
	datad => \state~20\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~708\);

\srg[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \srg[3]\ = DFFE(\i~710\ # \state~21\ & dffs_3, GLOBAL(outclock0), , , \srg[7]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \state~21\,
	datac => ww_dffs_3,
	datad => \i~710\,
	clk => ww_CLK,
	ena => \srg[7]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \srg[3]\);

\i~709_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~709\ = \srg[4]\ & (\state~22\ & \srg[3]\ # !\state~20\) # !\srg[4]\ & \state~22\ & \srg[3]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C0EA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \srg[4]\,
	datab => \state~22\,
	datac => \srg[3]\,
	datad => \state~20\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~709\);

\srg[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \srg[2]\ = DFFE(\i~711\ # dffs_2 & \state~21\, GLOBAL(outclock0), , , \srg[7]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFC0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_dffs_2,
	datac => \state~21\,
	datad => \i~711\,
	clk => ww_CLK,
	ena => \srg[7]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \srg[2]\);

\i~710_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~710\ = \state~20\ & \state~22\ & \srg[2]\ # !\state~20\ & (\srg[3]\ # \state~22\ & \srg[2]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "D5C0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~20\,
	datab => \state~22\,
	datac => \srg[2]\,
	datad => \srg[3]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~710\);

\srg[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \srg[1]\ = DFFE(\i~712\ # \state~21\ & dffs_1, GLOBAL(outclock0), , , \srg[7]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FAAA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~712\,
	datac => \state~21\,
	datad => ww_dffs_1,
	clk => ww_CLK,
	ena => \srg[7]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \srg[1]\);

\i~711_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~711\ = \srg[2]\ & (\srg[1]\ & \state~22\ # !\state~20\) # !\srg[2]\ & \srg[1]\ & \state~22\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F222",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \srg[2]\,
	datab => \state~20\,
	datac => \srg[1]\,
	datad => \state~22\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~711\);

\srg[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \srg[0]\ = DFFE(\state~21\ & (dffs_0 # !\state~20\ & \srg[0]\) # !\state~21\ & !\state~20\ & \srg[0]\, GLOBAL(outclock0), , , \srg[7]~0\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8F88",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~21\,
	datab => ww_dffs_0,
	datac => \state~20\,
	datad => \srg[0]\,
	clk => ww_CLK,
	ena => \srg[7]~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \srg[0]\);

\i~712_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~712\ = \state~22\ & (\srg[0]\ # \srg[1]\ & !\state~20\) # !\state~22\ & \srg[1]\ & !\state~20\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AE0C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \state~22\,
	datab => \srg[1]\,
	datac => \state~20\,
	datad => \srg[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~712\);

\i~698_I\ : apex20ke_lcell 
-- Equation(s):
-- i = \i~697\ # \i~695\ # \i~694\ # \i~696\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~697\,
	datab => \i~695\,
	datac => \i~694\,
	datad => \i~696\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_i);

\i~703_I\ : apex20ke_lcell 
-- Equation(s):
-- i1 = \i~701\ # \i~700\ # \i~702\ # \i~699\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \i~701\,
	datab => \i~700\,
	datac => \i~702\,
	datad => \i~699\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_i1);

\i~697_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~697\ = SRG_18 # SRG_15 # SRG_16 # SRG_17

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \inst_crc32|SRG[18]\,
	datab => \inst_crc32|SRG[15]\,
	datac => \inst_crc32|SRG[16]\,
	datad => \inst_crc32|SRG[17]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~697\);

\i~695_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~695\ = SRG_25 # SRG_24 # SRG_26 # SRG_23

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \inst_crc32|SRG[25]\,
	datab => \inst_crc32|SRG[24]\,
	datac => \inst_crc32|SRG[26]\,
	datad => \inst_crc32|SRG[23]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~695\);

\i~694_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~694\ = SRG_28 # SRG_30 # SRG_27 # SRG_29

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \inst_crc32|SRG[28]\,
	datab => \inst_crc32|SRG[30]\,
	datac => \inst_crc32|SRG[27]\,
	datad => \inst_crc32|SRG[29]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~694\);

\i~696_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~696\ = SRG_20 # SRG_22 # SRG_19 # SRG_21

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \inst_crc32|SRG[20]\,
	datab => \inst_crc32|SRG[22]\,
	datac => \inst_crc32|SRG[19]\,
	datad => \inst_crc32|SRG[21]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~696\);

\i~701_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~701\ = SRG_5 # SRG_4 # SRG_3 # SRG_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \inst_crc32|SRG[5]\,
	datab => \inst_crc32|SRG[4]\,
	datac => \inst_crc32|SRG[3]\,
	datad => \inst_crc32|SRG[6]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~701\);

\i~700_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~700\ = SRG_8 # SRG_10 # SRG_7 # SRG_9

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \inst_crc32|SRG[8]\,
	datab => \inst_crc32|SRG[10]\,
	datac => \inst_crc32|SRG[7]\,
	datad => \inst_crc32|SRG[9]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~700\);

\i~702_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~702\ = SRG_1 # SRG_31 # SRG_0 # SRG_2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \inst_crc32|SRG[1]\,
	datab => \inst_crc32|SRG[31]\,
	datac => \inst_crc32|SRG[0]\,
	datad => \inst_crc32|SRG[2]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~702\);

\i~699_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~699\ = SRG_12 # SRG_13 # SRG_14 # SRG_11

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \inst_crc32|SRG[12]\,
	datab => \inst_crc32|SRG[13]\,
	datac => \inst_crc32|SRG[14]\,
	datad => \inst_crc32|SRG[11]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~699\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	DCTC_FWR IS
    PORT (
	CLK : IN std_logic;
	tcal_rcvd : IN std_logic;
	msg_sent : IN std_logic;
	sreg1 : IN std_logic;
	hl_edge : IN std_logic;
	agb_out : IN std_logic;
	sreg2 : IN std_logic;
	b_non_empty : IN std_logic;
	cout : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	pulse_rcvd : OUT std_logic;
	sreg : OUT std_logic;
	tcwf_af_ct_aclr : OUT std_logic;
	tcwf_af_ct_sload : OUT std_logic;
	tcwf_wrreq : OUT std_logic;
	tcwf_rdreq : OUT std_logic;
	tcwf_aclr : OUT std_logic
	);
END DCTC_FWR;

ARCHITECTURE structure OF DCTC_FWR IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK : std_logic;
SIGNAL ww_tcal_rcvd : std_logic;
SIGNAL ww_msg_sent : std_logic;
SIGNAL ww_sreg1 : std_logic;
SIGNAL ww_hl_edge : std_logic;
SIGNAL ww_agb_out : std_logic;
SIGNAL ww_sreg2 : std_logic;
SIGNAL ww_b_non_empty : std_logic;
SIGNAL ww_cout : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_pulse_rcvd : std_logic;
SIGNAL ww_sreg : std_logic;
SIGNAL ww_tcwf_af_ct_aclr : std_logic;
SIGNAL ww_tcwf_af_ct_sload : std_logic;
SIGNAL ww_tcwf_wrreq : std_logic;
SIGNAL ww_tcwf_rdreq : std_logic;
SIGNAL ww_tcwf_aclr : std_logic;
SIGNAL \sreg~35\ : std_logic;
SIGNAL \sreg~33\ : std_logic;
SIGNAL \_~314\ : std_logic;
SIGNAL \sreg~31\ : std_logic;
SIGNAL \sreg~32\ : std_logic;
SIGNAL \sreg~37\ : std_logic;
SIGNAL \tcwf_af_ct_aclr~80\ : std_logic;
SIGNAL \tcwf_af_ct_aclr~81\ : std_logic;
SIGNAL \sreg~39\ : std_logic;
SIGNAL \tcwf_af_ct_aclr~79\ : std_logic;
SIGNAL \_~313\ : std_logic;
SIGNAL \tcwf_rdreq~27\ : std_logic;

BEGIN

ww_CLK <= CLK;
ww_tcal_rcvd <= tcal_rcvd;
ww_msg_sent <= msg_sent;
ww_sreg1 <= sreg1;
ww_hl_edge <= hl_edge;
ww_agb_out <= agb_out;
ww_sreg2 <= sreg2;
ww_b_non_empty <= b_non_empty;
ww_cout <= cout;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
pulse_rcvd <= ww_pulse_rcvd;
sreg <= ww_sreg;
tcwf_af_ct_aclr <= ww_tcwf_af_ct_aclr;
tcwf_af_ct_sload <= ww_tcwf_af_ct_sload;
tcwf_wrreq <= ww_tcwf_wrreq;
tcwf_rdreq <= ww_tcwf_rdreq;
tcwf_aclr <= ww_tcwf_aclr;

\pulse_rcvd~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- pulse_rcvd = DFFE(sreg & !agb_out, GLOBAL(outclock0), !tcal_rcvd, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_sreg,
	datad => ww_agb_out,
	clk => ww_CLK,
	aclr => ww_tcal_rcvd,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pulse_rcvd);

\sreg~34_I\ : apex20ke_lcell 
-- Equation(s):
-- sreg = DFFE(agb_out & (sreg # hl_edge & \sreg~33\) # !agb_out & hl_edge & \sreg~33\, GLOBAL(outclock0), !tcal_rcvd, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ECA0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_agb_out,
	datab => ww_hl_edge,
	datac => ww_sreg,
	datad => \sreg~33\,
	clk => ww_CLK,
	aclr => ww_tcal_rcvd,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sreg);

\tcwf_af_ct_aclr~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- tcwf_af_ct_aclr = DFFE(!\tcwf_af_ct_aclr~80\ & !\tcwf_af_ct_aclr~81\ & !\sreg~39\ & !\tcwf_af_ct_aclr~79\, GLOBAL(outclock0), !tcal_rcvd, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \tcwf_af_ct_aclr~80\,
	datab => \tcwf_af_ct_aclr~81\,
	datac => \sreg~39\,
	datad => \tcwf_af_ct_aclr~79\,
	clk => ww_CLK,
	aclr => ww_tcal_rcvd,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_tcwf_af_ct_aclr);

\tcwf_af_ct_sload~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- tcwf_af_ct_sload = DFFE(sreg & !tcwf_aclr, GLOBAL(outclock0), !tcal_rcvd, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_sreg1,
	datad => ww_tcwf_aclr,
	clk => ww_CLK,
	aclr => ww_tcal_rcvd,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_tcwf_af_ct_sload);

\tcwf_wrreq~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- tcwf_wrreq = DFFE(tcwf_af_ct_sload # \sreg~33\ # \sreg~35\ # \_~313\, GLOBAL(outclock0), !tcal_rcvd, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_tcwf_af_ct_sload,
	datab => \sreg~33\,
	datac => \sreg~35\,
	datad => \_~313\,
	clk => ww_CLK,
	aclr => ww_tcal_rcvd,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_tcwf_wrreq);

\tcwf_rdreq~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- tcwf_rdreq = DFFE(\tcwf_rdreq~27\ # \sreg~33\ # agb_out & sreg, GLOBAL(outclock0), !tcal_rcvd, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFEA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \tcwf_rdreq~27\,
	datab => ww_agb_out,
	datac => ww_sreg,
	datad => \sreg~33\,
	clk => ww_CLK,
	aclr => ww_tcal_rcvd,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_tcwf_rdreq);

\tcwf_aclr~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- tcwf_aclr = DFFE(msg_sent & !\sreg~39\ & (sreg # tcwf_aclr) # !msg_sent & (sreg # tcwf_aclr), GLOBAL(outclock0), !tcal_rcvd, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5F4C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_msg_sent,
	datab => ww_sreg1,
	datac => \sreg~39\,
	datad => ww_tcwf_aclr,
	clk => ww_CLK,
	aclr => ww_tcal_rcvd,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_tcwf_aclr);

\sreg~35_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~35\ = DFFE(tcwf_af_ct_sload # !cout1 & \sreg~35\, GLOBAL(outclock0), !tcal_rcvd, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F5F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_cout,
	datac => ww_tcwf_af_ct_sload,
	datad => \sreg~35\,
	clk => ww_CLK,
	aclr => ww_tcal_rcvd,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~35\);

\sreg~33_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~33\ = DFFE(\sreg~35\ & (cout1 # !hl_edge & \sreg~33\) # !\sreg~35\ & !hl_edge & \sreg~33\, GLOBAL(outclock0), !tcal_rcvd, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "B3A0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~35\,
	datab => ww_hl_edge,
	datac => ww_cout,
	datad => \sreg~33\,
	clk => ww_CLK,
	aclr => ww_tcal_rcvd,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~33\);

\_~314_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~314\ = \sreg~32\ & !sreg6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00F0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \sreg~32\,
	datad => ww_sreg2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~314\);

\sreg~31_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~31\ = DFFE(\sreg~37\, GLOBAL(outclock0), !tcal_rcvd, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \sreg~37\,
	clk => ww_CLK,
	aclr => ww_tcal_rcvd,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~31\);

\sreg~32_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~32\ = DFFE(\_~314\ # pulse_rcvd # b_non_empty & \sreg~31\, GLOBAL(outclock0), !tcal_rcvd, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEFC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_b_non_empty,
	datab => \_~314\,
	datac => ww_pulse_rcvd,
	datad => \sreg~31\,
	clk => ww_CLK,
	aclr => ww_tcal_rcvd,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~32\);

\sreg~37_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~37\ = DFFE(\sreg~32\ & sreg6, GLOBAL(outclock0), !tcal_rcvd, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \sreg~32\,
	datad => ww_sreg2,
	clk => ww_CLK,
	aclr => ww_tcal_rcvd,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~37\);

\tcwf_af_ct_aclr~80_I\ : apex20ke_lcell 
-- Equation(s):
-- \tcwf_af_ct_aclr~80\ = pulse_rcvd # \sreg~33\ # sreg # \sreg~37\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_pulse_rcvd,
	datab => \sreg~33\,
	datac => ww_sreg,
	datad => \sreg~37\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \tcwf_af_ct_aclr~80\);

\tcwf_af_ct_aclr~81_I\ : apex20ke_lcell 
-- Equation(s):
-- \tcwf_af_ct_aclr~81\ = \sreg~31\ # \sreg~32\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FAFA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~31\,
	datac => \sreg~32\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \tcwf_af_ct_aclr~81\);

\sreg~39_I\ : apex20ke_lcell 
-- Equation(s):
-- \sreg~39\ = DFFE(\sreg~39\ & (!b_non_empty & \sreg~31\ # !msg_sent) # !\sreg~39\ & !b_non_empty & \sreg~31\, GLOBAL(outclock0), !tcal_rcvd, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3B0A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~39\,
	datab => ww_b_non_empty,
	datac => ww_msg_sent,
	datad => \sreg~31\,
	clk => ww_CLK,
	aclr => ww_tcal_rcvd,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \sreg~39\);

\tcwf_af_ct_aclr~79_I\ : apex20ke_lcell 
-- Equation(s):
-- \tcwf_af_ct_aclr~79\ = \sreg~35\ & (cout1 # !sreg & !tcwf_aclr) # !\sreg~35\ & !sreg & !tcwf_aclr

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "888F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \sreg~35\,
	datab => ww_cout,
	datac => ww_sreg1,
	datad => ww_tcwf_aclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \tcwf_af_ct_aclr~79\);

\_~313_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~313\ = sreg & agb_out

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_sreg,
	datad => ww_agb_out,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~313\);

\tcwf_rdreq~27_I\ : apex20ke_lcell 
-- Equation(s):
-- \tcwf_rdreq~27\ = cout1 & (\sreg~35\ # sreg6 & \sreg~32\) # !cout1 & sreg6 & \sreg~32\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "EAC0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_cout,
	datab => ww_sreg2,
	datac => \sreg~32\,
	datad => \sreg~35\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \tcwf_rdreq~27\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	cmpchain IS
    PORT (
	inst10_9 : IN std_logic;
	inst10_8 : IN std_logic;
	inst10_7 : IN std_logic;
	inst10_6 : IN std_logic;
	inst10_5 : IN std_logic;
	inst10_4 : IN std_logic;
	inst10_3 : IN std_logic;
	inst10_2 : IN std_logic;
	inst10_1 : IN std_logic;
	inst10_0 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_0 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_1 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	agb_out : OUT std_logic
	);
END cmpchain;

ARCHITECTURE structure OF cmpchain IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_inst10_9 : std_logic;
SIGNAL ww_inst10_8 : std_logic;
SIGNAL ww_inst10_7 : std_logic;
SIGNAL ww_inst10_6 : std_logic;
SIGNAL ww_inst10_5 : std_logic;
SIGNAL ww_inst10_4 : std_logic;
SIGNAL ww_inst10_3 : std_logic;
SIGNAL ww_inst10_2 : std_logic;
SIGNAL ww_inst10_1 : std_logic;
SIGNAL ww_inst10_0 : std_logic;
SIGNAL ww_COM_AD_D_9 : std_logic;
SIGNAL ww_COM_AD_D_8 : std_logic;
SIGNAL ww_COM_AD_D_7 : std_logic;
SIGNAL ww_COM_AD_D_6 : std_logic;
SIGNAL ww_COM_AD_D_0 : std_logic;
SIGNAL ww_COM_AD_D_5 : std_logic;
SIGNAL ww_COM_AD_D_1 : std_logic;
SIGNAL ww_COM_AD_D_4 : std_logic;
SIGNAL ww_COM_AD_D_2 : std_logic;
SIGNAL ww_COM_AD_D_3 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_agb_out : std_logic;
SIGNAL \lcarry[8]~400\ : std_logic;
SIGNAL \lcarry[7]~401\ : std_logic;
SIGNAL \lcarry[6]~402\ : std_logic;
SIGNAL \lcarry[5]~403\ : std_logic;
SIGNAL \lcarry[4]~404\ : std_logic;
SIGNAL \lcarry[3]~405\ : std_logic;
SIGNAL \lcarry[2]~406\ : std_logic;
SIGNAL \lcarry[1]~407\ : std_logic;
SIGNAL \lcarry[0]~408\ : std_logic;
SIGNAL \lcarry[0]\ : std_logic;
SIGNAL \lcarry[1]\ : std_logic;
SIGNAL \lcarry[2]\ : std_logic;
SIGNAL \lcarry[3]\ : std_logic;
SIGNAL \lcarry[4]\ : std_logic;
SIGNAL \lcarry[5]\ : std_logic;
SIGNAL \lcarry[6]\ : std_logic;
SIGNAL \lcarry[7]\ : std_logic;
SIGNAL \lcarry[8]\ : std_logic;

BEGIN

ww_inst10_9 <= inst10_9;
ww_inst10_8 <= inst10_8;
ww_inst10_7 <= inst10_7;
ww_inst10_6 <= inst10_6;
ww_inst10_5 <= inst10_5;
ww_inst10_4 <= inst10_4;
ww_inst10_3 <= inst10_3;
ww_inst10_2 <= inst10_2;
ww_inst10_1 <= inst10_1;
ww_inst10_0 <= inst10_0;
ww_COM_AD_D_9 <= COM_AD_D_9;
ww_COM_AD_D_8 <= COM_AD_D_8;
ww_COM_AD_D_7 <= COM_AD_D_7;
ww_COM_AD_D_6 <= COM_AD_D_6;
ww_COM_AD_D_0 <= COM_AD_D_0;
ww_COM_AD_D_5 <= COM_AD_D_5;
ww_COM_AD_D_1 <= COM_AD_D_1;
ww_COM_AD_D_4 <= COM_AD_D_4;
ww_COM_AD_D_2 <= COM_AD_D_2;
ww_COM_AD_D_3 <= COM_AD_D_3;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
agb_out <= ww_agb_out;

agb_out_node : apex20ke_lcell 
-- Equation(s):
-- agb_out = \inst10[9]\ & (\lcarry[8]\ # !\COM_AD_D[9]~combout\) # !\inst10[9]\ & \lcarry[8]\ & !\COM_AD_D[9]~combout\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A0FA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_inst10_9,
	datad => ww_COM_AD_D_9,
	cin => \lcarry[8]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_agb_out);

\lcarry[0]~408_I\ : apex20ke_lcell 
-- Equation(s):
-- \lcarry[0]\ = CARRY(!\COM_AD_D[0]~combout\ & \inst10[0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "0044",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_COM_AD_D_0,
	datab => ww_inst10_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \lcarry[0]\);

\lcarry[1]~407_I\ : apex20ke_lcell 
-- Equation(s):
-- \lcarry[1]\ = CARRY(\inst10[1]\ & \COM_AD_D[1]~combout\ & !\lcarry[0]\ # !\inst10[1]\ & (\COM_AD_D[1]~combout\ # !\lcarry[0]\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "004D",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_inst10_1,
	datab => ww_COM_AD_D_1,
	cin => \lcarry[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \lcarry[1]\);

\lcarry[2]~406_I\ : apex20ke_lcell 
-- Equation(s):
-- \lcarry[2]\ = CARRY(\COM_AD_D[2]~combout\ & \inst10[2]\ & !\lcarry[1]\ # !\COM_AD_D[2]~combout\ & (\inst10[2]\ # !\lcarry[1]\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "004D",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_COM_AD_D_2,
	datab => ww_inst10_2,
	cin => \lcarry[1]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \lcarry[2]\);

\lcarry[3]~405_I\ : apex20ke_lcell 
-- Equation(s):
-- \lcarry[3]\ = CARRY(\COM_AD_D[3]~combout\ & (!\lcarry[2]\ # !\inst10[3]\) # !\COM_AD_D[3]~combout\ & !\inst10[3]\ & !\lcarry[2]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "002B",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_COM_AD_D_3,
	datab => ww_inst10_3,
	cin => \lcarry[2]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \lcarry[3]\);

\lcarry[4]~404_I\ : apex20ke_lcell 
-- Equation(s):
-- \lcarry[4]\ = CARRY(\COM_AD_D[4]~combout\ & \inst10[4]\ & !\lcarry[3]\ # !\COM_AD_D[4]~combout\ & (\inst10[4]\ # !\lcarry[3]\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "004D",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_COM_AD_D_4,
	datab => ww_inst10_4,
	cin => \lcarry[3]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \lcarry[4]\);

\lcarry[5]~403_I\ : apex20ke_lcell 
-- Equation(s):
-- \lcarry[5]\ = CARRY(\inst10[5]\ & \COM_AD_D[5]~combout\ & !\lcarry[4]\ # !\inst10[5]\ & (\COM_AD_D[5]~combout\ # !\lcarry[4]\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "004D",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_inst10_5,
	datab => ww_COM_AD_D_5,
	cin => \lcarry[4]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \lcarry[5]\);

\lcarry[6]~402_I\ : apex20ke_lcell 
-- Equation(s):
-- \lcarry[6]\ = CARRY(\COM_AD_D[6]~combout\ & \inst10[6]\ & !\lcarry[5]\ # !\COM_AD_D[6]~combout\ & (\inst10[6]\ # !\lcarry[5]\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "004D",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_COM_AD_D_6,
	datab => ww_inst10_6,
	cin => \lcarry[5]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \lcarry[6]\);

\lcarry[7]~401_I\ : apex20ke_lcell 
-- Equation(s):
-- \lcarry[7]\ = CARRY(\COM_AD_D[7]~combout\ & (!\lcarry[6]\ # !\inst10[7]\) # !\COM_AD_D[7]~combout\ & !\inst10[7]\ & !\lcarry[6]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "002B",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_COM_AD_D_7,
	datab => ww_inst10_7,
	cin => \lcarry[6]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \lcarry[7]\);

\lcarry[8]~400_I\ : apex20ke_lcell 
-- Equation(s):
-- \lcarry[8]\ = CARRY(\inst10[8]\ & (!\lcarry[7]\ # !\COM_AD_D[8]~combout\) # !\inst10[8]\ & !\COM_AD_D[8]~combout\ & !\lcarry[7]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "002B",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_inst10_8,
	datab => ww_COM_AD_D_8,
	cin => \lcarry[7]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \lcarry[8]\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	comptree IS
    PORT (
	inst10_9 : IN std_logic;
	inst10_8 : IN std_logic;
	inst10_7 : IN std_logic;
	inst10_6 : IN std_logic;
	inst10_5 : IN std_logic;
	inst10_4 : IN std_logic;
	inst10_3 : IN std_logic;
	inst10_2 : IN std_logic;
	inst10_1 : IN std_logic;
	inst10_0 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_0 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_1 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	agb_out : OUT std_logic
	);
END comptree;

ARCHITECTURE structure OF comptree IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_inst10_9 : std_logic;
SIGNAL ww_inst10_8 : std_logic;
SIGNAL ww_inst10_7 : std_logic;
SIGNAL ww_inst10_6 : std_logic;
SIGNAL ww_inst10_5 : std_logic;
SIGNAL ww_inst10_4 : std_logic;
SIGNAL ww_inst10_3 : std_logic;
SIGNAL ww_inst10_2 : std_logic;
SIGNAL ww_inst10_1 : std_logic;
SIGNAL ww_inst10_0 : std_logic;
SIGNAL ww_COM_AD_D_9 : std_logic;
SIGNAL ww_COM_AD_D_8 : std_logic;
SIGNAL ww_COM_AD_D_7 : std_logic;
SIGNAL ww_COM_AD_D_6 : std_logic;
SIGNAL ww_COM_AD_D_0 : std_logic;
SIGNAL ww_COM_AD_D_5 : std_logic;
SIGNAL ww_COM_AD_D_1 : std_logic;
SIGNAL ww_COM_AD_D_4 : std_logic;
SIGNAL ww_COM_AD_D_2 : std_logic;
SIGNAL ww_COM_AD_D_3 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_agb_out : std_logic;

COMPONENT cmpchain
    PORT (
	inst10_9 : IN std_logic;
	inst10_8 : IN std_logic;
	inst10_7 : IN std_logic;
	inst10_6 : IN std_logic;
	inst10_5 : IN std_logic;
	inst10_4 : IN std_logic;
	inst10_3 : IN std_logic;
	inst10_2 : IN std_logic;
	inst10_1 : IN std_logic;
	inst10_0 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_0 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_1 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	agb_out : OUT std_logic);
END COMPONENT;

BEGIN

ww_inst10_9 <= inst10_9;
ww_inst10_8 <= inst10_8;
ww_inst10_7 <= inst10_7;
ww_inst10_6 <= inst10_6;
ww_inst10_5 <= inst10_5;
ww_inst10_4 <= inst10_4;
ww_inst10_3 <= inst10_3;
ww_inst10_2 <= inst10_2;
ww_inst10_1 <= inst10_1;
ww_inst10_0 <= inst10_0;
ww_COM_AD_D_9 <= COM_AD_D_9;
ww_COM_AD_D_8 <= COM_AD_D_8;
ww_COM_AD_D_7 <= COM_AD_D_7;
ww_COM_AD_D_6 <= COM_AD_D_6;
ww_COM_AD_D_0 <= COM_AD_D_0;
ww_COM_AD_D_5 <= COM_AD_D_5;
ww_COM_AD_D_1 <= COM_AD_D_1;
ww_COM_AD_D_4 <= COM_AD_D_4;
ww_COM_AD_D_2 <= COM_AD_D_2;
ww_COM_AD_D_3 <= COM_AD_D_3;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
agb_out <= ww_agb_out;
cmp_end : cmpchain
PORT MAP (
	inst10_9 => ww_inst10_9,
	inst10_8 => ww_inst10_8,
	inst10_7 => ww_inst10_7,
	inst10_6 => ww_inst10_6,
	inst10_5 => ww_inst10_5,
	inst10_4 => ww_inst10_4,
	inst10_3 => ww_inst10_3,
	inst10_2 => ww_inst10_2,
	inst10_1 => ww_inst10_1,
	inst10_0 => ww_inst10_0,
	COM_AD_D_9 => ww_COM_AD_D_9,
	COM_AD_D_8 => ww_COM_AD_D_8,
	COM_AD_D_7 => ww_COM_AD_D_7,
	COM_AD_D_6 => ww_COM_AD_D_6,
	COM_AD_D_0 => ww_COM_AD_D_0,
	COM_AD_D_5 => ww_COM_AD_D_5,
	COM_AD_D_1 => ww_COM_AD_D_1,
	COM_AD_D_4 => ww_COM_AD_D_4,
	COM_AD_D_2 => ww_COM_AD_D_2,
	COM_AD_D_3 => ww_COM_AD_D_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	agb_out => ww_agb_out);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_compare IS
    PORT (
	inst10_9 : IN std_logic;
	inst10_8 : IN std_logic;
	inst10_7 : IN std_logic;
	inst10_6 : IN std_logic;
	inst10_5 : IN std_logic;
	inst10_4 : IN std_logic;
	inst10_3 : IN std_logic;
	inst10_2 : IN std_logic;
	inst10_1 : IN std_logic;
	inst10_0 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_0 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_1 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	agb_out : OUT std_logic
	);
END lpm_compare;

ARCHITECTURE structure OF lpm_compare IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_inst10_9 : std_logic;
SIGNAL ww_inst10_8 : std_logic;
SIGNAL ww_inst10_7 : std_logic;
SIGNAL ww_inst10_6 : std_logic;
SIGNAL ww_inst10_5 : std_logic;
SIGNAL ww_inst10_4 : std_logic;
SIGNAL ww_inst10_3 : std_logic;
SIGNAL ww_inst10_2 : std_logic;
SIGNAL ww_inst10_1 : std_logic;
SIGNAL ww_inst10_0 : std_logic;
SIGNAL ww_COM_AD_D_9 : std_logic;
SIGNAL ww_COM_AD_D_8 : std_logic;
SIGNAL ww_COM_AD_D_7 : std_logic;
SIGNAL ww_COM_AD_D_6 : std_logic;
SIGNAL ww_COM_AD_D_0 : std_logic;
SIGNAL ww_COM_AD_D_5 : std_logic;
SIGNAL ww_COM_AD_D_1 : std_logic;
SIGNAL ww_COM_AD_D_4 : std_logic;
SIGNAL ww_COM_AD_D_2 : std_logic;
SIGNAL ww_COM_AD_D_3 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_agb_out : std_logic;

COMPONENT comptree
    PORT (
	inst10_9 : IN std_logic;
	inst10_8 : IN std_logic;
	inst10_7 : IN std_logic;
	inst10_6 : IN std_logic;
	inst10_5 : IN std_logic;
	inst10_4 : IN std_logic;
	inst10_3 : IN std_logic;
	inst10_2 : IN std_logic;
	inst10_1 : IN std_logic;
	inst10_0 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_0 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_1 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	agb_out : OUT std_logic);
END COMPONENT;

BEGIN

ww_inst10_9 <= inst10_9;
ww_inst10_8 <= inst10_8;
ww_inst10_7 <= inst10_7;
ww_inst10_6 <= inst10_6;
ww_inst10_5 <= inst10_5;
ww_inst10_4 <= inst10_4;
ww_inst10_3 <= inst10_3;
ww_inst10_2 <= inst10_2;
ww_inst10_1 <= inst10_1;
ww_inst10_0 <= inst10_0;
ww_COM_AD_D_9 <= COM_AD_D_9;
ww_COM_AD_D_8 <= COM_AD_D_8;
ww_COM_AD_D_7 <= COM_AD_D_7;
ww_COM_AD_D_6 <= COM_AD_D_6;
ww_COM_AD_D_0 <= COM_AD_D_0;
ww_COM_AD_D_5 <= COM_AD_D_5;
ww_COM_AD_D_1 <= COM_AD_D_1;
ww_COM_AD_D_4 <= COM_AD_D_4;
ww_COM_AD_D_2 <= COM_AD_D_2;
ww_COM_AD_D_3 <= COM_AD_D_3;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
agb_out <= ww_agb_out;
comparator : comptree
PORT MAP (
	inst10_9 => ww_inst10_9,
	inst10_8 => ww_inst10_8,
	inst10_7 => ww_inst10_7,
	inst10_6 => ww_inst10_6,
	inst10_5 => ww_inst10_5,
	inst10_4 => ww_inst10_4,
	inst10_3 => ww_inst10_3,
	inst10_2 => ww_inst10_2,
	inst10_1 => ww_inst10_1,
	inst10_0 => ww_inst10_0,
	COM_AD_D_9 => ww_COM_AD_D_9,
	COM_AD_D_8 => ww_COM_AD_D_8,
	COM_AD_D_7 => ww_COM_AD_D_7,
	COM_AD_D_6 => ww_COM_AD_D_6,
	COM_AD_D_0 => ww_COM_AD_D_0,
	COM_AD_D_5 => ww_COM_AD_D_5,
	COM_AD_D_1 => ww_COM_AD_D_1,
	COM_AD_D_4 => ww_COM_AD_D_4,
	COM_AD_D_2 => ww_COM_AD_D_2,
	COM_AD_D_3 => ww_COM_AD_D_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	agb_out => ww_agb_out);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	comp_10 IS
    PORT (
	inst10_9 : IN std_logic;
	inst10_8 : IN std_logic;
	inst10_7 : IN std_logic;
	inst10_6 : IN std_logic;
	inst10_5 : IN std_logic;
	inst10_4 : IN std_logic;
	inst10_3 : IN std_logic;
	inst10_2 : IN std_logic;
	inst10_1 : IN std_logic;
	inst10_0 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_0 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_1 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	agb_out : OUT std_logic
	);
END comp_10;

ARCHITECTURE structure OF comp_10 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_inst10_9 : std_logic;
SIGNAL ww_inst10_8 : std_logic;
SIGNAL ww_inst10_7 : std_logic;
SIGNAL ww_inst10_6 : std_logic;
SIGNAL ww_inst10_5 : std_logic;
SIGNAL ww_inst10_4 : std_logic;
SIGNAL ww_inst10_3 : std_logic;
SIGNAL ww_inst10_2 : std_logic;
SIGNAL ww_inst10_1 : std_logic;
SIGNAL ww_inst10_0 : std_logic;
SIGNAL ww_COM_AD_D_9 : std_logic;
SIGNAL ww_COM_AD_D_8 : std_logic;
SIGNAL ww_COM_AD_D_7 : std_logic;
SIGNAL ww_COM_AD_D_6 : std_logic;
SIGNAL ww_COM_AD_D_0 : std_logic;
SIGNAL ww_COM_AD_D_5 : std_logic;
SIGNAL ww_COM_AD_D_1 : std_logic;
SIGNAL ww_COM_AD_D_4 : std_logic;
SIGNAL ww_COM_AD_D_2 : std_logic;
SIGNAL ww_COM_AD_D_3 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_agb_out : std_logic;

COMPONENT lpm_compare
    PORT (
	inst10_9 : IN std_logic;
	inst10_8 : IN std_logic;
	inst10_7 : IN std_logic;
	inst10_6 : IN std_logic;
	inst10_5 : IN std_logic;
	inst10_4 : IN std_logic;
	inst10_3 : IN std_logic;
	inst10_2 : IN std_logic;
	inst10_1 : IN std_logic;
	inst10_0 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_0 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_1 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	agb_out : OUT std_logic);
END COMPONENT;

BEGIN

ww_inst10_9 <= inst10_9;
ww_inst10_8 <= inst10_8;
ww_inst10_7 <= inst10_7;
ww_inst10_6 <= inst10_6;
ww_inst10_5 <= inst10_5;
ww_inst10_4 <= inst10_4;
ww_inst10_3 <= inst10_3;
ww_inst10_2 <= inst10_2;
ww_inst10_1 <= inst10_1;
ww_inst10_0 <= inst10_0;
ww_COM_AD_D_9 <= COM_AD_D_9;
ww_COM_AD_D_8 <= COM_AD_D_8;
ww_COM_AD_D_7 <= COM_AD_D_7;
ww_COM_AD_D_6 <= COM_AD_D_6;
ww_COM_AD_D_0 <= COM_AD_D_0;
ww_COM_AD_D_5 <= COM_AD_D_5;
ww_COM_AD_D_1 <= COM_AD_D_1;
ww_COM_AD_D_4 <= COM_AD_D_4;
ww_COM_AD_D_2 <= COM_AD_D_2;
ww_COM_AD_D_3 <= COM_AD_D_3;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
agb_out <= ww_agb_out;
lpm_compare_component : lpm_compare
PORT MAP (
	inst10_9 => ww_inst10_9,
	inst10_8 => ww_inst10_8,
	inst10_7 => ww_inst10_7,
	inst10_6 => ww_inst10_6,
	inst10_5 => ww_inst10_5,
	inst10_4 => ww_inst10_4,
	inst10_3 => ww_inst10_3,
	inst10_2 => ww_inst10_2,
	inst10_1 => ww_inst10_1,
	inst10_0 => ww_inst10_0,
	COM_AD_D_9 => ww_COM_AD_D_9,
	COM_AD_D_8 => ww_COM_AD_D_8,
	COM_AD_D_7 => ww_COM_AD_D_7,
	COM_AD_D_6 => ww_COM_AD_D_6,
	COM_AD_D_0 => ww_COM_AD_D_0,
	COM_AD_D_5 => ww_COM_AD_D_5,
	COM_AD_D_1 => ww_COM_AD_D_1,
	COM_AD_D_4 => ww_COM_AD_D_4,
	COM_AD_D_2 => ww_COM_AD_D_2,
	COM_AD_D_3 => ww_COM_AD_D_3,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	agb_out => ww_agb_out);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	alt_synch_counter_5 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	tcwf_af_ct_sload : IN std_logic;
	GND_port : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cout1 : OUT std_logic
	);
END alt_synch_counter_5;

ARCHITECTURE structure OF alt_synch_counter_5 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_tcwf_af_ct_sload : std_logic;
SIGNAL ww_GND_port : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_cout1 : std_logic;
SIGNAL \q[0]\ : std_logic;
SIGNAL \counter_cell[0]~COUT\ : std_logic;
SIGNAL \q[1]\ : std_logic;
SIGNAL \counter_cell[1]~COUT\ : std_logic;
SIGNAL \q[2]\ : std_logic;
SIGNAL \counter_cell[2]~COUT\ : std_logic;
SIGNAL \q[3]\ : std_logic;
SIGNAL \counter_cell[3]~COUT\ : std_logic;
SIGNAL \q[4]\ : std_logic;
SIGNAL \counter_cell[4]~COUT\ : std_logic;
SIGNAL \q[5]\ : std_logic;
SIGNAL cout : std_logic;
SIGNAL ALT_NOT_ww_aclr : std_logic;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_tcwf_af_ct_sload <= tcwf_af_ct_sload;
ww_GND_port <= GND_port;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
cout1 <= ww_cout1;
ALT_NOT_ww_aclr <= NOT ww_aclr;

\cout~0_I\ : apex20ke_lcell 
-- Equation(s):
-- cout1 = !cout

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0F0F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	cin => cout,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_cout1);

\counter_cell[0]\ : apex20ke_lcell 
-- Equation(s):
-- \counter_cell[0]~COUT\ = CARRY(!)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "qfbk_counter",
	packed_mode => "false",
	lut_mask => "0F0F",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	datac => VCC,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sload => ww_tcwf_af_ct_sload,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \counter_cell[0]~COUT\);

\counter_cell[1]\ : apex20ke_lcell 
-- Equation(s):
-- \q[1]\ = DFFE((tcwf_af_ct_sload & VCC) # (!tcwf_af_ct_sload & \q[1]\ $ \counter_cell[0]~COUT\), GLOBAL(outclock0), tcwf_af_ct_aclr, , )
-- \counter_cell[1]~COUT\ = CARRY(\q[1]\ # !\counter_cell[0]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3CCF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \q[1]\,
	datac => VCC,
	cin => \counter_cell[0]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sload => ww_tcwf_af_ct_sload,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \q[1]\,
	cout => \counter_cell[1]~COUT\);

\counter_cell[2]\ : apex20ke_lcell 
-- Equation(s):
-- \q[2]\ = DFFE((tcwf_af_ct_sload & VCC) # (!tcwf_af_ct_sload & \q[2]\ $ !\counter_cell[1]~COUT\), GLOBAL(outclock0), tcwf_af_ct_aclr, , )
-- \counter_cell[2]~COUT\ = CARRY(!\q[2]\ & !\counter_cell[1]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C303",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \q[2]\,
	datac => VCC,
	cin => \counter_cell[1]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sload => ww_tcwf_af_ct_sload,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \q[2]\,
	cout => \counter_cell[2]~COUT\);

\counter_cell[3]\ : apex20ke_lcell 
-- Equation(s):
-- \q[3]\ = DFFE((tcwf_af_ct_sload & VCC) # (!tcwf_af_ct_sload & \q[3]\ $ \counter_cell[2]~COUT\), GLOBAL(outclock0), tcwf_af_ct_aclr, , )
-- \counter_cell[3]~COUT\ = CARRY(\q[3]\ # !\counter_cell[2]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3CCF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \q[3]\,
	datac => VCC,
	cin => \counter_cell[2]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sload => ww_tcwf_af_ct_sload,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \q[3]\,
	cout => \counter_cell[3]~COUT\);

\counter_cell[4]\ : apex20ke_lcell 
-- Equation(s):
-- \q[4]\ = DFFE((tcwf_af_ct_sload & \~GND\) # (!tcwf_af_ct_sload & \q[4]\ $ !\counter_cell[3]~COUT\), GLOBAL(outclock0), tcwf_af_ct_aclr, , )
-- \counter_cell[4]~COUT\ = CARRY(!\q[4]\ & !\counter_cell[3]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C303",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \q[4]\,
	datac => ww_GND_port,
	cin => \counter_cell[3]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sload => ww_tcwf_af_ct_sload,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \q[4]\,
	cout => \counter_cell[4]~COUT\);

\counter_cell[5]\ : apex20ke_lcell 
-- Equation(s):
-- \q[5]\ = DFFE((tcwf_af_ct_sload & VCC) # (!tcwf_af_ct_sload & \q[5]\ $ \counter_cell[4]~COUT\), GLOBAL(outclock0), tcwf_af_ct_aclr, , )
-- cout = CARRY(\q[5]\ # !\counter_cell[4]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3CCF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => \q[5]\,
	datac => VCC,
	cin => \counter_cell[4]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sload => ww_tcwf_af_ct_sload,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \q[5]\,
	cout => cout);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_counter_5 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	tcwf_af_ct_sload : IN std_logic;
	GND_port : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cout : OUT std_logic
	);
END lpm_counter_5;

ARCHITECTURE structure OF lpm_counter_5 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_tcwf_af_ct_sload : std_logic;
SIGNAL ww_GND_port : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_cout : std_logic;

COMPONENT alt_synch_counter_5
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	tcwf_af_ct_sload : IN std_logic;
	GND_port : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cout1 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_tcwf_af_ct_sload <= tcwf_af_ct_sload;
ww_GND_port <= GND_port;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
cout <= ww_cout;
wysi_counter : alt_synch_counter_5
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	tcwf_af_ct_sload => ww_tcwf_af_ct_sload,
	GND_port => ww_GND_port,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	cout1 => ww_cout);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	tcwf_af_ct IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	tcwf_af_ct_sload : IN std_logic;
	GND_port : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cout : OUT std_logic
	);
END tcwf_af_ct;

ARCHITECTURE structure OF tcwf_af_ct IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_tcwf_af_ct_sload : std_logic;
SIGNAL ww_GND_port : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_cout : std_logic;

COMPONENT lpm_counter_5
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	tcwf_af_ct_sload : IN std_logic;
	GND_port : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cout : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_tcwf_af_ct_sload <= tcwf_af_ct_sload;
ww_GND_port <= GND_port;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
cout <= ww_cout;
lpm_counter_component : lpm_counter_5
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	tcwf_af_ct_sload => ww_tcwf_af_ct_sload,
	GND_port => ww_GND_port,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	cout => ww_cout);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	alt_synch_counter_2 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	updown : IN std_logic;
	\_\ : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_0 : OUT std_logic;
	pre_out_1 : OUT std_logic;
	pre_out_2 : OUT std_logic;
	pre_out_3 : OUT std_logic;
	pre_out_4 : OUT std_logic;
	pre_out_5 : OUT std_logic
	);
END alt_synch_counter_2;

ARCHITECTURE structure OF alt_synch_counter_2 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_updown : std_logic;
SIGNAL \ww_\ : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_pre_out_1 : std_logic;
SIGNAL ww_pre_out_2 : std_logic;
SIGNAL ww_pre_out_3 : std_logic;
SIGNAL ww_pre_out_4 : std_logic;
SIGNAL ww_pre_out_5 : std_logic;
SIGNAL \the_carries[1]\ : std_logic;
SIGNAL \the_carries[2]\ : std_logic;
SIGNAL \the_carries[3]\ : std_logic;
SIGNAL \the_carries[4]\ : std_logic;
SIGNAL \the_carries[5]\ : std_logic;
SIGNAL ALT_NOT_ww_aclr : std_logic;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_updown <= updown;
\ww_\ <= \_\;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_0 <= ww_sload_path_0;
pre_out_1 <= ww_pre_out_1;
pre_out_2 <= ww_pre_out_2;
pre_out_3 <= ww_pre_out_3;
pre_out_4 <= ww_pre_out_4;
pre_out_5 <= ww_pre_out_5;
ALT_NOT_ww_aclr <= NOT ww_aclr;

lsb : apex20ke_lcell 
-- Equation(s):
-- sload_path_0 = DFFE((\_~14\ & sload_path_0) # (!\_~14\ & !sload_path_0), GLOBAL(outclock0), tcwf_aclr, , )
-- \the_carries[1]\ = CARRY(valid_wreq $ !sload_path_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "qfbk_counter",
	packed_mode => "false",
	lut_mask => "0FC3",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_updown,
	datac => ww_sload_path_0,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sload => \ww_\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_0,
	cout => \the_carries[1]\);

\$00006\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_1 = DFFE((\_~14\ & pre_out_1) # (!\_~14\ & pre_out_1 $ \the_carries[1]\), GLOBAL(outclock0), tcwf_aclr, , )
-- \the_carries[2]\ = CARRY(pre_out_1 $ valid_wreq # !\the_carries[1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A6F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_1,
	datab => ww_updown,
	datac => ww_pre_out_1,
	cin => \the_carries[1]\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sload => \ww_\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_1,
	cout => \the_carries[2]\);

\$00008\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_2 = DFFE((\_~14\ & pre_out_2) # (!\_~14\ & pre_out_2 $ !\the_carries[2]\), GLOBAL(outclock0), tcwf_aclr, , )
-- \the_carries[3]\ = CARRY(!\the_carries[2]\ & (pre_out_2 $ !valid_wreq))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A509",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_2,
	datab => ww_updown,
	datac => ww_pre_out_2,
	cin => \the_carries[2]\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sload => \ww_\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_2,
	cout => \the_carries[3]\);

\$00010\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_3 = DFFE((\_~14\ & pre_out_3) # (!\_~14\ & pre_out_3 $ \the_carries[3]\), GLOBAL(outclock0), tcwf_aclr, , )
-- \the_carries[4]\ = CARRY(pre_out_3 $ valid_wreq # !\the_carries[3]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A6F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_3,
	datab => ww_updown,
	datac => ww_pre_out_3,
	cin => \the_carries[3]\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sload => \ww_\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_3,
	cout => \the_carries[4]\);

\$00012\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_4 = DFFE((\_~14\ & pre_out_4) # (!\_~14\ & pre_out_4 $ !\the_carries[4]\), GLOBAL(outclock0), tcwf_aclr, , )
-- \the_carries[5]\ = CARRY(!\the_carries[4]\ & (pre_out_4 $ !valid_wreq))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A509",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_4,
	datab => ww_updown,
	datac => ww_pre_out_4,
	cin => \the_carries[4]\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sload => \ww_\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_4,
	cout => \the_carries[5]\);

\$00014\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_5 = DFFE((\_~14\ & pre_out_5) # (!\_~14\ & \the_carries[5]\ $ pre_out_5), GLOBAL(outclock0), tcwf_aclr, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_pre_out_5,
	datad => ww_pre_out_5,
	cin => \the_carries[5]\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sload => \ww_\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_5);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_counter_2 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	updown : IN std_logic;
	\_\ : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_0 : OUT std_logic;
	pre_out_1 : OUT std_logic;
	pre_out_2 : OUT std_logic;
	pre_out_3 : OUT std_logic;
	pre_out_4 : OUT std_logic;
	pre_out_5 : OUT std_logic
	);
END lpm_counter_2;

ARCHITECTURE structure OF lpm_counter_2 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_updown : std_logic;
SIGNAL \ww_\ : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_pre_out_1 : std_logic;
SIGNAL ww_pre_out_2 : std_logic;
SIGNAL ww_pre_out_3 : std_logic;
SIGNAL ww_pre_out_4 : std_logic;
SIGNAL ww_pre_out_5 : std_logic;

COMPONENT alt_synch_counter_2
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	updown : IN std_logic;
	\_\ : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_0 : OUT std_logic;
	pre_out_1 : OUT std_logic;
	pre_out_2 : OUT std_logic;
	pre_out_3 : OUT std_logic;
	pre_out_4 : OUT std_logic;
	pre_out_5 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_updown <= updown;
\ww_\ <= \_\;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_0 <= ww_sload_path_0;
pre_out_1 <= ww_pre_out_1;
pre_out_2 <= ww_pre_out_2;
pre_out_3 <= ww_pre_out_3;
pre_out_4 <= ww_pre_out_4;
pre_out_5 <= ww_pre_out_5;
wysi_counter : alt_synch_counter_2
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	updown => ww_updown,
	\_\ => \ww_\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_0 => ww_sload_path_0,
	pre_out_1 => ww_pre_out_1,
	pre_out_2 => ww_pre_out_2,
	pre_out_3 => ww_pre_out_3,
	pre_out_4 => ww_pre_out_4,
	pre_out_5 => ww_pre_out_5);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	a_fefifo_vve IS
    PORT (
	clock : IN std_logic;
	tcwf_wrreq : IN std_logic;
	tcwf_rdreq : IN std_logic;
	aclr : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	b_non_empty : OUT std_logic;
	valid_wreq : OUT std_logic;
	valid_rreq : OUT std_logic
	);
END a_fefifo_vve;

ARCHITECTURE structure OF a_fefifo_vve IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_tcwf_wrreq : std_logic;
SIGNAL ww_tcwf_rdreq : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_b_non_empty : std_logic;
SIGNAL ww_valid_wreq : std_logic;
SIGNAL ww_valid_rreq : std_logic;
SIGNAL \wysi_counter|sload_path[0]\ : std_logic;
SIGNAL \wysi_counter|pre_out[1]\ : std_logic;
SIGNAL \wysi_counter|pre_out[2]\ : std_logic;
SIGNAL \wysi_counter|pre_out[3]\ : std_logic;
SIGNAL \wysi_counter|pre_out[4]\ : std_logic;
SIGNAL \wysi_counter|pre_out[5]\ : std_logic;
SIGNAL \_~14\ : std_logic;
SIGNAL \b_non_empty~81\ : std_logic;
SIGNAL \b_non_empty~82\ : std_logic;
SIGNAL \b_full~96\ : std_logic;
SIGNAL \b_full~92\ : std_logic;
SIGNAL b_full : std_logic;
SIGNAL ALT_NOT_ww_aclr : std_logic;

COMPONENT lpm_counter_2
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	updown : IN std_logic;
	\_\ : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_0 : OUT std_logic;
	pre_out_1 : OUT std_logic;
	pre_out_2 : OUT std_logic;
	pre_out_3 : OUT std_logic;
	pre_out_4 : OUT std_logic;
	pre_out_5 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_tcwf_wrreq <= tcwf_wrreq;
ww_tcwf_rdreq <= tcwf_rdreq;
ww_aclr <= aclr;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
b_non_empty <= ww_b_non_empty;
valid_wreq <= ww_valid_wreq;
valid_rreq <= ww_valid_rreq;
ALT_NOT_ww_aclr <= NOT ww_aclr;
count_usedw : lpm_counter_2
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	updown => ww_valid_wreq,
	\_\ => \_~14\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_0 => \wysi_counter|sload_path[0]\,
	pre_out_1 => \wysi_counter|pre_out[1]\,
	pre_out_2 => \wysi_counter|pre_out[2]\,
	pre_out_3 => \wysi_counter|pre_out[3]\,
	pre_out_4 => \wysi_counter|pre_out[4]\,
	pre_out_5 => \wysi_counter|pre_out[5]\);

\_~14_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~14\ = tcwf_wrreq & (b_full $ (tcwf_rdreq & b_non_empty)) # !tcwf_wrreq & (!b_non_empty # !tcwf_rdreq)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3F95",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_tcwf_wrreq,
	datab => ww_tcwf_rdreq,
	datac => ww_b_non_empty,
	datad => b_full,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~14\);

\b_non_empty~I\ : apex20ke_lcell 
-- Equation(s):
-- b_non_empty = DFFE(tcwf_wrreq # b_full # \b_non_empty~82\ & b_non_empty, GLOBAL(outclock0), tcwf_aclr, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFEA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_tcwf_wrreq,
	datab => \b_non_empty~82\,
	datac => ww_b_non_empty,
	datad => b_full,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_b_non_empty);

\valid_wreq~I\ : apex20ke_lcell 
-- Equation(s):
-- valid_wreq = tcwf_wrreq & !b_full

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00F0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_tcwf_wrreq,
	datad => b_full,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_valid_wreq);

\valid_rreq~I\ : apex20ke_lcell 
-- Equation(s):
-- valid_rreq = b_non_empty & tcwf_rdreq

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => ww_b_non_empty,
	datad => ww_tcwf_rdreq,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_valid_rreq);

\b_non_empty~81_I\ : apex20ke_lcell 
-- Equation(s):
-- \b_non_empty~81\ = pre_out_1 # pre_out_2 # pre_out_3 # !sload_path_0

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEFF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|pre_out[1]\,
	datab => \wysi_counter|pre_out[2]\,
	datac => \wysi_counter|pre_out[3]\,
	datad => \wysi_counter|sload_path[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \b_non_empty~81\);

\b_non_empty~82_I\ : apex20ke_lcell 
-- Equation(s):
-- \b_non_empty~82\ = \b_non_empty~81\ # pre_out_4 # pre_out_5 # !tcwf_rdreq

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FEFF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \b_non_empty~81\,
	datab => \wysi_counter|pre_out[4]\,
	datac => \wysi_counter|pre_out[5]\,
	datad => ww_tcwf_rdreq,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \b_non_empty~82\);

\b_full~96_I\ : apex20ke_lcell 
-- Equation(s):
-- \b_full~96\ = pre_out_3 & b_non_empty & pre_out_4 & pre_out_2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|pre_out[3]\,
	datab => ww_b_non_empty,
	datac => \wysi_counter|pre_out[4]\,
	datad => \wysi_counter|pre_out[2]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \b_full~96\);

\b_full~92_I\ : apex20ke_lcell 
-- Equation(s):
-- \b_full~92\ = pre_out_1 & pre_out_5 & \b_full~96\ & sload_path_0

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|pre_out[1]\,
	datab => \wysi_counter|pre_out[5]\,
	datac => \b_full~96\,
	datad => \wysi_counter|sload_path[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \b_full~92\);

\b_full~I\ : apex20ke_lcell 
-- Equation(s):
-- b_full = DFFE(!tcwf_rdreq & (b_full # tcwf_wrreq & \b_full~92\), GLOBAL(outclock0), tcwf_aclr, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "3320",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_tcwf_wrreq,
	datab => ww_tcwf_rdreq,
	datac => \b_full~92\,
	datad => b_full,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => b_full);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	altdpram_2 IS
    PORT (
	wraddress : IN std_logic_vector(5 DOWNTO 0);
	rdaddress : IN std_logic_vector(5 DOWNTO 0);
	inclock : IN std_logic;
	outclock : IN std_logic;
	tcwf_aclr : IN std_logic;
	wren : IN std_logic;
	outclocken : IN std_logic;
	rd_ptr_lsb : IN std_logic;
	data : IN std_logic_vector(9 DOWNTO 0);
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q : OUT std_logic_vector(9 DOWNTO 0)
	);
END altdpram_2;

ARCHITECTURE structure OF altdpram_2 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_wraddress : std_logic_vector(5 DOWNTO 0);
SIGNAL ww_rdaddress : std_logic_vector(5 DOWNTO 0);
SIGNAL ww_inclock : std_logic;
SIGNAL ww_outclock : std_logic;
SIGNAL ww_tcwf_aclr : std_logic;
SIGNAL ww_wren : std_logic;
SIGNAL ww_outclocken : std_logic;
SIGNAL ww_rd_ptr_lsb : std_logic;
SIGNAL ww_data : std_logic_vector(9 DOWNTO 0);
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_q : std_logic_vector(9 DOWNTO 0);
SIGNAL \ww_segment[0][8]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][8]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][0]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][0]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][9]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][9]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][1]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][1]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][2]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][2]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][3]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][3]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][4]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][4]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][5]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][5]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][6]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][6]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][7]_waddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \ww_segment[0][7]_raddr\ : std_logic_vector(15 DOWNTO 0);
SIGNAL \segment[0][8]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001000000111111";
SIGNAL \segment[0][0]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001000000111111";
SIGNAL \segment[0][9]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001000000111111";
SIGNAL \segment[0][1]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001000000111111";
SIGNAL \segment[0][2]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001000000111111";
SIGNAL \segment[0][3]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001000000111111";
SIGNAL \segment[0][4]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001000000111111";
SIGNAL \segment[0][5]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001000000111111";
SIGNAL \segment[0][6]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001000000111111";
SIGNAL \segment[0][7]_modesel\ : std_logic_vector(17 DOWNTO 0) := "010001000000111111";
SIGNAL \q[8]~0\ : std_logic;
SIGNAL ALT_NOT_ww_tcwf_aclr : std_logic;

BEGIN

ww_wraddress <= wraddress;
ww_rdaddress <= rdaddress;
ww_inclock <= inclock;
ww_outclock <= outclock;
ww_tcwf_aclr <= tcwf_aclr;
ww_wren <= wren;
ww_outclocken <= outclocken;
ww_rd_ptr_lsb <= rd_ptr_lsb;
ww_data <= data;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
q <= ww_q;

\ww_segment[0][8]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][8]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & \q[8]~0\);

\ww_segment[0][0]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][0]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & \q[8]~0\);

\ww_segment[0][9]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][9]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & \q[8]~0\);

\ww_segment[0][1]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][1]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & \q[8]~0\);

\ww_segment[0][2]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][2]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & \q[8]~0\);

\ww_segment[0][3]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][3]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & \q[8]~0\);

\ww_segment[0][4]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][4]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & \q[8]~0\);

\ww_segment[0][5]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][5]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & \q[8]~0\);

\ww_segment[0][6]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][6]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & \q[8]~0\);

\ww_segment[0][7]_waddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_wraddress(5) & ww_wraddress(4) & ww_wraddress(3) & ww_wraddress(2) & ww_wraddress(1) & ww_wraddress(0));

\ww_segment[0][7]_raddr\ <= (gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & gnd & ww_rdaddress(5) & ww_rdaddress(4) & ww_rdaddress(3) & ww_rdaddress(2) & ww_rdaddress(1) & \q[8]~0\);
ALT_NOT_ww_tcwf_aclr <= NOT ww_tcwf_aclr;

\segment[0][8]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "dcom_ap:dcom_ap_inst|DC_Rx_chan_ap:DC_Rx_chan_ap|dc_rapcal_lh:inst29|TCWF_64x10:inst11|scfifo:scfifo_component|scfifo_mcj:auto_generated|a_dpfifo_4dj:dpfifo|altdpram:FIFOram|content",
	init_file => "none",
	logical_ram_depth => 64,
	logical_ram_width => 10,
	address_width => 6,
	first_address => 0,
	last_address => 63,
	bit_number => 8,
	data_in_clock => "clock0",
	data_in_clear => "clear0",
	write_logic_clock => "clock0",
	write_logic_clear => "clear0",
	read_enable_clock => "none",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "clear0",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(8),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	ena1 => ww_outclocken,
	we => ww_wren,
	re => VCC,
	clr0 => ALT_NOT_ww_tcwf_aclr,
	waddr => \ww_segment[0][8]_waddr\,
	raddr => \ww_segment[0][8]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][8]_modesel\,
	dataout => ww_q(8));

\segment[0][0]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "dcom_ap:dcom_ap_inst|DC_Rx_chan_ap:DC_Rx_chan_ap|dc_rapcal_lh:inst29|TCWF_64x10:inst11|scfifo:scfifo_component|scfifo_mcj:auto_generated|a_dpfifo_4dj:dpfifo|altdpram:FIFOram|content",
	init_file => "none",
	logical_ram_depth => 64,
	logical_ram_width => 10,
	address_width => 6,
	first_address => 0,
	last_address => 63,
	bit_number => 0,
	data_in_clock => "clock0",
	data_in_clear => "clear0",
	write_logic_clock => "clock0",
	write_logic_clear => "clear0",
	read_enable_clock => "none",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "clear0",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(0),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	ena1 => ww_outclocken,
	we => ww_wren,
	re => VCC,
	clr0 => ALT_NOT_ww_tcwf_aclr,
	waddr => \ww_segment[0][0]_waddr\,
	raddr => \ww_segment[0][0]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][0]_modesel\,
	dataout => ww_q(0));

\segment[0][9]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "dcom_ap:dcom_ap_inst|DC_Rx_chan_ap:DC_Rx_chan_ap|dc_rapcal_lh:inst29|TCWF_64x10:inst11|scfifo:scfifo_component|scfifo_mcj:auto_generated|a_dpfifo_4dj:dpfifo|altdpram:FIFOram|content",
	init_file => "none",
	logical_ram_depth => 64,
	logical_ram_width => 10,
	address_width => 6,
	first_address => 0,
	last_address => 63,
	bit_number => 9,
	data_in_clock => "clock0",
	data_in_clear => "clear0",
	write_logic_clock => "clock0",
	write_logic_clear => "clear0",
	read_enable_clock => "none",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "clear0",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(9),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	ena1 => ww_outclocken,
	we => ww_wren,
	re => VCC,
	clr0 => ALT_NOT_ww_tcwf_aclr,
	waddr => \ww_segment[0][9]_waddr\,
	raddr => \ww_segment[0][9]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][9]_modesel\,
	dataout => ww_q(9));

\segment[0][1]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "dcom_ap:dcom_ap_inst|DC_Rx_chan_ap:DC_Rx_chan_ap|dc_rapcal_lh:inst29|TCWF_64x10:inst11|scfifo:scfifo_component|scfifo_mcj:auto_generated|a_dpfifo_4dj:dpfifo|altdpram:FIFOram|content",
	init_file => "none",
	logical_ram_depth => 64,
	logical_ram_width => 10,
	address_width => 6,
	first_address => 0,
	last_address => 63,
	bit_number => 1,
	data_in_clock => "clock0",
	data_in_clear => "clear0",
	write_logic_clock => "clock0",
	write_logic_clear => "clear0",
	read_enable_clock => "none",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "clear0",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(1),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	ena1 => ww_outclocken,
	we => ww_wren,
	re => VCC,
	clr0 => ALT_NOT_ww_tcwf_aclr,
	waddr => \ww_segment[0][1]_waddr\,
	raddr => \ww_segment[0][1]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][1]_modesel\,
	dataout => ww_q(1));

\segment[0][2]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "dcom_ap:dcom_ap_inst|DC_Rx_chan_ap:DC_Rx_chan_ap|dc_rapcal_lh:inst29|TCWF_64x10:inst11|scfifo:scfifo_component|scfifo_mcj:auto_generated|a_dpfifo_4dj:dpfifo|altdpram:FIFOram|content",
	init_file => "none",
	logical_ram_depth => 64,
	logical_ram_width => 10,
	address_width => 6,
	first_address => 0,
	last_address => 63,
	bit_number => 2,
	data_in_clock => "clock0",
	data_in_clear => "clear0",
	write_logic_clock => "clock0",
	write_logic_clear => "clear0",
	read_enable_clock => "none",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "clear0",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(2),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	ena1 => ww_outclocken,
	we => ww_wren,
	re => VCC,
	clr0 => ALT_NOT_ww_tcwf_aclr,
	waddr => \ww_segment[0][2]_waddr\,
	raddr => \ww_segment[0][2]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][2]_modesel\,
	dataout => ww_q(2));

\segment[0][3]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "dcom_ap:dcom_ap_inst|DC_Rx_chan_ap:DC_Rx_chan_ap|dc_rapcal_lh:inst29|TCWF_64x10:inst11|scfifo:scfifo_component|scfifo_mcj:auto_generated|a_dpfifo_4dj:dpfifo|altdpram:FIFOram|content",
	init_file => "none",
	logical_ram_depth => 64,
	logical_ram_width => 10,
	address_width => 6,
	first_address => 0,
	last_address => 63,
	bit_number => 3,
	data_in_clock => "clock0",
	data_in_clear => "clear0",
	write_logic_clock => "clock0",
	write_logic_clear => "clear0",
	read_enable_clock => "none",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "clear0",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(3),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	ena1 => ww_outclocken,
	we => ww_wren,
	re => VCC,
	clr0 => ALT_NOT_ww_tcwf_aclr,
	waddr => \ww_segment[0][3]_waddr\,
	raddr => \ww_segment[0][3]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][3]_modesel\,
	dataout => ww_q(3));

\segment[0][4]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "dcom_ap:dcom_ap_inst|DC_Rx_chan_ap:DC_Rx_chan_ap|dc_rapcal_lh:inst29|TCWF_64x10:inst11|scfifo:scfifo_component|scfifo_mcj:auto_generated|a_dpfifo_4dj:dpfifo|altdpram:FIFOram|content",
	init_file => "none",
	logical_ram_depth => 64,
	logical_ram_width => 10,
	address_width => 6,
	first_address => 0,
	last_address => 63,
	bit_number => 4,
	data_in_clock => "clock0",
	data_in_clear => "clear0",
	write_logic_clock => "clock0",
	write_logic_clear => "clear0",
	read_enable_clock => "none",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "clear0",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(4),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	ena1 => ww_outclocken,
	we => ww_wren,
	re => VCC,
	clr0 => ALT_NOT_ww_tcwf_aclr,
	waddr => \ww_segment[0][4]_waddr\,
	raddr => \ww_segment[0][4]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][4]_modesel\,
	dataout => ww_q(4));

\segment[0][5]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "dcom_ap:dcom_ap_inst|DC_Rx_chan_ap:DC_Rx_chan_ap|dc_rapcal_lh:inst29|TCWF_64x10:inst11|scfifo:scfifo_component|scfifo_mcj:auto_generated|a_dpfifo_4dj:dpfifo|altdpram:FIFOram|content",
	init_file => "none",
	logical_ram_depth => 64,
	logical_ram_width => 10,
	address_width => 6,
	first_address => 0,
	last_address => 63,
	bit_number => 5,
	data_in_clock => "clock0",
	data_in_clear => "clear0",
	write_logic_clock => "clock0",
	write_logic_clear => "clear0",
	read_enable_clock => "none",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "clear0",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(5),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	ena1 => ww_outclocken,
	we => ww_wren,
	re => VCC,
	clr0 => ALT_NOT_ww_tcwf_aclr,
	waddr => \ww_segment[0][5]_waddr\,
	raddr => \ww_segment[0][5]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][5]_modesel\,
	dataout => ww_q(5));

\segment[0][6]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "dcom_ap:dcom_ap_inst|DC_Rx_chan_ap:DC_Rx_chan_ap|dc_rapcal_lh:inst29|TCWF_64x10:inst11|scfifo:scfifo_component|scfifo_mcj:auto_generated|a_dpfifo_4dj:dpfifo|altdpram:FIFOram|content",
	init_file => "none",
	logical_ram_depth => 64,
	logical_ram_width => 10,
	address_width => 6,
	first_address => 0,
	last_address => 63,
	bit_number => 6,
	data_in_clock => "clock0",
	data_in_clear => "clear0",
	write_logic_clock => "clock0",
	write_logic_clear => "clear0",
	read_enable_clock => "none",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "clear0",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(6),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	ena1 => ww_outclocken,
	we => ww_wren,
	re => VCC,
	clr0 => ALT_NOT_ww_tcwf_aclr,
	waddr => \ww_segment[0][6]_waddr\,
	raddr => \ww_segment[0][6]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][6]_modesel\,
	dataout => ww_q(6));

\segment[0][7]\ : apex20ke_ram_slice 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "dual_port",
	logical_ram_name => "dcom_ap:dcom_ap_inst|DC_Rx_chan_ap:DC_Rx_chan_ap|dc_rapcal_lh:inst29|TCWF_64x10:inst11|scfifo:scfifo_component|scfifo_mcj:auto_generated|a_dpfifo_4dj:dpfifo|altdpram:FIFOram|content",
	init_file => "none",
	logical_ram_depth => 64,
	logical_ram_width => 10,
	address_width => 6,
	first_address => 0,
	last_address => 63,
	bit_number => 7,
	data_in_clock => "clock0",
	data_in_clear => "clear0",
	write_logic_clock => "clock0",
	write_logic_clear => "clear0",
	read_enable_clock => "none",
	read_enable_clear => "none",
	read_address_clock => "clock1",
	read_address_clear => "clear0",
	data_out_clock => "none",
	data_out_clear => "none",
	deep_ram_mode => "off")
-- pragma translate_on
PORT MAP (
	datain => ww_data(7),
	clk0 => ww_inclock,
	clk1 => ww_inclock,
	ena1 => ww_outclocken,
	we => ww_wren,
	re => VCC,
	clr0 => ALT_NOT_ww_tcwf_aclr,
	waddr => \ww_segment[0][7]_waddr\,
	raddr => \ww_segment[0][7]_raddr\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	modesel => \segment[0][7]_modesel\,
	dataout => ww_q(7));

\q[8]~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \q[8]~0\ = !rd_ptr_lsb

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00FF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datad => ww_rd_ptr_lsb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \q[8]~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	alt_synch_counter_3 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	cnt_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic
	);
END alt_synch_counter_3;

ARCHITECTURE structure OF alt_synch_counter_3 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_cnt_en : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL \counter_cell[3]~COUT\ : std_logic;
SIGNAL \counter_cell[2]~COUT\ : std_logic;
SIGNAL \counter_cell[1]~COUT\ : std_logic;
SIGNAL \counter_cell[0]~COUT\ : std_logic;
SIGNAL ALT_NOT_ww_aclr : std_logic;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_cnt_en <= cnt_en;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_4 <= ww_sload_path_4;
sload_path_3 <= ww_sload_path_3;
sload_path_2 <= ww_sload_path_2;
sload_path_1 <= ww_sload_path_1;
sload_path_0 <= ww_sload_path_0;
ALT_NOT_ww_aclr <= NOT ww_aclr;

\counter_cell[4]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_4 = DFFE(sload_path_4 $ (!\counter_cell[3]~COUT\ & \_~0\), GLOBAL(outclock0), tcwf_aclr, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C3CC",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_4,
	datad => ww_cnt_en,
	cin => \counter_cell[3]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_4);

\counter_cell[3]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_3 = DFFE(sload_path_3 $ (\_~0\ & \counter_cell[2]~COUT\), GLOBAL(outclock0), tcwf_aclr, , )
-- \counter_cell[3]~COUT\ = CARRY(!\counter_cell[2]~COUT\ # !sload_path_3)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_3,
	datab => ww_cnt_en,
	cin => \counter_cell[2]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_3,
	cout => \counter_cell[3]~COUT\);

\counter_cell[2]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_2 = DFFE(sload_path_2 $ (\_~0\ & !\counter_cell[1]~COUT\), GLOBAL(outclock0), tcwf_aclr, , )
-- \counter_cell[2]~COUT\ = CARRY(sload_path_2 & !\counter_cell[1]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A60A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_2,
	datab => ww_cnt_en,
	cin => \counter_cell[1]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_2,
	cout => \counter_cell[2]~COUT\);

\counter_cell[1]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_1 = DFFE(sload_path_1 $ (\_~0\ & \counter_cell[0]~COUT\), GLOBAL(outclock0), tcwf_aclr, , )
-- \counter_cell[1]~COUT\ = CARRY(!\counter_cell[0]~COUT\ # !sload_path_1)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_1,
	datab => ww_cnt_en,
	cin => \counter_cell[0]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_1,
	cout => \counter_cell[1]~COUT\);

\counter_cell[0]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_0 = DFFE(\_~0\ $ sload_path_0, GLOBAL(outclock0), tcwf_aclr, , )
-- \counter_cell[0]~COUT\ = CARRY(sload_path_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "qfbk_counter",
	packed_mode => "false",
	lut_mask => "3CF0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_cnt_en,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_0,
	cout => \counter_cell[0]~COUT\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_counter_3 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	cnt_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic
	);
END lpm_counter_3;

ARCHITECTURE structure OF lpm_counter_3 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_cnt_en : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;

COMPONENT alt_synch_counter_3
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	cnt_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_cnt_en <= cnt_en;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_4 <= ww_sload_path_4;
sload_path_3 <= ww_sload_path_3;
sload_path_2 <= ww_sload_path_2;
sload_path_1 <= ww_sload_path_1;
sload_path_0 <= ww_sload_path_0;
wysi_counter : alt_synch_counter_3
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	cnt_en => ww_cnt_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_4 => ww_sload_path_4,
	sload_path_3 => ww_sload_path_3,
	sload_path_2 => ww_sload_path_2,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	alt_synch_counter_4 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	cnt_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_5 : OUT std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic
	);
END alt_synch_counter_4;

ARCHITECTURE structure OF alt_synch_counter_4 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_cnt_en : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_5 : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL \counter_cell[4]~COUT\ : std_logic;
SIGNAL \counter_cell[3]~COUT\ : std_logic;
SIGNAL \counter_cell[2]~COUT\ : std_logic;
SIGNAL \counter_cell[1]~COUT\ : std_logic;
SIGNAL \counter_cell[0]~COUT\ : std_logic;
SIGNAL ALT_NOT_ww_aclr : std_logic;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_cnt_en <= cnt_en;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_5 <= ww_sload_path_5;
sload_path_4 <= ww_sload_path_4;
sload_path_3 <= ww_sload_path_3;
sload_path_2 <= ww_sload_path_2;
sload_path_1 <= ww_sload_path_1;
sload_path_0 <= ww_sload_path_0;
ALT_NOT_ww_aclr <= NOT ww_aclr;

\counter_cell[5]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_5 = DFFE(sload_path_5 $ (\counter_cell[4]~COUT\ & valid_wreq), GLOBAL(outclock0), tcwf_aclr, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5AAA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_5,
	datad => ww_cnt_en,
	cin => \counter_cell[4]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_5);

\counter_cell[4]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_4 = DFFE(sload_path_4 $ (valid_wreq & !\counter_cell[3]~COUT\), GLOBAL(outclock0), tcwf_aclr, , )
-- \counter_cell[4]~COUT\ = CARRY(sload_path_4 & !\counter_cell[3]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A60A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_4,
	datab => ww_cnt_en,
	cin => \counter_cell[3]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_4,
	cout => \counter_cell[4]~COUT\);

\counter_cell[3]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_3 = DFFE(sload_path_3 $ (valid_wreq & \counter_cell[2]~COUT\), GLOBAL(outclock0), tcwf_aclr, , )
-- \counter_cell[3]~COUT\ = CARRY(!\counter_cell[2]~COUT\ # !sload_path_3)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_3,
	datab => ww_cnt_en,
	cin => \counter_cell[2]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_3,
	cout => \counter_cell[3]~COUT\);

\counter_cell[2]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_2 = DFFE(sload_path_2 $ (valid_wreq & !\counter_cell[1]~COUT\), GLOBAL(outclock0), tcwf_aclr, , )
-- \counter_cell[2]~COUT\ = CARRY(sload_path_2 & !\counter_cell[1]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A60A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_2,
	datab => ww_cnt_en,
	cin => \counter_cell[1]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_2,
	cout => \counter_cell[2]~COUT\);

\counter_cell[1]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_1 = DFFE(sload_path_1 $ (valid_wreq & \counter_cell[0]~COUT\), GLOBAL(outclock0), tcwf_aclr, , )
-- \counter_cell[1]~COUT\ = CARRY(!\counter_cell[0]~COUT\ # !sload_path_1)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_1,
	datab => ww_cnt_en,
	cin => \counter_cell[0]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_1,
	cout => \counter_cell[1]~COUT\);

\counter_cell[0]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_0 = DFFE(valid_wreq $ sload_path_0, GLOBAL(outclock0), tcwf_aclr, , )
-- \counter_cell[0]~COUT\ = CARRY(sload_path_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "qfbk_counter",
	packed_mode => "false",
	lut_mask => "3CF0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_cnt_en,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_0,
	cout => \counter_cell[0]~COUT\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_counter_4 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	cnt_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_5 : OUT std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic
	);
END lpm_counter_4;

ARCHITECTURE structure OF lpm_counter_4 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_cnt_en : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_5 : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;

COMPONENT alt_synch_counter_4
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	cnt_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_5 : OUT std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_cnt_en <= cnt_en;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_5 <= ww_sload_path_5;
sload_path_4 <= ww_sload_path_4;
sload_path_3 <= ww_sload_path_3;
sload_path_2 <= ww_sload_path_2;
sload_path_1 <= ww_sload_path_1;
sload_path_0 <= ww_sload_path_0;
wysi_counter : alt_synch_counter_4
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	cnt_en => ww_cnt_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_5 => ww_sload_path_5,
	sload_path_4 => ww_sload_path_4,
	sload_path_3 => ww_sload_path_3,
	sload_path_2 => ww_sload_path_2,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	a_dpfifo_4dj IS
    PORT (
	clock : IN std_logic;
	tcwf_wrreq : IN std_logic;
	tcwf_rdreq : IN std_logic;
	aclr : IN std_logic;
	data : IN std_logic_vector(9 DOWNTO 0);
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	b_non_empty : OUT std_logic;
	q : OUT std_logic_vector(9 DOWNTO 0)
	);
END a_dpfifo_4dj;

ARCHITECTURE structure OF a_dpfifo_4dj IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_tcwf_wrreq : std_logic;
SIGNAL ww_tcwf_rdreq : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_data : std_logic_vector(9 DOWNTO 0);
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_b_non_empty : std_logic;
SIGNAL ww_q : std_logic_vector(9 DOWNTO 0);
SIGNAL ww_FIFOram_wraddress : std_logic_vector(5 DOWNTO 0);
SIGNAL ww_FIFOram_rdaddress : std_logic_vector(5 DOWNTO 0);
SIGNAL ww_FIFOram_data : std_logic_vector(9 DOWNTO 0);
SIGNAL ww_FIFOram_q : std_logic_vector(9 DOWNTO 0);
SIGNAL \wysi_counter|sload_path[5]\ : std_logic;
SIGNAL \wysi_counter|sload_path[4]\ : std_logic;
SIGNAL \wysi_counter|sload_path[3]\ : std_logic;
SIGNAL \wysi_counter|sload_path[2]\ : std_logic;
SIGNAL \wysi_counter|sload_path[1]\ : std_logic;
SIGNAL \wysi_counter|sload_path[0]\ : std_logic;
SIGNAL \wysi_counter|sload_path[4]~1\ : std_logic;
SIGNAL \wysi_counter|sload_path[3]~1\ : std_logic;
SIGNAL \wysi_counter|sload_path[2]~1\ : std_logic;
SIGNAL \wysi_counter|sload_path[1]~1\ : std_logic;
SIGNAL \wysi_counter|sload_path[0]~1\ : std_logic;
SIGNAL \fifo_state|valid_wreq\ : std_logic;
SIGNAL \fifo_state|valid_rreq\ : std_logic;
SIGNAL rd_ptr_lsb : std_logic;
SIGNAL \_~0\ : std_logic;
SIGNAL ALT_NOT_ww_aclr : std_logic;

COMPONENT a_fefifo_vve
    PORT (
	clock : IN std_logic;
	tcwf_wrreq : IN std_logic;
	tcwf_rdreq : IN std_logic;
	aclr : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	b_non_empty : OUT std_logic;
	valid_wreq : OUT std_logic;
	valid_rreq : OUT std_logic);
END COMPONENT;

COMPONENT altdpram_2
    PORT (
	wraddress : IN std_logic_vector(5 DOWNTO 0);
	rdaddress : IN std_logic_vector(5 DOWNTO 0);
	inclock : IN std_logic;
	outclock : IN std_logic;
	tcwf_aclr : IN std_logic;
	wren : IN std_logic;
	outclocken : IN std_logic;
	rd_ptr_lsb : IN std_logic;
	data : IN std_logic_vector(9 DOWNTO 0);
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q : OUT std_logic_vector(9 DOWNTO 0));
END COMPONENT;

COMPONENT lpm_counter_3
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	cnt_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic);
END COMPONENT;

COMPONENT lpm_counter_4
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	cnt_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_5 : OUT std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_tcwf_wrreq <= tcwf_wrreq;
ww_tcwf_rdreq <= tcwf_rdreq;
ww_aclr <= aclr;
ww_data <= data;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
b_non_empty <= ww_b_non_empty;
q <= ww_q;

ww_FIFOram_wraddress <= (\wysi_counter|sload_path[5]\ & \wysi_counter|sload_path[4]\ & \wysi_counter|sload_path[3]\ & \wysi_counter|sload_path[2]\ & \wysi_counter|sload_path[1]\ & \wysi_counter|sload_path[0]\);

ww_FIFOram_rdaddress <= (\wysi_counter|sload_path[4]~1\ & \wysi_counter|sload_path[3]~1\ & \wysi_counter|sload_path[2]~1\ & \wysi_counter|sload_path[1]~1\ & \wysi_counter|sload_path[0]~1\ & gnd);

ww_FIFOram_data <= (ww_data(9) & ww_data(8) & ww_data(7) & ww_data(6) & ww_data(5) & ww_data(4) & ww_data(3) & ww_data(2) & ww_data(1) & ww_data(0));

ww_q(0) <= ww_FIFOram_q(0);
ww_q(1) <= ww_FIFOram_q(1);
ww_q(2) <= ww_FIFOram_q(2);
ww_q(3) <= ww_FIFOram_q(3);
ww_q(4) <= ww_FIFOram_q(4);
ww_q(5) <= ww_FIFOram_q(5);
ww_q(6) <= ww_FIFOram_q(6);
ww_q(7) <= ww_FIFOram_q(7);
ww_q(8) <= ww_FIFOram_q(8);
ww_q(9) <= ww_FIFOram_q(9);
ALT_NOT_ww_aclr <= NOT ww_aclr;
fifo_state : a_fefifo_vve
PORT MAP (
	clock => ww_clock,
	tcwf_wrreq => ww_tcwf_wrreq,
	tcwf_rdreq => ww_tcwf_rdreq,
	aclr => ww_aclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	b_non_empty => ww_b_non_empty,
	valid_wreq => \fifo_state|valid_wreq\,
	valid_rreq => \fifo_state|valid_rreq\);
FIFOram : altdpram_2
PORT MAP (
	wraddress => ww_FIFOram_wraddress,
	rdaddress => ww_FIFOram_rdaddress,
	inclock => ww_clock,
	outclock => ww_clock,
	tcwf_aclr => ww_aclr,
	wren => \fifo_state|valid_wreq\,
	outclocken => \fifo_state|valid_rreq\,
	rd_ptr_lsb => rd_ptr_lsb,
	data => ww_FIFOram_data,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	q => ww_FIFOram_q);
rd_ptr_msb : lpm_counter_3
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	cnt_en => \_~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_4 => \wysi_counter|sload_path[4]~1\,
	sload_path_3 => \wysi_counter|sload_path[3]~1\,
	sload_path_2 => \wysi_counter|sload_path[2]~1\,
	sload_path_1 => \wysi_counter|sload_path[1]~1\,
	sload_path_0 => \wysi_counter|sload_path[0]~1\);
wr_ptr : lpm_counter_4
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	cnt_en => \fifo_state|valid_wreq\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_5 => \wysi_counter|sload_path[5]\,
	sload_path_4 => \wysi_counter|sload_path[4]\,
	sload_path_3 => \wysi_counter|sload_path[3]\,
	sload_path_2 => \wysi_counter|sload_path[2]\,
	sload_path_1 => \wysi_counter|sload_path[1]\,
	sload_path_0 => \wysi_counter|sload_path[0]\);

\rd_ptr_lsb~I\ : apex20ke_lcell 
-- Equation(s):
-- rd_ptr_lsb = DFFE(!rd_ptr_lsb, GLOBAL(outclock0), tcwf_aclr, , valid_rreq)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00FF",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => rd_ptr_lsb,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	ena => \fifo_state|valid_rreq\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => rd_ptr_lsb);

\_~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~0\ = tcwf_rdreq & b_non_empty & !rd_ptr_lsb

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00C0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_tcwf_rdreq,
	datac => ww_b_non_empty,
	datad => rd_ptr_lsb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~0\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	scfifo_mcj IS
    PORT (
	clock : IN std_logic;
	tcwf_wrreq : IN std_logic;
	tcwf_rdreq : IN std_logic;
	aclr : IN std_logic;
	data : IN std_logic_vector(9 DOWNTO 0);
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	b_non_empty : OUT std_logic;
	q : OUT std_logic_vector(9 DOWNTO 0)
	);
END scfifo_mcj;

ARCHITECTURE structure OF scfifo_mcj IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_tcwf_wrreq : std_logic;
SIGNAL ww_tcwf_rdreq : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_data : std_logic_vector(9 DOWNTO 0);
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_b_non_empty : std_logic;
SIGNAL ww_q : std_logic_vector(9 DOWNTO 0);
SIGNAL ww_dpfifo_data : std_logic_vector(9 DOWNTO 0);
SIGNAL ww_dpfifo_q : std_logic_vector(9 DOWNTO 0);

COMPONENT a_dpfifo_4dj
    PORT (
	clock : IN std_logic;
	tcwf_wrreq : IN std_logic;
	tcwf_rdreq : IN std_logic;
	aclr : IN std_logic;
	data : IN std_logic_vector(9 DOWNTO 0);
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	b_non_empty : OUT std_logic;
	q : OUT std_logic_vector(9 DOWNTO 0));
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_tcwf_wrreq <= tcwf_wrreq;
ww_tcwf_rdreq <= tcwf_rdreq;
ww_aclr <= aclr;
ww_data <= data;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
b_non_empty <= ww_b_non_empty;
q <= ww_q;

ww_dpfifo_data <= (ww_data(9) & ww_data(8) & ww_data(7) & ww_data(6) & ww_data(5) & ww_data(4) & ww_data(3) & ww_data(2) & ww_data(1) & ww_data(0));

ww_q(0) <= ww_dpfifo_q(0);
ww_q(1) <= ww_dpfifo_q(1);
ww_q(2) <= ww_dpfifo_q(2);
ww_q(3) <= ww_dpfifo_q(3);
ww_q(4) <= ww_dpfifo_q(4);
ww_q(5) <= ww_dpfifo_q(5);
ww_q(6) <= ww_dpfifo_q(6);
ww_q(7) <= ww_dpfifo_q(7);
ww_q(8) <= ww_dpfifo_q(8);
ww_q(9) <= ww_dpfifo_q(9);
dpfifo : a_dpfifo_4dj
PORT MAP (
	clock => ww_clock,
	tcwf_wrreq => ww_tcwf_wrreq,
	tcwf_rdreq => ww_tcwf_rdreq,
	aclr => ww_aclr,
	data => ww_dpfifo_data,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	b_non_empty => ww_b_non_empty,
	q => ww_dpfifo_q);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	scfifo IS
    PORT (
	clock : IN std_logic;
	tcwf_wrreq : IN std_logic;
	tcwf_rdreq : IN std_logic;
	aclr : IN std_logic;
	data : IN std_logic_vector(9 DOWNTO 0);
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	b_non_empty : OUT std_logic;
	q : OUT std_logic_vector(9 DOWNTO 0)
	);
END scfifo;

ARCHITECTURE structure OF scfifo IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_tcwf_wrreq : std_logic;
SIGNAL ww_tcwf_rdreq : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_data : std_logic_vector(9 DOWNTO 0);
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_b_non_empty : std_logic;
SIGNAL ww_q : std_logic_vector(9 DOWNTO 0);
SIGNAL ww_auto_generated_data : std_logic_vector(9 DOWNTO 0);
SIGNAL ww_auto_generated_q : std_logic_vector(9 DOWNTO 0);

COMPONENT scfifo_mcj
    PORT (
	clock : IN std_logic;
	tcwf_wrreq : IN std_logic;
	tcwf_rdreq : IN std_logic;
	aclr : IN std_logic;
	data : IN std_logic_vector(9 DOWNTO 0);
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	b_non_empty : OUT std_logic;
	q : OUT std_logic_vector(9 DOWNTO 0));
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_tcwf_wrreq <= tcwf_wrreq;
ww_tcwf_rdreq <= tcwf_rdreq;
ww_aclr <= aclr;
ww_data <= data;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
b_non_empty <= ww_b_non_empty;
q <= ww_q;

ww_auto_generated_data <= (ww_data(9) & ww_data(8) & ww_data(7) & ww_data(6) & ww_data(5) & ww_data(4) & ww_data(3) & ww_data(2) & ww_data(1) & ww_data(0));

ww_q(0) <= ww_auto_generated_q(0);
ww_q(1) <= ww_auto_generated_q(1);
ww_q(2) <= ww_auto_generated_q(2);
ww_q(3) <= ww_auto_generated_q(3);
ww_q(4) <= ww_auto_generated_q(4);
ww_q(5) <= ww_auto_generated_q(5);
ww_q(6) <= ww_auto_generated_q(6);
ww_q(7) <= ww_auto_generated_q(7);
ww_q(8) <= ww_auto_generated_q(8);
ww_q(9) <= ww_auto_generated_q(9);
auto_generated : scfifo_mcj
PORT MAP (
	clock => ww_clock,
	tcwf_wrreq => ww_tcwf_wrreq,
	tcwf_rdreq => ww_tcwf_rdreq,
	aclr => ww_aclr,
	data => ww_auto_generated_data,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	b_non_empty => ww_b_non_empty,
	q => ww_auto_generated_q);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	TCWF_64x10 IS
    PORT (
	clock : IN std_logic;
	tcwf_wrreq : IN std_logic;
	tcwf_rdreq : IN std_logic;
	aclr : IN std_logic;
	data : IN std_logic_vector(9 DOWNTO 0);
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	b_non_empty : OUT std_logic;
	q : OUT std_logic_vector(9 DOWNTO 0)
	);
END TCWF_64x10;

ARCHITECTURE structure OF TCWF_64x10 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_tcwf_wrreq : std_logic;
SIGNAL ww_tcwf_rdreq : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_data : std_logic_vector(9 DOWNTO 0);
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_b_non_empty : std_logic;
SIGNAL ww_q : std_logic_vector(9 DOWNTO 0);
SIGNAL ww_scfifo_component_data : std_logic_vector(9 DOWNTO 0);
SIGNAL ww_scfifo_component_q : std_logic_vector(9 DOWNTO 0);

COMPONENT scfifo
    PORT (
	clock : IN std_logic;
	tcwf_wrreq : IN std_logic;
	tcwf_rdreq : IN std_logic;
	aclr : IN std_logic;
	data : IN std_logic_vector(9 DOWNTO 0);
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	b_non_empty : OUT std_logic;
	q : OUT std_logic_vector(9 DOWNTO 0));
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_tcwf_wrreq <= tcwf_wrreq;
ww_tcwf_rdreq <= tcwf_rdreq;
ww_aclr <= aclr;
ww_data <= data;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
b_non_empty <= ww_b_non_empty;
q <= ww_q;

ww_scfifo_component_data <= (ww_data(9) & ww_data(8) & ww_data(7) & ww_data(6) & ww_data(5) & ww_data(4) & ww_data(3) & ww_data(2) & ww_data(1) & ww_data(0));

ww_q(0) <= ww_scfifo_component_q(0);
ww_q(1) <= ww_scfifo_component_q(1);
ww_q(2) <= ww_scfifo_component_q(2);
ww_q(3) <= ww_scfifo_component_q(3);
ww_q(4) <= ww_scfifo_component_q(4);
ww_q(5) <= ww_scfifo_component_q(5);
ww_q(6) <= ww_scfifo_component_q(6);
ww_q(7) <= ww_scfifo_component_q(7);
ww_q(8) <= ww_scfifo_component_q(8);
ww_q(9) <= ww_scfifo_component_q(9);
scfifo_component : scfifo
PORT MAP (
	clock => ww_clock,
	tcwf_wrreq => ww_tcwf_wrreq,
	tcwf_rdreq => ww_tcwf_rdreq,
	aclr => ww_aclr,
	data => ww_scfifo_component_data,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	b_non_empty => ww_b_non_empty,
	q => ww_scfifo_component_q);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	dc_rapcal_lh IS
    PORT (
	CCLK : IN std_logic;
	tcal_rcvd : IN std_logic;
	msg_sent : IN std_logic;
	sreg1 : IN std_logic;
	hl_edge : IN std_logic;
	sreg2 : IN std_logic;
	GND_port : IN std_logic;
	fc_adc : IN std_logic_vector(9 DOWNTO 0);
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	pulse_rcvd : OUT std_logic;
	sreg : OUT std_logic;
	b_non_empty : OUT std_logic;
	q_8 : OUT std_logic;
	q_0 : OUT std_logic;
	q_9 : OUT std_logic;
	q_1 : OUT std_logic;
	q_2 : OUT std_logic;
	q_3 : OUT std_logic;
	q_4 : OUT std_logic;
	q_5 : OUT std_logic;
	q_6 : OUT std_logic;
	q_7 : OUT std_logic
	);
END dc_rapcal_lh;

ARCHITECTURE structure OF dc_rapcal_lh IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CCLK : std_logic;
SIGNAL ww_tcal_rcvd : std_logic;
SIGNAL ww_msg_sent : std_logic;
SIGNAL ww_sreg1 : std_logic;
SIGNAL ww_hl_edge : std_logic;
SIGNAL ww_sreg2 : std_logic;
SIGNAL ww_GND_port : std_logic;
SIGNAL ww_fc_adc : std_logic_vector(9 DOWNTO 0);
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_pulse_rcvd : std_logic;
SIGNAL ww_sreg : std_logic;
SIGNAL ww_b_non_empty : std_logic;
SIGNAL ww_q_8 : std_logic;
SIGNAL ww_q_0 : std_logic;
SIGNAL ww_q_9 : std_logic;
SIGNAL ww_q_1 : std_logic;
SIGNAL ww_q_2 : std_logic;
SIGNAL ww_q_3 : std_logic;
SIGNAL ww_q_4 : std_logic;
SIGNAL ww_q_5 : std_logic;
SIGNAL ww_q_6 : std_logic;
SIGNAL ww_q_7 : std_logic;
SIGNAL ww_inst11_data : std_logic_vector(9 DOWNTO 0);
SIGNAL ww_inst11_q : std_logic_vector(9 DOWNTO 0);
SIGNAL \inst10[9]\ : std_logic;
SIGNAL \cmp_end|agb_out\ : std_logic;
SIGNAL \inst10[8]\ : std_logic;
SIGNAL \inst2|tcwf_af_ct_aclr~reg\ : std_logic;
SIGNAL \inst2|tcwf_af_ct_sload~reg\ : std_logic;
SIGNAL \inst10[7]\ : std_logic;
SIGNAL \inst2|tcwf_wrreq~reg\ : std_logic;
SIGNAL \inst2|tcwf_rdreq~reg\ : std_logic;
SIGNAL \inst2|tcwf_aclr~reg\ : std_logic;
SIGNAL \inst10[6]\ : std_logic;
SIGNAL \inst10[5]\ : std_logic;
SIGNAL \inst10[4]\ : std_logic;
SIGNAL \inst10[3]\ : std_logic;
SIGNAL \inst10[2]\ : std_logic;
SIGNAL \inst10[1]\ : std_logic;
SIGNAL \inst10[0]\ : std_logic;
SIGNAL \wysi_counter|cout~0\ : std_logic;

COMPONENT DCTC_FWR
    PORT (
	CLK : IN std_logic;
	tcal_rcvd : IN std_logic;
	msg_sent : IN std_logic;
	sreg1 : IN std_logic;
	hl_edge : IN std_logic;
	agb_out : IN std_logic;
	sreg2 : IN std_logic;
	b_non_empty : IN std_logic;
	cout : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	pulse_rcvd : OUT std_logic;
	sreg : OUT std_logic;
	tcwf_af_ct_aclr : OUT std_logic;
	tcwf_af_ct_sload : OUT std_logic;
	tcwf_wrreq : OUT std_logic;
	tcwf_rdreq : OUT std_logic;
	tcwf_aclr : OUT std_logic);
END COMPONENT;

COMPONENT comp_10
    PORT (
	inst10_9 : IN std_logic;
	inst10_8 : IN std_logic;
	inst10_7 : IN std_logic;
	inst10_6 : IN std_logic;
	inst10_5 : IN std_logic;
	inst10_4 : IN std_logic;
	inst10_3 : IN std_logic;
	inst10_2 : IN std_logic;
	inst10_1 : IN std_logic;
	inst10_0 : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_0 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_1 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	agb_out : OUT std_logic);
END COMPONENT;

COMPONENT tcwf_af_ct
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	tcwf_af_ct_sload : IN std_logic;
	GND_port : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	cout : OUT std_logic);
END COMPONENT;

COMPONENT TCWF_64x10
    PORT (
	clock : IN std_logic;
	tcwf_wrreq : IN std_logic;
	tcwf_rdreq : IN std_logic;
	aclr : IN std_logic;
	data : IN std_logic_vector(9 DOWNTO 0);
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	b_non_empty : OUT std_logic;
	q : OUT std_logic_vector(9 DOWNTO 0));
END COMPONENT;

BEGIN

ww_CCLK <= CCLK;
ww_tcal_rcvd <= tcal_rcvd;
ww_msg_sent <= msg_sent;
ww_sreg1 <= sreg1;
ww_hl_edge <= hl_edge;
ww_sreg2 <= sreg2;
ww_GND_port <= GND_port;
ww_fc_adc <= fc_adc;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
pulse_rcvd <= ww_pulse_rcvd;
sreg <= ww_sreg;
b_non_empty <= ww_b_non_empty;
q_8 <= ww_q_8;
q_0 <= ww_q_0;
q_9 <= ww_q_9;
q_1 <= ww_q_1;
q_2 <= ww_q_2;
q_3 <= ww_q_3;
q_4 <= ww_q_4;
q_5 <= ww_q_5;
q_6 <= ww_q_6;
q_7 <= ww_q_7;

ww_inst11_data <= (ww_fc_adc(9) & ww_fc_adc(8) & ww_fc_adc(7) & ww_fc_adc(6) & ww_fc_adc(5) & ww_fc_adc(4) & ww_fc_adc(3) & ww_fc_adc(2) & ww_fc_adc(1) & ww_fc_adc(0));

ww_q_0 <= ww_inst11_q(0);
ww_q_1 <= ww_inst11_q(1);
ww_q_2 <= ww_inst11_q(2);
ww_q_3 <= ww_inst11_q(3);
ww_q_4 <= ww_inst11_q(4);
ww_q_5 <= ww_inst11_q(5);
ww_q_6 <= ww_inst11_q(6);
ww_q_7 <= ww_inst11_q(7);
ww_q_8 <= ww_inst11_q(8);
ww_q_9 <= ww_inst11_q(9);
inst2 : DCTC_FWR
PORT MAP (
	CLK => ww_CCLK,
	tcal_rcvd => ww_tcal_rcvd,
	msg_sent => ww_msg_sent,
	sreg1 => ww_sreg1,
	hl_edge => ww_hl_edge,
	agb_out => \cmp_end|agb_out\,
	sreg2 => ww_sreg2,
	b_non_empty => ww_b_non_empty,
	cout => \wysi_counter|cout~0\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	pulse_rcvd => ww_pulse_rcvd,
	sreg => ww_sreg,
	tcwf_af_ct_aclr => \inst2|tcwf_af_ct_aclr~reg\,
	tcwf_af_ct_sload => \inst2|tcwf_af_ct_sload~reg\,
	tcwf_wrreq => \inst2|tcwf_wrreq~reg\,
	tcwf_rdreq => \inst2|tcwf_rdreq~reg\,
	tcwf_aclr => \inst2|tcwf_aclr~reg\);
inst8 : comp_10
PORT MAP (
	inst10_9 => \inst10[9]\,
	inst10_8 => \inst10[8]\,
	inst10_7 => \inst10[7]\,
	inst10_6 => \inst10[6]\,
	inst10_5 => \inst10[5]\,
	inst10_4 => \inst10[4]\,
	inst10_3 => \inst10[3]\,
	inst10_2 => \inst10[2]\,
	inst10_1 => \inst10[1]\,
	inst10_0 => \inst10[0]\,
	COM_AD_D_9 => ww_fc_adc(9),
	COM_AD_D_8 => ww_fc_adc(8),
	COM_AD_D_7 => ww_fc_adc(7),
	COM_AD_D_6 => ww_fc_adc(6),
	COM_AD_D_0 => ww_fc_adc(0),
	COM_AD_D_5 => ww_fc_adc(5),
	COM_AD_D_1 => ww_fc_adc(1),
	COM_AD_D_4 => ww_fc_adc(4),
	COM_AD_D_2 => ww_fc_adc(2),
	COM_AD_D_3 => ww_fc_adc(3),
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	agb_out => \cmp_end|agb_out\);
inst7 : tcwf_af_ct
PORT MAP (
	clock => ww_CCLK,
	aclr => \inst2|tcwf_af_ct_aclr~reg\,
	tcwf_af_ct_sload => \inst2|tcwf_af_ct_sload~reg\,
	GND_port => ww_GND_port,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	cout => \wysi_counter|cout~0\);
inst11 : TCWF_64x10
PORT MAP (
	clock => ww_CCLK,
	tcwf_wrreq => \inst2|tcwf_wrreq~reg\,
	tcwf_rdreq => \inst2|tcwf_rdreq~reg\,
	aclr => \inst2|tcwf_aclr~reg\,
	data => ww_inst11_data,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	b_non_empty => ww_b_non_empty,
	q => ww_inst11_q);

\inst10[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inst10[9]\ = DFFE(\COM_AD_D[9]~combout\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_fc_adc(9),
	clk => ww_CCLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inst10[9]\);

\inst10[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inst10[8]\ = DFFE(\COM_AD_D[8]~combout\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_fc_adc(8),
	clk => ww_CCLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inst10[8]\);

\inst10[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inst10[7]\ = DFFE(\COM_AD_D[7]~combout\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_fc_adc(7),
	clk => ww_CCLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inst10[7]\);

\inst10[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inst10[6]\ = DFFE(\COM_AD_D[6]~combout\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_fc_adc(6),
	clk => ww_CCLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inst10[6]\);

\inst10[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inst10[5]\ = DFFE(\COM_AD_D[5]~combout\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_fc_adc(5),
	clk => ww_CCLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inst10[5]\);

\inst10[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inst10[4]\ = DFFE(\COM_AD_D[4]~combout\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_fc_adc(4),
	clk => ww_CCLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inst10[4]\);

\inst10[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inst10[3]\ = DFFE(\COM_AD_D[3]~combout\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_fc_adc(3),
	clk => ww_CCLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inst10[3]\);

\inst10[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inst10[2]\ = DFFE(\COM_AD_D[2]~combout\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_fc_adc(2),
	clk => ww_CCLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inst10[2]\);

\inst10[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inst10[1]\ = DFFE(\COM_AD_D[1]~combout\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_fc_adc(1),
	clk => ww_CCLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inst10[1]\);

\inst10[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inst10[0]\ = DFFE(\COM_AD_D[0]~combout\, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_fc_adc(0),
	clk => ww_CCLK,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inst10[0]\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	Rx_dpr_ctrl_ap IS
    PORT (
	q_15 : IN std_logic;
	q_14 : IN std_logic;
	q_13 : IN std_logic;
	q_12 : IN std_logic;
	q_11 : IN std_logic;
	q_10 : IN std_logic;
	q_9 : IN std_logic;
	q_8 : IN std_logic;
	q_7 : IN std_logic;
	q_6 : IN std_logic;
	q_5 : IN std_logic;
	q_4 : IN std_logic;
	q_3 : IN std_logic;
	q_2 : IN std_logic;
	q_1 : IN std_logic;
	q_0 : IN std_logic;
	clk : IN std_logic;
	buf_res : IN std_logic;
	rx_dpr_radr_local_0 : IN std_logic;
	rx_dpr_radr_local_1 : IN std_logic;
	rx_dpr_radr_local_2 : IN std_logic;
	rx_dpr_radr_local_3 : IN std_logic;
	rx_dpr_radr_local_4 : IN std_logic;
	rx_dpr_radr_local_5 : IN std_logic;
	rx_dpr_radr_local_6 : IN std_logic;
	rx_dpr_radr_local_7 : IN std_logic;
	rx_dpr_radr_local_8 : IN std_logic;
	rx_dpr_radr_local_9 : IN std_logic;
	rx_dpr_radr_local_10 : IN std_logic;
	rx_dpr_radr_local_11 : IN std_logic;
	rx_dpr_radr_local_12 : IN std_logic;
	rx_dpr_radr_local_13 : IN std_logic;
	rx_dpr_radr_local_14 : IN std_logic;
	rx_dpr_radr_local_15 : IN std_logic;
	rx_dpr_radr_stb : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	op_6 : OUT std_logic;
	op_61 : OUT std_logic;
	op_62 : OUT std_logic
	);
END Rx_dpr_ctrl_ap;

ARCHITECTURE structure OF Rx_dpr_ctrl_ap IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_q_15 : std_logic;
SIGNAL ww_q_14 : std_logic;
SIGNAL ww_q_13 : std_logic;
SIGNAL ww_q_12 : std_logic;
SIGNAL ww_q_11 : std_logic;
SIGNAL ww_q_10 : std_logic;
SIGNAL ww_q_9 : std_logic;
SIGNAL ww_q_8 : std_logic;
SIGNAL ww_q_7 : std_logic;
SIGNAL ww_q_6 : std_logic;
SIGNAL ww_q_5 : std_logic;
SIGNAL ww_q_4 : std_logic;
SIGNAL ww_q_3 : std_logic;
SIGNAL ww_q_2 : std_logic;
SIGNAL ww_q_1 : std_logic;
SIGNAL ww_q_0 : std_logic;
SIGNAL ww_clk : std_logic;
SIGNAL ww_buf_res : std_logic;
SIGNAL ww_rx_dpr_radr_local_0 : std_logic;
SIGNAL ww_rx_dpr_radr_local_1 : std_logic;
SIGNAL ww_rx_dpr_radr_local_2 : std_logic;
SIGNAL ww_rx_dpr_radr_local_3 : std_logic;
SIGNAL ww_rx_dpr_radr_local_4 : std_logic;
SIGNAL ww_rx_dpr_radr_local_5 : std_logic;
SIGNAL ww_rx_dpr_radr_local_6 : std_logic;
SIGNAL ww_rx_dpr_radr_local_7 : std_logic;
SIGNAL ww_rx_dpr_radr_local_8 : std_logic;
SIGNAL ww_rx_dpr_radr_local_9 : std_logic;
SIGNAL ww_rx_dpr_radr_local_10 : std_logic;
SIGNAL ww_rx_dpr_radr_local_11 : std_logic;
SIGNAL ww_rx_dpr_radr_local_12 : std_logic;
SIGNAL ww_rx_dpr_radr_local_13 : std_logic;
SIGNAL ww_rx_dpr_radr_local_14 : std_logic;
SIGNAL ww_rx_dpr_radr_local_15 : std_logic;
SIGNAL ww_rx_dpr_radr_stb : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_op_6 : std_logic;
SIGNAL ww_op_61 : std_logic;
SIGNAL ww_op_62 : std_logic;
SIGNAL \op_5~1COMBOUT\ : std_logic;
SIGNAL \op_3~1COMBOUT\ : std_logic;
SIGNAL \op_6~334_1\ : std_logic;
SIGNAL \op_6~353_1\ : std_logic;
SIGNAL \op_6~347_1\ : std_logic;
SIGNAL \op_6~349_1\ : std_logic;
SIGNAL \dpr_wadr[11]\ : std_logic;
SIGNAL \dpr_radr[11]\ : std_logic;
SIGNAL \dpr_radr[10]\ : std_logic;
SIGNAL \dpr_wadr[10]\ : std_logic;
SIGNAL \dpr_radr[9]\ : std_logic;
SIGNAL \dpr_wadr[9]\ : std_logic;
SIGNAL \dpr_radr[8]\ : std_logic;
SIGNAL \dpr_wadr[8]\ : std_logic;
SIGNAL \dpr_radr[7]\ : std_logic;
SIGNAL \dpr_wadr[7]\ : std_logic;
SIGNAL \dpr_radr[6]\ : std_logic;
SIGNAL \dpr_wadr[6]\ : std_logic;
SIGNAL \dpr_wadr[5]\ : std_logic;
SIGNAL \dpr_radr[5]\ : std_logic;
SIGNAL \dpr_radr[4]\ : std_logic;
SIGNAL \dpr_wadr[4]\ : std_logic;
SIGNAL \dpr_radr[3]\ : std_logic;
SIGNAL \dpr_wadr[3]\ : std_logic;
SIGNAL \dpr_wadr[2]\ : std_logic;
SIGNAL \dpr_radr[2]\ : std_logic;
SIGNAL \dpr_radr[1]\ : std_logic;
SIGNAL \dpr_wadr[1]\ : std_logic;
SIGNAL \dpr_wadr[0]\ : std_logic;
SIGNAL \dpr_radr[0]\ : std_logic;
SIGNAL \op_2~1COUT\ : std_logic;
SIGNAL \op_2~2COUT\ : std_logic;
SIGNAL \op_2~3COUT\ : std_logic;
SIGNAL \op_2~4COUT\ : std_logic;
SIGNAL \op_2~5COUT\ : std_logic;
SIGNAL \op_2~6COUT\ : std_logic;
SIGNAL \op_2~7COUT\ : std_logic;
SIGNAL \op_2~8COUT\ : std_logic;
SIGNAL \op_2~9COUT\ : std_logic;
SIGNAL \op_2~10COUT\ : std_logic;
SIGNAL \op_2~11COUT\ : std_logic;
SIGNAL \op_2~12\ : std_logic;
SIGNAL \op_2~11\ : std_logic;
SIGNAL \op_2~10\ : std_logic;
SIGNAL \op_2~9\ : std_logic;
SIGNAL \op_2~8\ : std_logic;
SIGNAL \op_2~7\ : std_logic;
SIGNAL \op_2~6\ : std_logic;
SIGNAL \op_2~5\ : std_logic;
SIGNAL \op_2~4\ : std_logic;
SIGNAL \op_2~3\ : std_logic;
SIGNAL \op_2~2\ : std_logic;
SIGNAL \op_2~1\ : std_logic;
SIGNAL \op_3~1\ : std_logic;
SIGNAL \op_3~2COUT\ : std_logic;
SIGNAL \op_3~3COUT\ : std_logic;
SIGNAL \op_3~4COUT\ : std_logic;
SIGNAL \op_3~5COUT\ : std_logic;
SIGNAL \op_3~6COUT\ : std_logic;
SIGNAL \op_3~7COUT\ : std_logic;
SIGNAL \op_3~8COUT\ : std_logic;
SIGNAL \op_3~9COUT\ : std_logic;
SIGNAL \op_3~10COUT\ : std_logic;
SIGNAL \op_3~11COUT\ : std_logic;
SIGNAL \op_3~12\ : std_logic;
SIGNAL \op_3~11\ : std_logic;
SIGNAL \dpr_radr[12]\ : std_logic;
SIGNAL \dpr_wadr[12]\ : std_logic;
SIGNAL \op_2~12COUT\ : std_logic;
SIGNAL \op_2~13\ : std_logic;
SIGNAL \op_3~12COUT\ : std_logic;
SIGNAL \op_3~13\ : std_logic;
SIGNAL \op_3~10\ : std_logic;
SIGNAL \op_3~9\ : std_logic;
SIGNAL \op_3~7\ : std_logic;
SIGNAL \op_3~8\ : std_logic;
SIGNAL \op_3~6\ : std_logic;
SIGNAL \op_3~2\ : std_logic;
SIGNAL \op_3~3\ : std_logic;
SIGNAL \op_3~4\ : std_logic;
SIGNAL \op_3~5\ : std_logic;
SIGNAL \op_6~349\ : std_logic;
SIGNAL \op_6~356\ : std_logic;
SIGNAL \op_6~334\ : std_logic;
SIGNAL \op_6~352\ : std_logic;
SIGNAL \dpr_wadr[13]\ : std_logic;
SIGNAL \dpr_radr[13]\ : std_logic;
SIGNAL \op_2~13COUT\ : std_logic;
SIGNAL \op_2~14\ : std_logic;
SIGNAL \op_3~13COUT\ : std_logic;
SIGNAL \op_3~14\ : std_logic;
SIGNAL \dpr_radr[14]\ : std_logic;
SIGNAL \dpr_radr[15]\ : std_logic;
SIGNAL \dpr_wadr[14]\ : std_logic;
SIGNAL \dpr_wadr[15]\ : std_logic;
SIGNAL \op_1~152\ : std_logic;
SIGNAL \op_1~153\ : std_logic;
SIGNAL \op_1~9\ : std_logic;
SIGNAL \op_5~1\ : std_logic;
SIGNAL \op_5~2COUT\ : std_logic;
SIGNAL \op_5~3COUT\ : std_logic;
SIGNAL \op_5~4COUT\ : std_logic;
SIGNAL \op_5~5COUT\ : std_logic;
SIGNAL \op_5~6COUT\ : std_logic;
SIGNAL \op_5~7\ : std_logic;
SIGNAL \op_5~7COUT\ : std_logic;
SIGNAL \op_5~8\ : std_logic;
SIGNAL \op_5~6\ : std_logic;
SIGNAL \op_5~3\ : std_logic;
SIGNAL \op_5~4\ : std_logic;
SIGNAL \op_5~5\ : std_logic;
SIGNAL \op_5~2\ : std_logic;
SIGNAL \op_6~347\ : std_logic;
SIGNAL \op_6~355\ : std_logic;
SIGNAL \op_5~8COUT\ : std_logic;
SIGNAL \op_5~9\ : std_logic;
SIGNAL \op_5~9COUT\ : std_logic;
SIGNAL \op_5~10COUT\ : std_logic;
SIGNAL \op_5~11COUT\ : std_logic;
SIGNAL \op_5~12COUT\ : std_logic;
SIGNAL \op_5~13\ : std_logic;
SIGNAL \op_5~11\ : std_logic;
SIGNAL \op_5~12\ : std_logic;
SIGNAL \op_5~10\ : std_logic;
SIGNAL \op_1~155\ : std_logic;
SIGNAL \op_6~353\ : std_logic;
SIGNAL \op_6~359\ : std_logic;

BEGIN

ww_q_15 <= q_15;
ww_q_14 <= q_14;
ww_q_13 <= q_13;
ww_q_12 <= q_12;
ww_q_11 <= q_11;
ww_q_10 <= q_10;
ww_q_9 <= q_9;
ww_q_8 <= q_8;
ww_q_7 <= q_7;
ww_q_6 <= q_6;
ww_q_5 <= q_5;
ww_q_4 <= q_4;
ww_q_3 <= q_3;
ww_q_2 <= q_2;
ww_q_1 <= q_1;
ww_q_0 <= q_0;
ww_clk <= clk;
ww_buf_res <= buf_res;
ww_rx_dpr_radr_local_0 <= rx_dpr_radr_local_0;
ww_rx_dpr_radr_local_1 <= rx_dpr_radr_local_1;
ww_rx_dpr_radr_local_2 <= rx_dpr_radr_local_2;
ww_rx_dpr_radr_local_3 <= rx_dpr_radr_local_3;
ww_rx_dpr_radr_local_4 <= rx_dpr_radr_local_4;
ww_rx_dpr_radr_local_5 <= rx_dpr_radr_local_5;
ww_rx_dpr_radr_local_6 <= rx_dpr_radr_local_6;
ww_rx_dpr_radr_local_7 <= rx_dpr_radr_local_7;
ww_rx_dpr_radr_local_8 <= rx_dpr_radr_local_8;
ww_rx_dpr_radr_local_9 <= rx_dpr_radr_local_9;
ww_rx_dpr_radr_local_10 <= rx_dpr_radr_local_10;
ww_rx_dpr_radr_local_11 <= rx_dpr_radr_local_11;
ww_rx_dpr_radr_local_12 <= rx_dpr_radr_local_12;
ww_rx_dpr_radr_local_13 <= rx_dpr_radr_local_13;
ww_rx_dpr_radr_local_14 <= rx_dpr_radr_local_14;
ww_rx_dpr_radr_local_15 <= rx_dpr_radr_local_15;
ww_rx_dpr_radr_stb <= rx_dpr_radr_stb;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
op_6 <= ww_op_6;
op_61 <= ww_op_61;
op_62 <= ww_op_62;

\op_6~324_I\ : apex20ke_lcell 
-- Equation(s):
-- op_6 = op_61 # \op_6~352\ & !\op_3~14\ & !\op_1~9\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CCCE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \op_6~352\,
	datab => ww_op_61,
	datac => \op_3~14\,
	datad => \op_1~9\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_op_6);

\op_6~351_I\ : apex20ke_lcell 
-- Equation(s):
-- op_61 = (\op_6~355\ # !\op_5~9\) & CASCADE(\op_6~353\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0FF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \op_6~355\,
	datad => \op_5~9\,
	cascin => \op_6~353\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_op_61);

\op_6~354_I\ : apex20ke_lcell 
-- Equation(s):
-- op_62 = (!\op_3~14\ & !\op_1~9\) & CASCADE(\op_6~359\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "000F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \op_3~14\,
	datad => \op_1~9\,
	cascin => \op_6~359\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_op_62);

\dpr_wadr[11]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dpr_wadr[11]\ = DFFE(q_11, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_11,
	clk => ww_clk,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dpr_wadr[11]\);

\dpr_radr[11]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dpr_radr[11]\ = DFFE(rx_dpr_radr_local_11, GLOBAL(outclock0), !buf_res, , rx_dpr_radr_stb)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_rx_dpr_radr_local_11,
	clk => ww_clk,
	aclr => ww_buf_res,
	ena => ww_rx_dpr_radr_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dpr_radr[11]\);

\dpr_radr[10]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dpr_radr[10]\ = DFFE(rx_dpr_radr_local_10, GLOBAL(outclock0), !buf_res, , rx_dpr_radr_stb)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_rx_dpr_radr_local_10,
	clk => ww_clk,
	aclr => ww_buf_res,
	ena => ww_rx_dpr_radr_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dpr_radr[10]\);

\dpr_wadr[10]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dpr_wadr[10]\ = DFFE(q_10, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_10,
	clk => ww_clk,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dpr_wadr[10]\);

\dpr_radr[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dpr_radr[9]\ = DFFE(rx_dpr_radr_local_9, GLOBAL(outclock0), !buf_res, , rx_dpr_radr_stb)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_rx_dpr_radr_local_9,
	clk => ww_clk,
	aclr => ww_buf_res,
	ena => ww_rx_dpr_radr_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dpr_radr[9]\);

\dpr_wadr[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dpr_wadr[9]\ = DFFE(q_9, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_q_9,
	clk => ww_clk,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dpr_wadr[9]\);

\dpr_radr[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dpr_radr[8]\ = DFFE(rx_dpr_radr_local_8, GLOBAL(outclock0), !buf_res, , rx_dpr_radr_stb)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_rx_dpr_radr_local_8,
	clk => ww_clk,
	aclr => ww_buf_res,
	ena => ww_rx_dpr_radr_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dpr_radr[8]\);

\dpr_wadr[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dpr_wadr[8]\ = DFFE(q_8, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_8,
	clk => ww_clk,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dpr_wadr[8]\);

\dpr_radr[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dpr_radr[7]\ = DFFE(rx_dpr_radr_local_7, GLOBAL(outclock0), !buf_res, , rx_dpr_radr_stb)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_rx_dpr_radr_local_7,
	clk => ww_clk,
	aclr => ww_buf_res,
	ena => ww_rx_dpr_radr_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dpr_radr[7]\);

\dpr_wadr[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dpr_wadr[7]\ = DFFE(q_7, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_7,
	clk => ww_clk,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dpr_wadr[7]\);

\dpr_radr[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dpr_radr[6]\ = DFFE(rx_dpr_radr_local_6, GLOBAL(outclock0), !buf_res, , rx_dpr_radr_stb)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_rx_dpr_radr_local_6,
	clk => ww_clk,
	aclr => ww_buf_res,
	ena => ww_rx_dpr_radr_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dpr_radr[6]\);

\dpr_wadr[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dpr_wadr[6]\ = DFFE(q_6, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_6,
	clk => ww_clk,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dpr_wadr[6]\);

\dpr_wadr[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dpr_wadr[5]\ = DFFE(q_5, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_q_5,
	clk => ww_clk,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dpr_wadr[5]\);

\dpr_radr[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dpr_radr[5]\ = DFFE(rx_dpr_radr_local_5, GLOBAL(outclock0), !buf_res, , rx_dpr_radr_stb)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_rx_dpr_radr_local_5,
	clk => ww_clk,
	aclr => ww_buf_res,
	ena => ww_rx_dpr_radr_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dpr_radr[5]\);

\dpr_radr[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dpr_radr[4]\ = DFFE(rx_dpr_radr_local_4, GLOBAL(outclock0), !buf_res, , rx_dpr_radr_stb)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_rx_dpr_radr_local_4,
	clk => ww_clk,
	aclr => ww_buf_res,
	ena => ww_rx_dpr_radr_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dpr_radr[4]\);

\dpr_wadr[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dpr_wadr[4]\ = DFFE(q_4, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_4,
	clk => ww_clk,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dpr_wadr[4]\);

\dpr_radr[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dpr_radr[3]\ = DFFE(rx_dpr_radr_local_3, GLOBAL(outclock0), !buf_res, , rx_dpr_radr_stb)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_rx_dpr_radr_local_3,
	clk => ww_clk,
	aclr => ww_buf_res,
	ena => ww_rx_dpr_radr_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dpr_radr[3]\);

\dpr_wadr[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dpr_wadr[3]\ = DFFE(q_3, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_3,
	clk => ww_clk,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dpr_wadr[3]\);

\dpr_wadr[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dpr_wadr[2]\ = DFFE(q_2, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_2,
	clk => ww_clk,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dpr_wadr[2]\);

\dpr_radr[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dpr_radr[2]\ = DFFE(rx_dpr_radr_local_2, GLOBAL(outclock0), !buf_res, , rx_dpr_radr_stb)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_rx_dpr_radr_local_2,
	clk => ww_clk,
	aclr => ww_buf_res,
	ena => ww_rx_dpr_radr_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dpr_radr[2]\);

\dpr_radr[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dpr_radr[1]\ = DFFE(rx_dpr_radr_local_1, GLOBAL(outclock0), !buf_res, , rx_dpr_radr_stb)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_rx_dpr_radr_local_1,
	clk => ww_clk,
	aclr => ww_buf_res,
	ena => ww_rx_dpr_radr_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dpr_radr[1]\);

\dpr_wadr[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dpr_wadr[1]\ = DFFE(q_1, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_1,
	clk => ww_clk,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dpr_wadr[1]\);

\dpr_wadr[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dpr_wadr[0]\ = DFFE(q_0, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_q_0,
	clk => ww_clk,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dpr_wadr[0]\);

\dpr_radr[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dpr_radr[0]\ = DFFE(rx_dpr_radr_local_0, GLOBAL(outclock0), !buf_res, , rx_dpr_radr_stb)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_rx_dpr_radr_local_0,
	clk => ww_clk,
	aclr => ww_buf_res,
	ena => ww_rx_dpr_radr_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dpr_radr[0]\);

\op_2~1_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_2~1\ = \dpr_wadr[0]\ $ \dpr_radr[0]\
-- \op_2~1COUT\ = CARRY(\dpr_wadr[0]\ # !\dpr_radr[0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "66BB",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \dpr_wadr[0]\,
	datab => \dpr_radr[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_2~1\,
	cout => \op_2~1COUT\);

\op_2~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_2~2\ = \dpr_radr[1]\ $ \dpr_wadr[1]\ $ !\op_2~1COUT\
-- \op_2~2COUT\ = CARRY(\dpr_radr[1]\ & (!\op_2~1COUT\ # !\dpr_wadr[1]\) # !\dpr_radr[1]\ & !\dpr_wadr[1]\ & !\op_2~1COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "692B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \dpr_radr[1]\,
	datab => \dpr_wadr[1]\,
	cin => \op_2~1COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_2~2\,
	cout => \op_2~2COUT\);

\op_2~3_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_2~3\ = \dpr_wadr[2]\ $ \dpr_radr[2]\ $ \op_2~2COUT\
-- \op_2~3COUT\ = CARRY(\dpr_wadr[2]\ & (!\op_2~2COUT\ # !\dpr_radr[2]\) # !\dpr_wadr[2]\ & !\dpr_radr[2]\ & !\op_2~2COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "962B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \dpr_wadr[2]\,
	datab => \dpr_radr[2]\,
	cin => \op_2~2COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_2~3\,
	cout => \op_2~3COUT\);

\op_2~4_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_2~4\ = \dpr_radr[3]\ $ \dpr_wadr[3]\ $ !\op_2~3COUT\
-- \op_2~4COUT\ = CARRY(\dpr_radr[3]\ & (!\op_2~3COUT\ # !\dpr_wadr[3]\) # !\dpr_radr[3]\ & !\dpr_wadr[3]\ & !\op_2~3COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "692B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \dpr_radr[3]\,
	datab => \dpr_wadr[3]\,
	cin => \op_2~3COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_2~4\,
	cout => \op_2~4COUT\);

\op_2~5_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_2~5\ = \dpr_radr[4]\ $ \dpr_wadr[4]\ $ \op_2~4COUT\
-- \op_2~5COUT\ = CARRY(\dpr_radr[4]\ & \dpr_wadr[4]\ & !\op_2~4COUT\ # !\dpr_radr[4]\ & (\dpr_wadr[4]\ # !\op_2~4COUT\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "964D",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \dpr_radr[4]\,
	datab => \dpr_wadr[4]\,
	cin => \op_2~4COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_2~5\,
	cout => \op_2~5COUT\);

\op_2~6_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_2~6\ = \dpr_wadr[5]\ $ \dpr_radr[5]\ $ !\op_2~5COUT\
-- \op_2~6COUT\ = CARRY(\dpr_wadr[5]\ & \dpr_radr[5]\ & !\op_2~5COUT\ # !\dpr_wadr[5]\ & (\dpr_radr[5]\ # !\op_2~5COUT\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "694D",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \dpr_wadr[5]\,
	datab => \dpr_radr[5]\,
	cin => \op_2~5COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_2~6\,
	cout => \op_2~6COUT\);

\op_2~7_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_2~7\ = \dpr_radr[6]\ $ \dpr_wadr[6]\ $ \op_2~6COUT\
-- \op_2~7COUT\ = CARRY(\dpr_radr[6]\ & \dpr_wadr[6]\ & !\op_2~6COUT\ # !\dpr_radr[6]\ & (\dpr_wadr[6]\ # !\op_2~6COUT\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "964D",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \dpr_radr[6]\,
	datab => \dpr_wadr[6]\,
	cin => \op_2~6COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_2~7\,
	cout => \op_2~7COUT\);

\op_2~8_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_2~8\ = \dpr_radr[7]\ $ \dpr_wadr[7]\ $ !\op_2~7COUT\
-- \op_2~8COUT\ = CARRY(\dpr_radr[7]\ & (!\op_2~7COUT\ # !\dpr_wadr[7]\) # !\dpr_radr[7]\ & !\dpr_wadr[7]\ & !\op_2~7COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "692B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \dpr_radr[7]\,
	datab => \dpr_wadr[7]\,
	cin => \op_2~7COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_2~8\,
	cout => \op_2~8COUT\);

\op_2~9_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_2~9\ = \dpr_radr[8]\ $ \dpr_wadr[8]\ $ \op_2~8COUT\
-- \op_2~9COUT\ = CARRY(\dpr_radr[8]\ & \dpr_wadr[8]\ & !\op_2~8COUT\ # !\dpr_radr[8]\ & (\dpr_wadr[8]\ # !\op_2~8COUT\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "964D",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \dpr_radr[8]\,
	datab => \dpr_wadr[8]\,
	cin => \op_2~8COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_2~9\,
	cout => \op_2~9COUT\);

\op_2~10_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_2~10\ = \dpr_radr[9]\ $ \dpr_wadr[9]\ $ !\op_2~9COUT\
-- \op_2~10COUT\ = CARRY(\dpr_radr[9]\ & (!\op_2~9COUT\ # !\dpr_wadr[9]\) # !\dpr_radr[9]\ & !\dpr_wadr[9]\ & !\op_2~9COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "692B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \dpr_radr[9]\,
	datab => \dpr_wadr[9]\,
	cin => \op_2~9COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_2~10\,
	cout => \op_2~10COUT\);

\op_2~11_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_2~11\ = \dpr_radr[10]\ $ \dpr_wadr[10]\ $ \op_2~10COUT\
-- \op_2~11COUT\ = CARRY(\dpr_radr[10]\ & \dpr_wadr[10]\ & !\op_2~10COUT\ # !\dpr_radr[10]\ & (\dpr_wadr[10]\ # !\op_2~10COUT\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "964D",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \dpr_radr[10]\,
	datab => \dpr_wadr[10]\,
	cin => \op_2~10COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_2~11\,
	cout => \op_2~11COUT\);

\op_2~12_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_2~12\ = \dpr_wadr[11]\ $ \dpr_radr[11]\ $ !\op_2~11COUT\
-- \op_2~12COUT\ = CARRY(\dpr_wadr[11]\ & \dpr_radr[11]\ & !\op_2~11COUT\ # !\dpr_wadr[11]\ & (\dpr_radr[11]\ # !\op_2~11COUT\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "694D",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \dpr_wadr[11]\,
	datab => \dpr_radr[11]\,
	cin => \op_2~11COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_2~12\,
	cout => \op_2~12COUT\);

\op_3~1_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_3~1\ = CARRY(!\op_2~1\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "0033",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	datab => \op_2~1\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \op_3~1\);

\op_3~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_3~2\ = \op_2~2\ $ !\op_3~1\
-- \op_3~2COUT\ = CARRY(\op_2~2\ # !\op_3~1\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C3CF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \op_2~2\,
	cin => \op_3~1\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_3~2\,
	cout => \op_3~2COUT\);

\op_3~3_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_3~3\ = \op_2~3\ $ \op_3~2COUT\
-- \op_3~3COUT\ = CARRY(!\op_2~3\ & !\op_3~2COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C03",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \op_2~3\,
	cin => \op_3~2COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_3~3\,
	cout => \op_3~3COUT\);

\op_3~4_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_3~4\ = \op_2~4\ $ !\op_3~3COUT\
-- \op_3~4COUT\ = CARRY(\op_2~4\ # !\op_3~3COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C3CF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \op_2~4\,
	cin => \op_3~3COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_3~4\,
	cout => \op_3~4COUT\);

\op_3~5_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_3~5\ = \op_2~5\ $ \op_3~4COUT\
-- \op_3~5COUT\ = CARRY(!\op_2~5\ & !\op_3~4COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C03",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \op_2~5\,
	cin => \op_3~4COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_3~5\,
	cout => \op_3~5COUT\);

\op_3~6_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_3~6\ = \op_2~6\ $ !\op_3~5COUT\
-- \op_3~6COUT\ = CARRY(\op_2~6\ # !\op_3~5COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C3CF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \op_2~6\,
	cin => \op_3~5COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_3~6\,
	cout => \op_3~6COUT\);

\op_3~7_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_3~7\ = \op_2~7\ $ \op_3~6COUT\
-- \op_3~7COUT\ = CARRY(!\op_2~7\ & !\op_3~6COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C03",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \op_2~7\,
	cin => \op_3~6COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_3~7\,
	cout => \op_3~7COUT\);

\op_3~8_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_3~8\ = \op_2~8\ $ !\op_3~7COUT\
-- \op_3~8COUT\ = CARRY(\op_2~8\ # !\op_3~7COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C3CF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \op_2~8\,
	cin => \op_3~7COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_3~8\,
	cout => \op_3~8COUT\);

\op_3~9_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_3~9\ = \op_2~9\ $ \op_3~8COUT\
-- \op_3~9COUT\ = CARRY(!\op_2~9\ & !\op_3~8COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C03",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \op_2~9\,
	cin => \op_3~8COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_3~9\,
	cout => \op_3~9COUT\);

\op_3~10_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_3~10\ = \op_2~10\ $ !\op_3~9COUT\
-- \op_3~10COUT\ = CARRY(\op_2~10\ # !\op_3~9COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C3CF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \op_2~10\,
	cin => \op_3~9COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_3~10\,
	cout => \op_3~10COUT\);

\op_3~11_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_3~11\ = \op_2~11\ $ \op_3~10COUT\
-- \op_3~11COUT\ = CARRY(!\op_2~11\ & !\op_3~10COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C03",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \op_2~11\,
	cin => \op_3~10COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_3~11\,
	cout => \op_3~11COUT\);

\op_3~12_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_3~12\ = \op_2~12\ $ !\op_3~11COUT\
-- \op_3~12COUT\ = CARRY(\op_2~12\ # !\op_3~11COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C3CF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \op_2~12\,
	cin => \op_3~11COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_3~12\,
	cout => \op_3~12COUT\);

\dpr_radr[12]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dpr_radr[12]\ = DFFE(rx_dpr_radr_local_12, GLOBAL(outclock0), !buf_res, , rx_dpr_radr_stb)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_rx_dpr_radr_local_12,
	clk => ww_clk,
	aclr => ww_buf_res,
	ena => ww_rx_dpr_radr_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dpr_radr[12]\);

\dpr_wadr[12]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dpr_wadr[12]\ = DFFE(q_12, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_12,
	clk => ww_clk,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dpr_wadr[12]\);

\op_2~13_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_2~13\ = \dpr_radr[12]\ $ \dpr_wadr[12]\ $ \op_2~12COUT\
-- \op_2~13COUT\ = CARRY(\dpr_radr[12]\ & \dpr_wadr[12]\ & !\op_2~12COUT\ # !\dpr_radr[12]\ & (\dpr_wadr[12]\ # !\op_2~12COUT\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "964D",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \dpr_radr[12]\,
	datab => \dpr_wadr[12]\,
	cin => \op_2~12COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_2~13\,
	cout => \op_2~13COUT\);

\op_3~13_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_3~13\ = \op_2~13\ $ \op_3~12COUT\
-- \op_3~13COUT\ = CARRY(!\op_2~13\ & !\op_3~12COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C03",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \op_2~13\,
	cin => \op_3~12COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_3~13\,
	cout => \op_3~13COUT\);

\op_6~349_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_6~349\ = !\op_3~2\ & !\op_3~3\ & !\op_3~4\ & !\op_3~5\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \op_3~2\,
	datab => \op_3~3\,
	datac => \op_3~4\,
	datad => \op_3~5\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \op_6~349\);

\op_6~356_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_6~356\ = (!\op_3~7\ & !\op_3~8\ & !\op_3~6\) & CASCADE(\op_6~349\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0003",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \op_3~7\,
	datac => \op_3~8\,
	datad => \op_3~6\,
	cascin => \op_6~349\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_6~356\);

\op_6~334_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_6~334\ = \op_6~356\ # !\op_3~9\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F5F5",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \op_3~9\,
	datac => \op_6~356\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \op_6~334\);

\op_6~352_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_6~352\ = (!\op_3~12\ & !\op_3~11\ & !\op_3~13\ & !\op_3~10\) & CASCADE(\op_6~334\)
-- \op_6~359\ = (!\op_3~12\ & !\op_3~11\ & !\op_3~13\ & !\op_3~10\) & CASCADE(\op_6~334\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \op_3~12\,
	datab => \op_3~11\,
	datac => \op_3~13\,
	datad => \op_3~10\,
	cascin => \op_6~334\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_6~352\,
	cascout => \op_6~359\);

\dpr_wadr[13]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dpr_wadr[13]\ = DFFE(q_13, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_13,
	clk => ww_clk,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dpr_wadr[13]\);

\dpr_radr[13]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dpr_radr[13]\ = DFFE(rx_dpr_radr_local_13, GLOBAL(outclock0), !buf_res, , rx_dpr_radr_stb)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_rx_dpr_radr_local_13,
	clk => ww_clk,
	aclr => ww_buf_res,
	ena => ww_rx_dpr_radr_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dpr_radr[13]\);

\op_2~14_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_2~14\ = \dpr_wadr[13]\ $ \dpr_radr[13]\ $ !\op_2~13COUT\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "6969",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \dpr_wadr[13]\,
	datab => \dpr_radr[13]\,
	cin => \op_2~13COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_2~14\);

\op_3~14_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_3~14\ = \op_3~13COUT\ $ \op_2~14\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datad => \op_2~14\,
	cin => \op_3~13COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_3~14\);

\dpr_radr[14]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dpr_radr[14]\ = DFFE(rx_dpr_radr_local_14, GLOBAL(outclock0), !buf_res, , rx_dpr_radr_stb)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_rx_dpr_radr_local_14,
	clk => ww_clk,
	aclr => ww_buf_res,
	ena => ww_rx_dpr_radr_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dpr_radr[14]\);

\dpr_radr[15]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dpr_radr[15]\ = DFFE(rx_dpr_radr_local_15, GLOBAL(outclock0), !buf_res, , rx_dpr_radr_stb)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_rx_dpr_radr_local_15,
	clk => ww_clk,
	aclr => ww_buf_res,
	ena => ww_rx_dpr_radr_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dpr_radr[15]\);

\dpr_wadr[14]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dpr_wadr[14]\ = DFFE(q_14, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_14,
	clk => ww_clk,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dpr_wadr[14]\);

\dpr_wadr[15]~I\ : apex20ke_lcell 
-- Equation(s):
-- \dpr_wadr[15]\ = DFFE(q_15, GLOBAL(outclock0), !buf_res, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_15,
	clk => ww_clk,
	aclr => ww_buf_res,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \dpr_wadr[15]\);

\op_1~152_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_1~152\ = \dpr_radr[15]\ & (\dpr_radr[14]\ & !\dpr_wadr[14]\ # !\dpr_wadr[15]\) # !\dpr_radr[15]\ & \dpr_radr[14]\ & !\dpr_wadr[14]\ & !\dpr_wadr[15]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "08CE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \dpr_radr[14]\,
	datab => \dpr_radr[15]\,
	datac => \dpr_wadr[14]\,
	datad => \dpr_wadr[15]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_1~152\);

\op_1~153_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_1~153\ = \dpr_radr[14]\ & \dpr_wadr[14]\ & (\dpr_radr[15]\ $ !\dpr_wadr[15]\) # !\dpr_radr[14]\ & !\dpr_wadr[14]\ & (\dpr_radr[15]\ $ !\dpr_wadr[15]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8421",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \dpr_radr[14]\,
	datab => \dpr_radr[15]\,
	datac => \dpr_wadr[14]\,
	datad => \dpr_wadr[15]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_1~153\);

\op_1~9_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_1~9\ = \op_1~152\ # \dpr_radr[13]\ & !\dpr_wadr[13]\ & \op_1~153\
-- \op_1~155\ = \op_1~152\ # \dpr_radr[13]\ & !\dpr_wadr[13]\ & \op_1~153\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "AEAA",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \op_1~152\,
	datab => \dpr_radr[13]\,
	datac => \dpr_wadr[13]\,
	datad => \op_1~153\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_1~9\,
	cascout => \op_1~155\);

\op_5~1_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~1\ = CARRY(\dpr_radr[0]\ # !\dpr_wadr[0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "00DD",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \dpr_wadr[0]\,
	datab => \dpr_radr[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \op_5~1\);

\op_5~2_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~2\ = \dpr_wadr[1]\ $ \dpr_radr[1]\ $ !\op_5~1\
-- \op_5~2COUT\ = CARRY(\dpr_wadr[1]\ & (!\op_5~1\ # !\dpr_radr[1]\) # !\dpr_wadr[1]\ & !\dpr_radr[1]\ & !\op_5~1\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "692B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \dpr_wadr[1]\,
	datab => \dpr_radr[1]\,
	cin => \op_5~1\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~2\,
	cout => \op_5~2COUT\);

\op_5~3_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~3\ = \dpr_wadr[2]\ $ \dpr_radr[2]\ $ \op_5~2COUT\
-- \op_5~3COUT\ = CARRY(\dpr_wadr[2]\ & \dpr_radr[2]\ & !\op_5~2COUT\ # !\dpr_wadr[2]\ & (\dpr_radr[2]\ # !\op_5~2COUT\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "964D",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \dpr_wadr[2]\,
	datab => \dpr_radr[2]\,
	cin => \op_5~2COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~3\,
	cout => \op_5~3COUT\);

\op_5~4_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~4\ = \dpr_wadr[3]\ $ \dpr_radr[3]\ $ !\op_5~3COUT\
-- \op_5~4COUT\ = CARRY(\dpr_wadr[3]\ & (!\op_5~3COUT\ # !\dpr_radr[3]\) # !\dpr_wadr[3]\ & !\dpr_radr[3]\ & !\op_5~3COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "692B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \dpr_wadr[3]\,
	datab => \dpr_radr[3]\,
	cin => \op_5~3COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~4\,
	cout => \op_5~4COUT\);

\op_5~5_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~5\ = \dpr_wadr[4]\ $ \dpr_radr[4]\ $ \op_5~4COUT\
-- \op_5~5COUT\ = CARRY(\dpr_wadr[4]\ & \dpr_radr[4]\ & !\op_5~4COUT\ # !\dpr_wadr[4]\ & (\dpr_radr[4]\ # !\op_5~4COUT\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "964D",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \dpr_wadr[4]\,
	datab => \dpr_radr[4]\,
	cin => \op_5~4COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~5\,
	cout => \op_5~5COUT\);

\op_5~6_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~6\ = \dpr_wadr[5]\ $ \dpr_radr[5]\ $ !\op_5~5COUT\
-- \op_5~6COUT\ = CARRY(\dpr_wadr[5]\ & (!\op_5~5COUT\ # !\dpr_radr[5]\) # !\dpr_wadr[5]\ & !\dpr_radr[5]\ & !\op_5~5COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "692B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \dpr_wadr[5]\,
	datab => \dpr_radr[5]\,
	cin => \op_5~5COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~6\,
	cout => \op_5~6COUT\);

\op_5~7_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~7\ = \dpr_radr[6]\ $ \dpr_wadr[6]\ $ \op_5~6COUT\
-- \op_5~7COUT\ = CARRY(\dpr_radr[6]\ & (!\op_5~6COUT\ # !\dpr_wadr[6]\) # !\dpr_radr[6]\ & !\dpr_wadr[6]\ & !\op_5~6COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "962B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \dpr_radr[6]\,
	datab => \dpr_wadr[6]\,
	cin => \op_5~6COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~7\,
	cout => \op_5~7COUT\);

\op_5~8_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~8\ = \dpr_wadr[7]\ $ \dpr_radr[7]\ $ !\op_5~7COUT\
-- \op_5~8COUT\ = CARRY(\dpr_wadr[7]\ & (!\op_5~7COUT\ # !\dpr_radr[7]\) # !\dpr_wadr[7]\ & !\dpr_radr[7]\ & !\op_5~7COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "692B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \dpr_wadr[7]\,
	datab => \dpr_radr[7]\,
	cin => \op_5~7COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~8\,
	cout => \op_5~8COUT\);

\op_6~347_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_6~347\ = !\op_5~3\ & !\op_5~4\ & !\op_5~5\ & !\op_5~2\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \op_5~3\,
	datab => \op_5~4\,
	datac => \op_5~5\,
	datad => \op_5~2\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \op_6~347\);

\op_6~355_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_6~355\ = (!\op_5~7\ & !\op_5~8\ & !\op_5~6\) & CASCADE(\op_6~347\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0003",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \op_5~7\,
	datac => \op_5~8\,
	datad => \op_5~6\,
	cascin => \op_6~347\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_6~355\);

\op_5~9_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~9\ = \dpr_radr[8]\ $ \dpr_wadr[8]\ $ \op_5~8COUT\
-- \op_5~9COUT\ = CARRY(\dpr_radr[8]\ & (!\op_5~8COUT\ # !\dpr_wadr[8]\) # !\dpr_radr[8]\ & !\dpr_wadr[8]\ & !\op_5~8COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "962B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \dpr_radr[8]\,
	datab => \dpr_wadr[8]\,
	cin => \op_5~8COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~9\,
	cout => \op_5~9COUT\);

\op_5~10_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~10\ = \dpr_radr[9]\ $ \dpr_wadr[9]\ $ !\op_5~9COUT\
-- \op_5~10COUT\ = CARRY(\dpr_radr[9]\ & \dpr_wadr[9]\ & !\op_5~9COUT\ # !\dpr_radr[9]\ & (\dpr_wadr[9]\ # !\op_5~9COUT\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "694D",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \dpr_radr[9]\,
	datab => \dpr_wadr[9]\,
	cin => \op_5~9COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~10\,
	cout => \op_5~10COUT\);

\op_5~11_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~11\ = \dpr_wadr[10]\ $ \dpr_radr[10]\ $ \op_5~10COUT\
-- \op_5~11COUT\ = CARRY(\dpr_wadr[10]\ & \dpr_radr[10]\ & !\op_5~10COUT\ # !\dpr_wadr[10]\ & (\dpr_radr[10]\ # !\op_5~10COUT\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "964D",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \dpr_wadr[10]\,
	datab => \dpr_radr[10]\,
	cin => \op_5~10COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~11\,
	cout => \op_5~11COUT\);

\op_5~12_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~12\ = \dpr_wadr[11]\ $ \dpr_radr[11]\ $ !\op_5~11COUT\
-- \op_5~12COUT\ = CARRY(\dpr_wadr[11]\ & (!\op_5~11COUT\ # !\dpr_radr[11]\) # !\dpr_wadr[11]\ & !\dpr_radr[11]\ & !\op_5~11COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "692B",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \dpr_wadr[11]\,
	datab => \dpr_radr[11]\,
	cin => \op_5~11COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~12\,
	cout => \op_5~12COUT\);

\op_5~13_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_5~13\ = \dpr_radr[12]\ $ \op_5~12COUT\ $ \dpr_wadr[12]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A55A",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \dpr_radr[12]\,
	datad => \dpr_wadr[12]\,
	cin => \op_5~12COUT\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \op_5~13\);

\op_6~353_I\ : apex20ke_lcell 
-- Equation(s):
-- \op_6~353\ = (!\op_5~13\ & !\op_5~11\ & !\op_5~12\ & !\op_5~10\) & CASCADE(\op_1~155\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \op_5~13\,
	datab => \op_5~11\,
	datac => \op_5~12\,
	datad => \op_5~10\,
	cascin => \op_1~155\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \op_6~353\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	alt_synch_counter_7 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	inst40_0 : IN std_logic;
	data_error : IN std_logic;
	clk_en : IN std_logic;
	inst40_1 : IN std_logic;
	inst40_2 : IN std_logic;
	inst40_3 : IN std_logic;
	inst40_4 : IN std_logic;
	inst40_5 : IN std_logic;
	inst40_6 : IN std_logic;
	inst40_7 : IN std_logic;
	inst40_8 : IN std_logic;
	inst40_9 : IN std_logic;
	inst40_10 : IN std_logic;
	inst40_11 : IN std_logic;
	inst40_12 : IN std_logic;
	inst40_13 : IN std_logic;
	inst40_14 : IN std_logic;
	inst40_15 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q_15 : OUT std_logic;
	q_14 : OUT std_logic;
	q_13 : OUT std_logic;
	q_12 : OUT std_logic;
	q_11 : OUT std_logic;
	q_10 : OUT std_logic;
	q_9 : OUT std_logic;
	q_8 : OUT std_logic;
	q_7 : OUT std_logic;
	q_6 : OUT std_logic;
	q_5 : OUT std_logic;
	q_4 : OUT std_logic;
	q_3 : OUT std_logic;
	q_2 : OUT std_logic;
	q_1 : OUT std_logic;
	q_0 : OUT std_logic
	);
END alt_synch_counter_7;

ARCHITECTURE structure OF alt_synch_counter_7 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_inst40_0 : std_logic;
SIGNAL ww_data_error : std_logic;
SIGNAL ww_clk_en : std_logic;
SIGNAL ww_inst40_1 : std_logic;
SIGNAL ww_inst40_2 : std_logic;
SIGNAL ww_inst40_3 : std_logic;
SIGNAL ww_inst40_4 : std_logic;
SIGNAL ww_inst40_5 : std_logic;
SIGNAL ww_inst40_6 : std_logic;
SIGNAL ww_inst40_7 : std_logic;
SIGNAL ww_inst40_8 : std_logic;
SIGNAL ww_inst40_9 : std_logic;
SIGNAL ww_inst40_10 : std_logic;
SIGNAL ww_inst40_11 : std_logic;
SIGNAL ww_inst40_12 : std_logic;
SIGNAL ww_inst40_13 : std_logic;
SIGNAL ww_inst40_14 : std_logic;
SIGNAL ww_inst40_15 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_q_15 : std_logic;
SIGNAL ww_q_14 : std_logic;
SIGNAL ww_q_13 : std_logic;
SIGNAL ww_q_12 : std_logic;
SIGNAL ww_q_11 : std_logic;
SIGNAL ww_q_10 : std_logic;
SIGNAL ww_q_9 : std_logic;
SIGNAL ww_q_8 : std_logic;
SIGNAL ww_q_7 : std_logic;
SIGNAL ww_q_6 : std_logic;
SIGNAL ww_q_5 : std_logic;
SIGNAL ww_q_4 : std_logic;
SIGNAL ww_q_3 : std_logic;
SIGNAL ww_q_2 : std_logic;
SIGNAL ww_q_1 : std_logic;
SIGNAL ww_q_0 : std_logic;
SIGNAL \counter_cell[14]~COUT\ : std_logic;
SIGNAL \counter_cell[13]~COUT\ : std_logic;
SIGNAL \counter_cell[12]~COUT\ : std_logic;
SIGNAL \counter_cell[11]~COUT\ : std_logic;
SIGNAL \counter_cell[10]~COUT\ : std_logic;
SIGNAL \counter_cell[9]~COUT\ : std_logic;
SIGNAL \counter_cell[8]~COUT\ : std_logic;
SIGNAL \counter_cell[7]~COUT\ : std_logic;
SIGNAL \counter_cell[6]~COUT\ : std_logic;
SIGNAL \counter_cell[5]~COUT\ : std_logic;
SIGNAL \counter_cell[4]~COUT\ : std_logic;
SIGNAL \counter_cell[3]~COUT\ : std_logic;
SIGNAL \counter_cell[2]~COUT\ : std_logic;
SIGNAL \counter_cell[1]~COUT\ : std_logic;
SIGNAL \counter_cell[0]~COUT\ : std_logic;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_inst40_0 <= inst40_0;
ww_data_error <= data_error;
ww_clk_en <= clk_en;
ww_inst40_1 <= inst40_1;
ww_inst40_2 <= inst40_2;
ww_inst40_3 <= inst40_3;
ww_inst40_4 <= inst40_4;
ww_inst40_5 <= inst40_5;
ww_inst40_6 <= inst40_6;
ww_inst40_7 <= inst40_7;
ww_inst40_8 <= inst40_8;
ww_inst40_9 <= inst40_9;
ww_inst40_10 <= inst40_10;
ww_inst40_11 <= inst40_11;
ww_inst40_12 <= inst40_12;
ww_inst40_13 <= inst40_13;
ww_inst40_14 <= inst40_14;
ww_inst40_15 <= inst40_15;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
q_15 <= ww_q_15;
q_14 <= ww_q_14;
q_13 <= ww_q_13;
q_12 <= ww_q_12;
q_11 <= ww_q_11;
q_10 <= ww_q_10;
q_9 <= ww_q_9;
q_8 <= ww_q_8;
q_7 <= ww_q_7;
q_6 <= ww_q_6;
q_5 <= ww_q_5;
q_4 <= ww_q_4;
q_3 <= ww_q_3;
q_2 <= ww_q_2;
q_1 <= ww_q_1;
q_0 <= ww_q_0;

\counter_cell[15]\ : apex20ke_lcell 
-- Equation(s):
-- q_15 = DFFE((data_error & \inst40[15]\) # (!data_error & q_15 $ \counter_cell[14]~COUT\), GLOBAL(outclock0), !buf_res, , inst5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_15,
	datac => ww_inst40_15,
	cin => \counter_cell[14]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	sload => ww_data_error,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_q_15);

\counter_cell[14]\ : apex20ke_lcell 
-- Equation(s):
-- q_14 = DFFE((data_error & \inst40[14]\) # (!data_error & q_14 $ !\counter_cell[13]~COUT\), GLOBAL(outclock0), !buf_res, , inst5)
-- \counter_cell[14]~COUT\ = CARRY(q_14 & !\counter_cell[13]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_q_14,
	datac => ww_inst40_14,
	cin => \counter_cell[13]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	sload => ww_data_error,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_q_14,
	cout => \counter_cell[14]~COUT\);

\counter_cell[13]\ : apex20ke_lcell 
-- Equation(s):
-- q_13 = DFFE((data_error & \inst40[13]\) # (!data_error & q_13 $ \counter_cell[12]~COUT\), GLOBAL(outclock0), !buf_res, , inst5)
-- \counter_cell[13]~COUT\ = CARRY(!\counter_cell[12]~COUT\ # !q_13)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_13,
	datac => ww_inst40_13,
	cin => \counter_cell[12]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	sload => ww_data_error,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_q_13,
	cout => \counter_cell[13]~COUT\);

\counter_cell[12]\ : apex20ke_lcell 
-- Equation(s):
-- q_12 = DFFE((data_error & \inst40[12]\) # (!data_error & q_12 $ !\counter_cell[11]~COUT\), GLOBAL(outclock0), !buf_res, , inst5)
-- \counter_cell[12]~COUT\ = CARRY(q_12 & !\counter_cell[11]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_12,
	datac => ww_inst40_12,
	cin => \counter_cell[11]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	sload => ww_data_error,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_q_12,
	cout => \counter_cell[12]~COUT\);

\counter_cell[11]\ : apex20ke_lcell 
-- Equation(s):
-- q_11 = DFFE((data_error & \inst40[11]\) # (!data_error & q_11 $ \counter_cell[10]~COUT\), GLOBAL(outclock0), !buf_res, , inst5)
-- \counter_cell[11]~COUT\ = CARRY(!\counter_cell[10]~COUT\ # !q_11)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_q_11,
	datac => ww_inst40_11,
	cin => \counter_cell[10]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	sload => ww_data_error,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_q_11,
	cout => \counter_cell[11]~COUT\);

\counter_cell[10]\ : apex20ke_lcell 
-- Equation(s):
-- q_10 = DFFE((data_error & \inst40[10]\) # (!data_error & q_10 $ !\counter_cell[9]~COUT\), GLOBAL(outclock0), !buf_res, , inst5)
-- \counter_cell[10]~COUT\ = CARRY(q_10 & !\counter_cell[9]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_q_10,
	datac => ww_inst40_10,
	cin => \counter_cell[9]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	sload => ww_data_error,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_q_10,
	cout => \counter_cell[10]~COUT\);

\counter_cell[9]\ : apex20ke_lcell 
-- Equation(s):
-- q_9 = DFFE((data_error & \inst40[9]\) # (!data_error & q_9 $ \counter_cell[8]~COUT\), GLOBAL(outclock0), !buf_res, , inst5)
-- \counter_cell[9]~COUT\ = CARRY(!\counter_cell[8]~COUT\ # !q_9)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_9,
	datac => ww_inst40_9,
	cin => \counter_cell[8]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	sload => ww_data_error,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_q_9,
	cout => \counter_cell[9]~COUT\);

\counter_cell[8]\ : apex20ke_lcell 
-- Equation(s):
-- q_8 = DFFE((data_error & \inst40[8]\) # (!data_error & q_8 $ !\counter_cell[7]~COUT\), GLOBAL(outclock0), !buf_res, , inst5)
-- \counter_cell[8]~COUT\ = CARRY(q_8 & !\counter_cell[7]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_8,
	datac => ww_inst40_8,
	cin => \counter_cell[7]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	sload => ww_data_error,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_q_8,
	cout => \counter_cell[8]~COUT\);

\counter_cell[7]\ : apex20ke_lcell 
-- Equation(s):
-- q_7 = DFFE((data_error & \inst40[7]\) # (!data_error & q_7 $ \counter_cell[6]~COUT\), GLOBAL(outclock0), !buf_res, , inst5)
-- \counter_cell[7]~COUT\ = CARRY(!\counter_cell[6]~COUT\ # !q_7)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_q_7,
	datac => ww_inst40_7,
	cin => \counter_cell[6]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	sload => ww_data_error,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_q_7,
	cout => \counter_cell[7]~COUT\);

\counter_cell[6]\ : apex20ke_lcell 
-- Equation(s):
-- q_6 = DFFE((data_error & \inst40[6]\) # (!data_error & q_6 $ !\counter_cell[5]~COUT\), GLOBAL(outclock0), !buf_res, , inst5)
-- \counter_cell[6]~COUT\ = CARRY(q_6 & !\counter_cell[5]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_q_6,
	datac => ww_inst40_6,
	cin => \counter_cell[5]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	sload => ww_data_error,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_q_6,
	cout => \counter_cell[6]~COUT\);

\counter_cell[5]\ : apex20ke_lcell 
-- Equation(s):
-- q_5 = DFFE((data_error & \inst40[5]\) # (!data_error & q_5 $ \counter_cell[4]~COUT\), GLOBAL(outclock0), !buf_res, , inst5)
-- \counter_cell[5]~COUT\ = CARRY(!\counter_cell[4]~COUT\ # !q_5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_q_5,
	datac => ww_inst40_5,
	cin => \counter_cell[4]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	sload => ww_data_error,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_q_5,
	cout => \counter_cell[5]~COUT\);

\counter_cell[4]\ : apex20ke_lcell 
-- Equation(s):
-- q_4 = DFFE((data_error & \inst40[4]\) # (!data_error & q_4 $ !\counter_cell[3]~COUT\), GLOBAL(outclock0), !buf_res, , inst5)
-- \counter_cell[4]~COUT\ = CARRY(q_4 & !\counter_cell[3]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_q_4,
	datac => ww_inst40_4,
	cin => \counter_cell[3]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	sload => ww_data_error,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_q_4,
	cout => \counter_cell[4]~COUT\);

\counter_cell[3]\ : apex20ke_lcell 
-- Equation(s):
-- q_3 = DFFE((data_error & \inst40[3]\) # (!data_error & q_3 $ \counter_cell[2]~COUT\), GLOBAL(outclock0), !buf_res, , inst5)
-- \counter_cell[3]~COUT\ = CARRY(!\counter_cell[2]~COUT\ # !q_3)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_q_3,
	datac => ww_inst40_3,
	cin => \counter_cell[2]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	sload => ww_data_error,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_q_3,
	cout => \counter_cell[3]~COUT\);

\counter_cell[2]\ : apex20ke_lcell 
-- Equation(s):
-- q_2 = DFFE((data_error & \inst40[2]\) # (!data_error & q_2 $ !\counter_cell[1]~COUT\), GLOBAL(outclock0), !buf_res, , inst5)
-- \counter_cell[2]~COUT\ = CARRY(q_2 & !\counter_cell[1]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_2,
	datac => ww_inst40_2,
	cin => \counter_cell[1]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	sload => ww_data_error,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_q_2,
	cout => \counter_cell[2]~COUT\);

\counter_cell[1]\ : apex20ke_lcell 
-- Equation(s):
-- q_1 = DFFE((data_error & \inst40[1]\) # (!data_error & q_1 $ \counter_cell[0]~COUT\), GLOBAL(outclock0), !buf_res, , inst5)
-- \counter_cell[1]~COUT\ = CARRY(!\counter_cell[0]~COUT\ # !q_1)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_q_1,
	datac => ww_inst40_1,
	cin => \counter_cell[0]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	sload => ww_data_error,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_q_1,
	cout => \counter_cell[1]~COUT\);

\counter_cell[0]\ : apex20ke_lcell 
-- Equation(s):
-- q_0 = DFFE((data_error & \inst40[0]\) # (!data_error & !q_0), GLOBAL(outclock0), !buf_res, , inst5)
-- \counter_cell[0]~COUT\ = CARRY(q_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "qfbk_counter",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_inst40_0,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	sload => ww_data_error,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_q_0,
	cout => \counter_cell[0]~COUT\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_counter_7 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	inst40_0 : IN std_logic;
	data_error : IN std_logic;
	clk_en : IN std_logic;
	inst40_1 : IN std_logic;
	inst40_2 : IN std_logic;
	inst40_3 : IN std_logic;
	inst40_4 : IN std_logic;
	inst40_5 : IN std_logic;
	inst40_6 : IN std_logic;
	inst40_7 : IN std_logic;
	inst40_8 : IN std_logic;
	inst40_9 : IN std_logic;
	inst40_10 : IN std_logic;
	inst40_11 : IN std_logic;
	inst40_12 : IN std_logic;
	inst40_13 : IN std_logic;
	inst40_14 : IN std_logic;
	inst40_15 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q_15 : OUT std_logic;
	q_14 : OUT std_logic;
	q_13 : OUT std_logic;
	q_12 : OUT std_logic;
	q_11 : OUT std_logic;
	q_10 : OUT std_logic;
	q_9 : OUT std_logic;
	q_8 : OUT std_logic;
	q_7 : OUT std_logic;
	q_6 : OUT std_logic;
	q_5 : OUT std_logic;
	q_4 : OUT std_logic;
	q_3 : OUT std_logic;
	q_2 : OUT std_logic;
	q_1 : OUT std_logic;
	q_0 : OUT std_logic
	);
END lpm_counter_7;

ARCHITECTURE structure OF lpm_counter_7 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_inst40_0 : std_logic;
SIGNAL ww_data_error : std_logic;
SIGNAL ww_clk_en : std_logic;
SIGNAL ww_inst40_1 : std_logic;
SIGNAL ww_inst40_2 : std_logic;
SIGNAL ww_inst40_3 : std_logic;
SIGNAL ww_inst40_4 : std_logic;
SIGNAL ww_inst40_5 : std_logic;
SIGNAL ww_inst40_6 : std_logic;
SIGNAL ww_inst40_7 : std_logic;
SIGNAL ww_inst40_8 : std_logic;
SIGNAL ww_inst40_9 : std_logic;
SIGNAL ww_inst40_10 : std_logic;
SIGNAL ww_inst40_11 : std_logic;
SIGNAL ww_inst40_12 : std_logic;
SIGNAL ww_inst40_13 : std_logic;
SIGNAL ww_inst40_14 : std_logic;
SIGNAL ww_inst40_15 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_q_15 : std_logic;
SIGNAL ww_q_14 : std_logic;
SIGNAL ww_q_13 : std_logic;
SIGNAL ww_q_12 : std_logic;
SIGNAL ww_q_11 : std_logic;
SIGNAL ww_q_10 : std_logic;
SIGNAL ww_q_9 : std_logic;
SIGNAL ww_q_8 : std_logic;
SIGNAL ww_q_7 : std_logic;
SIGNAL ww_q_6 : std_logic;
SIGNAL ww_q_5 : std_logic;
SIGNAL ww_q_4 : std_logic;
SIGNAL ww_q_3 : std_logic;
SIGNAL ww_q_2 : std_logic;
SIGNAL ww_q_1 : std_logic;
SIGNAL ww_q_0 : std_logic;

COMPONENT alt_synch_counter_7
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	inst40_0 : IN std_logic;
	data_error : IN std_logic;
	clk_en : IN std_logic;
	inst40_1 : IN std_logic;
	inst40_2 : IN std_logic;
	inst40_3 : IN std_logic;
	inst40_4 : IN std_logic;
	inst40_5 : IN std_logic;
	inst40_6 : IN std_logic;
	inst40_7 : IN std_logic;
	inst40_8 : IN std_logic;
	inst40_9 : IN std_logic;
	inst40_10 : IN std_logic;
	inst40_11 : IN std_logic;
	inst40_12 : IN std_logic;
	inst40_13 : IN std_logic;
	inst40_14 : IN std_logic;
	inst40_15 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q_15 : OUT std_logic;
	q_14 : OUT std_logic;
	q_13 : OUT std_logic;
	q_12 : OUT std_logic;
	q_11 : OUT std_logic;
	q_10 : OUT std_logic;
	q_9 : OUT std_logic;
	q_8 : OUT std_logic;
	q_7 : OUT std_logic;
	q_6 : OUT std_logic;
	q_5 : OUT std_logic;
	q_4 : OUT std_logic;
	q_3 : OUT std_logic;
	q_2 : OUT std_logic;
	q_1 : OUT std_logic;
	q_0 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_inst40_0 <= inst40_0;
ww_data_error <= data_error;
ww_clk_en <= clk_en;
ww_inst40_1 <= inst40_1;
ww_inst40_2 <= inst40_2;
ww_inst40_3 <= inst40_3;
ww_inst40_4 <= inst40_4;
ww_inst40_5 <= inst40_5;
ww_inst40_6 <= inst40_6;
ww_inst40_7 <= inst40_7;
ww_inst40_8 <= inst40_8;
ww_inst40_9 <= inst40_9;
ww_inst40_10 <= inst40_10;
ww_inst40_11 <= inst40_11;
ww_inst40_12 <= inst40_12;
ww_inst40_13 <= inst40_13;
ww_inst40_14 <= inst40_14;
ww_inst40_15 <= inst40_15;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
q_15 <= ww_q_15;
q_14 <= ww_q_14;
q_13 <= ww_q_13;
q_12 <= ww_q_12;
q_11 <= ww_q_11;
q_10 <= ww_q_10;
q_9 <= ww_q_9;
q_8 <= ww_q_8;
q_7 <= ww_q_7;
q_6 <= ww_q_6;
q_5 <= ww_q_5;
q_4 <= ww_q_4;
q_3 <= ww_q_3;
q_2 <= ww_q_2;
q_1 <= ww_q_1;
q_0 <= ww_q_0;
wysi_counter : alt_synch_counter_7
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	inst40_0 => ww_inst40_0,
	data_error => ww_data_error,
	clk_en => ww_clk_en,
	inst40_1 => ww_inst40_1,
	inst40_2 => ww_inst40_2,
	inst40_3 => ww_inst40_3,
	inst40_4 => ww_inst40_4,
	inst40_5 => ww_inst40_5,
	inst40_6 => ww_inst40_6,
	inst40_7 => ww_inst40_7,
	inst40_8 => ww_inst40_8,
	inst40_9 => ww_inst40_9,
	inst40_10 => ww_inst40_10,
	inst40_11 => ww_inst40_11,
	inst40_12 => ww_inst40_12,
	inst40_13 => ww_inst40_13,
	inst40_14 => ww_inst40_14,
	inst40_15 => ww_inst40_15,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	q_15 => ww_q_15,
	q_14 => ww_q_14,
	q_13 => ww_q_13,
	q_12 => ww_q_12,
	q_11 => ww_q_11,
	q_10 => ww_q_10,
	q_9 => ww_q_9,
	q_8 => ww_q_8,
	q_7 => ww_q_7,
	q_6 => ww_q_6,
	q_5 => ww_q_5,
	q_4 => ww_q_4,
	q_3 => ww_q_3,
	q_2 => ww_q_2,
	q_1 => ww_q_1,
	q_0 => ww_q_0);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	rx_dpr_wadr_ct IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	inst40_0 : IN std_logic;
	data_error : IN std_logic;
	clk_en : IN std_logic;
	inst40_1 : IN std_logic;
	inst40_2 : IN std_logic;
	inst40_3 : IN std_logic;
	inst40_4 : IN std_logic;
	inst40_5 : IN std_logic;
	inst40_6 : IN std_logic;
	inst40_7 : IN std_logic;
	inst40_8 : IN std_logic;
	inst40_9 : IN std_logic;
	inst40_10 : IN std_logic;
	inst40_11 : IN std_logic;
	inst40_12 : IN std_logic;
	inst40_13 : IN std_logic;
	inst40_14 : IN std_logic;
	inst40_15 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q_15 : OUT std_logic;
	q_14 : OUT std_logic;
	q_13 : OUT std_logic;
	q_12 : OUT std_logic;
	q_11 : OUT std_logic;
	q_10 : OUT std_logic;
	q_9 : OUT std_logic;
	q_8 : OUT std_logic;
	q_7 : OUT std_logic;
	q_6 : OUT std_logic;
	q_5 : OUT std_logic;
	q_4 : OUT std_logic;
	q_3 : OUT std_logic;
	q_2 : OUT std_logic;
	q_1 : OUT std_logic;
	q_0 : OUT std_logic
	);
END rx_dpr_wadr_ct;

ARCHITECTURE structure OF rx_dpr_wadr_ct IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_inst40_0 : std_logic;
SIGNAL ww_data_error : std_logic;
SIGNAL ww_clk_en : std_logic;
SIGNAL ww_inst40_1 : std_logic;
SIGNAL ww_inst40_2 : std_logic;
SIGNAL ww_inst40_3 : std_logic;
SIGNAL ww_inst40_4 : std_logic;
SIGNAL ww_inst40_5 : std_logic;
SIGNAL ww_inst40_6 : std_logic;
SIGNAL ww_inst40_7 : std_logic;
SIGNAL ww_inst40_8 : std_logic;
SIGNAL ww_inst40_9 : std_logic;
SIGNAL ww_inst40_10 : std_logic;
SIGNAL ww_inst40_11 : std_logic;
SIGNAL ww_inst40_12 : std_logic;
SIGNAL ww_inst40_13 : std_logic;
SIGNAL ww_inst40_14 : std_logic;
SIGNAL ww_inst40_15 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_q_15 : std_logic;
SIGNAL ww_q_14 : std_logic;
SIGNAL ww_q_13 : std_logic;
SIGNAL ww_q_12 : std_logic;
SIGNAL ww_q_11 : std_logic;
SIGNAL ww_q_10 : std_logic;
SIGNAL ww_q_9 : std_logic;
SIGNAL ww_q_8 : std_logic;
SIGNAL ww_q_7 : std_logic;
SIGNAL ww_q_6 : std_logic;
SIGNAL ww_q_5 : std_logic;
SIGNAL ww_q_4 : std_logic;
SIGNAL ww_q_3 : std_logic;
SIGNAL ww_q_2 : std_logic;
SIGNAL ww_q_1 : std_logic;
SIGNAL ww_q_0 : std_logic;

COMPONENT lpm_counter_7
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	inst40_0 : IN std_logic;
	data_error : IN std_logic;
	clk_en : IN std_logic;
	inst40_1 : IN std_logic;
	inst40_2 : IN std_logic;
	inst40_3 : IN std_logic;
	inst40_4 : IN std_logic;
	inst40_5 : IN std_logic;
	inst40_6 : IN std_logic;
	inst40_7 : IN std_logic;
	inst40_8 : IN std_logic;
	inst40_9 : IN std_logic;
	inst40_10 : IN std_logic;
	inst40_11 : IN std_logic;
	inst40_12 : IN std_logic;
	inst40_13 : IN std_logic;
	inst40_14 : IN std_logic;
	inst40_15 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q_15 : OUT std_logic;
	q_14 : OUT std_logic;
	q_13 : OUT std_logic;
	q_12 : OUT std_logic;
	q_11 : OUT std_logic;
	q_10 : OUT std_logic;
	q_9 : OUT std_logic;
	q_8 : OUT std_logic;
	q_7 : OUT std_logic;
	q_6 : OUT std_logic;
	q_5 : OUT std_logic;
	q_4 : OUT std_logic;
	q_3 : OUT std_logic;
	q_2 : OUT std_logic;
	q_1 : OUT std_logic;
	q_0 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_inst40_0 <= inst40_0;
ww_data_error <= data_error;
ww_clk_en <= clk_en;
ww_inst40_1 <= inst40_1;
ww_inst40_2 <= inst40_2;
ww_inst40_3 <= inst40_3;
ww_inst40_4 <= inst40_4;
ww_inst40_5 <= inst40_5;
ww_inst40_6 <= inst40_6;
ww_inst40_7 <= inst40_7;
ww_inst40_8 <= inst40_8;
ww_inst40_9 <= inst40_9;
ww_inst40_10 <= inst40_10;
ww_inst40_11 <= inst40_11;
ww_inst40_12 <= inst40_12;
ww_inst40_13 <= inst40_13;
ww_inst40_14 <= inst40_14;
ww_inst40_15 <= inst40_15;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
q_15 <= ww_q_15;
q_14 <= ww_q_14;
q_13 <= ww_q_13;
q_12 <= ww_q_12;
q_11 <= ww_q_11;
q_10 <= ww_q_10;
q_9 <= ww_q_9;
q_8 <= ww_q_8;
q_7 <= ww_q_7;
q_6 <= ww_q_6;
q_5 <= ww_q_5;
q_4 <= ww_q_4;
q_3 <= ww_q_3;
q_2 <= ww_q_2;
q_1 <= ww_q_1;
q_0 <= ww_q_0;
lpm_counter_component : lpm_counter_7
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	inst40_0 => ww_inst40_0,
	data_error => ww_data_error,
	clk_en => ww_clk_en,
	inst40_1 => ww_inst40_1,
	inst40_2 => ww_inst40_2,
	inst40_3 => ww_inst40_3,
	inst40_4 => ww_inst40_4,
	inst40_5 => ww_inst40_5,
	inst40_6 => ww_inst40_6,
	inst40_7 => ww_inst40_7,
	inst40_8 => ww_inst40_8,
	inst40_9 => ww_inst40_9,
	inst40_10 => ww_inst40_10,
	inst40_11 => ww_inst40_11,
	inst40_12 => ww_inst40_12,
	inst40_13 => ww_inst40_13,
	inst40_14 => ww_inst40_14,
	inst40_15 => ww_inst40_15,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	q_15 => ww_q_15,
	q_14 => ww_q_14,
	q_13 => ww_q_13,
	q_12 => ww_q_12,
	q_11 => ww_q_11,
	q_10 => ww_q_10,
	q_9 => ww_q_9,
	q_8 => ww_q_8,
	q_7 => ww_q_7,
	q_6 => ww_q_6,
	q_5 => ww_q_5,
	q_4 => ww_q_4,
	q_3 => ww_q_3,
	q_2 => ww_q_2,
	q_1 => ww_q_1,
	q_0 => ww_q_0);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_or_4 IS
    PORT (
	sload_path_0 : IN std_logic;
	pre_out_1 : IN std_logic;
	pre_out_2 : IN std_logic;
	pre_out_3 : IN std_logic;
	pre_out_4 : IN std_logic;
	pre_out_5 : IN std_logic;
	pre_out_6 : IN std_logic;
	pre_out_7 : IN std_logic;
	pre_out_8 : IN std_logic;
	pre_out_9 : IN std_logic;
	pre_out_10 : IN std_logic;
	pre_out_11 : IN std_logic;
	pre_out_12 : IN std_logic;
	pre_out_13 : IN std_logic;
	pre_out_14 : IN std_logic;
	pre_out_15 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	last_node_0 : OUT std_logic
	);
END lpm_or_4;

ARCHITECTURE structure OF lpm_or_4 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_pre_out_1 : std_logic;
SIGNAL ww_pre_out_2 : std_logic;
SIGNAL ww_pre_out_3 : std_logic;
SIGNAL ww_pre_out_4 : std_logic;
SIGNAL ww_pre_out_5 : std_logic;
SIGNAL ww_pre_out_6 : std_logic;
SIGNAL ww_pre_out_7 : std_logic;
SIGNAL ww_pre_out_8 : std_logic;
SIGNAL ww_pre_out_9 : std_logic;
SIGNAL ww_pre_out_10 : std_logic;
SIGNAL ww_pre_out_11 : std_logic;
SIGNAL ww_pre_out_12 : std_logic;
SIGNAL ww_pre_out_13 : std_logic;
SIGNAL ww_pre_out_14 : std_logic;
SIGNAL ww_pre_out_15 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_last_node_0 : std_logic;
SIGNAL \or_node[0][6]~134\ : std_logic;
SIGNAL \or_node[0][5]~135\ : std_logic;
SIGNAL \or_node[0][4]~136\ : std_logic;
SIGNAL \or_node[0][3]~137\ : std_logic;
SIGNAL \or_node[0][2]~138\ : std_logic;
SIGNAL \or_node[0][1]~139\ : std_logic;
SIGNAL \or_node[0][0]~140\ : std_logic;
SIGNAL \or_node[0][0]\ : std_logic;
SIGNAL \or_node[0][1]\ : std_logic;
SIGNAL \or_node[0][2]\ : std_logic;
SIGNAL \or_node[0][3]\ : std_logic;
SIGNAL \or_node[0][4]\ : std_logic;
SIGNAL \or_node[0][5]\ : std_logic;
SIGNAL \or_node[0][6]\ : std_logic;

BEGIN

ww_sload_path_0 <= sload_path_0;
ww_pre_out_1 <= pre_out_1;
ww_pre_out_2 <= pre_out_2;
ww_pre_out_3 <= pre_out_3;
ww_pre_out_4 <= pre_out_4;
ww_pre_out_5 <= pre_out_5;
ww_pre_out_6 <= pre_out_6;
ww_pre_out_7 <= pre_out_7;
ww_pre_out_8 <= pre_out_8;
ww_pre_out_9 <= pre_out_9;
ww_pre_out_10 <= pre_out_10;
ww_pre_out_11 <= pre_out_11;
ww_pre_out_12 <= pre_out_12;
ww_pre_out_13 <= pre_out_13;
ww_pre_out_14 <= pre_out_14;
ww_pre_out_15 <= pre_out_15;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
last_node_0 <= ww_last_node_0;

\last_node[0]~15_I\ : apex20ke_lcell 
-- Equation(s):
-- last_node_0 = pre_out_15 # \or_node[0][6]\ # pre_out_14

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "FFFC",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => ww_pre_out_15,
	datad => ww_pre_out_14,
	cin => \or_node[0][6]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_last_node_0);

\or_node[0][0]~140_I\ : apex20ke_lcell 
-- Equation(s):
-- \or_node[0][0]\ = CARRY(pre_out_1 # sload_path_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "00EE",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_1,
	datab => ww_sload_path_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \or_node[0][0]\);

\or_node[0][1]~139_I\ : apex20ke_lcell 
-- Equation(s):
-- \or_node[0][1]\ = CARRY(!pre_out_3 & !pre_out_2 & !\or_node[0][0]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_3,
	datab => ww_pre_out_2,
	cin => \or_node[0][0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \or_node[0][1]\);

\or_node[0][2]~138_I\ : apex20ke_lcell 
-- Equation(s):
-- \or_node[0][2]\ = CARRY(pre_out_5 # pre_out_4 # !\or_node[0][1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "00EF",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_5,
	datab => ww_pre_out_4,
	cin => \or_node[0][1]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \or_node[0][2]\);

\or_node[0][3]~137_I\ : apex20ke_lcell 
-- Equation(s):
-- \or_node[0][3]\ = CARRY(!pre_out_7 & !pre_out_6 & !\or_node[0][2]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_7,
	datab => ww_pre_out_6,
	cin => \or_node[0][2]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \or_node[0][3]\);

\or_node[0][4]~136_I\ : apex20ke_lcell 
-- Equation(s):
-- \or_node[0][4]\ = CARRY(pre_out_9 # pre_out_8 # !\or_node[0][3]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "00EF",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_9,
	datab => ww_pre_out_8,
	cin => \or_node[0][3]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \or_node[0][4]\);

\or_node[0][5]~135_I\ : apex20ke_lcell 
-- Equation(s):
-- \or_node[0][5]\ = CARRY(!pre_out_11 & !pre_out_10 & !\or_node[0][4]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_11,
	datab => ww_pre_out_10,
	cin => \or_node[0][4]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \or_node[0][5]\);

\or_node[0][6]~134_I\ : apex20ke_lcell 
-- Equation(s):
-- \or_node[0][6]\ = CARRY(pre_out_13 # pre_out_12 # !\or_node[0][5]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "00EF",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_13,
	datab => ww_pre_out_12,
	cin => \or_node[0][5]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \or_node[0][6]\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	my_or16b IS
    PORT (
	sload_path_0 : IN std_logic;
	pre_out_1 : IN std_logic;
	pre_out_2 : IN std_logic;
	pre_out_3 : IN std_logic;
	pre_out_4 : IN std_logic;
	pre_out_5 : IN std_logic;
	pre_out_6 : IN std_logic;
	pre_out_7 : IN std_logic;
	pre_out_8 : IN std_logic;
	pre_out_9 : IN std_logic;
	pre_out_10 : IN std_logic;
	pre_out_11 : IN std_logic;
	pre_out_12 : IN std_logic;
	pre_out_13 : IN std_logic;
	pre_out_14 : IN std_logic;
	pre_out_15 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	last_node_0 : OUT std_logic
	);
END my_or16b;

ARCHITECTURE structure OF my_or16b IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_pre_out_1 : std_logic;
SIGNAL ww_pre_out_2 : std_logic;
SIGNAL ww_pre_out_3 : std_logic;
SIGNAL ww_pre_out_4 : std_logic;
SIGNAL ww_pre_out_5 : std_logic;
SIGNAL ww_pre_out_6 : std_logic;
SIGNAL ww_pre_out_7 : std_logic;
SIGNAL ww_pre_out_8 : std_logic;
SIGNAL ww_pre_out_9 : std_logic;
SIGNAL ww_pre_out_10 : std_logic;
SIGNAL ww_pre_out_11 : std_logic;
SIGNAL ww_pre_out_12 : std_logic;
SIGNAL ww_pre_out_13 : std_logic;
SIGNAL ww_pre_out_14 : std_logic;
SIGNAL ww_pre_out_15 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_last_node_0 : std_logic;

COMPONENT lpm_or_4
    PORT (
	sload_path_0 : IN std_logic;
	pre_out_1 : IN std_logic;
	pre_out_2 : IN std_logic;
	pre_out_3 : IN std_logic;
	pre_out_4 : IN std_logic;
	pre_out_5 : IN std_logic;
	pre_out_6 : IN std_logic;
	pre_out_7 : IN std_logic;
	pre_out_8 : IN std_logic;
	pre_out_9 : IN std_logic;
	pre_out_10 : IN std_logic;
	pre_out_11 : IN std_logic;
	pre_out_12 : IN std_logic;
	pre_out_13 : IN std_logic;
	pre_out_14 : IN std_logic;
	pre_out_15 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	last_node_0 : OUT std_logic);
END COMPONENT;

BEGIN

ww_sload_path_0 <= sload_path_0;
ww_pre_out_1 <= pre_out_1;
ww_pre_out_2 <= pre_out_2;
ww_pre_out_3 <= pre_out_3;
ww_pre_out_4 <= pre_out_4;
ww_pre_out_5 <= pre_out_5;
ww_pre_out_6 <= pre_out_6;
ww_pre_out_7 <= pre_out_7;
ww_pre_out_8 <= pre_out_8;
ww_pre_out_9 <= pre_out_9;
ww_pre_out_10 <= pre_out_10;
ww_pre_out_11 <= pre_out_11;
ww_pre_out_12 <= pre_out_12;
ww_pre_out_13 <= pre_out_13;
ww_pre_out_14 <= pre_out_14;
ww_pre_out_15 <= pre_out_15;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
last_node_0 <= ww_last_node_0;
lpm_or_component : lpm_or_4
PORT MAP (
	sload_path_0 => ww_sload_path_0,
	pre_out_1 => ww_pre_out_1,
	pre_out_2 => ww_pre_out_2,
	pre_out_3 => ww_pre_out_3,
	pre_out_4 => ww_pre_out_4,
	pre_out_5 => ww_pre_out_5,
	pre_out_6 => ww_pre_out_6,
	pre_out_7 => ww_pre_out_7,
	pre_out_8 => ww_pre_out_8,
	pre_out_9 => ww_pre_out_9,
	pre_out_10 => ww_pre_out_10,
	pre_out_11 => ww_pre_out_11,
	pre_out_12 => ww_pre_out_12,
	pre_out_13 => ww_pre_out_13,
	pre_out_14 => ww_pre_out_14,
	pre_out_15 => ww_pre_out_15,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	last_node_0 => ww_last_node_0);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	alt_synch_counter_8 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	updown : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_0 : OUT std_logic;
	pre_out_1 : OUT std_logic;
	pre_out_2 : OUT std_logic;
	pre_out_3 : OUT std_logic;
	pre_out_4 : OUT std_logic;
	pre_out_5 : OUT std_logic;
	pre_out_6 : OUT std_logic;
	pre_out_7 : OUT std_logic;
	pre_out_8 : OUT std_logic;
	pre_out_9 : OUT std_logic;
	pre_out_10 : OUT std_logic;
	pre_out_11 : OUT std_logic;
	pre_out_12 : OUT std_logic;
	pre_out_13 : OUT std_logic;
	pre_out_14 : OUT std_logic;
	pre_out_15 : OUT std_logic
	);
END alt_synch_counter_8;

ARCHITECTURE structure OF alt_synch_counter_8 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_updown : std_logic;
SIGNAL ww_clk_en : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_pre_out_1 : std_logic;
SIGNAL ww_pre_out_2 : std_logic;
SIGNAL ww_pre_out_3 : std_logic;
SIGNAL ww_pre_out_4 : std_logic;
SIGNAL ww_pre_out_5 : std_logic;
SIGNAL ww_pre_out_6 : std_logic;
SIGNAL ww_pre_out_7 : std_logic;
SIGNAL ww_pre_out_8 : std_logic;
SIGNAL ww_pre_out_9 : std_logic;
SIGNAL ww_pre_out_10 : std_logic;
SIGNAL ww_pre_out_11 : std_logic;
SIGNAL ww_pre_out_12 : std_logic;
SIGNAL ww_pre_out_13 : std_logic;
SIGNAL ww_pre_out_14 : std_logic;
SIGNAL ww_pre_out_15 : std_logic;
SIGNAL \the_carries[1]\ : std_logic;
SIGNAL \the_carries[2]\ : std_logic;
SIGNAL \the_carries[3]\ : std_logic;
SIGNAL \the_carries[4]\ : std_logic;
SIGNAL \the_carries[5]\ : std_logic;
SIGNAL \the_carries[6]\ : std_logic;
SIGNAL \the_carries[7]\ : std_logic;
SIGNAL \the_carries[8]\ : std_logic;
SIGNAL \the_carries[9]\ : std_logic;
SIGNAL \the_carries[10]\ : std_logic;
SIGNAL \the_carries[11]\ : std_logic;
SIGNAL \the_carries[12]\ : std_logic;
SIGNAL \the_carries[13]\ : std_logic;
SIGNAL \the_carries[14]\ : std_logic;
SIGNAL \the_carries[15]\ : std_logic;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_updown <= updown;
ww_clk_en <= clk_en;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_0 <= ww_sload_path_0;
pre_out_1 <= ww_pre_out_1;
pre_out_2 <= ww_pre_out_2;
pre_out_3 <= ww_pre_out_3;
pre_out_4 <= ww_pre_out_4;
pre_out_5 <= ww_pre_out_5;
pre_out_6 <= ww_pre_out_6;
pre_out_7 <= ww_pre_out_7;
pre_out_8 <= ww_pre_out_8;
pre_out_9 <= ww_pre_out_9;
pre_out_10 <= ww_pre_out_10;
pre_out_11 <= ww_pre_out_11;
pre_out_12 <= ww_pre_out_12;
pre_out_13 <= ww_pre_out_13;
pre_out_14 <= ww_pre_out_14;
pre_out_15 <= ww_pre_out_15;

lsb : apex20ke_lcell 
-- Equation(s):
-- sload_path_0 = DFFE(!sload_path_0, GLOBAL(outclock0), !buf_res, , inst22)
-- \the_carries[1]\ = CARRY(\inst36~29\ $ !sload_path_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "qfbk_counter",
	packed_mode => "false",
	lut_mask => "0FC3",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_updown,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_0,
	cout => \the_carries[1]\);

\$00006\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_1 = DFFE(pre_out_1 $ \the_carries[1]\, GLOBAL(outclock0), !buf_res, , inst22)
-- \the_carries[2]\ = CARRY(pre_out_1 $ \inst36~29\ # !\the_carries[1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A6F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_1,
	datab => ww_updown,
	cin => \the_carries[1]\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_1,
	cout => \the_carries[2]\);

\$00008\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_2 = DFFE(pre_out_2 $ !\the_carries[2]\, GLOBAL(outclock0), !buf_res, , inst22)
-- \the_carries[3]\ = CARRY(!\the_carries[2]\ & (pre_out_2 $ !\inst36~29\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A509",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_2,
	datab => ww_updown,
	cin => \the_carries[2]\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_2,
	cout => \the_carries[3]\);

\$00010\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_3 = DFFE(pre_out_3 $ \the_carries[3]\, GLOBAL(outclock0), !buf_res, , inst22)
-- \the_carries[4]\ = CARRY(pre_out_3 $ \inst36~29\ # !\the_carries[3]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A6F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_3,
	datab => ww_updown,
	cin => \the_carries[3]\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_3,
	cout => \the_carries[4]\);

\$00012\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_4 = DFFE(pre_out_4 $ !\the_carries[4]\, GLOBAL(outclock0), !buf_res, , inst22)
-- \the_carries[5]\ = CARRY(!\the_carries[4]\ & (pre_out_4 $ !\inst36~29\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A509",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_4,
	datab => ww_updown,
	cin => \the_carries[4]\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_4,
	cout => \the_carries[5]\);

\$00014\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_5 = DFFE(pre_out_5 $ \the_carries[5]\, GLOBAL(outclock0), !buf_res, , inst22)
-- \the_carries[6]\ = CARRY(pre_out_5 $ \inst36~29\ # !\the_carries[5]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A6F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_5,
	datab => ww_updown,
	cin => \the_carries[5]\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_5,
	cout => \the_carries[6]\);

\$00016\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_6 = DFFE(pre_out_6 $ !\the_carries[6]\, GLOBAL(outclock0), !buf_res, , inst22)
-- \the_carries[7]\ = CARRY(!\the_carries[6]\ & (pre_out_6 $ !\inst36~29\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A509",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_6,
	datab => ww_updown,
	cin => \the_carries[6]\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_6,
	cout => \the_carries[7]\);

\$00018\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_7 = DFFE(pre_out_7 $ \the_carries[7]\, GLOBAL(outclock0), !buf_res, , inst22)
-- \the_carries[8]\ = CARRY(pre_out_7 $ \inst36~29\ # !\the_carries[7]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A6F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_7,
	datab => ww_updown,
	cin => \the_carries[7]\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_7,
	cout => \the_carries[8]\);

\$00020\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_8 = DFFE(pre_out_8 $ !\the_carries[8]\, GLOBAL(outclock0), !buf_res, , inst22)
-- \the_carries[9]\ = CARRY(!\the_carries[8]\ & (pre_out_8 $ !\inst36~29\))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A509",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_8,
	datab => ww_updown,
	cin => \the_carries[8]\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_8,
	cout => \the_carries[9]\);

\$00022\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_9 = DFFE(pre_out_9 $ \the_carries[9]\, GLOBAL(outclock0), !buf_res, , inst22)
-- \the_carries[10]\ = CARRY(pre_out_9 $ \inst36~29\ # !\the_carries[9]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A6F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_9,
	datab => ww_updown,
	cin => \the_carries[9]\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_9,
	cout => \the_carries[10]\);

\$00024\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_10 = DFFE(pre_out_10 $ !\the_carries[10]\, GLOBAL(outclock0), !buf_res, , inst22)
-- \the_carries[11]\ = CARRY(!\the_carries[10]\ & (\inst36~29\ $ !pre_out_10))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C309",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_updown,
	datab => ww_pre_out_10,
	cin => \the_carries[10]\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_10,
	cout => \the_carries[11]\);

\$00026\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_11 = DFFE(pre_out_11 $ \the_carries[11]\, GLOBAL(outclock0), !buf_res, , inst22)
-- \the_carries[12]\ = CARRY(\inst36~29\ $ pre_out_11 # !\the_carries[11]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C6F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_updown,
	datab => ww_pre_out_11,
	cin => \the_carries[11]\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_11,
	cout => \the_carries[12]\);

\$00028\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_12 = DFFE(pre_out_12 $ !\the_carries[12]\, GLOBAL(outclock0), !buf_res, , inst22)
-- \the_carries[13]\ = CARRY(!\the_carries[12]\ & (\inst36~29\ $ !pre_out_12))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C309",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_updown,
	datab => ww_pre_out_12,
	cin => \the_carries[12]\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_12,
	cout => \the_carries[13]\);

\$00030\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_13 = DFFE(pre_out_13 $ \the_carries[13]\, GLOBAL(outclock0), !buf_res, , inst22)
-- \the_carries[14]\ = CARRY(\inst36~29\ $ pre_out_13 # !\the_carries[13]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C6F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_updown,
	datab => ww_pre_out_13,
	cin => \the_carries[13]\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_13,
	cout => \the_carries[14]\);

\$00032\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_14 = DFFE(pre_out_14 $ !\the_carries[14]\, GLOBAL(outclock0), !buf_res, , inst22)
-- \the_carries[15]\ = CARRY(!\the_carries[14]\ & (\inst36~29\ $ !pre_out_14))

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C309",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_updown,
	datab => ww_pre_out_14,
	cin => \the_carries[14]\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_14,
	cout => \the_carries[15]\);

\$00034\ : apex20ke_lcell 
-- Equation(s):
-- pre_out_15 = DFFE(pre_out_15 $ \the_carries[15]\, GLOBAL(outclock0), !buf_res, , inst22)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_15,
	cin => \the_carries[15]\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pre_out_15);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_counter_8 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	updown : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_0 : OUT std_logic;
	pre_out_1 : OUT std_logic;
	pre_out_2 : OUT std_logic;
	pre_out_3 : OUT std_logic;
	pre_out_4 : OUT std_logic;
	pre_out_5 : OUT std_logic;
	pre_out_6 : OUT std_logic;
	pre_out_7 : OUT std_logic;
	pre_out_8 : OUT std_logic;
	pre_out_9 : OUT std_logic;
	pre_out_10 : OUT std_logic;
	pre_out_11 : OUT std_logic;
	pre_out_12 : OUT std_logic;
	pre_out_13 : OUT std_logic;
	pre_out_14 : OUT std_logic;
	pre_out_15 : OUT std_logic
	);
END lpm_counter_8;

ARCHITECTURE structure OF lpm_counter_8 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_updown : std_logic;
SIGNAL ww_clk_en : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_pre_out_1 : std_logic;
SIGNAL ww_pre_out_2 : std_logic;
SIGNAL ww_pre_out_3 : std_logic;
SIGNAL ww_pre_out_4 : std_logic;
SIGNAL ww_pre_out_5 : std_logic;
SIGNAL ww_pre_out_6 : std_logic;
SIGNAL ww_pre_out_7 : std_logic;
SIGNAL ww_pre_out_8 : std_logic;
SIGNAL ww_pre_out_9 : std_logic;
SIGNAL ww_pre_out_10 : std_logic;
SIGNAL ww_pre_out_11 : std_logic;
SIGNAL ww_pre_out_12 : std_logic;
SIGNAL ww_pre_out_13 : std_logic;
SIGNAL ww_pre_out_14 : std_logic;
SIGNAL ww_pre_out_15 : std_logic;

COMPONENT alt_synch_counter_8
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	updown : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_0 : OUT std_logic;
	pre_out_1 : OUT std_logic;
	pre_out_2 : OUT std_logic;
	pre_out_3 : OUT std_logic;
	pre_out_4 : OUT std_logic;
	pre_out_5 : OUT std_logic;
	pre_out_6 : OUT std_logic;
	pre_out_7 : OUT std_logic;
	pre_out_8 : OUT std_logic;
	pre_out_9 : OUT std_logic;
	pre_out_10 : OUT std_logic;
	pre_out_11 : OUT std_logic;
	pre_out_12 : OUT std_logic;
	pre_out_13 : OUT std_logic;
	pre_out_14 : OUT std_logic;
	pre_out_15 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_updown <= updown;
ww_clk_en <= clk_en;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_0 <= ww_sload_path_0;
pre_out_1 <= ww_pre_out_1;
pre_out_2 <= ww_pre_out_2;
pre_out_3 <= ww_pre_out_3;
pre_out_4 <= ww_pre_out_4;
pre_out_5 <= ww_pre_out_5;
pre_out_6 <= ww_pre_out_6;
pre_out_7 <= ww_pre_out_7;
pre_out_8 <= ww_pre_out_8;
pre_out_9 <= ww_pre_out_9;
pre_out_10 <= ww_pre_out_10;
pre_out_11 <= ww_pre_out_11;
pre_out_12 <= ww_pre_out_12;
pre_out_13 <= ww_pre_out_13;
pre_out_14 <= ww_pre_out_14;
pre_out_15 <= ww_pre_out_15;
wysi_counter : alt_synch_counter_8
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	updown => ww_updown,
	clk_en => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_0 => ww_sload_path_0,
	pre_out_1 => ww_pre_out_1,
	pre_out_2 => ww_pre_out_2,
	pre_out_3 => ww_pre_out_3,
	pre_out_4 => ww_pre_out_4,
	pre_out_5 => ww_pre_out_5,
	pre_out_6 => ww_pre_out_6,
	pre_out_7 => ww_pre_out_7,
	pre_out_8 => ww_pre_out_8,
	pre_out_9 => ww_pre_out_9,
	pre_out_10 => ww_pre_out_10,
	pre_out_11 => ww_pre_out_11,
	pre_out_12 => ww_pre_out_12,
	pre_out_13 => ww_pre_out_13,
	pre_out_14 => ww_pre_out_14,
	pre_out_15 => ww_pre_out_15);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	rx_packet_ct IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	updown : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_0 : OUT std_logic;
	pre_out_1 : OUT std_logic;
	pre_out_2 : OUT std_logic;
	pre_out_3 : OUT std_logic;
	pre_out_4 : OUT std_logic;
	pre_out_5 : OUT std_logic;
	pre_out_6 : OUT std_logic;
	pre_out_7 : OUT std_logic;
	pre_out_8 : OUT std_logic;
	pre_out_9 : OUT std_logic;
	pre_out_10 : OUT std_logic;
	pre_out_11 : OUT std_logic;
	pre_out_12 : OUT std_logic;
	pre_out_13 : OUT std_logic;
	pre_out_14 : OUT std_logic;
	pre_out_15 : OUT std_logic
	);
END rx_packet_ct;

ARCHITECTURE structure OF rx_packet_ct IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_updown : std_logic;
SIGNAL ww_clk_en : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_pre_out_1 : std_logic;
SIGNAL ww_pre_out_2 : std_logic;
SIGNAL ww_pre_out_3 : std_logic;
SIGNAL ww_pre_out_4 : std_logic;
SIGNAL ww_pre_out_5 : std_logic;
SIGNAL ww_pre_out_6 : std_logic;
SIGNAL ww_pre_out_7 : std_logic;
SIGNAL ww_pre_out_8 : std_logic;
SIGNAL ww_pre_out_9 : std_logic;
SIGNAL ww_pre_out_10 : std_logic;
SIGNAL ww_pre_out_11 : std_logic;
SIGNAL ww_pre_out_12 : std_logic;
SIGNAL ww_pre_out_13 : std_logic;
SIGNAL ww_pre_out_14 : std_logic;
SIGNAL ww_pre_out_15 : std_logic;

COMPONENT lpm_counter_8
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	updown : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_0 : OUT std_logic;
	pre_out_1 : OUT std_logic;
	pre_out_2 : OUT std_logic;
	pre_out_3 : OUT std_logic;
	pre_out_4 : OUT std_logic;
	pre_out_5 : OUT std_logic;
	pre_out_6 : OUT std_logic;
	pre_out_7 : OUT std_logic;
	pre_out_8 : OUT std_logic;
	pre_out_9 : OUT std_logic;
	pre_out_10 : OUT std_logic;
	pre_out_11 : OUT std_logic;
	pre_out_12 : OUT std_logic;
	pre_out_13 : OUT std_logic;
	pre_out_14 : OUT std_logic;
	pre_out_15 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_updown <= updown;
ww_clk_en <= clk_en;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_0 <= ww_sload_path_0;
pre_out_1 <= ww_pre_out_1;
pre_out_2 <= ww_pre_out_2;
pre_out_3 <= ww_pre_out_3;
pre_out_4 <= ww_pre_out_4;
pre_out_5 <= ww_pre_out_5;
pre_out_6 <= ww_pre_out_6;
pre_out_7 <= ww_pre_out_7;
pre_out_8 <= ww_pre_out_8;
pre_out_9 <= ww_pre_out_9;
pre_out_10 <= ww_pre_out_10;
pre_out_11 <= ww_pre_out_11;
pre_out_12 <= ww_pre_out_12;
pre_out_13 <= ww_pre_out_13;
pre_out_14 <= ww_pre_out_14;
pre_out_15 <= ww_pre_out_15;
lpm_counter_component : lpm_counter_8
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	updown => ww_updown,
	clk_en => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_0 => ww_sload_path_0,
	pre_out_1 => ww_pre_out_1,
	pre_out_2 => ww_pre_out_2,
	pre_out_3 => ww_pre_out_3,
	pre_out_4 => ww_pre_out_4,
	pre_out_5 => ww_pre_out_5,
	pre_out_6 => ww_pre_out_6,
	pre_out_7 => ww_pre_out_7,
	pre_out_8 => ww_pre_out_8,
	pre_out_9 => ww_pre_out_9,
	pre_out_10 => ww_pre_out_10,
	pre_out_11 => ww_pre_out_11,
	pre_out_12 => ww_pre_out_12,
	pre_out_13 => ww_pre_out_13,
	pre_out_14 => ww_pre_out_14,
	pre_out_15 => ww_pre_out_15);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_and IS
    PORT (
	sload_path_0 : IN std_logic;
	pre_out_1 : IN std_logic;
	pre_out_2 : IN std_logic;
	pre_out_3 : IN std_logic;
	pre_out_4 : IN std_logic;
	pre_out_5 : IN std_logic;
	pre_out_6 : IN std_logic;
	pre_out_7 : IN std_logic;
	pre_out_8 : IN std_logic;
	pre_out_9 : IN std_logic;
	pre_out_10 : IN std_logic;
	pre_out_11 : IN std_logic;
	pre_out_12 : IN std_logic;
	pre_out_13 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	and_node_6_0 : OUT std_logic
	);
END lpm_and;

ARCHITECTURE structure OF lpm_and IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_pre_out_1 : std_logic;
SIGNAL ww_pre_out_2 : std_logic;
SIGNAL ww_pre_out_3 : std_logic;
SIGNAL ww_pre_out_4 : std_logic;
SIGNAL ww_pre_out_5 : std_logic;
SIGNAL ww_pre_out_6 : std_logic;
SIGNAL ww_pre_out_7 : std_logic;
SIGNAL ww_pre_out_8 : std_logic;
SIGNAL ww_pre_out_9 : std_logic;
SIGNAL ww_pre_out_10 : std_logic;
SIGNAL ww_pre_out_11 : std_logic;
SIGNAL ww_pre_out_12 : std_logic;
SIGNAL ww_pre_out_13 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_and_node_6_0 : std_logic;
SIGNAL \and_node[0][6]~138\ : std_logic;
SIGNAL \and_node[0][5]~139\ : std_logic;
SIGNAL \and_node[0][4]~140\ : std_logic;
SIGNAL \and_node[0][3]~141\ : std_logic;
SIGNAL \and_node[0][2]~142\ : std_logic;
SIGNAL \and_node[0][1]~143\ : std_logic;
SIGNAL \and_node[0][0]~144\ : std_logic;
SIGNAL \and_node[0][0]\ : std_logic;
SIGNAL \and_node[0][1]\ : std_logic;
SIGNAL \and_node[0][2]\ : std_logic;
SIGNAL \and_node[0][3]\ : std_logic;
SIGNAL \and_node[0][4]\ : std_logic;
SIGNAL \and_node[0][5]\ : std_logic;

BEGIN

ww_sload_path_0 <= sload_path_0;
ww_pre_out_1 <= pre_out_1;
ww_pre_out_2 <= pre_out_2;
ww_pre_out_3 <= pre_out_3;
ww_pre_out_4 <= pre_out_4;
ww_pre_out_5 <= pre_out_5;
ww_pre_out_6 <= pre_out_6;
ww_pre_out_7 <= pre_out_7;
ww_pre_out_8 <= pre_out_8;
ww_pre_out_9 <= pre_out_9;
ww_pre_out_10 <= pre_out_10;
ww_pre_out_11 <= pre_out_11;
ww_pre_out_12 <= pre_out_12;
ww_pre_out_13 <= pre_out_13;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
and_node_6_0 <= ww_and_node_6_0;

\and_node[0][6]~138_I\ : apex20ke_lcell 
-- Equation(s):
-- and_node_6_0 = CARRY(pre_out_13 & pre_out_12 & !\and_node[0][5]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0008",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_13,
	datab => ww_pre_out_12,
	cin => \and_node[0][5]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => ww_and_node_6_0);

\and_node[0][0]~144_I\ : apex20ke_lcell 
-- Equation(s):
-- \and_node[0][0]\ = CARRY(pre_out_1 & sload_path_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	packed_mode => "false",
	lut_mask => "0088",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_1,
	datab => ww_sload_path_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \and_node[0][0]\);

\and_node[0][1]~143_I\ : apex20ke_lcell 
-- Equation(s):
-- \and_node[0][1]\ = CARRY(!\and_node[0][0]\ # !pre_out_3 # !pre_out_2)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "007F",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_2,
	datab => ww_pre_out_3,
	cin => \and_node[0][0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \and_node[0][1]\);

\and_node[0][2]~142_I\ : apex20ke_lcell 
-- Equation(s):
-- \and_node[0][2]\ = CARRY(pre_out_5 & pre_out_4 & !\and_node[0][1]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0008",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_5,
	datab => ww_pre_out_4,
	cin => \and_node[0][1]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \and_node[0][2]\);

\and_node[0][3]~141_I\ : apex20ke_lcell 
-- Equation(s):
-- \and_node[0][3]\ = CARRY(!\and_node[0][2]\ # !pre_out_6 # !pre_out_7)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "007F",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_7,
	datab => ww_pre_out_6,
	cin => \and_node[0][2]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \and_node[0][3]\);

\and_node[0][4]~140_I\ : apex20ke_lcell 
-- Equation(s):
-- \and_node[0][4]\ = CARRY(pre_out_8 & pre_out_9 & !\and_node[0][3]\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0008",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_8,
	datab => ww_pre_out_9,
	cin => \and_node[0][3]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \and_node[0][4]\);

\and_node[0][5]~139_I\ : apex20ke_lcell 
-- Equation(s):
-- \and_node[0][5]\ = CARRY(!\and_node[0][4]\ # !pre_out_10 # !pre_out_11)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "007F",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_pre_out_11,
	datab => ww_pre_out_10,
	cin => \and_node[0][4]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cout => \and_node[0][5]\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	and16b IS
    PORT (
	sload_path_0 : IN std_logic;
	pre_out_1 : IN std_logic;
	pre_out_2 : IN std_logic;
	pre_out_3 : IN std_logic;
	pre_out_4 : IN std_logic;
	pre_out_5 : IN std_logic;
	pre_out_6 : IN std_logic;
	pre_out_7 : IN std_logic;
	pre_out_8 : IN std_logic;
	pre_out_9 : IN std_logic;
	pre_out_10 : IN std_logic;
	pre_out_11 : IN std_logic;
	pre_out_12 : IN std_logic;
	pre_out_13 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	and_node_6_0 : OUT std_logic
	);
END and16b;

ARCHITECTURE structure OF and16b IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_pre_out_1 : std_logic;
SIGNAL ww_pre_out_2 : std_logic;
SIGNAL ww_pre_out_3 : std_logic;
SIGNAL ww_pre_out_4 : std_logic;
SIGNAL ww_pre_out_5 : std_logic;
SIGNAL ww_pre_out_6 : std_logic;
SIGNAL ww_pre_out_7 : std_logic;
SIGNAL ww_pre_out_8 : std_logic;
SIGNAL ww_pre_out_9 : std_logic;
SIGNAL ww_pre_out_10 : std_logic;
SIGNAL ww_pre_out_11 : std_logic;
SIGNAL ww_pre_out_12 : std_logic;
SIGNAL ww_pre_out_13 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_and_node_6_0 : std_logic;

COMPONENT lpm_and
    PORT (
	sload_path_0 : IN std_logic;
	pre_out_1 : IN std_logic;
	pre_out_2 : IN std_logic;
	pre_out_3 : IN std_logic;
	pre_out_4 : IN std_logic;
	pre_out_5 : IN std_logic;
	pre_out_6 : IN std_logic;
	pre_out_7 : IN std_logic;
	pre_out_8 : IN std_logic;
	pre_out_9 : IN std_logic;
	pre_out_10 : IN std_logic;
	pre_out_11 : IN std_logic;
	pre_out_12 : IN std_logic;
	pre_out_13 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	and_node_6_0 : OUT std_logic);
END COMPONENT;

BEGIN

ww_sload_path_0 <= sload_path_0;
ww_pre_out_1 <= pre_out_1;
ww_pre_out_2 <= pre_out_2;
ww_pre_out_3 <= pre_out_3;
ww_pre_out_4 <= pre_out_4;
ww_pre_out_5 <= pre_out_5;
ww_pre_out_6 <= pre_out_6;
ww_pre_out_7 <= pre_out_7;
ww_pre_out_8 <= pre_out_8;
ww_pre_out_9 <= pre_out_9;
ww_pre_out_10 <= pre_out_10;
ww_pre_out_11 <= pre_out_11;
ww_pre_out_12 <= pre_out_12;
ww_pre_out_13 <= pre_out_13;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
and_node_6_0 <= ww_and_node_6_0;
lpm_and_component : lpm_and
PORT MAP (
	sload_path_0 => ww_sload_path_0,
	pre_out_1 => ww_pre_out_1,
	pre_out_2 => ww_pre_out_2,
	pre_out_3 => ww_pre_out_3,
	pre_out_4 => ww_pre_out_4,
	pre_out_5 => ww_pre_out_5,
	pre_out_6 => ww_pre_out_6,
	pre_out_7 => ww_pre_out_7,
	pre_out_8 => ww_pre_out_8,
	pre_out_9 => ww_pre_out_9,
	pre_out_10 => ww_pre_out_10,
	pre_out_11 => ww_pre_out_11,
	pre_out_12 => ww_pre_out_12,
	pre_out_13 => ww_pre_out_13,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	and_node_6_0 => ww_and_node_6_0);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	alt_synch_counter_1 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_15 : OUT std_logic;
	sload_path_14 : OUT std_logic;
	sload_path_13 : OUT std_logic;
	sload_path_12 : OUT std_logic;
	sload_path_11 : OUT std_logic;
	sload_path_10 : OUT std_logic;
	sload_path_9 : OUT std_logic;
	sload_path_8 : OUT std_logic;
	sload_path_7 : OUT std_logic;
	sload_path_6 : OUT std_logic;
	sload_path_5 : OUT std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic;
	cout1 : OUT std_logic
	);
END alt_synch_counter_1;

ARCHITECTURE structure OF alt_synch_counter_1 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_clk_en : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_15 : std_logic;
SIGNAL ww_sload_path_14 : std_logic;
SIGNAL ww_sload_path_13 : std_logic;
SIGNAL ww_sload_path_12 : std_logic;
SIGNAL ww_sload_path_11 : std_logic;
SIGNAL ww_sload_path_10 : std_logic;
SIGNAL ww_sload_path_9 : std_logic;
SIGNAL ww_sload_path_8 : std_logic;
SIGNAL ww_sload_path_7 : std_logic;
SIGNAL ww_sload_path_6 : std_logic;
SIGNAL ww_sload_path_5 : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_cout1 : std_logic;
SIGNAL cout : std_logic;
SIGNAL \counter_cell[14]~COUT\ : std_logic;
SIGNAL \counter_cell[13]~COUT\ : std_logic;
SIGNAL \counter_cell[12]~COUT\ : std_logic;
SIGNAL \counter_cell[11]~COUT\ : std_logic;
SIGNAL \counter_cell[10]~COUT\ : std_logic;
SIGNAL \counter_cell[9]~COUT\ : std_logic;
SIGNAL \counter_cell[8]~COUT\ : std_logic;
SIGNAL \counter_cell[7]~COUT\ : std_logic;
SIGNAL \counter_cell[6]~COUT\ : std_logic;
SIGNAL \counter_cell[5]~COUT\ : std_logic;
SIGNAL \counter_cell[4]~COUT\ : std_logic;
SIGNAL \counter_cell[3]~COUT\ : std_logic;
SIGNAL \counter_cell[2]~COUT\ : std_logic;
SIGNAL \counter_cell[1]~COUT\ : std_logic;
SIGNAL \counter_cell[0]~COUT\ : std_logic;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_clk_en <= clk_en;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_15 <= ww_sload_path_15;
sload_path_14 <= ww_sload_path_14;
sload_path_13 <= ww_sload_path_13;
sload_path_12 <= ww_sload_path_12;
sload_path_11 <= ww_sload_path_11;
sload_path_10 <= ww_sload_path_10;
sload_path_9 <= ww_sload_path_9;
sload_path_8 <= ww_sload_path_8;
sload_path_7 <= ww_sload_path_7;
sload_path_6 <= ww_sload_path_6;
sload_path_5 <= ww_sload_path_5;
sload_path_4 <= ww_sload_path_4;
sload_path_3 <= ww_sload_path_3;
sload_path_2 <= ww_sload_path_2;
sload_path_1 <= ww_sload_path_1;
sload_path_0 <= ww_sload_path_0;
cout1 <= ww_cout1;

\counter_cell[15]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_15 = DFFE(sload_path_15 $ \counter_cell[14]~COUT\, GLOBAL(outclock0), !buf_res, , inst39)
-- cout = CARRY(!\counter_cell[14]~COUT\ # !sload_path_15)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_15,
	cin => \counter_cell[14]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_15,
	cout => cout);

\counter_cell[14]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_14 = DFFE(sload_path_14 $ !\counter_cell[13]~COUT\, GLOBAL(outclock0), !buf_res, , inst39)
-- \counter_cell[14]~COUT\ = CARRY(sload_path_14 & !\counter_cell[13]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_14,
	cin => \counter_cell[13]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_14,
	cout => \counter_cell[14]~COUT\);

\counter_cell[13]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_13 = DFFE(sload_path_13 $ \counter_cell[12]~COUT\, GLOBAL(outclock0), !buf_res, , inst39)
-- \counter_cell[13]~COUT\ = CARRY(!\counter_cell[12]~COUT\ # !sload_path_13)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_13,
	cin => \counter_cell[12]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_13,
	cout => \counter_cell[13]~COUT\);

\counter_cell[12]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_12 = DFFE(sload_path_12 $ !\counter_cell[11]~COUT\, GLOBAL(outclock0), !buf_res, , inst39)
-- \counter_cell[12]~COUT\ = CARRY(sload_path_12 & !\counter_cell[11]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_12,
	cin => \counter_cell[11]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_12,
	cout => \counter_cell[12]~COUT\);

\counter_cell[11]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_11 = DFFE(sload_path_11 $ \counter_cell[10]~COUT\, GLOBAL(outclock0), !buf_res, , inst39)
-- \counter_cell[11]~COUT\ = CARRY(!\counter_cell[10]~COUT\ # !sload_path_11)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_11,
	cin => \counter_cell[10]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_11,
	cout => \counter_cell[11]~COUT\);

\counter_cell[10]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_10 = DFFE(sload_path_10 $ !\counter_cell[9]~COUT\, GLOBAL(outclock0), !buf_res, , inst39)
-- \counter_cell[10]~COUT\ = CARRY(sload_path_10 & !\counter_cell[9]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_10,
	cin => \counter_cell[9]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_10,
	cout => \counter_cell[10]~COUT\);

\counter_cell[9]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_9 = DFFE(sload_path_9 $ \counter_cell[8]~COUT\, GLOBAL(outclock0), !buf_res, , inst39)
-- \counter_cell[9]~COUT\ = CARRY(!\counter_cell[8]~COUT\ # !sload_path_9)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_9,
	cin => \counter_cell[8]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_9,
	cout => \counter_cell[9]~COUT\);

\counter_cell[8]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_8 = DFFE(sload_path_8 $ !\counter_cell[7]~COUT\, GLOBAL(outclock0), !buf_res, , inst39)
-- \counter_cell[8]~COUT\ = CARRY(sload_path_8 & !\counter_cell[7]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_8,
	cin => \counter_cell[7]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_8,
	cout => \counter_cell[8]~COUT\);

\counter_cell[7]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_7 = DFFE(sload_path_7 $ \counter_cell[6]~COUT\, GLOBAL(outclock0), !buf_res, , inst39)
-- \counter_cell[7]~COUT\ = CARRY(!\counter_cell[6]~COUT\ # !sload_path_7)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_7,
	cin => \counter_cell[6]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_7,
	cout => \counter_cell[7]~COUT\);

\counter_cell[6]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_6 = DFFE(sload_path_6 $ !\counter_cell[5]~COUT\, GLOBAL(outclock0), !buf_res, , inst39)
-- \counter_cell[6]~COUT\ = CARRY(sload_path_6 & !\counter_cell[5]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_6,
	cin => \counter_cell[5]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_6,
	cout => \counter_cell[6]~COUT\);

\counter_cell[5]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_5 = DFFE(sload_path_5 $ \counter_cell[4]~COUT\, GLOBAL(outclock0), !buf_res, , inst39)
-- \counter_cell[5]~COUT\ = CARRY(!\counter_cell[4]~COUT\ # !sload_path_5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_5,
	cin => \counter_cell[4]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_5,
	cout => \counter_cell[5]~COUT\);

\counter_cell[4]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_4 = DFFE(sload_path_4 $ !\counter_cell[3]~COUT\, GLOBAL(outclock0), !buf_res, , inst39)
-- \counter_cell[4]~COUT\ = CARRY(sload_path_4 & !\counter_cell[3]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_4,
	cin => \counter_cell[3]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_4,
	cout => \counter_cell[4]~COUT\);

\counter_cell[3]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_3 = DFFE(sload_path_3 $ \counter_cell[2]~COUT\, GLOBAL(outclock0), !buf_res, , inst39)
-- \counter_cell[3]~COUT\ = CARRY(!\counter_cell[2]~COUT\ # !sload_path_3)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_3,
	cin => \counter_cell[2]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_3,
	cout => \counter_cell[3]~COUT\);

\counter_cell[2]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_2 = DFFE(sload_path_2 $ !\counter_cell[1]~COUT\, GLOBAL(outclock0), !buf_res, , inst39)
-- \counter_cell[2]~COUT\ = CARRY(sload_path_2 & !\counter_cell[1]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_2,
	cin => \counter_cell[1]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_2,
	cout => \counter_cell[2]~COUT\);

\counter_cell[1]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_1 = DFFE(sload_path_1 $ \counter_cell[0]~COUT\, GLOBAL(outclock0), !buf_res, , inst39)
-- \counter_cell[1]~COUT\ = CARRY(!\counter_cell[0]~COUT\ # !sload_path_1)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_1,
	cin => \counter_cell[0]~COUT\,
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_1,
	cout => \counter_cell[1]~COUT\);

\counter_cell[0]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_0 = DFFE(!sload_path_0, GLOBAL(outclock0), !buf_res, , inst39)
-- \counter_cell[0]~COUT\ = CARRY(sload_path_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "qfbk_counter",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	clk => ww_clock,
	aclr => ww_aclr,
	ena => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_0,
	cout => \counter_cell[0]~COUT\);

\cout~0_I\ : apex20ke_lcell 
-- Equation(s):
-- cout1 = !cout

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0F0F",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	cin => cout,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_cout1);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_counter_1 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_15 : OUT std_logic;
	sload_path_14 : OUT std_logic;
	sload_path_13 : OUT std_logic;
	sload_path_12 : OUT std_logic;
	sload_path_11 : OUT std_logic;
	sload_path_10 : OUT std_logic;
	sload_path_9 : OUT std_logic;
	sload_path_8 : OUT std_logic;
	sload_path_7 : OUT std_logic;
	sload_path_6 : OUT std_logic;
	sload_path_5 : OUT std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic;
	cout : OUT std_logic
	);
END lpm_counter_1;

ARCHITECTURE structure OF lpm_counter_1 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_clk_en : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_15 : std_logic;
SIGNAL ww_sload_path_14 : std_logic;
SIGNAL ww_sload_path_13 : std_logic;
SIGNAL ww_sload_path_12 : std_logic;
SIGNAL ww_sload_path_11 : std_logic;
SIGNAL ww_sload_path_10 : std_logic;
SIGNAL ww_sload_path_9 : std_logic;
SIGNAL ww_sload_path_8 : std_logic;
SIGNAL ww_sload_path_7 : std_logic;
SIGNAL ww_sload_path_6 : std_logic;
SIGNAL ww_sload_path_5 : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_cout : std_logic;

COMPONENT alt_synch_counter_1
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_15 : OUT std_logic;
	sload_path_14 : OUT std_logic;
	sload_path_13 : OUT std_logic;
	sload_path_12 : OUT std_logic;
	sload_path_11 : OUT std_logic;
	sload_path_10 : OUT std_logic;
	sload_path_9 : OUT std_logic;
	sload_path_8 : OUT std_logic;
	sload_path_7 : OUT std_logic;
	sload_path_6 : OUT std_logic;
	sload_path_5 : OUT std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic;
	cout1 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_clk_en <= clk_en;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_15 <= ww_sload_path_15;
sload_path_14 <= ww_sload_path_14;
sload_path_13 <= ww_sload_path_13;
sload_path_12 <= ww_sload_path_12;
sload_path_11 <= ww_sload_path_11;
sload_path_10 <= ww_sload_path_10;
sload_path_9 <= ww_sload_path_9;
sload_path_8 <= ww_sload_path_8;
sload_path_7 <= ww_sload_path_7;
sload_path_6 <= ww_sload_path_6;
sload_path_5 <= ww_sload_path_5;
sload_path_4 <= ww_sload_path_4;
sload_path_3 <= ww_sload_path_3;
sload_path_2 <= ww_sload_path_2;
sload_path_1 <= ww_sload_path_1;
sload_path_0 <= ww_sload_path_0;
cout <= ww_cout;
wysi_counter : alt_synch_counter_1
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	clk_en => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_15 => ww_sload_path_15,
	sload_path_14 => ww_sload_path_14,
	sload_path_13 => ww_sload_path_13,
	sload_path_12 => ww_sload_path_12,
	sload_path_11 => ww_sload_path_11,
	sload_path_10 => ww_sload_path_10,
	sload_path_9 => ww_sload_path_9,
	sload_path_8 => ww_sload_path_8,
	sload_path_7 => ww_sload_path_7,
	sload_path_6 => ww_sload_path_6,
	sload_path_5 => ww_sload_path_5,
	sload_path_4 => ww_sload_path_4,
	sload_path_3 => ww_sload_path_3,
	sload_path_2 => ww_sload_path_2,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	cout1 => ww_cout);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	crc_error_ct IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_15 : OUT std_logic;
	sload_path_14 : OUT std_logic;
	sload_path_13 : OUT std_logic;
	sload_path_12 : OUT std_logic;
	sload_path_11 : OUT std_logic;
	sload_path_10 : OUT std_logic;
	sload_path_9 : OUT std_logic;
	sload_path_8 : OUT std_logic;
	sload_path_7 : OUT std_logic;
	sload_path_6 : OUT std_logic;
	sload_path_5 : OUT std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic;
	cout : OUT std_logic
	);
END crc_error_ct;

ARCHITECTURE structure OF crc_error_ct IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_clk_en : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_15 : std_logic;
SIGNAL ww_sload_path_14 : std_logic;
SIGNAL ww_sload_path_13 : std_logic;
SIGNAL ww_sload_path_12 : std_logic;
SIGNAL ww_sload_path_11 : std_logic;
SIGNAL ww_sload_path_10 : std_logic;
SIGNAL ww_sload_path_9 : std_logic;
SIGNAL ww_sload_path_8 : std_logic;
SIGNAL ww_sload_path_7 : std_logic;
SIGNAL ww_sload_path_6 : std_logic;
SIGNAL ww_sload_path_5 : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_cout : std_logic;

COMPONENT lpm_counter_1
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_15 : OUT std_logic;
	sload_path_14 : OUT std_logic;
	sload_path_13 : OUT std_logic;
	sload_path_12 : OUT std_logic;
	sload_path_11 : OUT std_logic;
	sload_path_10 : OUT std_logic;
	sload_path_9 : OUT std_logic;
	sload_path_8 : OUT std_logic;
	sload_path_7 : OUT std_logic;
	sload_path_6 : OUT std_logic;
	sload_path_5 : OUT std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic;
	cout : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_clk_en <= clk_en;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_15 <= ww_sload_path_15;
sload_path_14 <= ww_sload_path_14;
sload_path_13 <= ww_sload_path_13;
sload_path_12 <= ww_sload_path_12;
sload_path_11 <= ww_sload_path_11;
sload_path_10 <= ww_sload_path_10;
sload_path_9 <= ww_sload_path_9;
sload_path_8 <= ww_sload_path_8;
sload_path_7 <= ww_sload_path_7;
sload_path_6 <= ww_sload_path_6;
sload_path_5 <= ww_sload_path_5;
sload_path_4 <= ww_sload_path_4;
sload_path_3 <= ww_sload_path_3;
sload_path_2 <= ww_sload_path_2;
sload_path_1 <= ww_sload_path_1;
sload_path_0 <= ww_sload_path_0;
cout <= ww_cout;
lpm_counter_component : lpm_counter_1
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	clk_en => ww_clk_en,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_15 => ww_sload_path_15,
	sload_path_14 => ww_sload_path_14,
	sload_path_13 => ww_sload_path_13,
	sload_path_12 => ww_sload_path_12,
	sload_path_11 => ww_sload_path_11,
	sload_path_10 => ww_sload_path_10,
	sload_path_9 => ww_sload_path_9,
	sload_path_8 => ww_sload_path_8,
	sload_path_7 => ww_sload_path_7,
	sload_path_6 => ww_sload_path_6,
	sload_path_5 => ww_sload_path_5,
	sload_path_4 => ww_sload_path_4,
	sload_path_3 => ww_sload_path_3,
	sload_path_2 => ww_sload_path_2,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	cout => ww_cout);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	DC_Rx_chan_ap IS
    PORT (
	CLK20 : IN std_logic;
	buf_res : IN std_logic;
	RST : IN std_logic;
	tcal_psnd : IN std_logic;
	rx_dpr_radr_local_0 : IN std_logic;
	rx_dpr_radr_local_1 : IN std_logic;
	msg_sent : IN std_logic;
	send_data : IN std_logic;
	rx_dpr_radr_local_2 : IN std_logic;
	rx_dpr_radr_local_3 : IN std_logic;
	rx_dpr_radr_local_4 : IN std_logic;
	rx_dpr_radr_local_5 : IN std_logic;
	rx_dpr_radr_local_6 : IN std_logic;
	rx_dpr_radr_local_7 : IN std_logic;
	rx_dpr_radr_local_8 : IN std_logic;
	rx_dpr_radr_local_9 : IN std_logic;
	rx_dpr_radr_local_10 : IN std_logic;
	rx_dpr_radr_local_11 : IN std_logic;
	rx_dpr_radr_local_12 : IN std_logic;
	rx_dpr_radr_local_13 : IN std_logic;
	rx_dpr_radr_local_14 : IN std_logic;
	rx_dpr_radr_local_15 : IN std_logic;
	sreg1 : IN std_logic;
	rx_dpr_radr_stb : IN std_logic;
	send_ctrl : IN std_logic;
	sreg2 : IN std_logic;
	GND_port : IN std_logic;
	COM_AD_D : IN std_logic_vector(9 DOWNTO 0);
	A_nB : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_15 : OUT std_logic;
	sload_path_14 : OUT std_logic;
	sload_path_13 : OUT std_logic;
	sload_path_12 : OUT std_logic;
	sload_path_11 : OUT std_logic;
	sload_path_10 : OUT std_logic;
	sload_path_9 : OUT std_logic;
	sload_path_8 : OUT std_logic;
	sload_path_7 : OUT std_logic;
	sload_path_6 : OUT std_logic;
	sload_path_5 : OUT std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic;
	q_15 : OUT std_logic;
	q_14 : OUT std_logic;
	q_13 : OUT std_logic;
	q_12 : OUT std_logic;
	q_11 : OUT std_logic;
	q_10 : OUT std_logic;
	q_9 : OUT std_logic;
	q_8 : OUT std_logic;
	q_7 : OUT std_logic;
	q_6 : OUT std_logic;
	q_5 : OUT std_logic;
	q_4 : OUT std_logic;
	q_3 : OUT std_logic;
	q_2 : OUT std_logic;
	q_1 : OUT std_logic;
	q_0 : OUT std_logic;
	pulse_rcvd : OUT std_logic;
	tcal_rcvd : OUT std_logic;
	ctrl_error : OUT std_logic;
	idle_rcvd : OUT std_logic;
	drreq_rcvd : OUT std_logic;
	rx_we : OUT std_logic;
	inst46_0 : OUT std_logic;
	inst46_1 : OUT std_logic;
	inst46_2 : OUT std_logic;
	inst46_3 : OUT std_logic;
	inst46_4 : OUT std_logic;
	inst46_5 : OUT std_logic;
	inst46_6 : OUT std_logic;
	inst46_7 : OUT std_logic;
	inst43_0 : OUT std_logic;
	inst43_1 : OUT std_logic;
	inst43_2 : OUT std_logic;
	inst43_3 : OUT std_logic;
	inst43_4 : OUT std_logic;
	inst43_5 : OUT std_logic;
	inst43_6 : OUT std_logic;
	inst43_7 : OUT std_logic;
	inst41_0 : OUT std_logic;
	inst41_1 : OUT std_logic;
	inst41_2 : OUT std_logic;
	inst41_3 : OUT std_logic;
	inst41_4 : OUT std_logic;
	inst41_5 : OUT std_logic;
	inst41_6 : OUT std_logic;
	inst41_7 : OUT std_logic;
	inst38_0 : OUT std_logic;
	inst38_1 : OUT std_logic;
	inst38_2 : OUT std_logic;
	inst38_3 : OUT std_logic;
	inst38_4 : OUT std_logic;
	inst38_5 : OUT std_logic;
	inst38_6 : OUT std_logic;
	inst38_7 : OUT std_logic;
	sysres_rcvd : OUT std_logic;
	sreg : OUT std_logic;
	stf_stb : OUT std_logic;
	comres_rcvd : OUT std_logic;
	last_node_0 : OUT std_logic;
	op_6 : OUT std_logic;
	data_rcvd : OUT std_logic;
	idreq_rcvd : OUT std_logic;
	bfstat_rcvd : OUT std_logic;
	op_61 : OUT std_logic;
	b_non_empty : OUT std_logic;
	op_62 : OUT std_logic;
	q_81 : OUT std_logic;
	q_01 : OUT std_logic;
	q_91 : OUT std_logic;
	q_16 : OUT std_logic;
	q_21 : OUT std_logic;
	q_31 : OUT std_logic;
	q_41 : OUT std_logic;
	q_51 : OUT std_logic;
	q_61 : OUT std_logic;
	q_71 : OUT std_logic
	);
END DC_Rx_chan_ap;

ARCHITECTURE structure OF DC_Rx_chan_ap IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK20 : std_logic;
SIGNAL ww_buf_res : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_tcal_psnd : std_logic;
SIGNAL ww_rx_dpr_radr_local_0 : std_logic;
SIGNAL ww_rx_dpr_radr_local_1 : std_logic;
SIGNAL ww_msg_sent : std_logic;
SIGNAL ww_send_data : std_logic;
SIGNAL ww_rx_dpr_radr_local_2 : std_logic;
SIGNAL ww_rx_dpr_radr_local_3 : std_logic;
SIGNAL ww_rx_dpr_radr_local_4 : std_logic;
SIGNAL ww_rx_dpr_radr_local_5 : std_logic;
SIGNAL ww_rx_dpr_radr_local_6 : std_logic;
SIGNAL ww_rx_dpr_radr_local_7 : std_logic;
SIGNAL ww_rx_dpr_radr_local_8 : std_logic;
SIGNAL ww_rx_dpr_radr_local_9 : std_logic;
SIGNAL ww_rx_dpr_radr_local_10 : std_logic;
SIGNAL ww_rx_dpr_radr_local_11 : std_logic;
SIGNAL ww_rx_dpr_radr_local_12 : std_logic;
SIGNAL ww_rx_dpr_radr_local_13 : std_logic;
SIGNAL ww_rx_dpr_radr_local_14 : std_logic;
SIGNAL ww_rx_dpr_radr_local_15 : std_logic;
SIGNAL ww_sreg1 : std_logic;
SIGNAL ww_rx_dpr_radr_stb : std_logic;
SIGNAL ww_send_ctrl : std_logic;
SIGNAL ww_sreg2 : std_logic;
SIGNAL ww_GND_port : std_logic;
SIGNAL ww_COM_AD_D : std_logic_vector(9 DOWNTO 0);
SIGNAL ww_A_nB : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_15 : std_logic;
SIGNAL ww_sload_path_14 : std_logic;
SIGNAL ww_sload_path_13 : std_logic;
SIGNAL ww_sload_path_12 : std_logic;
SIGNAL ww_sload_path_11 : std_logic;
SIGNAL ww_sload_path_10 : std_logic;
SIGNAL ww_sload_path_9 : std_logic;
SIGNAL ww_sload_path_8 : std_logic;
SIGNAL ww_sload_path_7 : std_logic;
SIGNAL ww_sload_path_6 : std_logic;
SIGNAL ww_sload_path_5 : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_q_15 : std_logic;
SIGNAL ww_q_14 : std_logic;
SIGNAL ww_q_13 : std_logic;
SIGNAL ww_q_12 : std_logic;
SIGNAL ww_q_11 : std_logic;
SIGNAL ww_q_10 : std_logic;
SIGNAL ww_q_9 : std_logic;
SIGNAL ww_q_8 : std_logic;
SIGNAL ww_q_7 : std_logic;
SIGNAL ww_q_6 : std_logic;
SIGNAL ww_q_5 : std_logic;
SIGNAL ww_q_4 : std_logic;
SIGNAL ww_q_3 : std_logic;
SIGNAL ww_q_2 : std_logic;
SIGNAL ww_q_1 : std_logic;
SIGNAL ww_q_0 : std_logic;
SIGNAL ww_pulse_rcvd : std_logic;
SIGNAL ww_tcal_rcvd : std_logic;
SIGNAL ww_ctrl_error : std_logic;
SIGNAL ww_idle_rcvd : std_logic;
SIGNAL ww_drreq_rcvd : std_logic;
SIGNAL ww_rx_we : std_logic;
SIGNAL ww_inst46_0 : std_logic;
SIGNAL ww_inst46_1 : std_logic;
SIGNAL ww_inst46_2 : std_logic;
SIGNAL ww_inst46_3 : std_logic;
SIGNAL ww_inst46_4 : std_logic;
SIGNAL ww_inst46_5 : std_logic;
SIGNAL ww_inst46_6 : std_logic;
SIGNAL ww_inst46_7 : std_logic;
SIGNAL ww_inst43_0 : std_logic;
SIGNAL ww_inst43_1 : std_logic;
SIGNAL ww_inst43_2 : std_logic;
SIGNAL ww_inst43_3 : std_logic;
SIGNAL ww_inst43_4 : std_logic;
SIGNAL ww_inst43_5 : std_logic;
SIGNAL ww_inst43_6 : std_logic;
SIGNAL ww_inst43_7 : std_logic;
SIGNAL ww_inst41_0 : std_logic;
SIGNAL ww_inst41_1 : std_logic;
SIGNAL ww_inst41_2 : std_logic;
SIGNAL ww_inst41_3 : std_logic;
SIGNAL ww_inst41_4 : std_logic;
SIGNAL ww_inst41_5 : std_logic;
SIGNAL ww_inst41_6 : std_logic;
SIGNAL ww_inst41_7 : std_logic;
SIGNAL ww_inst38_0 : std_logic;
SIGNAL ww_inst38_1 : std_logic;
SIGNAL ww_inst38_2 : std_logic;
SIGNAL ww_inst38_3 : std_logic;
SIGNAL ww_inst38_4 : std_logic;
SIGNAL ww_inst38_5 : std_logic;
SIGNAL ww_inst38_6 : std_logic;
SIGNAL ww_inst38_7 : std_logic;
SIGNAL ww_sysres_rcvd : std_logic;
SIGNAL ww_sreg : std_logic;
SIGNAL ww_stf_stb : std_logic;
SIGNAL ww_comres_rcvd : std_logic;
SIGNAL ww_last_node_0 : std_logic;
SIGNAL ww_op_6 : std_logic;
SIGNAL ww_data_rcvd : std_logic;
SIGNAL ww_idreq_rcvd : std_logic;
SIGNAL ww_bfstat_rcvd : std_logic;
SIGNAL ww_op_61 : std_logic;
SIGNAL ww_b_non_empty : std_logic;
SIGNAL ww_op_62 : std_logic;
SIGNAL ww_q_81 : std_logic;
SIGNAL ww_q_01 : std_logic;
SIGNAL ww_q_91 : std_logic;
SIGNAL ww_q_16 : std_logic;
SIGNAL ww_q_21 : std_logic;
SIGNAL ww_q_31 : std_logic;
SIGNAL ww_q_41 : std_logic;
SIGNAL ww_q_51 : std_logic;
SIGNAL ww_q_61 : std_logic;
SIGNAL ww_q_71 : std_logic;
SIGNAL ww_inst29_fc_adc : std_logic_vector(9 DOWNTO 0);
SIGNAL \wysi_counter|sload_path[0]\ : std_logic;
SIGNAL \wysi_counter|pre_out[1]\ : std_logic;
SIGNAL \wysi_counter|pre_out[2]\ : std_logic;
SIGNAL \wysi_counter|pre_out[3]\ : std_logic;
SIGNAL \wysi_counter|pre_out[4]\ : std_logic;
SIGNAL \wysi_counter|pre_out[5]\ : std_logic;
SIGNAL \wysi_counter|pre_out[6]\ : std_logic;
SIGNAL \wysi_counter|pre_out[7]\ : std_logic;
SIGNAL \wysi_counter|pre_out[8]\ : std_logic;
SIGNAL \wysi_counter|pre_out[9]\ : std_logic;
SIGNAL \wysi_counter|pre_out[10]\ : std_logic;
SIGNAL \wysi_counter|pre_out[11]\ : std_logic;
SIGNAL \wysi_counter|pre_out[12]\ : std_logic;
SIGNAL \wysi_counter|pre_out[13]\ : std_logic;
SIGNAL \wysi_counter|pre_out[14]\ : std_logic;
SIGNAL \wysi_counter|pre_out[15]\ : std_logic;
SIGNAL \lpm_and_component|and_node[0][6]\ : std_logic;
SIGNAL \inst10|ctrl_rcvd~reg\ : std_logic;
SIGNAL \inst|eof_stb~reg\ : std_logic;
SIGNAL \inst20|i~698\ : std_logic;
SIGNAL \inst20|i~703\ : std_logic;
SIGNAL \inst|data_stb~reg\ : std_logic;
SIGNAL \inst10|byte_ena0b~reg\ : std_logic;
SIGNAL \lpm_shiftreg_component|dffs[0]\ : std_logic;
SIGNAL \lpm_shiftreg_component|dffs[1]\ : std_logic;
SIGNAL \lpm_shiftreg_component|dffs[2]\ : std_logic;
SIGNAL \lpm_shiftreg_component|dffs[3]\ : std_logic;
SIGNAL \lpm_shiftreg_component|dffs[4]\ : std_logic;
SIGNAL \lpm_shiftreg_component|dffs[5]\ : std_logic;
SIGNAL \lpm_shiftreg_component|dffs[6]\ : std_logic;
SIGNAL \lpm_shiftreg_component|dffs[7]\ : std_logic;
SIGNAL \inst10|byte_ena2~reg\ : std_logic;
SIGNAL \inst10|byte_ena3~reg\ : std_logic;
SIGNAL \inst40[0]\ : std_logic;
SIGNAL \inst10|data_error~reg\ : std_logic;
SIGNAL inst5 : std_logic;
SIGNAL \inst40[1]\ : std_logic;
SIGNAL \inst40[2]\ : std_logic;
SIGNAL \inst40[3]\ : std_logic;
SIGNAL \inst40[4]\ : std_logic;
SIGNAL \inst40[5]\ : std_logic;
SIGNAL \inst40[6]\ : std_logic;
SIGNAL \inst40[7]\ : std_logic;
SIGNAL \inst40[8]\ : std_logic;
SIGNAL \inst40[9]\ : std_logic;
SIGNAL \inst40[10]\ : std_logic;
SIGNAL \inst40[11]\ : std_logic;
SIGNAL \inst40[12]\ : std_logic;
SIGNAL \inst18|hl_edge~reg\ : std_logic;
SIGNAL \inst10|cmd_ena~reg\ : std_logic;
SIGNAL \inst4|cmd_rec[3]~11\ : std_logic;
SIGNAL \inst10|msg_type_ena~reg\ : std_logic;
SIGNAL \get_dudt_stm|rxd~reg\ : std_logic;
SIGNAL \inst4|data_msg~reg\ : std_logic;
SIGNAL \inst10|crc_init~reg\ : std_logic;
SIGNAL \inst10|byte_ena0a~reg\ : std_logic;
SIGNAL \inst|ctclr~reg\ : std_logic;
SIGNAL inst39 : std_logic;
SIGNAL \inst36~29\ : std_logic;
SIGNAL inst44 : std_logic;
SIGNAL inst22 : std_logic;
SIGNAL \inst40[13]\ : std_logic;
SIGNAL \inst40[14]\ : std_logic;
SIGNAL \inst40[15]\ : std_logic;
SIGNAL \inst1~45\ : std_logic;
SIGNAL \external_latency_ffs|points[0][9]\ : std_logic;
SIGNAL \external_latency_ffs|points[0][8]\ : std_logic;
SIGNAL \external_latency_ffs|points[0][5]\ : std_logic;
SIGNAL \external_latency_ffs|points[0][4]\ : std_logic;
SIGNAL \external_latency_ffs|points[0][2]\ : std_logic;
SIGNAL \external_latency_ffs|points[0][3]\ : std_logic;
SIGNAL \external_latency_ffs|points[0][6]\ : std_logic;
SIGNAL \external_latency_ffs|points[0][7]\ : std_logic;
SIGNAL \external_latency_ffs|points[0][0]\ : std_logic;
SIGNAL \external_latency_ffs|points[0][1]\ : std_logic;
SIGNAL \wysi_counter|cout~0\ : std_logic;
SIGNAL \inst45[0]\ : std_logic;
SIGNAL \inst45[1]\ : std_logic;
SIGNAL \inst45[2]\ : std_logic;
SIGNAL \inst45[3]\ : std_logic;
SIGNAL \inst45[4]\ : std_logic;
SIGNAL \inst45[5]\ : std_logic;
SIGNAL \inst45[6]\ : std_logic;
SIGNAL \inst45[7]\ : std_logic;
SIGNAL ALT_NOT_ww_buf_res : std_logic;
SIGNAL \ALT_NOT_inst10|byte_ena0a~reg\ : std_logic;

COMPONENT RX_UART_ap
    PORT (
	clk : IN std_logic;
	RST : IN std_logic;
	rxd : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	stf_stb : OUT std_logic;
	eof_stb : OUT std_logic;
	data_stb : OUT std_logic;
	dffs_0 : OUT std_logic;
	dffs_1 : OUT std_logic;
	dffs_2 : OUT std_logic;
	dffs_3 : OUT std_logic;
	dffs_4 : OUT std_logic;
	dffs_5 : OUT std_logic;
	dffs_6 : OUT std_logic;
	dffs_7 : OUT std_logic;
	ctclr : OUT std_logic);
END COMPONENT;

COMPONENT adc_to_ser_dudt
    PORT (
	CLK : IN std_logic;
	ctclr : IN std_logic;
	inst1 : IN std_logic;
	points_9_0 : IN std_logic;
	points_8_0 : IN std_logic;
	points_5_0 : IN std_logic;
	points_4_0 : IN std_logic;
	points_2_0 : IN std_logic;
	points_3_0 : IN std_logic;
	points_6_0 : IN std_logic;
	points_7_0 : IN std_logic;
	points_0_0 : IN std_logic;
	points_1_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	hl_edge : OUT std_logic;
	rxd : OUT std_logic);
END COMPONENT;

COMPONENT mean_val
    PORT (
	clk : IN std_logic;
	reset : IN std_logic;
	COM_AD_D_9 : IN std_logic;
	COM_AD_D_8 : IN std_logic;
	COM_AD_D_7 : IN std_logic;
	COM_AD_D_6 : IN std_logic;
	COM_AD_D_5 : IN std_logic;
	COM_AD_D_4 : IN std_logic;
	COM_AD_D_2 : IN std_logic;
	COM_AD_D_3 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	points_9_0 : OUT std_logic;
	points_8_0 : OUT std_logic;
	points_5_0 : OUT std_logic;
	points_4_0 : OUT std_logic;
	points_2_0 : OUT std_logic;
	points_3_0 : OUT std_logic;
	points_6_0 : OUT std_logic;
	points_7_0 : OUT std_logic;
	points_0_0 : OUT std_logic;
	points_1_0 : OUT std_logic);
END COMPONENT;

COMPONENT dc_hdr_dec_ap
    PORT (
	clk : IN std_logic;
	ctrl_rcvd : IN std_logic;
	stf_stb : IN std_logic;
	data_stb : IN std_logic;
	dffs_0 : IN std_logic;
	dffs_1 : IN std_logic;
	dffs_2 : IN std_logic;
	dffs_3 : IN std_logic;
	dffs_4 : IN std_logic;
	dffs_5 : IN std_logic;
	dffs_6 : IN std_logic;
	dffs_7 : IN std_logic;
	cmd_ena : IN std_logic;
	msg_type_ena : IN std_logic;
	A_nB : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	tcal_rcvd : OUT std_logic;
	idle_rcvd : OUT std_logic;
	drreq_rcvd : OUT std_logic;
	sysres_rcvd : OUT std_logic;
	comres_rcvd : OUT std_logic;
	cmd_rec_3 : OUT std_logic;
	data_msg : OUT std_logic;
	idreq_rcvd : OUT std_logic;
	bfstat_rcvd : OUT std_logic);
END COMPONENT;

COMPONENT DC_MRAP
    PORT (
	CLK : IN std_logic;
	stf_stb : IN std_logic;
	eof_stb : IN std_logic;
	i : IN std_logic;
	i1 : IN std_logic;
	data_stb : IN std_logic;
	cmd_rec_3 : IN std_logic;
	data_msg : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	ctrl_error : OUT std_logic;
	rx_we : OUT std_logic;
	ctrl_rcvd : OUT std_logic;
	byte_ena0b : OUT std_logic;
	byte_ena2 : OUT std_logic;
	byte_ena3 : OUT std_logic;
	data_error : OUT std_logic;
	cmd_ena : OUT std_logic;
	msg_type_ena : OUT std_logic;
	crc_init : OUT std_logic;
	byte_ena0a : OUT std_logic;
	data_rcvd : OUT std_logic);
END COMPONENT;

COMPONENT crc_rx
    PORT (
	CLK : IN std_logic;
	RST : IN std_logic;
	data_stb : IN std_logic;
	dffs_0 : IN std_logic;
	dffs_1 : IN std_logic;
	dffs_2 : IN std_logic;
	dffs_3 : IN std_logic;
	dffs_4 : IN std_logic;
	dffs_5 : IN std_logic;
	dffs_6 : IN std_logic;
	dffs_7 : IN std_logic;
	crc_init : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	i : OUT std_logic;
	i1 : OUT std_logic);
END COMPONENT;

COMPONENT dc_rapcal_lh
    PORT (
	CCLK : IN std_logic;
	tcal_rcvd : IN std_logic;
	msg_sent : IN std_logic;
	sreg1 : IN std_logic;
	hl_edge : IN std_logic;
	sreg2 : IN std_logic;
	GND_port : IN std_logic;
	fc_adc : IN std_logic_vector(9 DOWNTO 0);
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	pulse_rcvd : OUT std_logic;
	sreg : OUT std_logic;
	b_non_empty : OUT std_logic;
	q_8 : OUT std_logic;
	q_0 : OUT std_logic;
	q_9 : OUT std_logic;
	q_1 : OUT std_logic;
	q_2 : OUT std_logic;
	q_3 : OUT std_logic;
	q_4 : OUT std_logic;
	q_5 : OUT std_logic;
	q_6 : OUT std_logic;
	q_7 : OUT std_logic);
END COMPONENT;

COMPONENT Rx_dpr_ctrl_ap
    PORT (
	q_15 : IN std_logic;
	q_14 : IN std_logic;
	q_13 : IN std_logic;
	q_12 : IN std_logic;
	q_11 : IN std_logic;
	q_10 : IN std_logic;
	q_9 : IN std_logic;
	q_8 : IN std_logic;
	q_7 : IN std_logic;
	q_6 : IN std_logic;
	q_5 : IN std_logic;
	q_4 : IN std_logic;
	q_3 : IN std_logic;
	q_2 : IN std_logic;
	q_1 : IN std_logic;
	q_0 : IN std_logic;
	clk : IN std_logic;
	buf_res : IN std_logic;
	rx_dpr_radr_local_0 : IN std_logic;
	rx_dpr_radr_local_1 : IN std_logic;
	rx_dpr_radr_local_2 : IN std_logic;
	rx_dpr_radr_local_3 : IN std_logic;
	rx_dpr_radr_local_4 : IN std_logic;
	rx_dpr_radr_local_5 : IN std_logic;
	rx_dpr_radr_local_6 : IN std_logic;
	rx_dpr_radr_local_7 : IN std_logic;
	rx_dpr_radr_local_8 : IN std_logic;
	rx_dpr_radr_local_9 : IN std_logic;
	rx_dpr_radr_local_10 : IN std_logic;
	rx_dpr_radr_local_11 : IN std_logic;
	rx_dpr_radr_local_12 : IN std_logic;
	rx_dpr_radr_local_13 : IN std_logic;
	rx_dpr_radr_local_14 : IN std_logic;
	rx_dpr_radr_local_15 : IN std_logic;
	rx_dpr_radr_stb : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	op_6 : OUT std_logic;
	op_61 : OUT std_logic;
	op_62 : OUT std_logic);
END COMPONENT;

COMPONENT rx_dpr_wadr_ct
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	inst40_0 : IN std_logic;
	data_error : IN std_logic;
	clk_en : IN std_logic;
	inst40_1 : IN std_logic;
	inst40_2 : IN std_logic;
	inst40_3 : IN std_logic;
	inst40_4 : IN std_logic;
	inst40_5 : IN std_logic;
	inst40_6 : IN std_logic;
	inst40_7 : IN std_logic;
	inst40_8 : IN std_logic;
	inst40_9 : IN std_logic;
	inst40_10 : IN std_logic;
	inst40_11 : IN std_logic;
	inst40_12 : IN std_logic;
	inst40_13 : IN std_logic;
	inst40_14 : IN std_logic;
	inst40_15 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q_15 : OUT std_logic;
	q_14 : OUT std_logic;
	q_13 : OUT std_logic;
	q_12 : OUT std_logic;
	q_11 : OUT std_logic;
	q_10 : OUT std_logic;
	q_9 : OUT std_logic;
	q_8 : OUT std_logic;
	q_7 : OUT std_logic;
	q_6 : OUT std_logic;
	q_5 : OUT std_logic;
	q_4 : OUT std_logic;
	q_3 : OUT std_logic;
	q_2 : OUT std_logic;
	q_1 : OUT std_logic;
	q_0 : OUT std_logic);
END COMPONENT;

COMPONENT my_or16b
    PORT (
	sload_path_0 : IN std_logic;
	pre_out_1 : IN std_logic;
	pre_out_2 : IN std_logic;
	pre_out_3 : IN std_logic;
	pre_out_4 : IN std_logic;
	pre_out_5 : IN std_logic;
	pre_out_6 : IN std_logic;
	pre_out_7 : IN std_logic;
	pre_out_8 : IN std_logic;
	pre_out_9 : IN std_logic;
	pre_out_10 : IN std_logic;
	pre_out_11 : IN std_logic;
	pre_out_12 : IN std_logic;
	pre_out_13 : IN std_logic;
	pre_out_14 : IN std_logic;
	pre_out_15 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	last_node_0 : OUT std_logic);
END COMPONENT;

COMPONENT rx_packet_ct
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	updown : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_0 : OUT std_logic;
	pre_out_1 : OUT std_logic;
	pre_out_2 : OUT std_logic;
	pre_out_3 : OUT std_logic;
	pre_out_4 : OUT std_logic;
	pre_out_5 : OUT std_logic;
	pre_out_6 : OUT std_logic;
	pre_out_7 : OUT std_logic;
	pre_out_8 : OUT std_logic;
	pre_out_9 : OUT std_logic;
	pre_out_10 : OUT std_logic;
	pre_out_11 : OUT std_logic;
	pre_out_12 : OUT std_logic;
	pre_out_13 : OUT std_logic;
	pre_out_14 : OUT std_logic;
	pre_out_15 : OUT std_logic);
END COMPONENT;

COMPONENT and16b
    PORT (
	sload_path_0 : IN std_logic;
	pre_out_1 : IN std_logic;
	pre_out_2 : IN std_logic;
	pre_out_3 : IN std_logic;
	pre_out_4 : IN std_logic;
	pre_out_5 : IN std_logic;
	pre_out_6 : IN std_logic;
	pre_out_7 : IN std_logic;
	pre_out_8 : IN std_logic;
	pre_out_9 : IN std_logic;
	pre_out_10 : IN std_logic;
	pre_out_11 : IN std_logic;
	pre_out_12 : IN std_logic;
	pre_out_13 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	and_node_6_0 : OUT std_logic);
END COMPONENT;

COMPONENT crc_error_ct
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	clk_en : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_15 : OUT std_logic;
	sload_path_14 : OUT std_logic;
	sload_path_13 : OUT std_logic;
	sload_path_12 : OUT std_logic;
	sload_path_11 : OUT std_logic;
	sload_path_10 : OUT std_logic;
	sload_path_9 : OUT std_logic;
	sload_path_8 : OUT std_logic;
	sload_path_7 : OUT std_logic;
	sload_path_6 : OUT std_logic;
	sload_path_5 : OUT std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic;
	cout : OUT std_logic);
END COMPONENT;

BEGIN

ww_CLK20 <= CLK20;
ww_buf_res <= buf_res;
ww_RST <= RST;
ww_tcal_psnd <= tcal_psnd;
ww_rx_dpr_radr_local_0 <= rx_dpr_radr_local_0;
ww_rx_dpr_radr_local_1 <= rx_dpr_radr_local_1;
ww_msg_sent <= msg_sent;
ww_send_data <= send_data;
ww_rx_dpr_radr_local_2 <= rx_dpr_radr_local_2;
ww_rx_dpr_radr_local_3 <= rx_dpr_radr_local_3;
ww_rx_dpr_radr_local_4 <= rx_dpr_radr_local_4;
ww_rx_dpr_radr_local_5 <= rx_dpr_radr_local_5;
ww_rx_dpr_radr_local_6 <= rx_dpr_radr_local_6;
ww_rx_dpr_radr_local_7 <= rx_dpr_radr_local_7;
ww_rx_dpr_radr_local_8 <= rx_dpr_radr_local_8;
ww_rx_dpr_radr_local_9 <= rx_dpr_radr_local_9;
ww_rx_dpr_radr_local_10 <= rx_dpr_radr_local_10;
ww_rx_dpr_radr_local_11 <= rx_dpr_radr_local_11;
ww_rx_dpr_radr_local_12 <= rx_dpr_radr_local_12;
ww_rx_dpr_radr_local_13 <= rx_dpr_radr_local_13;
ww_rx_dpr_radr_local_14 <= rx_dpr_radr_local_14;
ww_rx_dpr_radr_local_15 <= rx_dpr_radr_local_15;
ww_sreg1 <= sreg1;
ww_rx_dpr_radr_stb <= rx_dpr_radr_stb;
ww_send_ctrl <= send_ctrl;
ww_sreg2 <= sreg2;
ww_GND_port <= GND_port;
ww_COM_AD_D <= COM_AD_D;
ww_A_nB <= A_nB;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_15 <= ww_sload_path_15;
sload_path_14 <= ww_sload_path_14;
sload_path_13 <= ww_sload_path_13;
sload_path_12 <= ww_sload_path_12;
sload_path_11 <= ww_sload_path_11;
sload_path_10 <= ww_sload_path_10;
sload_path_9 <= ww_sload_path_9;
sload_path_8 <= ww_sload_path_8;
sload_path_7 <= ww_sload_path_7;
sload_path_6 <= ww_sload_path_6;
sload_path_5 <= ww_sload_path_5;
sload_path_4 <= ww_sload_path_4;
sload_path_3 <= ww_sload_path_3;
sload_path_2 <= ww_sload_path_2;
sload_path_1 <= ww_sload_path_1;
sload_path_0 <= ww_sload_path_0;
q_15 <= ww_q_15;
q_14 <= ww_q_14;
q_13 <= ww_q_13;
q_12 <= ww_q_12;
q_11 <= ww_q_11;
q_10 <= ww_q_10;
q_9 <= ww_q_9;
q_8 <= ww_q_8;
q_7 <= ww_q_7;
q_6 <= ww_q_6;
q_5 <= ww_q_5;
q_4 <= ww_q_4;
q_3 <= ww_q_3;
q_2 <= ww_q_2;
q_1 <= ww_q_1;
q_0 <= ww_q_0;
pulse_rcvd <= ww_pulse_rcvd;
tcal_rcvd <= ww_tcal_rcvd;
ctrl_error <= ww_ctrl_error;
idle_rcvd <= ww_idle_rcvd;
drreq_rcvd <= ww_drreq_rcvd;
rx_we <= ww_rx_we;
inst46_0 <= ww_inst46_0;
inst46_1 <= ww_inst46_1;
inst46_2 <= ww_inst46_2;
inst46_3 <= ww_inst46_3;
inst46_4 <= ww_inst46_4;
inst46_5 <= ww_inst46_5;
inst46_6 <= ww_inst46_6;
inst46_7 <= ww_inst46_7;
inst43_0 <= ww_inst43_0;
inst43_1 <= ww_inst43_1;
inst43_2 <= ww_inst43_2;
inst43_3 <= ww_inst43_3;
inst43_4 <= ww_inst43_4;
inst43_5 <= ww_inst43_5;
inst43_6 <= ww_inst43_6;
inst43_7 <= ww_inst43_7;
inst41_0 <= ww_inst41_0;
inst41_1 <= ww_inst41_1;
inst41_2 <= ww_inst41_2;
inst41_3 <= ww_inst41_3;
inst41_4 <= ww_inst41_4;
inst41_5 <= ww_inst41_5;
inst41_6 <= ww_inst41_6;
inst41_7 <= ww_inst41_7;
inst38_0 <= ww_inst38_0;
inst38_1 <= ww_inst38_1;
inst38_2 <= ww_inst38_2;
inst38_3 <= ww_inst38_3;
inst38_4 <= ww_inst38_4;
inst38_5 <= ww_inst38_5;
inst38_6 <= ww_inst38_6;
inst38_7 <= ww_inst38_7;
sysres_rcvd <= ww_sysres_rcvd;
sreg <= ww_sreg;
stf_stb <= ww_stf_stb;
comres_rcvd <= ww_comres_rcvd;
last_node_0 <= ww_last_node_0;
op_6 <= ww_op_6;
data_rcvd <= ww_data_rcvd;
idreq_rcvd <= ww_idreq_rcvd;
bfstat_rcvd <= ww_bfstat_rcvd;
op_61 <= ww_op_61;
b_non_empty <= ww_b_non_empty;
op_62 <= ww_op_62;
q_81 <= ww_q_81;
q_01 <= ww_q_01;
q_91 <= ww_q_91;
q_16 <= ww_q_16;
q_21 <= ww_q_21;
q_31 <= ww_q_31;
q_41 <= ww_q_41;
q_51 <= ww_q_51;
q_61 <= ww_q_61;
q_71 <= ww_q_71;

ww_inst29_fc_adc <= (ww_COM_AD_D(9) & ww_COM_AD_D(8) & ww_COM_AD_D(7) & ww_COM_AD_D(6) & ww_COM_AD_D(5) & ww_COM_AD_D(4) & ww_COM_AD_D(3) & ww_COM_AD_D(2) & ww_COM_AD_D(1) & ww_COM_AD_D(0));
ALT_NOT_ww_buf_res <= NOT ww_buf_res;
\ALT_NOT_inst10|byte_ena0a~reg\ <= NOT \inst10|byte_ena0a~reg\;
inst : RX_UART_ap
PORT MAP (
	clk => ww_CLK20,
	RST => ww_RST,
	rxd => \get_dudt_stm|rxd~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	stf_stb => ww_stf_stb,
	eof_stb => \inst|eof_stb~reg\,
	data_stb => \inst|data_stb~reg\,
	dffs_0 => \lpm_shiftreg_component|dffs[0]\,
	dffs_1 => \lpm_shiftreg_component|dffs[1]\,
	dffs_2 => \lpm_shiftreg_component|dffs[2]\,
	dffs_3 => \lpm_shiftreg_component|dffs[3]\,
	dffs_4 => \lpm_shiftreg_component|dffs[4]\,
	dffs_5 => \lpm_shiftreg_component|dffs[5]\,
	dffs_6 => \lpm_shiftreg_component|dffs[6]\,
	dffs_7 => \lpm_shiftreg_component|dffs[7]\,
	ctclr => \inst|ctclr~reg\);
inst18 : adc_to_ser_dudt
PORT MAP (
	CLK => ww_CLK20,
	ctclr => \inst|ctclr~reg\,
	inst1 => \inst1~45\,
	points_9_0 => \external_latency_ffs|points[0][9]\,
	points_8_0 => \external_latency_ffs|points[0][8]\,
	points_5_0 => \external_latency_ffs|points[0][5]\,
	points_4_0 => \external_latency_ffs|points[0][4]\,
	points_2_0 => \external_latency_ffs|points[0][2]\,
	points_3_0 => \external_latency_ffs|points[0][3]\,
	points_6_0 => \external_latency_ffs|points[0][6]\,
	points_7_0 => \external_latency_ffs|points[0][7]\,
	points_0_0 => \external_latency_ffs|points[0][0]\,
	points_1_0 => \external_latency_ffs|points[0][1]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	hl_edge => \inst18|hl_edge~reg\,
	rxd => \get_dudt_stm|rxd~reg\);
inst21 : mean_val
PORT MAP (
	clk => ww_CLK20,
	reset => \inst1~45\,
	COM_AD_D_9 => ww_COM_AD_D(9),
	COM_AD_D_8 => ww_COM_AD_D(8),
	COM_AD_D_7 => ww_COM_AD_D(7),
	COM_AD_D_6 => ww_COM_AD_D(6),
	COM_AD_D_5 => ww_COM_AD_D(5),
	COM_AD_D_4 => ww_COM_AD_D(4),
	COM_AD_D_2 => ww_COM_AD_D(2),
	COM_AD_D_3 => ww_COM_AD_D(3),
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	points_9_0 => \external_latency_ffs|points[0][9]\,
	points_8_0 => \external_latency_ffs|points[0][8]\,
	points_5_0 => \external_latency_ffs|points[0][5]\,
	points_4_0 => \external_latency_ffs|points[0][4]\,
	points_2_0 => \external_latency_ffs|points[0][2]\,
	points_3_0 => \external_latency_ffs|points[0][3]\,
	points_6_0 => \external_latency_ffs|points[0][6]\,
	points_7_0 => \external_latency_ffs|points[0][7]\,
	points_0_0 => \external_latency_ffs|points[0][0]\,
	points_1_0 => \external_latency_ffs|points[0][1]\);
inst4 : dc_hdr_dec_ap
PORT MAP (
	clk => ww_CLK20,
	ctrl_rcvd => \inst10|ctrl_rcvd~reg\,
	stf_stb => ww_stf_stb,
	data_stb => \inst|data_stb~reg\,
	dffs_0 => \lpm_shiftreg_component|dffs[0]\,
	dffs_1 => \lpm_shiftreg_component|dffs[1]\,
	dffs_2 => \lpm_shiftreg_component|dffs[2]\,
	dffs_3 => \lpm_shiftreg_component|dffs[3]\,
	dffs_4 => \lpm_shiftreg_component|dffs[4]\,
	dffs_5 => \lpm_shiftreg_component|dffs[5]\,
	dffs_6 => \lpm_shiftreg_component|dffs[6]\,
	dffs_7 => \lpm_shiftreg_component|dffs[7]\,
	cmd_ena => \inst10|cmd_ena~reg\,
	msg_type_ena => \inst10|msg_type_ena~reg\,
	A_nB => ww_A_nB,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	tcal_rcvd => ww_tcal_rcvd,
	idle_rcvd => ww_idle_rcvd,
	drreq_rcvd => ww_drreq_rcvd,
	sysres_rcvd => ww_sysres_rcvd,
	comres_rcvd => ww_comres_rcvd,
	cmd_rec_3 => \inst4|cmd_rec[3]~11\,
	data_msg => \inst4|data_msg~reg\,
	idreq_rcvd => ww_idreq_rcvd,
	bfstat_rcvd => ww_bfstat_rcvd);
inst10 : DC_MRAP
PORT MAP (
	CLK => ww_CLK20,
	stf_stb => ww_stf_stb,
	eof_stb => \inst|eof_stb~reg\,
	i => \inst20|i~698\,
	i1 => \inst20|i~703\,
	data_stb => \inst|data_stb~reg\,
	cmd_rec_3 => \inst4|cmd_rec[3]~11\,
	data_msg => \inst4|data_msg~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	ctrl_error => ww_ctrl_error,
	rx_we => ww_rx_we,
	ctrl_rcvd => \inst10|ctrl_rcvd~reg\,
	byte_ena0b => \inst10|byte_ena0b~reg\,
	byte_ena2 => \inst10|byte_ena2~reg\,
	byte_ena3 => \inst10|byte_ena3~reg\,
	data_error => \inst10|data_error~reg\,
	cmd_ena => \inst10|cmd_ena~reg\,
	msg_type_ena => \inst10|msg_type_ena~reg\,
	crc_init => \inst10|crc_init~reg\,
	byte_ena0a => \inst10|byte_ena0a~reg\,
	data_rcvd => ww_data_rcvd);
inst20 : crc_rx
PORT MAP (
	CLK => ww_CLK20,
	RST => ww_RST,
	data_stb => \inst|data_stb~reg\,
	dffs_0 => \lpm_shiftreg_component|dffs[0]\,
	dffs_1 => \lpm_shiftreg_component|dffs[1]\,
	dffs_2 => \lpm_shiftreg_component|dffs[2]\,
	dffs_3 => \lpm_shiftreg_component|dffs[3]\,
	dffs_4 => \lpm_shiftreg_component|dffs[4]\,
	dffs_5 => \lpm_shiftreg_component|dffs[5]\,
	dffs_6 => \lpm_shiftreg_component|dffs[6]\,
	dffs_7 => \lpm_shiftreg_component|dffs[7]\,
	crc_init => \inst10|crc_init~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	i => \inst20|i~698\,
	i1 => \inst20|i~703\);
inst29 : dc_rapcal_lh
PORT MAP (
	CCLK => ww_CLK20,
	tcal_rcvd => ww_tcal_rcvd,
	msg_sent => ww_msg_sent,
	sreg1 => ww_sreg1,
	hl_edge => \inst18|hl_edge~reg\,
	sreg2 => ww_sreg2,
	GND_port => ww_GND_port,
	fc_adc => ww_inst29_fc_adc,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	pulse_rcvd => ww_pulse_rcvd,
	sreg => ww_sreg,
	b_non_empty => ww_b_non_empty,
	q_8 => ww_q_81,
	q_0 => ww_q_01,
	q_9 => ww_q_91,
	q_1 => ww_q_16,
	q_2 => ww_q_21,
	q_3 => ww_q_31,
	q_4 => ww_q_41,
	q_5 => ww_q_51,
	q_6 => ww_q_61,
	q_7 => ww_q_71);
inst24 : Rx_dpr_ctrl_ap
PORT MAP (
	q_15 => ww_q_15,
	q_14 => ww_q_14,
	q_13 => ww_q_13,
	q_12 => ww_q_12,
	q_11 => ww_q_11,
	q_10 => ww_q_10,
	q_9 => ww_q_9,
	q_8 => ww_q_8,
	q_7 => ww_q_7,
	q_6 => ww_q_6,
	q_5 => ww_q_5,
	q_4 => ww_q_4,
	q_3 => ww_q_3,
	q_2 => ww_q_2,
	q_1 => ww_q_1,
	q_0 => ww_q_0,
	clk => ww_CLK20,
	buf_res => ww_buf_res,
	rx_dpr_radr_local_0 => ww_rx_dpr_radr_local_0,
	rx_dpr_radr_local_1 => ww_rx_dpr_radr_local_1,
	rx_dpr_radr_local_2 => ww_rx_dpr_radr_local_2,
	rx_dpr_radr_local_3 => ww_rx_dpr_radr_local_3,
	rx_dpr_radr_local_4 => ww_rx_dpr_radr_local_4,
	rx_dpr_radr_local_5 => ww_rx_dpr_radr_local_5,
	rx_dpr_radr_local_6 => ww_rx_dpr_radr_local_6,
	rx_dpr_radr_local_7 => ww_rx_dpr_radr_local_7,
	rx_dpr_radr_local_8 => ww_rx_dpr_radr_local_8,
	rx_dpr_radr_local_9 => ww_rx_dpr_radr_local_9,
	rx_dpr_radr_local_10 => ww_rx_dpr_radr_local_10,
	rx_dpr_radr_local_11 => ww_rx_dpr_radr_local_11,
	rx_dpr_radr_local_12 => ww_rx_dpr_radr_local_12,
	rx_dpr_radr_local_13 => ww_rx_dpr_radr_local_13,
	rx_dpr_radr_local_14 => ww_rx_dpr_radr_local_14,
	rx_dpr_radr_local_15 => ww_rx_dpr_radr_local_15,
	rx_dpr_radr_stb => ww_rx_dpr_radr_stb,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	op_6 => ww_op_6,
	op_61 => ww_op_61,
	op_62 => ww_op_62);
inst25 : rx_dpr_wadr_ct
PORT MAP (
	clock => ww_CLK20,
	aclr => ww_buf_res,
	inst40_0 => \inst40[0]\,
	data_error => \inst10|data_error~reg\,
	clk_en => inst5,
	inst40_1 => \inst40[1]\,
	inst40_2 => \inst40[2]\,
	inst40_3 => \inst40[3]\,
	inst40_4 => \inst40[4]\,
	inst40_5 => \inst40[5]\,
	inst40_6 => \inst40[6]\,
	inst40_7 => \inst40[7]\,
	inst40_8 => \inst40[8]\,
	inst40_9 => \inst40[9]\,
	inst40_10 => \inst40[10]\,
	inst40_11 => \inst40[11]\,
	inst40_12 => \inst40[12]\,
	inst40_13 => \inst40[13]\,
	inst40_14 => \inst40[14]\,
	inst40_15 => \inst40[15]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	q_15 => ww_q_15,
	q_14 => ww_q_14,
	q_13 => ww_q_13,
	q_12 => ww_q_12,
	q_11 => ww_q_11,
	q_10 => ww_q_10,
	q_9 => ww_q_9,
	q_8 => ww_q_8,
	q_7 => ww_q_7,
	q_6 => ww_q_6,
	q_5 => ww_q_5,
	q_4 => ww_q_4,
	q_3 => ww_q_3,
	q_2 => ww_q_2,
	q_1 => ww_q_1,
	q_0 => ww_q_0);
inst3 : my_or16b
PORT MAP (
	sload_path_0 => \wysi_counter|sload_path[0]\,
	pre_out_1 => \wysi_counter|pre_out[1]\,
	pre_out_2 => \wysi_counter|pre_out[2]\,
	pre_out_3 => \wysi_counter|pre_out[3]\,
	pre_out_4 => \wysi_counter|pre_out[4]\,
	pre_out_5 => \wysi_counter|pre_out[5]\,
	pre_out_6 => \wysi_counter|pre_out[6]\,
	pre_out_7 => \wysi_counter|pre_out[7]\,
	pre_out_8 => \wysi_counter|pre_out[8]\,
	pre_out_9 => \wysi_counter|pre_out[9]\,
	pre_out_10 => \wysi_counter|pre_out[10]\,
	pre_out_11 => \wysi_counter|pre_out[11]\,
	pre_out_12 => \wysi_counter|pre_out[12]\,
	pre_out_13 => \wysi_counter|pre_out[13]\,
	pre_out_14 => \wysi_counter|pre_out[14]\,
	pre_out_15 => \wysi_counter|pre_out[15]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	last_node_0 => ww_last_node_0);
inst23 : rx_packet_ct
PORT MAP (
	clock => ww_CLK20,
	aclr => ww_buf_res,
	updown => \inst36~29\,
	clk_en => inst22,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_0 => \wysi_counter|sload_path[0]\,
	pre_out_1 => \wysi_counter|pre_out[1]\,
	pre_out_2 => \wysi_counter|pre_out[2]\,
	pre_out_3 => \wysi_counter|pre_out[3]\,
	pre_out_4 => \wysi_counter|pre_out[4]\,
	pre_out_5 => \wysi_counter|pre_out[5]\,
	pre_out_6 => \wysi_counter|pre_out[6]\,
	pre_out_7 => \wysi_counter|pre_out[7]\,
	pre_out_8 => \wysi_counter|pre_out[8]\,
	pre_out_9 => \wysi_counter|pre_out[9]\,
	pre_out_10 => \wysi_counter|pre_out[10]\,
	pre_out_11 => \wysi_counter|pre_out[11]\,
	pre_out_12 => \wysi_counter|pre_out[12]\,
	pre_out_13 => \wysi_counter|pre_out[13]\,
	pre_out_14 => \wysi_counter|pre_out[14]\,
	pre_out_15 => \wysi_counter|pre_out[15]\);
inst16 : and16b
PORT MAP (
	sload_path_0 => \wysi_counter|sload_path[0]\,
	pre_out_1 => \wysi_counter|pre_out[1]\,
	pre_out_2 => \wysi_counter|pre_out[2]\,
	pre_out_3 => \wysi_counter|pre_out[3]\,
	pre_out_4 => \wysi_counter|pre_out[4]\,
	pre_out_5 => \wysi_counter|pre_out[5]\,
	pre_out_6 => \wysi_counter|pre_out[6]\,
	pre_out_7 => \wysi_counter|pre_out[7]\,
	pre_out_8 => \wysi_counter|pre_out[8]\,
	pre_out_9 => \wysi_counter|pre_out[9]\,
	pre_out_10 => \wysi_counter|pre_out[10]\,
	pre_out_11 => \wysi_counter|pre_out[11]\,
	pre_out_12 => \wysi_counter|pre_out[12]\,
	pre_out_13 => \wysi_counter|pre_out[13]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	and_node_6_0 => \lpm_and_component|and_node[0][6]\);
inst8 : crc_error_ct
PORT MAP (
	clock => ww_CLK20,
	aclr => ww_buf_res,
	clk_en => inst39,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_15 => ww_sload_path_15,
	sload_path_14 => ww_sload_path_14,
	sload_path_13 => ww_sload_path_13,
	sload_path_12 => ww_sload_path_12,
	sload_path_11 => ww_sload_path_11,
	sload_path_10 => ww_sload_path_10,
	sload_path_9 => ww_sload_path_9,
	sload_path_8 => ww_sload_path_8,
	sload_path_7 => ww_sload_path_7,
	sload_path_6 => ww_sload_path_6,
	sload_path_5 => ww_sload_path_5,
	sload_path_4 => ww_sload_path_4,
	sload_path_3 => ww_sload_path_3,
	sload_path_2 => ww_sload_path_2,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	cout => \wysi_counter|cout~0\);

\inst40[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inst40[0]\ = DFFE(q_0, GLOBAL(outclock0), buf_res, , cmd_ena)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_0,
	clk => ww_CLK20,
	aclr => ALT_NOT_ww_buf_res,
	ena => \inst10|cmd_ena~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inst40[0]\);

\inst5~I\ : apex20ke_lcell 
-- Equation(s):
-- inst5 = data_error # rx_we

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFF0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \inst10|data_error~reg\,
	datad => ww_rx_we,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => inst5);

\inst40[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inst40[1]\ = DFFE(q_1, GLOBAL(outclock0), buf_res, , cmd_ena)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_1,
	clk => ww_CLK20,
	aclr => ALT_NOT_ww_buf_res,
	ena => \inst10|cmd_ena~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inst40[1]\);

\inst40[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inst40[2]\ = DFFE(q_2, GLOBAL(outclock0), buf_res, , cmd_ena)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_2,
	clk => ww_CLK20,
	aclr => ALT_NOT_ww_buf_res,
	ena => \inst10|cmd_ena~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inst40[2]\);

\inst40[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inst40[3]\ = DFFE(q_3, GLOBAL(outclock0), buf_res, , cmd_ena)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_q_3,
	clk => ww_CLK20,
	aclr => ALT_NOT_ww_buf_res,
	ena => \inst10|cmd_ena~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inst40[3]\);

\inst40[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inst40[4]\ = DFFE(q_4, GLOBAL(outclock0), buf_res, , cmd_ena)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_q_4,
	clk => ww_CLK20,
	aclr => ALT_NOT_ww_buf_res,
	ena => \inst10|cmd_ena~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inst40[4]\);

\inst40[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inst40[5]\ = DFFE(q_5, GLOBAL(outclock0), buf_res, , cmd_ena)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_q_5,
	clk => ww_CLK20,
	aclr => ALT_NOT_ww_buf_res,
	ena => \inst10|cmd_ena~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inst40[5]\);

\inst40[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inst40[6]\ = DFFE(q_6, GLOBAL(outclock0), buf_res, , cmd_ena)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_q_6,
	clk => ww_CLK20,
	aclr => ALT_NOT_ww_buf_res,
	ena => \inst10|cmd_ena~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inst40[6]\);

\inst40[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inst40[7]\ = DFFE(q_7, GLOBAL(outclock0), buf_res, , cmd_ena)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_7,
	clk => ww_CLK20,
	aclr => ALT_NOT_ww_buf_res,
	ena => \inst10|cmd_ena~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inst40[7]\);

\inst40[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inst40[8]\ = DFFE(q_8, GLOBAL(outclock0), buf_res, , cmd_ena)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_q_8,
	clk => ww_CLK20,
	aclr => ALT_NOT_ww_buf_res,
	ena => \inst10|cmd_ena~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inst40[8]\);

\inst40[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inst40[9]\ = DFFE(q_9, GLOBAL(outclock0), buf_res, , cmd_ena)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_9,
	clk => ww_CLK20,
	aclr => ALT_NOT_ww_buf_res,
	ena => \inst10|cmd_ena~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inst40[9]\);

\inst40[10]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inst40[10]\ = DFFE(q_10, GLOBAL(outclock0), buf_res, , cmd_ena)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_10,
	clk => ww_CLK20,
	aclr => ALT_NOT_ww_buf_res,
	ena => \inst10|cmd_ena~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inst40[10]\);

\inst40[11]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inst40[11]\ = DFFE(q_11, GLOBAL(outclock0), buf_res, , cmd_ena)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_11,
	clk => ww_CLK20,
	aclr => ALT_NOT_ww_buf_res,
	ena => \inst10|cmd_ena~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inst40[11]\);

\inst40[12]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inst40[12]\ = DFFE(q_12, GLOBAL(outclock0), buf_res, , cmd_ena)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_12,
	clk => ww_CLK20,
	aclr => ALT_NOT_ww_buf_res,
	ena => \inst10|cmd_ena~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inst40[12]\);

\inst39~I\ : apex20ke_lcell 
-- Equation(s):
-- inst39 = !cout1 & data_error

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0F00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|cout~0\,
	datad => \inst10|data_error~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => inst39);

\inst36~29_I\ : apex20ke_lcell 
-- Equation(s):
-- \inst36~29\ = data_rcvd & (!and_node_6_0 # !pre_out_15 # !pre_out_14)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "7F00",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|pre_out[14]\,
	datab => \wysi_counter|pre_out[15]\,
	datad => ww_data_rcvd,
	cin => \lpm_and_component|and_node[0][6]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \inst36~29\);

\inst44~I\ : apex20ke_lcell 
-- Equation(s):
-- inst44 = DFFE(rx_dpr_radr_stb, GLOBAL(outclock0), , , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_rx_dpr_radr_stb,
	clk => ww_CLK20,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => inst44);

\inst22~I\ : apex20ke_lcell 
-- Equation(s):
-- inst22 = \inst36~29\ $ (last_node_0 & rx_dpr_radr_stb & !inst44)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F078",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_last_node_0,
	datab => ww_rx_dpr_radr_stb,
	datac => \inst36~29\,
	datad => inst44,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => inst22);

\inst40[13]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inst40[13]\ = DFFE(q_13, GLOBAL(outclock0), buf_res, , cmd_ena)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_13,
	clk => ww_CLK20,
	aclr => ALT_NOT_ww_buf_res,
	ena => \inst10|cmd_ena~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inst40[13]\);

\inst40[14]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inst40[14]\ = DFFE(q_14, GLOBAL(outclock0), buf_res, , cmd_ena)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_14,
	clk => ww_CLK20,
	aclr => ALT_NOT_ww_buf_res,
	ena => \inst10|cmd_ena~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inst40[14]\);

\inst40[15]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inst40[15]\ = DFFE(q_15, GLOBAL(outclock0), buf_res, , cmd_ena)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_q_15,
	clk => ww_CLK20,
	aclr => ALT_NOT_ww_buf_res,
	ena => \inst10|cmd_ena~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inst40[15]\);

\inst1~45_I\ : apex20ke_lcell 
-- Equation(s):
-- \inst1~45\ = tcal_psnd # RST # send_data # send_ctrl1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFE",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_tcal_psnd,
	datab => ww_RST,
	datac => ww_send_data,
	datad => ww_send_ctrl,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \inst1~45\);

\inst46[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst46_0 = DFFE(\inst45[0]\, GLOBAL(outclock0), , , byte_ena0b)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \inst45[0]\,
	clk => ww_CLK20,
	ena => \inst10|byte_ena0b~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst46_0);

\inst46[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst46_1 = DFFE(\inst45[1]\, GLOBAL(outclock0), , , byte_ena0b)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \inst45[1]\,
	clk => ww_CLK20,
	ena => \inst10|byte_ena0b~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst46_1);

\inst46[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst46_2 = DFFE(\inst45[2]\, GLOBAL(outclock0), , , byte_ena0b)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \inst45[2]\,
	clk => ww_CLK20,
	ena => \inst10|byte_ena0b~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst46_2);

\inst46[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst46_3 = DFFE(\inst45[3]\, GLOBAL(outclock0), , , byte_ena0b)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \inst45[3]\,
	clk => ww_CLK20,
	ena => \inst10|byte_ena0b~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst46_3);

\inst46[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst46_4 = DFFE(\inst45[4]\, GLOBAL(outclock0), , , byte_ena0b)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \inst45[4]\,
	clk => ww_CLK20,
	ena => \inst10|byte_ena0b~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst46_4);

\inst46[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst46_5 = DFFE(\inst45[5]\, GLOBAL(outclock0), , , byte_ena0b)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \inst45[5]\,
	clk => ww_CLK20,
	ena => \inst10|byte_ena0b~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst46_5);

\inst46[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst46_6 = DFFE(\inst45[6]\, GLOBAL(outclock0), , , byte_ena0b)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \inst45[6]\,
	clk => ww_CLK20,
	ena => \inst10|byte_ena0b~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst46_6);

\inst46[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst46_7 = DFFE(\inst45[7]\, GLOBAL(outclock0), , , byte_ena0b)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \inst45[7]\,
	clk => ww_CLK20,
	ena => \inst10|byte_ena0b~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst46_7);

\inst43[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst43_0 = DFFE(dffs_0, GLOBAL(outclock0), , , byte_ena0b)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \lpm_shiftreg_component|dffs[0]\,
	clk => ww_CLK20,
	ena => \inst10|byte_ena0b~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst43_0);

\inst43[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst43_1 = DFFE(dffs_1, GLOBAL(outclock0), , , byte_ena0b)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \lpm_shiftreg_component|dffs[1]\,
	clk => ww_CLK20,
	ena => \inst10|byte_ena0b~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst43_1);

\inst43[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst43_2 = DFFE(dffs_2, GLOBAL(outclock0), , , byte_ena0b)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \lpm_shiftreg_component|dffs[2]\,
	clk => ww_CLK20,
	ena => \inst10|byte_ena0b~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst43_2);

\inst43[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst43_3 = DFFE(dffs_3, GLOBAL(outclock0), , , byte_ena0b)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \lpm_shiftreg_component|dffs[3]\,
	clk => ww_CLK20,
	ena => \inst10|byte_ena0b~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst43_3);

\inst43[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst43_4 = DFFE(dffs_4, GLOBAL(outclock0), , , byte_ena0b)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \lpm_shiftreg_component|dffs[4]\,
	clk => ww_CLK20,
	ena => \inst10|byte_ena0b~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst43_4);

\inst43[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst43_5 = DFFE(dffs_5, GLOBAL(outclock0), , , byte_ena0b)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \lpm_shiftreg_component|dffs[5]\,
	clk => ww_CLK20,
	ena => \inst10|byte_ena0b~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst43_5);

\inst43[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst43_6 = DFFE(dffs_6, GLOBAL(outclock0), , , byte_ena0b)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \lpm_shiftreg_component|dffs[6]\,
	clk => ww_CLK20,
	ena => \inst10|byte_ena0b~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst43_6);

\inst43[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst43_7 = DFFE(dffs_7, GLOBAL(outclock0), , , byte_ena0b)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \lpm_shiftreg_component|dffs[7]\,
	clk => ww_CLK20,
	ena => \inst10|byte_ena0b~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst43_7);

\inst41[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst41_0 = DFFE(dffs_0, GLOBAL(outclock0), , , byte_ena2)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \lpm_shiftreg_component|dffs[0]\,
	clk => ww_CLK20,
	ena => \inst10|byte_ena2~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst41_0);

\inst41[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst41_1 = DFFE(dffs_1, GLOBAL(outclock0), , , byte_ena2)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \lpm_shiftreg_component|dffs[1]\,
	clk => ww_CLK20,
	ena => \inst10|byte_ena2~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst41_1);

\inst41[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst41_2 = DFFE(dffs_2, GLOBAL(outclock0), , , byte_ena2)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \lpm_shiftreg_component|dffs[2]\,
	clk => ww_CLK20,
	ena => \inst10|byte_ena2~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst41_2);

\inst41[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst41_3 = DFFE(dffs_3, GLOBAL(outclock0), , , byte_ena2)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \lpm_shiftreg_component|dffs[3]\,
	clk => ww_CLK20,
	ena => \inst10|byte_ena2~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst41_3);

\inst41[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst41_4 = DFFE(dffs_4, GLOBAL(outclock0), , , byte_ena2)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \lpm_shiftreg_component|dffs[4]\,
	clk => ww_CLK20,
	ena => \inst10|byte_ena2~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst41_4);

\inst41[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst41_5 = DFFE(dffs_5, GLOBAL(outclock0), , , byte_ena2)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \lpm_shiftreg_component|dffs[5]\,
	clk => ww_CLK20,
	ena => \inst10|byte_ena2~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst41_5);

\inst41[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst41_6 = DFFE(dffs_6, GLOBAL(outclock0), , , byte_ena2)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \lpm_shiftreg_component|dffs[6]\,
	clk => ww_CLK20,
	ena => \inst10|byte_ena2~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst41_6);

\inst41[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst41_7 = DFFE(dffs_7, GLOBAL(outclock0), , , byte_ena2)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \lpm_shiftreg_component|dffs[7]\,
	clk => ww_CLK20,
	ena => \inst10|byte_ena2~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst41_7);

\inst38[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst38_0 = DFFE(dffs_0, GLOBAL(outclock0), , , byte_ena3)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \lpm_shiftreg_component|dffs[0]\,
	clk => ww_CLK20,
	ena => \inst10|byte_ena3~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst38_0);

\inst38[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst38_1 = DFFE(dffs_1, GLOBAL(outclock0), , , byte_ena3)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \lpm_shiftreg_component|dffs[1]\,
	clk => ww_CLK20,
	ena => \inst10|byte_ena3~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst38_1);

\inst38[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst38_2 = DFFE(dffs_2, GLOBAL(outclock0), , , byte_ena3)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \lpm_shiftreg_component|dffs[2]\,
	clk => ww_CLK20,
	ena => \inst10|byte_ena3~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst38_2);

\inst38[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst38_3 = DFFE(dffs_3, GLOBAL(outclock0), , , byte_ena3)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \lpm_shiftreg_component|dffs[3]\,
	clk => ww_CLK20,
	ena => \inst10|byte_ena3~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst38_3);

\inst38[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst38_4 = DFFE(dffs_4, GLOBAL(outclock0), , , byte_ena3)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \lpm_shiftreg_component|dffs[4]\,
	clk => ww_CLK20,
	ena => \inst10|byte_ena3~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst38_4);

\inst38[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst38_5 = DFFE(dffs_5, GLOBAL(outclock0), , , byte_ena3)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \lpm_shiftreg_component|dffs[5]\,
	clk => ww_CLK20,
	ena => \inst10|byte_ena3~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst38_5);

\inst38[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst38_6 = DFFE(dffs_6, GLOBAL(outclock0), , , byte_ena3)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \lpm_shiftreg_component|dffs[6]\,
	clk => ww_CLK20,
	ena => \inst10|byte_ena3~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst38_6);

\inst38[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- inst38_7 = DFFE(dffs_7, GLOBAL(outclock0), , , byte_ena3)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \lpm_shiftreg_component|dffs[7]\,
	clk => ww_CLK20,
	ena => \inst10|byte_ena3~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_inst38_7);

\inst45[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inst45[0]\ = DFFE(dffs_0, GLOBAL(outclock0), , , !byte_ena0a)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \lpm_shiftreg_component|dffs[0]\,
	clk => ww_CLK20,
	ena => \ALT_NOT_inst10|byte_ena0a~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inst45[0]\);

\inst45[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inst45[1]\ = DFFE(dffs_1, GLOBAL(outclock0), , , !byte_ena0a)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \lpm_shiftreg_component|dffs[1]\,
	clk => ww_CLK20,
	ena => \ALT_NOT_inst10|byte_ena0a~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inst45[1]\);

\inst45[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inst45[2]\ = DFFE(dffs_2, GLOBAL(outclock0), , , !byte_ena0a)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \lpm_shiftreg_component|dffs[2]\,
	clk => ww_CLK20,
	ena => \ALT_NOT_inst10|byte_ena0a~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inst45[2]\);

\inst45[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inst45[3]\ = DFFE(dffs_3, GLOBAL(outclock0), , , !byte_ena0a)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \lpm_shiftreg_component|dffs[3]\,
	clk => ww_CLK20,
	ena => \ALT_NOT_inst10|byte_ena0a~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inst45[3]\);

\inst45[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inst45[4]\ = DFFE(dffs_4, GLOBAL(outclock0), , , !byte_ena0a)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \lpm_shiftreg_component|dffs[4]\,
	clk => ww_CLK20,
	ena => \ALT_NOT_inst10|byte_ena0a~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inst45[4]\);

\inst45[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inst45[5]\ = DFFE(dffs_5, GLOBAL(outclock0), , , !byte_ena0a)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \lpm_shiftreg_component|dffs[5]\,
	clk => ww_CLK20,
	ena => \ALT_NOT_inst10|byte_ena0a~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inst45[5]\);

\inst45[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inst45[6]\ = DFFE(dffs_6, GLOBAL(outclock0), , , !byte_ena0a)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \lpm_shiftreg_component|dffs[6]\,
	clk => ww_CLK20,
	ena => \ALT_NOT_inst10|byte_ena0a~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inst45[6]\);

\inst45[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- \inst45[7]\ = DFFE(dffs_7, GLOBAL(outclock0), , , !byte_ena0a)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \lpm_shiftreg_component|dffs[7]\,
	clk => ww_CLK20,
	ena => \ALT_NOT_inst10|byte_ena0a~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \inst45[7]\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	cmpchain_17 IS
    PORT (
	sload_path_11 : IN std_logic;
	sload_path_10 : IN std_logic;
	sload_path_9 : IN std_logic;
	sload_path_8 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic
	);
END cmpchain_17;

ARCHITECTURE structure OF cmpchain_17 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_11 : std_logic;
SIGNAL ww_sload_path_10 : std_logic;
SIGNAL ww_sload_path_9 : std_logic;
SIGNAL ww_sload_path_8 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_aeb_out : std_logic;

BEGIN

ww_sload_path_11 <= sload_path_11;
ww_sload_path_10 <= sload_path_10;
ww_sload_path_9 <= sload_path_9;
ww_sload_path_8 <= sload_path_8;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
aeb_out <= ww_aeb_out;

\aeb_out~25\ : apex20ke_lcell 
-- Equation(s):
-- aeb_out = sload_path_11 & !sload_path_8 & sload_path_9 & sload_path_10

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "2000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_11,
	datab => ww_sload_path_8,
	datac => ww_sload_path_9,
	datad => ww_sload_path_10,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_aeb_out);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	cmpchain_16 IS
    PORT (
	sload_path_7 : IN std_logic;
	sload_path_6 : IN std_logic;
	sload_path_5 : IN std_logic;
	sload_path_4 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic
	);
END cmpchain_16;

ARCHITECTURE structure OF cmpchain_16 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_7 : std_logic;
SIGNAL ww_sload_path_6 : std_logic;
SIGNAL ww_sload_path_5 : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_aeb_out : std_logic;

BEGIN

ww_sload_path_7 <= sload_path_7;
ww_sload_path_6 <= sload_path_6;
ww_sload_path_5 <= sload_path_5;
ww_sload_path_4 <= sload_path_4;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
aeb_out <= ww_aeb_out;

\aeb_out~25\ : apex20ke_lcell 
-- Equation(s):
-- aeb_out = !sload_path_5 & sload_path_4 & !sload_path_7 & !sload_path_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0004",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_5,
	datab => ww_sload_path_4,
	datac => ww_sload_path_7,
	datad => ww_sload_path_6,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_aeb_out);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	cmpchain_15 IS
    PORT (
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic
	);
END cmpchain_15;

ARCHITECTURE structure OF cmpchain_15 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_aeb_out : std_logic;

BEGIN

ww_sload_path_3 <= sload_path_3;
ww_sload_path_2 <= sload_path_2;
ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
aeb_out <= ww_aeb_out;

\aeb_out~25\ : apex20ke_lcell 
-- Equation(s):
-- aeb_out = sload_path_3 & sload_path_0 & sload_path_1 & sload_path_2

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_3,
	datab => ww_sload_path_0,
	datac => ww_sload_path_1,
	datad => ww_sload_path_2,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_aeb_out);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	cmpchain_18 IS
    PORT (
	sload_path_14 : IN std_logic;
	sload_path_13 : IN std_logic;
	sload_path_12 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic
	);
END cmpchain_18;

ARCHITECTURE structure OF cmpchain_18 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_14 : std_logic;
SIGNAL ww_sload_path_13 : std_logic;
SIGNAL ww_sload_path_12 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_aeb_out : std_logic;

BEGIN

ww_sload_path_14 <= sload_path_14;
ww_sload_path_13 <= sload_path_13;
ww_sload_path_12 <= sload_path_12;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
aeb_out <= ww_aeb_out;

\aeb_out~0\ : apex20ke_lcell 
-- Equation(s):
-- aeb_out = !sload_path_12 & sload_path_14 & !sload_path_13

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0044",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_12,
	datab => ww_sload_path_14,
	datad => ww_sload_path_13,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_aeb_out);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	cmpchain_19 IS
    PORT (
	aeb_out1 : IN std_logic;
	aeb_out2 : IN std_logic;
	aeb_out3 : IN std_logic;
	aeb_out4 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic
	);
END cmpchain_19;

ARCHITECTURE structure OF cmpchain_19 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_aeb_out1 : std_logic;
SIGNAL ww_aeb_out2 : std_logic;
SIGNAL ww_aeb_out3 : std_logic;
SIGNAL ww_aeb_out4 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_aeb_out : std_logic;

BEGIN

ww_aeb_out1 <= aeb_out1;
ww_aeb_out2 <= aeb_out2;
ww_aeb_out3 <= aeb_out3;
ww_aeb_out4 <= aeb_out4;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
aeb_out <= ww_aeb_out;

\aeb_out~25\ : apex20ke_lcell 
-- Equation(s):
-- aeb_out = aeb_out & aeb_out & aeb_out & aeb_out

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "8000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_aeb_out4,
	datab => ww_aeb_out2,
	datac => ww_aeb_out3,
	datad => ww_aeb_out1,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_aeb_out);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	comptree_14 IS
    PORT (
	aeb_out1 : IN std_logic;
	aeb_out2 : IN std_logic;
	aeb_out3 : IN std_logic;
	aeb_out4 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic
	);
END comptree_14;

ARCHITECTURE structure OF comptree_14 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_aeb_out1 : std_logic;
SIGNAL ww_aeb_out2 : std_logic;
SIGNAL ww_aeb_out3 : std_logic;
SIGNAL ww_aeb_out4 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_aeb_out : std_logic;

COMPONENT cmpchain_19
    PORT (
	aeb_out1 : IN std_logic;
	aeb_out2 : IN std_logic;
	aeb_out3 : IN std_logic;
	aeb_out4 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic);
END COMPONENT;

BEGIN

ww_aeb_out1 <= aeb_out1;
ww_aeb_out2 <= aeb_out2;
ww_aeb_out3 <= aeb_out3;
ww_aeb_out4 <= aeb_out4;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
aeb_out <= ww_aeb_out;
cmp_end : cmpchain_19
PORT MAP (
	aeb_out1 => ww_aeb_out1,
	aeb_out2 => ww_aeb_out2,
	aeb_out3 => ww_aeb_out3,
	aeb_out4 => ww_aeb_out4,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	aeb_out => ww_aeb_out);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	comptree_13 IS
    PORT (
	sload_path_14 : IN std_logic;
	sload_path_13 : IN std_logic;
	sload_path_12 : IN std_logic;
	sload_path_11 : IN std_logic;
	sload_path_10 : IN std_logic;
	sload_path_9 : IN std_logic;
	sload_path_8 : IN std_logic;
	sload_path_7 : IN std_logic;
	sload_path_6 : IN std_logic;
	sload_path_5 : IN std_logic;
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic
	);
END comptree_13;

ARCHITECTURE structure OF comptree_13 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_14 : std_logic;
SIGNAL ww_sload_path_13 : std_logic;
SIGNAL ww_sload_path_12 : std_logic;
SIGNAL ww_sload_path_11 : std_logic;
SIGNAL ww_sload_path_10 : std_logic;
SIGNAL ww_sload_path_9 : std_logic;
SIGNAL ww_sload_path_8 : std_logic;
SIGNAL ww_sload_path_7 : std_logic;
SIGNAL ww_sload_path_6 : std_logic;
SIGNAL ww_sload_path_5 : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_aeb_out : std_logic;
SIGNAL \cmp_end|aeb_out\ : std_logic;
SIGNAL \cmp[2]|aeb_out\ : std_logic;
SIGNAL \cmp[0]|aeb_out\ : std_logic;
SIGNAL \cmp[1]|aeb_out\ : std_logic;

COMPONENT cmpchain_17
    PORT (
	sload_path_11 : IN std_logic;
	sload_path_10 : IN std_logic;
	sload_path_9 : IN std_logic;
	sload_path_8 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic);
END COMPONENT;

COMPONENT cmpchain_16
    PORT (
	sload_path_7 : IN std_logic;
	sload_path_6 : IN std_logic;
	sload_path_5 : IN std_logic;
	sload_path_4 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic);
END COMPONENT;

COMPONENT cmpchain_15
    PORT (
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic);
END COMPONENT;

COMPONENT cmpchain_18
    PORT (
	sload_path_14 : IN std_logic;
	sload_path_13 : IN std_logic;
	sload_path_12 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic);
END COMPONENT;

COMPONENT comptree_14
    PORT (
	aeb_out1 : IN std_logic;
	aeb_out2 : IN std_logic;
	aeb_out3 : IN std_logic;
	aeb_out4 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic);
END COMPONENT;

BEGIN

ww_sload_path_14 <= sload_path_14;
ww_sload_path_13 <= sload_path_13;
ww_sload_path_12 <= sload_path_12;
ww_sload_path_11 <= sload_path_11;
ww_sload_path_10 <= sload_path_10;
ww_sload_path_9 <= sload_path_9;
ww_sload_path_8 <= sload_path_8;
ww_sload_path_7 <= sload_path_7;
ww_sload_path_6 <= sload_path_6;
ww_sload_path_5 <= sload_path_5;
ww_sload_path_4 <= sload_path_4;
ww_sload_path_3 <= sload_path_3;
ww_sload_path_2 <= sload_path_2;
ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
aeb_out <= ww_aeb_out;
\cmp[2]\ : cmpchain_17
PORT MAP (
	sload_path_11 => ww_sload_path_11,
	sload_path_10 => ww_sload_path_10,
	sload_path_9 => ww_sload_path_9,
	sload_path_8 => ww_sload_path_8,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	aeb_out => \cmp[2]|aeb_out\);
\cmp[1]\ : cmpchain_16
PORT MAP (
	sload_path_7 => ww_sload_path_7,
	sload_path_6 => ww_sload_path_6,
	sload_path_5 => ww_sload_path_5,
	sload_path_4 => ww_sload_path_4,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	aeb_out => \cmp[1]|aeb_out\);
\cmp[0]\ : cmpchain_15
PORT MAP (
	sload_path_3 => ww_sload_path_3,
	sload_path_2 => ww_sload_path_2,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	aeb_out => \cmp[0]|aeb_out\);
cmp_end : cmpchain_18
PORT MAP (
	sload_path_14 => ww_sload_path_14,
	sload_path_13 => ww_sload_path_13,
	sload_path_12 => ww_sload_path_12,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	aeb_out => \cmp_end|aeb_out\);
sub_comptree : comptree_14
PORT MAP (
	aeb_out1 => \cmp_end|aeb_out\,
	aeb_out2 => \cmp[2]|aeb_out\,
	aeb_out3 => \cmp[0]|aeb_out\,
	aeb_out4 => \cmp[1]|aeb_out\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	aeb_out => ww_aeb_out);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	cmpchain_14 IS
    PORT (
	sload_path_14 : IN std_logic;
	sload_path_13 : IN std_logic;
	sload_path_12 : IN std_logic;
	sload_path_11 : IN std_logic;
	sload_path_10 : IN std_logic;
	sload_path_9 : IN std_logic;
	sload_path_8 : IN std_logic;
	sload_path_7 : IN std_logic;
	sload_path_6 : IN std_logic;
	sload_path_5 : IN std_logic;
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic
	);
END cmpchain_14;

ARCHITECTURE structure OF cmpchain_14 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_14 : std_logic;
SIGNAL ww_sload_path_13 : std_logic;
SIGNAL ww_sload_path_12 : std_logic;
SIGNAL ww_sload_path_11 : std_logic;
SIGNAL ww_sload_path_10 : std_logic;
SIGNAL ww_sload_path_9 : std_logic;
SIGNAL ww_sload_path_8 : std_logic;
SIGNAL ww_sload_path_7 : std_logic;
SIGNAL ww_sload_path_6 : std_logic;
SIGNAL ww_sload_path_5 : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_aeb_out : std_logic;

COMPONENT comptree_13
    PORT (
	sload_path_14 : IN std_logic;
	sload_path_13 : IN std_logic;
	sload_path_12 : IN std_logic;
	sload_path_11 : IN std_logic;
	sload_path_10 : IN std_logic;
	sload_path_9 : IN std_logic;
	sload_path_8 : IN std_logic;
	sload_path_7 : IN std_logic;
	sload_path_6 : IN std_logic;
	sload_path_5 : IN std_logic;
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic);
END COMPONENT;

BEGIN

ww_sload_path_14 <= sload_path_14;
ww_sload_path_13 <= sload_path_13;
ww_sload_path_12 <= sload_path_12;
ww_sload_path_11 <= sload_path_11;
ww_sload_path_10 <= sload_path_10;
ww_sload_path_9 <= sload_path_9;
ww_sload_path_8 <= sload_path_8;
ww_sload_path_7 <= sload_path_7;
ww_sload_path_6 <= sload_path_6;
ww_sload_path_5 <= sload_path_5;
ww_sload_path_4 <= sload_path_4;
ww_sload_path_3 <= sload_path_3;
ww_sload_path_2 <= sload_path_2;
ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
aeb_out <= ww_aeb_out;
comp : comptree_13
PORT MAP (
	sload_path_14 => ww_sload_path_14,
	sload_path_13 => ww_sload_path_13,
	sload_path_12 => ww_sload_path_12,
	sload_path_11 => ww_sload_path_11,
	sload_path_10 => ww_sload_path_10,
	sload_path_9 => ww_sload_path_9,
	sload_path_8 => ww_sload_path_8,
	sload_path_7 => ww_sload_path_7,
	sload_path_6 => ww_sload_path_6,
	sload_path_5 => ww_sload_path_5,
	sload_path_4 => ww_sload_path_4,
	sload_path_3 => ww_sload_path_3,
	sload_path_2 => ww_sload_path_2,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	aeb_out => ww_aeb_out);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	comptree_12 IS
    PORT (
	sload_path_14 : IN std_logic;
	sload_path_13 : IN std_logic;
	sload_path_12 : IN std_logic;
	sload_path_11 : IN std_logic;
	sload_path_10 : IN std_logic;
	sload_path_9 : IN std_logic;
	sload_path_8 : IN std_logic;
	sload_path_7 : IN std_logic;
	sload_path_6 : IN std_logic;
	sload_path_5 : IN std_logic;
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic
	);
END comptree_12;

ARCHITECTURE structure OF comptree_12 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_14 : std_logic;
SIGNAL ww_sload_path_13 : std_logic;
SIGNAL ww_sload_path_12 : std_logic;
SIGNAL ww_sload_path_11 : std_logic;
SIGNAL ww_sload_path_10 : std_logic;
SIGNAL ww_sload_path_9 : std_logic;
SIGNAL ww_sload_path_8 : std_logic;
SIGNAL ww_sload_path_7 : std_logic;
SIGNAL ww_sload_path_6 : std_logic;
SIGNAL ww_sload_path_5 : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_aeb_out : std_logic;

COMPONENT cmpchain_14
    PORT (
	sload_path_14 : IN std_logic;
	sload_path_13 : IN std_logic;
	sload_path_12 : IN std_logic;
	sload_path_11 : IN std_logic;
	sload_path_10 : IN std_logic;
	sload_path_9 : IN std_logic;
	sload_path_8 : IN std_logic;
	sload_path_7 : IN std_logic;
	sload_path_6 : IN std_logic;
	sload_path_5 : IN std_logic;
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic);
END COMPONENT;

BEGIN

ww_sload_path_14 <= sload_path_14;
ww_sload_path_13 <= sload_path_13;
ww_sload_path_12 <= sload_path_12;
ww_sload_path_11 <= sload_path_11;
ww_sload_path_10 <= sload_path_10;
ww_sload_path_9 <= sload_path_9;
ww_sload_path_8 <= sload_path_8;
ww_sload_path_7 <= sload_path_7;
ww_sload_path_6 <= sload_path_6;
ww_sload_path_5 <= sload_path_5;
ww_sload_path_4 <= sload_path_4;
ww_sload_path_3 <= sload_path_3;
ww_sload_path_2 <= sload_path_2;
ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
aeb_out <= ww_aeb_out;
cmp_end : cmpchain_14
PORT MAP (
	sload_path_14 => ww_sload_path_14,
	sload_path_13 => ww_sload_path_13,
	sload_path_12 => ww_sload_path_12,
	sload_path_11 => ww_sload_path_11,
	sload_path_10 => ww_sload_path_10,
	sload_path_9 => ww_sload_path_9,
	sload_path_8 => ww_sload_path_8,
	sload_path_7 => ww_sload_path_7,
	sload_path_6 => ww_sload_path_6,
	sload_path_5 => ww_sload_path_5,
	sload_path_4 => ww_sload_path_4,
	sload_path_3 => ww_sload_path_3,
	sload_path_2 => ww_sload_path_2,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	aeb_out => ww_aeb_out);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_compare_8 IS
    PORT (
	sload_path_14 : IN std_logic;
	sload_path_13 : IN std_logic;
	sload_path_12 : IN std_logic;
	sload_path_11 : IN std_logic;
	sload_path_10 : IN std_logic;
	sload_path_9 : IN std_logic;
	sload_path_8 : IN std_logic;
	sload_path_7 : IN std_logic;
	sload_path_6 : IN std_logic;
	sload_path_5 : IN std_logic;
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic
	);
END lpm_compare_8;

ARCHITECTURE structure OF lpm_compare_8 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_sload_path_14 : std_logic;
SIGNAL ww_sload_path_13 : std_logic;
SIGNAL ww_sload_path_12 : std_logic;
SIGNAL ww_sload_path_11 : std_logic;
SIGNAL ww_sload_path_10 : std_logic;
SIGNAL ww_sload_path_9 : std_logic;
SIGNAL ww_sload_path_8 : std_logic;
SIGNAL ww_sload_path_7 : std_logic;
SIGNAL ww_sload_path_6 : std_logic;
SIGNAL ww_sload_path_5 : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_aeb_out : std_logic;

COMPONENT comptree_12
    PORT (
	sload_path_14 : IN std_logic;
	sload_path_13 : IN std_logic;
	sload_path_12 : IN std_logic;
	sload_path_11 : IN std_logic;
	sload_path_10 : IN std_logic;
	sload_path_9 : IN std_logic;
	sload_path_8 : IN std_logic;
	sload_path_7 : IN std_logic;
	sload_path_6 : IN std_logic;
	sload_path_5 : IN std_logic;
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic);
END COMPONENT;

BEGIN

ww_sload_path_14 <= sload_path_14;
ww_sload_path_13 <= sload_path_13;
ww_sload_path_12 <= sload_path_12;
ww_sload_path_11 <= sload_path_11;
ww_sload_path_10 <= sload_path_10;
ww_sload_path_9 <= sload_path_9;
ww_sload_path_8 <= sload_path_8;
ww_sload_path_7 <= sload_path_7;
ww_sload_path_6 <= sload_path_6;
ww_sload_path_5 <= sload_path_5;
ww_sload_path_4 <= sload_path_4;
ww_sload_path_3 <= sload_path_3;
ww_sload_path_2 <= sload_path_2;
ww_sload_path_1 <= sload_path_1;
ww_sload_path_0 <= sload_path_0;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
aeb_out <= ww_aeb_out;
comparator : comptree_12
PORT MAP (
	sload_path_14 => ww_sload_path_14,
	sload_path_13 => ww_sload_path_13,
	sload_path_12 => ww_sload_path_12,
	sload_path_11 => ww_sload_path_11,
	sload_path_10 => ww_sload_path_10,
	sload_path_9 => ww_sload_path_9,
	sload_path_8 => ww_sload_path_8,
	sload_path_7 => ww_sload_path_7,
	sload_path_6 => ww_sload_path_6,
	sload_path_5 => ww_sload_path_5,
	sload_path_4 => ww_sload_path_4,
	sload_path_3 => ww_sload_path_3,
	sload_path_2 => ww_sload_path_2,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	aeb_out => ww_aeb_out);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	alt_synch_counter_18 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_14 : OUT std_logic;
	sload_path_13 : OUT std_logic;
	sload_path_12 : OUT std_logic;
	sload_path_11 : OUT std_logic;
	sload_path_10 : OUT std_logic;
	sload_path_9 : OUT std_logic;
	sload_path_8 : OUT std_logic;
	sload_path_7 : OUT std_logic;
	sload_path_6 : OUT std_logic;
	sload_path_5 : OUT std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic
	);
END alt_synch_counter_18;

ARCHITECTURE structure OF alt_synch_counter_18 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_14 : std_logic;
SIGNAL ww_sload_path_13 : std_logic;
SIGNAL ww_sload_path_12 : std_logic;
SIGNAL ww_sload_path_11 : std_logic;
SIGNAL ww_sload_path_10 : std_logic;
SIGNAL ww_sload_path_9 : std_logic;
SIGNAL ww_sload_path_8 : std_logic;
SIGNAL ww_sload_path_7 : std_logic;
SIGNAL ww_sload_path_6 : std_logic;
SIGNAL ww_sload_path_5 : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL \cmp_end|aeb_out\ : std_logic;
SIGNAL \counter_cell[13]~COUT\ : std_logic;
SIGNAL \counter_cell[12]~COUT\ : std_logic;
SIGNAL \counter_cell[11]~COUT\ : std_logic;
SIGNAL \counter_cell[10]~COUT\ : std_logic;
SIGNAL \counter_cell[9]~COUT\ : std_logic;
SIGNAL \counter_cell[8]~COUT\ : std_logic;
SIGNAL \counter_cell[7]~COUT\ : std_logic;
SIGNAL \counter_cell[6]~COUT\ : std_logic;
SIGNAL \counter_cell[5]~COUT\ : std_logic;
SIGNAL \counter_cell[4]~COUT\ : std_logic;
SIGNAL \counter_cell[3]~COUT\ : std_logic;
SIGNAL \counter_cell[2]~COUT\ : std_logic;
SIGNAL \counter_cell[1]~COUT\ : std_logic;
SIGNAL \counter_cell[0]~COUT\ : std_logic;
SIGNAL ALT_NOT_ww_aclr : std_logic;

COMPONENT lpm_compare_8
    PORT (
	sload_path_14 : IN std_logic;
	sload_path_13 : IN std_logic;
	sload_path_12 : IN std_logic;
	sload_path_11 : IN std_logic;
	sload_path_10 : IN std_logic;
	sload_path_9 : IN std_logic;
	sload_path_8 : IN std_logic;
	sload_path_7 : IN std_logic;
	sload_path_6 : IN std_logic;
	sload_path_5 : IN std_logic;
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	aeb_out : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_14 <= ww_sload_path_14;
sload_path_13 <= ww_sload_path_13;
sload_path_12 <= ww_sload_path_12;
sload_path_11 <= ww_sload_path_11;
sload_path_10 <= ww_sload_path_10;
sload_path_9 <= ww_sload_path_9;
sload_path_8 <= ww_sload_path_8;
sload_path_7 <= ww_sload_path_7;
sload_path_6 <= ww_sload_path_6;
sload_path_5 <= ww_sload_path_5;
sload_path_4 <= ww_sload_path_4;
sload_path_3 <= ww_sload_path_3;
sload_path_2 <= ww_sload_path_2;
sload_path_1 <= ww_sload_path_1;
sload_path_0 <= ww_sload_path_0;
ALT_NOT_ww_aclr <= NOT ww_aclr;
\$00023\ : lpm_compare_8
PORT MAP (
	sload_path_14 => ww_sload_path_14,
	sload_path_13 => ww_sload_path_13,
	sload_path_12 => ww_sload_path_12,
	sload_path_11 => ww_sload_path_11,
	sload_path_10 => ww_sload_path_10,
	sload_path_9 => ww_sload_path_9,
	sload_path_8 => ww_sload_path_8,
	sload_path_7 => ww_sload_path_7,
	sload_path_6 => ww_sload_path_6,
	sload_path_5 => ww_sload_path_5,
	sload_path_4 => ww_sload_path_4,
	sload_path_3 => ww_sload_path_3,
	sload_path_2 => ww_sload_path_2,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	aeb_out => \cmp_end|aeb_out\);

\counter_cell[14]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_14 = DFFE(!aeb_out & \counter_cell[13]~COUT\ $ !sload_path_14, GLOBAL(outclock0), timer_clrn, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "F00F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_14,
	cin => \counter_cell[13]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sclr => \cmp_end|aeb_out\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_14);

\counter_cell[13]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_13 = DFFE(!aeb_out & sload_path_13 $ \counter_cell[12]~COUT\, GLOBAL(outclock0), timer_clrn, , )
-- \counter_cell[13]~COUT\ = CARRY(!\counter_cell[12]~COUT\ # !sload_path_13)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_13,
	cin => \counter_cell[12]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sclr => \cmp_end|aeb_out\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_13,
	cout => \counter_cell[13]~COUT\);

\counter_cell[12]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_12 = DFFE(!aeb_out & sload_path_12 $ !\counter_cell[11]~COUT\, GLOBAL(outclock0), timer_clrn, , )
-- \counter_cell[12]~COUT\ = CARRY(sload_path_12 & !\counter_cell[11]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_12,
	cin => \counter_cell[11]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sclr => \cmp_end|aeb_out\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_12,
	cout => \counter_cell[12]~COUT\);

\counter_cell[11]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_11 = DFFE(!aeb_out & sload_path_11 $ \counter_cell[10]~COUT\, GLOBAL(outclock0), timer_clrn, , )
-- \counter_cell[11]~COUT\ = CARRY(!\counter_cell[10]~COUT\ # !sload_path_11)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_11,
	cin => \counter_cell[10]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sclr => \cmp_end|aeb_out\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_11,
	cout => \counter_cell[11]~COUT\);

\counter_cell[10]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_10 = DFFE(!aeb_out & sload_path_10 $ !\counter_cell[9]~COUT\, GLOBAL(outclock0), timer_clrn, , )
-- \counter_cell[10]~COUT\ = CARRY(sload_path_10 & !\counter_cell[9]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_10,
	cin => \counter_cell[9]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sclr => \cmp_end|aeb_out\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_10,
	cout => \counter_cell[10]~COUT\);

\counter_cell[9]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_9 = DFFE(!aeb_out & sload_path_9 $ \counter_cell[8]~COUT\, GLOBAL(outclock0), timer_clrn, , )
-- \counter_cell[9]~COUT\ = CARRY(!\counter_cell[8]~COUT\ # !sload_path_9)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_9,
	cin => \counter_cell[8]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sclr => \cmp_end|aeb_out\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_9,
	cout => \counter_cell[9]~COUT\);

\counter_cell[8]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_8 = DFFE(!aeb_out & sload_path_8 $ !\counter_cell[7]~COUT\, GLOBAL(outclock0), timer_clrn, , )
-- \counter_cell[8]~COUT\ = CARRY(sload_path_8 & !\counter_cell[7]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_8,
	cin => \counter_cell[7]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sclr => \cmp_end|aeb_out\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_8,
	cout => \counter_cell[8]~COUT\);

\counter_cell[7]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_7 = DFFE(!aeb_out & sload_path_7 $ \counter_cell[6]~COUT\, GLOBAL(outclock0), timer_clrn, , )
-- \counter_cell[7]~COUT\ = CARRY(!\counter_cell[6]~COUT\ # !sload_path_7)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_7,
	cin => \counter_cell[6]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sclr => \cmp_end|aeb_out\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_7,
	cout => \counter_cell[7]~COUT\);

\counter_cell[6]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_6 = DFFE(!aeb_out & sload_path_6 $ !\counter_cell[5]~COUT\, GLOBAL(outclock0), timer_clrn, , )
-- \counter_cell[6]~COUT\ = CARRY(sload_path_6 & !\counter_cell[5]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_6,
	cin => \counter_cell[5]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sclr => \cmp_end|aeb_out\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_6,
	cout => \counter_cell[6]~COUT\);

\counter_cell[5]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_5 = DFFE(!aeb_out & sload_path_5 $ \counter_cell[4]~COUT\, GLOBAL(outclock0), timer_clrn, , )
-- \counter_cell[5]~COUT\ = CARRY(!\counter_cell[4]~COUT\ # !sload_path_5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_5,
	cin => \counter_cell[4]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sclr => \cmp_end|aeb_out\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_5,
	cout => \counter_cell[5]~COUT\);

\counter_cell[4]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_4 = DFFE(!aeb_out & sload_path_4 $ !\counter_cell[3]~COUT\, GLOBAL(outclock0), timer_clrn, , )
-- \counter_cell[4]~COUT\ = CARRY(sload_path_4 & !\counter_cell[3]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_4,
	cin => \counter_cell[3]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sclr => \cmp_end|aeb_out\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_4,
	cout => \counter_cell[4]~COUT\);

\counter_cell[3]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_3 = DFFE(!aeb_out & sload_path_3 $ \counter_cell[2]~COUT\, GLOBAL(outclock0), timer_clrn, , )
-- \counter_cell[3]~COUT\ = CARRY(!\counter_cell[2]~COUT\ # !sload_path_3)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_3,
	cin => \counter_cell[2]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sclr => \cmp_end|aeb_out\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_3,
	cout => \counter_cell[3]~COUT\);

\counter_cell[2]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_2 = DFFE(!aeb_out & sload_path_2 $ !\counter_cell[1]~COUT\, GLOBAL(outclock0), timer_clrn, , )
-- \counter_cell[2]~COUT\ = CARRY(sload_path_2 & !\counter_cell[1]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_2,
	cin => \counter_cell[1]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sclr => \cmp_end|aeb_out\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_2,
	cout => \counter_cell[2]~COUT\);

\counter_cell[1]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_1 = DFFE(!aeb_out & sload_path_1 $ \counter_cell[0]~COUT\, GLOBAL(outclock0), timer_clrn, , )
-- \counter_cell[1]~COUT\ = CARRY(!\counter_cell[0]~COUT\ # !sload_path_1)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "counter",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_1,
	cin => \counter_cell[0]~COUT\,
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sclr => \cmp_end|aeb_out\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_1,
	cout => \counter_cell[1]~COUT\);

\counter_cell[0]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_0 = DFFE(!aeb_out & !sload_path_0, GLOBAL(outclock0), timer_clrn, , )
-- \counter_cell[0]~COUT\ = CARRY(sload_path_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "qfbk_counter",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	clk => ww_clock,
	aclr => ALT_NOT_ww_aclr,
	sclr => \cmp_end|aeb_out\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_0,
	cout => \counter_cell[0]~COUT\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	lpm_counter_18 IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_14 : OUT std_logic;
	sload_path_13 : OUT std_logic;
	sload_path_12 : OUT std_logic;
	sload_path_11 : OUT std_logic;
	sload_path_10 : OUT std_logic;
	sload_path_9 : OUT std_logic;
	sload_path_8 : OUT std_logic;
	sload_path_7 : OUT std_logic;
	sload_path_6 : OUT std_logic;
	sload_path_5 : OUT std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic
	);
END lpm_counter_18;

ARCHITECTURE structure OF lpm_counter_18 IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_14 : std_logic;
SIGNAL ww_sload_path_13 : std_logic;
SIGNAL ww_sload_path_12 : std_logic;
SIGNAL ww_sload_path_11 : std_logic;
SIGNAL ww_sload_path_10 : std_logic;
SIGNAL ww_sload_path_9 : std_logic;
SIGNAL ww_sload_path_8 : std_logic;
SIGNAL ww_sload_path_7 : std_logic;
SIGNAL ww_sload_path_6 : std_logic;
SIGNAL ww_sload_path_5 : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;

COMPONENT alt_synch_counter_18
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_14 : OUT std_logic;
	sload_path_13 : OUT std_logic;
	sload_path_12 : OUT std_logic;
	sload_path_11 : OUT std_logic;
	sload_path_10 : OUT std_logic;
	sload_path_9 : OUT std_logic;
	sload_path_8 : OUT std_logic;
	sload_path_7 : OUT std_logic;
	sload_path_6 : OUT std_logic;
	sload_path_5 : OUT std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_14 <= ww_sload_path_14;
sload_path_13 <= ww_sload_path_13;
sload_path_12 <= ww_sload_path_12;
sload_path_11 <= ww_sload_path_11;
sload_path_10 <= ww_sload_path_10;
sload_path_9 <= ww_sload_path_9;
sload_path_8 <= ww_sload_path_8;
sload_path_7 <= ww_sload_path_7;
sload_path_6 <= ww_sload_path_6;
sload_path_5 <= ww_sload_path_5;
sload_path_4 <= ww_sload_path_4;
sload_path_3 <= ww_sload_path_3;
sload_path_2 <= ww_sload_path_2;
sload_path_1 <= ww_sload_path_1;
sload_path_0 <= ww_sload_path_0;
wysi_counter : alt_synch_counter_18
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_14 => ww_sload_path_14,
	sload_path_13 => ww_sload_path_13,
	sload_path_12 => ww_sload_path_12,
	sload_path_11 => ww_sload_path_11,
	sload_path_10 => ww_sload_path_10,
	sload_path_9 => ww_sload_path_9,
	sload_path_8 => ww_sload_path_8,
	sload_path_7 => ww_sload_path_7,
	sload_path_6 => ww_sload_path_6,
	sload_path_5 => ww_sload_path_5,
	sload_path_4 => ww_sload_path_4,
	sload_path_3 => ww_sload_path_3,
	sload_path_2 => ww_sload_path_2,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	dc_tcal_ct IS
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_14 : OUT std_logic;
	sload_path_13 : OUT std_logic;
	sload_path_12 : OUT std_logic;
	sload_path_11 : OUT std_logic;
	sload_path_10 : OUT std_logic;
	sload_path_9 : OUT std_logic;
	sload_path_8 : OUT std_logic;
	sload_path_7 : OUT std_logic;
	sload_path_6 : OUT std_logic;
	sload_path_5 : OUT std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic
	);
END dc_tcal_ct;

ARCHITECTURE structure OF dc_tcal_ct IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_clock : std_logic;
SIGNAL ww_aclr : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_14 : std_logic;
SIGNAL ww_sload_path_13 : std_logic;
SIGNAL ww_sload_path_12 : std_logic;
SIGNAL ww_sload_path_11 : std_logic;
SIGNAL ww_sload_path_10 : std_logic;
SIGNAL ww_sload_path_9 : std_logic;
SIGNAL ww_sload_path_8 : std_logic;
SIGNAL ww_sload_path_7 : std_logic;
SIGNAL ww_sload_path_6 : std_logic;
SIGNAL ww_sload_path_5 : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;

COMPONENT lpm_counter_18
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_14 : OUT std_logic;
	sload_path_13 : OUT std_logic;
	sload_path_12 : OUT std_logic;
	sload_path_11 : OUT std_logic;
	sload_path_10 : OUT std_logic;
	sload_path_9 : OUT std_logic;
	sload_path_8 : OUT std_logic;
	sload_path_7 : OUT std_logic;
	sload_path_6 : OUT std_logic;
	sload_path_5 : OUT std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic);
END COMPONENT;

BEGIN

ww_clock <= clock;
ww_aclr <= aclr;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_14 <= ww_sload_path_14;
sload_path_13 <= ww_sload_path_13;
sload_path_12 <= ww_sload_path_12;
sload_path_11 <= ww_sload_path_11;
sload_path_10 <= ww_sload_path_10;
sload_path_9 <= ww_sload_path_9;
sload_path_8 <= ww_sload_path_8;
sload_path_7 <= ww_sload_path_7;
sload_path_6 <= ww_sload_path_6;
sload_path_5 <= ww_sload_path_5;
sload_path_4 <= ww_sload_path_4;
sload_path_3 <= ww_sload_path_3;
sload_path_2 <= ww_sload_path_2;
sload_path_1 <= ww_sload_path_1;
sload_path_0 <= ww_sload_path_0;
lpm_counter_component : lpm_counter_18
PORT MAP (
	clock => ww_clock,
	aclr => ww_aclr,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_14 => ww_sload_path_14,
	sload_path_13 => ww_sload_path_13,
	sload_path_12 => ww_sload_path_12,
	sload_path_11 => ww_sload_path_11,
	sload_path_10 => ww_sload_path_10,
	sload_path_9 => ww_sload_path_9,
	sload_path_8 => ww_sload_path_8,
	sload_path_7 => ww_sload_path_7,
	sload_path_6 => ww_sload_path_6,
	sload_path_5 => ww_sload_path_5,
	sload_path_4 => ww_sload_path_4,
	sload_path_3 => ww_sload_path_3,
	sload_path_2 => ww_sload_path_2,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	DCOM_tcal_timer IS
    PORT (
	CLK20 : IN std_logic;
	tcal_psnd : IN std_logic;
	timer_clrn : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	pulse_sent : OUT std_logic;
	h_pulse : OUT std_logic;
	l_pulse : OUT std_logic;
	del_15us : OUT std_logic;
	tx_time_lat : OUT std_logic
	);
END DCOM_tcal_timer;

ARCHITECTURE structure OF DCOM_tcal_timer IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK20 : std_logic;
SIGNAL ww_tcal_psnd : std_logic;
SIGNAL ww_timer_clrn : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_pulse_sent : std_logic;
SIGNAL ww_h_pulse : std_logic;
SIGNAL ww_l_pulse : std_logic;
SIGNAL ww_del_15us : std_logic;
SIGNAL ww_tx_time_lat : std_logic;
SIGNAL \wysi_counter|sload_path[14]\ : std_logic;
SIGNAL \wysi_counter|sload_path[13]\ : std_logic;
SIGNAL \wysi_counter|sload_path[12]\ : std_logic;
SIGNAL \wysi_counter|sload_path[11]\ : std_logic;
SIGNAL \wysi_counter|sload_path[10]\ : std_logic;
SIGNAL \wysi_counter|sload_path[9]\ : std_logic;
SIGNAL \wysi_counter|sload_path[8]\ : std_logic;
SIGNAL \wysi_counter|sload_path[7]\ : std_logic;
SIGNAL \wysi_counter|sload_path[6]\ : std_logic;
SIGNAL \wysi_counter|sload_path[5]\ : std_logic;
SIGNAL \wysi_counter|sload_path[4]\ : std_logic;
SIGNAL \wysi_counter|sload_path[3]\ : std_logic;
SIGNAL \wysi_counter|sload_path[2]\ : std_logic;
SIGNAL \wysi_counter|sload_path[1]\ : std_logic;
SIGNAL \wysi_counter|sload_path[0]\ : std_logic;
SIGNAL \_~107_1\ : std_logic;
SIGNAL \del_15us~96_1\ : std_logic;
SIGNAL \_~105\ : std_logic;
SIGNAL \del_15us~88\ : std_logic;
SIGNAL \del_15us~87\ : std_logic;
SIGNAL \_~107\ : std_logic;
SIGNAL \_~109\ : std_logic;
SIGNAL \del_15us~89\ : std_logic;
SIGNAL \del_15us~98\ : std_logic;
SIGNAL \del_15us~96\ : std_logic;
SIGNAL \_~110\ : std_logic;
SIGNAL \_~99\ : std_logic;
SIGNAL \del_15us~90\ : std_logic;
SIGNAL \_~100\ : std_logic;
SIGNAL ALT_NOT_ww_timer_clrn : std_logic;

COMPONENT dc_tcal_ct
    PORT (
	clock : IN std_logic;
	aclr : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_14 : OUT std_logic;
	sload_path_13 : OUT std_logic;
	sload_path_12 : OUT std_logic;
	sload_path_11 : OUT std_logic;
	sload_path_10 : OUT std_logic;
	sload_path_9 : OUT std_logic;
	sload_path_8 : OUT std_logic;
	sload_path_7 : OUT std_logic;
	sload_path_6 : OUT std_logic;
	sload_path_5 : OUT std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic);
END COMPONENT;

BEGIN

ww_CLK20 <= CLK20;
ww_tcal_psnd <= tcal_psnd;
ww_timer_clrn <= timer_clrn;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
pulse_sent <= ww_pulse_sent;
h_pulse <= ww_h_pulse;
l_pulse <= ww_l_pulse;
del_15us <= ww_del_15us;
tx_time_lat <= ww_tx_time_lat;
ALT_NOT_ww_timer_clrn <= NOT ww_timer_clrn;
timer : dc_tcal_ct
PORT MAP (
	clock => ww_CLK20,
	aclr => ww_timer_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_14 => \wysi_counter|sload_path[14]\,
	sload_path_13 => \wysi_counter|sload_path[13]\,
	sload_path_12 => \wysi_counter|sload_path[12]\,
	sload_path_11 => \wysi_counter|sload_path[11]\,
	sload_path_10 => \wysi_counter|sload_path[10]\,
	sload_path_9 => \wysi_counter|sload_path[9]\,
	sload_path_8 => \wysi_counter|sload_path[8]\,
	sload_path_7 => \wysi_counter|sload_path[7]\,
	sload_path_6 => \wysi_counter|sload_path[6]\,
	sload_path_5 => \wysi_counter|sload_path[5]\,
	sload_path_4 => \wysi_counter|sload_path[4]\,
	sload_path_3 => \wysi_counter|sload_path[3]\,
	sload_path_2 => \wysi_counter|sload_path[2]\,
	sload_path_1 => \wysi_counter|sload_path[1]\,
	sload_path_0 => \wysi_counter|sload_path[0]\);

\pulse_sent~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- pulse_sent = DFFE(tcal_psnd & \_~109\, GLOBAL(outclock0), timer_clrn, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => ww_tcal_psnd,
	datad => \_~109\,
	clk => ww_CLK20,
	aclr => ALT_NOT_ww_timer_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_pulse_sent);

\h_pulse~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- h_pulse = DFFE(\_~110\ # h_pulse & (!\del_15us~90\ # !\_~99\), GLOBAL(outclock0), timer_clrn, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "BFAA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \_~110\,
	datab => \_~99\,
	datac => \del_15us~90\,
	datad => ww_h_pulse,
	clk => ww_CLK20,
	aclr => ALT_NOT_ww_timer_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_h_pulse);

\l_pulse~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- l_pulse = DFFE(l_pulse & (\_~100\ & tcal_psnd # !\_~109\) # !l_pulse & \_~100\ & tcal_psnd, GLOBAL(outclock0), timer_clrn, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "C0EA",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_l_pulse,
	datab => \_~100\,
	datac => ww_tcal_psnd,
	datad => \_~109\,
	clk => ww_CLK20,
	aclr => ALT_NOT_ww_timer_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_l_pulse);

\del_15us~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- del_15us = DFFE(sload_path_2 & !sload_path_4 & \del_15us~90\ & !sload_path_1, GLOBAL(outclock0), timer_clrn, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0020",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[2]\,
	datab => \wysi_counter|sload_path[4]\,
	datac => \del_15us~90\,
	datad => \wysi_counter|sload_path[1]\,
	clk => ww_CLK20,
	aclr => ALT_NOT_ww_timer_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_del_15us);

\tx_time_lat~reg_I\ : apex20ke_lcell 
-- Equation(s):
-- tx_time_lat = DFFE(\_~110\, GLOBAL(outclock0), timer_clrn, , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \_~110\,
	clk => ww_CLK20,
	aclr => ALT_NOT_ww_timer_clrn,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_tx_time_lat);

\_~105_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~105\ = !sload_path_5 & sload_path_6 & !sload_path_3 & !sload_path_4

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0004",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[5]\,
	datab => \wysi_counter|sload_path[6]\,
	datac => \wysi_counter|sload_path[3]\,
	datad => \wysi_counter|sload_path[4]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~105\);

\del_15us~88_I\ : apex20ke_lcell 
-- Equation(s):
-- \del_15us~88\ = !sload_path_7 & sload_path_8 & !sload_path_9 & !sload_path_10

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0004",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[7]\,
	datab => \wysi_counter|sload_path[8]\,
	datac => \wysi_counter|sload_path[9]\,
	datad => \wysi_counter|sload_path[10]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \del_15us~88\);

\del_15us~87_I\ : apex20ke_lcell 
-- Equation(s):
-- \del_15us~87\ = !sload_path_11 & !sload_path_14 & !sload_path_12 & !sload_path_13

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[11]\,
	datab => \wysi_counter|sload_path[14]\,
	datac => \wysi_counter|sload_path[12]\,
	datad => \wysi_counter|sload_path[13]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \del_15us~87\);

\_~107_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~107\ = !sload_path_2 & sload_path_1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "5050",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[2]\,
	datac => \wysi_counter|sload_path[1]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \_~107\);

\_~109_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~109\ = (\_~105\ & \del_15us~88\ & \del_15us~87\ & !sload_path_0) & CASCADE(\_~107\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0080",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \_~105\,
	datab => \del_15us~88\,
	datac => \del_15us~87\,
	datad => \wysi_counter|sload_path[0]\,
	cascin => \_~107\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~109\);

\del_15us~89_I\ : apex20ke_lcell 
-- Equation(s):
-- \del_15us~89\ = sload_path_5 & sload_path_3 & !sload_path_6

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00A0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[5]\,
	datac => \wysi_counter|sload_path[3]\,
	datad => \wysi_counter|sload_path[6]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \del_15us~89\);

\del_15us~90_I\ : apex20ke_lcell 
-- Equation(s):
-- \del_15us~90\ = \del_15us~89\ & \del_15us~88\ & \del_15us~87\ & !sload_path_0
-- \del_15us~98\ = \del_15us~89\ & \del_15us~88\ & \del_15us~87\ & !sload_path_0

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0080",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \del_15us~89\,
	datab => \del_15us~88\,
	datac => \del_15us~87\,
	datad => \wysi_counter|sload_path[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \del_15us~90\,
	cascout => \del_15us~98\);

\del_15us~96_I\ : apex20ke_lcell 
-- Equation(s):
-- \del_15us~96\ = (sload_path_2 & !sload_path_4) & CASCADE(\del_15us~98\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "00F0",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|sload_path[2]\,
	datad => \wysi_counter|sload_path[4]\,
	cascin => \del_15us~98\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \del_15us~96\);

\_~110_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~110\ = (sload_path_1 & tcal_psnd) & CASCADE(\del_15us~96\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datac => \wysi_counter|sload_path[1]\,
	datad => ww_tcal_psnd,
	cascin => \del_15us~96\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~110\);

\_~99_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~99\ = sload_path_4 & !sload_path_2 & !sload_path_1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "000C",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datab => \wysi_counter|sload_path[4]\,
	datac => \wysi_counter|sload_path[2]\,
	datad => \wysi_counter|sload_path[1]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~99\);

\_~100_I\ : apex20ke_lcell 
-- Equation(s):
-- \_~100\ = !sload_path_2 & sload_path_4 & \del_15us~90\ & !sload_path_1

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0040",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \wysi_counter|sload_path[2]\,
	datab => \wysi_counter|sload_path[4]\,
	datac => \del_15us~90\,
	datad => \wysi_counter|sload_path[1]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \_~100\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	dcom_ap IS
    PORT (
	CLK20 : IN std_logic;
	sload_path_47 : IN std_logic;
	sload_path_46 : IN std_logic;
	sload_path_45 : IN std_logic;
	sload_path_44 : IN std_logic;
	sload_path_43 : IN std_logic;
	sload_path_42 : IN std_logic;
	sload_path_41 : IN std_logic;
	sload_path_40 : IN std_logic;
	sload_path_39 : IN std_logic;
	sload_path_38 : IN std_logic;
	sload_path_37 : IN std_logic;
	sload_path_36 : IN std_logic;
	sload_path_35 : IN std_logic;
	sload_path_34 : IN std_logic;
	sload_path_33 : IN std_logic;
	sload_path_32 : IN std_logic;
	sload_path_31 : IN std_logic;
	sload_path_30 : IN std_logic;
	sload_path_29 : IN std_logic;
	sload_path_28 : IN std_logic;
	sload_path_27 : IN std_logic;
	sload_path_26 : IN std_logic;
	sload_path_25 : IN std_logic;
	sload_path_24 : IN std_logic;
	sload_path_23 : IN std_logic;
	sload_path_22 : IN std_logic;
	sload_path_21 : IN std_logic;
	sload_path_20 : IN std_logic;
	sload_path_19 : IN std_logic;
	sload_path_18 : IN std_logic;
	sload_path_17 : IN std_logic;
	sload_path_16 : IN std_logic;
	sload_path_151 : IN std_logic;
	sload_path_141 : IN std_logic;
	sload_path_131 : IN std_logic;
	sload_path_121 : IN std_logic;
	sload_path_111 : IN std_logic;
	sload_path_101 : IN std_logic;
	sload_path_91 : IN std_logic;
	sload_path_81 : IN std_logic;
	sload_path_71 : IN std_logic;
	sload_path_61 : IN std_logic;
	sload_path_51 : IN std_logic;
	sload_path_48 : IN std_logic;
	sload_path_310 : IN std_logic;
	sload_path_210 : IN std_logic;
	sload_path_110 : IN std_logic;
	sload_path_01 : IN std_logic;
	portadataout_0 : IN std_logic;
	portadataout_1 : IN std_logic;
	portadataout_2 : IN std_logic;
	portadataout_3 : IN std_logic;
	portadataout_4 : IN std_logic;
	portadataout_5 : IN std_logic;
	portadataout_6 : IN std_logic;
	portadataout_7 : IN std_logic;
	portadataout_8 : IN std_logic;
	portadataout_9 : IN std_logic;
	portadataout_10 : IN std_logic;
	portadataout_11 : IN std_logic;
	portadataout_12 : IN std_logic;
	portadataout_13 : IN std_logic;
	portadataout_14 : IN std_logic;
	portadataout_15 : IN std_logic;
	portadataout_16 : IN std_logic;
	portadataout_17 : IN std_logic;
	portadataout_18 : IN std_logic;
	portadataout_19 : IN std_logic;
	portadataout_20 : IN std_logic;
	portadataout_21 : IN std_logic;
	portadataout_22 : IN std_logic;
	portadataout_23 : IN std_logic;
	portadataout_24 : IN std_logic;
	portadataout_25 : IN std_logic;
	portadataout_26 : IN std_logic;
	portadataout_27 : IN std_logic;
	portadataout_28 : IN std_logic;
	portadataout_29 : IN std_logic;
	portadataout_30 : IN std_logic;
	portadataout_31 : IN std_logic;
	com_ctrl_local_2 : IN std_logic;
	RST : IN std_logic;
	rx_dpr_radr_local_0 : IN std_logic;
	tx_dpr_wadr_local_0 : IN std_logic;
	rx_dpr_radr_local_1 : IN std_logic;
	tx_dpr_wadr_local_1 : IN std_logic;
	rx_dpr_radr_local_2 : IN std_logic;
	tx_dpr_wadr_local_2 : IN std_logic;
	rx_dpr_radr_local_3 : IN std_logic;
	tx_dpr_wadr_local_3 : IN std_logic;
	rx_dpr_radr_local_4 : IN std_logic;
	tx_dpr_wadr_local_4 : IN std_logic;
	rx_dpr_radr_local_5 : IN std_logic;
	tx_dpr_wadr_local_5 : IN std_logic;
	rx_dpr_radr_local_6 : IN std_logic;
	tx_dpr_wadr_local_6 : IN std_logic;
	rx_dpr_radr_local_7 : IN std_logic;
	tx_dpr_wadr_local_7 : IN std_logic;
	rx_dpr_radr_local_8 : IN std_logic;
	tx_dpr_wadr_local_8 : IN std_logic;
	rx_dpr_radr_local_9 : IN std_logic;
	tx_dpr_wadr_local_9 : IN std_logic;
	rx_dpr_radr_local_10 : IN std_logic;
	tx_dpr_wadr_local_10 : IN std_logic;
	rx_dpr_radr_local_11 : IN std_logic;
	tx_dpr_wadr_local_11 : IN std_logic;
	rx_dpr_radr_local_12 : IN std_logic;
	tx_dpr_wadr_local_12 : IN std_logic;
	rx_dpr_radr_local_13 : IN std_logic;
	tx_dpr_wadr_local_13 : IN std_logic;
	rx_dpr_radr_local_14 : IN std_logic;
	tx_dpr_wadr_local_14 : IN std_logic;
	rx_dpr_radr_local_15 : IN std_logic;
	tx_dpr_wadr_local_15 : IN std_logic;
	tx_pack_rdy : IN std_logic;
	rx_dpr_radr_stb : IN std_logic;
	dom_id_48 : IN std_logic;
	dom_id_0 : IN std_logic;
	dom_id_1 : IN std_logic;
	dom_id_2 : IN std_logic;
	dom_id_3 : IN std_logic;
	dom_id_4 : IN std_logic;
	dom_id_5 : IN std_logic;
	dom_id_6 : IN std_logic;
	dom_id_7 : IN std_logic;
	dom_id_8 : IN std_logic;
	dom_id_9 : IN std_logic;
	dom_id_10 : IN std_logic;
	dom_id_11 : IN std_logic;
	dom_id_12 : IN std_logic;
	dom_id_13 : IN std_logic;
	dom_id_14 : IN std_logic;
	dom_id_15 : IN std_logic;
	dom_id_16 : IN std_logic;
	dom_id_17 : IN std_logic;
	dom_id_18 : IN std_logic;
	dom_id_19 : IN std_logic;
	dom_id_20 : IN std_logic;
	dom_id_21 : IN std_logic;
	dom_id_22 : IN std_logic;
	dom_id_23 : IN std_logic;
	dom_id_24 : IN std_logic;
	dom_id_25 : IN std_logic;
	dom_id_26 : IN std_logic;
	dom_id_27 : IN std_logic;
	dom_id_28 : IN std_logic;
	dom_id_29 : IN std_logic;
	dom_id_30 : IN std_logic;
	dom_id_31 : IN std_logic;
	dom_id_32 : IN std_logic;
	dom_id_33 : IN std_logic;
	dom_id_34 : IN std_logic;
	dom_id_35 : IN std_logic;
	dom_id_36 : IN std_logic;
	dom_id_37 : IN std_logic;
	dom_id_38 : IN std_logic;
	dom_id_39 : IN std_logic;
	dom_id_40 : IN std_logic;
	dom_id_41 : IN std_logic;
	dom_id_42 : IN std_logic;
	dom_id_43 : IN std_logic;
	dom_id_44 : IN std_logic;
	dom_id_45 : IN std_logic;
	dom_id_46 : IN std_logic;
	dom_id_47 : IN std_logic;
	GND_port : IN std_logic;
	COM_AD_D : IN std_logic_vector(9 DOWNTO 0);
	A_nB : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_15 : OUT std_logic;
	sload_path_14 : OUT std_logic;
	sload_path_13 : OUT std_logic;
	sload_path_12 : OUT std_logic;
	sload_path_11 : OUT std_logic;
	sload_path_10 : OUT std_logic;
	sload_path_9 : OUT std_logic;
	sload_path_8 : OUT std_logic;
	sload_path_7 : OUT std_logic;
	sload_path_6 : OUT std_logic;
	sload_path_5 : OUT std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic;
	q_15 : OUT std_logic;
	q_14 : OUT std_logic;
	q_13 : OUT std_logic;
	q_12 : OUT std_logic;
	q_11 : OUT std_logic;
	q_10 : OUT std_logic;
	q_9 : OUT std_logic;
	q_8 : OUT std_logic;
	q_7 : OUT std_logic;
	q_6 : OUT std_logic;
	q_5 : OUT std_logic;
	q_4 : OUT std_logic;
	q_3 : OUT std_logic;
	q_2 : OUT std_logic;
	q_1 : OUT std_logic;
	q_0 : OUT std_logic;
	q_121 : OUT std_logic;
	q_111 : OUT std_logic;
	q_101 : OUT std_logic;
	q_91 : OUT std_logic;
	q_81 : OUT std_logic;
	q_71 : OUT std_logic;
	q_61 : OUT std_logic;
	q_51 : OUT std_logic;
	q_41 : OUT std_logic;
	q_31 : OUT std_logic;
	q_21 : OUT std_logic;
	q_16 : OUT std_logic;
	q_01 : OUT std_logic;
	COMM_RESET : OUT std_logic;
	inst23_7 : OUT std_logic;
	inst23_6 : OUT std_logic;
	inst23_0 : OUT std_logic;
	pulse_sent : OUT std_logic;
	pulse_rcvd : OUT std_logic;
	tcal_rcvd : OUT std_logic;
	buf_res : OUT std_logic;
	ctrl_error : OUT std_logic;
	idle_rcvd : OUT std_logic;
	drreq_rcvd : OUT std_logic;
	rx_we : OUT std_logic;
	inst46_0 : OUT std_logic;
	inst46_1 : OUT std_logic;
	inst46_2 : OUT std_logic;
	inst46_3 : OUT std_logic;
	inst46_4 : OUT std_logic;
	inst46_5 : OUT std_logic;
	inst46_6 : OUT std_logic;
	inst46_7 : OUT std_logic;
	inst43_0 : OUT std_logic;
	inst43_1 : OUT std_logic;
	inst43_2 : OUT std_logic;
	inst43_3 : OUT std_logic;
	inst43_4 : OUT std_logic;
	inst43_5 : OUT std_logic;
	inst43_6 : OUT std_logic;
	inst43_7 : OUT std_logic;
	inst41_0 : OUT std_logic;
	inst41_1 : OUT std_logic;
	inst41_2 : OUT std_logic;
	inst41_3 : OUT std_logic;
	inst41_4 : OUT std_logic;
	inst41_5 : OUT std_logic;
	inst41_6 : OUT std_logic;
	inst41_7 : OUT std_logic;
	inst38_0 : OUT std_logic;
	inst38_1 : OUT std_logic;
	inst38_2 : OUT std_logic;
	inst38_3 : OUT std_logic;
	inst38_4 : OUT std_logic;
	inst38_5 : OUT std_logic;
	inst38_6 : OUT std_logic;
	inst38_7 : OUT std_logic;
	comres_rcvd : OUT std_logic;
	op_6 : OUT std_logic;
	inst16_0 : OUT std_logic;
	inst50 : OUT std_logic;
	inst16_1 : OUT std_logic;
	reboot_gnt : OUT std_logic;
	inst16_2 : OUT std_logic;
	last_node_0 : OUT std_logic;
	inst16_3 : OUT std_logic;
	inst16_4 : OUT std_logic;
	op_61 : OUT std_logic;
	inst16_5 : OUT std_logic;
	com_avail : OUT std_logic;
	inst16_6 : OUT std_logic;
	inst16_7 : OUT std_logic;
	inst16_8 : OUT std_logic;
	inst16_9 : OUT std_logic;
	inst16_10 : OUT std_logic;
	inst16_11 : OUT std_logic;
	inst16_12 : OUT std_logic;
	inst16_13 : OUT std_logic;
	inst16_14 : OUT std_logic;
	inst16_15 : OUT std_logic
	);
END dcom_ap;

ARCHITECTURE structure OF dcom_ap IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK20 : std_logic;
SIGNAL ww_sload_path_47 : std_logic;
SIGNAL ww_sload_path_46 : std_logic;
SIGNAL ww_sload_path_45 : std_logic;
SIGNAL ww_sload_path_44 : std_logic;
SIGNAL ww_sload_path_43 : std_logic;
SIGNAL ww_sload_path_42 : std_logic;
SIGNAL ww_sload_path_41 : std_logic;
SIGNAL ww_sload_path_40 : std_logic;
SIGNAL ww_sload_path_39 : std_logic;
SIGNAL ww_sload_path_38 : std_logic;
SIGNAL ww_sload_path_37 : std_logic;
SIGNAL ww_sload_path_36 : std_logic;
SIGNAL ww_sload_path_35 : std_logic;
SIGNAL ww_sload_path_34 : std_logic;
SIGNAL ww_sload_path_33 : std_logic;
SIGNAL ww_sload_path_32 : std_logic;
SIGNAL ww_sload_path_31 : std_logic;
SIGNAL ww_sload_path_30 : std_logic;
SIGNAL ww_sload_path_29 : std_logic;
SIGNAL ww_sload_path_28 : std_logic;
SIGNAL ww_sload_path_27 : std_logic;
SIGNAL ww_sload_path_26 : std_logic;
SIGNAL ww_sload_path_25 : std_logic;
SIGNAL ww_sload_path_24 : std_logic;
SIGNAL ww_sload_path_23 : std_logic;
SIGNAL ww_sload_path_22 : std_logic;
SIGNAL ww_sload_path_21 : std_logic;
SIGNAL ww_sload_path_20 : std_logic;
SIGNAL ww_sload_path_19 : std_logic;
SIGNAL ww_sload_path_18 : std_logic;
SIGNAL ww_sload_path_17 : std_logic;
SIGNAL ww_sload_path_16 : std_logic;
SIGNAL ww_sload_path_151 : std_logic;
SIGNAL ww_sload_path_141 : std_logic;
SIGNAL ww_sload_path_131 : std_logic;
SIGNAL ww_sload_path_121 : std_logic;
SIGNAL ww_sload_path_111 : std_logic;
SIGNAL ww_sload_path_101 : std_logic;
SIGNAL ww_sload_path_91 : std_logic;
SIGNAL ww_sload_path_81 : std_logic;
SIGNAL ww_sload_path_71 : std_logic;
SIGNAL ww_sload_path_61 : std_logic;
SIGNAL ww_sload_path_51 : std_logic;
SIGNAL ww_sload_path_48 : std_logic;
SIGNAL ww_sload_path_310 : std_logic;
SIGNAL ww_sload_path_210 : std_logic;
SIGNAL ww_sload_path_110 : std_logic;
SIGNAL ww_sload_path_01 : std_logic;
SIGNAL ww_portadataout_0 : std_logic;
SIGNAL ww_portadataout_1 : std_logic;
SIGNAL ww_portadataout_2 : std_logic;
SIGNAL ww_portadataout_3 : std_logic;
SIGNAL ww_portadataout_4 : std_logic;
SIGNAL ww_portadataout_5 : std_logic;
SIGNAL ww_portadataout_6 : std_logic;
SIGNAL ww_portadataout_7 : std_logic;
SIGNAL ww_portadataout_8 : std_logic;
SIGNAL ww_portadataout_9 : std_logic;
SIGNAL ww_portadataout_10 : std_logic;
SIGNAL ww_portadataout_11 : std_logic;
SIGNAL ww_portadataout_12 : std_logic;
SIGNAL ww_portadataout_13 : std_logic;
SIGNAL ww_portadataout_14 : std_logic;
SIGNAL ww_portadataout_15 : std_logic;
SIGNAL ww_portadataout_16 : std_logic;
SIGNAL ww_portadataout_17 : std_logic;
SIGNAL ww_portadataout_18 : std_logic;
SIGNAL ww_portadataout_19 : std_logic;
SIGNAL ww_portadataout_20 : std_logic;
SIGNAL ww_portadataout_21 : std_logic;
SIGNAL ww_portadataout_22 : std_logic;
SIGNAL ww_portadataout_23 : std_logic;
SIGNAL ww_portadataout_24 : std_logic;
SIGNAL ww_portadataout_25 : std_logic;
SIGNAL ww_portadataout_26 : std_logic;
SIGNAL ww_portadataout_27 : std_logic;
SIGNAL ww_portadataout_28 : std_logic;
SIGNAL ww_portadataout_29 : std_logic;
SIGNAL ww_portadataout_30 : std_logic;
SIGNAL ww_portadataout_31 : std_logic;
SIGNAL ww_com_ctrl_local_2 : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_rx_dpr_radr_local_0 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_0 : std_logic;
SIGNAL ww_rx_dpr_radr_local_1 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_1 : std_logic;
SIGNAL ww_rx_dpr_radr_local_2 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_2 : std_logic;
SIGNAL ww_rx_dpr_radr_local_3 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_3 : std_logic;
SIGNAL ww_rx_dpr_radr_local_4 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_4 : std_logic;
SIGNAL ww_rx_dpr_radr_local_5 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_5 : std_logic;
SIGNAL ww_rx_dpr_radr_local_6 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_6 : std_logic;
SIGNAL ww_rx_dpr_radr_local_7 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_7 : std_logic;
SIGNAL ww_rx_dpr_radr_local_8 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_8 : std_logic;
SIGNAL ww_rx_dpr_radr_local_9 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_9 : std_logic;
SIGNAL ww_rx_dpr_radr_local_10 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_10 : std_logic;
SIGNAL ww_rx_dpr_radr_local_11 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_11 : std_logic;
SIGNAL ww_rx_dpr_radr_local_12 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_12 : std_logic;
SIGNAL ww_rx_dpr_radr_local_13 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_13 : std_logic;
SIGNAL ww_rx_dpr_radr_local_14 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_14 : std_logic;
SIGNAL ww_rx_dpr_radr_local_15 : std_logic;
SIGNAL ww_tx_dpr_wadr_local_15 : std_logic;
SIGNAL ww_tx_pack_rdy : std_logic;
SIGNAL ww_rx_dpr_radr_stb : std_logic;
SIGNAL ww_dom_id_48 : std_logic;
SIGNAL ww_dom_id_0 : std_logic;
SIGNAL ww_dom_id_1 : std_logic;
SIGNAL ww_dom_id_2 : std_logic;
SIGNAL ww_dom_id_3 : std_logic;
SIGNAL ww_dom_id_4 : std_logic;
SIGNAL ww_dom_id_5 : std_logic;
SIGNAL ww_dom_id_6 : std_logic;
SIGNAL ww_dom_id_7 : std_logic;
SIGNAL ww_dom_id_8 : std_logic;
SIGNAL ww_dom_id_9 : std_logic;
SIGNAL ww_dom_id_10 : std_logic;
SIGNAL ww_dom_id_11 : std_logic;
SIGNAL ww_dom_id_12 : std_logic;
SIGNAL ww_dom_id_13 : std_logic;
SIGNAL ww_dom_id_14 : std_logic;
SIGNAL ww_dom_id_15 : std_logic;
SIGNAL ww_dom_id_16 : std_logic;
SIGNAL ww_dom_id_17 : std_logic;
SIGNAL ww_dom_id_18 : std_logic;
SIGNAL ww_dom_id_19 : std_logic;
SIGNAL ww_dom_id_20 : std_logic;
SIGNAL ww_dom_id_21 : std_logic;
SIGNAL ww_dom_id_22 : std_logic;
SIGNAL ww_dom_id_23 : std_logic;
SIGNAL ww_dom_id_24 : std_logic;
SIGNAL ww_dom_id_25 : std_logic;
SIGNAL ww_dom_id_26 : std_logic;
SIGNAL ww_dom_id_27 : std_logic;
SIGNAL ww_dom_id_28 : std_logic;
SIGNAL ww_dom_id_29 : std_logic;
SIGNAL ww_dom_id_30 : std_logic;
SIGNAL ww_dom_id_31 : std_logic;
SIGNAL ww_dom_id_32 : std_logic;
SIGNAL ww_dom_id_33 : std_logic;
SIGNAL ww_dom_id_34 : std_logic;
SIGNAL ww_dom_id_35 : std_logic;
SIGNAL ww_dom_id_36 : std_logic;
SIGNAL ww_dom_id_37 : std_logic;
SIGNAL ww_dom_id_38 : std_logic;
SIGNAL ww_dom_id_39 : std_logic;
SIGNAL ww_dom_id_40 : std_logic;
SIGNAL ww_dom_id_41 : std_logic;
SIGNAL ww_dom_id_42 : std_logic;
SIGNAL ww_dom_id_43 : std_logic;
SIGNAL ww_dom_id_44 : std_logic;
SIGNAL ww_dom_id_45 : std_logic;
SIGNAL ww_dom_id_46 : std_logic;
SIGNAL ww_dom_id_47 : std_logic;
SIGNAL ww_GND_port : std_logic;
SIGNAL ww_COM_AD_D : std_logic_vector(9 DOWNTO 0);
SIGNAL ww_A_nB : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_15 : std_logic;
SIGNAL ww_sload_path_14 : std_logic;
SIGNAL ww_sload_path_13 : std_logic;
SIGNAL ww_sload_path_12 : std_logic;
SIGNAL ww_sload_path_11 : std_logic;
SIGNAL ww_sload_path_10 : std_logic;
SIGNAL ww_sload_path_9 : std_logic;
SIGNAL ww_sload_path_8 : std_logic;
SIGNAL ww_sload_path_7 : std_logic;
SIGNAL ww_sload_path_6 : std_logic;
SIGNAL ww_sload_path_5 : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL ww_q_15 : std_logic;
SIGNAL ww_q_14 : std_logic;
SIGNAL ww_q_13 : std_logic;
SIGNAL ww_q_12 : std_logic;
SIGNAL ww_q_11 : std_logic;
SIGNAL ww_q_10 : std_logic;
SIGNAL ww_q_9 : std_logic;
SIGNAL ww_q_8 : std_logic;
SIGNAL ww_q_7 : std_logic;
SIGNAL ww_q_6 : std_logic;
SIGNAL ww_q_5 : std_logic;
SIGNAL ww_q_4 : std_logic;
SIGNAL ww_q_3 : std_logic;
SIGNAL ww_q_2 : std_logic;
SIGNAL ww_q_1 : std_logic;
SIGNAL ww_q_0 : std_logic;
SIGNAL ww_q_121 : std_logic;
SIGNAL ww_q_111 : std_logic;
SIGNAL ww_q_101 : std_logic;
SIGNAL ww_q_91 : std_logic;
SIGNAL ww_q_81 : std_logic;
SIGNAL ww_q_71 : std_logic;
SIGNAL ww_q_61 : std_logic;
SIGNAL ww_q_51 : std_logic;
SIGNAL ww_q_41 : std_logic;
SIGNAL ww_q_31 : std_logic;
SIGNAL ww_q_21 : std_logic;
SIGNAL ww_q_16 : std_logic;
SIGNAL ww_q_01 : std_logic;
SIGNAL ww_COMM_RESET : std_logic;
SIGNAL ww_inst23_7 : std_logic;
SIGNAL ww_inst23_6 : std_logic;
SIGNAL ww_inst23_0 : std_logic;
SIGNAL ww_pulse_sent : std_logic;
SIGNAL ww_pulse_rcvd : std_logic;
SIGNAL ww_tcal_rcvd : std_logic;
SIGNAL ww_buf_res : std_logic;
SIGNAL ww_ctrl_error : std_logic;
SIGNAL ww_idle_rcvd : std_logic;
SIGNAL ww_drreq_rcvd : std_logic;
SIGNAL ww_rx_we : std_logic;
SIGNAL ww_inst46_0 : std_logic;
SIGNAL ww_inst46_1 : std_logic;
SIGNAL ww_inst46_2 : std_logic;
SIGNAL ww_inst46_3 : std_logic;
SIGNAL ww_inst46_4 : std_logic;
SIGNAL ww_inst46_5 : std_logic;
SIGNAL ww_inst46_6 : std_logic;
SIGNAL ww_inst46_7 : std_logic;
SIGNAL ww_inst43_0 : std_logic;
SIGNAL ww_inst43_1 : std_logic;
SIGNAL ww_inst43_2 : std_logic;
SIGNAL ww_inst43_3 : std_logic;
SIGNAL ww_inst43_4 : std_logic;
SIGNAL ww_inst43_5 : std_logic;
SIGNAL ww_inst43_6 : std_logic;
SIGNAL ww_inst43_7 : std_logic;
SIGNAL ww_inst41_0 : std_logic;
SIGNAL ww_inst41_1 : std_logic;
SIGNAL ww_inst41_2 : std_logic;
SIGNAL ww_inst41_3 : std_logic;
SIGNAL ww_inst41_4 : std_logic;
SIGNAL ww_inst41_5 : std_logic;
SIGNAL ww_inst41_6 : std_logic;
SIGNAL ww_inst41_7 : std_logic;
SIGNAL ww_inst38_0 : std_logic;
SIGNAL ww_inst38_1 : std_logic;
SIGNAL ww_inst38_2 : std_logic;
SIGNAL ww_inst38_3 : std_logic;
SIGNAL ww_inst38_4 : std_logic;
SIGNAL ww_inst38_5 : std_logic;
SIGNAL ww_inst38_6 : std_logic;
SIGNAL ww_inst38_7 : std_logic;
SIGNAL ww_comres_rcvd : std_logic;
SIGNAL ww_op_6 : std_logic;
SIGNAL ww_inst16_0 : std_logic;
SIGNAL ww_inst50 : std_logic;
SIGNAL ww_inst16_1 : std_logic;
SIGNAL ww_reboot_gnt : std_logic;
SIGNAL ww_inst16_2 : std_logic;
SIGNAL ww_last_node_0 : std_logic;
SIGNAL ww_inst16_3 : std_logic;
SIGNAL ww_inst16_4 : std_logic;
SIGNAL ww_op_61 : std_logic;
SIGNAL ww_inst16_5 : std_logic;
SIGNAL ww_com_avail : std_logic;
SIGNAL ww_inst16_6 : std_logic;
SIGNAL ww_inst16_7 : std_logic;
SIGNAL ww_inst16_8 : std_logic;
SIGNAL ww_inst16_9 : std_logic;
SIGNAL ww_inst16_10 : std_logic;
SIGNAL ww_inst16_11 : std_logic;
SIGNAL ww_inst16_12 : std_logic;
SIGNAL ww_inst16_13 : std_logic;
SIGNAL ww_inst16_14 : std_logic;
SIGNAL ww_inst16_15 : std_logic;
SIGNAL \ww_DC_Rx_chan_ap~1_COM_AD_D\ : std_logic_vector(9 DOWNTO 0);
SIGNAL \wysi_counter|pre_out[14]\ : std_logic;
SIGNAL \wysi_counter|pre_out[15]\ : std_logic;
SIGNAL \inst4|sysres_rcvd~reg\ : std_logic;
SIGNAL \DCOM_tcal_timer|h_pulse~reg\ : std_logic;
SIGNAL \DCOM_tcal_timer|l_pulse~reg\ : std_logic;
SIGNAL \DC_CTRAP|tcal_psnd~reg\ : std_logic;
SIGNAL \DC_CTRAP|timer_clrn~reg\ : std_logic;
SIGNAL \inst2|sreg~34\ : std_logic;
SIGNAL \inst|stf_stb~reg\ : std_logic;
SIGNAL \inst11|msg_sent~reg\ : std_logic;
SIGNAL \DC_CTRAP|send_data~reg\ : std_logic;
SIGNAL \DC_CTRAP|send_ctrl~143\ : std_logic;
SIGNAL \DC_CTRAP|sreg~37\ : std_logic;
SIGNAL \DC_CTRAP|sreg~48\ : std_logic;
SIGNAL \DC_CTRAP|sreg~43\ : std_logic;
SIGNAL \inst11|_~3423\ : std_logic;
SIGNAL \DCOM_tcal_timer|del_15us~reg\ : std_logic;
SIGNAL \inst10|data_rcvd~reg\ : std_logic;
SIGNAL \DC_Tx_chan_ap|inst9\ : std_logic;
SIGNAL \inst4|idreq_rcvd~reg\ : std_logic;
SIGNAL \inst4|bfstat_rcvd~reg\ : std_logic;
SIGNAL \DC_CTRAP|send_ctrl~reg\ : std_logic;
SIGNAL \inst24|op_6~351\ : std_logic;
SIGNAL \inst11|sreg~56\ : std_logic;
SIGNAL \fifo_state|b_non_empty\ : std_logic;
SIGNAL \inst24|op_6~354\ : std_logic;
SIGNAL \FIFOram|q[8]\ : std_logic;
SIGNAL \FIFOram|q[0]\ : std_logic;
SIGNAL \DC_CTRAP|cmd_snd0~reg\ : std_logic;
SIGNAL \FIFOram|q[9]\ : std_logic;
SIGNAL \FIFOram|q[1]\ : std_logic;
SIGNAL \DC_CTRAP|cmd_snd1~reg\ : std_logic;
SIGNAL \FIFOram|q[2]\ : std_logic;
SIGNAL \DCOM_tcal_timer|tx_time_lat~reg\ : std_logic;
SIGNAL \FIFOram|q[3]\ : std_logic;
SIGNAL \FIFOram|q[4]\ : std_logic;
SIGNAL \DC_CTRAP|cmd_snd3~reg\ : std_logic;
SIGNAL \FIFOram|q[5]\ : std_logic;
SIGNAL \FIFOram|q[6]\ : std_logic;
SIGNAL \FIFOram|q[7]\ : std_logic;
SIGNAL \lpm_or_component|or_node[0][6]~162\ : std_logic;

COMPONENT DC_Tx_chan_ap
    PORT (
	CLK20 : IN std_logic;
	sload_path_47 : IN std_logic;
	sload_path_46 : IN std_logic;
	sload_path_45 : IN std_logic;
	sload_path_44 : IN std_logic;
	sload_path_43 : IN std_logic;
	sload_path_42 : IN std_logic;
	sload_path_41 : IN std_logic;
	sload_path_40 : IN std_logic;
	sload_path_39 : IN std_logic;
	sload_path_38 : IN std_logic;
	sload_path_37 : IN std_logic;
	sload_path_36 : IN std_logic;
	sload_path_35 : IN std_logic;
	sload_path_34 : IN std_logic;
	sload_path_33 : IN std_logic;
	sload_path_32 : IN std_logic;
	sload_path_31 : IN std_logic;
	sload_path_30 : IN std_logic;
	sload_path_29 : IN std_logic;
	sload_path_28 : IN std_logic;
	sload_path_27 : IN std_logic;
	sload_path_26 : IN std_logic;
	sload_path_25 : IN std_logic;
	sload_path_24 : IN std_logic;
	sload_path_23 : IN std_logic;
	sload_path_22 : IN std_logic;
	sload_path_21 : IN std_logic;
	sload_path_20 : IN std_logic;
	sload_path_19 : IN std_logic;
	sload_path_18 : IN std_logic;
	sload_path_17 : IN std_logic;
	sload_path_16 : IN std_logic;
	sload_path_15 : IN std_logic;
	sload_path_14 : IN std_logic;
	sload_path_13 : IN std_logic;
	sload_path_12 : IN std_logic;
	sload_path_11 : IN std_logic;
	sload_path_10 : IN std_logic;
	sload_path_9 : IN std_logic;
	sload_path_8 : IN std_logic;
	sload_path_7 : IN std_logic;
	sload_path_6 : IN std_logic;
	sload_path_5 : IN std_logic;
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	portadataout_0 : IN std_logic;
	portadataout_1 : IN std_logic;
	portadataout_2 : IN std_logic;
	portadataout_3 : IN std_logic;
	portadataout_4 : IN std_logic;
	portadataout_5 : IN std_logic;
	portadataout_6 : IN std_logic;
	portadataout_7 : IN std_logic;
	portadataout_8 : IN std_logic;
	portadataout_9 : IN std_logic;
	portadataout_10 : IN std_logic;
	portadataout_11 : IN std_logic;
	portadataout_12 : IN std_logic;
	portadataout_13 : IN std_logic;
	portadataout_14 : IN std_logic;
	portadataout_15 : IN std_logic;
	portadataout_16 : IN std_logic;
	portadataout_17 : IN std_logic;
	portadataout_18 : IN std_logic;
	portadataout_19 : IN std_logic;
	portadataout_20 : IN std_logic;
	portadataout_21 : IN std_logic;
	portadataout_22 : IN std_logic;
	portadataout_23 : IN std_logic;
	portadataout_24 : IN std_logic;
	portadataout_25 : IN std_logic;
	portadataout_26 : IN std_logic;
	portadataout_27 : IN std_logic;
	portadataout_28 : IN std_logic;
	portadataout_29 : IN std_logic;
	portadataout_30 : IN std_logic;
	portadataout_31 : IN std_logic;
	buf_res : IN std_logic;
	RST : IN std_logic;
	h_pulse : IN std_logic;
	l_pulse : IN std_logic;
	sreg : IN std_logic;
	tx_dpr_wadr_local_0 : IN std_logic;
	tx_dpr_wadr_local_1 : IN std_logic;
	send_data : IN std_logic;
	send_ctrl : IN std_logic;
	tx_dpr_wadr_local_2 : IN std_logic;
	tx_dpr_wadr_local_3 : IN std_logic;
	tx_dpr_wadr_local_4 : IN std_logic;
	tx_dpr_wadr_local_5 : IN std_logic;
	tx_dpr_wadr_local_6 : IN std_logic;
	tx_dpr_wadr_local_7 : IN std_logic;
	tx_dpr_wadr_local_8 : IN std_logic;
	tx_dpr_wadr_local_9 : IN std_logic;
	tx_dpr_wadr_local_10 : IN std_logic;
	tx_dpr_wadr_local_11 : IN std_logic;
	tx_dpr_wadr_local_12 : IN std_logic;
	tx_dpr_wadr_local_13 : IN std_logic;
	tx_dpr_wadr_local_14 : IN std_logic;
	tx_dpr_wadr_local_15 : IN std_logic;
	sreg1 : IN std_logic;
	sreg2 : IN std_logic;
	tx_pack_rdy : IN std_logic;
	send_ctrl1 : IN std_logic;
	dom_id_48 : IN std_logic;
	b_non_empty : IN std_logic;
	q_81 : IN std_logic;
	q_01 : IN std_logic;
	cmd_snd0 : IN std_logic;
	dom_id_0 : IN std_logic;
	q_91 : IN std_logic;
	q_13 : IN std_logic;
	cmd_snd1 : IN std_logic;
	dom_id_1 : IN std_logic;
	q_21 : IN std_logic;
	dom_id_2 : IN std_logic;
	tx_time_lat : IN std_logic;
	q_31 : IN std_logic;
	dom_id_3 : IN std_logic;
	q_41 : IN std_logic;
	dom_id_4 : IN std_logic;
	cmd_snd3 : IN std_logic;
	q_51 : IN std_logic;
	dom_id_5 : IN std_logic;
	q_61 : IN std_logic;
	dom_id_6 : IN std_logic;
	q_71 : IN std_logic;
	dom_id_7 : IN std_logic;
	dom_id_8 : IN std_logic;
	dom_id_9 : IN std_logic;
	dom_id_10 : IN std_logic;
	dom_id_11 : IN std_logic;
	dom_id_12 : IN std_logic;
	dom_id_13 : IN std_logic;
	dom_id_14 : IN std_logic;
	dom_id_15 : IN std_logic;
	dom_id_16 : IN std_logic;
	dom_id_17 : IN std_logic;
	dom_id_18 : IN std_logic;
	dom_id_19 : IN std_logic;
	dom_id_20 : IN std_logic;
	dom_id_21 : IN std_logic;
	dom_id_22 : IN std_logic;
	dom_id_23 : IN std_logic;
	dom_id_24 : IN std_logic;
	dom_id_25 : IN std_logic;
	dom_id_26 : IN std_logic;
	dom_id_27 : IN std_logic;
	dom_id_28 : IN std_logic;
	dom_id_29 : IN std_logic;
	dom_id_30 : IN std_logic;
	dom_id_31 : IN std_logic;
	dom_id_32 : IN std_logic;
	dom_id_33 : IN std_logic;
	dom_id_34 : IN std_logic;
	dom_id_35 : IN std_logic;
	dom_id_36 : IN std_logic;
	dom_id_37 : IN std_logic;
	dom_id_38 : IN std_logic;
	dom_id_39 : IN std_logic;
	dom_id_40 : IN std_logic;
	dom_id_41 : IN std_logic;
	dom_id_42 : IN std_logic;
	dom_id_43 : IN std_logic;
	dom_id_44 : IN std_logic;
	dom_id_45 : IN std_logic;
	dom_id_46 : IN std_logic;
	dom_id_47 : IN std_logic;
	GND_port : IN std_logic;
	A_nB : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q_12 : OUT std_logic;
	q_11 : OUT std_logic;
	q_10 : OUT std_logic;
	q_9 : OUT std_logic;
	q_8 : OUT std_logic;
	q_7 : OUT std_logic;
	q_6 : OUT std_logic;
	q_5 : OUT std_logic;
	q_4 : OUT std_logic;
	q_3 : OUT std_logic;
	q_2 : OUT std_logic;
	q_1 : OUT std_logic;
	q_0 : OUT std_logic;
	pre_out_14 : OUT std_logic;
	pre_out_15 : OUT std_logic;
	inst23_7 : OUT std_logic;
	inst23_6 : OUT std_logic;
	inst23_0 : OUT std_logic;
	op_6 : OUT std_logic;
	inst16_0 : OUT std_logic;
	msg_sent : OUT std_logic;
	inst50 : OUT std_logic;
	inst16_1 : OUT std_logic;
	inst16_2 : OUT std_logic;
	inst16_3 : OUT std_logic;
	inst16_4 : OUT std_logic;
	inst16_5 : OUT std_logic;
	inst16_6 : OUT std_logic;
	inst16_7 : OUT std_logic;
	inst16_8 : OUT std_logic;
	inst16_9 : OUT std_logic;
	inst16_10 : OUT std_logic;
	inst16_11 : OUT std_logic;
	inst16_12 : OUT std_logic;
	inst16_13 : OUT std_logic;
	inst16_14 : OUT std_logic;
	inst16_15 : OUT std_logic;
	\_\ : OUT std_logic;
	inst9 : OUT std_logic;
	sreg3 : OUT std_logic;
	or_node_6_0 : OUT std_logic);
END COMPONENT;

COMPONENT DC_CTRAP
    PORT (
	pre_out_14 : IN std_logic;
	pre_out_15 : IN std_logic;
	CLK : IN std_logic;
	sload_path_5 : IN std_logic;
	pulse_sent : IN std_logic;
	pulse_rcvd : IN std_logic;
	tcal_rcvd : IN std_logic;
	idle_rcvd : IN std_logic;
	drreq_rcvd : IN std_logic;
	com_ctrl_local_2 : IN std_logic;
	sysres_rcvd : IN std_logic;
	RST : IN std_logic;
	stf_stb : IN std_logic;
	comres_rcvd : IN std_logic;
	msg_sent : IN std_logic;
	\_\ : IN std_logic;
	del_15us : IN std_logic;
	data_rcvd : IN std_logic;
	inst9 : IN std_logic;
	idreq_rcvd : IN std_logic;
	bfstat_rcvd : IN std_logic;
	op_6 : IN std_logic;
	op_61 : IN std_logic;
	or_node_6_0 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	COMM_RESET : OUT std_logic;
	buf_res : OUT std_logic;
	tcal_psnd : OUT std_logic;
	timer_clrn : OUT std_logic;
	send_data : OUT std_logic;
	send_ctrl : OUT std_logic;
	reboot_gnt : OUT std_logic;
	com_avail : OUT std_logic;
	sreg : OUT std_logic;
	sreg1 : OUT std_logic;
	sreg2 : OUT std_logic;
	send_ctrl1 : OUT std_logic;
	cmd_snd0 : OUT std_logic;
	cmd_snd1 : OUT std_logic;
	cmd_snd3 : OUT std_logic);
END COMPONENT;

COMPONENT DC_Rx_chan_ap
    PORT (
	CLK20 : IN std_logic;
	buf_res : IN std_logic;
	RST : IN std_logic;
	tcal_psnd : IN std_logic;
	rx_dpr_radr_local_0 : IN std_logic;
	rx_dpr_radr_local_1 : IN std_logic;
	msg_sent : IN std_logic;
	send_data : IN std_logic;
	rx_dpr_radr_local_2 : IN std_logic;
	rx_dpr_radr_local_3 : IN std_logic;
	rx_dpr_radr_local_4 : IN std_logic;
	rx_dpr_radr_local_5 : IN std_logic;
	rx_dpr_radr_local_6 : IN std_logic;
	rx_dpr_radr_local_7 : IN std_logic;
	rx_dpr_radr_local_8 : IN std_logic;
	rx_dpr_radr_local_9 : IN std_logic;
	rx_dpr_radr_local_10 : IN std_logic;
	rx_dpr_radr_local_11 : IN std_logic;
	rx_dpr_radr_local_12 : IN std_logic;
	rx_dpr_radr_local_13 : IN std_logic;
	rx_dpr_radr_local_14 : IN std_logic;
	rx_dpr_radr_local_15 : IN std_logic;
	sreg1 : IN std_logic;
	rx_dpr_radr_stb : IN std_logic;
	send_ctrl : IN std_logic;
	sreg2 : IN std_logic;
	GND_port : IN std_logic;
	COM_AD_D : IN std_logic_vector(9 DOWNTO 0);
	A_nB : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_15 : OUT std_logic;
	sload_path_14 : OUT std_logic;
	sload_path_13 : OUT std_logic;
	sload_path_12 : OUT std_logic;
	sload_path_11 : OUT std_logic;
	sload_path_10 : OUT std_logic;
	sload_path_9 : OUT std_logic;
	sload_path_8 : OUT std_logic;
	sload_path_7 : OUT std_logic;
	sload_path_6 : OUT std_logic;
	sload_path_5 : OUT std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic;
	q_15 : OUT std_logic;
	q_14 : OUT std_logic;
	q_13 : OUT std_logic;
	q_12 : OUT std_logic;
	q_11 : OUT std_logic;
	q_10 : OUT std_logic;
	q_9 : OUT std_logic;
	q_8 : OUT std_logic;
	q_7 : OUT std_logic;
	q_6 : OUT std_logic;
	q_5 : OUT std_logic;
	q_4 : OUT std_logic;
	q_3 : OUT std_logic;
	q_2 : OUT std_logic;
	q_1 : OUT std_logic;
	q_0 : OUT std_logic;
	pulse_rcvd : OUT std_logic;
	tcal_rcvd : OUT std_logic;
	ctrl_error : OUT std_logic;
	idle_rcvd : OUT std_logic;
	drreq_rcvd : OUT std_logic;
	rx_we : OUT std_logic;
	inst46_0 : OUT std_logic;
	inst46_1 : OUT std_logic;
	inst46_2 : OUT std_logic;
	inst46_3 : OUT std_logic;
	inst46_4 : OUT std_logic;
	inst46_5 : OUT std_logic;
	inst46_6 : OUT std_logic;
	inst46_7 : OUT std_logic;
	inst43_0 : OUT std_logic;
	inst43_1 : OUT std_logic;
	inst43_2 : OUT std_logic;
	inst43_3 : OUT std_logic;
	inst43_4 : OUT std_logic;
	inst43_5 : OUT std_logic;
	inst43_6 : OUT std_logic;
	inst43_7 : OUT std_logic;
	inst41_0 : OUT std_logic;
	inst41_1 : OUT std_logic;
	inst41_2 : OUT std_logic;
	inst41_3 : OUT std_logic;
	inst41_4 : OUT std_logic;
	inst41_5 : OUT std_logic;
	inst41_6 : OUT std_logic;
	inst41_7 : OUT std_logic;
	inst38_0 : OUT std_logic;
	inst38_1 : OUT std_logic;
	inst38_2 : OUT std_logic;
	inst38_3 : OUT std_logic;
	inst38_4 : OUT std_logic;
	inst38_5 : OUT std_logic;
	inst38_6 : OUT std_logic;
	inst38_7 : OUT std_logic;
	sysres_rcvd : OUT std_logic;
	sreg : OUT std_logic;
	stf_stb : OUT std_logic;
	comres_rcvd : OUT std_logic;
	last_node_0 : OUT std_logic;
	op_6 : OUT std_logic;
	data_rcvd : OUT std_logic;
	idreq_rcvd : OUT std_logic;
	bfstat_rcvd : OUT std_logic;
	op_61 : OUT std_logic;
	b_non_empty : OUT std_logic;
	op_62 : OUT std_logic;
	q_81 : OUT std_logic;
	q_01 : OUT std_logic;
	q_91 : OUT std_logic;
	q_16 : OUT std_logic;
	q_21 : OUT std_logic;
	q_31 : OUT std_logic;
	q_41 : OUT std_logic;
	q_51 : OUT std_logic;
	q_61 : OUT std_logic;
	q_71 : OUT std_logic);
END COMPONENT;

COMPONENT DCOM_tcal_timer
    PORT (
	CLK20 : IN std_logic;
	tcal_psnd : IN std_logic;
	timer_clrn : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	pulse_sent : OUT std_logic;
	h_pulse : OUT std_logic;
	l_pulse : OUT std_logic;
	del_15us : OUT std_logic;
	tx_time_lat : OUT std_logic);
END COMPONENT;

BEGIN

ww_CLK20 <= CLK20;
ww_sload_path_47 <= sload_path_47;
ww_sload_path_46 <= sload_path_46;
ww_sload_path_45 <= sload_path_45;
ww_sload_path_44 <= sload_path_44;
ww_sload_path_43 <= sload_path_43;
ww_sload_path_42 <= sload_path_42;
ww_sload_path_41 <= sload_path_41;
ww_sload_path_40 <= sload_path_40;
ww_sload_path_39 <= sload_path_39;
ww_sload_path_38 <= sload_path_38;
ww_sload_path_37 <= sload_path_37;
ww_sload_path_36 <= sload_path_36;
ww_sload_path_35 <= sload_path_35;
ww_sload_path_34 <= sload_path_34;
ww_sload_path_33 <= sload_path_33;
ww_sload_path_32 <= sload_path_32;
ww_sload_path_31 <= sload_path_31;
ww_sload_path_30 <= sload_path_30;
ww_sload_path_29 <= sload_path_29;
ww_sload_path_28 <= sload_path_28;
ww_sload_path_27 <= sload_path_27;
ww_sload_path_26 <= sload_path_26;
ww_sload_path_25 <= sload_path_25;
ww_sload_path_24 <= sload_path_24;
ww_sload_path_23 <= sload_path_23;
ww_sload_path_22 <= sload_path_22;
ww_sload_path_21 <= sload_path_21;
ww_sload_path_20 <= sload_path_20;
ww_sload_path_19 <= sload_path_19;
ww_sload_path_18 <= sload_path_18;
ww_sload_path_17 <= sload_path_17;
ww_sload_path_16 <= sload_path_16;
ww_sload_path_151 <= sload_path_151;
ww_sload_path_141 <= sload_path_141;
ww_sload_path_131 <= sload_path_131;
ww_sload_path_121 <= sload_path_121;
ww_sload_path_111 <= sload_path_111;
ww_sload_path_101 <= sload_path_101;
ww_sload_path_91 <= sload_path_91;
ww_sload_path_81 <= sload_path_81;
ww_sload_path_71 <= sload_path_71;
ww_sload_path_61 <= sload_path_61;
ww_sload_path_51 <= sload_path_51;
ww_sload_path_48 <= sload_path_48;
ww_sload_path_310 <= sload_path_310;
ww_sload_path_210 <= sload_path_210;
ww_sload_path_110 <= sload_path_110;
ww_sload_path_01 <= sload_path_01;
ww_portadataout_0 <= portadataout_0;
ww_portadataout_1 <= portadataout_1;
ww_portadataout_2 <= portadataout_2;
ww_portadataout_3 <= portadataout_3;
ww_portadataout_4 <= portadataout_4;
ww_portadataout_5 <= portadataout_5;
ww_portadataout_6 <= portadataout_6;
ww_portadataout_7 <= portadataout_7;
ww_portadataout_8 <= portadataout_8;
ww_portadataout_9 <= portadataout_9;
ww_portadataout_10 <= portadataout_10;
ww_portadataout_11 <= portadataout_11;
ww_portadataout_12 <= portadataout_12;
ww_portadataout_13 <= portadataout_13;
ww_portadataout_14 <= portadataout_14;
ww_portadataout_15 <= portadataout_15;
ww_portadataout_16 <= portadataout_16;
ww_portadataout_17 <= portadataout_17;
ww_portadataout_18 <= portadataout_18;
ww_portadataout_19 <= portadataout_19;
ww_portadataout_20 <= portadataout_20;
ww_portadataout_21 <= portadataout_21;
ww_portadataout_22 <= portadataout_22;
ww_portadataout_23 <= portadataout_23;
ww_portadataout_24 <= portadataout_24;
ww_portadataout_25 <= portadataout_25;
ww_portadataout_26 <= portadataout_26;
ww_portadataout_27 <= portadataout_27;
ww_portadataout_28 <= portadataout_28;
ww_portadataout_29 <= portadataout_29;
ww_portadataout_30 <= portadataout_30;
ww_portadataout_31 <= portadataout_31;
ww_com_ctrl_local_2 <= com_ctrl_local_2;
ww_RST <= RST;
ww_rx_dpr_radr_local_0 <= rx_dpr_radr_local_0;
ww_tx_dpr_wadr_local_0 <= tx_dpr_wadr_local_0;
ww_rx_dpr_radr_local_1 <= rx_dpr_radr_local_1;
ww_tx_dpr_wadr_local_1 <= tx_dpr_wadr_local_1;
ww_rx_dpr_radr_local_2 <= rx_dpr_radr_local_2;
ww_tx_dpr_wadr_local_2 <= tx_dpr_wadr_local_2;
ww_rx_dpr_radr_local_3 <= rx_dpr_radr_local_3;
ww_tx_dpr_wadr_local_3 <= tx_dpr_wadr_local_3;
ww_rx_dpr_radr_local_4 <= rx_dpr_radr_local_4;
ww_tx_dpr_wadr_local_4 <= tx_dpr_wadr_local_4;
ww_rx_dpr_radr_local_5 <= rx_dpr_radr_local_5;
ww_tx_dpr_wadr_local_5 <= tx_dpr_wadr_local_5;
ww_rx_dpr_radr_local_6 <= rx_dpr_radr_local_6;
ww_tx_dpr_wadr_local_6 <= tx_dpr_wadr_local_6;
ww_rx_dpr_radr_local_7 <= rx_dpr_radr_local_7;
ww_tx_dpr_wadr_local_7 <= tx_dpr_wadr_local_7;
ww_rx_dpr_radr_local_8 <= rx_dpr_radr_local_8;
ww_tx_dpr_wadr_local_8 <= tx_dpr_wadr_local_8;
ww_rx_dpr_radr_local_9 <= rx_dpr_radr_local_9;
ww_tx_dpr_wadr_local_9 <= tx_dpr_wadr_local_9;
ww_rx_dpr_radr_local_10 <= rx_dpr_radr_local_10;
ww_tx_dpr_wadr_local_10 <= tx_dpr_wadr_local_10;
ww_rx_dpr_radr_local_11 <= rx_dpr_radr_local_11;
ww_tx_dpr_wadr_local_11 <= tx_dpr_wadr_local_11;
ww_rx_dpr_radr_local_12 <= rx_dpr_radr_local_12;
ww_tx_dpr_wadr_local_12 <= tx_dpr_wadr_local_12;
ww_rx_dpr_radr_local_13 <= rx_dpr_radr_local_13;
ww_tx_dpr_wadr_local_13 <= tx_dpr_wadr_local_13;
ww_rx_dpr_radr_local_14 <= rx_dpr_radr_local_14;
ww_tx_dpr_wadr_local_14 <= tx_dpr_wadr_local_14;
ww_rx_dpr_radr_local_15 <= rx_dpr_radr_local_15;
ww_tx_dpr_wadr_local_15 <= tx_dpr_wadr_local_15;
ww_tx_pack_rdy <= tx_pack_rdy;
ww_rx_dpr_radr_stb <= rx_dpr_radr_stb;
ww_dom_id_48 <= dom_id_48;
ww_dom_id_0 <= dom_id_0;
ww_dom_id_1 <= dom_id_1;
ww_dom_id_2 <= dom_id_2;
ww_dom_id_3 <= dom_id_3;
ww_dom_id_4 <= dom_id_4;
ww_dom_id_5 <= dom_id_5;
ww_dom_id_6 <= dom_id_6;
ww_dom_id_7 <= dom_id_7;
ww_dom_id_8 <= dom_id_8;
ww_dom_id_9 <= dom_id_9;
ww_dom_id_10 <= dom_id_10;
ww_dom_id_11 <= dom_id_11;
ww_dom_id_12 <= dom_id_12;
ww_dom_id_13 <= dom_id_13;
ww_dom_id_14 <= dom_id_14;
ww_dom_id_15 <= dom_id_15;
ww_dom_id_16 <= dom_id_16;
ww_dom_id_17 <= dom_id_17;
ww_dom_id_18 <= dom_id_18;
ww_dom_id_19 <= dom_id_19;
ww_dom_id_20 <= dom_id_20;
ww_dom_id_21 <= dom_id_21;
ww_dom_id_22 <= dom_id_22;
ww_dom_id_23 <= dom_id_23;
ww_dom_id_24 <= dom_id_24;
ww_dom_id_25 <= dom_id_25;
ww_dom_id_26 <= dom_id_26;
ww_dom_id_27 <= dom_id_27;
ww_dom_id_28 <= dom_id_28;
ww_dom_id_29 <= dom_id_29;
ww_dom_id_30 <= dom_id_30;
ww_dom_id_31 <= dom_id_31;
ww_dom_id_32 <= dom_id_32;
ww_dom_id_33 <= dom_id_33;
ww_dom_id_34 <= dom_id_34;
ww_dom_id_35 <= dom_id_35;
ww_dom_id_36 <= dom_id_36;
ww_dom_id_37 <= dom_id_37;
ww_dom_id_38 <= dom_id_38;
ww_dom_id_39 <= dom_id_39;
ww_dom_id_40 <= dom_id_40;
ww_dom_id_41 <= dom_id_41;
ww_dom_id_42 <= dom_id_42;
ww_dom_id_43 <= dom_id_43;
ww_dom_id_44 <= dom_id_44;
ww_dom_id_45 <= dom_id_45;
ww_dom_id_46 <= dom_id_46;
ww_dom_id_47 <= dom_id_47;
ww_GND_port <= GND_port;
ww_COM_AD_D <= COM_AD_D;
ww_A_nB <= A_nB;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_15 <= ww_sload_path_15;
sload_path_14 <= ww_sload_path_14;
sload_path_13 <= ww_sload_path_13;
sload_path_12 <= ww_sload_path_12;
sload_path_11 <= ww_sload_path_11;
sload_path_10 <= ww_sload_path_10;
sload_path_9 <= ww_sload_path_9;
sload_path_8 <= ww_sload_path_8;
sload_path_7 <= ww_sload_path_7;
sload_path_6 <= ww_sload_path_6;
sload_path_5 <= ww_sload_path_5;
sload_path_4 <= ww_sload_path_4;
sload_path_3 <= ww_sload_path_3;
sload_path_2 <= ww_sload_path_2;
sload_path_1 <= ww_sload_path_1;
sload_path_0 <= ww_sload_path_0;
q_15 <= ww_q_15;
q_14 <= ww_q_14;
q_13 <= ww_q_13;
q_12 <= ww_q_12;
q_11 <= ww_q_11;
q_10 <= ww_q_10;
q_9 <= ww_q_9;
q_8 <= ww_q_8;
q_7 <= ww_q_7;
q_6 <= ww_q_6;
q_5 <= ww_q_5;
q_4 <= ww_q_4;
q_3 <= ww_q_3;
q_2 <= ww_q_2;
q_1 <= ww_q_1;
q_0 <= ww_q_0;
q_121 <= ww_q_121;
q_111 <= ww_q_111;
q_101 <= ww_q_101;
q_91 <= ww_q_91;
q_81 <= ww_q_81;
q_71 <= ww_q_71;
q_61 <= ww_q_61;
q_51 <= ww_q_51;
q_41 <= ww_q_41;
q_31 <= ww_q_31;
q_21 <= ww_q_21;
q_16 <= ww_q_16;
q_01 <= ww_q_01;
COMM_RESET <= ww_COMM_RESET;
inst23_7 <= ww_inst23_7;
inst23_6 <= ww_inst23_6;
inst23_0 <= ww_inst23_0;
pulse_sent <= ww_pulse_sent;
pulse_rcvd <= ww_pulse_rcvd;
tcal_rcvd <= ww_tcal_rcvd;
buf_res <= ww_buf_res;
ctrl_error <= ww_ctrl_error;
idle_rcvd <= ww_idle_rcvd;
drreq_rcvd <= ww_drreq_rcvd;
rx_we <= ww_rx_we;
inst46_0 <= ww_inst46_0;
inst46_1 <= ww_inst46_1;
inst46_2 <= ww_inst46_2;
inst46_3 <= ww_inst46_3;
inst46_4 <= ww_inst46_4;
inst46_5 <= ww_inst46_5;
inst46_6 <= ww_inst46_6;
inst46_7 <= ww_inst46_7;
inst43_0 <= ww_inst43_0;
inst43_1 <= ww_inst43_1;
inst43_2 <= ww_inst43_2;
inst43_3 <= ww_inst43_3;
inst43_4 <= ww_inst43_4;
inst43_5 <= ww_inst43_5;
inst43_6 <= ww_inst43_6;
inst43_7 <= ww_inst43_7;
inst41_0 <= ww_inst41_0;
inst41_1 <= ww_inst41_1;
inst41_2 <= ww_inst41_2;
inst41_3 <= ww_inst41_3;
inst41_4 <= ww_inst41_4;
inst41_5 <= ww_inst41_5;
inst41_6 <= ww_inst41_6;
inst41_7 <= ww_inst41_7;
inst38_0 <= ww_inst38_0;
inst38_1 <= ww_inst38_1;
inst38_2 <= ww_inst38_2;
inst38_3 <= ww_inst38_3;
inst38_4 <= ww_inst38_4;
inst38_5 <= ww_inst38_5;
inst38_6 <= ww_inst38_6;
inst38_7 <= ww_inst38_7;
comres_rcvd <= ww_comres_rcvd;
op_6 <= ww_op_6;
inst16_0 <= ww_inst16_0;
inst50 <= ww_inst50;
inst16_1 <= ww_inst16_1;
reboot_gnt <= ww_reboot_gnt;
inst16_2 <= ww_inst16_2;
last_node_0 <= ww_last_node_0;
inst16_3 <= ww_inst16_3;
inst16_4 <= ww_inst16_4;
op_61 <= ww_op_61;
inst16_5 <= ww_inst16_5;
com_avail <= ww_com_avail;
inst16_6 <= ww_inst16_6;
inst16_7 <= ww_inst16_7;
inst16_8 <= ww_inst16_8;
inst16_9 <= ww_inst16_9;
inst16_10 <= ww_inst16_10;
inst16_11 <= ww_inst16_11;
inst16_12 <= ww_inst16_12;
inst16_13 <= ww_inst16_13;
inst16_14 <= ww_inst16_14;
inst16_15 <= ww_inst16_15;

\ww_DC_Rx_chan_ap~1_COM_AD_D\ <= (ww_COM_AD_D(9) & ww_COM_AD_D(8) & ww_COM_AD_D(7) & ww_COM_AD_D(6) & ww_COM_AD_D(5) & ww_COM_AD_D(4) & ww_COM_AD_D(3) & ww_COM_AD_D(2) & ww_COM_AD_D(1) & ww_COM_AD_D(0));
\DC_Tx_chan_ap~1\ : DC_Tx_chan_ap
PORT MAP (
	CLK20 => ww_CLK20,
	sload_path_47 => ww_sload_path_47,
	sload_path_46 => ww_sload_path_46,
	sload_path_45 => ww_sload_path_45,
	sload_path_44 => ww_sload_path_44,
	sload_path_43 => ww_sload_path_43,
	sload_path_42 => ww_sload_path_42,
	sload_path_41 => ww_sload_path_41,
	sload_path_40 => ww_sload_path_40,
	sload_path_39 => ww_sload_path_39,
	sload_path_38 => ww_sload_path_38,
	sload_path_37 => ww_sload_path_37,
	sload_path_36 => ww_sload_path_36,
	sload_path_35 => ww_sload_path_35,
	sload_path_34 => ww_sload_path_34,
	sload_path_33 => ww_sload_path_33,
	sload_path_32 => ww_sload_path_32,
	sload_path_31 => ww_sload_path_31,
	sload_path_30 => ww_sload_path_30,
	sload_path_29 => ww_sload_path_29,
	sload_path_28 => ww_sload_path_28,
	sload_path_27 => ww_sload_path_27,
	sload_path_26 => ww_sload_path_26,
	sload_path_25 => ww_sload_path_25,
	sload_path_24 => ww_sload_path_24,
	sload_path_23 => ww_sload_path_23,
	sload_path_22 => ww_sload_path_22,
	sload_path_21 => ww_sload_path_21,
	sload_path_20 => ww_sload_path_20,
	sload_path_19 => ww_sload_path_19,
	sload_path_18 => ww_sload_path_18,
	sload_path_17 => ww_sload_path_17,
	sload_path_16 => ww_sload_path_16,
	sload_path_15 => ww_sload_path_151,
	sload_path_14 => ww_sload_path_141,
	sload_path_13 => ww_sload_path_131,
	sload_path_12 => ww_sload_path_121,
	sload_path_11 => ww_sload_path_111,
	sload_path_10 => ww_sload_path_101,
	sload_path_9 => ww_sload_path_91,
	sload_path_8 => ww_sload_path_81,
	sload_path_7 => ww_sload_path_71,
	sload_path_6 => ww_sload_path_61,
	sload_path_5 => ww_sload_path_51,
	sload_path_4 => ww_sload_path_48,
	sload_path_3 => ww_sload_path_310,
	sload_path_2 => ww_sload_path_210,
	sload_path_1 => ww_sload_path_110,
	sload_path_0 => ww_sload_path_01,
	portadataout_0 => ww_portadataout_0,
	portadataout_1 => ww_portadataout_1,
	portadataout_2 => ww_portadataout_2,
	portadataout_3 => ww_portadataout_3,
	portadataout_4 => ww_portadataout_4,
	portadataout_5 => ww_portadataout_5,
	portadataout_6 => ww_portadataout_6,
	portadataout_7 => ww_portadataout_7,
	portadataout_8 => ww_portadataout_8,
	portadataout_9 => ww_portadataout_9,
	portadataout_10 => ww_portadataout_10,
	portadataout_11 => ww_portadataout_11,
	portadataout_12 => ww_portadataout_12,
	portadataout_13 => ww_portadataout_13,
	portadataout_14 => ww_portadataout_14,
	portadataout_15 => ww_portadataout_15,
	portadataout_16 => ww_portadataout_16,
	portadataout_17 => ww_portadataout_17,
	portadataout_18 => ww_portadataout_18,
	portadataout_19 => ww_portadataout_19,
	portadataout_20 => ww_portadataout_20,
	portadataout_21 => ww_portadataout_21,
	portadataout_22 => ww_portadataout_22,
	portadataout_23 => ww_portadataout_23,
	portadataout_24 => ww_portadataout_24,
	portadataout_25 => ww_portadataout_25,
	portadataout_26 => ww_portadataout_26,
	portadataout_27 => ww_portadataout_27,
	portadataout_28 => ww_portadataout_28,
	portadataout_29 => ww_portadataout_29,
	portadataout_30 => ww_portadataout_30,
	portadataout_31 => ww_portadataout_31,
	buf_res => ww_buf_res,
	RST => ww_RST,
	h_pulse => \DCOM_tcal_timer|h_pulse~reg\,
	l_pulse => \DCOM_tcal_timer|l_pulse~reg\,
	sreg => \inst2|sreg~34\,
	tx_dpr_wadr_local_0 => ww_tx_dpr_wadr_local_0,
	tx_dpr_wadr_local_1 => ww_tx_dpr_wadr_local_1,
	send_data => \DC_CTRAP|send_data~reg\,
	send_ctrl => \DC_CTRAP|send_ctrl~143\,
	tx_dpr_wadr_local_2 => ww_tx_dpr_wadr_local_2,
	tx_dpr_wadr_local_3 => ww_tx_dpr_wadr_local_3,
	tx_dpr_wadr_local_4 => ww_tx_dpr_wadr_local_4,
	tx_dpr_wadr_local_5 => ww_tx_dpr_wadr_local_5,
	tx_dpr_wadr_local_6 => ww_tx_dpr_wadr_local_6,
	tx_dpr_wadr_local_7 => ww_tx_dpr_wadr_local_7,
	tx_dpr_wadr_local_8 => ww_tx_dpr_wadr_local_8,
	tx_dpr_wadr_local_9 => ww_tx_dpr_wadr_local_9,
	tx_dpr_wadr_local_10 => ww_tx_dpr_wadr_local_10,
	tx_dpr_wadr_local_11 => ww_tx_dpr_wadr_local_11,
	tx_dpr_wadr_local_12 => ww_tx_dpr_wadr_local_12,
	tx_dpr_wadr_local_13 => ww_tx_dpr_wadr_local_13,
	tx_dpr_wadr_local_14 => ww_tx_dpr_wadr_local_14,
	tx_dpr_wadr_local_15 => ww_tx_dpr_wadr_local_15,
	sreg1 => \DC_CTRAP|sreg~48\,
	sreg2 => \DC_CTRAP|sreg~43\,
	tx_pack_rdy => ww_tx_pack_rdy,
	send_ctrl1 => \DC_CTRAP|send_ctrl~reg\,
	dom_id_48 => ww_dom_id_48,
	b_non_empty => \fifo_state|b_non_empty\,
	q_81 => \FIFOram|q[8]\,
	q_01 => \FIFOram|q[0]\,
	cmd_snd0 => \DC_CTRAP|cmd_snd0~reg\,
	dom_id_0 => ww_dom_id_0,
	q_91 => \FIFOram|q[9]\,
	q_13 => \FIFOram|q[1]\,
	cmd_snd1 => \DC_CTRAP|cmd_snd1~reg\,
	dom_id_1 => ww_dom_id_1,
	q_21 => \FIFOram|q[2]\,
	dom_id_2 => ww_dom_id_2,
	tx_time_lat => \DCOM_tcal_timer|tx_time_lat~reg\,
	q_31 => \FIFOram|q[3]\,
	dom_id_3 => ww_dom_id_3,
	q_41 => \FIFOram|q[4]\,
	dom_id_4 => ww_dom_id_4,
	cmd_snd3 => \DC_CTRAP|cmd_snd3~reg\,
	q_51 => \FIFOram|q[5]\,
	dom_id_5 => ww_dom_id_5,
	q_61 => \FIFOram|q[6]\,
	dom_id_6 => ww_dom_id_6,
	q_71 => \FIFOram|q[7]\,
	dom_id_7 => ww_dom_id_7,
	dom_id_8 => ww_dom_id_8,
	dom_id_9 => ww_dom_id_9,
	dom_id_10 => ww_dom_id_10,
	dom_id_11 => ww_dom_id_11,
	dom_id_12 => ww_dom_id_12,
	dom_id_13 => ww_dom_id_13,
	dom_id_14 => ww_dom_id_14,
	dom_id_15 => ww_dom_id_15,
	dom_id_16 => ww_dom_id_16,
	dom_id_17 => ww_dom_id_17,
	dom_id_18 => ww_dom_id_18,
	dom_id_19 => ww_dom_id_19,
	dom_id_20 => ww_dom_id_20,
	dom_id_21 => ww_dom_id_21,
	dom_id_22 => ww_dom_id_22,
	dom_id_23 => ww_dom_id_23,
	dom_id_24 => ww_dom_id_24,
	dom_id_25 => ww_dom_id_25,
	dom_id_26 => ww_dom_id_26,
	dom_id_27 => ww_dom_id_27,
	dom_id_28 => ww_dom_id_28,
	dom_id_29 => ww_dom_id_29,
	dom_id_30 => ww_dom_id_30,
	dom_id_31 => ww_dom_id_31,
	dom_id_32 => ww_dom_id_32,
	dom_id_33 => ww_dom_id_33,
	dom_id_34 => ww_dom_id_34,
	dom_id_35 => ww_dom_id_35,
	dom_id_36 => ww_dom_id_36,
	dom_id_37 => ww_dom_id_37,
	dom_id_38 => ww_dom_id_38,
	dom_id_39 => ww_dom_id_39,
	dom_id_40 => ww_dom_id_40,
	dom_id_41 => ww_dom_id_41,
	dom_id_42 => ww_dom_id_42,
	dom_id_43 => ww_dom_id_43,
	dom_id_44 => ww_dom_id_44,
	dom_id_45 => ww_dom_id_45,
	dom_id_46 => ww_dom_id_46,
	dom_id_47 => ww_dom_id_47,
	GND_port => ww_GND_port,
	A_nB => ww_A_nB,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	q_12 => ww_q_121,
	q_11 => ww_q_111,
	q_10 => ww_q_101,
	q_9 => ww_q_91,
	q_8 => ww_q_81,
	q_7 => ww_q_71,
	q_6 => ww_q_61,
	q_5 => ww_q_51,
	q_4 => ww_q_41,
	q_3 => ww_q_31,
	q_2 => ww_q_21,
	q_1 => ww_q_16,
	q_0 => ww_q_01,
	pre_out_14 => \wysi_counter|pre_out[14]\,
	pre_out_15 => \wysi_counter|pre_out[15]\,
	inst23_7 => ww_inst23_7,
	inst23_6 => ww_inst23_6,
	inst23_0 => ww_inst23_0,
	op_6 => ww_op_6,
	inst16_0 => ww_inst16_0,
	msg_sent => \inst11|msg_sent~reg\,
	inst50 => ww_inst50,
	inst16_1 => ww_inst16_1,
	inst16_2 => ww_inst16_2,
	inst16_3 => ww_inst16_3,
	inst16_4 => ww_inst16_4,
	inst16_5 => ww_inst16_5,
	inst16_6 => ww_inst16_6,
	inst16_7 => ww_inst16_7,
	inst16_8 => ww_inst16_8,
	inst16_9 => ww_inst16_9,
	inst16_10 => ww_inst16_10,
	inst16_11 => ww_inst16_11,
	inst16_12 => ww_inst16_12,
	inst16_13 => ww_inst16_13,
	inst16_14 => ww_inst16_14,
	inst16_15 => ww_inst16_15,
	\_\ => \inst11|_~3423\,
	inst9 => \DC_Tx_chan_ap|inst9\,
	sreg3 => \inst11|sreg~56\,
	or_node_6_0 => \lpm_or_component|or_node[0][6]~162\);
\DC_CTRAP~1\ : DC_CTRAP
PORT MAP (
	pre_out_14 => \wysi_counter|pre_out[14]\,
	pre_out_15 => \wysi_counter|pre_out[15]\,
	CLK => ww_CLK20,
	sload_path_5 => ww_sload_path_51,
	pulse_sent => ww_pulse_sent,
	pulse_rcvd => ww_pulse_rcvd,
	tcal_rcvd => ww_tcal_rcvd,
	idle_rcvd => ww_idle_rcvd,
	drreq_rcvd => ww_drreq_rcvd,
	com_ctrl_local_2 => ww_com_ctrl_local_2,
	sysres_rcvd => \inst4|sysres_rcvd~reg\,
	RST => ww_RST,
	stf_stb => \inst|stf_stb~reg\,
	comres_rcvd => ww_comres_rcvd,
	msg_sent => \inst11|msg_sent~reg\,
	\_\ => \inst11|_~3423\,
	del_15us => \DCOM_tcal_timer|del_15us~reg\,
	data_rcvd => \inst10|data_rcvd~reg\,
	inst9 => \DC_Tx_chan_ap|inst9\,
	idreq_rcvd => \inst4|idreq_rcvd~reg\,
	bfstat_rcvd => \inst4|bfstat_rcvd~reg\,
	op_6 => \inst24|op_6~351\,
	op_61 => \inst24|op_6~354\,
	or_node_6_0 => \lpm_or_component|or_node[0][6]~162\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	COMM_RESET => ww_COMM_RESET,
	buf_res => ww_buf_res,
	tcal_psnd => \DC_CTRAP|tcal_psnd~reg\,
	timer_clrn => \DC_CTRAP|timer_clrn~reg\,
	send_data => \DC_CTRAP|send_data~reg\,
	send_ctrl => \DC_CTRAP|send_ctrl~143\,
	reboot_gnt => ww_reboot_gnt,
	com_avail => ww_com_avail,
	sreg => \DC_CTRAP|sreg~37\,
	sreg1 => \DC_CTRAP|sreg~48\,
	sreg2 => \DC_CTRAP|sreg~43\,
	send_ctrl1 => \DC_CTRAP|send_ctrl~reg\,
	cmd_snd0 => \DC_CTRAP|cmd_snd0~reg\,
	cmd_snd1 => \DC_CTRAP|cmd_snd1~reg\,
	cmd_snd3 => \DC_CTRAP|cmd_snd3~reg\);
\DC_Rx_chan_ap~1\ : DC_Rx_chan_ap
PORT MAP (
	CLK20 => ww_CLK20,
	buf_res => ww_buf_res,
	RST => ww_RST,
	tcal_psnd => \DC_CTRAP|tcal_psnd~reg\,
	rx_dpr_radr_local_0 => ww_rx_dpr_radr_local_0,
	rx_dpr_radr_local_1 => ww_rx_dpr_radr_local_1,
	msg_sent => \inst11|msg_sent~reg\,
	send_data => \DC_CTRAP|send_data~reg\,
	rx_dpr_radr_local_2 => ww_rx_dpr_radr_local_2,
	rx_dpr_radr_local_3 => ww_rx_dpr_radr_local_3,
	rx_dpr_radr_local_4 => ww_rx_dpr_radr_local_4,
	rx_dpr_radr_local_5 => ww_rx_dpr_radr_local_5,
	rx_dpr_radr_local_6 => ww_rx_dpr_radr_local_6,
	rx_dpr_radr_local_7 => ww_rx_dpr_radr_local_7,
	rx_dpr_radr_local_8 => ww_rx_dpr_radr_local_8,
	rx_dpr_radr_local_9 => ww_rx_dpr_radr_local_9,
	rx_dpr_radr_local_10 => ww_rx_dpr_radr_local_10,
	rx_dpr_radr_local_11 => ww_rx_dpr_radr_local_11,
	rx_dpr_radr_local_12 => ww_rx_dpr_radr_local_12,
	rx_dpr_radr_local_13 => ww_rx_dpr_radr_local_13,
	rx_dpr_radr_local_14 => ww_rx_dpr_radr_local_14,
	rx_dpr_radr_local_15 => ww_rx_dpr_radr_local_15,
	sreg1 => \DC_CTRAP|sreg~37\,
	rx_dpr_radr_stb => ww_rx_dpr_radr_stb,
	send_ctrl => \DC_CTRAP|send_ctrl~reg\,
	sreg2 => \inst11|sreg~56\,
	GND_port => ww_GND_port,
	COM_AD_D => \ww_DC_Rx_chan_ap~1_COM_AD_D\,
	A_nB => ww_A_nB,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	sload_path_15 => ww_sload_path_15,
	sload_path_14 => ww_sload_path_14,
	sload_path_13 => ww_sload_path_13,
	sload_path_12 => ww_sload_path_12,
	sload_path_11 => ww_sload_path_11,
	sload_path_10 => ww_sload_path_10,
	sload_path_9 => ww_sload_path_9,
	sload_path_8 => ww_sload_path_8,
	sload_path_7 => ww_sload_path_7,
	sload_path_6 => ww_sload_path_6,
	sload_path_5 => ww_sload_path_5,
	sload_path_4 => ww_sload_path_4,
	sload_path_3 => ww_sload_path_3,
	sload_path_2 => ww_sload_path_2,
	sload_path_1 => ww_sload_path_1,
	sload_path_0 => ww_sload_path_0,
	q_15 => ww_q_15,
	q_14 => ww_q_14,
	q_13 => ww_q_13,
	q_12 => ww_q_12,
	q_11 => ww_q_11,
	q_10 => ww_q_10,
	q_9 => ww_q_9,
	q_8 => ww_q_8,
	q_7 => ww_q_7,
	q_6 => ww_q_6,
	q_5 => ww_q_5,
	q_4 => ww_q_4,
	q_3 => ww_q_3,
	q_2 => ww_q_2,
	q_1 => ww_q_1,
	q_0 => ww_q_0,
	pulse_rcvd => ww_pulse_rcvd,
	tcal_rcvd => ww_tcal_rcvd,
	ctrl_error => ww_ctrl_error,
	idle_rcvd => ww_idle_rcvd,
	drreq_rcvd => ww_drreq_rcvd,
	rx_we => ww_rx_we,
	inst46_0 => ww_inst46_0,
	inst46_1 => ww_inst46_1,
	inst46_2 => ww_inst46_2,
	inst46_3 => ww_inst46_3,
	inst46_4 => ww_inst46_4,
	inst46_5 => ww_inst46_5,
	inst46_6 => ww_inst46_6,
	inst46_7 => ww_inst46_7,
	inst43_0 => ww_inst43_0,
	inst43_1 => ww_inst43_1,
	inst43_2 => ww_inst43_2,
	inst43_3 => ww_inst43_3,
	inst43_4 => ww_inst43_4,
	inst43_5 => ww_inst43_5,
	inst43_6 => ww_inst43_6,
	inst43_7 => ww_inst43_7,
	inst41_0 => ww_inst41_0,
	inst41_1 => ww_inst41_1,
	inst41_2 => ww_inst41_2,
	inst41_3 => ww_inst41_3,
	inst41_4 => ww_inst41_4,
	inst41_5 => ww_inst41_5,
	inst41_6 => ww_inst41_6,
	inst41_7 => ww_inst41_7,
	inst38_0 => ww_inst38_0,
	inst38_1 => ww_inst38_1,
	inst38_2 => ww_inst38_2,
	inst38_3 => ww_inst38_3,
	inst38_4 => ww_inst38_4,
	inst38_5 => ww_inst38_5,
	inst38_6 => ww_inst38_6,
	inst38_7 => ww_inst38_7,
	sysres_rcvd => \inst4|sysres_rcvd~reg\,
	sreg => \inst2|sreg~34\,
	stf_stb => \inst|stf_stb~reg\,
	comres_rcvd => ww_comres_rcvd,
	last_node_0 => ww_last_node_0,
	op_6 => ww_op_61,
	data_rcvd => \inst10|data_rcvd~reg\,
	idreq_rcvd => \inst4|idreq_rcvd~reg\,
	bfstat_rcvd => \inst4|bfstat_rcvd~reg\,
	op_61 => \inst24|op_6~351\,
	b_non_empty => \fifo_state|b_non_empty\,
	op_62 => \inst24|op_6~354\,
	q_81 => \FIFOram|q[8]\,
	q_01 => \FIFOram|q[0]\,
	q_91 => \FIFOram|q[9]\,
	q_16 => \FIFOram|q[1]\,
	q_21 => \FIFOram|q[2]\,
	q_31 => \FIFOram|q[3]\,
	q_41 => \FIFOram|q[4]\,
	q_51 => \FIFOram|q[5]\,
	q_61 => \FIFOram|q[6]\,
	q_71 => \FIFOram|q[7]\);
\DCOM_tcal_timer~1\ : DCOM_tcal_timer
PORT MAP (
	CLK20 => ww_CLK20,
	tcal_psnd => \DC_CTRAP|tcal_psnd~reg\,
	timer_clrn => \DC_CTRAP|timer_clrn~reg\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	devoe => ww_devoe,
	pulse_sent => ww_pulse_sent,
	h_pulse => \DCOM_tcal_timer|h_pulse~reg\,
	l_pulse => \DCOM_tcal_timer|l_pulse~reg\,
	del_15us => \DCOM_tcal_timer|del_15us~reg\,
	tx_time_lat => \DCOM_tcal_timer|tx_time_lat~reg\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	timer IS
    PORT (
	outclock1 : IN std_logic;
	RST : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_47 : OUT std_logic;
	sload_path_46 : OUT std_logic;
	sload_path_45 : OUT std_logic;
	sload_path_44 : OUT std_logic;
	sload_path_43 : OUT std_logic;
	sload_path_42 : OUT std_logic;
	sload_path_41 : OUT std_logic;
	sload_path_40 : OUT std_logic;
	sload_path_39 : OUT std_logic;
	sload_path_38 : OUT std_logic;
	sload_path_37 : OUT std_logic;
	sload_path_36 : OUT std_logic;
	sload_path_35 : OUT std_logic;
	sload_path_34 : OUT std_logic;
	sload_path_33 : OUT std_logic;
	sload_path_32 : OUT std_logic;
	sload_path_31 : OUT std_logic;
	sload_path_30 : OUT std_logic;
	sload_path_29 : OUT std_logic;
	sload_path_28 : OUT std_logic;
	sload_path_27 : OUT std_logic;
	sload_path_26 : OUT std_logic;
	sload_path_25 : OUT std_logic;
	sload_path_24 : OUT std_logic;
	sload_path_23 : OUT std_logic;
	sload_path_22 : OUT std_logic;
	sload_path_21 : OUT std_logic;
	sload_path_20 : OUT std_logic;
	sload_path_19 : OUT std_logic;
	sload_path_18 : OUT std_logic;
	sload_path_17 : OUT std_logic;
	sload_path_16 : OUT std_logic;
	sload_path_15 : OUT std_logic;
	sload_path_14 : OUT std_logic;
	sload_path_13 : OUT std_logic;
	sload_path_12 : OUT std_logic;
	sload_path_11 : OUT std_logic;
	sload_path_10 : OUT std_logic;
	sload_path_9 : OUT std_logic;
	sload_path_8 : OUT std_logic;
	sload_path_7 : OUT std_logic;
	sload_path_6 : OUT std_logic;
	sload_path_5 : OUT std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic
	);
END timer;

ARCHITECTURE structure OF timer IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_outclock1 : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_sload_path_47 : std_logic;
SIGNAL ww_sload_path_46 : std_logic;
SIGNAL ww_sload_path_45 : std_logic;
SIGNAL ww_sload_path_44 : std_logic;
SIGNAL ww_sload_path_43 : std_logic;
SIGNAL ww_sload_path_42 : std_logic;
SIGNAL ww_sload_path_41 : std_logic;
SIGNAL ww_sload_path_40 : std_logic;
SIGNAL ww_sload_path_39 : std_logic;
SIGNAL ww_sload_path_38 : std_logic;
SIGNAL ww_sload_path_37 : std_logic;
SIGNAL ww_sload_path_36 : std_logic;
SIGNAL ww_sload_path_35 : std_logic;
SIGNAL ww_sload_path_34 : std_logic;
SIGNAL ww_sload_path_33 : std_logic;
SIGNAL ww_sload_path_32 : std_logic;
SIGNAL ww_sload_path_31 : std_logic;
SIGNAL ww_sload_path_30 : std_logic;
SIGNAL ww_sload_path_29 : std_logic;
SIGNAL ww_sload_path_28 : std_logic;
SIGNAL ww_sload_path_27 : std_logic;
SIGNAL ww_sload_path_26 : std_logic;
SIGNAL ww_sload_path_25 : std_logic;
SIGNAL ww_sload_path_24 : std_logic;
SIGNAL ww_sload_path_23 : std_logic;
SIGNAL ww_sload_path_22 : std_logic;
SIGNAL ww_sload_path_21 : std_logic;
SIGNAL ww_sload_path_20 : std_logic;
SIGNAL ww_sload_path_19 : std_logic;
SIGNAL ww_sload_path_18 : std_logic;
SIGNAL ww_sload_path_17 : std_logic;
SIGNAL ww_sload_path_16 : std_logic;
SIGNAL ww_sload_path_15 : std_logic;
SIGNAL ww_sload_path_14 : std_logic;
SIGNAL ww_sload_path_13 : std_logic;
SIGNAL ww_sload_path_12 : std_logic;
SIGNAL ww_sload_path_11 : std_logic;
SIGNAL ww_sload_path_10 : std_logic;
SIGNAL ww_sload_path_9 : std_logic;
SIGNAL ww_sload_path_8 : std_logic;
SIGNAL ww_sload_path_7 : std_logic;
SIGNAL ww_sload_path_6 : std_logic;
SIGNAL ww_sload_path_5 : std_logic;
SIGNAL ww_sload_path_4 : std_logic;
SIGNAL ww_sload_path_3 : std_logic;
SIGNAL ww_sload_path_2 : std_logic;
SIGNAL ww_sload_path_1 : std_logic;
SIGNAL ww_sload_path_0 : std_logic;
SIGNAL \wysi_counter|counter_cell[46]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[45]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[44]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[43]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[42]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[41]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[40]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[39]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[38]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[37]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[36]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[35]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[34]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[33]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[32]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[31]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[30]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[29]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[28]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[27]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[26]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[25]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[24]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[23]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[22]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[21]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[20]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[19]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[18]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[17]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[16]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[15]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[14]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[13]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[12]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[11]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[10]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[9]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[8]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[7]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[6]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[5]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[4]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[3]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[2]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[1]~COUT\ : std_logic;
SIGNAL \wysi_counter|counter_cell[0]~COUT\ : std_logic;

BEGIN

ww_outclock1 <= outclock1;
ww_RST <= RST;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
sload_path_47 <= ww_sload_path_47;
sload_path_46 <= ww_sload_path_46;
sload_path_45 <= ww_sload_path_45;
sload_path_44 <= ww_sload_path_44;
sload_path_43 <= ww_sload_path_43;
sload_path_42 <= ww_sload_path_42;
sload_path_41 <= ww_sload_path_41;
sload_path_40 <= ww_sload_path_40;
sload_path_39 <= ww_sload_path_39;
sload_path_38 <= ww_sload_path_38;
sload_path_37 <= ww_sload_path_37;
sload_path_36 <= ww_sload_path_36;
sload_path_35 <= ww_sload_path_35;
sload_path_34 <= ww_sload_path_34;
sload_path_33 <= ww_sload_path_33;
sload_path_32 <= ww_sload_path_32;
sload_path_31 <= ww_sload_path_31;
sload_path_30 <= ww_sload_path_30;
sload_path_29 <= ww_sload_path_29;
sload_path_28 <= ww_sload_path_28;
sload_path_27 <= ww_sload_path_27;
sload_path_26 <= ww_sload_path_26;
sload_path_25 <= ww_sload_path_25;
sload_path_24 <= ww_sload_path_24;
sload_path_23 <= ww_sload_path_23;
sload_path_22 <= ww_sload_path_22;
sload_path_21 <= ww_sload_path_21;
sload_path_20 <= ww_sload_path_20;
sload_path_19 <= ww_sload_path_19;
sload_path_18 <= ww_sload_path_18;
sload_path_17 <= ww_sload_path_17;
sload_path_16 <= ww_sload_path_16;
sload_path_15 <= ww_sload_path_15;
sload_path_14 <= ww_sload_path_14;
sload_path_13 <= ww_sload_path_13;
sload_path_12 <= ww_sload_path_12;
sload_path_11 <= ww_sload_path_11;
sload_path_10 <= ww_sload_path_10;
sload_path_9 <= ww_sload_path_9;
sload_path_8 <= ww_sload_path_8;
sload_path_7 <= ww_sload_path_7;
sload_path_6 <= ww_sload_path_6;
sload_path_5 <= ww_sload_path_5;
sload_path_4 <= ww_sload_path_4;
sload_path_3 <= ww_sload_path_3;
sload_path_2 <= ww_sload_path_2;
sload_path_1 <= ww_sload_path_1;
sload_path_0 <= ww_sload_path_0;

\wysi_counter|counter_cell[47]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_47 = DFFE(\wysi_counter|counter_cell[46]~COUT\ $ sload_path_47, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => ww_sload_path_47,
	cin => \wysi_counter|counter_cell[46]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_47);

\wysi_counter|counter_cell[46]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_46 = DFFE(sload_path_46 $ !\wysi_counter|counter_cell[45]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[46]~COUT\ = CARRY(sload_path_46 & !\wysi_counter|counter_cell[45]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_46,
	cin => \wysi_counter|counter_cell[45]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_46,
	cout => \wysi_counter|counter_cell[46]~COUT\);

\wysi_counter|counter_cell[45]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_45 = DFFE(sload_path_45 $ \wysi_counter|counter_cell[44]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[45]~COUT\ = CARRY(!\wysi_counter|counter_cell[44]~COUT\ # !sload_path_45)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_45,
	cin => \wysi_counter|counter_cell[44]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_45,
	cout => \wysi_counter|counter_cell[45]~COUT\);

\wysi_counter|counter_cell[44]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_44 = DFFE(sload_path_44 $ !\wysi_counter|counter_cell[43]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[44]~COUT\ = CARRY(sload_path_44 & !\wysi_counter|counter_cell[43]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_44,
	cin => \wysi_counter|counter_cell[43]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_44,
	cout => \wysi_counter|counter_cell[44]~COUT\);

\wysi_counter|counter_cell[43]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_43 = DFFE(sload_path_43 $ \wysi_counter|counter_cell[42]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[43]~COUT\ = CARRY(!\wysi_counter|counter_cell[42]~COUT\ # !sload_path_43)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_43,
	cin => \wysi_counter|counter_cell[42]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_43,
	cout => \wysi_counter|counter_cell[43]~COUT\);

\wysi_counter|counter_cell[42]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_42 = DFFE(sload_path_42 $ !\wysi_counter|counter_cell[41]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[42]~COUT\ = CARRY(sload_path_42 & !\wysi_counter|counter_cell[41]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_42,
	cin => \wysi_counter|counter_cell[41]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_42,
	cout => \wysi_counter|counter_cell[42]~COUT\);

\wysi_counter|counter_cell[41]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_41 = DFFE(sload_path_41 $ \wysi_counter|counter_cell[40]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[41]~COUT\ = CARRY(!\wysi_counter|counter_cell[40]~COUT\ # !sload_path_41)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_41,
	cin => \wysi_counter|counter_cell[40]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_41,
	cout => \wysi_counter|counter_cell[41]~COUT\);

\wysi_counter|counter_cell[40]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_40 = DFFE(sload_path_40 $ !\wysi_counter|counter_cell[39]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[40]~COUT\ = CARRY(sload_path_40 & !\wysi_counter|counter_cell[39]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_40,
	cin => \wysi_counter|counter_cell[39]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_40,
	cout => \wysi_counter|counter_cell[40]~COUT\);

\wysi_counter|counter_cell[39]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_39 = DFFE(sload_path_39 $ \wysi_counter|counter_cell[38]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[39]~COUT\ = CARRY(!\wysi_counter|counter_cell[38]~COUT\ # !sload_path_39)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_39,
	cin => \wysi_counter|counter_cell[38]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_39,
	cout => \wysi_counter|counter_cell[39]~COUT\);

\wysi_counter|counter_cell[38]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_38 = DFFE(sload_path_38 $ !\wysi_counter|counter_cell[37]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[38]~COUT\ = CARRY(sload_path_38 & !\wysi_counter|counter_cell[37]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_38,
	cin => \wysi_counter|counter_cell[37]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_38,
	cout => \wysi_counter|counter_cell[38]~COUT\);

\wysi_counter|counter_cell[37]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_37 = DFFE(sload_path_37 $ \wysi_counter|counter_cell[36]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[37]~COUT\ = CARRY(!\wysi_counter|counter_cell[36]~COUT\ # !sload_path_37)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_37,
	cin => \wysi_counter|counter_cell[36]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_37,
	cout => \wysi_counter|counter_cell[37]~COUT\);

\wysi_counter|counter_cell[36]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_36 = DFFE(sload_path_36 $ !\wysi_counter|counter_cell[35]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[36]~COUT\ = CARRY(sload_path_36 & !\wysi_counter|counter_cell[35]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_36,
	cin => \wysi_counter|counter_cell[35]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_36,
	cout => \wysi_counter|counter_cell[36]~COUT\);

\wysi_counter|counter_cell[35]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_35 = DFFE(sload_path_35 $ \wysi_counter|counter_cell[34]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[35]~COUT\ = CARRY(!\wysi_counter|counter_cell[34]~COUT\ # !sload_path_35)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_35,
	cin => \wysi_counter|counter_cell[34]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_35,
	cout => \wysi_counter|counter_cell[35]~COUT\);

\wysi_counter|counter_cell[34]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_34 = DFFE(sload_path_34 $ !\wysi_counter|counter_cell[33]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[34]~COUT\ = CARRY(sload_path_34 & !\wysi_counter|counter_cell[33]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_34,
	cin => \wysi_counter|counter_cell[33]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_34,
	cout => \wysi_counter|counter_cell[34]~COUT\);

\wysi_counter|counter_cell[33]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_33 = DFFE(sload_path_33 $ \wysi_counter|counter_cell[32]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[33]~COUT\ = CARRY(!\wysi_counter|counter_cell[32]~COUT\ # !sload_path_33)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_33,
	cin => \wysi_counter|counter_cell[32]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_33,
	cout => \wysi_counter|counter_cell[33]~COUT\);

\wysi_counter|counter_cell[32]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_32 = DFFE(sload_path_32 $ !\wysi_counter|counter_cell[31]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[32]~COUT\ = CARRY(sload_path_32 & !\wysi_counter|counter_cell[31]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_32,
	cin => \wysi_counter|counter_cell[31]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_32,
	cout => \wysi_counter|counter_cell[32]~COUT\);

\wysi_counter|counter_cell[31]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_31 = DFFE(sload_path_31 $ \wysi_counter|counter_cell[30]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[31]~COUT\ = CARRY(!\wysi_counter|counter_cell[30]~COUT\ # !sload_path_31)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_31,
	cin => \wysi_counter|counter_cell[30]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_31,
	cout => \wysi_counter|counter_cell[31]~COUT\);

\wysi_counter|counter_cell[30]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_30 = DFFE(sload_path_30 $ !\wysi_counter|counter_cell[29]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[30]~COUT\ = CARRY(sload_path_30 & !\wysi_counter|counter_cell[29]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_30,
	cin => \wysi_counter|counter_cell[29]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_30,
	cout => \wysi_counter|counter_cell[30]~COUT\);

\wysi_counter|counter_cell[29]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_29 = DFFE(sload_path_29 $ \wysi_counter|counter_cell[28]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[29]~COUT\ = CARRY(!\wysi_counter|counter_cell[28]~COUT\ # !sload_path_29)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_29,
	cin => \wysi_counter|counter_cell[28]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_29,
	cout => \wysi_counter|counter_cell[29]~COUT\);

\wysi_counter|counter_cell[28]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_28 = DFFE(sload_path_28 $ !\wysi_counter|counter_cell[27]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[28]~COUT\ = CARRY(sload_path_28 & !\wysi_counter|counter_cell[27]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_28,
	cin => \wysi_counter|counter_cell[27]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_28,
	cout => \wysi_counter|counter_cell[28]~COUT\);

\wysi_counter|counter_cell[27]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_27 = DFFE(sload_path_27 $ \wysi_counter|counter_cell[26]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[27]~COUT\ = CARRY(!\wysi_counter|counter_cell[26]~COUT\ # !sload_path_27)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_27,
	cin => \wysi_counter|counter_cell[26]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_27,
	cout => \wysi_counter|counter_cell[27]~COUT\);

\wysi_counter|counter_cell[26]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_26 = DFFE(sload_path_26 $ !\wysi_counter|counter_cell[25]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[26]~COUT\ = CARRY(sload_path_26 & !\wysi_counter|counter_cell[25]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_26,
	cin => \wysi_counter|counter_cell[25]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_26,
	cout => \wysi_counter|counter_cell[26]~COUT\);

\wysi_counter|counter_cell[25]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_25 = DFFE(sload_path_25 $ \wysi_counter|counter_cell[24]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[25]~COUT\ = CARRY(!\wysi_counter|counter_cell[24]~COUT\ # !sload_path_25)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_25,
	cin => \wysi_counter|counter_cell[24]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_25,
	cout => \wysi_counter|counter_cell[25]~COUT\);

\wysi_counter|counter_cell[24]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_24 = DFFE(sload_path_24 $ !\wysi_counter|counter_cell[23]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[24]~COUT\ = CARRY(sload_path_24 & !\wysi_counter|counter_cell[23]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_24,
	cin => \wysi_counter|counter_cell[23]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_24,
	cout => \wysi_counter|counter_cell[24]~COUT\);

\wysi_counter|counter_cell[23]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_23 = DFFE(sload_path_23 $ \wysi_counter|counter_cell[22]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[23]~COUT\ = CARRY(!\wysi_counter|counter_cell[22]~COUT\ # !sload_path_23)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_23,
	cin => \wysi_counter|counter_cell[22]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_23,
	cout => \wysi_counter|counter_cell[23]~COUT\);

\wysi_counter|counter_cell[22]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_22 = DFFE(sload_path_22 $ !\wysi_counter|counter_cell[21]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[22]~COUT\ = CARRY(sload_path_22 & !\wysi_counter|counter_cell[21]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_22,
	cin => \wysi_counter|counter_cell[21]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_22,
	cout => \wysi_counter|counter_cell[22]~COUT\);

\wysi_counter|counter_cell[21]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_21 = DFFE(sload_path_21 $ \wysi_counter|counter_cell[20]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[21]~COUT\ = CARRY(!\wysi_counter|counter_cell[20]~COUT\ # !sload_path_21)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_21,
	cin => \wysi_counter|counter_cell[20]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_21,
	cout => \wysi_counter|counter_cell[21]~COUT\);

\wysi_counter|counter_cell[20]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_20 = DFFE(sload_path_20 $ !\wysi_counter|counter_cell[19]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[20]~COUT\ = CARRY(sload_path_20 & !\wysi_counter|counter_cell[19]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_20,
	cin => \wysi_counter|counter_cell[19]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_20,
	cout => \wysi_counter|counter_cell[20]~COUT\);

\wysi_counter|counter_cell[19]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_19 = DFFE(sload_path_19 $ \wysi_counter|counter_cell[18]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[19]~COUT\ = CARRY(!\wysi_counter|counter_cell[18]~COUT\ # !sload_path_19)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_19,
	cin => \wysi_counter|counter_cell[18]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_19,
	cout => \wysi_counter|counter_cell[19]~COUT\);

\wysi_counter|counter_cell[18]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_18 = DFFE(sload_path_18 $ !\wysi_counter|counter_cell[17]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[18]~COUT\ = CARRY(sload_path_18 & !\wysi_counter|counter_cell[17]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_18,
	cin => \wysi_counter|counter_cell[17]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_18,
	cout => \wysi_counter|counter_cell[18]~COUT\);

\wysi_counter|counter_cell[17]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_17 = DFFE(sload_path_17 $ \wysi_counter|counter_cell[16]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[17]~COUT\ = CARRY(!\wysi_counter|counter_cell[16]~COUT\ # !sload_path_17)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_17,
	cin => \wysi_counter|counter_cell[16]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_17,
	cout => \wysi_counter|counter_cell[17]~COUT\);

\wysi_counter|counter_cell[16]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_16 = DFFE(sload_path_16 $ !\wysi_counter|counter_cell[15]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[16]~COUT\ = CARRY(sload_path_16 & !\wysi_counter|counter_cell[15]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_16,
	cin => \wysi_counter|counter_cell[15]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_16,
	cout => \wysi_counter|counter_cell[16]~COUT\);

\wysi_counter|counter_cell[15]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_15 = DFFE(sload_path_15 $ \wysi_counter|counter_cell[14]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[15]~COUT\ = CARRY(!\wysi_counter|counter_cell[14]~COUT\ # !sload_path_15)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_15,
	cin => \wysi_counter|counter_cell[14]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_15,
	cout => \wysi_counter|counter_cell[15]~COUT\);

\wysi_counter|counter_cell[14]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_14 = DFFE(sload_path_14 $ !\wysi_counter|counter_cell[13]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[14]~COUT\ = CARRY(sload_path_14 & !\wysi_counter|counter_cell[13]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_14,
	cin => \wysi_counter|counter_cell[13]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_14,
	cout => \wysi_counter|counter_cell[14]~COUT\);

\wysi_counter|counter_cell[13]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_13 = DFFE(sload_path_13 $ \wysi_counter|counter_cell[12]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[13]~COUT\ = CARRY(!\wysi_counter|counter_cell[12]~COUT\ # !sload_path_13)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_13,
	cin => \wysi_counter|counter_cell[12]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_13,
	cout => \wysi_counter|counter_cell[13]~COUT\);

\wysi_counter|counter_cell[12]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_12 = DFFE(sload_path_12 $ !\wysi_counter|counter_cell[11]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[12]~COUT\ = CARRY(sload_path_12 & !\wysi_counter|counter_cell[11]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_12,
	cin => \wysi_counter|counter_cell[11]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_12,
	cout => \wysi_counter|counter_cell[12]~COUT\);

\wysi_counter|counter_cell[11]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_11 = DFFE(sload_path_11 $ \wysi_counter|counter_cell[10]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[11]~COUT\ = CARRY(!\wysi_counter|counter_cell[10]~COUT\ # !sload_path_11)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_11,
	cin => \wysi_counter|counter_cell[10]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_11,
	cout => \wysi_counter|counter_cell[11]~COUT\);

\wysi_counter|counter_cell[10]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_10 = DFFE(sload_path_10 $ !\wysi_counter|counter_cell[9]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[10]~COUT\ = CARRY(sload_path_10 & !\wysi_counter|counter_cell[9]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_10,
	cin => \wysi_counter|counter_cell[9]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_10,
	cout => \wysi_counter|counter_cell[10]~COUT\);

\wysi_counter|counter_cell[9]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_9 = DFFE(sload_path_9 $ \wysi_counter|counter_cell[8]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[9]~COUT\ = CARRY(!\wysi_counter|counter_cell[8]~COUT\ # !sload_path_9)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "5A5F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_9,
	cin => \wysi_counter|counter_cell[8]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_9,
	cout => \wysi_counter|counter_cell[9]~COUT\);

\wysi_counter|counter_cell[8]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_8 = DFFE(sload_path_8 $ !\wysi_counter|counter_cell[7]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[8]~COUT\ = CARRY(sload_path_8 & !\wysi_counter|counter_cell[7]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_8,
	cin => \wysi_counter|counter_cell[7]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_8,
	cout => \wysi_counter|counter_cell[8]~COUT\);

\wysi_counter|counter_cell[7]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_7 = DFFE(sload_path_7 $ \wysi_counter|counter_cell[6]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[7]~COUT\ = CARRY(!\wysi_counter|counter_cell[6]~COUT\ # !sload_path_7)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_7,
	cin => \wysi_counter|counter_cell[6]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_7,
	cout => \wysi_counter|counter_cell[7]~COUT\);

\wysi_counter|counter_cell[6]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_6 = DFFE(sload_path_6 $ !\wysi_counter|counter_cell[5]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[6]~COUT\ = CARRY(sload_path_6 & !\wysi_counter|counter_cell[5]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_6,
	cin => \wysi_counter|counter_cell[5]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_6,
	cout => \wysi_counter|counter_cell[6]~COUT\);

\wysi_counter|counter_cell[5]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_5 = DFFE(sload_path_5 $ \wysi_counter|counter_cell[4]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[5]~COUT\ = CARRY(!\wysi_counter|counter_cell[4]~COUT\ # !sload_path_5)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_5,
	cin => \wysi_counter|counter_cell[4]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_5,
	cout => \wysi_counter|counter_cell[5]~COUT\);

\wysi_counter|counter_cell[4]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_4 = DFFE(sload_path_4 $ !\wysi_counter|counter_cell[3]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[4]~COUT\ = CARRY(sload_path_4 & !\wysi_counter|counter_cell[3]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "C30C",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_4,
	cin => \wysi_counter|counter_cell[3]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_4,
	cout => \wysi_counter|counter_cell[4]~COUT\);

\wysi_counter|counter_cell[3]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_3 = DFFE(sload_path_3 $ \wysi_counter|counter_cell[2]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[3]~COUT\ = CARRY(!\wysi_counter|counter_cell[2]~COUT\ # !sload_path_3)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_3,
	cin => \wysi_counter|counter_cell[2]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_3,
	cout => \wysi_counter|counter_cell[3]~COUT\);

\wysi_counter|counter_cell[2]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_2 = DFFE(sload_path_2 $ !\wysi_counter|counter_cell[1]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[2]~COUT\ = CARRY(sload_path_2 & !\wysi_counter|counter_cell[1]~COUT\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "A50A",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_sload_path_2,
	cin => \wysi_counter|counter_cell[1]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_2,
	cout => \wysi_counter|counter_cell[2]~COUT\);

\wysi_counter|counter_cell[1]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_1 = DFFE(sload_path_1 $ \wysi_counter|counter_cell[0]~COUT\, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[1]~COUT\ = CARRY(!\wysi_counter|counter_cell[0]~COUT\ # !sload_path_1)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "arithmetic",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "3C3F",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datab => ww_sload_path_1,
	cin => \wysi_counter|counter_cell[0]~COUT\,
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_1,
	cout => \wysi_counter|counter_cell[1]~COUT\);

\wysi_counter|counter_cell[0]\ : apex20ke_lcell 
-- Equation(s):
-- sload_path_0 = DFFE(!sload_path_0, GLOBAL(outclock1), !GLOBAL(RST), , )
-- \wysi_counter|counter_cell[0]~COUT\ = CARRY(sload_path_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "qfbk_counter",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	clk => ww_outclock1,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => ww_sload_path_0,
	cout => \wysi_counter|counter_cell[0]~COUT\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	LED2ATWDdelay IS
    PORT (
	CLK40 : IN std_logic;
	RST : IN std_logic;
	command_4_local_0 : IN std_logic;
	command_4_local_1 : IN std_logic;
	command_4_local_2 : IN std_logic;
	command_4_local_3 : IN std_logic;
	LEDdelay_0 : IN std_logic;
	LEDdelay_01 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	i : OUT std_logic
	);
END LED2ATWDdelay;

ARCHITECTURE structure OF LED2ATWDdelay IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL ww_CLK40 : std_logic;
SIGNAL ww_RST : std_logic;
SIGNAL ww_command_4_local_0 : std_logic;
SIGNAL ww_command_4_local_1 : std_logic;
SIGNAL ww_command_4_local_2 : std_logic;
SIGNAL ww_command_4_local_3 : std_logic;
SIGNAL ww_LEDdelay_0 : std_logic;
SIGNAL ww_LEDdelay_01 : std_logic;
SIGNAL ww_devclrn : std_logic;
SIGNAL ww_devpor : std_logic;
SIGNAL ww_devoe : std_logic;
SIGNAL ww_i : std_logic;
SIGNAL \i5~137_1\ : std_logic;
SIGNAL \i5~139_1\ : std_logic;
SIGNAL \SRG[14]\ : std_logic;
SIGNAL \SRG[15]\ : std_logic;
SIGNAL \i5~139\ : std_logic;
SIGNAL \i5~142\ : std_logic;
SIGNAL \i5~137\ : std_logic;
SIGNAL \i5~141\ : std_logic;
SIGNAL \SRG[0]\ : std_logic;
SIGNAL \SRG[1]\ : std_logic;
SIGNAL \SRG[2]\ : std_logic;
SIGNAL \SRG[3]\ : std_logic;
SIGNAL \SRG[4]\ : std_logic;
SIGNAL \SRG[5]\ : std_logic;
SIGNAL \SRG[6]\ : std_logic;
SIGNAL \SRG[7]\ : std_logic;
SIGNAL \SRG[8]\ : std_logic;
SIGNAL \SRG[9]\ : std_logic;
SIGNAL \SRG[10]\ : std_logic;
SIGNAL \SRG[11]\ : std_logic;
SIGNAL \SRG[12]\ : std_logic;
SIGNAL \SRG[13]\ : std_logic;
SIGNAL \i~15\ : std_logic;
SIGNAL \i~16\ : std_logic;
SIGNAL \i~13\ : std_logic;
SIGNAL \i~14\ : std_logic;
SIGNAL \i~11\ : std_logic;
SIGNAL \i~12\ : std_logic;
SIGNAL \i~9\ : std_logic;
SIGNAL \i~10\ : std_logic;
SIGNAL \i~7\ : std_logic;

BEGIN

ww_CLK40 <= CLK40;
ww_RST <= RST;
ww_command_4_local_0 <= command_4_local_0;
ww_command_4_local_1 <= command_4_local_1;
ww_command_4_local_2 <= command_4_local_2;
ww_command_4_local_3 <= command_4_local_3;
ww_LEDdelay_0 <= LEDdelay_0;
ww_LEDdelay_01 <= LEDdelay_01;
ww_devclrn <= devclrn;
ww_devpor <= devpor;
ww_devoe <= devoe;
i <= ww_i;

\i~8_I\ : apex20ke_lcell 
-- Equation(s):
-- i = \i~7\ & (\i~16\ # !command_4_local_3) # !\i~7\ & command_4_local_3 & \i~14\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DDA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_4_local_3,
	datab => \i~16\,
	datac => \i~14\,
	datad => \i~7\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => ww_i);

\SRG[14]~I\ : apex20ke_lcell 
-- Equation(s):
-- \SRG[14]\ = DFFE(\SRG[13]\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \SRG[13]\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \SRG[14]\);

\SRG[15]~I\ : apex20ke_lcell 
-- Equation(s):
-- \SRG[15]\ = DFFE(\SRG[14]\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \SRG[14]\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \SRG[15]\);

\i5~139_I\ : apex20ke_lcell 
-- Equation(s):
-- \i5~139\ = !\SRG[4]\ & !\SRG[7]\ & !\SRG[2]\ & !\SRG[1]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => \SRG[4]\,
	datab => \SRG[7]\,
	datac => \SRG[2]\,
	datad => \SRG[1]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \i5~139\);

\i5~142_I\ : apex20ke_lcell 
-- Equation(s):
-- \i5~142\ = (!\SRG[14]\ & !\SRG[0]\ & !\SRG[3]\ & !\SRG[13]\) & CASCADE(\i5~139\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \SRG[14]\,
	datab => \SRG[0]\,
	datac => \SRG[3]\,
	datad => \SRG[13]\,
	cascin => \i5~139\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i5~142\);

\i5~137_I\ : apex20ke_lcell 
-- Equation(s):
-- \i5~137\ = !\SRG[9]\ & !\SRG[10]\ & (LEDdelay_0 # LEDdelay_0)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0032",
	output_mode => "none")
-- pragma translate_on
PORT MAP (
	dataa => ww_LEDdelay_0,
	datab => \SRG[9]\,
	datac => ww_LEDdelay_01,
	datad => \SRG[10]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	cascout => \i5~137\);

\i5~141_I\ : apex20ke_lcell 
-- Equation(s):
-- \i5~141\ = (!\SRG[5]\ & !\SRG[11]\ & !\SRG[6]\ & !\SRG[8]\) & CASCADE(\i5~137\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0001",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \SRG[5]\,
	datab => \SRG[11]\,
	datac => \SRG[6]\,
	datad => \SRG[8]\,
	cascin => \i5~137\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i5~141\);

\SRG[0]~I\ : apex20ke_lcell 
-- Equation(s):
-- \SRG[0]\ = DFFE(!\SRG[15]\ & !\SRG[12]\ & \i5~142\ & \i5~141\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "1000",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	dataa => \SRG[15]\,
	datab => \SRG[12]\,
	datac => \i5~142\,
	datad => \i5~141\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \SRG[0]\);

\SRG[1]~I\ : apex20ke_lcell 
-- Equation(s):
-- \SRG[1]\ = DFFE(\SRG[0]\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \SRG[0]\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \SRG[1]\);

\SRG[2]~I\ : apex20ke_lcell 
-- Equation(s):
-- \SRG[2]\ = DFFE(\SRG[1]\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \SRG[1]\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \SRG[2]\);

\SRG[3]~I\ : apex20ke_lcell 
-- Equation(s):
-- \SRG[3]\ = DFFE(\SRG[2]\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \SRG[2]\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \SRG[3]\);

\SRG[4]~I\ : apex20ke_lcell 
-- Equation(s):
-- \SRG[4]\ = DFFE(\SRG[3]\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \SRG[3]\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \SRG[4]\);

\SRG[5]~I\ : apex20ke_lcell 
-- Equation(s):
-- \SRG[5]\ = DFFE(\SRG[4]\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \SRG[4]\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \SRG[5]\);

\SRG[6]~I\ : apex20ke_lcell 
-- Equation(s):
-- \SRG[6]\ = DFFE(\SRG[5]\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \SRG[5]\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \SRG[6]\);

\SRG[7]~I\ : apex20ke_lcell 
-- Equation(s):
-- \SRG[7]\ = DFFE(\SRG[6]\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \SRG[6]\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \SRG[7]\);

\SRG[8]~I\ : apex20ke_lcell 
-- Equation(s):
-- \SRG[8]\ = DFFE(\SRG[7]\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \SRG[7]\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \SRG[8]\);

\SRG[9]~I\ : apex20ke_lcell 
-- Equation(s):
-- \SRG[9]\ = DFFE(\SRG[8]\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \SRG[8]\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \SRG[9]\);

\SRG[10]~I\ : apex20ke_lcell 
-- Equation(s):
-- \SRG[10]\ = DFFE(\SRG[9]\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \SRG[9]\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \SRG[10]\);

\SRG[11]~I\ : apex20ke_lcell 
-- Equation(s):
-- \SRG[11]\ = DFFE(\SRG[10]\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F0F0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datac => \SRG[10]\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \SRG[11]\);

\SRG[12]~I\ : apex20ke_lcell 
-- Equation(s):
-- \SRG[12]\ = DFFE(\SRG[11]\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \SRG[11]\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \SRG[12]\);

\SRG[13]~I\ : apex20ke_lcell 
-- Equation(s):
-- \SRG[13]\ = DFFE(\SRG[12]\, GLOBAL(outclock1), !GLOBAL(RST), , )

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FF00",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	datad => \SRG[12]\,
	clk => ww_CLK40,
	aclr => ww_RST,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	regout => \SRG[13]\);

\i~15_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~15\ = command_4_local_1 & (command_4_local_0 # \SRG[14]\) # !command_4_local_1 & !command_4_local_0 & \SRG[12]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E5E0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_4_local_0,
	datab => \SRG[14]\,
	datac => ww_command_4_local_1,
	datad => \SRG[12]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~15\);

\i~16_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~16\ = \i~15\ & (\SRG[15]\ # !command_4_local_0) # !\i~15\ & command_4_local_0 & \SRG[13]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F588",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_4_local_0,
	datab => \SRG[13]\,
	datac => \SRG[15]\,
	datad => \i~15\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~16\);

\i~13_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~13\ = command_4_local_0 & (command_4_local_1 # \SRG[9]\) # !command_4_local_0 & !command_4_local_1 & \SRG[8]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "E5E0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_4_local_1,
	datab => \SRG[9]\,
	datac => ww_command_4_local_0,
	datad => \SRG[8]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~13\);

\i~14_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~14\ = \i~13\ & (\SRG[11]\ # !command_4_local_1) # !\i~13\ & command_4_local_1 & \SRG[10]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DAD0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_4_local_1,
	datab => \SRG[11]\,
	datac => \i~13\,
	datad => \SRG[10]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~14\);

\i~11_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~11\ = command_4_local_1 & (\SRG[6]\ # command_4_local_0) # !command_4_local_1 & \SRG[4]\ & !command_4_local_0

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CCB8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \SRG[6]\,
	datab => ww_command_4_local_1,
	datac => \SRG[4]\,
	datad => ww_command_4_local_0,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~11\);

\i~12_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~12\ = \i~11\ & (\SRG[7]\ # !command_4_local_0) # !\i~11\ & command_4_local_0 & \SRG[5]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "DDA0",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_4_local_0,
	datab => \SRG[7]\,
	datac => \SRG[5]\,
	datad => \i~11\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~12\);

\i~9_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~9\ = command_4_local_0 & (\SRG[1]\ # command_4_local_1) # !command_4_local_0 & !command_4_local_1 & \SRG[0]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "CBC8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => \SRG[1]\,
	datab => ww_command_4_local_0,
	datac => ww_command_4_local_1,
	datad => \SRG[0]\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~9\);

\i~10_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~10\ = \i~9\ & (\SRG[3]\ # !command_4_local_1) # !\i~9\ & command_4_local_1 & \SRG[2]\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "F588",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_4_local_1,
	datab => \SRG[2]\,
	datac => \SRG[3]\,
	datad => \i~9\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~10\);

\i~7_I\ : apex20ke_lcell 
-- Equation(s):
-- \i~7\ = command_4_local_2 & (\i~12\ # command_4_local_3) # !command_4_local_2 & !command_4_local_3 & \i~10\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "ADA8",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	dataa => ww_command_4_local_2,
	datab => \i~12\,
	datac => ww_command_4_local_3,
	datad => \i~10\,
	devclrn => ww_devclrn,
	devpor => ww_devpor,
	combout => \i~7\);
END structure;


LIBRARY IEEE, apex20ke;
USE IEEE.std_logic_1164.all;
USE apex20ke.apex20ke_components.all;

ENTITY 	simpletest IS
    PORT (
	CLK3p : IN std_logic;
	CLK4p : IN std_logic;
	COM_AD_OTR : IN std_logic;
	HDV_Rx : IN std_logic;
	COINC_DOWN_A : IN std_logic;
	COINC_DOWN_ABAR : IN std_logic;
	COINC_DOWN_B : IN std_logic;
	COINC_DOWN_BBAR : IN std_logic;
	COINC_UP_A : IN std_logic;
	COINC_UP_ABAR : IN std_logic;
	COINC_UP_B : IN std_logic;
	COINC_UP_BBAR : IN std_logic;
	FL_ATTN : IN std_logic;
	FL_TDO : IN std_logic;
	CLK2p : IN std_logic;
	OneSPE : IN std_logic;
	COM_AD_D : IN std_logic_vector(9 DOWNTO 0);
	A_nB : IN std_logic;
	FLASH_AD_D : IN std_logic_vector(9 DOWNTO 0);
	FLASH_NCO : IN std_logic;
	CLK1p : IN std_logic;
	MultiSPE : IN std_logic;
	ATWD0_D : IN std_logic_vector(9 DOWNTO 0);
	ATWD1_D : IN std_logic_vector(9 DOWNTO 0);
	TriggerComplete_0 : IN std_logic;
	TriggerComplete_1 : IN std_logic;
	UARTRXD : IN std_logic;
	INTEXTPIN : IN std_logic;
	UARTDSRN : IN std_logic;
	UARTCTSN : IN std_logic;
	EBIACK : IN std_logic;
	CLK_REF : IN std_logic;
	nPOR : IN std_logic;
	SDRAMDQS : INOUT std_logic_vector(3 DOWNTO 0);
	SDRAMDQ : INOUT std_logic_vector(31 DOWNTO 0);
	EBIDQ : INOUT std_logic_vector(15 DOWNTO 0);
	UARTRIN : INOUT std_logic;
	UARTDCDN : INOUT std_logic;
	nRESET : INOUT std_logic;
	CLKLK_OUT2p : OUT std_logic;
	COMM_RESET : OUT std_logic;
	FPGA_LOADED : OUT std_logic;
	COM_TX_SLEEP : OUT std_logic;
	COM_DB : OUT std_logic_vector(13 DOWNTO 6);
	HDV_RxENA : OUT std_logic;
	HDV_TxENA : OUT std_logic;
	HDV_IN : OUT std_logic;
	FLASH_AD_STBY : OUT std_logic;
	ATWDTrigger_0 : OUT std_logic;
	OutputEnable_0 : OUT std_logic;
	CounterClock_0 : OUT std_logic;
	ShiftClock_0 : OUT std_logic;
	RampSet_0 : OUT std_logic;
	ChannelSelect_0 : OUT std_logic_vector(1 DOWNTO 0);
	ReadWrite_0 : OUT std_logic;
	AnalogReset_0 : OUT std_logic;
	DigitalReset_0 : OUT std_logic;
	DigitalSet_0 : OUT std_logic;
	ATWD0VDD_SUP : OUT std_logic;
	ATWDTrigger_1 : OUT std_logic;
	OutputEnable_1 : OUT std_logic;
	CounterClock_1 : OUT std_logic;
	ShiftClock_1 : OUT std_logic;
	RampSet_1 : OUT std_logic;
	ChannelSelect_1 : OUT std_logic_vector(1 DOWNTO 0);
	ReadWrite_1 : OUT std_logic;
	AnalogReset_1 : OUT std_logic;
	DigitalReset_1 : OUT std_logic;
	DigitalSet_1 : OUT std_logic;
	ATWD1VDD_SUP : OUT std_logic;
	MultiSPE_nl : OUT std_logic;
	OneSPE_nl : OUT std_logic;
	FE_TEST_PULSE : OUT std_logic;
	FE_PULSER_P : OUT std_logic_vector(3 DOWNTO 0);
	FE_PULSER_N : OUT std_logic_vector(3 DOWNTO 0);
	R2BUS : OUT std_logic_vector(6 DOWNTO 0);
	SingleLED_TRIGGER : OUT std_logic;
	COINCIDENCE_OUT_DOWN : OUT std_logic;
	COINC_DOWN_ALATCH : OUT std_logic;
	COINC_DOWN_BLATCH : OUT std_logic;
	COINCIDENCE_OUT_UP : OUT std_logic;
	COINC_UP_ALATCH : OUT std_logic;
	COINC_UP_BLATCH : OUT std_logic;
	FL_Trigger : OUT std_logic;
	FL_Trigger_bar : OUT std_logic;
	FL_PRE_TRIG : OUT std_logic;
	FL_TMS : OUT std_logic;
	FL_TCK : OUT std_logic;
	FL_TDI : OUT std_logic;
	PDL_FPGA_D : OUT std_logic_vector(7 DOWNTO 0);
	PGM : OUT std_logic_vector(15 DOWNTO 0);
	UARTDTRN : OUT std_logic;
	UARTRTSN : OUT std_logic;
	UARTTXD : OUT std_logic;
	EBIBE : OUT std_logic_vector(1 DOWNTO 0);
	EBICSN : OUT std_logic_vector(3 DOWNTO 0);
	EBIADDR : OUT std_logic_vector(24 DOWNTO 0);
	EBICLK : OUT std_logic;
	EBIOEN : OUT std_logic;
	EBIWEN : OUT std_logic;
	SDRAMADDR : OUT std_logic_vector(14 DOWNTO 0);
	SDRAMCSN : OUT std_logic_vector(1 DOWNTO 0);
	SDRAMDQM : OUT std_logic_vector(3 DOWNTO 0);
	SDRAMRASN : OUT std_logic;
	SDRAMCASN : OUT std_logic;
	SDRAMWEN : OUT std_logic;
	SDRAMCLKE : OUT std_logic;
	SDRAMCLKN : OUT std_logic;
	SDRAMCLK : OUT std_logic
	);
END simpletest;

ARCHITECTURE structure OF simpletest IS
SIGNAL gnd : std_logic := '0';
SIGNAL vcc : std_logic := '1';
SIGNAL devclrn : std_logic := '1';
SIGNAL devpor : std_logic := '1';
SIGNAL devoe : std_logic := '0';
SIGNAL ww_CLK3p : std_logic;
SIGNAL ww_CLK4p : std_logic;
SIGNAL ww_COM_AD_OTR : std_logic;
SIGNAL ww_HDV_Rx : std_logic;
SIGNAL ww_COINC_DOWN_A : std_logic;
SIGNAL ww_COINC_DOWN_ABAR : std_logic;
SIGNAL ww_COINC_DOWN_B : std_logic;
SIGNAL ww_COINC_DOWN_BBAR : std_logic;
SIGNAL ww_COINC_UP_A : std_logic;
SIGNAL ww_COINC_UP_ABAR : std_logic;
SIGNAL ww_COINC_UP_B : std_logic;
SIGNAL ww_COINC_UP_BBAR : std_logic;
SIGNAL ww_FL_ATTN : std_logic;
SIGNAL ww_FL_TDO : std_logic;
SIGNAL ww_CLK2p : std_logic;
SIGNAL ww_OneSPE : std_logic;
SIGNAL ww_COM_AD_D : std_logic_vector(9 DOWNTO 0);
SIGNAL ww_A_nB : std_logic;
SIGNAL ww_FLASH_AD_D : std_logic_vector(9 DOWNTO 0);
SIGNAL ww_FLASH_NCO : std_logic;
SIGNAL ww_CLK1p : std_logic;
SIGNAL ww_MultiSPE : std_logic;
SIGNAL ww_ATWD0_D : std_logic_vector(9 DOWNTO 0);
SIGNAL ww_ATWD1_D : std_logic_vector(9 DOWNTO 0);
SIGNAL ww_TriggerComplete_0 : std_logic;
SIGNAL ww_TriggerComplete_1 : std_logic;
SIGNAL ww_UARTRXD : std_logic;
SIGNAL ww_INTEXTPIN : std_logic;
SIGNAL ww_UARTDSRN : std_logic;
SIGNAL ww_UARTCTSN : std_logic;
SIGNAL ww_EBIACK : std_logic;
SIGNAL ww_CLK_REF : std_logic;
SIGNAL ww_nPOR : std_logic;
SIGNAL ww_CLKLK_OUT2p : std_logic;
SIGNAL ww_COMM_RESET : std_logic;
SIGNAL ww_FPGA_LOADED : std_logic;
SIGNAL ww_COM_TX_SLEEP : std_logic;
SIGNAL ww_COM_DB : std_logic_vector(13 DOWNTO 6);
SIGNAL ww_HDV_RxENA : std_logic;
SIGNAL ww_HDV_TxENA : std_logic;
SIGNAL ww_HDV_IN : std_logic;
SIGNAL ww_FLASH_AD_STBY : std_logic;
SIGNAL ww_ATWDTrigger_0 : std_logic;
SIGNAL ww_OutputEnable_0 : std_logic;
SIGNAL ww_CounterClock_0 : std_logic;
SIGNAL ww_ShiftClock_0 : std_logic;
SIGNAL ww_RampSet_0 : std_logic;
SIGNAL ww_ChannelSelect_0 : std_logic_vector(1 DOWNTO 0);
SIGNAL ww_ReadWrite_0 : std_logic;
SIGNAL ww_AnalogReset_0 : std_logic;
SIGNAL ww_DigitalReset_0 : std_logic;
SIGNAL ww_DigitalSet_0 : std_logic;
SIGNAL ww_ATWD0VDD_SUP : std_logic;
SIGNAL ww_ATWDTrigger_1 : std_logic;
SIGNAL ww_OutputEnable_1 : std_logic;
SIGNAL ww_CounterClock_1 : std_logic;
SIGNAL ww_ShiftClock_1 : std_logic;
SIGNAL ww_RampSet_1 : std_logic;
SIGNAL ww_ChannelSelect_1 : std_logic_vector(1 DOWNTO 0);
SIGNAL ww_ReadWrite_1 : std_logic;
SIGNAL ww_AnalogReset_1 : std_logic;
SIGNAL ww_DigitalReset_1 : std_logic;
SIGNAL ww_DigitalSet_1 : std_logic;
SIGNAL ww_ATWD1VDD_SUP : std_logic;
SIGNAL ww_MultiSPE_nl : std_logic;
SIGNAL ww_OneSPE_nl : std_logic;
SIGNAL ww_FE_TEST_PULSE : std_logic;
SIGNAL ww_FE_PULSER_P : std_logic_vector(3 DOWNTO 0);
SIGNAL ww_FE_PULSER_N : std_logic_vector(3 DOWNTO 0);
SIGNAL ww_R2BUS : std_logic_vector(6 DOWNTO 0);
SIGNAL ww_SingleLED_TRIGGER : std_logic;
SIGNAL ww_COINCIDENCE_OUT_DOWN : std_logic;
SIGNAL ww_COINC_DOWN_ALATCH : std_logic;
SIGNAL ww_COINC_DOWN_BLATCH : std_logic;
SIGNAL ww_COINCIDENCE_OUT_UP : std_logic;
SIGNAL ww_COINC_UP_ALATCH : std_logic;
SIGNAL ww_COINC_UP_BLATCH : std_logic;
SIGNAL ww_FL_Trigger : std_logic;
SIGNAL ww_FL_Trigger_bar : std_logic;
SIGNAL ww_FL_PRE_TRIG : std_logic;
SIGNAL ww_FL_TMS : std_logic;
SIGNAL ww_FL_TCK : std_logic;
SIGNAL ww_FL_TDI : std_logic;
SIGNAL ww_PDL_FPGA_D : std_logic_vector(7 DOWNTO 0);
SIGNAL ww_PGM : std_logic_vector(15 DOWNTO 0);
SIGNAL ww_UARTDTRN : std_logic;
SIGNAL ww_UARTRTSN : std_logic;
SIGNAL ww_UARTTXD : std_logic;
SIGNAL ww_EBIBE : std_logic_vector(1 DOWNTO 0);
SIGNAL ww_EBICSN : std_logic_vector(3 DOWNTO 0);
SIGNAL ww_EBIADDR : std_logic_vector(24 DOWNTO 0);
SIGNAL ww_EBICLK : std_logic;
SIGNAL ww_EBIOEN : std_logic;
SIGNAL ww_EBIWEN : std_logic;
SIGNAL ww_SDRAMADDR : std_logic_vector(14 DOWNTO 0);
SIGNAL ww_SDRAMCSN : std_logic_vector(1 DOWNTO 0);
SIGNAL ww_SDRAMDQM : std_logic_vector(3 DOWNTO 0);
SIGNAL ww_SDRAMRASN : std_logic;
SIGNAL ww_SDRAMCASN : std_logic;
SIGNAL ww_SDRAMWEN : std_logic;
SIGNAL ww_SDRAMCLKE : std_logic;
SIGNAL ww_SDRAMCLKN : std_logic;
SIGNAL ww_SDRAMCLK : std_logic;
SIGNAL ww_inst_coinc_coinc_latch : std_logic_vector(3 DOWNTO 0);
SIGNAL ww_dcom_ap_inst_COM_AD_D : std_logic_vector(9 DOWNTO 0);
SIGNAL \wysi_counter|sload_path[15]\ : std_logic;
SIGNAL \wysi_counter|sload_path[14]\ : std_logic;
SIGNAL \wysi_counter|sload_path[13]\ : std_logic;
SIGNAL \wysi_counter|sload_path[12]\ : std_logic;
SIGNAL \wysi_counter|sload_path[11]\ : std_logic;
SIGNAL \wysi_counter|sload_path[10]\ : std_logic;
SIGNAL \wysi_counter|sload_path[9]\ : std_logic;
SIGNAL \wysi_counter|sload_path[8]\ : std_logic;
SIGNAL \wysi_counter|sload_path[7]\ : std_logic;
SIGNAL \wysi_counter|sload_path[6]\ : std_logic;
SIGNAL \wysi_counter|sload_path[5]\ : std_logic;
SIGNAL \wysi_counter|sload_path[4]\ : std_logic;
SIGNAL \wysi_counter|sload_path[3]\ : std_logic;
SIGNAL \wysi_counter|sload_path[2]\ : std_logic;
SIGNAL \wysi_counter|sload_path[1]\ : std_logic;
SIGNAL \wysi_counter|sload_path[0]\ : std_logic;
SIGNAL \wysi_counter|q[15]\ : std_logic;
SIGNAL \wysi_counter|q[14]\ : std_logic;
SIGNAL \wysi_counter|q[13]\ : std_logic;
SIGNAL \wysi_counter|q[12]\ : std_logic;
SIGNAL \wysi_counter|q[11]\ : std_logic;
SIGNAL \wysi_counter|q[10]\ : std_logic;
SIGNAL \wysi_counter|q[9]\ : std_logic;
SIGNAL \wysi_counter|q[8]\ : std_logic;
SIGNAL \wysi_counter|q[7]\ : std_logic;
SIGNAL \wysi_counter|q[6]\ : std_logic;
SIGNAL \wysi_counter|q[5]\ : std_logic;
SIGNAL \wysi_counter|q[4]\ : std_logic;
SIGNAL \wysi_counter|q[3]\ : std_logic;
SIGNAL \wysi_counter|q[2]\ : std_logic;
SIGNAL \wysi_counter|q[1]\ : std_logic;
SIGNAL \wysi_counter|q[0]\ : std_logic;
SIGNAL \wysi_counter|q[12]~1\ : std_logic;
SIGNAL \wysi_counter|q[11]~1\ : std_logic;
SIGNAL \wysi_counter|q[10]~1\ : std_logic;
SIGNAL \wysi_counter|q[9]~1\ : std_logic;
SIGNAL \wysi_counter|q[8]~1\ : std_logic;
SIGNAL \wysi_counter|q[7]~1\ : std_logic;
SIGNAL \wysi_counter|q[6]~1\ : std_logic;
SIGNAL \wysi_counter|q[5]~1\ : std_logic;
SIGNAL \wysi_counter|q[4]~1\ : std_logic;
SIGNAL \wysi_counter|q[3]~1\ : std_logic;
SIGNAL \wysi_counter|q[2]~1\ : std_logic;
SIGNAL \wysi_counter|q[1]~1\ : std_logic;
SIGNAL \wysi_counter|q[0]~1\ : std_logic;
SIGNAL \altclklock_component|outclock1\ : std_logic;
SIGNAL \altclklock_component|outclock0\ : std_logic;
SIGNAL \altclklock_component|outclock1~1\ : std_logic;
SIGNAL \wysi_counter|sload_path[47]\ : std_logic;
SIGNAL \wysi_counter|sload_path[46]\ : std_logic;
SIGNAL \wysi_counter|sload_path[45]\ : std_logic;
SIGNAL \wysi_counter|sload_path[44]\ : std_logic;
SIGNAL \wysi_counter|sload_path[43]\ : std_logic;
SIGNAL \wysi_counter|sload_path[42]\ : std_logic;
SIGNAL \wysi_counter|sload_path[41]\ : std_logic;
SIGNAL \wysi_counter|sload_path[40]\ : std_logic;
SIGNAL \wysi_counter|sload_path[39]\ : std_logic;
SIGNAL \wysi_counter|sload_path[38]\ : std_logic;
SIGNAL \wysi_counter|sload_path[37]\ : std_logic;
SIGNAL \wysi_counter|sload_path[36]\ : std_logic;
SIGNAL \wysi_counter|sload_path[35]\ : std_logic;
SIGNAL \wysi_counter|sload_path[34]\ : std_logic;
SIGNAL \wysi_counter|sload_path[33]\ : std_logic;
SIGNAL \wysi_counter|sload_path[32]\ : std_logic;
SIGNAL \wysi_counter|sload_path[31]\ : std_logic;
SIGNAL \wysi_counter|sload_path[30]\ : std_logic;
SIGNAL \wysi_counter|sload_path[29]\ : std_logic;
SIGNAL \wysi_counter|sload_path[28]\ : std_logic;
SIGNAL \wysi_counter|sload_path[27]\ : std_logic;
SIGNAL \wysi_counter|sload_path[26]\ : std_logic;
SIGNAL \wysi_counter|sload_path[25]\ : std_logic;
SIGNAL \wysi_counter|sload_path[24]\ : std_logic;
SIGNAL \wysi_counter|sload_path[23]\ : std_logic;
SIGNAL \wysi_counter|sload_path[22]\ : std_logic;
SIGNAL \wysi_counter|sload_path[21]\ : std_logic;
SIGNAL \wysi_counter|sload_path[20]\ : std_logic;
SIGNAL \wysi_counter|sload_path[19]\ : std_logic;
SIGNAL \wysi_counter|sload_path[18]\ : std_logic;
SIGNAL \wysi_counter|sload_path[17]\ : std_logic;
SIGNAL \wysi_counter|sload_path[16]\ : std_logic;
SIGNAL \wysi_counter|sload_path[15]~1\ : std_logic;
SIGNAL \wysi_counter|sload_path[14]~1\ : std_logic;
SIGNAL \wysi_counter|sload_path[13]~1\ : std_logic;
SIGNAL \wysi_counter|sload_path[12]~1\ : std_logic;
SIGNAL \wysi_counter|sload_path[11]~1\ : std_logic;
SIGNAL \wysi_counter|sload_path[10]~1\ : std_logic;
SIGNAL \wysi_counter|sload_path[9]~1\ : std_logic;
SIGNAL \wysi_counter|sload_path[8]~1\ : std_logic;
SIGNAL \wysi_counter|sload_path[7]~1\ : std_logic;
SIGNAL \wysi_counter|sload_path[6]~1\ : std_logic;
SIGNAL \wysi_counter|sload_path[5]~1\ : std_logic;
SIGNAL \wysi_counter|sload_path[4]~1\ : std_logic;
SIGNAL \wysi_counter|sload_path[3]~1\ : std_logic;
SIGNAL \wysi_counter|sload_path[2]~1\ : std_logic;
SIGNAL \wysi_counter|sload_path[1]~1\ : std_logic;
SIGNAL \wysi_counter|sload_path[0]~1\ : std_logic;
SIGNAL \wysi_counter|counter_cell[0]~lut2\ : std_logic;
SIGNAL \dp0|portadataout[0]\ : std_logic;
SIGNAL \dp0|portadataout[1]\ : std_logic;
SIGNAL \dp0|portadataout[2]\ : std_logic;
SIGNAL \dp0|portadataout[3]\ : std_logic;
SIGNAL \dp0|portadataout[4]\ : std_logic;
SIGNAL \dp0|portadataout[5]\ : std_logic;
SIGNAL \dp0|portadataout[6]\ : std_logic;
SIGNAL \dp0|portadataout[7]\ : std_logic;
SIGNAL \dp0|portadataout[8]\ : std_logic;
SIGNAL \dp0|portadataout[9]\ : std_logic;
SIGNAL \dp0|portadataout[10]\ : std_logic;
SIGNAL \dp0|portadataout[11]\ : std_logic;
SIGNAL \dp0|portadataout[12]\ : std_logic;
SIGNAL \dp0|portadataout[13]\ : std_logic;
SIGNAL \dp0|portadataout[14]\ : std_logic;
SIGNAL \dp0|portadataout[15]\ : std_logic;
SIGNAL \dp0|portadataout[16]\ : std_logic;
SIGNAL \dp0|portadataout[17]\ : std_logic;
SIGNAL \dp0|portadataout[18]\ : std_logic;
SIGNAL \dp0|portadataout[19]\ : std_logic;
SIGNAL \dp0|portadataout[20]\ : std_logic;
SIGNAL \dp0|portadataout[21]\ : std_logic;
SIGNAL \dp0|portadataout[22]\ : std_logic;
SIGNAL \dp0|portadataout[23]\ : std_logic;
SIGNAL \dp0|portadataout[24]\ : std_logic;
SIGNAL \dp0|portadataout[25]\ : std_logic;
SIGNAL \dp0|portadataout[26]\ : std_logic;
SIGNAL \dp0|portadataout[27]\ : std_logic;
SIGNAL \dp0|portadataout[28]\ : std_logic;
SIGNAL \dp0|portadataout[29]\ : std_logic;
SIGNAL \dp0|portadataout[30]\ : std_logic;
SIGNAL \dp0|portadataout[31]\ : std_logic;
SIGNAL \core|core\ : std_logic;
SIGNAL \core|MASTERHWRITE\ : std_logic;
SIGNAL \core|SLAVEHREADYO\ : std_logic;
SIGNAL \core|core~SDRAMCLK\ : std_logic;
SIGNAL \core|core~SDRAMCLKN\ : std_logic;
SIGNAL \core|core~SDRAMCLKE\ : std_logic;
SIGNAL \core|core~SDRAMWEN\ : std_logic;
SIGNAL \core|core~SDRAMCASN\ : std_logic;
SIGNAL \core|core~SDRAMRASN\ : std_logic;
SIGNAL \core|core~SDRAMDQSOE\ : std_logic;
SIGNAL \core|core~EBIWEN\ : std_logic;
SIGNAL \core|core~EBIOEN\ : std_logic;
SIGNAL \core|core~EBICLK\ : std_logic;
SIGNAL \core|core~EBIDQOE\ : std_logic;
SIGNAL \core|core~UARTRION\ : std_logic;
SIGNAL \core|core~UARTDCDON\ : std_logic;
SIGNAL \core|core~UARTDCDRIOE\ : std_logic;
SIGNAL \core|core~UARTTXD\ : std_logic;
SIGNAL \core|core~UARTRTSN\ : std_logic;
SIGNAL \core|core~UARTDTRN\ : std_logic;
SIGNAL \core|MASTERHADDR[2]\ : std_logic;
SIGNAL \core|MASTERHADDR[3]\ : std_logic;
SIGNAL \core|MASTERHADDR[4]\ : std_logic;
SIGNAL \core|MASTERHADDR[5]\ : std_logic;
SIGNAL \core|MASTERHADDR[6]\ : std_logic;
SIGNAL \core|MASTERHADDR[7]\ : std_logic;
SIGNAL \core|MASTERHADDR[8]\ : std_logic;
SIGNAL \core|MASTERHADDR[9]\ : std_logic;
SIGNAL \core|MASTERHADDR[10]\ : std_logic;
SIGNAL \core|MASTERHADDR[12]\ : std_logic;
SIGNAL \core|MASTERHADDR[13]\ : std_logic;
SIGNAL \core|MASTERHADDR[14]\ : std_logic;
SIGNAL \core|MASTERHADDR[15]\ : std_logic;
SIGNAL \core|MASTERHADDR[18]\ : std_logic;
SIGNAL \core|MASTERHADDR[19]\ : std_logic;
SIGNAL \core|MASTERHTRANS[0]\ : std_logic;
SIGNAL \core|MASTERHTRANS[1]\ : std_logic;
SIGNAL \core|MASTERHSIZE[0]\ : std_logic;
SIGNAL \core|MASTERHSIZE[1]\ : std_logic;
SIGNAL \core|MASTERHBURST[0]\ : std_logic;
SIGNAL \core|MASTERHBURST[1]\ : std_logic;
SIGNAL \core|MASTERHBURST[2]\ : std_logic;
SIGNAL \core|MASTERHWDATA[0]\ : std_logic;
SIGNAL \core|MASTERHWDATA[1]\ : std_logic;
SIGNAL \core|MASTERHWDATA[2]\ : std_logic;
SIGNAL \core|MASTERHWDATA[3]\ : std_logic;
SIGNAL \core|MASTERHWDATA[4]\ : std_logic;
SIGNAL \core|MASTERHWDATA[5]\ : std_logic;
SIGNAL \core|MASTERHWDATA[6]\ : std_logic;
SIGNAL \core|MASTERHWDATA[7]\ : std_logic;
SIGNAL \core|MASTERHWDATA[8]\ : std_logic;
SIGNAL \core|MASTERHWDATA[9]\ : std_logic;
SIGNAL \core|MASTERHWDATA[10]\ : std_logic;
SIGNAL \core|MASTERHWDATA[11]\ : std_logic;
SIGNAL \core|MASTERHWDATA[12]\ : std_logic;
SIGNAL \core|MASTERHWDATA[13]\ : std_logic;
SIGNAL \core|MASTERHWDATA[14]\ : std_logic;
SIGNAL \core|MASTERHWDATA[15]\ : std_logic;
SIGNAL \core|MASTERHWDATA[16]\ : std_logic;
SIGNAL \core|MASTERHWDATA[17]\ : std_logic;
SIGNAL \core|MASTERHWDATA[18]\ : std_logic;
SIGNAL \core|MASTERHWDATA[19]\ : std_logic;
SIGNAL \core|MASTERHWDATA[20]\ : std_logic;
SIGNAL \core|MASTERHWDATA[21]\ : std_logic;
SIGNAL \core|MASTERHWDATA[22]\ : std_logic;
SIGNAL \core|MASTERHWDATA[23]\ : std_logic;
SIGNAL \core|MASTERHWDATA[24]\ : std_logic;
SIGNAL \core|MASTERHWDATA[25]\ : std_logic;
SIGNAL \core|MASTERHWDATA[26]\ : std_logic;
SIGNAL \core|MASTERHWDATA[27]\ : std_logic;
SIGNAL \core|MASTERHWDATA[28]\ : std_logic;
SIGNAL \core|MASTERHWDATA[29]\ : std_logic;
SIGNAL \core|MASTERHWDATA[30]\ : std_logic;
SIGNAL \core|MASTERHWDATA[31]\ : std_logic;
SIGNAL \core|core~SDRAMDQM0\ : std_logic;
SIGNAL \core|core~SDRAMDQM1\ : std_logic;
SIGNAL \core|core~SDRAMDQM2\ : std_logic;
SIGNAL \core|core~SDRAMDQM3\ : std_logic;
SIGNAL \core|core~SDRAMADDR0\ : std_logic;
SIGNAL \core|core~SDRAMADDR1\ : std_logic;
SIGNAL \core|core~SDRAMADDR2\ : std_logic;
SIGNAL \core|core~SDRAMADDR3\ : std_logic;
SIGNAL \core|core~SDRAMADDR4\ : std_logic;
SIGNAL \core|core~SDRAMADDR5\ : std_logic;
SIGNAL \core|core~SDRAMADDR6\ : std_logic;
SIGNAL \core|core~SDRAMADDR7\ : std_logic;
SIGNAL \core|core~SDRAMADDR8\ : std_logic;
SIGNAL \core|core~SDRAMADDR9\ : std_logic;
SIGNAL \core|core~SDRAMADDR10\ : std_logic;
SIGNAL \core|core~SDRAMADDR11\ : std_logic;
SIGNAL \core|core~SDRAMADDR12\ : std_logic;
SIGNAL \core|core~SDRAMADDR13\ : std_logic;
SIGNAL \core|core~SDRAMADDR14\ : std_logic;
SIGNAL \core|core~SDRAMCSN0\ : std_logic;
SIGNAL \core|core~SDRAMCSN1\ : std_logic;
SIGNAL \core|core~SDRAMDQOUT0\ : std_logic;
SIGNAL \core|core~SDRAMDQOUT1\ : std_logic;
SIGNAL \core|core~SDRAMDQOUT2\ : std_logic;
SIGNAL \core|core~SDRAMDQOUT3\ : std_logic;
SIGNAL \core|core~SDRAMDQOUT4\ : std_logic;
SIGNAL \core|core~SDRAMDQOUT5\ : std_logic;
SIGNAL \core|core~SDRAMDQOUT6\ : std_logic;
SIGNAL \core|core~SDRAMDQOUT7\ : std_logic;
SIGNAL \core|core~SDRAMDQOUT8\ : std_logic;
SIGNAL \core|core~SDRAMDQOUT9\ : std_logic;
SIGNAL \core|core~SDRAMDQOUT10\ : std_logic;
SIGNAL \core|core~SDRAMDQOUT11\ : std_logic;
SIGNAL \core|core~SDRAMDQOUT12\ : std_logic;
SIGNAL \core|core~SDRAMDQOUT13\ : std_logic;
SIGNAL \core|core~SDRAMDQOUT14\ : std_logic;
SIGNAL \core|core~SDRAMDQOUT15\ : std_logic;
SIGNAL \core|core~SDRAMDQOUT16\ : std_logic;
SIGNAL \core|core~SDRAMDQOUT17\ : std_logic;
SIGNAL \core|core~SDRAMDQOUT18\ : std_logic;
SIGNAL \core|core~SDRAMDQOUT19\ : std_logic;
SIGNAL \core|core~SDRAMDQOUT20\ : std_logic;
SIGNAL \core|core~SDRAMDQOUT21\ : std_logic;
SIGNAL \core|core~SDRAMDQOUT22\ : std_logic;
SIGNAL \core|core~SDRAMDQOUT23\ : std_logic;
SIGNAL \core|core~SDRAMDQOUT24\ : std_logic;
SIGNAL \core|core~SDRAMDQOUT25\ : std_logic;
SIGNAL \core|core~SDRAMDQOUT26\ : std_logic;
SIGNAL \core|core~SDRAMDQOUT27\ : std_logic;
SIGNAL \core|core~SDRAMDQOUT28\ : std_logic;
SIGNAL \core|core~SDRAMDQOUT29\ : std_logic;
SIGNAL \core|core~SDRAMDQOUT30\ : std_logic;
SIGNAL \core|core~SDRAMDQOUT31\ : std_logic;
SIGNAL \core|core~SDRAMDQSOUT0\ : std_logic;
SIGNAL \core|core~SDRAMDQSOUT1\ : std_logic;
SIGNAL \core|core~SDRAMDQSOUT2\ : std_logic;
SIGNAL \core|core~SDRAMDQSOUT3\ : std_logic;
SIGNAL \core|core~SDRAMDQOE0\ : std_logic;
SIGNAL \core|core~SDRAMDQOE1\ : std_logic;
SIGNAL \core|core~SDRAMDQOE2\ : std_logic;
SIGNAL \core|core~SDRAMDQOE3\ : std_logic;
SIGNAL \core|core~EBIDQOUT0\ : std_logic;
SIGNAL \core|core~EBIDQOUT1\ : std_logic;
SIGNAL \core|core~EBIDQOUT2\ : std_logic;
SIGNAL \core|core~EBIDQOUT3\ : std_logic;
SIGNAL \core|core~EBIDQOUT4\ : std_logic;
SIGNAL \core|core~EBIDQOUT5\ : std_logic;
SIGNAL \core|core~EBIDQOUT6\ : std_logic;
SIGNAL \core|core~EBIDQOUT7\ : std_logic;
SIGNAL \core|core~EBIDQOUT8\ : std_logic;
SIGNAL \core|core~EBIDQOUT9\ : std_logic;
SIGNAL \core|core~EBIDQOUT10\ : std_logic;
SIGNAL \core|core~EBIDQOUT11\ : std_logic;
SIGNAL \core|core~EBIDQOUT12\ : std_logic;
SIGNAL \core|core~EBIDQOUT13\ : std_logic;
SIGNAL \core|core~EBIDQOUT14\ : std_logic;
SIGNAL \core|core~EBIDQOUT15\ : std_logic;
SIGNAL \core|core~EBIBE0\ : std_logic;
SIGNAL \core|core~EBIBE1\ : std_logic;
SIGNAL \core|core~EBICSN0\ : std_logic;
SIGNAL \core|core~EBICSN1\ : std_logic;
SIGNAL \core|core~EBICSN2\ : std_logic;
SIGNAL \core|core~EBICSN3\ : std_logic;
SIGNAL \core|core~EBIADDR0\ : std_logic;
SIGNAL \core|core~EBIADDR1\ : std_logic;
SIGNAL \core|core~EBIADDR2\ : std_logic;
SIGNAL \core|core~EBIADDR3\ : std_logic;
SIGNAL \core|core~EBIADDR4\ : std_logic;
SIGNAL \core|core~EBIADDR5\ : std_logic;
SIGNAL \core|core~EBIADDR6\ : std_logic;
SIGNAL \core|core~EBIADDR7\ : std_logic;
SIGNAL \core|core~EBIADDR8\ : std_logic;
SIGNAL \core|core~EBIADDR9\ : std_logic;
SIGNAL \core|core~EBIADDR10\ : std_logic;
SIGNAL \core|core~EBIADDR11\ : std_logic;
SIGNAL \core|core~EBIADDR12\ : std_logic;
SIGNAL \core|core~EBIADDR13\ : std_logic;
SIGNAL \core|core~EBIADDR14\ : std_logic;
SIGNAL \core|core~EBIADDR15\ : std_logic;
SIGNAL \core|core~EBIADDR16\ : std_logic;
SIGNAL \core|core~EBIADDR17\ : std_logic;
SIGNAL \core|core~EBIADDR18\ : std_logic;
SIGNAL \core|core~EBIADDR19\ : std_logic;
SIGNAL \core|core~EBIADDR20\ : std_logic;
SIGNAL \core|core~EBIADDR21\ : std_logic;
SIGNAL \core|core~EBIADDR22\ : std_logic;
SIGNAL \core|core~EBIADDR23\ : std_logic;
SIGNAL \core|core~EBIADDR24\ : std_logic;
SIGNAL \DC_CTRAP|COMM_RESET~reg\ : std_logic;
SIGNAL \DC_Tx_chan_ap|inst23[7]\ : std_logic;
SIGNAL \DC_Tx_chan_ap|inst23[6]\ : std_logic;
SIGNAL \DC_Tx_chan_ap|inst23[0]\ : std_logic;
SIGNAL \inst_atwd_trigger|ATWDTrigger_sig~COMB\ : std_logic;
SIGNAL \inst_atwd_control|OutputEnable~reg0\ : std_logic;
SIGNAL \inst_atwd_control|CounterClock~reg0\ : std_logic;
SIGNAL \inst_atwd_readout|ShiftClock~reg0\ : std_logic;
SIGNAL \inst_atwd_control|RampSet~reg0\ : std_logic;
SIGNAL \inst_atwd_control|channel[1]\ : std_logic;
SIGNAL \inst_atwd_control|channel[0]\ : std_logic;
SIGNAL \inst_atwd_control|ReadWrite~reg0\ : std_logic;
SIGNAL \inst_atwd_control|AnalogReset~reg0\ : std_logic;
SIGNAL \inst_atwd_control|DigitalReset~reg0\ : std_logic;
SIGNAL \inst_atwd_control|DigitalSet~reg0\ : std_logic;
SIGNAL \inst_atwd_trigger|ATWDTrigger_sig~COMB_1\ : std_logic;
SIGNAL \inst_atwd_control|OutputEnable~reg0_1\ : std_logic;
SIGNAL \inst_atwd_control|CounterClock~reg0_1\ : std_logic;
SIGNAL \inst_atwd_readout|ShiftClock~reg0_1\ : std_logic;
SIGNAL \inst_atwd_control|RampSet~reg0_1\ : std_logic;
SIGNAL \inst_atwd_control|channel[1]~1\ : std_logic;
SIGNAL \inst_atwd_control|channel[0]~1\ : std_logic;
SIGNAL \inst_atwd_control|ReadWrite~reg0_1\ : std_logic;
SIGNAL \inst_atwd_control|AnalogReset~reg0_1\ : std_logic;
SIGNAL \inst_atwd_control|DigitalReset~reg0_1\ : std_logic;
SIGNAL \inst_atwd_control|DigitalSet~reg0_1\ : std_logic;
SIGNAL \inst_hit_counter|MultiSPE_nl~reg0\ : std_logic;
SIGNAL \inst_hit_counter|OneSPE_nl~reg0\ : std_logic;
SIGNAL \inst_fe_testpulse|FE_TEST_PULSE~reg0\ : std_logic;
SIGNAL \inst_r2r|R2BUS[6]~reg0\ : std_logic;
SIGNAL \inst_r2r|R2BUS[5]~reg0\ : std_logic;
SIGNAL \inst_r2r|R2BUS[4]~reg0\ : std_logic;
SIGNAL \inst_r2r|R2BUS[3]~reg0\ : std_logic;
SIGNAL \inst_r2r|R2BUS[2]~reg0\ : std_logic;
SIGNAL \inst_r2r|R2BUS[1]~reg0\ : std_logic;
SIGNAL \inst_r2r|R2BUS[0]~reg0\ : std_logic;
SIGNAL \inst_single_led|SingleLED_TRIGGER~reg0\ : std_logic;
SIGNAL \flasher_board_inst|FL_Trigger~reg0\ : std_logic;
SIGNAL \slaveregister_inst|command_2_local[26]\ : std_logic;
SIGNAL \DCOM_tcal_timer|pulse_sent~reg\ : std_logic;
SIGNAL \inst2|pulse_rcvd~reg\ : std_logic;
SIGNAL \inst4|tcal_rcvd~reg\ : std_logic;
SIGNAL \DC_CTRAP|buf_res~reg\ : std_logic;
SIGNAL \inst10|ctrl_error~reg\ : std_logic;
SIGNAL \inst4|idle_rcvd~reg\ : std_logic;
SIGNAL \inst4|drreq_rcvd~reg\ : std_logic;
SIGNAL \slaveregister_inst|com_ctrl_local[2]\ : std_logic;
SIGNAL \inst10|rx_we~reg\ : std_logic;
SIGNAL \DC_Rx_chan_ap|inst46[0]\ : std_logic;
SIGNAL \DC_Rx_chan_ap|inst46[1]\ : std_logic;
SIGNAL \DC_Rx_chan_ap|inst46[2]\ : std_logic;
SIGNAL \DC_Rx_chan_ap|inst46[3]\ : std_logic;
SIGNAL \DC_Rx_chan_ap|inst46[4]\ : std_logic;
SIGNAL \DC_Rx_chan_ap|inst46[5]\ : std_logic;
SIGNAL \DC_Rx_chan_ap|inst46[6]\ : std_logic;
SIGNAL \DC_Rx_chan_ap|inst46[7]\ : std_logic;
SIGNAL \DC_Rx_chan_ap|inst43[0]\ : std_logic;
SIGNAL \DC_Rx_chan_ap|inst43[1]\ : std_logic;
SIGNAL \DC_Rx_chan_ap|inst43[2]\ : std_logic;
SIGNAL \DC_Rx_chan_ap|inst43[3]\ : std_logic;
SIGNAL \DC_Rx_chan_ap|inst43[4]\ : std_logic;
SIGNAL \DC_Rx_chan_ap|inst43[5]\ : std_logic;
SIGNAL \DC_Rx_chan_ap|inst43[6]\ : std_logic;
SIGNAL \DC_Rx_chan_ap|inst43[7]\ : std_logic;
SIGNAL \DC_Rx_chan_ap|inst41[0]\ : std_logic;
SIGNAL \DC_Rx_chan_ap|inst41[1]\ : std_logic;
SIGNAL \DC_Rx_chan_ap|inst41[2]\ : std_logic;
SIGNAL \DC_Rx_chan_ap|inst41[3]\ : std_logic;
SIGNAL \DC_Rx_chan_ap|inst41[4]\ : std_logic;
SIGNAL \DC_Rx_chan_ap|inst41[5]\ : std_logic;
SIGNAL \DC_Rx_chan_ap|inst41[6]\ : std_logic;
SIGNAL \DC_Rx_chan_ap|inst41[7]\ : std_logic;
SIGNAL \DC_Rx_chan_ap|inst38[0]\ : std_logic;
SIGNAL \DC_Rx_chan_ap|inst38[1]\ : std_logic;
SIGNAL \DC_Rx_chan_ap|inst38[2]\ : std_logic;
SIGNAL \DC_Rx_chan_ap|inst38[3]\ : std_logic;
SIGNAL \DC_Rx_chan_ap|inst38[4]\ : std_logic;
SIGNAL \DC_Rx_chan_ap|inst38[5]\ : std_logic;
SIGNAL \DC_Rx_chan_ap|inst38[6]\ : std_logic;
SIGNAL \DC_Rx_chan_ap|inst38[7]\ : std_logic;
SIGNAL \ahb_slave_inst|masterhready~reg0\ : std_logic;
SIGNAL \inst_ahb_master|slavehwdata[0]~reg0\ : std_logic;
SIGNAL \inst_ahb_master|slavehwdata[1]~reg0\ : std_logic;
SIGNAL \inst_ahb_master|slavehwdata[2]~reg0\ : std_logic;
SIGNAL \inst_ahb_master|slavehwdata[3]~reg0\ : std_logic;
SIGNAL \inst_ahb_master|slavehwdata[4]~reg0\ : std_logic;
SIGNAL \inst_ahb_master|slavehwdata[5]~reg0\ : std_logic;
SIGNAL \inst_ahb_master|slavehwdata[6]~reg0\ : std_logic;
SIGNAL \inst_ahb_master|slavehwdata[7]~reg0\ : std_logic;
SIGNAL \inst_ahb_master|slavehwdata[8]~reg0\ : std_logic;
SIGNAL \inst_ahb_master|slavehwdata[9]~reg0\ : std_logic;
SIGNAL \inst_ahb_master|slavehwdata[10]~reg0\ : std_logic;
SIGNAL \inst_ahb_master|slavehwdata[11]~reg0\ : std_logic;
SIGNAL \inst_ahb_master|slavehwdata[12]~reg0\ : std_logic;
SIGNAL \inst_ahb_master|slavehwdata[13]~reg0\ : std_logic;
SIGNAL \inst_ahb_master|slavehwdata[14]~reg0\ : std_logic;
SIGNAL \inst_ahb_master|slavehwdata[15]~reg0\ : std_logic;
SIGNAL \inst_ahb_master|slavehwdata[16]~reg0\ : std_logic;
SIGNAL \inst_ahb_master|slavehwdata[17]~reg0\ : std_logic;
SIGNAL \inst_ahb_master|slavehwdata[18]~reg0\ : std_logic;
SIGNAL \inst_ahb_master|slavehwdata[19]~reg0\ : std_logic;
SIGNAL \inst_ahb_master|slavehwdata[20]~reg0\ : std_logic;
SIGNAL \inst_ahb_master|slavehwdata[21]~reg0\ : std_logic;
SIGNAL \inst_ahb_master|slavehwdata[22]~reg0\ : std_logic;
SIGNAL \inst_ahb_master|slavehwdata[23]~reg0\ : std_logic;
SIGNAL \inst_ahb_master|slavehwdata[24]~reg0\ : std_logic;
SIGNAL \inst_ahb_master|slavehwdata[25]~reg0\ : std_logic;
SIGNAL \inst_ahb_master|slavehwdata[26]~reg0\ : std_logic;
SIGNAL \inst_ahb_master|slavehwdata[27]~reg0\ : std_logic;
SIGNAL \inst_ahb_master|slavehwdata[28]~reg0\ : std_logic;
SIGNAL \inst_ahb_master|slavehwdata[29]~reg0\ : std_logic;
SIGNAL \inst_ahb_master|slavehwdata[30]~reg0\ : std_logic;
SIGNAL \inst_ahb_master|slavehwdata[31]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|reg_rdata[0]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|reg_rdata[1]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|reg_rdata[2]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|reg_rdata[3]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|reg_rdata[4]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|reg_rdata[5]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|reg_rdata[6]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|reg_rdata[7]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|reg_rdata[8]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|reg_rdata[9]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|reg_rdata[10]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|reg_rdata[11]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|reg_rdata[12]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|reg_rdata[13]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|reg_rdata[14]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|reg_rdata[15]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|reg_rdata[16]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|reg_rdata[17]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|reg_rdata[18]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|reg_rdata[19]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|reg_rdata[20]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|reg_rdata[21]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|reg_rdata[22]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|reg_rdata[23]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|reg_rdata[24]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|reg_rdata[25]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|reg_rdata[26]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|reg_rdata[27]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|reg_rdata[28]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|reg_rdata[29]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|reg_rdata[30]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|reg_rdata[31]~reg0\ : std_logic;
SIGNAL \inst_ROC|RST~reg0\ : std_logic;
SIGNAL \inst_atwd_control|state~26\ : std_logic;
SIGNAL \inst_atwd_control|state~20\ : std_logic;
SIGNAL \inst_fe_r2r|FE_PULSER_P[3]~reg0\ : std_logic;
SIGNAL \inst_fe_r2r|i113\ : std_logic;
SIGNAL \inst_fe_r2r|FE_PULSER_P[2]~reg0\ : std_logic;
SIGNAL \inst_fe_r2r|FE_PULSER_P[1]~reg0\ : std_logic;
SIGNAL \inst_fe_r2r|FE_PULSER_P[0]~reg0\ : std_logic;
SIGNAL \inst_fe_r2r|FE_PULSER_N[3]~reg0\ : std_logic;
SIGNAL \inst_fe_r2r|FE_PULSER_N[2]~reg0\ : std_logic;
SIGNAL \inst_fe_r2r|FE_PULSER_N[1]~reg0\ : std_logic;
SIGNAL \inst_fe_r2r|FE_PULSER_N[0]~reg0\ : std_logic;
SIGNAL \inst_coinc|COINCIDENCE_OUT_DOWN~reg0\ : std_logic;
SIGNAL \inst_coinc|i563\ : std_logic;
SIGNAL \slaveregister_inst|command_2_local[12]\ : std_logic;
SIGNAL \slaveregister_inst|command_2_local[13]\ : std_logic;
SIGNAL \inst_coinc|COINCIDENCE_OUT_UP~reg0\ : std_logic;
SIGNAL \inst_coinc|i565\ : std_logic;
SIGNAL \slaveregister_inst|command_2_local[14]\ : std_logic;
SIGNAL \slaveregister_inst|command_2_local[15]\ : std_logic;
SIGNAL \ahb_slave_inst|reg_address[3]~reg0\ : std_logic;
SIGNAL \ahb_slave_inst|reg_address[4]~reg0\ : std_logic;
SIGNAL \ahb_slave_inst|reg_address[5]~reg0\ : std_logic;
SIGNAL \ahb_slave_inst|reg_address[6]~reg0\ : std_logic;
SIGNAL \ahb_slave_inst|reg_address[2]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|command_2_local[28]\ : std_logic;
SIGNAL \slaveregister_inst|command_2_local[31]\ : std_logic;
SIGNAL \slaveregister_inst|command_2_local[29]\ : std_logic;
SIGNAL \slaveregister_inst|command_2_local[30]\ : std_logic;
SIGNAL \inst4|comres_rcvd~reg\ : std_logic;
SIGNAL \inst_master_data_source|wdata[0]~reg0\ : std_logic;
SIGNAL \inst_master_data_source|wdata[1]~reg0\ : std_logic;
SIGNAL \inst_master_data_source|wdata[2]~reg0\ : std_logic;
SIGNAL \inst_master_data_source|wdata[3]~reg0\ : std_logic;
SIGNAL \inst_master_data_source|wdata[4]~reg0\ : std_logic;
SIGNAL \inst_master_data_source|wdata[5]~reg0\ : std_logic;
SIGNAL \inst_master_data_source|wdata[6]~reg0\ : std_logic;
SIGNAL \inst_master_data_source|wdata[7]~reg0\ : std_logic;
SIGNAL \inst_master_data_source|wdata[8]~reg0\ : std_logic;
SIGNAL \inst_master_data_source|wdata[9]~reg0\ : std_logic;
SIGNAL \inst_master_data_source|wdata[10]~reg0\ : std_logic;
SIGNAL \inst_master_data_source|wdata[11]~reg0\ : std_logic;
SIGNAL \inst_master_data_source|wdata[12]~reg0\ : std_logic;
SIGNAL \inst_master_data_source|wdata[13]~reg0\ : std_logic;
SIGNAL \inst_master_data_source|wdata[14]~reg0\ : std_logic;
SIGNAL \inst_master_data_source|wdata[15]~reg0\ : std_logic;
SIGNAL \inst_master_data_source|wdata[16]~reg0\ : std_logic;
SIGNAL \inst_master_data_source|wdata[17]~reg0\ : std_logic;
SIGNAL \inst_master_data_source|wdata[18]~reg0\ : std_logic;
SIGNAL \inst_master_data_source|wdata[19]~reg0\ : std_logic;
SIGNAL \inst_master_data_source|wdata[20]~reg0\ : std_logic;
SIGNAL \inst_master_data_source|wdata[21]~reg0\ : std_logic;
SIGNAL \inst_master_data_source|wdata[22]~reg0\ : std_logic;
SIGNAL \inst_master_data_source|wdata[23]~reg0\ : std_logic;
SIGNAL \inst_master_data_source|wdata[24]~reg0\ : std_logic;
SIGNAL \inst_master_data_source|wdata[25]~reg0\ : std_logic;
SIGNAL \inst_master_data_source|wdata[26]~reg0\ : std_logic;
SIGNAL \inst_master_data_source|wdata[27]~reg0\ : std_logic;
SIGNAL \inst_master_data_source|wdata[28]~reg0\ : std_logic;
SIGNAL \inst_master_data_source|wdata[29]~reg0\ : std_logic;
SIGNAL \inst_master_data_source|wdata[30]~reg0\ : std_logic;
SIGNAL \inst_master_data_source|wdata[31]~reg0\ : std_logic;
SIGNAL \ahb_slave_inst|reg_address[12]~reg0\ : std_logic;
SIGNAL \ahb_slave_inst|reg_address[13]~reg0\ : std_logic;
SIGNAL \ahb_slave_inst|reg_address[14]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|i3329~33\ : std_logic;
SIGNAL \sram|q[0]\ : std_logic;
SIGNAL \ahb_slave_inst|reg_address[18]~reg0\ : std_logic;
SIGNAL \ahb_slave_inst|reg_address[19]~reg0\ : std_logic;
SIGNAL \sram|q[0]~1\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[32]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|rx_dpr_radr_local[0]\ : std_logic;
SIGNAL \slaveregister_inst|command_2_local[0]\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[0]~reg0\ : std_logic;
SIGNAL \inst_hit_counter|multiSPEcnt[0]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[0]~reg0\ : std_logic;
SIGNAL \inst_hit_counter|oneSPEcnt[0]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[32]~reg0\ : std_logic;
SIGNAL \inst_hit_counter_ff|multiSPEcnt[0]~reg0\ : std_logic;
SIGNAL \inst_hit_counter_ff|oneSPEcnt[0]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|command_4_local[0]\ : std_logic;
SIGNAL \inst_atwd_trigger|done~reg0\ : std_logic;
SIGNAL \slaveregister_inst|command_0_local[0]\ : std_logic;
SIGNAL \inst6|op_6~350\ : std_logic;
SIGNAL \slaveregister_inst|tx_dpr_wadr_local[0]\ : std_logic;
SIGNAL \DC_Tx_chan_ap|inst16[0]\ : std_logic;
SIGNAL \sram|q[0]~2\ : std_logic;
SIGNAL \sram|q[1]\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[33]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|rx_dpr_radr_local[1]\ : std_logic;
SIGNAL \slaveregister_inst|command_2_local[1]\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[1]~reg0\ : std_logic;
SIGNAL \inst_hit_counter_ff|multiSPEcnt[1]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[1]~reg0\ : std_logic;
SIGNAL \inst_hit_counter|oneSPEcnt[1]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|tx_dpr_wadr_local[1]\ : std_logic;
SIGNAL \inst_hit_counter_ff|oneSPEcnt[1]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|command_0_local[1]\ : std_logic;
SIGNAL \slaveregister_inst|command_4_local[1]\ : std_logic;
SIGNAL \DC_Tx_chan_ap|inst50\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[33]~reg0\ : std_logic;
SIGNAL \inst_hit_counter|multiSPEcnt[1]~reg0\ : std_logic;
SIGNAL \DC_Tx_chan_ap|inst16[1]\ : std_logic;
SIGNAL \sram|q[1]~1\ : std_logic;
SIGNAL \sram|q[1]~2\ : std_logic;
SIGNAL \sram|q[2]\ : std_logic;
SIGNAL \sram|q[2]~1\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[34]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|rx_dpr_radr_local[2]\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[2]~reg0\ : std_logic;
SIGNAL \inst_hit_counter_ff|multiSPEcnt[2]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[2]~reg0\ : std_logic;
SIGNAL \inst_hit_counter|oneSPEcnt[2]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|tx_dpr_wadr_local[2]\ : std_logic;
SIGNAL \inst_hit_counter_ff|oneSPEcnt[2]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|command_0_local[2]\ : std_logic;
SIGNAL \slaveregister_inst|command_4_local[2]\ : std_logic;
SIGNAL \DC_CTRAP|reboot_gnt~reg\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[34]~reg0\ : std_logic;
SIGNAL \inst_hit_counter|multiSPEcnt[2]~reg0\ : std_logic;
SIGNAL \DC_Tx_chan_ap|inst16[2]\ : std_logic;
SIGNAL \sram|q[2]~2\ : std_logic;
SIGNAL \sram|q[3]\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[35]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|rx_dpr_radr_local[3]\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[3]~reg0\ : std_logic;
SIGNAL \inst_hit_counter_ff|multiSPEcnt[3]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[3]~reg0\ : std_logic;
SIGNAL \inst_hit_counter|oneSPEcnt[3]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|tx_dpr_wadr_local[3]\ : std_logic;
SIGNAL \inst_hit_counter_ff|oneSPEcnt[3]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|command_0_local[3]\ : std_logic;
SIGNAL \slaveregister_inst|command_4_local[3]\ : std_logic;
SIGNAL \lpm_or_component|last_node[0]~15\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[35]~reg0\ : std_logic;
SIGNAL \inst_hit_counter|multiSPEcnt[3]~reg0\ : std_logic;
SIGNAL \DC_Tx_chan_ap|inst16[3]\ : std_logic;
SIGNAL \sram|q[3]~1\ : std_logic;
SIGNAL \sram|q[3]~2\ : std_logic;
SIGNAL \sram|q[4]\ : std_logic;
SIGNAL \sram|q[4]~1\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[36]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|rx_dpr_radr_local[4]\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[4]~reg0\ : std_logic;
SIGNAL \inst_hit_counter_ff|multiSPEcnt[4]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[4]~reg0\ : std_logic;
SIGNAL \inst_hit_counter|oneSPEcnt[4]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|tx_dpr_wadr_local[4]\ : std_logic;
SIGNAL \inst_hit_counter_ff|oneSPEcnt[4]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[36]~reg0\ : std_logic;
SIGNAL \inst_hit_counter|multiSPEcnt[4]~reg0\ : std_logic;
SIGNAL \DC_Tx_chan_ap|inst16[4]\ : std_logic;
SIGNAL \sram|q[4]~2\ : std_logic;
SIGNAL \sram|q[5]\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[37]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|rx_dpr_radr_local[5]\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[5]~reg0\ : std_logic;
SIGNAL \inst_hit_counter_ff|multiSPEcnt[5]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[5]~reg0\ : std_logic;
SIGNAL \inst_hit_counter|oneSPEcnt[5]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|tx_dpr_wadr_local[5]\ : std_logic;
SIGNAL \inst_hit_counter_ff|oneSPEcnt[5]~reg0\ : std_logic;
SIGNAL \inst24|op_6~324\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[37]~reg0\ : std_logic;
SIGNAL \inst_hit_counter|multiSPEcnt[5]~reg0\ : std_logic;
SIGNAL \DC_Tx_chan_ap|inst16[5]\ : std_logic;
SIGNAL \sram|q[5]~1\ : std_logic;
SIGNAL \sram|q[5]~2\ : std_logic;
SIGNAL \sram|q[6]\ : std_logic;
SIGNAL \sram|q[6]~1\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[38]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|rx_dpr_radr_local[6]\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[6]~reg0\ : std_logic;
SIGNAL \inst_hit_counter_ff|multiSPEcnt[6]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[6]~reg0\ : std_logic;
SIGNAL \inst_hit_counter|oneSPEcnt[6]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|tx_dpr_wadr_local[6]\ : std_logic;
SIGNAL \inst_hit_counter_ff|oneSPEcnt[6]~reg0\ : std_logic;
SIGNAL \DC_CTRAP|com_avail~reg\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[38]~reg0\ : std_logic;
SIGNAL \inst_hit_counter|multiSPEcnt[6]~reg0\ : std_logic;
SIGNAL \DC_Tx_chan_ap|inst16[6]\ : std_logic;
SIGNAL \sram|q[6]~2\ : std_logic;
SIGNAL \sram|q[7]\ : std_logic;
SIGNAL \slaveregister_inst|rx_dpr_radr_local[7]\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[39]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[7]~reg0\ : std_logic;
SIGNAL \inst_hit_counter_ff|multiSPEcnt[7]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[7]~reg0\ : std_logic;
SIGNAL \inst_hit_counter|oneSPEcnt[7]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|tx_dpr_wadr_local[7]\ : std_logic;
SIGNAL \inst_hit_counter_ff|oneSPEcnt[7]~reg0\ : std_logic;
SIGNAL \DC_Tx_chan_ap|inst16[7]\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[39]~reg0\ : std_logic;
SIGNAL \inst_hit_counter|multiSPEcnt[7]~reg0\ : std_logic;
SIGNAL \sram|q[7]~1\ : std_logic;
SIGNAL \sram|q[7]~2\ : std_logic;
SIGNAL \sram|q[8]\ : std_logic;
SIGNAL \sram|q[8]~1\ : std_logic;
SIGNAL \inst_coinc|FF_down_a\ : std_logic;
SIGNAL \slaveregister_inst|command_2_local[8]\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[40]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[8]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|rx_dpr_radr_local[8]\ : std_logic;
SIGNAL \inst_hit_counter|multiSPEcnt[8]~reg0\ : std_logic;
SIGNAL \inst_atwd_trigger|done~reg0_1\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[40]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|command_4_local[8]\ : std_logic;
SIGNAL \inst_hit_counter_ff|oneSPEcnt[8]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|tx_dpr_wadr_local[8]\ : std_logic;
SIGNAL \inst_hit_counter|oneSPEcnt[8]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|command_0_local[8]\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[8]~reg0\ : std_logic;
SIGNAL \DC_Tx_chan_ap|inst16[8]\ : std_logic;
SIGNAL \inst_hit_counter_ff|multiSPEcnt[8]~reg0\ : std_logic;
SIGNAL \sram|q[8]~2\ : std_logic;
SIGNAL \sram|q[9]\ : std_logic;
SIGNAL \inst_coinc|FF_down_abar\ : std_logic;
SIGNAL \slaveregister_inst|command_2_local[9]\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[41]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[9]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|rx_dpr_radr_local[9]\ : std_logic;
SIGNAL \inst_hit_counter_ff|multiSPEcnt[9]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[9]~reg0\ : std_logic;
SIGNAL \inst_hit_counter|oneSPEcnt[9]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|tx_dpr_wadr_local[9]\ : std_logic;
SIGNAL \inst_hit_counter_ff|oneSPEcnt[9]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|command_0_local[9]\ : std_logic;
SIGNAL \DC_Tx_chan_ap|inst16[9]\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[41]~reg0\ : std_logic;
SIGNAL \inst_hit_counter|multiSPEcnt[9]~reg0\ : std_logic;
SIGNAL \sram|q[9]~1\ : std_logic;
SIGNAL \sram|q[9]~2\ : std_logic;
SIGNAL \sram|q[10]\ : std_logic;
SIGNAL \sram|q[10]~1\ : std_logic;
SIGNAL \inst_coinc|FF_down_b\ : std_logic;
SIGNAL \slaveregister_inst|command_2_local[10]\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[42]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[10]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|rx_dpr_radr_local[10]\ : std_logic;
SIGNAL \inst_hit_counter_ff|multiSPEcnt[10]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[10]~reg0\ : std_logic;
SIGNAL \inst_hit_counter|oneSPEcnt[10]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|tx_dpr_wadr_local[10]\ : std_logic;
SIGNAL \inst_hit_counter_ff|oneSPEcnt[10]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|command_0_local[10]\ : std_logic;
SIGNAL \DC_Tx_chan_ap|inst16[10]\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[42]~reg0\ : std_logic;
SIGNAL \inst_hit_counter|multiSPEcnt[10]~reg0\ : std_logic;
SIGNAL \sram|q[10]~2\ : std_logic;
SIGNAL \sram|q[11]\ : std_logic;
SIGNAL \inst_coinc|FF_down_bbar\ : std_logic;
SIGNAL \slaveregister_inst|command_2_local[11]\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[43]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[11]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|rx_dpr_radr_local[11]\ : std_logic;
SIGNAL \inst_hit_counter_ff|multiSPEcnt[11]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[11]~reg0\ : std_logic;
SIGNAL \inst_hit_counter|oneSPEcnt[11]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|tx_dpr_wadr_local[11]\ : std_logic;
SIGNAL \inst_hit_counter_ff|oneSPEcnt[11]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|command_0_local[11]\ : std_logic;
SIGNAL \DC_Tx_chan_ap|inst16[11]\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[43]~reg0\ : std_logic;
SIGNAL \inst_hit_counter|multiSPEcnt[11]~reg0\ : std_logic;
SIGNAL \sram|q[11]~1\ : std_logic;
SIGNAL \sram|q[11]~2\ : std_logic;
SIGNAL \sram|q[12]\ : std_logic;
SIGNAL \sram|q[12]~1\ : std_logic;
SIGNAL \inst_coinc|FF_up_a\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[44]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[12]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|rx_dpr_radr_local[12]\ : std_logic;
SIGNAL \inst_hit_counter_ff|multiSPEcnt[12]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[12]~reg0\ : std_logic;
SIGNAL \inst_hit_counter|oneSPEcnt[12]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|tx_dpr_wadr_local[12]\ : std_logic;
SIGNAL \inst_hit_counter_ff|oneSPEcnt[12]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|command_4_local[12]\ : std_logic;
SIGNAL \DC_Tx_chan_ap|inst16[12]\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[44]~reg0\ : std_logic;
SIGNAL \inst_hit_counter|multiSPEcnt[12]~reg0\ : std_logic;
SIGNAL \sram|q[12]~2\ : std_logic;
SIGNAL \sram|q[13]\ : std_logic;
SIGNAL \inst_coinc|FF_up_abar\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[45]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[13]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|rx_dpr_radr_local[13]\ : std_logic;
SIGNAL \inst_hit_counter_ff|multiSPEcnt[13]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[13]~reg0\ : std_logic;
SIGNAL \inst_hit_counter|oneSPEcnt[13]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|tx_dpr_wadr_local[13]\ : std_logic;
SIGNAL \inst_hit_counter_ff|oneSPEcnt[13]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|command_4_local[13]\ : std_logic;
SIGNAL \DC_Tx_chan_ap|inst16[13]\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[45]~reg0\ : std_logic;
SIGNAL \inst_hit_counter|multiSPEcnt[13]~reg0\ : std_logic;
SIGNAL \sram|q[13]~1\ : std_logic;
SIGNAL \sram|q[13]~2\ : std_logic;
SIGNAL \sram|q[14]\ : std_logic;
SIGNAL \sram|q[14]~1\ : std_logic;
SIGNAL \inst_coinc|FF_up_b\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[46]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[14]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|rx_dpr_radr_local[14]\ : std_logic;
SIGNAL \inst_hit_counter_ff|multiSPEcnt[14]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[14]~reg0\ : std_logic;
SIGNAL \inst_hit_counter|oneSPEcnt[14]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|tx_dpr_wadr_local[14]\ : std_logic;
SIGNAL \inst_hit_counter_ff|oneSPEcnt[14]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|command_4_local[14]\ : std_logic;
SIGNAL \DC_Tx_chan_ap|inst16[14]\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[46]~reg0\ : std_logic;
SIGNAL \inst_hit_counter|multiSPEcnt[14]~reg0\ : std_logic;
SIGNAL \sram|q[14]~2\ : std_logic;
SIGNAL \sram|q[15]\ : std_logic;
SIGNAL \inst_coinc|FF_up_bbar\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[47]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[15]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|rx_dpr_radr_local[15]\ : std_logic;
SIGNAL \inst_hit_counter_ff|multiSPEcnt[15]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[15]~reg0\ : std_logic;
SIGNAL \inst_hit_counter|oneSPEcnt[15]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|tx_dpr_wadr_local[15]\ : std_logic;
SIGNAL \inst_hit_counter_ff|oneSPEcnt[15]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|command_0_local[15]\ : std_logic;
SIGNAL \slaveregister_inst|command_4_local[15]\ : std_logic;
SIGNAL \DC_Tx_chan_ap|inst16[15]\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[47]~reg0\ : std_logic;
SIGNAL \inst_hit_counter|multiSPEcnt[15]~reg0\ : std_logic;
SIGNAL \sram|q[15]~1\ : std_logic;
SIGNAL \sram|q[15]~2\ : std_logic;
SIGNAL \slaveregister_inst|i~14641\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[16]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|command_1_local[16]\ : std_logic;
SIGNAL \slaveregister_inst|command_0_local[16]\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[16]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[17]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|command_1_local[17]\ : std_logic;
SIGNAL \slaveregister_inst|command_0_local[17]\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[17]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[18]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|command_1_local[18]\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[18]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[19]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|command_1_local[19]\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[19]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[20]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[20]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[21]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[21]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[22]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[22]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[23]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[23]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[24]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|command_2_local[24]\ : std_logic;
SIGNAL \slaveregister_inst|command_0_local[24]\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[24]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[25]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[25]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[26]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|command_0_local[26]\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[26]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[27]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[27]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[28]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|command_0_local[28]\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[28]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[29]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[29]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[30]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|command_0_local[30]\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[30]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd1_timestamp[31]~reg0\ : std_logic;
SIGNAL \inst_atwd_timestamp|atwd0_timestamp[31]~reg0\ : std_logic;
SIGNAL \ahb_slave_inst|masterhresp[0]~reg0\ : std_logic;
SIGNAL \LED2ATWDdelay_inst|i~8\ : std_logic;
SIGNAL \inst_atwd_ping_pong|atwd0_pong_enable\ : std_logic;
SIGNAL \inst_atwd_ping_pong|i122~19\ : std_logic;
SIGNAL \inst_atwd_trigger|TriggerComplete_in_sync\ : std_logic;
SIGNAL \inst_atwd_ping_pong|atwd1_pong_enable\ : std_logic;
SIGNAL \inst_atwd_ping_pong|i124~19\ : std_logic;
SIGNAL \inst_atwd_trigger|TriggerComplete_in_sync~1\ : std_logic;
SIGNAL \ahb_slave_inst|reg_enable~reg0\ : std_logic;
SIGNAL \ahb_slave_inst|reg_write~reg0\ : std_logic;
SIGNAL \ahb_slave_inst|reg_address[15]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|i3329~34\ : std_logic;
SIGNAL \ahb_slave_inst|reg_address[7]~reg0\ : std_logic;
SIGNAL \ahb_slave_inst|reg_address[8]~reg0\ : std_logic;
SIGNAL \ahb_slave_inst|reg_address[9]~reg0\ : std_logic;
SIGNAL \ahb_slave_inst|reg_address[10]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|i3335~16\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[48]~231\ : std_logic;
SIGNAL \slaveregister_inst|i3335~17\ : std_logic;
SIGNAL \slaveregister_inst|tx_pack_rdy~reg0\ : std_logic;
SIGNAL \slaveregister_inst|i3342~15\ : std_logic;
SIGNAL \slaveregister_inst|rx_dpr_radr_stb~reg0\ : std_logic;
SIGNAL \inst_flash_ADC|done~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[48]~reg0\ : std_logic;
SIGNAL \inst_single_led|LEDdelay[0]\ : std_logic;
SIGNAL \flasher_board_inst|LEDdelay[0]\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[0]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[1]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[2]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[3]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[4]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[5]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[6]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[7]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[8]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[9]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[10]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[11]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[12]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[13]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[14]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[15]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[16]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[17]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[18]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[19]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[20]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[21]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[22]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[23]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[24]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[25]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[26]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[27]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[28]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[29]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[30]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[31]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[32]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[33]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[34]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[35]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[36]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[37]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[38]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[39]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[40]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[41]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[42]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[43]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[44]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[45]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[46]~reg0\ : std_logic;
SIGNAL \slaveregister_inst|dom_id[47]~reg0\ : std_logic;
SIGNAL \wysi_counter|counter_cell[0]~0\ : std_logic;
SIGNAL \~GND\ : std_logic;
SIGNAL \~VCC\ : std_logic;
SIGNAL \COINC_DOWN_A~combout\ : std_logic;
SIGNAL \COINC_DOWN_ABAR~combout\ : std_logic;
SIGNAL \COINC_DOWN_B~combout\ : std_logic;
SIGNAL \COINC_DOWN_BBAR~combout\ : std_logic;
SIGNAL \COINC_UP_A~combout\ : std_logic;
SIGNAL \COINC_UP_ABAR~combout\ : std_logic;
SIGNAL \COINC_UP_B~combout\ : std_logic;
SIGNAL \COINC_UP_BBAR~combout\ : std_logic;
SIGNAL \FL_ATTN~combout\ : std_logic;
SIGNAL \FL_TDO~combout\ : std_logic;
SIGNAL \CLK2p~combout\ : std_logic;
SIGNAL \OneSPE~combout\ : std_logic;
SIGNAL \COM_AD_D[9]~combout\ : std_logic;
SIGNAL \A_nB~combout\ : std_logic;
SIGNAL \FLASH_AD_D[0]~combout\ : std_logic;
SIGNAL \FLASH_AD_D[1]~combout\ : std_logic;
SIGNAL \FLASH_AD_D[2]~combout\ : std_logic;
SIGNAL \FLASH_AD_D[3]~combout\ : std_logic;
SIGNAL \FLASH_AD_D[4]~combout\ : std_logic;
SIGNAL \FLASH_AD_D[5]~combout\ : std_logic;
SIGNAL \FLASH_AD_D[6]~combout\ : std_logic;
SIGNAL \FLASH_AD_D[7]~combout\ : std_logic;
SIGNAL \FLASH_AD_D[8]~combout\ : std_logic;
SIGNAL \FLASH_AD_D[9]~combout\ : std_logic;
SIGNAL \FLASH_NCO~combout\ : std_logic;
SIGNAL \CLK1p~combout\ : std_logic;
SIGNAL \MultiSPE~combout\ : std_logic;
SIGNAL \COM_AD_D[8]~combout\ : std_logic;
SIGNAL \ATWD0_D[0]~combout\ : std_logic;
SIGNAL \ATWD0_D[3]~combout\ : std_logic;
SIGNAL \ATWD0_D[2]~combout\ : std_logic;
SIGNAL \ATWD0_D[1]~combout\ : std_logic;
SIGNAL \ATWD0_D[5]~combout\ : std_logic;
SIGNAL \ATWD0_D[4]~combout\ : std_logic;
SIGNAL \ATWD0_D[8]~combout\ : std_logic;
SIGNAL \ATWD0_D[9]~combout\ : std_logic;
SIGNAL \ATWD0_D[7]~combout\ : std_logic;
SIGNAL \ATWD0_D[6]~combout\ : std_logic;
SIGNAL \ATWD1_D[0]~combout\ : std_logic;
SIGNAL \ATWD1_D[3]~combout\ : std_logic;
SIGNAL \ATWD1_D[2]~combout\ : std_logic;
SIGNAL \ATWD1_D[1]~combout\ : std_logic;
SIGNAL \ATWD1_D[5]~combout\ : std_logic;
SIGNAL \ATWD1_D[4]~combout\ : std_logic;
SIGNAL \ATWD1_D[8]~combout\ : std_logic;
SIGNAL \ATWD1_D[9]~combout\ : std_logic;
SIGNAL \ATWD1_D[7]~combout\ : std_logic;
SIGNAL \ATWD1_D[6]~combout\ : std_logic;
SIGNAL \TriggerComplete_0~combout\ : std_logic;
SIGNAL \TriggerComplete_1~combout\ : std_logic;
SIGNAL \COM_AD_D[7]~combout\ : std_logic;
SIGNAL \COM_AD_D[6]~combout\ : std_logic;
SIGNAL \COM_AD_D[0]~combout\ : std_logic;
SIGNAL \COM_AD_D[5]~combout\ : std_logic;
SIGNAL \COM_AD_D[1]~combout\ : std_logic;
SIGNAL \COM_AD_D[4]~combout\ : std_logic;
SIGNAL \COM_AD_D[2]~combout\ : std_logic;
SIGNAL \COM_AD_D[3]~combout\ : std_logic;
SIGNAL \UARTRXD~combout\ : std_logic;
SIGNAL \INTEXTPIN~combout\ : std_logic;
SIGNAL \UARTDSRN~combout\ : std_logic;
SIGNAL \UARTCTSN~combout\ : std_logic;
SIGNAL \EBIACK~combout\ : std_logic;
SIGNAL \CLK_REF~combout\ : std_logic;
SIGNAL \nPOR~combout\ : std_logic;
SIGNAL \sdramdqs_pbidir[0]|combout\ : std_logic;
SIGNAL \sdramdqs_pbidir[1]|combout\ : std_logic;
SIGNAL \sdramdqs_pbidir[2]|combout\ : std_logic;
SIGNAL \sdramdqs_pbidir[3]|combout\ : std_logic;
SIGNAL \sdramdq_pbidir[0]|combout\ : std_logic;
SIGNAL \sdramdq_pbidir[1]|combout\ : std_logic;
SIGNAL \sdramdq_pbidir[2]|combout\ : std_logic;
SIGNAL \sdramdq_pbidir[3]|combout\ : std_logic;
SIGNAL \sdramdq_pbidir[4]|combout\ : std_logic;
SIGNAL \sdramdq_pbidir[5]|combout\ : std_logic;
SIGNAL \sdramdq_pbidir[6]|combout\ : std_logic;
SIGNAL \sdramdq_pbidir[7]|combout\ : std_logic;
SIGNAL \sdramdq_pbidir[8]|combout\ : std_logic;
SIGNAL \sdramdq_pbidir[9]|combout\ : std_logic;
SIGNAL \sdramdq_pbidir[10]|combout\ : std_logic;
SIGNAL \sdramdq_pbidir[11]|combout\ : std_logic;
SIGNAL \sdramdq_pbidir[12]|combout\ : std_logic;
SIGNAL \sdramdq_pbidir[13]|combout\ : std_logic;
SIGNAL \sdramdq_pbidir[14]|combout\ : std_logic;
SIGNAL \sdramdq_pbidir[15]|combout\ : std_logic;
SIGNAL \sdramdq_pbidir[16]|combout\ : std_logic;
SIGNAL \sdramdq_pbidir[17]|combout\ : std_logic;
SIGNAL \sdramdq_pbidir[18]|combout\ : std_logic;
SIGNAL \sdramdq_pbidir[19]|combout\ : std_logic;
SIGNAL \sdramdq_pbidir[20]|combout\ : std_logic;
SIGNAL \sdramdq_pbidir[21]|combout\ : std_logic;
SIGNAL \sdramdq_pbidir[22]|combout\ : std_logic;
SIGNAL \sdramdq_pbidir[23]|combout\ : std_logic;
SIGNAL \sdramdq_pbidir[24]|combout\ : std_logic;
SIGNAL \sdramdq_pbidir[25]|combout\ : std_logic;
SIGNAL \sdramdq_pbidir[26]|combout\ : std_logic;
SIGNAL \sdramdq_pbidir[27]|combout\ : std_logic;
SIGNAL \sdramdq_pbidir[28]|combout\ : std_logic;
SIGNAL \sdramdq_pbidir[29]|combout\ : std_logic;
SIGNAL \sdramdq_pbidir[30]|combout\ : std_logic;
SIGNAL \sdramdq_pbidir[31]|combout\ : std_logic;
SIGNAL \ebidq_pbidir[0]|combout\ : std_logic;
SIGNAL \ebidq_pbidir[1]|combout\ : std_logic;
SIGNAL \ebidq_pbidir[2]|combout\ : std_logic;
SIGNAL \ebidq_pbidir[3]|combout\ : std_logic;
SIGNAL \ebidq_pbidir[4]|combout\ : std_logic;
SIGNAL \ebidq_pbidir[5]|combout\ : std_logic;
SIGNAL \ebidq_pbidir[6]|combout\ : std_logic;
SIGNAL \ebidq_pbidir[7]|combout\ : std_logic;
SIGNAL \ebidq_pbidir[8]|combout\ : std_logic;
SIGNAL \ebidq_pbidir[9]|combout\ : std_logic;
SIGNAL \ebidq_pbidir[10]|combout\ : std_logic;
SIGNAL \ebidq_pbidir[11]|combout\ : std_logic;
SIGNAL \ebidq_pbidir[12]|combout\ : std_logic;
SIGNAL \ebidq_pbidir[13]|combout\ : std_logic;
SIGNAL \ebidq_pbidir[14]|combout\ : std_logic;
SIGNAL \ebidq_pbidir[15]|combout\ : std_logic;
SIGNAL \uartrin_pbidir|combout\ : std_logic;
SIGNAL \uartdcdn_pbidir|combout\ : std_logic;
SIGNAL \nreset_pbidir|combout\ : std_logic;
SIGNAL \inst_atwd_trigger|ATWDTrigger_sig\ : std_logic;
SIGNAL \inst_atwd_trigger|ATWDTrigger_sig~1\ : std_logic;
SIGNAL \wysi_counter|sload_path[0]~2\ : std_logic;
SIGNAL \ALT_NOT_inst_fe_r2r|i113\ : std_logic;
SIGNAL \ALT_NOT_inst_hit_counter|MultiSPE_nl~reg0\ : std_logic;
SIGNAL \ALT_NOT_inst_hit_counter|OneSPE_nl~reg0\ : std_logic;
SIGNAL \ALT_NOT_flasher_board_inst|FL_Trigger~reg0\ : std_logic;
SIGNAL \ALT_NOT_DC_CTRAP|COMM_RESET~reg\ : std_logic;

COMPONENT ROC
    PORT (
	CLK : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	RST : OUT std_logic);
END COMPONENT;

COMPONENT pll2x
    PORT (
	CLK2p : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	outclock0 : OUT std_logic;
	outclock1 : OUT std_logic);
END COMPONENT;

COMPONENT pll4x
    PORT (
	CLK1p : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	outclock1 : OUT std_logic);
END COMPONENT;

COMPONENT stripe
    PORT (
	q_12 : IN std_logic;
	q_11 : IN std_logic;
	q_10 : IN std_logic;
	q_9 : IN std_logic;
	q_8 : IN std_logic;
	q_7 : IN std_logic;
	q_6 : IN std_logic;
	q_5 : IN std_logic;
	q_4 : IN std_logic;
	q_3 : IN std_logic;
	q_2 : IN std_logic;
	q_1 : IN std_logic;
	q_0 : IN std_logic;
	q_121 : IN std_logic;
	q_111 : IN std_logic;
	q_101 : IN std_logic;
	q_91 : IN std_logic;
	q_81 : IN std_logic;
	q_71 : IN std_logic;
	q_61 : IN std_logic;
	q_51 : IN std_logic;
	q_41 : IN std_logic;
	q_31 : IN std_logic;
	q_21 : IN std_logic;
	q_13 : IN std_logic;
	q_01 : IN std_logic;
	outclock0 : IN std_logic;
	rx_we : IN std_logic;
	inst46_0 : IN std_logic;
	inst46_1 : IN std_logic;
	inst46_2 : IN std_logic;
	inst46_3 : IN std_logic;
	inst46_4 : IN std_logic;
	inst46_5 : IN std_logic;
	inst46_6 : IN std_logic;
	inst46_7 : IN std_logic;
	inst43_0 : IN std_logic;
	inst43_1 : IN std_logic;
	inst43_2 : IN std_logic;
	inst43_3 : IN std_logic;
	inst43_4 : IN std_logic;
	inst43_5 : IN std_logic;
	inst43_6 : IN std_logic;
	inst43_7 : IN std_logic;
	inst41_0 : IN std_logic;
	inst41_1 : IN std_logic;
	inst41_2 : IN std_logic;
	inst41_3 : IN std_logic;
	inst41_4 : IN std_logic;
	inst41_5 : IN std_logic;
	inst41_6 : IN std_logic;
	inst41_7 : IN std_logic;
	inst38_0 : IN std_logic;
	inst38_1 : IN std_logic;
	inst38_2 : IN std_logic;
	inst38_3 : IN std_logic;
	inst38_4 : IN std_logic;
	inst38_5 : IN std_logic;
	inst38_6 : IN std_logic;
	inst38_7 : IN std_logic;
	masterhready : IN std_logic;
	slavehwdata_0 : IN std_logic;
	slavehwdata_1 : IN std_logic;
	slavehwdata_2 : IN std_logic;
	slavehwdata_3 : IN std_logic;
	slavehwdata_4 : IN std_logic;
	slavehwdata_5 : IN std_logic;
	slavehwdata_6 : IN std_logic;
	slavehwdata_7 : IN std_logic;
	slavehwdata_8 : IN std_logic;
	slavehwdata_9 : IN std_logic;
	slavehwdata_10 : IN std_logic;
	slavehwdata_11 : IN std_logic;
	slavehwdata_12 : IN std_logic;
	slavehwdata_13 : IN std_logic;
	slavehwdata_14 : IN std_logic;
	slavehwdata_15 : IN std_logic;
	slavehwdata_16 : IN std_logic;
	slavehwdata_17 : IN std_logic;
	slavehwdata_18 : IN std_logic;
	slavehwdata_19 : IN std_logic;
	slavehwdata_20 : IN std_logic;
	slavehwdata_21 : IN std_logic;
	slavehwdata_22 : IN std_logic;
	slavehwdata_23 : IN std_logic;
	slavehwdata_24 : IN std_logic;
	slavehwdata_25 : IN std_logic;
	slavehwdata_26 : IN std_logic;
	slavehwdata_27 : IN std_logic;
	slavehwdata_28 : IN std_logic;
	slavehwdata_29 : IN std_logic;
	slavehwdata_30 : IN std_logic;
	slavehwdata_31 : IN std_logic;
	reg_rdata_0 : IN std_logic;
	reg_rdata_1 : IN std_logic;
	reg_rdata_2 : IN std_logic;
	reg_rdata_3 : IN std_logic;
	reg_rdata_4 : IN std_logic;
	reg_rdata_5 : IN std_logic;
	reg_rdata_6 : IN std_logic;
	reg_rdata_7 : IN std_logic;
	reg_rdata_8 : IN std_logic;
	reg_rdata_9 : IN std_logic;
	reg_rdata_10 : IN std_logic;
	reg_rdata_11 : IN std_logic;
	reg_rdata_12 : IN std_logic;
	reg_rdata_13 : IN std_logic;
	reg_rdata_14 : IN std_logic;
	reg_rdata_15 : IN std_logic;
	reg_rdata_16 : IN std_logic;
	reg_rdata_17 : IN std_logic;
	reg_rdata_18 : IN std_logic;
	reg_rdata_19 : IN std_logic;
	reg_rdata_20 : IN std_logic;
	reg_rdata_21 : IN std_logic;
	reg_rdata_22 : IN std_logic;
	reg_rdata_23 : IN std_logic;
	reg_rdata_24 : IN std_logic;
	reg_rdata_25 : IN std_logic;
	reg_rdata_26 : IN std_logic;
	reg_rdata_27 : IN std_logic;
	reg_rdata_28 : IN std_logic;
	reg_rdata_29 : IN std_logic;
	reg_rdata_30 : IN std_logic;
	reg_rdata_31 : IN std_logic;
	masterhresp_0 : IN std_logic;
	VCC_port : IN std_logic;
	UARTRXD : IN std_logic;
	INTEXTPIN : IN std_logic;
	UARTDSRN : IN std_logic;
	UARTCTSN : IN std_logic;
	EBIACK : IN std_logic;
	combout : IN std_logic;
	combout1 : IN std_logic;
	combout2 : IN std_logic;
	combout3 : IN std_logic;
	combout4 : IN std_logic;
	combout5 : IN std_logic;
	combout6 : IN std_logic;
	combout7 : IN std_logic;
	combout8 : IN std_logic;
	combout9 : IN std_logic;
	combout10 : IN std_logic;
	combout11 : IN std_logic;
	combout12 : IN std_logic;
	combout13 : IN std_logic;
	combout14 : IN std_logic;
	combout15 : IN std_logic;
	combout16 : IN std_logic;
	combout17 : IN std_logic;
	combout18 : IN std_logic;
	combout19 : IN std_logic;
	combout20 : IN std_logic;
	combout21 : IN std_logic;
	combout22 : IN std_logic;
	combout23 : IN std_logic;
	combout24 : IN std_logic;
	combout25 : IN std_logic;
	combout26 : IN std_logic;
	combout27 : IN std_logic;
	combout28 : IN std_logic;
	combout29 : IN std_logic;
	combout30 : IN std_logic;
	combout31 : IN std_logic;
	combout32 : IN std_logic;
	combout33 : IN std_logic;
	combout34 : IN std_logic;
	combout35 : IN std_logic;
	combout36 : IN std_logic;
	combout37 : IN std_logic;
	combout38 : IN std_logic;
	combout39 : IN std_logic;
	combout40 : IN std_logic;
	combout41 : IN std_logic;
	combout42 : IN std_logic;
	combout43 : IN std_logic;
	combout44 : IN std_logic;
	combout45 : IN std_logic;
	combout46 : IN std_logic;
	combout47 : IN std_logic;
	combout48 : IN std_logic;
	combout49 : IN std_logic;
	combout50 : IN std_logic;
	combout51 : IN std_logic;
	combout52 : IN std_logic;
	combout53 : IN std_logic;
	combout54 : IN std_logic;
	CLK_REF : IN std_logic;
	nPOR : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	portadataout_0 : OUT std_logic;
	portadataout_1 : OUT std_logic;
	portadataout_2 : OUT std_logic;
	portadataout_3 : OUT std_logic;
	portadataout_4 : OUT std_logic;
	portadataout_5 : OUT std_logic;
	portadataout_6 : OUT std_logic;
	portadataout_7 : OUT std_logic;
	portadataout_8 : OUT std_logic;
	portadataout_9 : OUT std_logic;
	portadataout_10 : OUT std_logic;
	portadataout_11 : OUT std_logic;
	portadataout_12 : OUT std_logic;
	portadataout_13 : OUT std_logic;
	portadataout_14 : OUT std_logic;
	portadataout_15 : OUT std_logic;
	portadataout_16 : OUT std_logic;
	portadataout_17 : OUT std_logic;
	portadataout_18 : OUT std_logic;
	portadataout_19 : OUT std_logic;
	portadataout_20 : OUT std_logic;
	portadataout_21 : OUT std_logic;
	portadataout_22 : OUT std_logic;
	portadataout_23 : OUT std_logic;
	portadataout_24 : OUT std_logic;
	portadataout_25 : OUT std_logic;
	portadataout_26 : OUT std_logic;
	portadataout_27 : OUT std_logic;
	portadataout_28 : OUT std_logic;
	portadataout_29 : OUT std_logic;
	portadataout_30 : OUT std_logic;
	portadataout_31 : OUT std_logic;
	core : OUT std_logic;
	MASTERHWRITE : OUT std_logic;
	SLAVEHREADYO : OUT std_logic;
	core1 : OUT std_logic;
	core2 : OUT std_logic;
	core3 : OUT std_logic;
	core4 : OUT std_logic;
	core5 : OUT std_logic;
	core6 : OUT std_logic;
	core7 : OUT std_logic;
	core8 : OUT std_logic;
	core9 : OUT std_logic;
	core10 : OUT std_logic;
	core11 : OUT std_logic;
	core12 : OUT std_logic;
	core13 : OUT std_logic;
	core14 : OUT std_logic;
	core15 : OUT std_logic;
	core16 : OUT std_logic;
	core17 : OUT std_logic;
	MASTERHADDR_2 : OUT std_logic;
	MASTERHADDR_3 : OUT std_logic;
	MASTERHADDR_4 : OUT std_logic;
	MASTERHADDR_5 : OUT std_logic;
	MASTERHADDR_6 : OUT std_logic;
	MASTERHADDR_7 : OUT std_logic;
	MASTERHADDR_8 : OUT std_logic;
	MASTERHADDR_9 : OUT std_logic;
	MASTERHADDR_10 : OUT std_logic;
	MASTERHADDR_12 : OUT std_logic;
	MASTERHADDR_13 : OUT std_logic;
	MASTERHADDR_14 : OUT std_logic;
	MASTERHADDR_15 : OUT std_logic;
	MASTERHADDR_18 : OUT std_logic;
	MASTERHADDR_19 : OUT std_logic;
	MASTERHTRANS_0 : OUT std_logic;
	MASTERHTRANS_1 : OUT std_logic;
	MASTERHSIZE_0 : OUT std_logic;
	MASTERHSIZE_1 : OUT std_logic;
	MASTERHBURST_0 : OUT std_logic;
	MASTERHBURST_1 : OUT std_logic;
	MASTERHBURST_2 : OUT std_logic;
	MASTERHWDATA_0 : OUT std_logic;
	MASTERHWDATA_1 : OUT std_logic;
	MASTERHWDATA_2 : OUT std_logic;
	MASTERHWDATA_3 : OUT std_logic;
	MASTERHWDATA_4 : OUT std_logic;
	MASTERHWDATA_5 : OUT std_logic;
	MASTERHWDATA_6 : OUT std_logic;
	MASTERHWDATA_7 : OUT std_logic;
	MASTERHWDATA_8 : OUT std_logic;
	MASTERHWDATA_9 : OUT std_logic;
	MASTERHWDATA_10 : OUT std_logic;
	MASTERHWDATA_11 : OUT std_logic;
	MASTERHWDATA_12 : OUT std_logic;
	MASTERHWDATA_13 : OUT std_logic;
	MASTERHWDATA_14 : OUT std_logic;
	MASTERHWDATA_15 : OUT std_logic;
	MASTERHWDATA_16 : OUT std_logic;
	MASTERHWDATA_17 : OUT std_logic;
	MASTERHWDATA_18 : OUT std_logic;
	MASTERHWDATA_19 : OUT std_logic;
	MASTERHWDATA_20 : OUT std_logic;
	MASTERHWDATA_21 : OUT std_logic;
	MASTERHWDATA_22 : OUT std_logic;
	MASTERHWDATA_23 : OUT std_logic;
	MASTERHWDATA_24 : OUT std_logic;
	MASTERHWDATA_25 : OUT std_logic;
	MASTERHWDATA_26 : OUT std_logic;
	MASTERHWDATA_27 : OUT std_logic;
	MASTERHWDATA_28 : OUT std_logic;
	MASTERHWDATA_29 : OUT std_logic;
	MASTERHWDATA_30 : OUT std_logic;
	MASTERHWDATA_31 : OUT std_logic;
	core18 : OUT std_logic;
	core19 : OUT std_logic;
	core20 : OUT std_logic;
	core21 : OUT std_logic;
	core22 : OUT std_logic;
	core23 : OUT std_logic;
	core24 : OUT std_logic;
	core25 : OUT std_logic;
	core26 : OUT std_logic;
	core27 : OUT std_logic;
	core28 : OUT std_logic;
	core29 : OUT std_logic;
	core30 : OUT std_logic;
	core31 : OUT std_logic;
	core32 : OUT std_logic;
	core33 : OUT std_logic;
	core34 : OUT std_logic;
	core35 : OUT std_logic;
	core36 : OUT std_logic;
	core37 : OUT std_logic;
	core38 : OUT std_logic;
	core39 : OUT std_logic;
	core40 : OUT std_logic;
	core41 : OUT std_logic;
	core42 : OUT std_logic;
	core43 : OUT std_logic;
	core44 : OUT std_logic;
	core45 : OUT std_logic;
	core46 : OUT std_logic;
	core47 : OUT std_logic;
	core48 : OUT std_logic;
	core49 : OUT std_logic;
	core50 : OUT std_logic;
	core51 : OUT std_logic;
	core52 : OUT std_logic;
	core53 : OUT std_logic;
	core54 : OUT std_logic;
	core55 : OUT std_logic;
	core56 : OUT std_logic;
	core57 : OUT std_logic;
	core58 : OUT std_logic;
	core59 : OUT std_logic;
	core60 : OUT std_logic;
	core61 : OUT std_logic;
	core62 : OUT std_logic;
	core63 : OUT std_logic;
	core64 : OUT std_logic;
	core65 : OUT std_logic;
	core66 : OUT std_logic;
	core67 : OUT std_logic;
	core68 : OUT std_logic;
	core69 : OUT std_logic;
	core70 : OUT std_logic;
	core71 : OUT std_logic;
	core72 : OUT std_logic;
	core73 : OUT std_logic;
	core74 : OUT std_logic;
	core75 : OUT std_logic;
	core76 : OUT std_logic;
	core77 : OUT std_logic;
	core78 : OUT std_logic;
	core79 : OUT std_logic;
	core80 : OUT std_logic;
	core81 : OUT std_logic;
	core82 : OUT std_logic;
	core83 : OUT std_logic;
	core84 : OUT std_logic;
	core85 : OUT std_logic;
	core86 : OUT std_logic;
	core87 : OUT std_logic;
	core88 : OUT std_logic;
	core89 : OUT std_logic;
	core90 : OUT std_logic;
	core91 : OUT std_logic;
	core92 : OUT std_logic;
	core93 : OUT std_logic;
	core94 : OUT std_logic;
	core95 : OUT std_logic;
	core96 : OUT std_logic;
	core97 : OUT std_logic;
	core98 : OUT std_logic;
	core99 : OUT std_logic;
	core100 : OUT std_logic;
	core101 : OUT std_logic;
	core102 : OUT std_logic;
	core103 : OUT std_logic;
	core104 : OUT std_logic;
	core105 : OUT std_logic;
	core106 : OUT std_logic;
	core107 : OUT std_logic;
	core108 : OUT std_logic;
	core109 : OUT std_logic;
	core110 : OUT std_logic;
	core111 : OUT std_logic;
	core112 : OUT std_logic;
	core113 : OUT std_logic;
	core114 : OUT std_logic;
	core115 : OUT std_logic;
	core116 : OUT std_logic;
	core117 : OUT std_logic;
	core118 : OUT std_logic;
	core119 : OUT std_logic;
	core120 : OUT std_logic;
	core121 : OUT std_logic;
	core122 : OUT std_logic;
	core123 : OUT std_logic;
	core124 : OUT std_logic;
	core125 : OUT std_logic);
END COMPONENT;

COMPONENT ahb_slave
    PORT (
	CLK : IN std_logic;
	MASTERHWRITE : IN std_logic;
	MASTERHADDR_2 : IN std_logic;
	MASTERHADDR_3 : IN std_logic;
	MASTERHADDR_4 : IN std_logic;
	MASTERHADDR_5 : IN std_logic;
	MASTERHADDR_6 : IN std_logic;
	MASTERHADDR_7 : IN std_logic;
	MASTERHADDR_8 : IN std_logic;
	MASTERHADDR_9 : IN std_logic;
	MASTERHADDR_10 : IN std_logic;
	MASTERHADDR_12 : IN std_logic;
	MASTERHADDR_13 : IN std_logic;
	MASTERHADDR_14 : IN std_logic;
	MASTERHADDR_15 : IN std_logic;
	MASTERHADDR_18 : IN std_logic;
	MASTERHADDR_19 : IN std_logic;
	MASTERHTRANS_0 : IN std_logic;
	MASTERHTRANS_1 : IN std_logic;
	MASTERHSIZE_0 : IN std_logic;
	MASTERHSIZE_1 : IN std_logic;
	MASTERHBURST_0 : IN std_logic;
	MASTERHBURST_1 : IN std_logic;
	MASTERHBURST_2 : IN std_logic;
	RST : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	masterhready : OUT std_logic;
	reg_address_3 : OUT std_logic;
	reg_address_4 : OUT std_logic;
	reg_address_5 : OUT std_logic;
	reg_address_6 : OUT std_logic;
	reg_address_2 : OUT std_logic;
	reg_address_12 : OUT std_logic;
	reg_address_13 : OUT std_logic;
	reg_address_14 : OUT std_logic;
	reg_address_18 : OUT std_logic;
	reg_address_19 : OUT std_logic;
	masterhresp_0 : OUT std_logic;
	reg_enable : OUT std_logic;
	reg_write : OUT std_logic;
	reg_address_15 : OUT std_logic;
	reg_address_7 : OUT std_logic;
	reg_address_8 : OUT std_logic;
	reg_address_9 : OUT std_logic;
	reg_address_10 : OUT std_logic);
END COMPONENT;

COMPONENT ahb_master
    PORT (
	CLK : IN std_logic;
	RST : IN std_logic;
	wdata_0 : IN std_logic;
	wdata_1 : IN std_logic;
	wdata_2 : IN std_logic;
	wdata_3 : IN std_logic;
	wdata_4 : IN std_logic;
	wdata_5 : IN std_logic;
	wdata_6 : IN std_logic;
	wdata_7 : IN std_logic;
	wdata_8 : IN std_logic;
	wdata_9 : IN std_logic;
	wdata_10 : IN std_logic;
	wdata_11 : IN std_logic;
	wdata_12 : IN std_logic;
	wdata_13 : IN std_logic;
	wdata_14 : IN std_logic;
	wdata_15 : IN std_logic;
	wdata_16 : IN std_logic;
	wdata_17 : IN std_logic;
	wdata_18 : IN std_logic;
	wdata_19 : IN std_logic;
	wdata_20 : IN std_logic;
	wdata_21 : IN std_logic;
	wdata_22 : IN std_logic;
	wdata_23 : IN std_logic;
	wdata_24 : IN std_logic;
	wdata_25 : IN std_logic;
	wdata_26 : IN std_logic;
	wdata_27 : IN std_logic;
	wdata_28 : IN std_logic;
	wdata_29 : IN std_logic;
	wdata_30 : IN std_logic;
	wdata_31 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	slavehwdata_0 : OUT std_logic;
	slavehwdata_1 : OUT std_logic;
	slavehwdata_2 : OUT std_logic;
	slavehwdata_3 : OUT std_logic;
	slavehwdata_4 : OUT std_logic;
	slavehwdata_5 : OUT std_logic;
	slavehwdata_6 : OUT std_logic;
	slavehwdata_7 : OUT std_logic;
	slavehwdata_8 : OUT std_logic;
	slavehwdata_9 : OUT std_logic;
	slavehwdata_10 : OUT std_logic;
	slavehwdata_11 : OUT std_logic;
	slavehwdata_12 : OUT std_logic;
	slavehwdata_13 : OUT std_logic;
	slavehwdata_14 : OUT std_logic;
	slavehwdata_15 : OUT std_logic;
	slavehwdata_16 : OUT std_logic;
	slavehwdata_17 : OUT std_logic;
	slavehwdata_18 : OUT std_logic;
	slavehwdata_19 : OUT std_logic;
	slavehwdata_20 : OUT std_logic;
	slavehwdata_21 : OUT std_logic;
	slavehwdata_22 : OUT std_logic;
	slavehwdata_23 : OUT std_logic;
	slavehwdata_24 : OUT std_logic;
	slavehwdata_25 : OUT std_logic;
	slavehwdata_26 : OUT std_logic;
	slavehwdata_27 : OUT std_logic;
	slavehwdata_28 : OUT std_logic;
	slavehwdata_29 : OUT std_logic;
	slavehwdata_30 : OUT std_logic;
	slavehwdata_31 : OUT std_logic);
END COMPONENT;

COMPONENT slaveregister
    PORT (
	sload_path_15 : IN std_logic;
	sload_path_14 : IN std_logic;
	sload_path_13 : IN std_logic;
	sload_path_12 : IN std_logic;
	sload_path_11 : IN std_logic;
	sload_path_10 : IN std_logic;
	sload_path_9 : IN std_logic;
	sload_path_8 : IN std_logic;
	sload_path_7 : IN std_logic;
	sload_path_6 : IN std_logic;
	sload_path_5 : IN std_logic;
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	q_15 : IN std_logic;
	q_14 : IN std_logic;
	q_13 : IN std_logic;
	q_12 : IN std_logic;
	q_11 : IN std_logic;
	q_10 : IN std_logic;
	q_9 : IN std_logic;
	q_8 : IN std_logic;
	q_7 : IN std_logic;
	q_6 : IN std_logic;
	q_5 : IN std_logic;
	q_4 : IN std_logic;
	q_3 : IN std_logic;
	q_2 : IN std_logic;
	q_1 : IN std_logic;
	q_0 : IN std_logic;
	CLK : IN std_logic;
	sload_path_47 : IN std_logic;
	sload_path_46 : IN std_logic;
	sload_path_45 : IN std_logic;
	sload_path_44 : IN std_logic;
	sload_path_43 : IN std_logic;
	sload_path_42 : IN std_logic;
	sload_path_41 : IN std_logic;
	sload_path_40 : IN std_logic;
	sload_path_39 : IN std_logic;
	sload_path_38 : IN std_logic;
	sload_path_37 : IN std_logic;
	sload_path_36 : IN std_logic;
	sload_path_35 : IN std_logic;
	sload_path_34 : IN std_logic;
	sload_path_33 : IN std_logic;
	sload_path_32 : IN std_logic;
	sload_path_31 : IN std_logic;
	sload_path_30 : IN std_logic;
	sload_path_29 : IN std_logic;
	sload_path_28 : IN std_logic;
	sload_path_27 : IN std_logic;
	sload_path_26 : IN std_logic;
	sload_path_25 : IN std_logic;
	sload_path_24 : IN std_logic;
	sload_path_23 : IN std_logic;
	sload_path_22 : IN std_logic;
	sload_path_21 : IN std_logic;
	sload_path_20 : IN std_logic;
	sload_path_19 : IN std_logic;
	sload_path_18 : IN std_logic;
	sload_path_17 : IN std_logic;
	sload_path_16 : IN std_logic;
	sload_path_151 : IN std_logic;
	sload_path_141 : IN std_logic;
	sload_path_131 : IN std_logic;
	sload_path_121 : IN std_logic;
	sload_path_111 : IN std_logic;
	sload_path_101 : IN std_logic;
	sload_path_91 : IN std_logic;
	sload_path_81 : IN std_logic;
	sload_path_71 : IN std_logic;
	sload_path_61 : IN std_logic;
	sload_path_51 : IN std_logic;
	sload_path_48 : IN std_logic;
	sload_path_310 : IN std_logic;
	sload_path_210 : IN std_logic;
	sload_path_110 : IN std_logic;
	sload_path_01 : IN std_logic;
	MASTERHWDATA_0 : IN std_logic;
	MASTERHWDATA_1 : IN std_logic;
	MASTERHWDATA_2 : IN std_logic;
	MASTERHWDATA_3 : IN std_logic;
	MASTERHWDATA_4 : IN std_logic;
	MASTERHWDATA_5 : IN std_logic;
	MASTERHWDATA_6 : IN std_logic;
	MASTERHWDATA_7 : IN std_logic;
	MASTERHWDATA_8 : IN std_logic;
	MASTERHWDATA_9 : IN std_logic;
	MASTERHWDATA_10 : IN std_logic;
	MASTERHWDATA_11 : IN std_logic;
	MASTERHWDATA_12 : IN std_logic;
	MASTERHWDATA_13 : IN std_logic;
	MASTERHWDATA_14 : IN std_logic;
	MASTERHWDATA_15 : IN std_logic;
	MASTERHWDATA_16 : IN std_logic;
	MASTERHWDATA_17 : IN std_logic;
	MASTERHWDATA_18 : IN std_logic;
	MASTERHWDATA_19 : IN std_logic;
	MASTERHWDATA_20 : IN std_logic;
	MASTERHWDATA_21 : IN std_logic;
	MASTERHWDATA_22 : IN std_logic;
	MASTERHWDATA_23 : IN std_logic;
	MASTERHWDATA_24 : IN std_logic;
	MASTERHWDATA_25 : IN std_logic;
	MASTERHWDATA_26 : IN std_logic;
	MASTERHWDATA_27 : IN std_logic;
	MASTERHWDATA_28 : IN std_logic;
	MASTERHWDATA_29 : IN std_logic;
	MASTERHWDATA_30 : IN std_logic;
	MASTERHWDATA_31 : IN std_logic;
	RST : IN std_logic;
	reg_address_3 : IN std_logic;
	reg_address_4 : IN std_logic;
	reg_address_5 : IN std_logic;
	reg_address_6 : IN std_logic;
	reg_address_2 : IN std_logic;
	comres_rcvd : IN std_logic;
	reg_address_12 : IN std_logic;
	reg_address_13 : IN std_logic;
	reg_address_14 : IN std_logic;
	q_01 : IN std_logic;
	reg_address_18 : IN std_logic;
	reg_address_19 : IN std_logic;
	q_02 : IN std_logic;
	atwd0_timestamp_32 : IN std_logic;
	atwd0_timestamp_0 : IN std_logic;
	multiSPEcnt_0 : IN std_logic;
	atwd1_timestamp_0 : IN std_logic;
	oneSPEcnt_0 : IN std_logic;
	atwd1_timestamp_32 : IN std_logic;
	multiSPEcnt_01 : IN std_logic;
	oneSPEcnt_01 : IN std_logic;
	done : IN std_logic;
	op_6 : IN std_logic;
	inst16_0 : IN std_logic;
	q_03 : IN std_logic;
	q_16 : IN std_logic;
	atwd0_timestamp_33 : IN std_logic;
	atwd0_timestamp_1 : IN std_logic;
	multiSPEcnt_1 : IN std_logic;
	atwd1_timestamp_1 : IN std_logic;
	oneSPEcnt_1 : IN std_logic;
	oneSPEcnt_11 : IN std_logic;
	inst50 : IN std_logic;
	atwd1_timestamp_33 : IN std_logic;
	multiSPEcnt_11 : IN std_logic;
	inst16_1 : IN std_logic;
	q_17 : IN std_logic;
	q_18 : IN std_logic;
	q_21 : IN std_logic;
	q_22 : IN std_logic;
	atwd0_timestamp_34 : IN std_logic;
	atwd0_timestamp_2 : IN std_logic;
	multiSPEcnt_2 : IN std_logic;
	atwd1_timestamp_2 : IN std_logic;
	oneSPEcnt_2 : IN std_logic;
	oneSPEcnt_21 : IN std_logic;
	reboot_gnt : IN std_logic;
	atwd1_timestamp_34 : IN std_logic;
	multiSPEcnt_21 : IN std_logic;
	inst16_2 : IN std_logic;
	q_23 : IN std_logic;
	q_31 : IN std_logic;
	atwd0_timestamp_35 : IN std_logic;
	atwd0_timestamp_3 : IN std_logic;
	multiSPEcnt_3 : IN std_logic;
	atwd1_timestamp_3 : IN std_logic;
	oneSPEcnt_3 : IN std_logic;
	oneSPEcnt_31 : IN std_logic;
	last_node_0 : IN std_logic;
	atwd1_timestamp_35 : IN std_logic;
	multiSPEcnt_31 : IN std_logic;
	inst16_3 : IN std_logic;
	q_32 : IN std_logic;
	q_33 : IN std_logic;
	q_41 : IN std_logic;
	q_42 : IN std_logic;
	atwd0_timestamp_36 : IN std_logic;
	atwd0_timestamp_4 : IN std_logic;
	multiSPEcnt_4 : IN std_logic;
	atwd1_timestamp_4 : IN std_logic;
	oneSPEcnt_4 : IN std_logic;
	oneSPEcnt_41 : IN std_logic;
	atwd1_timestamp_36 : IN std_logic;
	multiSPEcnt_41 : IN std_logic;
	inst16_4 : IN std_logic;
	q_43 : IN std_logic;
	q_51 : IN std_logic;
	atwd0_timestamp_37 : IN std_logic;
	atwd0_timestamp_5 : IN std_logic;
	multiSPEcnt_5 : IN std_logic;
	atwd1_timestamp_5 : IN std_logic;
	oneSPEcnt_5 : IN std_logic;
	oneSPEcnt_51 : IN std_logic;
	op_61 : IN std_logic;
	atwd1_timestamp_37 : IN std_logic;
	multiSPEcnt_51 : IN std_logic;
	inst16_5 : IN std_logic;
	q_52 : IN std_logic;
	q_53 : IN std_logic;
	q_61 : IN std_logic;
	q_62 : IN std_logic;
	atwd0_timestamp_38 : IN std_logic;
	atwd0_timestamp_6 : IN std_logic;
	multiSPEcnt_6 : IN std_logic;
	atwd1_timestamp_6 : IN std_logic;
	oneSPEcnt_6 : IN std_logic;
	oneSPEcnt_61 : IN std_logic;
	com_avail : IN std_logic;
	atwd1_timestamp_38 : IN std_logic;
	multiSPEcnt_61 : IN std_logic;
	inst16_6 : IN std_logic;
	q_63 : IN std_logic;
	q_71 : IN std_logic;
	atwd0_timestamp_39 : IN std_logic;
	atwd0_timestamp_7 : IN std_logic;
	multiSPEcnt_7 : IN std_logic;
	atwd1_timestamp_7 : IN std_logic;
	oneSPEcnt_7 : IN std_logic;
	oneSPEcnt_71 : IN std_logic;
	inst16_7 : IN std_logic;
	atwd1_timestamp_39 : IN std_logic;
	multiSPEcnt_71 : IN std_logic;
	q_72 : IN std_logic;
	q_73 : IN std_logic;
	q_81 : IN std_logic;
	q_82 : IN std_logic;
	FF_down_a : IN std_logic;
	atwd0_timestamp_40 : IN std_logic;
	atwd0_timestamp_8 : IN std_logic;
	multiSPEcnt_8 : IN std_logic;
	done1 : IN std_logic;
	atwd1_timestamp_40 : IN std_logic;
	oneSPEcnt_8 : IN std_logic;
	oneSPEcnt_81 : IN std_logic;
	atwd1_timestamp_8 : IN std_logic;
	inst16_8 : IN std_logic;
	multiSPEcnt_81 : IN std_logic;
	q_83 : IN std_logic;
	q_91 : IN std_logic;
	FF_down_abar : IN std_logic;
	atwd0_timestamp_41 : IN std_logic;
	atwd0_timestamp_9 : IN std_logic;
	multiSPEcnt_9 : IN std_logic;
	atwd1_timestamp_9 : IN std_logic;
	oneSPEcnt_9 : IN std_logic;
	oneSPEcnt_91 : IN std_logic;
	inst16_9 : IN std_logic;
	atwd1_timestamp_41 : IN std_logic;
	multiSPEcnt_91 : IN std_logic;
	q_92 : IN std_logic;
	q_93 : IN std_logic;
	q_101 : IN std_logic;
	q_102 : IN std_logic;
	FF_down_b : IN std_logic;
	atwd0_timestamp_42 : IN std_logic;
	atwd0_timestamp_10 : IN std_logic;
	multiSPEcnt_10 : IN std_logic;
	atwd1_timestamp_10 : IN std_logic;
	oneSPEcnt_10 : IN std_logic;
	oneSPEcnt_101 : IN std_logic;
	inst16_10 : IN std_logic;
	atwd1_timestamp_42 : IN std_logic;
	multiSPEcnt_101 : IN std_logic;
	q_103 : IN std_logic;
	q_111 : IN std_logic;
	FF_down_bbar : IN std_logic;
	atwd0_timestamp_43 : IN std_logic;
	atwd0_timestamp_11 : IN std_logic;
	multiSPEcnt_111 : IN std_logic;
	atwd1_timestamp_11 : IN std_logic;
	oneSPEcnt_111 : IN std_logic;
	oneSPEcnt_112 : IN std_logic;
	inst16_11 : IN std_logic;
	atwd1_timestamp_43 : IN std_logic;
	multiSPEcnt_112 : IN std_logic;
	q_112 : IN std_logic;
	q_113 : IN std_logic;
	q_121 : IN std_logic;
	q_122 : IN std_logic;
	FF_up_a : IN std_logic;
	atwd0_timestamp_44 : IN std_logic;
	atwd0_timestamp_12 : IN std_logic;
	multiSPEcnt_12 : IN std_logic;
	atwd1_timestamp_12 : IN std_logic;
	oneSPEcnt_12 : IN std_logic;
	oneSPEcnt_121 : IN std_logic;
	inst16_12 : IN std_logic;
	atwd1_timestamp_44 : IN std_logic;
	multiSPEcnt_121 : IN std_logic;
	q_123 : IN std_logic;
	q_131 : IN std_logic;
	FF_up_abar : IN std_logic;
	atwd0_timestamp_45 : IN std_logic;
	atwd0_timestamp_13 : IN std_logic;
	multiSPEcnt_13 : IN std_logic;
	atwd1_timestamp_13 : IN std_logic;
	oneSPEcnt_13 : IN std_logic;
	oneSPEcnt_131 : IN std_logic;
	inst16_13 : IN std_logic;
	atwd1_timestamp_45 : IN std_logic;
	multiSPEcnt_131 : IN std_logic;
	q_132 : IN std_logic;
	q_133 : IN std_logic;
	q_141 : IN std_logic;
	q_142 : IN std_logic;
	FF_up_b : IN std_logic;
	atwd0_timestamp_46 : IN std_logic;
	atwd0_timestamp_14 : IN std_logic;
	multiSPEcnt_14 : IN std_logic;
	atwd1_timestamp_14 : IN std_logic;
	oneSPEcnt_14 : IN std_logic;
	oneSPEcnt_141 : IN std_logic;
	inst16_14 : IN std_logic;
	atwd1_timestamp_46 : IN std_logic;
	multiSPEcnt_141 : IN std_logic;
	q_143 : IN std_logic;
	q_151 : IN std_logic;
	FF_up_bbar : IN std_logic;
	atwd0_timestamp_47 : IN std_logic;
	atwd0_timestamp_15 : IN std_logic;
	multiSPEcnt_15 : IN std_logic;
	atwd1_timestamp_15 : IN std_logic;
	oneSPEcnt_15 : IN std_logic;
	oneSPEcnt_151 : IN std_logic;
	inst16_15 : IN std_logic;
	atwd1_timestamp_47 : IN std_logic;
	multiSPEcnt_151 : IN std_logic;
	q_152 : IN std_logic;
	q_153 : IN std_logic;
	atwd1_timestamp_16 : IN std_logic;
	atwd0_timestamp_16 : IN std_logic;
	atwd1_timestamp_17 : IN std_logic;
	atwd0_timestamp_17 : IN std_logic;
	atwd1_timestamp_18 : IN std_logic;
	atwd0_timestamp_18 : IN std_logic;
	atwd1_timestamp_19 : IN std_logic;
	atwd0_timestamp_19 : IN std_logic;
	atwd1_timestamp_20 : IN std_logic;
	atwd0_timestamp_20 : IN std_logic;
	atwd1_timestamp_21 : IN std_logic;
	atwd0_timestamp_21 : IN std_logic;
	atwd1_timestamp_22 : IN std_logic;
	atwd0_timestamp_22 : IN std_logic;
	atwd1_timestamp_23 : IN std_logic;
	atwd0_timestamp_23 : IN std_logic;
	atwd1_timestamp_24 : IN std_logic;
	atwd0_timestamp_24 : IN std_logic;
	atwd1_timestamp_25 : IN std_logic;
	atwd0_timestamp_25 : IN std_logic;
	atwd1_timestamp_26 : IN std_logic;
	atwd0_timestamp_26 : IN std_logic;
	atwd1_timestamp_27 : IN std_logic;
	atwd0_timestamp_27 : IN std_logic;
	atwd1_timestamp_28 : IN std_logic;
	atwd0_timestamp_28 : IN std_logic;
	atwd1_timestamp_29 : IN std_logic;
	atwd0_timestamp_29 : IN std_logic;
	atwd1_timestamp_30 : IN std_logic;
	atwd0_timestamp_30 : IN std_logic;
	atwd1_timestamp_31 : IN std_logic;
	atwd0_timestamp_31 : IN std_logic;
	reg_enable : IN std_logic;
	reg_write : IN std_logic;
	reg_address_15 : IN std_logic;
	reg_address_7 : IN std_logic;
	reg_address_8 : IN std_logic;
	done2 : IN std_logic;
	COINC_DOWN_A : IN std_logic;
	COINC_DOWN_ABAR : IN std_logic;
	COINC_DOWN_B : IN std_logic;
	COINC_DOWN_BBAR : IN std_logic;
	COINC_UP_A : IN std_logic;
	COINC_UP_ABAR : IN std_logic;
	COINC_UP_B : IN std_logic;
	COINC_UP_BBAR : IN std_logic;
	FL_ATTN : IN std_logic;
	FL_TDO : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	command_2_local_26 : OUT std_logic;
	com_ctrl_local_2 : OUT std_logic;
	reg_rdata_0 : OUT std_logic;
	reg_rdata_1 : OUT std_logic;
	reg_rdata_2 : OUT std_logic;
	reg_rdata_3 : OUT std_logic;
	reg_rdata_4 : OUT std_logic;
	reg_rdata_5 : OUT std_logic;
	reg_rdata_6 : OUT std_logic;
	reg_rdata_7 : OUT std_logic;
	reg_rdata_8 : OUT std_logic;
	reg_rdata_9 : OUT std_logic;
	reg_rdata_10 : OUT std_logic;
	reg_rdata_11 : OUT std_logic;
	reg_rdata_12 : OUT std_logic;
	reg_rdata_13 : OUT std_logic;
	reg_rdata_14 : OUT std_logic;
	reg_rdata_15 : OUT std_logic;
	reg_rdata_16 : OUT std_logic;
	reg_rdata_17 : OUT std_logic;
	reg_rdata_18 : OUT std_logic;
	reg_rdata_19 : OUT std_logic;
	reg_rdata_20 : OUT std_logic;
	reg_rdata_21 : OUT std_logic;
	reg_rdata_22 : OUT std_logic;
	reg_rdata_23 : OUT std_logic;
	reg_rdata_24 : OUT std_logic;
	reg_rdata_25 : OUT std_logic;
	reg_rdata_26 : OUT std_logic;
	reg_rdata_27 : OUT std_logic;
	reg_rdata_28 : OUT std_logic;
	reg_rdata_29 : OUT std_logic;
	reg_rdata_30 : OUT std_logic;
	reg_rdata_31 : OUT std_logic;
	command_2_local_12 : OUT std_logic;
	command_2_local_13 : OUT std_logic;
	command_2_local_14 : OUT std_logic;
	command_2_local_15 : OUT std_logic;
	command_2_local_28 : OUT std_logic;
	command_2_local_31 : OUT std_logic;
	command_2_local_29 : OUT std_logic;
	command_2_local_30 : OUT std_logic;
	i3329 : OUT std_logic;
	rx_dpr_radr_local_0 : OUT std_logic;
	command_2_local_0 : OUT std_logic;
	command_4_local_0 : OUT std_logic;
	command_0_local_0 : OUT std_logic;
	tx_dpr_wadr_local_0 : OUT std_logic;
	rx_dpr_radr_local_1 : OUT std_logic;
	command_2_local_1 : OUT std_logic;
	tx_dpr_wadr_local_1 : OUT std_logic;
	command_0_local_1 : OUT std_logic;
	command_4_local_1 : OUT std_logic;
	rx_dpr_radr_local_2 : OUT std_logic;
	tx_dpr_wadr_local_2 : OUT std_logic;
	command_0_local_2 : OUT std_logic;
	command_4_local_2 : OUT std_logic;
	rx_dpr_radr_local_3 : OUT std_logic;
	tx_dpr_wadr_local_3 : OUT std_logic;
	command_0_local_3 : OUT std_logic;
	command_4_local_3 : OUT std_logic;
	rx_dpr_radr_local_4 : OUT std_logic;
	tx_dpr_wadr_local_4 : OUT std_logic;
	rx_dpr_radr_local_5 : OUT std_logic;
	tx_dpr_wadr_local_5 : OUT std_logic;
	rx_dpr_radr_local_6 : OUT std_logic;
	tx_dpr_wadr_local_6 : OUT std_logic;
	rx_dpr_radr_local_7 : OUT std_logic;
	tx_dpr_wadr_local_7 : OUT std_logic;
	command_2_local_8 : OUT std_logic;
	rx_dpr_radr_local_8 : OUT std_logic;
	command_4_local_8 : OUT std_logic;
	tx_dpr_wadr_local_8 : OUT std_logic;
	command_0_local_8 : OUT std_logic;
	command_2_local_9 : OUT std_logic;
	rx_dpr_radr_local_9 : OUT std_logic;
	tx_dpr_wadr_local_9 : OUT std_logic;
	command_0_local_9 : OUT std_logic;
	command_2_local_10 : OUT std_logic;
	rx_dpr_radr_local_10 : OUT std_logic;
	tx_dpr_wadr_local_10 : OUT std_logic;
	command_0_local_10 : OUT std_logic;
	command_2_local_11 : OUT std_logic;
	rx_dpr_radr_local_11 : OUT std_logic;
	tx_dpr_wadr_local_11 : OUT std_logic;
	command_0_local_11 : OUT std_logic;
	rx_dpr_radr_local_12 : OUT std_logic;
	tx_dpr_wadr_local_12 : OUT std_logic;
	command_4_local_12 : OUT std_logic;
	rx_dpr_radr_local_13 : OUT std_logic;
	tx_dpr_wadr_local_13 : OUT std_logic;
	command_4_local_13 : OUT std_logic;
	rx_dpr_radr_local_14 : OUT std_logic;
	tx_dpr_wadr_local_14 : OUT std_logic;
	command_4_local_14 : OUT std_logic;
	rx_dpr_radr_local_15 : OUT std_logic;
	tx_dpr_wadr_local_15 : OUT std_logic;
	command_0_local_15 : OUT std_logic;
	command_4_local_15 : OUT std_logic;
	i : OUT std_logic;
	command_1_local_16 : OUT std_logic;
	command_0_local_16 : OUT std_logic;
	command_1_local_17 : OUT std_logic;
	command_0_local_17 : OUT std_logic;
	command_1_local_18 : OUT std_logic;
	command_1_local_19 : OUT std_logic;
	command_2_local_24 : OUT std_logic;
	command_0_local_24 : OUT std_logic;
	command_0_local_26 : OUT std_logic;
	command_0_local_28 : OUT std_logic;
	command_0_local_30 : OUT std_logic;
	i33291 : OUT std_logic;
	i3335 : OUT std_logic;
	dom_id_48 : OUT std_logic;
	i33351 : OUT std_logic;
	tx_pack_rdy : OUT std_logic;
	i3342 : OUT std_logic;
	rx_dpr_radr_stb : OUT std_logic;
	dom_id_481 : OUT std_logic;
	dom_id_0 : OUT std_logic;
	dom_id_1 : OUT std_logic;
	dom_id_2 : OUT std_logic;
	dom_id_3 : OUT std_logic;
	dom_id_4 : OUT std_logic;
	dom_id_5 : OUT std_logic;
	dom_id_6 : OUT std_logic;
	dom_id_7 : OUT std_logic;
	dom_id_8 : OUT std_logic;
	dom_id_9 : OUT std_logic;
	dom_id_10 : OUT std_logic;
	dom_id_11 : OUT std_logic;
	dom_id_12 : OUT std_logic;
	dom_id_13 : OUT std_logic;
	dom_id_14 : OUT std_logic;
	dom_id_15 : OUT std_logic;
	dom_id_16 : OUT std_logic;
	dom_id_17 : OUT std_logic;
	dom_id_18 : OUT std_logic;
	dom_id_19 : OUT std_logic;
	dom_id_20 : OUT std_logic;
	dom_id_21 : OUT std_logic;
	dom_id_22 : OUT std_logic;
	dom_id_23 : OUT std_logic;
	dom_id_24 : OUT std_logic;
	dom_id_25 : OUT std_logic;
	dom_id_26 : OUT std_logic;
	dom_id_27 : OUT std_logic;
	dom_id_28 : OUT std_logic;
	dom_id_29 : OUT std_logic;
	dom_id_30 : OUT std_logic;
	dom_id_31 : OUT std_logic;
	dom_id_32 : OUT std_logic;
	dom_id_33 : OUT std_logic;
	dom_id_34 : OUT std_logic;
	dom_id_35 : OUT std_logic;
	dom_id_36 : OUT std_logic;
	dom_id_37 : OUT std_logic;
	dom_id_38 : OUT std_logic;
	dom_id_39 : OUT std_logic;
	dom_id_40 : OUT std_logic;
	dom_id_41 : OUT std_logic;
	dom_id_42 : OUT std_logic;
	dom_id_43 : OUT std_logic;
	dom_id_44 : OUT std_logic;
	dom_id_45 : OUT std_logic;
	dom_id_46 : OUT std_logic;
	dom_id_47 : OUT std_logic);
END COMPONENT;

COMPONENT flash_ADC
    PORT (
	CLK : IN std_logic;
	MASTERHWDATA_0 : IN std_logic;
	MASTERHWDATA_1 : IN std_logic;
	MASTERHWDATA_2 : IN std_logic;
	MASTERHWDATA_3 : IN std_logic;
	MASTERHWDATA_4 : IN std_logic;
	MASTERHWDATA_5 : IN std_logic;
	MASTERHWDATA_6 : IN std_logic;
	MASTERHWDATA_7 : IN std_logic;
	MASTERHWDATA_8 : IN std_logic;
	MASTERHWDATA_9 : IN std_logic;
	MASTERHWDATA_10 : IN std_logic;
	MASTERHWDATA_11 : IN std_logic;
	MASTERHWDATA_12 : IN std_logic;
	MASTERHWDATA_13 : IN std_logic;
	MASTERHWDATA_14 : IN std_logic;
	MASTERHWDATA_15 : IN std_logic;
	RST : IN std_logic;
	reg_address_3 : IN std_logic;
	reg_address_4 : IN std_logic;
	reg_address_5 : IN std_logic;
	reg_address_6 : IN std_logic;
	reg_address_2 : IN std_logic;
	reg_address_13 : IN std_logic;
	i3329 : IN std_logic;
	i : IN std_logic;
	command_0_local_16 : IN std_logic;
	enable_disc : IN std_logic;
	i33291 : IN std_logic;
	reg_address_7 : IN std_logic;
	reg_address_8 : IN std_logic;
	reg_address_9 : IN std_logic;
	reg_address_10 : IN std_logic;
	OneSPE : IN std_logic;
	FLASH_AD_D_0 : IN std_logic;
	FLASH_AD_D_1 : IN std_logic;
	FLASH_AD_D_2 : IN std_logic;
	FLASH_AD_D_3 : IN std_logic;
	FLASH_AD_D_4 : IN std_logic;
	FLASH_AD_D_5 : IN std_logic;
	FLASH_AD_D_6 : IN std_logic;
	FLASH_AD_D_7 : IN std_logic;
	FLASH_AD_D_8 : IN std_logic;
	FLASH_AD_D_9 : IN std_logic;
	FLASH_NCO : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	q_0 : OUT std_logic;
	q_1 : OUT std_logic;
	q_2 : OUT std_logic;
	q_3 : OUT std_logic;
	q_4 : OUT std_logic;
	q_5 : OUT std_logic;
	q_6 : OUT std_logic;
	q_7 : OUT std_logic;
	q_8 : OUT std_logic;
	q_9 : OUT std_logic;
	q_10 : OUT std_logic;
	q_11 : OUT std_logic;
	q_12 : OUT std_logic;
	q_13 : OUT std_logic;
	q_14 : OUT std_logic;
	q_15 : OUT std_logic;
	done : OUT std_logic);
END COMPONENT;

COMPONENT fe_testpulse
    PORT (
	CLK : IN std_logic;
	RST : IN std_logic;
	command_1_local_16 : IN std_logic;
	command_1_local_17 : IN std_logic;
	command_1_local_18 : IN std_logic;
	command_1_local_19 : IN std_logic;
	command_0_local_24 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	FE_TEST_PULSE : OUT std_logic);
END COMPONENT;

COMPONENT single_led
    PORT (
	CLK : IN std_logic;
	RST : IN std_logic;
	command_0_local_26 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	SingleLED_TRIGGER : OUT std_logic;
	LEDdelay_0 : OUT std_logic);
END COMPONENT;

COMPONENT coinc
    PORT (
	CLK : IN std_logic;
	RST : IN std_logic;
	coinc_latch : IN std_logic_vector(3 DOWNTO 0);
	command_2_local_0 : IN std_logic;
	command_2_local_1 : IN std_logic;
	command_2_local_8 : IN std_logic;
	command_2_local_9 : IN std_logic;
	command_2_local_10 : IN std_logic;
	command_2_local_11 : IN std_logic;
	COINC_DOWN_A : IN std_logic;
	COINC_DOWN_ABAR : IN std_logic;
	COINC_DOWN_B : IN std_logic;
	COINC_DOWN_BBAR : IN std_logic;
	COINC_UP_A : IN std_logic;
	COINC_UP_ABAR : IN std_logic;
	COINC_UP_B : IN std_logic;
	COINC_UP_BBAR : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	COINCIDENCE_OUT_DOWN : OUT std_logic;
	i563 : OUT std_logic;
	COINCIDENCE_OUT_UP : OUT std_logic;
	i565 : OUT std_logic;
	FF_down_a : OUT std_logic;
	FF_down_abar : OUT std_logic;
	FF_down_b : OUT std_logic;
	FF_down_bbar : OUT std_logic;
	FF_up_a : OUT std_logic;
	FF_up_abar : OUT std_logic;
	FF_up_b : OUT std_logic;
	FF_up_bbar : OUT std_logic);
END COMPONENT;

COMPONENT hit_counter
    PORT (
	CLK : IN std_logic;
	RST : IN std_logic;
	command_4_local_8 : IN std_logic;
	GND_port : IN std_logic;
	OneSPE : IN std_logic;
	MultiSPE : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	MultiSPE_nl : OUT std_logic;
	OneSPE_nl : OUT std_logic;
	multiSPEcnt_0 : OUT std_logic;
	oneSPEcnt_0 : OUT std_logic;
	oneSPEcnt_1 : OUT std_logic;
	multiSPEcnt_1 : OUT std_logic;
	oneSPEcnt_2 : OUT std_logic;
	multiSPEcnt_2 : OUT std_logic;
	oneSPEcnt_3 : OUT std_logic;
	multiSPEcnt_3 : OUT std_logic;
	oneSPEcnt_4 : OUT std_logic;
	multiSPEcnt_4 : OUT std_logic;
	oneSPEcnt_5 : OUT std_logic;
	multiSPEcnt_5 : OUT std_logic;
	oneSPEcnt_6 : OUT std_logic;
	multiSPEcnt_6 : OUT std_logic;
	oneSPEcnt_7 : OUT std_logic;
	multiSPEcnt_7 : OUT std_logic;
	multiSPEcnt_8 : OUT std_logic;
	oneSPEcnt_8 : OUT std_logic;
	oneSPEcnt_9 : OUT std_logic;
	multiSPEcnt_9 : OUT std_logic;
	oneSPEcnt_10 : OUT std_logic;
	multiSPEcnt_10 : OUT std_logic;
	oneSPEcnt_11 : OUT std_logic;
	multiSPEcnt_11 : OUT std_logic;
	oneSPEcnt_12 : OUT std_logic;
	multiSPEcnt_12 : OUT std_logic;
	oneSPEcnt_13 : OUT std_logic;
	multiSPEcnt_13 : OUT std_logic;
	oneSPEcnt_14 : OUT std_logic;
	multiSPEcnt_14 : OUT std_logic;
	oneSPEcnt_15 : OUT std_logic;
	multiSPEcnt_15 : OUT std_logic);
END COMPONENT;

COMPONENT hit_counter_ff
    PORT (
	CLK : IN std_logic;
	FE_TEST_PULSE : IN std_logic;
	RST : IN std_logic;
	command_4_local_8 : IN std_logic;
	command_4_local_12 : IN std_logic;
	command_4_local_13 : IN std_logic;
	command_4_local_14 : IN std_logic;
	command_4_local_15 : IN std_logic;
	GND_port : IN std_logic;
	OneSPE : IN std_logic;
	MultiSPE : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	multiSPEcnt_0 : OUT std_logic;
	oneSPEcnt_0 : OUT std_logic;
	multiSPEcnt_1 : OUT std_logic;
	oneSPEcnt_1 : OUT std_logic;
	multiSPEcnt_2 : OUT std_logic;
	oneSPEcnt_2 : OUT std_logic;
	multiSPEcnt_3 : OUT std_logic;
	oneSPEcnt_3 : OUT std_logic;
	multiSPEcnt_4 : OUT std_logic;
	oneSPEcnt_4 : OUT std_logic;
	multiSPEcnt_5 : OUT std_logic;
	oneSPEcnt_5 : OUT std_logic;
	multiSPEcnt_6 : OUT std_logic;
	oneSPEcnt_6 : OUT std_logic;
	multiSPEcnt_7 : OUT std_logic;
	oneSPEcnt_7 : OUT std_logic;
	oneSPEcnt_8 : OUT std_logic;
	multiSPEcnt_8 : OUT std_logic;
	multiSPEcnt_9 : OUT std_logic;
	oneSPEcnt_9 : OUT std_logic;
	multiSPEcnt_10 : OUT std_logic;
	oneSPEcnt_10 : OUT std_logic;
	multiSPEcnt_11 : OUT std_logic;
	oneSPEcnt_11 : OUT std_logic;
	multiSPEcnt_12 : OUT std_logic;
	oneSPEcnt_12 : OUT std_logic;
	multiSPEcnt_13 : OUT std_logic;
	oneSPEcnt_13 : OUT std_logic;
	multiSPEcnt_14 : OUT std_logic;
	oneSPEcnt_14 : OUT std_logic;
	multiSPEcnt_15 : OUT std_logic;
	oneSPEcnt_15 : OUT std_logic);
END COMPONENT;

COMPONENT atwd_ping_pong
    PORT (
	CLK40 : IN std_logic;
	RST : IN std_logic;
	command_0_local_1 : IN std_logic;
	command_0_local_2 : IN std_logic;
	command_0_local_9 : IN std_logic;
	command_0_local_10 : IN std_logic;
	command_0_local_15 : IN std_logic;
	TriggerComplete_in_sync : IN std_logic;
	TriggerComplete_in_sync1 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	atwd0_pong_enable : OUT std_logic;
	i122 : OUT std_logic;
	atwd1_pong_enable : OUT std_logic;
	i124 : OUT std_logic);
END COMPONENT;

COMPONENT atwd_timestamp
    PORT (
	CLK40 : IN std_logic;
	sload_path_47 : IN std_logic;
	sload_path_46 : IN std_logic;
	sload_path_45 : IN std_logic;
	sload_path_44 : IN std_logic;
	sload_path_43 : IN std_logic;
	sload_path_42 : IN std_logic;
	sload_path_41 : IN std_logic;
	sload_path_40 : IN std_logic;
	sload_path_39 : IN std_logic;
	sload_path_38 : IN std_logic;
	sload_path_37 : IN std_logic;
	sload_path_36 : IN std_logic;
	sload_path_35 : IN std_logic;
	sload_path_34 : IN std_logic;
	sload_path_33 : IN std_logic;
	sload_path_32 : IN std_logic;
	sload_path_31 : IN std_logic;
	sload_path_30 : IN std_logic;
	sload_path_29 : IN std_logic;
	sload_path_28 : IN std_logic;
	sload_path_27 : IN std_logic;
	sload_path_26 : IN std_logic;
	sload_path_25 : IN std_logic;
	sload_path_24 : IN std_logic;
	sload_path_23 : IN std_logic;
	sload_path_22 : IN std_logic;
	sload_path_21 : IN std_logic;
	sload_path_20 : IN std_logic;
	sload_path_19 : IN std_logic;
	sload_path_18 : IN std_logic;
	sload_path_17 : IN std_logic;
	sload_path_16 : IN std_logic;
	sload_path_15 : IN std_logic;
	sload_path_14 : IN std_logic;
	sload_path_13 : IN std_logic;
	sload_path_12 : IN std_logic;
	sload_path_11 : IN std_logic;
	sload_path_10 : IN std_logic;
	sload_path_9 : IN std_logic;
	sload_path_8 : IN std_logic;
	sload_path_7 : IN std_logic;
	sload_path_6 : IN std_logic;
	sload_path_5 : IN std_logic;
	sload_path_4 : IN std_logic;
	sload_path_3 : IN std_logic;
	sload_path_2 : IN std_logic;
	sload_path_1 : IN std_logic;
	sload_path_0 : IN std_logic;
	RST : IN std_logic;
	ATWDTrigger_sig : IN std_logic;
	ATWDTrigger_sig1 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	atwd0_timestamp_32 : OUT std_logic;
	atwd0_timestamp_0 : OUT std_logic;
	atwd1_timestamp_0 : OUT std_logic;
	atwd1_timestamp_32 : OUT std_logic;
	atwd0_timestamp_33 : OUT std_logic;
	atwd0_timestamp_1 : OUT std_logic;
	atwd1_timestamp_1 : OUT std_logic;
	atwd1_timestamp_33 : OUT std_logic;
	atwd0_timestamp_34 : OUT std_logic;
	atwd0_timestamp_2 : OUT std_logic;
	atwd1_timestamp_2 : OUT std_logic;
	atwd1_timestamp_34 : OUT std_logic;
	atwd0_timestamp_35 : OUT std_logic;
	atwd0_timestamp_3 : OUT std_logic;
	atwd1_timestamp_3 : OUT std_logic;
	atwd1_timestamp_35 : OUT std_logic;
	atwd0_timestamp_36 : OUT std_logic;
	atwd0_timestamp_4 : OUT std_logic;
	atwd1_timestamp_4 : OUT std_logic;
	atwd1_timestamp_36 : OUT std_logic;
	atwd0_timestamp_37 : OUT std_logic;
	atwd0_timestamp_5 : OUT std_logic;
	atwd1_timestamp_5 : OUT std_logic;
	atwd1_timestamp_37 : OUT std_logic;
	atwd0_timestamp_38 : OUT std_logic;
	atwd0_timestamp_6 : OUT std_logic;
	atwd1_timestamp_6 : OUT std_logic;
	atwd1_timestamp_38 : OUT std_logic;
	atwd0_timestamp_39 : OUT std_logic;
	atwd0_timestamp_7 : OUT std_logic;
	atwd1_timestamp_7 : OUT std_logic;
	atwd1_timestamp_39 : OUT std_logic;
	atwd0_timestamp_40 : OUT std_logic;
	atwd0_timestamp_8 : OUT std_logic;
	atwd1_timestamp_40 : OUT std_logic;
	atwd1_timestamp_8 : OUT std_logic;
	atwd0_timestamp_41 : OUT std_logic;
	atwd0_timestamp_9 : OUT std_logic;
	atwd1_timestamp_9 : OUT std_logic;
	atwd1_timestamp_41 : OUT std_logic;
	atwd0_timestamp_42 : OUT std_logic;
	atwd0_timestamp_10 : OUT std_logic;
	atwd1_timestamp_10 : OUT std_logic;
	atwd1_timestamp_42 : OUT std_logic;
	atwd0_timestamp_43 : OUT std_logic;
	atwd0_timestamp_11 : OUT std_logic;
	atwd1_timestamp_11 : OUT std_logic;
	atwd1_timestamp_43 : OUT std_logic;
	atwd0_timestamp_44 : OUT std_logic;
	atwd0_timestamp_12 : OUT std_logic;
	atwd1_timestamp_12 : OUT std_logic;
	atwd1_timestamp_44 : OUT std_logic;
	atwd0_timestamp_45 : OUT std_logic;
	atwd0_timestamp_13 : OUT std_logic;
	atwd1_timestamp_13 : OUT std_logic;
	atwd1_timestamp_45 : OUT std_logic;
	atwd0_timestamp_46 : OUT std_logic;
	atwd0_timestamp_14 : OUT std_logic;
	atwd1_timestamp_14 : OUT std_logic;
	atwd1_timestamp_46 : OUT std_logic;
	atwd0_timestamp_47 : OUT std_logic;
	atwd0_timestamp_15 : OUT std_logic;
	atwd1_timestamp_15 : OUT std_logic;
	atwd1_timestamp_47 : OUT std_logic;
	atwd1_timestamp_16 : OUT std_logic;
	atwd0_timestamp_16 : OUT std_logic;
	atwd1_timestamp_17 : OUT std_logic;
	atwd0_timestamp_17 : OUT std_logic;
	atwd1_timestamp_18 : OUT std_logic;
	atwd0_timestamp_18 : OUT std_logic;
	atwd1_timestamp_19 : OUT std_logic;
	atwd0_timestamp_19 : OUT std_logic;
	atwd1_timestamp_20 : OUT std_logic;
	atwd0_timestamp_20 : OUT std_logic;
	atwd1_timestamp_21 : OUT std_logic;
	atwd0_timestamp_21 : OUT std_logic;
	atwd1_timestamp_22 : OUT std_logic;
	atwd0_timestamp_22 : OUT std_logic;
	atwd1_timestamp_23 : OUT std_logic;
	atwd0_timestamp_23 : OUT std_logic;
	atwd1_timestamp_24 : OUT std_logic;
	atwd0_timestamp_24 : OUT std_logic;
	atwd1_timestamp_25 : OUT std_logic;
	atwd0_timestamp_25 : OUT std_logic;
	atwd1_timestamp_26 : OUT std_logic;
	atwd0_timestamp_26 : OUT std_logic;
	atwd1_timestamp_27 : OUT std_logic;
	atwd0_timestamp_27 : OUT std_logic;
	atwd1_timestamp_28 : OUT std_logic;
	atwd0_timestamp_28 : OUT std_logic;
	atwd1_timestamp_29 : OUT std_logic;
	atwd0_timestamp_29 : OUT std_logic;
	atwd1_timestamp_30 : OUT std_logic;
	atwd0_timestamp_30 : OUT std_logic;
	atwd1_timestamp_31 : OUT std_logic;
	atwd0_timestamp_31 : OUT std_logic);
END COMPONENT;

COMPONENT atwd
    PORT (
	CLK80 : IN std_logic;
	CLK40 : IN std_logic;
	MASTERHWDATA_0 : IN std_logic;
	MASTERHWDATA_1 : IN std_logic;
	MASTERHWDATA_2 : IN std_logic;
	MASTERHWDATA_3 : IN std_logic;
	MASTERHWDATA_4 : IN std_logic;
	MASTERHWDATA_5 : IN std_logic;
	MASTERHWDATA_6 : IN std_logic;
	MASTERHWDATA_7 : IN std_logic;
	MASTERHWDATA_8 : IN std_logic;
	MASTERHWDATA_9 : IN std_logic;
	MASTERHWDATA_10 : IN std_logic;
	MASTERHWDATA_11 : IN std_logic;
	MASTERHWDATA_12 : IN std_logic;
	MASTERHWDATA_13 : IN std_logic;
	MASTERHWDATA_14 : IN std_logic;
	MASTERHWDATA_15 : IN std_logic;
	RST : IN std_logic;
	state1 : IN std_logic;
	reg_address_3 : IN std_logic;
	reg_address_4 : IN std_logic;
	reg_address_5 : IN std_logic;
	reg_address_6 : IN std_logic;
	reg_address_2 : IN std_logic;
	reg_address_12 : IN std_logic;
	reg_address_14 : IN std_logic;
	command_0_local_0 : IN std_logic;
	command_0_local_1 : IN std_logic;
	command_0_local_3 : IN std_logic;
	command_0_local_15 : IN std_logic;
	i : IN std_logic;
	atwd0_pong_enable : IN std_logic;
	enable_disc : IN std_logic;
	reg_address_7 : IN std_logic;
	reg_address_8 : IN std_logic;
	reg_address_9 : IN std_logic;
	reg_address_10 : IN std_logic;
	i3335 : IN std_logic;
	dom_id_48 : IN std_logic;
	i33351 : IN std_logic;
	OneSPE : IN std_logic;
	ATWD0_D_0 : IN std_logic;
	ATWD0_D_3 : IN std_logic;
	ATWD0_D_2 : IN std_logic;
	ATWD0_D_1 : IN std_logic;
	ATWD0_D_5 : IN std_logic;
	ATWD0_D_4 : IN std_logic;
	ATWD0_D_8 : IN std_logic;
	ATWD0_D_9 : IN std_logic;
	ATWD0_D_7 : IN std_logic;
	ATWD0_D_6 : IN std_logic;
	TriggerComplete_0 : IN std_logic;
	ATWDTrigger_sig1 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	ATWDTrigger_sig : OUT std_logic;
	OutputEnable : OUT std_logic;
	CounterClock : OUT std_logic;
	ShiftClock : OUT std_logic;
	RampSet : OUT std_logic;
	channel_1 : OUT std_logic;
	channel_0 : OUT std_logic;
	ReadWrite : OUT std_logic;
	AnalogReset : OUT std_logic;
	DigitalReset : OUT std_logic;
	DigitalSet : OUT std_logic;
	state : OUT std_logic;
	q_0 : OUT std_logic;
	done : OUT std_logic;
	q_1 : OUT std_logic;
	q_2 : OUT std_logic;
	q_3 : OUT std_logic;
	q_4 : OUT std_logic;
	q_5 : OUT std_logic;
	q_6 : OUT std_logic;
	q_7 : OUT std_logic;
	q_8 : OUT std_logic;
	q_9 : OUT std_logic;
	q_10 : OUT std_logic;
	q_11 : OUT std_logic;
	q_12 : OUT std_logic;
	q_13 : OUT std_logic;
	q_14 : OUT std_logic;
	q_15 : OUT std_logic;
	TriggerComplete_in_sync : OUT std_logic);
END COMPONENT;

COMPONENT atwd_1
    PORT (
	CLK80 : IN std_logic;
	CLK40 : IN std_logic;
	MASTERHWDATA_0 : IN std_logic;
	MASTERHWDATA_1 : IN std_logic;
	MASTERHWDATA_2 : IN std_logic;
	MASTERHWDATA_3 : IN std_logic;
	MASTERHWDATA_4 : IN std_logic;
	MASTERHWDATA_5 : IN std_logic;
	MASTERHWDATA_6 : IN std_logic;
	MASTERHWDATA_7 : IN std_logic;
	MASTERHWDATA_8 : IN std_logic;
	MASTERHWDATA_9 : IN std_logic;
	MASTERHWDATA_10 : IN std_logic;
	MASTERHWDATA_11 : IN std_logic;
	MASTERHWDATA_12 : IN std_logic;
	MASTERHWDATA_13 : IN std_logic;
	MASTERHWDATA_14 : IN std_logic;
	MASTERHWDATA_15 : IN std_logic;
	RST : IN std_logic;
	state : IN std_logic;
	reg_address_3 : IN std_logic;
	reg_address_4 : IN std_logic;
	reg_address_5 : IN std_logic;
	reg_address_6 : IN std_logic;
	reg_address_2 : IN std_logic;
	reg_address_12 : IN std_logic;
	reg_address_14 : IN std_logic;
	command_0_local_8 : IN std_logic;
	command_0_local_9 : IN std_logic;
	command_0_local_11 : IN std_logic;
	command_0_local_15 : IN std_logic;
	i : IN std_logic;
	atwd1_pong_enable : IN std_logic;
	enable_disc : IN std_logic;
	reg_address_7 : IN std_logic;
	reg_address_8 : IN std_logic;
	reg_address_9 : IN std_logic;
	reg_address_10 : IN std_logic;
	dom_id_48 : IN std_logic;
	i3335 : IN std_logic;
	i3342 : IN std_logic;
	OneSPE : IN std_logic;
	ATWD1_D_0 : IN std_logic;
	ATWD1_D_3 : IN std_logic;
	ATWD1_D_2 : IN std_logic;
	ATWD1_D_1 : IN std_logic;
	ATWD1_D_5 : IN std_logic;
	ATWD1_D_4 : IN std_logic;
	ATWD1_D_8 : IN std_logic;
	ATWD1_D_9 : IN std_logic;
	ATWD1_D_7 : IN std_logic;
	ATWD1_D_6 : IN std_logic;
	TriggerComplete_1 : IN std_logic;
	ATWDTrigger_sig1 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	ATWDTrigger_sig : OUT std_logic;
	OutputEnable : OUT std_logic;
	CounterClock : OUT std_logic;
	ShiftClock : OUT std_logic;
	RampSet : OUT std_logic;
	channel_1 : OUT std_logic;
	channel_0 : OUT std_logic;
	ReadWrite : OUT std_logic;
	AnalogReset : OUT std_logic;
	DigitalReset : OUT std_logic;
	DigitalSet : OUT std_logic;
	state1 : OUT std_logic;
	q_0 : OUT std_logic;
	q_1 : OUT std_logic;
	q_2 : OUT std_logic;
	q_3 : OUT std_logic;
	q_4 : OUT std_logic;
	q_5 : OUT std_logic;
	q_6 : OUT std_logic;
	q_7 : OUT std_logic;
	done : OUT std_logic;
	q_8 : OUT std_logic;
	q_9 : OUT std_logic;
	q_10 : OUT std_logic;
	q_11 : OUT std_logic;
	q_12 : OUT std_logic;
	q_13 : OUT std_logic;
	q_14 : OUT std_logic;
	q_15 : OUT std_logic;
	TriggerComplete_in_sync : OUT std_logic);
END COMPONENT;

COMPONENT master_data_source
    PORT (
	CLK : IN std_logic;
	SLAVEHREADYO : IN std_logic;
	RST : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	wdata_0 : OUT std_logic;
	wdata_1 : OUT std_logic;
	wdata_2 : OUT std_logic;
	wdata_3 : OUT std_logic;
	wdata_4 : OUT std_logic;
	wdata_5 : OUT std_logic;
	wdata_6 : OUT std_logic;
	wdata_7 : OUT std_logic;
	wdata_8 : OUT std_logic;
	wdata_9 : OUT std_logic;
	wdata_10 : OUT std_logic;
	wdata_11 : OUT std_logic;
	wdata_12 : OUT std_logic;
	wdata_13 : OUT std_logic;
	wdata_14 : OUT std_logic;
	wdata_15 : OUT std_logic;
	wdata_16 : OUT std_logic;
	wdata_17 : OUT std_logic;
	wdata_18 : OUT std_logic;
	wdata_19 : OUT std_logic;
	wdata_20 : OUT std_logic;
	wdata_21 : OUT std_logic;
	wdata_22 : OUT std_logic;
	wdata_23 : OUT std_logic;
	wdata_24 : OUT std_logic;
	wdata_25 : OUT std_logic;
	wdata_26 : OUT std_logic;
	wdata_27 : OUT std_logic;
	wdata_28 : OUT std_logic;
	wdata_29 : OUT std_logic;
	wdata_30 : OUT std_logic;
	wdata_31 : OUT std_logic);
END COMPONENT;

COMPONENT r2r
    PORT (
	CLK : IN std_logic;
	RST : IN std_logic;
	enable : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	R2BUS_6 : OUT std_logic;
	R2BUS_5 : OUT std_logic;
	R2BUS_4 : OUT std_logic;
	R2BUS_3 : OUT std_logic;
	R2BUS_2 : OUT std_logic;
	R2BUS_1 : OUT std_logic;
	R2BUS_0 : OUT std_logic);
END COMPONENT;

COMPONENT fe_r2r
    PORT (
	CLK : IN std_logic;
	RST : IN std_logic;
	command_0_local_30 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	FE_PULSER_P_3 : OUT std_logic;
	i113 : OUT std_logic;
	FE_PULSER_P_2 : OUT std_logic;
	FE_PULSER_P_1 : OUT std_logic;
	FE_PULSER_P_0 : OUT std_logic;
	FE_PULSER_N_3 : OUT std_logic;
	FE_PULSER_N_2 : OUT std_logic;
	FE_PULSER_N_1 : OUT std_logic;
	FE_PULSER_N_0 : OUT std_logic);
END COMPONENT;

COMPONENT flasher_board
    PORT (
	CLK : IN std_logic;
	RST : IN std_logic;
	command_2_local_24 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	FL_Trigger : OUT std_logic;
	LEDdelay_0 : OUT std_logic);
END COMPONENT;

COMPONENT dcom_ap
    PORT (
	CLK20 : IN std_logic;
	sload_path_47 : IN std_logic;
	sload_path_46 : IN std_logic;
	sload_path_45 : IN std_logic;
	sload_path_44 : IN std_logic;
	sload_path_43 : IN std_logic;
	sload_path_42 : IN std_logic;
	sload_path_41 : IN std_logic;
	sload_path_40 : IN std_logic;
	sload_path_39 : IN std_logic;
	sload_path_38 : IN std_logic;
	sload_path_37 : IN std_logic;
	sload_path_36 : IN std_logic;
	sload_path_35 : IN std_logic;
	sload_path_34 : IN std_logic;
	sload_path_33 : IN std_logic;
	sload_path_32 : IN std_logic;
	sload_path_31 : IN std_logic;
	sload_path_30 : IN std_logic;
	sload_path_29 : IN std_logic;
	sload_path_28 : IN std_logic;
	sload_path_27 : IN std_logic;
	sload_path_26 : IN std_logic;
	sload_path_25 : IN std_logic;
	sload_path_24 : IN std_logic;
	sload_path_23 : IN std_logic;
	sload_path_22 : IN std_logic;
	sload_path_21 : IN std_logic;
	sload_path_20 : IN std_logic;
	sload_path_19 : IN std_logic;
	sload_path_18 : IN std_logic;
	sload_path_17 : IN std_logic;
	sload_path_16 : IN std_logic;
	sload_path_151 : IN std_logic;
	sload_path_141 : IN std_logic;
	sload_path_131 : IN std_logic;
	sload_path_121 : IN std_logic;
	sload_path_111 : IN std_logic;
	sload_path_101 : IN std_logic;
	sload_path_91 : IN std_logic;
	sload_path_81 : IN std_logic;
	sload_path_71 : IN std_logic;
	sload_path_61 : IN std_logic;
	sload_path_51 : IN std_logic;
	sload_path_48 : IN std_logic;
	sload_path_310 : IN std_logic;
	sload_path_210 : IN std_logic;
	sload_path_110 : IN std_logic;
	sload_path_01 : IN std_logic;
	portadataout_0 : IN std_logic;
	portadataout_1 : IN std_logic;
	portadataout_2 : IN std_logic;
	portadataout_3 : IN std_logic;
	portadataout_4 : IN std_logic;
	portadataout_5 : IN std_logic;
	portadataout_6 : IN std_logic;
	portadataout_7 : IN std_logic;
	portadataout_8 : IN std_logic;
	portadataout_9 : IN std_logic;
	portadataout_10 : IN std_logic;
	portadataout_11 : IN std_logic;
	portadataout_12 : IN std_logic;
	portadataout_13 : IN std_logic;
	portadataout_14 : IN std_logic;
	portadataout_15 : IN std_logic;
	portadataout_16 : IN std_logic;
	portadataout_17 : IN std_logic;
	portadataout_18 : IN std_logic;
	portadataout_19 : IN std_logic;
	portadataout_20 : IN std_logic;
	portadataout_21 : IN std_logic;
	portadataout_22 : IN std_logic;
	portadataout_23 : IN std_logic;
	portadataout_24 : IN std_logic;
	portadataout_25 : IN std_logic;
	portadataout_26 : IN std_logic;
	portadataout_27 : IN std_logic;
	portadataout_28 : IN std_logic;
	portadataout_29 : IN std_logic;
	portadataout_30 : IN std_logic;
	portadataout_31 : IN std_logic;
	com_ctrl_local_2 : IN std_logic;
	RST : IN std_logic;
	rx_dpr_radr_local_0 : IN std_logic;
	tx_dpr_wadr_local_0 : IN std_logic;
	rx_dpr_radr_local_1 : IN std_logic;
	tx_dpr_wadr_local_1 : IN std_logic;
	rx_dpr_radr_local_2 : IN std_logic;
	tx_dpr_wadr_local_2 : IN std_logic;
	rx_dpr_radr_local_3 : IN std_logic;
	tx_dpr_wadr_local_3 : IN std_logic;
	rx_dpr_radr_local_4 : IN std_logic;
	tx_dpr_wadr_local_4 : IN std_logic;
	rx_dpr_radr_local_5 : IN std_logic;
	tx_dpr_wadr_local_5 : IN std_logic;
	rx_dpr_radr_local_6 : IN std_logic;
	tx_dpr_wadr_local_6 : IN std_logic;
	rx_dpr_radr_local_7 : IN std_logic;
	tx_dpr_wadr_local_7 : IN std_logic;
	rx_dpr_radr_local_8 : IN std_logic;
	tx_dpr_wadr_local_8 : IN std_logic;
	rx_dpr_radr_local_9 : IN std_logic;
	tx_dpr_wadr_local_9 : IN std_logic;
	rx_dpr_radr_local_10 : IN std_logic;
	tx_dpr_wadr_local_10 : IN std_logic;
	rx_dpr_radr_local_11 : IN std_logic;
	tx_dpr_wadr_local_11 : IN std_logic;
	rx_dpr_radr_local_12 : IN std_logic;
	tx_dpr_wadr_local_12 : IN std_logic;
	rx_dpr_radr_local_13 : IN std_logic;
	tx_dpr_wadr_local_13 : IN std_logic;
	rx_dpr_radr_local_14 : IN std_logic;
	tx_dpr_wadr_local_14 : IN std_logic;
	rx_dpr_radr_local_15 : IN std_logic;
	tx_dpr_wadr_local_15 : IN std_logic;
	tx_pack_rdy : IN std_logic;
	rx_dpr_radr_stb : IN std_logic;
	dom_id_48 : IN std_logic;
	dom_id_0 : IN std_logic;
	dom_id_1 : IN std_logic;
	dom_id_2 : IN std_logic;
	dom_id_3 : IN std_logic;
	dom_id_4 : IN std_logic;
	dom_id_5 : IN std_logic;
	dom_id_6 : IN std_logic;
	dom_id_7 : IN std_logic;
	dom_id_8 : IN std_logic;
	dom_id_9 : IN std_logic;
	dom_id_10 : IN std_logic;
	dom_id_11 : IN std_logic;
	dom_id_12 : IN std_logic;
	dom_id_13 : IN std_logic;
	dom_id_14 : IN std_logic;
	dom_id_15 : IN std_logic;
	dom_id_16 : IN std_logic;
	dom_id_17 : IN std_logic;
	dom_id_18 : IN std_logic;
	dom_id_19 : IN std_logic;
	dom_id_20 : IN std_logic;
	dom_id_21 : IN std_logic;
	dom_id_22 : IN std_logic;
	dom_id_23 : IN std_logic;
	dom_id_24 : IN std_logic;
	dom_id_25 : IN std_logic;
	dom_id_26 : IN std_logic;
	dom_id_27 : IN std_logic;
	dom_id_28 : IN std_logic;
	dom_id_29 : IN std_logic;
	dom_id_30 : IN std_logic;
	dom_id_31 : IN std_logic;
	dom_id_32 : IN std_logic;
	dom_id_33 : IN std_logic;
	dom_id_34 : IN std_logic;
	dom_id_35 : IN std_logic;
	dom_id_36 : IN std_logic;
	dom_id_37 : IN std_logic;
	dom_id_38 : IN std_logic;
	dom_id_39 : IN std_logic;
	dom_id_40 : IN std_logic;
	dom_id_41 : IN std_logic;
	dom_id_42 : IN std_logic;
	dom_id_43 : IN std_logic;
	dom_id_44 : IN std_logic;
	dom_id_45 : IN std_logic;
	dom_id_46 : IN std_logic;
	dom_id_47 : IN std_logic;
	GND_port : IN std_logic;
	COM_AD_D : IN std_logic_vector(9 DOWNTO 0);
	A_nB : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_15 : OUT std_logic;
	sload_path_14 : OUT std_logic;
	sload_path_13 : OUT std_logic;
	sload_path_12 : OUT std_logic;
	sload_path_11 : OUT std_logic;
	sload_path_10 : OUT std_logic;
	sload_path_9 : OUT std_logic;
	sload_path_8 : OUT std_logic;
	sload_path_7 : OUT std_logic;
	sload_path_6 : OUT std_logic;
	sload_path_5 : OUT std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic;
	q_15 : OUT std_logic;
	q_14 : OUT std_logic;
	q_13 : OUT std_logic;
	q_12 : OUT std_logic;
	q_11 : OUT std_logic;
	q_10 : OUT std_logic;
	q_9 : OUT std_logic;
	q_8 : OUT std_logic;
	q_7 : OUT std_logic;
	q_6 : OUT std_logic;
	q_5 : OUT std_logic;
	q_4 : OUT std_logic;
	q_3 : OUT std_logic;
	q_2 : OUT std_logic;
	q_1 : OUT std_logic;
	q_0 : OUT std_logic;
	q_121 : OUT std_logic;
	q_111 : OUT std_logic;
	q_101 : OUT std_logic;
	q_91 : OUT std_logic;
	q_81 : OUT std_logic;
	q_71 : OUT std_logic;
	q_61 : OUT std_logic;
	q_51 : OUT std_logic;
	q_41 : OUT std_logic;
	q_31 : OUT std_logic;
	q_21 : OUT std_logic;
	q_16 : OUT std_logic;
	q_01 : OUT std_logic;
	COMM_RESET : OUT std_logic;
	inst23_7 : OUT std_logic;
	inst23_6 : OUT std_logic;
	inst23_0 : OUT std_logic;
	pulse_sent : OUT std_logic;
	pulse_rcvd : OUT std_logic;
	tcal_rcvd : OUT std_logic;
	buf_res : OUT std_logic;
	ctrl_error : OUT std_logic;
	idle_rcvd : OUT std_logic;
	drreq_rcvd : OUT std_logic;
	rx_we : OUT std_logic;
	inst46_0 : OUT std_logic;
	inst46_1 : OUT std_logic;
	inst46_2 : OUT std_logic;
	inst46_3 : OUT std_logic;
	inst46_4 : OUT std_logic;
	inst46_5 : OUT std_logic;
	inst46_6 : OUT std_logic;
	inst46_7 : OUT std_logic;
	inst43_0 : OUT std_logic;
	inst43_1 : OUT std_logic;
	inst43_2 : OUT std_logic;
	inst43_3 : OUT std_logic;
	inst43_4 : OUT std_logic;
	inst43_5 : OUT std_logic;
	inst43_6 : OUT std_logic;
	inst43_7 : OUT std_logic;
	inst41_0 : OUT std_logic;
	inst41_1 : OUT std_logic;
	inst41_2 : OUT std_logic;
	inst41_3 : OUT std_logic;
	inst41_4 : OUT std_logic;
	inst41_5 : OUT std_logic;
	inst41_6 : OUT std_logic;
	inst41_7 : OUT std_logic;
	inst38_0 : OUT std_logic;
	inst38_1 : OUT std_logic;
	inst38_2 : OUT std_logic;
	inst38_3 : OUT std_logic;
	inst38_4 : OUT std_logic;
	inst38_5 : OUT std_logic;
	inst38_6 : OUT std_logic;
	inst38_7 : OUT std_logic;
	comres_rcvd : OUT std_logic;
	op_6 : OUT std_logic;
	inst16_0 : OUT std_logic;
	inst50 : OUT std_logic;
	inst16_1 : OUT std_logic;
	reboot_gnt : OUT std_logic;
	inst16_2 : OUT std_logic;
	last_node_0 : OUT std_logic;
	inst16_3 : OUT std_logic;
	inst16_4 : OUT std_logic;
	op_61 : OUT std_logic;
	inst16_5 : OUT std_logic;
	com_avail : OUT std_logic;
	inst16_6 : OUT std_logic;
	inst16_7 : OUT std_logic;
	inst16_8 : OUT std_logic;
	inst16_9 : OUT std_logic;
	inst16_10 : OUT std_logic;
	inst16_11 : OUT std_logic;
	inst16_12 : OUT std_logic;
	inst16_13 : OUT std_logic;
	inst16_14 : OUT std_logic;
	inst16_15 : OUT std_logic);
END COMPONENT;

COMPONENT timer
    PORT (
	outclock1 : IN std_logic;
	RST : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	sload_path_47 : OUT std_logic;
	sload_path_46 : OUT std_logic;
	sload_path_45 : OUT std_logic;
	sload_path_44 : OUT std_logic;
	sload_path_43 : OUT std_logic;
	sload_path_42 : OUT std_logic;
	sload_path_41 : OUT std_logic;
	sload_path_40 : OUT std_logic;
	sload_path_39 : OUT std_logic;
	sload_path_38 : OUT std_logic;
	sload_path_37 : OUT std_logic;
	sload_path_36 : OUT std_logic;
	sload_path_35 : OUT std_logic;
	sload_path_34 : OUT std_logic;
	sload_path_33 : OUT std_logic;
	sload_path_32 : OUT std_logic;
	sload_path_31 : OUT std_logic;
	sload_path_30 : OUT std_logic;
	sload_path_29 : OUT std_logic;
	sload_path_28 : OUT std_logic;
	sload_path_27 : OUT std_logic;
	sload_path_26 : OUT std_logic;
	sload_path_25 : OUT std_logic;
	sload_path_24 : OUT std_logic;
	sload_path_23 : OUT std_logic;
	sload_path_22 : OUT std_logic;
	sload_path_21 : OUT std_logic;
	sload_path_20 : OUT std_logic;
	sload_path_19 : OUT std_logic;
	sload_path_18 : OUT std_logic;
	sload_path_17 : OUT std_logic;
	sload_path_16 : OUT std_logic;
	sload_path_15 : OUT std_logic;
	sload_path_14 : OUT std_logic;
	sload_path_13 : OUT std_logic;
	sload_path_12 : OUT std_logic;
	sload_path_11 : OUT std_logic;
	sload_path_10 : OUT std_logic;
	sload_path_9 : OUT std_logic;
	sload_path_8 : OUT std_logic;
	sload_path_7 : OUT std_logic;
	sload_path_6 : OUT std_logic;
	sload_path_5 : OUT std_logic;
	sload_path_4 : OUT std_logic;
	sload_path_3 : OUT std_logic;
	sload_path_2 : OUT std_logic;
	sload_path_1 : OUT std_logic;
	sload_path_0 : OUT std_logic);
END COMPONENT;

COMPONENT LED2ATWDdelay
    PORT (
	CLK40 : IN std_logic;
	RST : IN std_logic;
	command_4_local_0 : IN std_logic;
	command_4_local_1 : IN std_logic;
	command_4_local_2 : IN std_logic;
	command_4_local_3 : IN std_logic;
	LEDdelay_0 : IN std_logic;
	LEDdelay_01 : IN std_logic;
	devclrn : IN std_logic;
	devpor : IN std_logic;
	devoe : IN std_logic;
	i : OUT std_logic);
END COMPONENT;

BEGIN

ww_CLK3p <= CLK3p;
ww_CLK4p <= CLK4p;
ww_COM_AD_OTR <= COM_AD_OTR;
ww_HDV_Rx <= HDV_Rx;
ww_COINC_DOWN_A <= COINC_DOWN_A;
ww_COINC_DOWN_ABAR <= COINC_DOWN_ABAR;
ww_COINC_DOWN_B <= COINC_DOWN_B;
ww_COINC_DOWN_BBAR <= COINC_DOWN_BBAR;
ww_COINC_UP_A <= COINC_UP_A;
ww_COINC_UP_ABAR <= COINC_UP_ABAR;
ww_COINC_UP_B <= COINC_UP_B;
ww_COINC_UP_BBAR <= COINC_UP_BBAR;
ww_FL_ATTN <= FL_ATTN;
ww_FL_TDO <= FL_TDO;
ww_CLK2p <= CLK2p;
ww_OneSPE <= OneSPE;
ww_COM_AD_D <= COM_AD_D;
ww_A_nB <= A_nB;
ww_FLASH_AD_D <= FLASH_AD_D;
ww_FLASH_NCO <= FLASH_NCO;
ww_CLK1p <= CLK1p;
ww_MultiSPE <= MultiSPE;
ww_ATWD0_D <= ATWD0_D;
ww_ATWD1_D <= ATWD1_D;
ww_TriggerComplete_0 <= TriggerComplete_0;
ww_TriggerComplete_1 <= TriggerComplete_1;
ww_UARTRXD <= UARTRXD;
ww_INTEXTPIN <= INTEXTPIN;
ww_UARTDSRN <= UARTDSRN;
ww_UARTCTSN <= UARTCTSN;
ww_EBIACK <= EBIACK;
ww_CLK_REF <= CLK_REF;
ww_nPOR <= nPOR;
CLKLK_OUT2p <= ww_CLKLK_OUT2p;
COMM_RESET <= ww_COMM_RESET;
FPGA_LOADED <= ww_FPGA_LOADED;
COM_TX_SLEEP <= ww_COM_TX_SLEEP;
COM_DB <= ww_COM_DB;
HDV_RxENA <= ww_HDV_RxENA;
HDV_TxENA <= ww_HDV_TxENA;
HDV_IN <= ww_HDV_IN;
FLASH_AD_STBY <= ww_FLASH_AD_STBY;
ATWDTrigger_0 <= ww_ATWDTrigger_0;
OutputEnable_0 <= ww_OutputEnable_0;
CounterClock_0 <= ww_CounterClock_0;
ShiftClock_0 <= ww_ShiftClock_0;
RampSet_0 <= ww_RampSet_0;
ChannelSelect_0 <= ww_ChannelSelect_0;
ReadWrite_0 <= ww_ReadWrite_0;
AnalogReset_0 <= ww_AnalogReset_0;
DigitalReset_0 <= ww_DigitalReset_0;
DigitalSet_0 <= ww_DigitalSet_0;
ATWD0VDD_SUP <= ww_ATWD0VDD_SUP;
ATWDTrigger_1 <= ww_ATWDTrigger_1;
OutputEnable_1 <= ww_OutputEnable_1;
CounterClock_1 <= ww_CounterClock_1;
ShiftClock_1 <= ww_ShiftClock_1;
RampSet_1 <= ww_RampSet_1;
ChannelSelect_1 <= ww_ChannelSelect_1;
ReadWrite_1 <= ww_ReadWrite_1;
AnalogReset_1 <= ww_AnalogReset_1;
DigitalReset_1 <= ww_DigitalReset_1;
DigitalSet_1 <= ww_DigitalSet_1;
ATWD1VDD_SUP <= ww_ATWD1VDD_SUP;
MultiSPE_nl <= ww_MultiSPE_nl;
OneSPE_nl <= ww_OneSPE_nl;
FE_TEST_PULSE <= ww_FE_TEST_PULSE;
FE_PULSER_P <= ww_FE_PULSER_P;
FE_PULSER_N <= ww_FE_PULSER_N;
R2BUS <= ww_R2BUS;
SingleLED_TRIGGER <= ww_SingleLED_TRIGGER;
COINCIDENCE_OUT_DOWN <= ww_COINCIDENCE_OUT_DOWN;
COINC_DOWN_ALATCH <= ww_COINC_DOWN_ALATCH;
COINC_DOWN_BLATCH <= ww_COINC_DOWN_BLATCH;
COINCIDENCE_OUT_UP <= ww_COINCIDENCE_OUT_UP;
COINC_UP_ALATCH <= ww_COINC_UP_ALATCH;
COINC_UP_BLATCH <= ww_COINC_UP_BLATCH;
FL_Trigger <= ww_FL_Trigger;
FL_Trigger_bar <= ww_FL_Trigger_bar;
FL_PRE_TRIG <= ww_FL_PRE_TRIG;
FL_TMS <= ww_FL_TMS;
FL_TCK <= ww_FL_TCK;
FL_TDI <= ww_FL_TDI;
PDL_FPGA_D <= ww_PDL_FPGA_D;
PGM <= ww_PGM;
UARTDTRN <= ww_UARTDTRN;
UARTRTSN <= ww_UARTRTSN;
UARTTXD <= ww_UARTTXD;
EBIBE <= ww_EBIBE;
EBICSN <= ww_EBICSN;
EBIADDR <= ww_EBIADDR;
EBICLK <= ww_EBICLK;
EBIOEN <= ww_EBIOEN;
EBIWEN <= ww_EBIWEN;
SDRAMADDR <= ww_SDRAMADDR;
SDRAMCSN <= ww_SDRAMCSN;
SDRAMDQM <= ww_SDRAMDQM;
SDRAMRASN <= ww_SDRAMRASN;
SDRAMCASN <= ww_SDRAMCASN;
SDRAMWEN <= ww_SDRAMWEN;
SDRAMCLKE <= ww_SDRAMCLKE;
SDRAMCLKN <= ww_SDRAMCLKN;
SDRAMCLK <= ww_SDRAMCLK;

ww_inst_coinc_coinc_latch <= (gnd & gnd & \slaveregister_inst|command_2_local[13]\ & \slaveregister_inst|command_2_local[12]\);

ww_dcom_ap_inst_COM_AD_D <= (\COM_AD_D[9]~combout\ & \COM_AD_D[8]~combout\ & \COM_AD_D[7]~combout\ & \COM_AD_D[6]~combout\ & \COM_AD_D[5]~combout\ & \COM_AD_D[4]~combout\ & \COM_AD_D[3]~combout\ & \COM_AD_D[2]~combout\ & \COM_AD_D[1]~combout\ & 
\COM_AD_D[0]~combout\);
\ALT_NOT_inst_fe_r2r|i113\ <= NOT \inst_fe_r2r|i113\;
\ALT_NOT_inst_hit_counter|MultiSPE_nl~reg0\ <= NOT \inst_hit_counter|MultiSPE_nl~reg0\;
\ALT_NOT_inst_hit_counter|OneSPE_nl~reg0\ <= NOT \inst_hit_counter|OneSPE_nl~reg0\;
\ALT_NOT_flasher_board_inst|FL_Trigger~reg0\ <= NOT \flasher_board_inst|FL_Trigger~reg0\;
\ALT_NOT_DC_CTRAP|COMM_RESET~reg\ <= NOT \DC_CTRAP|COMM_RESET~reg\;
inst_ROC : ROC
PORT MAP (
	CLK => \altclklock_component|outclock0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	RST => \inst_ROC|RST~reg0\);
inst_pll2x : pll2x
PORT MAP (
	CLK2p => \CLK2p~combout\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	outclock0 => \altclklock_component|outclock0\,
	outclock1 => \altclklock_component|outclock1~1\);
inst_pll4x : pll4x
PORT MAP (
	CLK1p => \CLK1p~combout\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	outclock1 => \altclklock_component|outclock1\);
stripe_inst : stripe
PORT MAP (
	q_12 => \wysi_counter|q[12]\,
	q_11 => \wysi_counter|q[11]\,
	q_10 => \wysi_counter|q[10]\,
	q_9 => \wysi_counter|q[9]\,
	q_8 => \wysi_counter|q[8]\,
	q_7 => \wysi_counter|q[7]\,
	q_6 => \wysi_counter|q[6]\,
	q_5 => \wysi_counter|q[5]\,
	q_4 => \wysi_counter|q[4]\,
	q_3 => \wysi_counter|q[3]\,
	q_2 => \wysi_counter|q[2]\,
	q_1 => \wysi_counter|q[1]\,
	q_0 => \wysi_counter|q[0]\,
	q_121 => \wysi_counter|q[12]~1\,
	q_111 => \wysi_counter|q[11]~1\,
	q_101 => \wysi_counter|q[10]~1\,
	q_91 => \wysi_counter|q[9]~1\,
	q_81 => \wysi_counter|q[8]~1\,
	q_71 => \wysi_counter|q[7]~1\,
	q_61 => \wysi_counter|q[6]~1\,
	q_51 => \wysi_counter|q[5]~1\,
	q_41 => \wysi_counter|q[4]~1\,
	q_31 => \wysi_counter|q[3]~1\,
	q_21 => \wysi_counter|q[2]~1\,
	q_13 => \wysi_counter|q[1]~1\,
	q_01 => \wysi_counter|q[0]~1\,
	outclock0 => \altclklock_component|outclock0\,
	rx_we => \inst10|rx_we~reg\,
	inst46_0 => \DC_Rx_chan_ap|inst46[0]\,
	inst46_1 => \DC_Rx_chan_ap|inst46[1]\,
	inst46_2 => \DC_Rx_chan_ap|inst46[2]\,
	inst46_3 => \DC_Rx_chan_ap|inst46[3]\,
	inst46_4 => \DC_Rx_chan_ap|inst46[4]\,
	inst46_5 => \DC_Rx_chan_ap|inst46[5]\,
	inst46_6 => \DC_Rx_chan_ap|inst46[6]\,
	inst46_7 => \DC_Rx_chan_ap|inst46[7]\,
	inst43_0 => \DC_Rx_chan_ap|inst43[0]\,
	inst43_1 => \DC_Rx_chan_ap|inst43[1]\,
	inst43_2 => \DC_Rx_chan_ap|inst43[2]\,
	inst43_3 => \DC_Rx_chan_ap|inst43[3]\,
	inst43_4 => \DC_Rx_chan_ap|inst43[4]\,
	inst43_5 => \DC_Rx_chan_ap|inst43[5]\,
	inst43_6 => \DC_Rx_chan_ap|inst43[6]\,
	inst43_7 => \DC_Rx_chan_ap|inst43[7]\,
	inst41_0 => \DC_Rx_chan_ap|inst41[0]\,
	inst41_1 => \DC_Rx_chan_ap|inst41[1]\,
	inst41_2 => \DC_Rx_chan_ap|inst41[2]\,
	inst41_3 => \DC_Rx_chan_ap|inst41[3]\,
	inst41_4 => \DC_Rx_chan_ap|inst41[4]\,
	inst41_5 => \DC_Rx_chan_ap|inst41[5]\,
	inst41_6 => \DC_Rx_chan_ap|inst41[6]\,
	inst41_7 => \DC_Rx_chan_ap|inst41[7]\,
	inst38_0 => \DC_Rx_chan_ap|inst38[0]\,
	inst38_1 => \DC_Rx_chan_ap|inst38[1]\,
	inst38_2 => \DC_Rx_chan_ap|inst38[2]\,
	inst38_3 => \DC_Rx_chan_ap|inst38[3]\,
	inst38_4 => \DC_Rx_chan_ap|inst38[4]\,
	inst38_5 => \DC_Rx_chan_ap|inst38[5]\,
	inst38_6 => \DC_Rx_chan_ap|inst38[6]\,
	inst38_7 => \DC_Rx_chan_ap|inst38[7]\,
	masterhready => \ahb_slave_inst|masterhready~reg0\,
	slavehwdata_0 => \inst_ahb_master|slavehwdata[0]~reg0\,
	slavehwdata_1 => \inst_ahb_master|slavehwdata[1]~reg0\,
	slavehwdata_2 => \inst_ahb_master|slavehwdata[2]~reg0\,
	slavehwdata_3 => \inst_ahb_master|slavehwdata[3]~reg0\,
	slavehwdata_4 => \inst_ahb_master|slavehwdata[4]~reg0\,
	slavehwdata_5 => \inst_ahb_master|slavehwdata[5]~reg0\,
	slavehwdata_6 => \inst_ahb_master|slavehwdata[6]~reg0\,
	slavehwdata_7 => \inst_ahb_master|slavehwdata[7]~reg0\,
	slavehwdata_8 => \inst_ahb_master|slavehwdata[8]~reg0\,
	slavehwdata_9 => \inst_ahb_master|slavehwdata[9]~reg0\,
	slavehwdata_10 => \inst_ahb_master|slavehwdata[10]~reg0\,
	slavehwdata_11 => \inst_ahb_master|slavehwdata[11]~reg0\,
	slavehwdata_12 => \inst_ahb_master|slavehwdata[12]~reg0\,
	slavehwdata_13 => \inst_ahb_master|slavehwdata[13]~reg0\,
	slavehwdata_14 => \inst_ahb_master|slavehwdata[14]~reg0\,
	slavehwdata_15 => \inst_ahb_master|slavehwdata[15]~reg0\,
	slavehwdata_16 => \inst_ahb_master|slavehwdata[16]~reg0\,
	slavehwdata_17 => \inst_ahb_master|slavehwdata[17]~reg0\,
	slavehwdata_18 => \inst_ahb_master|slavehwdata[18]~reg0\,
	slavehwdata_19 => \inst_ahb_master|slavehwdata[19]~reg0\,
	slavehwdata_20 => \inst_ahb_master|slavehwdata[20]~reg0\,
	slavehwdata_21 => \inst_ahb_master|slavehwdata[21]~reg0\,
	slavehwdata_22 => \inst_ahb_master|slavehwdata[22]~reg0\,
	slavehwdata_23 => \inst_ahb_master|slavehwdata[23]~reg0\,
	slavehwdata_24 => \inst_ahb_master|slavehwdata[24]~reg0\,
	slavehwdata_25 => \inst_ahb_master|slavehwdata[25]~reg0\,
	slavehwdata_26 => \inst_ahb_master|slavehwdata[26]~reg0\,
	slavehwdata_27 => \inst_ahb_master|slavehwdata[27]~reg0\,
	slavehwdata_28 => \inst_ahb_master|slavehwdata[28]~reg0\,
	slavehwdata_29 => \inst_ahb_master|slavehwdata[29]~reg0\,
	slavehwdata_30 => \inst_ahb_master|slavehwdata[30]~reg0\,
	slavehwdata_31 => \inst_ahb_master|slavehwdata[31]~reg0\,
	reg_rdata_0 => \slaveregister_inst|reg_rdata[0]~reg0\,
	reg_rdata_1 => \slaveregister_inst|reg_rdata[1]~reg0\,
	reg_rdata_2 => \slaveregister_inst|reg_rdata[2]~reg0\,
	reg_rdata_3 => \slaveregister_inst|reg_rdata[3]~reg0\,
	reg_rdata_4 => \slaveregister_inst|reg_rdata[4]~reg0\,
	reg_rdata_5 => \slaveregister_inst|reg_rdata[5]~reg0\,
	reg_rdata_6 => \slaveregister_inst|reg_rdata[6]~reg0\,
	reg_rdata_7 => \slaveregister_inst|reg_rdata[7]~reg0\,
	reg_rdata_8 => \slaveregister_inst|reg_rdata[8]~reg0\,
	reg_rdata_9 => \slaveregister_inst|reg_rdata[9]~reg0\,
	reg_rdata_10 => \slaveregister_inst|reg_rdata[10]~reg0\,
	reg_rdata_11 => \slaveregister_inst|reg_rdata[11]~reg0\,
	reg_rdata_12 => \slaveregister_inst|reg_rdata[12]~reg0\,
	reg_rdata_13 => \slaveregister_inst|reg_rdata[13]~reg0\,
	reg_rdata_14 => \slaveregister_inst|reg_rdata[14]~reg0\,
	reg_rdata_15 => \slaveregister_inst|reg_rdata[15]~reg0\,
	reg_rdata_16 => \slaveregister_inst|reg_rdata[16]~reg0\,
	reg_rdata_17 => \slaveregister_inst|reg_rdata[17]~reg0\,
	reg_rdata_18 => \slaveregister_inst|reg_rdata[18]~reg0\,
	reg_rdata_19 => \slaveregister_inst|reg_rdata[19]~reg0\,
	reg_rdata_20 => \slaveregister_inst|reg_rdata[20]~reg0\,
	reg_rdata_21 => \slaveregister_inst|reg_rdata[21]~reg0\,
	reg_rdata_22 => \slaveregister_inst|reg_rdata[22]~reg0\,
	reg_rdata_23 => \slaveregister_inst|reg_rdata[23]~reg0\,
	reg_rdata_24 => \slaveregister_inst|reg_rdata[24]~reg0\,
	reg_rdata_25 => \slaveregister_inst|reg_rdata[25]~reg0\,
	reg_rdata_26 => \slaveregister_inst|reg_rdata[26]~reg0\,
	reg_rdata_27 => \slaveregister_inst|reg_rdata[27]~reg0\,
	reg_rdata_28 => \slaveregister_inst|reg_rdata[28]~reg0\,
	reg_rdata_29 => \slaveregister_inst|reg_rdata[29]~reg0\,
	reg_rdata_30 => \slaveregister_inst|reg_rdata[30]~reg0\,
	reg_rdata_31 => \slaveregister_inst|reg_rdata[31]~reg0\,
	masterhresp_0 => \ahb_slave_inst|masterhresp[0]~reg0\,
	VCC_port => \~VCC\,
	UARTRXD => \UARTRXD~combout\,
	INTEXTPIN => \INTEXTPIN~combout\,
	UARTDSRN => \UARTDSRN~combout\,
	UARTCTSN => \UARTCTSN~combout\,
	EBIACK => \EBIACK~combout\,
	combout => \sdramdqs_pbidir[0]|combout\,
	combout1 => \sdramdqs_pbidir[1]|combout\,
	combout2 => \sdramdqs_pbidir[2]|combout\,
	combout3 => \sdramdqs_pbidir[3]|combout\,
	combout4 => \sdramdq_pbidir[0]|combout\,
	combout5 => \sdramdq_pbidir[1]|combout\,
	combout6 => \sdramdq_pbidir[2]|combout\,
	combout7 => \sdramdq_pbidir[3]|combout\,
	combout8 => \sdramdq_pbidir[4]|combout\,
	combout9 => \sdramdq_pbidir[5]|combout\,
	combout10 => \sdramdq_pbidir[6]|combout\,
	combout11 => \sdramdq_pbidir[7]|combout\,
	combout12 => \sdramdq_pbidir[8]|combout\,
	combout13 => \sdramdq_pbidir[9]|combout\,
	combout14 => \sdramdq_pbidir[10]|combout\,
	combout15 => \sdramdq_pbidir[11]|combout\,
	combout16 => \sdramdq_pbidir[12]|combout\,
	combout17 => \sdramdq_pbidir[13]|combout\,
	combout18 => \sdramdq_pbidir[14]|combout\,
	combout19 => \sdramdq_pbidir[15]|combout\,
	combout20 => \sdramdq_pbidir[16]|combout\,
	combout21 => \sdramdq_pbidir[17]|combout\,
	combout22 => \sdramdq_pbidir[18]|combout\,
	combout23 => \sdramdq_pbidir[19]|combout\,
	combout24 => \sdramdq_pbidir[20]|combout\,
	combout25 => \sdramdq_pbidir[21]|combout\,
	combout26 => \sdramdq_pbidir[22]|combout\,
	combout27 => \sdramdq_pbidir[23]|combout\,
	combout28 => \sdramdq_pbidir[24]|combout\,
	combout29 => \sdramdq_pbidir[25]|combout\,
	combout30 => \sdramdq_pbidir[26]|combout\,
	combout31 => \sdramdq_pbidir[27]|combout\,
	combout32 => \sdramdq_pbidir[28]|combout\,
	combout33 => \sdramdq_pbidir[29]|combout\,
	combout34 => \sdramdq_pbidir[30]|combout\,
	combout35 => \sdramdq_pbidir[31]|combout\,
	combout36 => \ebidq_pbidir[0]|combout\,
	combout37 => \ebidq_pbidir[1]|combout\,
	combout38 => \ebidq_pbidir[2]|combout\,
	combout39 => \ebidq_pbidir[3]|combout\,
	combout40 => \ebidq_pbidir[4]|combout\,
	combout41 => \ebidq_pbidir[5]|combout\,
	combout42 => \ebidq_pbidir[6]|combout\,
	combout43 => \ebidq_pbidir[7]|combout\,
	combout44 => \ebidq_pbidir[8]|combout\,
	combout45 => \ebidq_pbidir[9]|combout\,
	combout46 => \ebidq_pbidir[10]|combout\,
	combout47 => \ebidq_pbidir[11]|combout\,
	combout48 => \ebidq_pbidir[12]|combout\,
	combout49 => \ebidq_pbidir[13]|combout\,
	combout50 => \ebidq_pbidir[14]|combout\,
	combout51 => \ebidq_pbidir[15]|combout\,
	combout52 => \uartrin_pbidir|combout\,
	combout53 => \uartdcdn_pbidir|combout\,
	combout54 => \nreset_pbidir|combout\,
	CLK_REF => \CLK_REF~combout\,
	nPOR => \nPOR~combout\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	portadataout_0 => \dp0|portadataout[0]\,
	portadataout_1 => \dp0|portadataout[1]\,
	portadataout_2 => \dp0|portadataout[2]\,
	portadataout_3 => \dp0|portadataout[3]\,
	portadataout_4 => \dp0|portadataout[4]\,
	portadataout_5 => \dp0|portadataout[5]\,
	portadataout_6 => \dp0|portadataout[6]\,
	portadataout_7 => \dp0|portadataout[7]\,
	portadataout_8 => \dp0|portadataout[8]\,
	portadataout_9 => \dp0|portadataout[9]\,
	portadataout_10 => \dp0|portadataout[10]\,
	portadataout_11 => \dp0|portadataout[11]\,
	portadataout_12 => \dp0|portadataout[12]\,
	portadataout_13 => \dp0|portadataout[13]\,
	portadataout_14 => \dp0|portadataout[14]\,
	portadataout_15 => \dp0|portadataout[15]\,
	portadataout_16 => \dp0|portadataout[16]\,
	portadataout_17 => \dp0|portadataout[17]\,
	portadataout_18 => \dp0|portadataout[18]\,
	portadataout_19 => \dp0|portadataout[19]\,
	portadataout_20 => \dp0|portadataout[20]\,
	portadataout_21 => \dp0|portadataout[21]\,
	portadataout_22 => \dp0|portadataout[22]\,
	portadataout_23 => \dp0|portadataout[23]\,
	portadataout_24 => \dp0|portadataout[24]\,
	portadataout_25 => \dp0|portadataout[25]\,
	portadataout_26 => \dp0|portadataout[26]\,
	portadataout_27 => \dp0|portadataout[27]\,
	portadataout_28 => \dp0|portadataout[28]\,
	portadataout_29 => \dp0|portadataout[29]\,
	portadataout_30 => \dp0|portadataout[30]\,
	portadataout_31 => \dp0|portadataout[31]\,
	core => \core|core\,
	MASTERHWRITE => \core|MASTERHWRITE\,
	SLAVEHREADYO => \core|SLAVEHREADYO\,
	core1 => \core|core~SDRAMCLK\,
	core2 => \core|core~SDRAMCLKN\,
	core3 => \core|core~SDRAMCLKE\,
	core4 => \core|core~SDRAMWEN\,
	core5 => \core|core~SDRAMCASN\,
	core6 => \core|core~SDRAMRASN\,
	core7 => \core|core~SDRAMDQSOE\,
	core8 => \core|core~EBIWEN\,
	core9 => \core|core~EBIOEN\,
	core10 => \core|core~EBICLK\,
	core11 => \core|core~EBIDQOE\,
	core12 => \core|core~UARTRION\,
	core13 => \core|core~UARTDCDON\,
	core14 => \core|core~UARTDCDRIOE\,
	core15 => \core|core~UARTTXD\,
	core16 => \core|core~UARTRTSN\,
	core17 => \core|core~UARTDTRN\,
	MASTERHADDR_2 => \core|MASTERHADDR[2]\,
	MASTERHADDR_3 => \core|MASTERHADDR[3]\,
	MASTERHADDR_4 => \core|MASTERHADDR[4]\,
	MASTERHADDR_5 => \core|MASTERHADDR[5]\,
	MASTERHADDR_6 => \core|MASTERHADDR[6]\,
	MASTERHADDR_7 => \core|MASTERHADDR[7]\,
	MASTERHADDR_8 => \core|MASTERHADDR[8]\,
	MASTERHADDR_9 => \core|MASTERHADDR[9]\,
	MASTERHADDR_10 => \core|MASTERHADDR[10]\,
	MASTERHADDR_12 => \core|MASTERHADDR[12]\,
	MASTERHADDR_13 => \core|MASTERHADDR[13]\,
	MASTERHADDR_14 => \core|MASTERHADDR[14]\,
	MASTERHADDR_15 => \core|MASTERHADDR[15]\,
	MASTERHADDR_18 => \core|MASTERHADDR[18]\,
	MASTERHADDR_19 => \core|MASTERHADDR[19]\,
	MASTERHTRANS_0 => \core|MASTERHTRANS[0]\,
	MASTERHTRANS_1 => \core|MASTERHTRANS[1]\,
	MASTERHSIZE_0 => \core|MASTERHSIZE[0]\,
	MASTERHSIZE_1 => \core|MASTERHSIZE[1]\,
	MASTERHBURST_0 => \core|MASTERHBURST[0]\,
	MASTERHBURST_1 => \core|MASTERHBURST[1]\,
	MASTERHBURST_2 => \core|MASTERHBURST[2]\,
	MASTERHWDATA_0 => \core|MASTERHWDATA[0]\,
	MASTERHWDATA_1 => \core|MASTERHWDATA[1]\,
	MASTERHWDATA_2 => \core|MASTERHWDATA[2]\,
	MASTERHWDATA_3 => \core|MASTERHWDATA[3]\,
	MASTERHWDATA_4 => \core|MASTERHWDATA[4]\,
	MASTERHWDATA_5 => \core|MASTERHWDATA[5]\,
	MASTERHWDATA_6 => \core|MASTERHWDATA[6]\,
	MASTERHWDATA_7 => \core|MASTERHWDATA[7]\,
	MASTERHWDATA_8 => \core|MASTERHWDATA[8]\,
	MASTERHWDATA_9 => \core|MASTERHWDATA[9]\,
	MASTERHWDATA_10 => \core|MASTERHWDATA[10]\,
	MASTERHWDATA_11 => \core|MASTERHWDATA[11]\,
	MASTERHWDATA_12 => \core|MASTERHWDATA[12]\,
	MASTERHWDATA_13 => \core|MASTERHWDATA[13]\,
	MASTERHWDATA_14 => \core|MASTERHWDATA[14]\,
	MASTERHWDATA_15 => \core|MASTERHWDATA[15]\,
	MASTERHWDATA_16 => \core|MASTERHWDATA[16]\,
	MASTERHWDATA_17 => \core|MASTERHWDATA[17]\,
	MASTERHWDATA_18 => \core|MASTERHWDATA[18]\,
	MASTERHWDATA_19 => \core|MASTERHWDATA[19]\,
	MASTERHWDATA_20 => \core|MASTERHWDATA[20]\,
	MASTERHWDATA_21 => \core|MASTERHWDATA[21]\,
	MASTERHWDATA_22 => \core|MASTERHWDATA[22]\,
	MASTERHWDATA_23 => \core|MASTERHWDATA[23]\,
	MASTERHWDATA_24 => \core|MASTERHWDATA[24]\,
	MASTERHWDATA_25 => \core|MASTERHWDATA[25]\,
	MASTERHWDATA_26 => \core|MASTERHWDATA[26]\,
	MASTERHWDATA_27 => \core|MASTERHWDATA[27]\,
	MASTERHWDATA_28 => \core|MASTERHWDATA[28]\,
	MASTERHWDATA_29 => \core|MASTERHWDATA[29]\,
	MASTERHWDATA_30 => \core|MASTERHWDATA[30]\,
	MASTERHWDATA_31 => \core|MASTERHWDATA[31]\,
	core18 => \core|core~SDRAMDQM0\,
	core19 => \core|core~SDRAMDQM1\,
	core20 => \core|core~SDRAMDQM2\,
	core21 => \core|core~SDRAMDQM3\,
	core22 => \core|core~SDRAMADDR0\,
	core23 => \core|core~SDRAMADDR1\,
	core24 => \core|core~SDRAMADDR2\,
	core25 => \core|core~SDRAMADDR3\,
	core26 => \core|core~SDRAMADDR4\,
	core27 => \core|core~SDRAMADDR5\,
	core28 => \core|core~SDRAMADDR6\,
	core29 => \core|core~SDRAMADDR7\,
	core30 => \core|core~SDRAMADDR8\,
	core31 => \core|core~SDRAMADDR9\,
	core32 => \core|core~SDRAMADDR10\,
	core33 => \core|core~SDRAMADDR11\,
	core34 => \core|core~SDRAMADDR12\,
	core35 => \core|core~SDRAMADDR13\,
	core36 => \core|core~SDRAMADDR14\,
	core37 => \core|core~SDRAMCSN0\,
	core38 => \core|core~SDRAMCSN1\,
	core39 => \core|core~SDRAMDQOUT0\,
	core40 => \core|core~SDRAMDQOUT1\,
	core41 => \core|core~SDRAMDQOUT2\,
	core42 => \core|core~SDRAMDQOUT3\,
	core43 => \core|core~SDRAMDQOUT4\,
	core44 => \core|core~SDRAMDQOUT5\,
	core45 => \core|core~SDRAMDQOUT6\,
	core46 => \core|core~SDRAMDQOUT7\,
	core47 => \core|core~SDRAMDQOUT8\,
	core48 => \core|core~SDRAMDQOUT9\,
	core49 => \core|core~SDRAMDQOUT10\,
	core50 => \core|core~SDRAMDQOUT11\,
	core51 => \core|core~SDRAMDQOUT12\,
	core52 => \core|core~SDRAMDQOUT13\,
	core53 => \core|core~SDRAMDQOUT14\,
	core54 => \core|core~SDRAMDQOUT15\,
	core55 => \core|core~SDRAMDQOUT16\,
	core56 => \core|core~SDRAMDQOUT17\,
	core57 => \core|core~SDRAMDQOUT18\,
	core58 => \core|core~SDRAMDQOUT19\,
	core59 => \core|core~SDRAMDQOUT20\,
	core60 => \core|core~SDRAMDQOUT21\,
	core61 => \core|core~SDRAMDQOUT22\,
	core62 => \core|core~SDRAMDQOUT23\,
	core63 => \core|core~SDRAMDQOUT24\,
	core64 => \core|core~SDRAMDQOUT25\,
	core65 => \core|core~SDRAMDQOUT26\,
	core66 => \core|core~SDRAMDQOUT27\,
	core67 => \core|core~SDRAMDQOUT28\,
	core68 => \core|core~SDRAMDQOUT29\,
	core69 => \core|core~SDRAMDQOUT30\,
	core70 => \core|core~SDRAMDQOUT31\,
	core71 => \core|core~SDRAMDQSOUT0\,
	core72 => \core|core~SDRAMDQSOUT1\,
	core73 => \core|core~SDRAMDQSOUT2\,
	core74 => \core|core~SDRAMDQSOUT3\,
	core75 => \core|core~SDRAMDQOE0\,
	core76 => \core|core~SDRAMDQOE1\,
	core77 => \core|core~SDRAMDQOE2\,
	core78 => \core|core~SDRAMDQOE3\,
	core79 => \core|core~EBIDQOUT0\,
	core80 => \core|core~EBIDQOUT1\,
	core81 => \core|core~EBIDQOUT2\,
	core82 => \core|core~EBIDQOUT3\,
	core83 => \core|core~EBIDQOUT4\,
	core84 => \core|core~EBIDQOUT5\,
	core85 => \core|core~EBIDQOUT6\,
	core86 => \core|core~EBIDQOUT7\,
	core87 => \core|core~EBIDQOUT8\,
	core88 => \core|core~EBIDQOUT9\,
	core89 => \core|core~EBIDQOUT10\,
	core90 => \core|core~EBIDQOUT11\,
	core91 => \core|core~EBIDQOUT12\,
	core92 => \core|core~EBIDQOUT13\,
	core93 => \core|core~EBIDQOUT14\,
	core94 => \core|core~EBIDQOUT15\,
	core95 => \core|core~EBIBE0\,
	core96 => \core|core~EBIBE1\,
	core97 => \core|core~EBICSN0\,
	core98 => \core|core~EBICSN1\,
	core99 => \core|core~EBICSN2\,
	core100 => \core|core~EBICSN3\,
	core101 => \core|core~EBIADDR0\,
	core102 => \core|core~EBIADDR1\,
	core103 => \core|core~EBIADDR2\,
	core104 => \core|core~EBIADDR3\,
	core105 => \core|core~EBIADDR4\,
	core106 => \core|core~EBIADDR5\,
	core107 => \core|core~EBIADDR6\,
	core108 => \core|core~EBIADDR7\,
	core109 => \core|core~EBIADDR8\,
	core110 => \core|core~EBIADDR9\,
	core111 => \core|core~EBIADDR10\,
	core112 => \core|core~EBIADDR11\,
	core113 => \core|core~EBIADDR12\,
	core114 => \core|core~EBIADDR13\,
	core115 => \core|core~EBIADDR14\,
	core116 => \core|core~EBIADDR15\,
	core117 => \core|core~EBIADDR16\,
	core118 => \core|core~EBIADDR17\,
	core119 => \core|core~EBIADDR18\,
	core120 => \core|core~EBIADDR19\,
	core121 => \core|core~EBIADDR20\,
	core122 => \core|core~EBIADDR21\,
	core123 => \core|core~EBIADDR22\,
	core124 => \core|core~EBIADDR23\,
	core125 => \core|core~EBIADDR24\);
ahb_slave_inst : ahb_slave
PORT MAP (
	CLK => \altclklock_component|outclock0\,
	MASTERHWRITE => \core|MASTERHWRITE\,
	MASTERHADDR_2 => \core|MASTERHADDR[2]\,
	MASTERHADDR_3 => \core|MASTERHADDR[3]\,
	MASTERHADDR_4 => \core|MASTERHADDR[4]\,
	MASTERHADDR_5 => \core|MASTERHADDR[5]\,
	MASTERHADDR_6 => \core|MASTERHADDR[6]\,
	MASTERHADDR_7 => \core|MASTERHADDR[7]\,
	MASTERHADDR_8 => \core|MASTERHADDR[8]\,
	MASTERHADDR_9 => \core|MASTERHADDR[9]\,
	MASTERHADDR_10 => \core|MASTERHADDR[10]\,
	MASTERHADDR_12 => \core|MASTERHADDR[12]\,
	MASTERHADDR_13 => \core|MASTERHADDR[13]\,
	MASTERHADDR_14 => \core|MASTERHADDR[14]\,
	MASTERHADDR_15 => \core|MASTERHADDR[15]\,
	MASTERHADDR_18 => \core|MASTERHADDR[18]\,
	MASTERHADDR_19 => \core|MASTERHADDR[19]\,
	MASTERHTRANS_0 => \core|MASTERHTRANS[0]\,
	MASTERHTRANS_1 => \core|MASTERHTRANS[1]\,
	MASTERHSIZE_0 => \core|MASTERHSIZE[0]\,
	MASTERHSIZE_1 => \core|MASTERHSIZE[1]\,
	MASTERHBURST_0 => \core|MASTERHBURST[0]\,
	MASTERHBURST_1 => \core|MASTERHBURST[1]\,
	MASTERHBURST_2 => \core|MASTERHBURST[2]\,
	RST => \inst_ROC|RST~reg0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	masterhready => \ahb_slave_inst|masterhready~reg0\,
	reg_address_3 => \ahb_slave_inst|reg_address[3]~reg0\,
	reg_address_4 => \ahb_slave_inst|reg_address[4]~reg0\,
	reg_address_5 => \ahb_slave_inst|reg_address[5]~reg0\,
	reg_address_6 => \ahb_slave_inst|reg_address[6]~reg0\,
	reg_address_2 => \ahb_slave_inst|reg_address[2]~reg0\,
	reg_address_12 => \ahb_slave_inst|reg_address[12]~reg0\,
	reg_address_13 => \ahb_slave_inst|reg_address[13]~reg0\,
	reg_address_14 => \ahb_slave_inst|reg_address[14]~reg0\,
	reg_address_18 => \ahb_slave_inst|reg_address[18]~reg0\,
	reg_address_19 => \ahb_slave_inst|reg_address[19]~reg0\,
	masterhresp_0 => \ahb_slave_inst|masterhresp[0]~reg0\,
	reg_enable => \ahb_slave_inst|reg_enable~reg0\,
	reg_write => \ahb_slave_inst|reg_write~reg0\,
	reg_address_15 => \ahb_slave_inst|reg_address[15]~reg0\,
	reg_address_7 => \ahb_slave_inst|reg_address[7]~reg0\,
	reg_address_8 => \ahb_slave_inst|reg_address[8]~reg0\,
	reg_address_9 => \ahb_slave_inst|reg_address[9]~reg0\,
	reg_address_10 => \ahb_slave_inst|reg_address[10]~reg0\);
inst_ahb_master : ahb_master
PORT MAP (
	CLK => \altclklock_component|outclock0\,
	RST => \inst_ROC|RST~reg0\,
	wdata_0 => \inst_master_data_source|wdata[0]~reg0\,
	wdata_1 => \inst_master_data_source|wdata[1]~reg0\,
	wdata_2 => \inst_master_data_source|wdata[2]~reg0\,
	wdata_3 => \inst_master_data_source|wdata[3]~reg0\,
	wdata_4 => \inst_master_data_source|wdata[4]~reg0\,
	wdata_5 => \inst_master_data_source|wdata[5]~reg0\,
	wdata_6 => \inst_master_data_source|wdata[6]~reg0\,
	wdata_7 => \inst_master_data_source|wdata[7]~reg0\,
	wdata_8 => \inst_master_data_source|wdata[8]~reg0\,
	wdata_9 => \inst_master_data_source|wdata[9]~reg0\,
	wdata_10 => \inst_master_data_source|wdata[10]~reg0\,
	wdata_11 => \inst_master_data_source|wdata[11]~reg0\,
	wdata_12 => \inst_master_data_source|wdata[12]~reg0\,
	wdata_13 => \inst_master_data_source|wdata[13]~reg0\,
	wdata_14 => \inst_master_data_source|wdata[14]~reg0\,
	wdata_15 => \inst_master_data_source|wdata[15]~reg0\,
	wdata_16 => \inst_master_data_source|wdata[16]~reg0\,
	wdata_17 => \inst_master_data_source|wdata[17]~reg0\,
	wdata_18 => \inst_master_data_source|wdata[18]~reg0\,
	wdata_19 => \inst_master_data_source|wdata[19]~reg0\,
	wdata_20 => \inst_master_data_source|wdata[20]~reg0\,
	wdata_21 => \inst_master_data_source|wdata[21]~reg0\,
	wdata_22 => \inst_master_data_source|wdata[22]~reg0\,
	wdata_23 => \inst_master_data_source|wdata[23]~reg0\,
	wdata_24 => \inst_master_data_source|wdata[24]~reg0\,
	wdata_25 => \inst_master_data_source|wdata[25]~reg0\,
	wdata_26 => \inst_master_data_source|wdata[26]~reg0\,
	wdata_27 => \inst_master_data_source|wdata[27]~reg0\,
	wdata_28 => \inst_master_data_source|wdata[28]~reg0\,
	wdata_29 => \inst_master_data_source|wdata[29]~reg0\,
	wdata_30 => \inst_master_data_source|wdata[30]~reg0\,
	wdata_31 => \inst_master_data_source|wdata[31]~reg0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	slavehwdata_0 => \inst_ahb_master|slavehwdata[0]~reg0\,
	slavehwdata_1 => \inst_ahb_master|slavehwdata[1]~reg0\,
	slavehwdata_2 => \inst_ahb_master|slavehwdata[2]~reg0\,
	slavehwdata_3 => \inst_ahb_master|slavehwdata[3]~reg0\,
	slavehwdata_4 => \inst_ahb_master|slavehwdata[4]~reg0\,
	slavehwdata_5 => \inst_ahb_master|slavehwdata[5]~reg0\,
	slavehwdata_6 => \inst_ahb_master|slavehwdata[6]~reg0\,
	slavehwdata_7 => \inst_ahb_master|slavehwdata[7]~reg0\,
	slavehwdata_8 => \inst_ahb_master|slavehwdata[8]~reg0\,
	slavehwdata_9 => \inst_ahb_master|slavehwdata[9]~reg0\,
	slavehwdata_10 => \inst_ahb_master|slavehwdata[10]~reg0\,
	slavehwdata_11 => \inst_ahb_master|slavehwdata[11]~reg0\,
	slavehwdata_12 => \inst_ahb_master|slavehwdata[12]~reg0\,
	slavehwdata_13 => \inst_ahb_master|slavehwdata[13]~reg0\,
	slavehwdata_14 => \inst_ahb_master|slavehwdata[14]~reg0\,
	slavehwdata_15 => \inst_ahb_master|slavehwdata[15]~reg0\,
	slavehwdata_16 => \inst_ahb_master|slavehwdata[16]~reg0\,
	slavehwdata_17 => \inst_ahb_master|slavehwdata[17]~reg0\,
	slavehwdata_18 => \inst_ahb_master|slavehwdata[18]~reg0\,
	slavehwdata_19 => \inst_ahb_master|slavehwdata[19]~reg0\,
	slavehwdata_20 => \inst_ahb_master|slavehwdata[20]~reg0\,
	slavehwdata_21 => \inst_ahb_master|slavehwdata[21]~reg0\,
	slavehwdata_22 => \inst_ahb_master|slavehwdata[22]~reg0\,
	slavehwdata_23 => \inst_ahb_master|slavehwdata[23]~reg0\,
	slavehwdata_24 => \inst_ahb_master|slavehwdata[24]~reg0\,
	slavehwdata_25 => \inst_ahb_master|slavehwdata[25]~reg0\,
	slavehwdata_26 => \inst_ahb_master|slavehwdata[26]~reg0\,
	slavehwdata_27 => \inst_ahb_master|slavehwdata[27]~reg0\,
	slavehwdata_28 => \inst_ahb_master|slavehwdata[28]~reg0\,
	slavehwdata_29 => \inst_ahb_master|slavehwdata[29]~reg0\,
	slavehwdata_30 => \inst_ahb_master|slavehwdata[30]~reg0\,
	slavehwdata_31 => \inst_ahb_master|slavehwdata[31]~reg0\);
slaveregister_inst : slaveregister
PORT MAP (
	sload_path_15 => \wysi_counter|sload_path[15]\,
	sload_path_14 => \wysi_counter|sload_path[14]\,
	sload_path_13 => \wysi_counter|sload_path[13]\,
	sload_path_12 => \wysi_counter|sload_path[12]\,
	sload_path_11 => \wysi_counter|sload_path[11]\,
	sload_path_10 => \wysi_counter|sload_path[10]\,
	sload_path_9 => \wysi_counter|sload_path[9]\,
	sload_path_8 => \wysi_counter|sload_path[8]\,
	sload_path_7 => \wysi_counter|sload_path[7]\,
	sload_path_6 => \wysi_counter|sload_path[6]\,
	sload_path_5 => \wysi_counter|sload_path[5]\,
	sload_path_4 => \wysi_counter|sload_path[4]\,
	sload_path_3 => \wysi_counter|sload_path[3]\,
	sload_path_2 => \wysi_counter|sload_path[2]\,
	sload_path_1 => \wysi_counter|sload_path[1]\,
	sload_path_0 => \wysi_counter|sload_path[0]\,
	q_15 => \wysi_counter|q[15]\,
	q_14 => \wysi_counter|q[14]\,
	q_13 => \wysi_counter|q[13]\,
	q_12 => \wysi_counter|q[12]\,
	q_11 => \wysi_counter|q[11]\,
	q_10 => \wysi_counter|q[10]\,
	q_9 => \wysi_counter|q[9]\,
	q_8 => \wysi_counter|q[8]\,
	q_7 => \wysi_counter|q[7]\,
	q_6 => \wysi_counter|q[6]\,
	q_5 => \wysi_counter|q[5]\,
	q_4 => \wysi_counter|q[4]\,
	q_3 => \wysi_counter|q[3]\,
	q_2 => \wysi_counter|q[2]\,
	q_1 => \wysi_counter|q[1]\,
	q_0 => \wysi_counter|q[0]\,
	CLK => \altclklock_component|outclock0\,
	sload_path_47 => \wysi_counter|sload_path[47]\,
	sload_path_46 => \wysi_counter|sload_path[46]\,
	sload_path_45 => \wysi_counter|sload_path[45]\,
	sload_path_44 => \wysi_counter|sload_path[44]\,
	sload_path_43 => \wysi_counter|sload_path[43]\,
	sload_path_42 => \wysi_counter|sload_path[42]\,
	sload_path_41 => \wysi_counter|sload_path[41]\,
	sload_path_40 => \wysi_counter|sload_path[40]\,
	sload_path_39 => \wysi_counter|sload_path[39]\,
	sload_path_38 => \wysi_counter|sload_path[38]\,
	sload_path_37 => \wysi_counter|sload_path[37]\,
	sload_path_36 => \wysi_counter|sload_path[36]\,
	sload_path_35 => \wysi_counter|sload_path[35]\,
	sload_path_34 => \wysi_counter|sload_path[34]\,
	sload_path_33 => \wysi_counter|sload_path[33]\,
	sload_path_32 => \wysi_counter|sload_path[32]\,
	sload_path_31 => \wysi_counter|sload_path[31]\,
	sload_path_30 => \wysi_counter|sload_path[30]\,
	sload_path_29 => \wysi_counter|sload_path[29]\,
	sload_path_28 => \wysi_counter|sload_path[28]\,
	sload_path_27 => \wysi_counter|sload_path[27]\,
	sload_path_26 => \wysi_counter|sload_path[26]\,
	sload_path_25 => \wysi_counter|sload_path[25]\,
	sload_path_24 => \wysi_counter|sload_path[24]\,
	sload_path_23 => \wysi_counter|sload_path[23]\,
	sload_path_22 => \wysi_counter|sload_path[22]\,
	sload_path_21 => \wysi_counter|sload_path[21]\,
	sload_path_20 => \wysi_counter|sload_path[20]\,
	sload_path_19 => \wysi_counter|sload_path[19]\,
	sload_path_18 => \wysi_counter|sload_path[18]\,
	sload_path_17 => \wysi_counter|sload_path[17]\,
	sload_path_16 => \wysi_counter|sload_path[16]\,
	sload_path_151 => \wysi_counter|sload_path[15]~1\,
	sload_path_141 => \wysi_counter|sload_path[14]~1\,
	sload_path_131 => \wysi_counter|sload_path[13]~1\,
	sload_path_121 => \wysi_counter|sload_path[12]~1\,
	sload_path_111 => \wysi_counter|sload_path[11]~1\,
	sload_path_101 => \wysi_counter|sload_path[10]~1\,
	sload_path_91 => \wysi_counter|sload_path[9]~1\,
	sload_path_81 => \wysi_counter|sload_path[8]~1\,
	sload_path_71 => \wysi_counter|sload_path[7]~1\,
	sload_path_61 => \wysi_counter|sload_path[6]~1\,
	sload_path_51 => \wysi_counter|sload_path[5]~1\,
	sload_path_48 => \wysi_counter|sload_path[4]~1\,
	sload_path_310 => \wysi_counter|sload_path[3]~1\,
	sload_path_210 => \wysi_counter|sload_path[2]~1\,
	sload_path_110 => \wysi_counter|sload_path[1]~1\,
	sload_path_01 => \wysi_counter|sload_path[0]~1\,
	MASTERHWDATA_0 => \core|MASTERHWDATA[0]\,
	MASTERHWDATA_1 => \core|MASTERHWDATA[1]\,
	MASTERHWDATA_2 => \core|MASTERHWDATA[2]\,
	MASTERHWDATA_3 => \core|MASTERHWDATA[3]\,
	MASTERHWDATA_4 => \core|MASTERHWDATA[4]\,
	MASTERHWDATA_5 => \core|MASTERHWDATA[5]\,
	MASTERHWDATA_6 => \core|MASTERHWDATA[6]\,
	MASTERHWDATA_7 => \core|MASTERHWDATA[7]\,
	MASTERHWDATA_8 => \core|MASTERHWDATA[8]\,
	MASTERHWDATA_9 => \core|MASTERHWDATA[9]\,
	MASTERHWDATA_10 => \core|MASTERHWDATA[10]\,
	MASTERHWDATA_11 => \core|MASTERHWDATA[11]\,
	MASTERHWDATA_12 => \core|MASTERHWDATA[12]\,
	MASTERHWDATA_13 => \core|MASTERHWDATA[13]\,
	MASTERHWDATA_14 => \core|MASTERHWDATA[14]\,
	MASTERHWDATA_15 => \core|MASTERHWDATA[15]\,
	MASTERHWDATA_16 => \core|MASTERHWDATA[16]\,
	MASTERHWDATA_17 => \core|MASTERHWDATA[17]\,
	MASTERHWDATA_18 => \core|MASTERHWDATA[18]\,
	MASTERHWDATA_19 => \core|MASTERHWDATA[19]\,
	MASTERHWDATA_20 => \core|MASTERHWDATA[20]\,
	MASTERHWDATA_21 => \core|MASTERHWDATA[21]\,
	MASTERHWDATA_22 => \core|MASTERHWDATA[22]\,
	MASTERHWDATA_23 => \core|MASTERHWDATA[23]\,
	MASTERHWDATA_24 => \core|MASTERHWDATA[24]\,
	MASTERHWDATA_25 => \core|MASTERHWDATA[25]\,
	MASTERHWDATA_26 => \core|MASTERHWDATA[26]\,
	MASTERHWDATA_27 => \core|MASTERHWDATA[27]\,
	MASTERHWDATA_28 => \core|MASTERHWDATA[28]\,
	MASTERHWDATA_29 => \core|MASTERHWDATA[29]\,
	MASTERHWDATA_30 => \core|MASTERHWDATA[30]\,
	MASTERHWDATA_31 => \core|MASTERHWDATA[31]\,
	RST => \inst_ROC|RST~reg0\,
	reg_address_3 => \ahb_slave_inst|reg_address[3]~reg0\,
	reg_address_4 => \ahb_slave_inst|reg_address[4]~reg0\,
	reg_address_5 => \ahb_slave_inst|reg_address[5]~reg0\,
	reg_address_6 => \ahb_slave_inst|reg_address[6]~reg0\,
	reg_address_2 => \ahb_slave_inst|reg_address[2]~reg0\,
	comres_rcvd => \inst4|comres_rcvd~reg\,
	reg_address_12 => \ahb_slave_inst|reg_address[12]~reg0\,
	reg_address_13 => \ahb_slave_inst|reg_address[13]~reg0\,
	reg_address_14 => \ahb_slave_inst|reg_address[14]~reg0\,
	q_01 => \sram|q[0]\,
	reg_address_18 => \ahb_slave_inst|reg_address[18]~reg0\,
	reg_address_19 => \ahb_slave_inst|reg_address[19]~reg0\,
	q_02 => \sram|q[0]~1\,
	atwd0_timestamp_32 => \inst_atwd_timestamp|atwd0_timestamp[32]~reg0\,
	atwd0_timestamp_0 => \inst_atwd_timestamp|atwd0_timestamp[0]~reg0\,
	multiSPEcnt_0 => \inst_hit_counter|multiSPEcnt[0]~reg0\,
	atwd1_timestamp_0 => \inst_atwd_timestamp|atwd1_timestamp[0]~reg0\,
	oneSPEcnt_0 => \inst_hit_counter|oneSPEcnt[0]~reg0\,
	atwd1_timestamp_32 => \inst_atwd_timestamp|atwd1_timestamp[32]~reg0\,
	multiSPEcnt_01 => \inst_hit_counter_ff|multiSPEcnt[0]~reg0\,
	oneSPEcnt_01 => \inst_hit_counter_ff|oneSPEcnt[0]~reg0\,
	done => \inst_atwd_trigger|done~reg0\,
	op_6 => \inst6|op_6~350\,
	inst16_0 => \DC_Tx_chan_ap|inst16[0]\,
	q_03 => \sram|q[0]~2\,
	q_16 => \sram|q[1]\,
	atwd0_timestamp_33 => \inst_atwd_timestamp|atwd0_timestamp[33]~reg0\,
	atwd0_timestamp_1 => \inst_atwd_timestamp|atwd0_timestamp[1]~reg0\,
	multiSPEcnt_1 => \inst_hit_counter_ff|multiSPEcnt[1]~reg0\,
	atwd1_timestamp_1 => \inst_atwd_timestamp|atwd1_timestamp[1]~reg0\,
	oneSPEcnt_1 => \inst_hit_counter|oneSPEcnt[1]~reg0\,
	oneSPEcnt_11 => \inst_hit_counter_ff|oneSPEcnt[1]~reg0\,
	inst50 => \DC_Tx_chan_ap|inst50\,
	atwd1_timestamp_33 => \inst_atwd_timestamp|atwd1_timestamp[33]~reg0\,
	multiSPEcnt_11 => \inst_hit_counter|multiSPEcnt[1]~reg0\,
	inst16_1 => \DC_Tx_chan_ap|inst16[1]\,
	q_17 => \sram|q[1]~1\,
	q_18 => \sram|q[1]~2\,
	q_21 => \sram|q[2]\,
	q_22 => \sram|q[2]~1\,
	atwd0_timestamp_34 => \inst_atwd_timestamp|atwd0_timestamp[34]~reg0\,
	atwd0_timestamp_2 => \inst_atwd_timestamp|atwd0_timestamp[2]~reg0\,
	multiSPEcnt_2 => \inst_hit_counter_ff|multiSPEcnt[2]~reg0\,
	atwd1_timestamp_2 => \inst_atwd_timestamp|atwd1_timestamp[2]~reg0\,
	oneSPEcnt_2 => \inst_hit_counter|oneSPEcnt[2]~reg0\,
	oneSPEcnt_21 => \inst_hit_counter_ff|oneSPEcnt[2]~reg0\,
	reboot_gnt => \DC_CTRAP|reboot_gnt~reg\,
	atwd1_timestamp_34 => \inst_atwd_timestamp|atwd1_timestamp[34]~reg0\,
	multiSPEcnt_21 => \inst_hit_counter|multiSPEcnt[2]~reg0\,
	inst16_2 => \DC_Tx_chan_ap|inst16[2]\,
	q_23 => \sram|q[2]~2\,
	q_31 => \sram|q[3]\,
	atwd0_timestamp_35 => \inst_atwd_timestamp|atwd0_timestamp[35]~reg0\,
	atwd0_timestamp_3 => \inst_atwd_timestamp|atwd0_timestamp[3]~reg0\,
	multiSPEcnt_3 => \inst_hit_counter_ff|multiSPEcnt[3]~reg0\,
	atwd1_timestamp_3 => \inst_atwd_timestamp|atwd1_timestamp[3]~reg0\,
	oneSPEcnt_3 => \inst_hit_counter|oneSPEcnt[3]~reg0\,
	oneSPEcnt_31 => \inst_hit_counter_ff|oneSPEcnt[3]~reg0\,
	last_node_0 => \lpm_or_component|last_node[0]~15\,
	atwd1_timestamp_35 => \inst_atwd_timestamp|atwd1_timestamp[35]~reg0\,
	multiSPEcnt_31 => \inst_hit_counter|multiSPEcnt[3]~reg0\,
	inst16_3 => \DC_Tx_chan_ap|inst16[3]\,
	q_32 => \sram|q[3]~1\,
	q_33 => \sram|q[3]~2\,
	q_41 => \sram|q[4]\,
	q_42 => \sram|q[4]~1\,
	atwd0_timestamp_36 => \inst_atwd_timestamp|atwd0_timestamp[36]~reg0\,
	atwd0_timestamp_4 => \inst_atwd_timestamp|atwd0_timestamp[4]~reg0\,
	multiSPEcnt_4 => \inst_hit_counter_ff|multiSPEcnt[4]~reg0\,
	atwd1_timestamp_4 => \inst_atwd_timestamp|atwd1_timestamp[4]~reg0\,
	oneSPEcnt_4 => \inst_hit_counter|oneSPEcnt[4]~reg0\,
	oneSPEcnt_41 => \inst_hit_counter_ff|oneSPEcnt[4]~reg0\,
	atwd1_timestamp_36 => \inst_atwd_timestamp|atwd1_timestamp[36]~reg0\,
	multiSPEcnt_41 => \inst_hit_counter|multiSPEcnt[4]~reg0\,
	inst16_4 => \DC_Tx_chan_ap|inst16[4]\,
	q_43 => \sram|q[4]~2\,
	q_51 => \sram|q[5]\,
	atwd0_timestamp_37 => \inst_atwd_timestamp|atwd0_timestamp[37]~reg0\,
	atwd0_timestamp_5 => \inst_atwd_timestamp|atwd0_timestamp[5]~reg0\,
	multiSPEcnt_5 => \inst_hit_counter_ff|multiSPEcnt[5]~reg0\,
	atwd1_timestamp_5 => \inst_atwd_timestamp|atwd1_timestamp[5]~reg0\,
	oneSPEcnt_5 => \inst_hit_counter|oneSPEcnt[5]~reg0\,
	oneSPEcnt_51 => \inst_hit_counter_ff|oneSPEcnt[5]~reg0\,
	op_61 => \inst24|op_6~324\,
	atwd1_timestamp_37 => \inst_atwd_timestamp|atwd1_timestamp[37]~reg0\,
	multiSPEcnt_51 => \inst_hit_counter|multiSPEcnt[5]~reg0\,
	inst16_5 => \DC_Tx_chan_ap|inst16[5]\,
	q_52 => \sram|q[5]~1\,
	q_53 => \sram|q[5]~2\,
	q_61 => \sram|q[6]\,
	q_62 => \sram|q[6]~1\,
	atwd0_timestamp_38 => \inst_atwd_timestamp|atwd0_timestamp[38]~reg0\,
	atwd0_timestamp_6 => \inst_atwd_timestamp|atwd0_timestamp[6]~reg0\,
	multiSPEcnt_6 => \inst_hit_counter_ff|multiSPEcnt[6]~reg0\,
	atwd1_timestamp_6 => \inst_atwd_timestamp|atwd1_timestamp[6]~reg0\,
	oneSPEcnt_6 => \inst_hit_counter|oneSPEcnt[6]~reg0\,
	oneSPEcnt_61 => \inst_hit_counter_ff|oneSPEcnt[6]~reg0\,
	com_avail => \DC_CTRAP|com_avail~reg\,
	atwd1_timestamp_38 => \inst_atwd_timestamp|atwd1_timestamp[38]~reg0\,
	multiSPEcnt_61 => \inst_hit_counter|multiSPEcnt[6]~reg0\,
	inst16_6 => \DC_Tx_chan_ap|inst16[6]\,
	q_63 => \sram|q[6]~2\,
	q_71 => \sram|q[7]\,
	atwd0_timestamp_39 => \inst_atwd_timestamp|atwd0_timestamp[39]~reg0\,
	atwd0_timestamp_7 => \inst_atwd_timestamp|atwd0_timestamp[7]~reg0\,
	multiSPEcnt_7 => \inst_hit_counter_ff|multiSPEcnt[7]~reg0\,
	atwd1_timestamp_7 => \inst_atwd_timestamp|atwd1_timestamp[7]~reg0\,
	oneSPEcnt_7 => \inst_hit_counter|oneSPEcnt[7]~reg0\,
	oneSPEcnt_71 => \inst_hit_counter_ff|oneSPEcnt[7]~reg0\,
	inst16_7 => \DC_Tx_chan_ap|inst16[7]\,
	atwd1_timestamp_39 => \inst_atwd_timestamp|atwd1_timestamp[39]~reg0\,
	multiSPEcnt_71 => \inst_hit_counter|multiSPEcnt[7]~reg0\,
	q_72 => \sram|q[7]~1\,
	q_73 => \sram|q[7]~2\,
	q_81 => \sram|q[8]\,
	q_82 => \sram|q[8]~1\,
	FF_down_a => \inst_coinc|FF_down_a\,
	atwd0_timestamp_40 => \inst_atwd_timestamp|atwd0_timestamp[40]~reg0\,
	atwd0_timestamp_8 => \inst_atwd_timestamp|atwd0_timestamp[8]~reg0\,
	multiSPEcnt_8 => \inst_hit_counter|multiSPEcnt[8]~reg0\,
	done1 => \inst_atwd_trigger|done~reg0_1\,
	atwd1_timestamp_40 => \inst_atwd_timestamp|atwd1_timestamp[40]~reg0\,
	oneSPEcnt_8 => \inst_hit_counter_ff|oneSPEcnt[8]~reg0\,
	oneSPEcnt_81 => \inst_hit_counter|oneSPEcnt[8]~reg0\,
	atwd1_timestamp_8 => \inst_atwd_timestamp|atwd1_timestamp[8]~reg0\,
	inst16_8 => \DC_Tx_chan_ap|inst16[8]\,
	multiSPEcnt_81 => \inst_hit_counter_ff|multiSPEcnt[8]~reg0\,
	q_83 => \sram|q[8]~2\,
	q_91 => \sram|q[9]\,
	FF_down_abar => \inst_coinc|FF_down_abar\,
	atwd0_timestamp_41 => \inst_atwd_timestamp|atwd0_timestamp[41]~reg0\,
	atwd0_timestamp_9 => \inst_atwd_timestamp|atwd0_timestamp[9]~reg0\,
	multiSPEcnt_9 => \inst_hit_counter_ff|multiSPEcnt[9]~reg0\,
	atwd1_timestamp_9 => \inst_atwd_timestamp|atwd1_timestamp[9]~reg0\,
	oneSPEcnt_9 => \inst_hit_counter|oneSPEcnt[9]~reg0\,
	oneSPEcnt_91 => \inst_hit_counter_ff|oneSPEcnt[9]~reg0\,
	inst16_9 => \DC_Tx_chan_ap|inst16[9]\,
	atwd1_timestamp_41 => \inst_atwd_timestamp|atwd1_timestamp[41]~reg0\,
	multiSPEcnt_91 => \inst_hit_counter|multiSPEcnt[9]~reg0\,
	q_92 => \sram|q[9]~1\,
	q_93 => \sram|q[9]~2\,
	q_101 => \sram|q[10]\,
	q_102 => \sram|q[10]~1\,
	FF_down_b => \inst_coinc|FF_down_b\,
	atwd0_timestamp_42 => \inst_atwd_timestamp|atwd0_timestamp[42]~reg0\,
	atwd0_timestamp_10 => \inst_atwd_timestamp|atwd0_timestamp[10]~reg0\,
	multiSPEcnt_10 => \inst_hit_counter_ff|multiSPEcnt[10]~reg0\,
	atwd1_timestamp_10 => \inst_atwd_timestamp|atwd1_timestamp[10]~reg0\,
	oneSPEcnt_10 => \inst_hit_counter|oneSPEcnt[10]~reg0\,
	oneSPEcnt_101 => \inst_hit_counter_ff|oneSPEcnt[10]~reg0\,
	inst16_10 => \DC_Tx_chan_ap|inst16[10]\,
	atwd1_timestamp_42 => \inst_atwd_timestamp|atwd1_timestamp[42]~reg0\,
	multiSPEcnt_101 => \inst_hit_counter|multiSPEcnt[10]~reg0\,
	q_103 => \sram|q[10]~2\,
	q_111 => \sram|q[11]\,
	FF_down_bbar => \inst_coinc|FF_down_bbar\,
	atwd0_timestamp_43 => \inst_atwd_timestamp|atwd0_timestamp[43]~reg0\,
	atwd0_timestamp_11 => \inst_atwd_timestamp|atwd0_timestamp[11]~reg0\,
	multiSPEcnt_111 => \inst_hit_counter_ff|multiSPEcnt[11]~reg0\,
	atwd1_timestamp_11 => \inst_atwd_timestamp|atwd1_timestamp[11]~reg0\,
	oneSPEcnt_111 => \inst_hit_counter|oneSPEcnt[11]~reg0\,
	oneSPEcnt_112 => \inst_hit_counter_ff|oneSPEcnt[11]~reg0\,
	inst16_11 => \DC_Tx_chan_ap|inst16[11]\,
	atwd1_timestamp_43 => \inst_atwd_timestamp|atwd1_timestamp[43]~reg0\,
	multiSPEcnt_112 => \inst_hit_counter|multiSPEcnt[11]~reg0\,
	q_112 => \sram|q[11]~1\,
	q_113 => \sram|q[11]~2\,
	q_121 => \sram|q[12]\,
	q_122 => \sram|q[12]~1\,
	FF_up_a => \inst_coinc|FF_up_a\,
	atwd0_timestamp_44 => \inst_atwd_timestamp|atwd0_timestamp[44]~reg0\,
	atwd0_timestamp_12 => \inst_atwd_timestamp|atwd0_timestamp[12]~reg0\,
	multiSPEcnt_12 => \inst_hit_counter_ff|multiSPEcnt[12]~reg0\,
	atwd1_timestamp_12 => \inst_atwd_timestamp|atwd1_timestamp[12]~reg0\,
	oneSPEcnt_12 => \inst_hit_counter|oneSPEcnt[12]~reg0\,
	oneSPEcnt_121 => \inst_hit_counter_ff|oneSPEcnt[12]~reg0\,
	inst16_12 => \DC_Tx_chan_ap|inst16[12]\,
	atwd1_timestamp_44 => \inst_atwd_timestamp|atwd1_timestamp[44]~reg0\,
	multiSPEcnt_121 => \inst_hit_counter|multiSPEcnt[12]~reg0\,
	q_123 => \sram|q[12]~2\,
	q_131 => \sram|q[13]\,
	FF_up_abar => \inst_coinc|FF_up_abar\,
	atwd0_timestamp_45 => \inst_atwd_timestamp|atwd0_timestamp[45]~reg0\,
	atwd0_timestamp_13 => \inst_atwd_timestamp|atwd0_timestamp[13]~reg0\,
	multiSPEcnt_13 => \inst_hit_counter_ff|multiSPEcnt[13]~reg0\,
	atwd1_timestamp_13 => \inst_atwd_timestamp|atwd1_timestamp[13]~reg0\,
	oneSPEcnt_13 => \inst_hit_counter|oneSPEcnt[13]~reg0\,
	oneSPEcnt_131 => \inst_hit_counter_ff|oneSPEcnt[13]~reg0\,
	inst16_13 => \DC_Tx_chan_ap|inst16[13]\,
	atwd1_timestamp_45 => \inst_atwd_timestamp|atwd1_timestamp[45]~reg0\,
	multiSPEcnt_131 => \inst_hit_counter|multiSPEcnt[13]~reg0\,
	q_132 => \sram|q[13]~1\,
	q_133 => \sram|q[13]~2\,
	q_141 => \sram|q[14]\,
	q_142 => \sram|q[14]~1\,
	FF_up_b => \inst_coinc|FF_up_b\,
	atwd0_timestamp_46 => \inst_atwd_timestamp|atwd0_timestamp[46]~reg0\,
	atwd0_timestamp_14 => \inst_atwd_timestamp|atwd0_timestamp[14]~reg0\,
	multiSPEcnt_14 => \inst_hit_counter_ff|multiSPEcnt[14]~reg0\,
	atwd1_timestamp_14 => \inst_atwd_timestamp|atwd1_timestamp[14]~reg0\,
	oneSPEcnt_14 => \inst_hit_counter|oneSPEcnt[14]~reg0\,
	oneSPEcnt_141 => \inst_hit_counter_ff|oneSPEcnt[14]~reg0\,
	inst16_14 => \DC_Tx_chan_ap|inst16[14]\,
	atwd1_timestamp_46 => \inst_atwd_timestamp|atwd1_timestamp[46]~reg0\,
	multiSPEcnt_141 => \inst_hit_counter|multiSPEcnt[14]~reg0\,
	q_143 => \sram|q[14]~2\,
	q_151 => \sram|q[15]\,
	FF_up_bbar => \inst_coinc|FF_up_bbar\,
	atwd0_timestamp_47 => \inst_atwd_timestamp|atwd0_timestamp[47]~reg0\,
	atwd0_timestamp_15 => \inst_atwd_timestamp|atwd0_timestamp[15]~reg0\,
	multiSPEcnt_15 => \inst_hit_counter_ff|multiSPEcnt[15]~reg0\,
	atwd1_timestamp_15 => \inst_atwd_timestamp|atwd1_timestamp[15]~reg0\,
	oneSPEcnt_15 => \inst_hit_counter|oneSPEcnt[15]~reg0\,
	oneSPEcnt_151 => \inst_hit_counter_ff|oneSPEcnt[15]~reg0\,
	inst16_15 => \DC_Tx_chan_ap|inst16[15]\,
	atwd1_timestamp_47 => \inst_atwd_timestamp|atwd1_timestamp[47]~reg0\,
	multiSPEcnt_151 => \inst_hit_counter|multiSPEcnt[15]~reg0\,
	q_152 => \sram|q[15]~1\,
	q_153 => \sram|q[15]~2\,
	atwd1_timestamp_16 => \inst_atwd_timestamp|atwd1_timestamp[16]~reg0\,
	atwd0_timestamp_16 => \inst_atwd_timestamp|atwd0_timestamp[16]~reg0\,
	atwd1_timestamp_17 => \inst_atwd_timestamp|atwd1_timestamp[17]~reg0\,
	atwd0_timestamp_17 => \inst_atwd_timestamp|atwd0_timestamp[17]~reg0\,
	atwd1_timestamp_18 => \inst_atwd_timestamp|atwd1_timestamp[18]~reg0\,
	atwd0_timestamp_18 => \inst_atwd_timestamp|atwd0_timestamp[18]~reg0\,
	atwd1_timestamp_19 => \inst_atwd_timestamp|atwd1_timestamp[19]~reg0\,
	atwd0_timestamp_19 => \inst_atwd_timestamp|atwd0_timestamp[19]~reg0\,
	atwd1_timestamp_20 => \inst_atwd_timestamp|atwd1_timestamp[20]~reg0\,
	atwd0_timestamp_20 => \inst_atwd_timestamp|atwd0_timestamp[20]~reg0\,
	atwd1_timestamp_21 => \inst_atwd_timestamp|atwd1_timestamp[21]~reg0\,
	atwd0_timestamp_21 => \inst_atwd_timestamp|atwd0_timestamp[21]~reg0\,
	atwd1_timestamp_22 => \inst_atwd_timestamp|atwd1_timestamp[22]~reg0\,
	atwd0_timestamp_22 => \inst_atwd_timestamp|atwd0_timestamp[22]~reg0\,
	atwd1_timestamp_23 => \inst_atwd_timestamp|atwd1_timestamp[23]~reg0\,
	atwd0_timestamp_23 => \inst_atwd_timestamp|atwd0_timestamp[23]~reg0\,
	atwd1_timestamp_24 => \inst_atwd_timestamp|atwd1_timestamp[24]~reg0\,
	atwd0_timestamp_24 => \inst_atwd_timestamp|atwd0_timestamp[24]~reg0\,
	atwd1_timestamp_25 => \inst_atwd_timestamp|atwd1_timestamp[25]~reg0\,
	atwd0_timestamp_25 => \inst_atwd_timestamp|atwd0_timestamp[25]~reg0\,
	atwd1_timestamp_26 => \inst_atwd_timestamp|atwd1_timestamp[26]~reg0\,
	atwd0_timestamp_26 => \inst_atwd_timestamp|atwd0_timestamp[26]~reg0\,
	atwd1_timestamp_27 => \inst_atwd_timestamp|atwd1_timestamp[27]~reg0\,
	atwd0_timestamp_27 => \inst_atwd_timestamp|atwd0_timestamp[27]~reg0\,
	atwd1_timestamp_28 => \inst_atwd_timestamp|atwd1_timestamp[28]~reg0\,
	atwd0_timestamp_28 => \inst_atwd_timestamp|atwd0_timestamp[28]~reg0\,
	atwd1_timestamp_29 => \inst_atwd_timestamp|atwd1_timestamp[29]~reg0\,
	atwd0_timestamp_29 => \inst_atwd_timestamp|atwd0_timestamp[29]~reg0\,
	atwd1_timestamp_30 => \inst_atwd_timestamp|atwd1_timestamp[30]~reg0\,
	atwd0_timestamp_30 => \inst_atwd_timestamp|atwd0_timestamp[30]~reg0\,
	atwd1_timestamp_31 => \inst_atwd_timestamp|atwd1_timestamp[31]~reg0\,
	atwd0_timestamp_31 => \inst_atwd_timestamp|atwd0_timestamp[31]~reg0\,
	reg_enable => \ahb_slave_inst|reg_enable~reg0\,
	reg_write => \ahb_slave_inst|reg_write~reg0\,
	reg_address_15 => \ahb_slave_inst|reg_address[15]~reg0\,
	reg_address_7 => \ahb_slave_inst|reg_address[7]~reg0\,
	reg_address_8 => \ahb_slave_inst|reg_address[8]~reg0\,
	done2 => \inst_flash_ADC|done~reg0\,
	COINC_DOWN_A => \COINC_DOWN_A~combout\,
	COINC_DOWN_ABAR => \COINC_DOWN_ABAR~combout\,
	COINC_DOWN_B => \COINC_DOWN_B~combout\,
	COINC_DOWN_BBAR => \COINC_DOWN_BBAR~combout\,
	COINC_UP_A => \COINC_UP_A~combout\,
	COINC_UP_ABAR => \COINC_UP_ABAR~combout\,
	COINC_UP_B => \COINC_UP_B~combout\,
	COINC_UP_BBAR => \COINC_UP_BBAR~combout\,
	FL_ATTN => \FL_ATTN~combout\,
	FL_TDO => \FL_TDO~combout\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	command_2_local_26 => \slaveregister_inst|command_2_local[26]\,
	com_ctrl_local_2 => \slaveregister_inst|com_ctrl_local[2]\,
	reg_rdata_0 => \slaveregister_inst|reg_rdata[0]~reg0\,
	reg_rdata_1 => \slaveregister_inst|reg_rdata[1]~reg0\,
	reg_rdata_2 => \slaveregister_inst|reg_rdata[2]~reg0\,
	reg_rdata_3 => \slaveregister_inst|reg_rdata[3]~reg0\,
	reg_rdata_4 => \slaveregister_inst|reg_rdata[4]~reg0\,
	reg_rdata_5 => \slaveregister_inst|reg_rdata[5]~reg0\,
	reg_rdata_6 => \slaveregister_inst|reg_rdata[6]~reg0\,
	reg_rdata_7 => \slaveregister_inst|reg_rdata[7]~reg0\,
	reg_rdata_8 => \slaveregister_inst|reg_rdata[8]~reg0\,
	reg_rdata_9 => \slaveregister_inst|reg_rdata[9]~reg0\,
	reg_rdata_10 => \slaveregister_inst|reg_rdata[10]~reg0\,
	reg_rdata_11 => \slaveregister_inst|reg_rdata[11]~reg0\,
	reg_rdata_12 => \slaveregister_inst|reg_rdata[12]~reg0\,
	reg_rdata_13 => \slaveregister_inst|reg_rdata[13]~reg0\,
	reg_rdata_14 => \slaveregister_inst|reg_rdata[14]~reg0\,
	reg_rdata_15 => \slaveregister_inst|reg_rdata[15]~reg0\,
	reg_rdata_16 => \slaveregister_inst|reg_rdata[16]~reg0\,
	reg_rdata_17 => \slaveregister_inst|reg_rdata[17]~reg0\,
	reg_rdata_18 => \slaveregister_inst|reg_rdata[18]~reg0\,
	reg_rdata_19 => \slaveregister_inst|reg_rdata[19]~reg0\,
	reg_rdata_20 => \slaveregister_inst|reg_rdata[20]~reg0\,
	reg_rdata_21 => \slaveregister_inst|reg_rdata[21]~reg0\,
	reg_rdata_22 => \slaveregister_inst|reg_rdata[22]~reg0\,
	reg_rdata_23 => \slaveregister_inst|reg_rdata[23]~reg0\,
	reg_rdata_24 => \slaveregister_inst|reg_rdata[24]~reg0\,
	reg_rdata_25 => \slaveregister_inst|reg_rdata[25]~reg0\,
	reg_rdata_26 => \slaveregister_inst|reg_rdata[26]~reg0\,
	reg_rdata_27 => \slaveregister_inst|reg_rdata[27]~reg0\,
	reg_rdata_28 => \slaveregister_inst|reg_rdata[28]~reg0\,
	reg_rdata_29 => \slaveregister_inst|reg_rdata[29]~reg0\,
	reg_rdata_30 => \slaveregister_inst|reg_rdata[30]~reg0\,
	reg_rdata_31 => \slaveregister_inst|reg_rdata[31]~reg0\,
	command_2_local_12 => \slaveregister_inst|command_2_local[12]\,
	command_2_local_13 => \slaveregister_inst|command_2_local[13]\,
	command_2_local_14 => \slaveregister_inst|command_2_local[14]\,
	command_2_local_15 => \slaveregister_inst|command_2_local[15]\,
	command_2_local_28 => \slaveregister_inst|command_2_local[28]\,
	command_2_local_31 => \slaveregister_inst|command_2_local[31]\,
	command_2_local_29 => \slaveregister_inst|command_2_local[29]\,
	command_2_local_30 => \slaveregister_inst|command_2_local[30]\,
	i3329 => \slaveregister_inst|i3329~33\,
	rx_dpr_radr_local_0 => \slaveregister_inst|rx_dpr_radr_local[0]\,
	command_2_local_0 => \slaveregister_inst|command_2_local[0]\,
	command_4_local_0 => \slaveregister_inst|command_4_local[0]\,
	command_0_local_0 => \slaveregister_inst|command_0_local[0]\,
	tx_dpr_wadr_local_0 => \slaveregister_inst|tx_dpr_wadr_local[0]\,
	rx_dpr_radr_local_1 => \slaveregister_inst|rx_dpr_radr_local[1]\,
	command_2_local_1 => \slaveregister_inst|command_2_local[1]\,
	tx_dpr_wadr_local_1 => \slaveregister_inst|tx_dpr_wadr_local[1]\,
	command_0_local_1 => \slaveregister_inst|command_0_local[1]\,
	command_4_local_1 => \slaveregister_inst|command_4_local[1]\,
	rx_dpr_radr_local_2 => \slaveregister_inst|rx_dpr_radr_local[2]\,
	tx_dpr_wadr_local_2 => \slaveregister_inst|tx_dpr_wadr_local[2]\,
	command_0_local_2 => \slaveregister_inst|command_0_local[2]\,
	command_4_local_2 => \slaveregister_inst|command_4_local[2]\,
	rx_dpr_radr_local_3 => \slaveregister_inst|rx_dpr_radr_local[3]\,
	tx_dpr_wadr_local_3 => \slaveregister_inst|tx_dpr_wadr_local[3]\,
	command_0_local_3 => \slaveregister_inst|command_0_local[3]\,
	command_4_local_3 => \slaveregister_inst|command_4_local[3]\,
	rx_dpr_radr_local_4 => \slaveregister_inst|rx_dpr_radr_local[4]\,
	tx_dpr_wadr_local_4 => \slaveregister_inst|tx_dpr_wadr_local[4]\,
	rx_dpr_radr_local_5 => \slaveregister_inst|rx_dpr_radr_local[5]\,
	tx_dpr_wadr_local_5 => \slaveregister_inst|tx_dpr_wadr_local[5]\,
	rx_dpr_radr_local_6 => \slaveregister_inst|rx_dpr_radr_local[6]\,
	tx_dpr_wadr_local_6 => \slaveregister_inst|tx_dpr_wadr_local[6]\,
	rx_dpr_radr_local_7 => \slaveregister_inst|rx_dpr_radr_local[7]\,
	tx_dpr_wadr_local_7 => \slaveregister_inst|tx_dpr_wadr_local[7]\,
	command_2_local_8 => \slaveregister_inst|command_2_local[8]\,
	rx_dpr_radr_local_8 => \slaveregister_inst|rx_dpr_radr_local[8]\,
	command_4_local_8 => \slaveregister_inst|command_4_local[8]\,
	tx_dpr_wadr_local_8 => \slaveregister_inst|tx_dpr_wadr_local[8]\,
	command_0_local_8 => \slaveregister_inst|command_0_local[8]\,
	command_2_local_9 => \slaveregister_inst|command_2_local[9]\,
	rx_dpr_radr_local_9 => \slaveregister_inst|rx_dpr_radr_local[9]\,
	tx_dpr_wadr_local_9 => \slaveregister_inst|tx_dpr_wadr_local[9]\,
	command_0_local_9 => \slaveregister_inst|command_0_local[9]\,
	command_2_local_10 => \slaveregister_inst|command_2_local[10]\,
	rx_dpr_radr_local_10 => \slaveregister_inst|rx_dpr_radr_local[10]\,
	tx_dpr_wadr_local_10 => \slaveregister_inst|tx_dpr_wadr_local[10]\,
	command_0_local_10 => \slaveregister_inst|command_0_local[10]\,
	command_2_local_11 => \slaveregister_inst|command_2_local[11]\,
	rx_dpr_radr_local_11 => \slaveregister_inst|rx_dpr_radr_local[11]\,
	tx_dpr_wadr_local_11 => \slaveregister_inst|tx_dpr_wadr_local[11]\,
	command_0_local_11 => \slaveregister_inst|command_0_local[11]\,
	rx_dpr_radr_local_12 => \slaveregister_inst|rx_dpr_radr_local[12]\,
	tx_dpr_wadr_local_12 => \slaveregister_inst|tx_dpr_wadr_local[12]\,
	command_4_local_12 => \slaveregister_inst|command_4_local[12]\,
	rx_dpr_radr_local_13 => \slaveregister_inst|rx_dpr_radr_local[13]\,
	tx_dpr_wadr_local_13 => \slaveregister_inst|tx_dpr_wadr_local[13]\,
	command_4_local_13 => \slaveregister_inst|command_4_local[13]\,
	rx_dpr_radr_local_14 => \slaveregister_inst|rx_dpr_radr_local[14]\,
	tx_dpr_wadr_local_14 => \slaveregister_inst|tx_dpr_wadr_local[14]\,
	command_4_local_14 => \slaveregister_inst|command_4_local[14]\,
	rx_dpr_radr_local_15 => \slaveregister_inst|rx_dpr_radr_local[15]\,
	tx_dpr_wadr_local_15 => \slaveregister_inst|tx_dpr_wadr_local[15]\,
	command_0_local_15 => \slaveregister_inst|command_0_local[15]\,
	command_4_local_15 => \slaveregister_inst|command_4_local[15]\,
	i => \slaveregister_inst|i~14641\,
	command_1_local_16 => \slaveregister_inst|command_1_local[16]\,
	command_0_local_16 => \slaveregister_inst|command_0_local[16]\,
	command_1_local_17 => \slaveregister_inst|command_1_local[17]\,
	command_0_local_17 => \slaveregister_inst|command_0_local[17]\,
	command_1_local_18 => \slaveregister_inst|command_1_local[18]\,
	command_1_local_19 => \slaveregister_inst|command_1_local[19]\,
	command_2_local_24 => \slaveregister_inst|command_2_local[24]\,
	command_0_local_24 => \slaveregister_inst|command_0_local[24]\,
	command_0_local_26 => \slaveregister_inst|command_0_local[26]\,
	command_0_local_28 => \slaveregister_inst|command_0_local[28]\,
	command_0_local_30 => \slaveregister_inst|command_0_local[30]\,
	i33291 => \slaveregister_inst|i3329~34\,
	i3335 => \slaveregister_inst|i3335~16\,
	dom_id_48 => \slaveregister_inst|dom_id[48]~231\,
	i33351 => \slaveregister_inst|i3335~17\,
	tx_pack_rdy => \slaveregister_inst|tx_pack_rdy~reg0\,
	i3342 => \slaveregister_inst|i3342~15\,
	rx_dpr_radr_stb => \slaveregister_inst|rx_dpr_radr_stb~reg0\,
	dom_id_481 => \slaveregister_inst|dom_id[48]~reg0\,
	dom_id_0 => \slaveregister_inst|dom_id[0]~reg0\,
	dom_id_1 => \slaveregister_inst|dom_id[1]~reg0\,
	dom_id_2 => \slaveregister_inst|dom_id[2]~reg0\,
	dom_id_3 => \slaveregister_inst|dom_id[3]~reg0\,
	dom_id_4 => \slaveregister_inst|dom_id[4]~reg0\,
	dom_id_5 => \slaveregister_inst|dom_id[5]~reg0\,
	dom_id_6 => \slaveregister_inst|dom_id[6]~reg0\,
	dom_id_7 => \slaveregister_inst|dom_id[7]~reg0\,
	dom_id_8 => \slaveregister_inst|dom_id[8]~reg0\,
	dom_id_9 => \slaveregister_inst|dom_id[9]~reg0\,
	dom_id_10 => \slaveregister_inst|dom_id[10]~reg0\,
	dom_id_11 => \slaveregister_inst|dom_id[11]~reg0\,
	dom_id_12 => \slaveregister_inst|dom_id[12]~reg0\,
	dom_id_13 => \slaveregister_inst|dom_id[13]~reg0\,
	dom_id_14 => \slaveregister_inst|dom_id[14]~reg0\,
	dom_id_15 => \slaveregister_inst|dom_id[15]~reg0\,
	dom_id_16 => \slaveregister_inst|dom_id[16]~reg0\,
	dom_id_17 => \slaveregister_inst|dom_id[17]~reg0\,
	dom_id_18 => \slaveregister_inst|dom_id[18]~reg0\,
	dom_id_19 => \slaveregister_inst|dom_id[19]~reg0\,
	dom_id_20 => \slaveregister_inst|dom_id[20]~reg0\,
	dom_id_21 => \slaveregister_inst|dom_id[21]~reg0\,
	dom_id_22 => \slaveregister_inst|dom_id[22]~reg0\,
	dom_id_23 => \slaveregister_inst|dom_id[23]~reg0\,
	dom_id_24 => \slaveregister_inst|dom_id[24]~reg0\,
	dom_id_25 => \slaveregister_inst|dom_id[25]~reg0\,
	dom_id_26 => \slaveregister_inst|dom_id[26]~reg0\,
	dom_id_27 => \slaveregister_inst|dom_id[27]~reg0\,
	dom_id_28 => \slaveregister_inst|dom_id[28]~reg0\,
	dom_id_29 => \slaveregister_inst|dom_id[29]~reg0\,
	dom_id_30 => \slaveregister_inst|dom_id[30]~reg0\,
	dom_id_31 => \slaveregister_inst|dom_id[31]~reg0\,
	dom_id_32 => \slaveregister_inst|dom_id[32]~reg0\,
	dom_id_33 => \slaveregister_inst|dom_id[33]~reg0\,
	dom_id_34 => \slaveregister_inst|dom_id[34]~reg0\,
	dom_id_35 => \slaveregister_inst|dom_id[35]~reg0\,
	dom_id_36 => \slaveregister_inst|dom_id[36]~reg0\,
	dom_id_37 => \slaveregister_inst|dom_id[37]~reg0\,
	dom_id_38 => \slaveregister_inst|dom_id[38]~reg0\,
	dom_id_39 => \slaveregister_inst|dom_id[39]~reg0\,
	dom_id_40 => \slaveregister_inst|dom_id[40]~reg0\,
	dom_id_41 => \slaveregister_inst|dom_id[41]~reg0\,
	dom_id_42 => \slaveregister_inst|dom_id[42]~reg0\,
	dom_id_43 => \slaveregister_inst|dom_id[43]~reg0\,
	dom_id_44 => \slaveregister_inst|dom_id[44]~reg0\,
	dom_id_45 => \slaveregister_inst|dom_id[45]~reg0\,
	dom_id_46 => \slaveregister_inst|dom_id[46]~reg0\,
	dom_id_47 => \slaveregister_inst|dom_id[47]~reg0\);
inst_flash_ADC : flash_ADC
PORT MAP (
	CLK => \altclklock_component|outclock1~1\,
	MASTERHWDATA_0 => \core|MASTERHWDATA[0]\,
	MASTERHWDATA_1 => \core|MASTERHWDATA[1]\,
	MASTERHWDATA_2 => \core|MASTERHWDATA[2]\,
	MASTERHWDATA_3 => \core|MASTERHWDATA[3]\,
	MASTERHWDATA_4 => \core|MASTERHWDATA[4]\,
	MASTERHWDATA_5 => \core|MASTERHWDATA[5]\,
	MASTERHWDATA_6 => \core|MASTERHWDATA[6]\,
	MASTERHWDATA_7 => \core|MASTERHWDATA[7]\,
	MASTERHWDATA_8 => \core|MASTERHWDATA[8]\,
	MASTERHWDATA_9 => \core|MASTERHWDATA[9]\,
	MASTERHWDATA_10 => \core|MASTERHWDATA[10]\,
	MASTERHWDATA_11 => \core|MASTERHWDATA[11]\,
	MASTERHWDATA_12 => \core|MASTERHWDATA[12]\,
	MASTERHWDATA_13 => \core|MASTERHWDATA[13]\,
	MASTERHWDATA_14 => \core|MASTERHWDATA[14]\,
	MASTERHWDATA_15 => \core|MASTERHWDATA[15]\,
	RST => \inst_ROC|RST~reg0\,
	reg_address_3 => \ahb_slave_inst|reg_address[3]~reg0\,
	reg_address_4 => \ahb_slave_inst|reg_address[4]~reg0\,
	reg_address_5 => \ahb_slave_inst|reg_address[5]~reg0\,
	reg_address_6 => \ahb_slave_inst|reg_address[6]~reg0\,
	reg_address_2 => \ahb_slave_inst|reg_address[2]~reg0\,
	reg_address_13 => \ahb_slave_inst|reg_address[13]~reg0\,
	i3329 => \slaveregister_inst|i3329~33\,
	i => \slaveregister_inst|i~14641\,
	command_0_local_16 => \slaveregister_inst|command_0_local[16]\,
	enable_disc => \slaveregister_inst|command_0_local[17]\,
	i33291 => \slaveregister_inst|i3329~34\,
	reg_address_7 => \ahb_slave_inst|reg_address[7]~reg0\,
	reg_address_8 => \ahb_slave_inst|reg_address[8]~reg0\,
	reg_address_9 => \ahb_slave_inst|reg_address[9]~reg0\,
	reg_address_10 => \ahb_slave_inst|reg_address[10]~reg0\,
	OneSPE => \OneSPE~combout\,
	FLASH_AD_D_0 => \FLASH_AD_D[0]~combout\,
	FLASH_AD_D_1 => \FLASH_AD_D[1]~combout\,
	FLASH_AD_D_2 => \FLASH_AD_D[2]~combout\,
	FLASH_AD_D_3 => \FLASH_AD_D[3]~combout\,
	FLASH_AD_D_4 => \FLASH_AD_D[4]~combout\,
	FLASH_AD_D_5 => \FLASH_AD_D[5]~combout\,
	FLASH_AD_D_6 => \FLASH_AD_D[6]~combout\,
	FLASH_AD_D_7 => \FLASH_AD_D[7]~combout\,
	FLASH_AD_D_8 => \FLASH_AD_D[8]~combout\,
	FLASH_AD_D_9 => \FLASH_AD_D[9]~combout\,
	FLASH_NCO => \FLASH_NCO~combout\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	q_0 => \sram|q[0]\,
	q_1 => \sram|q[1]\,
	q_2 => \sram|q[2]\,
	q_3 => \sram|q[3]\,
	q_4 => \sram|q[4]\,
	q_5 => \sram|q[5]\,
	q_6 => \sram|q[6]\,
	q_7 => \sram|q[7]\,
	q_8 => \sram|q[8]\,
	q_9 => \sram|q[9]\,
	q_10 => \sram|q[10]\,
	q_11 => \sram|q[11]\,
	q_12 => \sram|q[12]\,
	q_13 => \sram|q[13]\,
	q_14 => \sram|q[14]\,
	q_15 => \sram|q[15]\,
	done => \inst_flash_ADC|done~reg0\);
inst_fe_testpulse : fe_testpulse
PORT MAP (
	CLK => \altclklock_component|outclock0\,
	RST => \inst_ROC|RST~reg0\,
	command_1_local_16 => \slaveregister_inst|command_1_local[16]\,
	command_1_local_17 => \slaveregister_inst|command_1_local[17]\,
	command_1_local_18 => \slaveregister_inst|command_1_local[18]\,
	command_1_local_19 => \slaveregister_inst|command_1_local[19]\,
	command_0_local_24 => \slaveregister_inst|command_0_local[24]\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	FE_TEST_PULSE => \inst_fe_testpulse|FE_TEST_PULSE~reg0\);
inst_single_led : single_led
PORT MAP (
	CLK => \altclklock_component|outclock0\,
	RST => \inst_ROC|RST~reg0\,
	command_0_local_26 => \slaveregister_inst|command_0_local[26]\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	SingleLED_TRIGGER => \inst_single_led|SingleLED_TRIGGER~reg0\,
	LEDdelay_0 => \inst_single_led|LEDdelay[0]\);
inst_coinc : coinc
PORT MAP (
	CLK => \altclklock_component|outclock0\,
	RST => \inst_ROC|RST~reg0\,
	coinc_latch => ww_inst_coinc_coinc_latch,
	command_2_local_0 => \slaveregister_inst|command_2_local[0]\,
	command_2_local_1 => \slaveregister_inst|command_2_local[1]\,
	command_2_local_8 => \slaveregister_inst|command_2_local[8]\,
	command_2_local_9 => \slaveregister_inst|command_2_local[9]\,
	command_2_local_10 => \slaveregister_inst|command_2_local[10]\,
	command_2_local_11 => \slaveregister_inst|command_2_local[11]\,
	COINC_DOWN_A => \COINC_DOWN_A~combout\,
	COINC_DOWN_ABAR => \COINC_DOWN_ABAR~combout\,
	COINC_DOWN_B => \COINC_DOWN_B~combout\,
	COINC_DOWN_BBAR => \COINC_DOWN_BBAR~combout\,
	COINC_UP_A => \COINC_UP_A~combout\,
	COINC_UP_ABAR => \COINC_UP_ABAR~combout\,
	COINC_UP_B => \COINC_UP_B~combout\,
	COINC_UP_BBAR => \COINC_UP_BBAR~combout\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	COINCIDENCE_OUT_DOWN => \inst_coinc|COINCIDENCE_OUT_DOWN~reg0\,
	i563 => \inst_coinc|i563\,
	COINCIDENCE_OUT_UP => \inst_coinc|COINCIDENCE_OUT_UP~reg0\,
	i565 => \inst_coinc|i565\,
	FF_down_a => \inst_coinc|FF_down_a\,
	FF_down_abar => \inst_coinc|FF_down_abar\,
	FF_down_b => \inst_coinc|FF_down_b\,
	FF_down_bbar => \inst_coinc|FF_down_bbar\,
	FF_up_a => \inst_coinc|FF_up_a\,
	FF_up_abar => \inst_coinc|FF_up_abar\,
	FF_up_b => \inst_coinc|FF_up_b\,
	FF_up_bbar => \inst_coinc|FF_up_bbar\);
inst_hit_counter : hit_counter
PORT MAP (
	CLK => \altclklock_component|outclock0\,
	RST => \inst_ROC|RST~reg0\,
	command_4_local_8 => \slaveregister_inst|command_4_local[8]\,
	GND_port => \~GND\,
	OneSPE => \OneSPE~combout\,
	MultiSPE => \MultiSPE~combout\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	MultiSPE_nl => \inst_hit_counter|MultiSPE_nl~reg0\,
	OneSPE_nl => \inst_hit_counter|OneSPE_nl~reg0\,
	multiSPEcnt_0 => \inst_hit_counter|multiSPEcnt[0]~reg0\,
	oneSPEcnt_0 => \inst_hit_counter|oneSPEcnt[0]~reg0\,
	oneSPEcnt_1 => \inst_hit_counter|oneSPEcnt[1]~reg0\,
	multiSPEcnt_1 => \inst_hit_counter|multiSPEcnt[1]~reg0\,
	oneSPEcnt_2 => \inst_hit_counter|oneSPEcnt[2]~reg0\,
	multiSPEcnt_2 => \inst_hit_counter|multiSPEcnt[2]~reg0\,
	oneSPEcnt_3 => \inst_hit_counter|oneSPEcnt[3]~reg0\,
	multiSPEcnt_3 => \inst_hit_counter|multiSPEcnt[3]~reg0\,
	oneSPEcnt_4 => \inst_hit_counter|oneSPEcnt[4]~reg0\,
	multiSPEcnt_4 => \inst_hit_counter|multiSPEcnt[4]~reg0\,
	oneSPEcnt_5 => \inst_hit_counter|oneSPEcnt[5]~reg0\,
	multiSPEcnt_5 => \inst_hit_counter|multiSPEcnt[5]~reg0\,
	oneSPEcnt_6 => \inst_hit_counter|oneSPEcnt[6]~reg0\,
	multiSPEcnt_6 => \inst_hit_counter|multiSPEcnt[6]~reg0\,
	oneSPEcnt_7 => \inst_hit_counter|oneSPEcnt[7]~reg0\,
	multiSPEcnt_7 => \inst_hit_counter|multiSPEcnt[7]~reg0\,
	multiSPEcnt_8 => \inst_hit_counter|multiSPEcnt[8]~reg0\,
	oneSPEcnt_8 => \inst_hit_counter|oneSPEcnt[8]~reg0\,
	oneSPEcnt_9 => \inst_hit_counter|oneSPEcnt[9]~reg0\,
	multiSPEcnt_9 => \inst_hit_counter|multiSPEcnt[9]~reg0\,
	oneSPEcnt_10 => \inst_hit_counter|oneSPEcnt[10]~reg0\,
	multiSPEcnt_10 => \inst_hit_counter|multiSPEcnt[10]~reg0\,
	oneSPEcnt_11 => \inst_hit_counter|oneSPEcnt[11]~reg0\,
	multiSPEcnt_11 => \inst_hit_counter|multiSPEcnt[11]~reg0\,
	oneSPEcnt_12 => \inst_hit_counter|oneSPEcnt[12]~reg0\,
	multiSPEcnt_12 => \inst_hit_counter|multiSPEcnt[12]~reg0\,
	oneSPEcnt_13 => \inst_hit_counter|oneSPEcnt[13]~reg0\,
	multiSPEcnt_13 => \inst_hit_counter|multiSPEcnt[13]~reg0\,
	oneSPEcnt_14 => \inst_hit_counter|oneSPEcnt[14]~reg0\,
	multiSPEcnt_14 => \inst_hit_counter|multiSPEcnt[14]~reg0\,
	oneSPEcnt_15 => \inst_hit_counter|oneSPEcnt[15]~reg0\,
	multiSPEcnt_15 => \inst_hit_counter|multiSPEcnt[15]~reg0\);
inst_hit_counter_ff : hit_counter_ff
PORT MAP (
	CLK => \altclklock_component|outclock0\,
	FE_TEST_PULSE => \inst_fe_testpulse|FE_TEST_PULSE~reg0\,
	RST => \inst_ROC|RST~reg0\,
	command_4_local_8 => \slaveregister_inst|command_4_local[8]\,
	command_4_local_12 => \slaveregister_inst|command_4_local[12]\,
	command_4_local_13 => \slaveregister_inst|command_4_local[13]\,
	command_4_local_14 => \slaveregister_inst|command_4_local[14]\,
	command_4_local_15 => \slaveregister_inst|command_4_local[15]\,
	GND_port => \~GND\,
	OneSPE => \OneSPE~combout\,
	MultiSPE => \MultiSPE~combout\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	multiSPEcnt_0 => \inst_hit_counter_ff|multiSPEcnt[0]~reg0\,
	oneSPEcnt_0 => \inst_hit_counter_ff|oneSPEcnt[0]~reg0\,
	multiSPEcnt_1 => \inst_hit_counter_ff|multiSPEcnt[1]~reg0\,
	oneSPEcnt_1 => \inst_hit_counter_ff|oneSPEcnt[1]~reg0\,
	multiSPEcnt_2 => \inst_hit_counter_ff|multiSPEcnt[2]~reg0\,
	oneSPEcnt_2 => \inst_hit_counter_ff|oneSPEcnt[2]~reg0\,
	multiSPEcnt_3 => \inst_hit_counter_ff|multiSPEcnt[3]~reg0\,
	oneSPEcnt_3 => \inst_hit_counter_ff|oneSPEcnt[3]~reg0\,
	multiSPEcnt_4 => \inst_hit_counter_ff|multiSPEcnt[4]~reg0\,
	oneSPEcnt_4 => \inst_hit_counter_ff|oneSPEcnt[4]~reg0\,
	multiSPEcnt_5 => \inst_hit_counter_ff|multiSPEcnt[5]~reg0\,
	oneSPEcnt_5 => \inst_hit_counter_ff|oneSPEcnt[5]~reg0\,
	multiSPEcnt_6 => \inst_hit_counter_ff|multiSPEcnt[6]~reg0\,
	oneSPEcnt_6 => \inst_hit_counter_ff|oneSPEcnt[6]~reg0\,
	multiSPEcnt_7 => \inst_hit_counter_ff|multiSPEcnt[7]~reg0\,
	oneSPEcnt_7 => \inst_hit_counter_ff|oneSPEcnt[7]~reg0\,
	oneSPEcnt_8 => \inst_hit_counter_ff|oneSPEcnt[8]~reg0\,
	multiSPEcnt_8 => \inst_hit_counter_ff|multiSPEcnt[8]~reg0\,
	multiSPEcnt_9 => \inst_hit_counter_ff|multiSPEcnt[9]~reg0\,
	oneSPEcnt_9 => \inst_hit_counter_ff|oneSPEcnt[9]~reg0\,
	multiSPEcnt_10 => \inst_hit_counter_ff|multiSPEcnt[10]~reg0\,
	oneSPEcnt_10 => \inst_hit_counter_ff|oneSPEcnt[10]~reg0\,
	multiSPEcnt_11 => \inst_hit_counter_ff|multiSPEcnt[11]~reg0\,
	oneSPEcnt_11 => \inst_hit_counter_ff|oneSPEcnt[11]~reg0\,
	multiSPEcnt_12 => \inst_hit_counter_ff|multiSPEcnt[12]~reg0\,
	oneSPEcnt_12 => \inst_hit_counter_ff|oneSPEcnt[12]~reg0\,
	multiSPEcnt_13 => \inst_hit_counter_ff|multiSPEcnt[13]~reg0\,
	oneSPEcnt_13 => \inst_hit_counter_ff|oneSPEcnt[13]~reg0\,
	multiSPEcnt_14 => \inst_hit_counter_ff|multiSPEcnt[14]~reg0\,
	oneSPEcnt_14 => \inst_hit_counter_ff|oneSPEcnt[14]~reg0\,
	multiSPEcnt_15 => \inst_hit_counter_ff|multiSPEcnt[15]~reg0\,
	oneSPEcnt_15 => \inst_hit_counter_ff|oneSPEcnt[15]~reg0\);
inst_atwd_ping_pong : atwd_ping_pong
PORT MAP (
	CLK40 => \altclklock_component|outclock1~1\,
	RST => \inst_ROC|RST~reg0\,
	command_0_local_1 => \slaveregister_inst|command_0_local[1]\,
	command_0_local_2 => \slaveregister_inst|command_0_local[2]\,
	command_0_local_9 => \slaveregister_inst|command_0_local[9]\,
	command_0_local_10 => \slaveregister_inst|command_0_local[10]\,
	command_0_local_15 => \slaveregister_inst|command_0_local[15]\,
	TriggerComplete_in_sync => \inst_atwd_trigger|TriggerComplete_in_sync\,
	TriggerComplete_in_sync1 => \inst_atwd_trigger|TriggerComplete_in_sync~1\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	atwd0_pong_enable => \inst_atwd_ping_pong|atwd0_pong_enable\,
	i122 => \inst_atwd_ping_pong|i122~19\,
	atwd1_pong_enable => \inst_atwd_ping_pong|atwd1_pong_enable\,
	i124 => \inst_atwd_ping_pong|i124~19\);
inst_atwd_timestamp : atwd_timestamp
PORT MAP (
	CLK40 => \altclklock_component|outclock1~1\,
	sload_path_47 => \wysi_counter|sload_path[47]\,
	sload_path_46 => \wysi_counter|sload_path[46]\,
	sload_path_45 => \wysi_counter|sload_path[45]\,
	sload_path_44 => \wysi_counter|sload_path[44]\,
	sload_path_43 => \wysi_counter|sload_path[43]\,
	sload_path_42 => \wysi_counter|sload_path[42]\,
	sload_path_41 => \wysi_counter|sload_path[41]\,
	sload_path_40 => \wysi_counter|sload_path[40]\,
	sload_path_39 => \wysi_counter|sload_path[39]\,
	sload_path_38 => \wysi_counter|sload_path[38]\,
	sload_path_37 => \wysi_counter|sload_path[37]\,
	sload_path_36 => \wysi_counter|sload_path[36]\,
	sload_path_35 => \wysi_counter|sload_path[35]\,
	sload_path_34 => \wysi_counter|sload_path[34]\,
	sload_path_33 => \wysi_counter|sload_path[33]\,
	sload_path_32 => \wysi_counter|sload_path[32]\,
	sload_path_31 => \wysi_counter|sload_path[31]\,
	sload_path_30 => \wysi_counter|sload_path[30]\,
	sload_path_29 => \wysi_counter|sload_path[29]\,
	sload_path_28 => \wysi_counter|sload_path[28]\,
	sload_path_27 => \wysi_counter|sload_path[27]\,
	sload_path_26 => \wysi_counter|sload_path[26]\,
	sload_path_25 => \wysi_counter|sload_path[25]\,
	sload_path_24 => \wysi_counter|sload_path[24]\,
	sload_path_23 => \wysi_counter|sload_path[23]\,
	sload_path_22 => \wysi_counter|sload_path[22]\,
	sload_path_21 => \wysi_counter|sload_path[21]\,
	sload_path_20 => \wysi_counter|sload_path[20]\,
	sload_path_19 => \wysi_counter|sload_path[19]\,
	sload_path_18 => \wysi_counter|sload_path[18]\,
	sload_path_17 => \wysi_counter|sload_path[17]\,
	sload_path_16 => \wysi_counter|sload_path[16]\,
	sload_path_15 => \wysi_counter|sload_path[15]~1\,
	sload_path_14 => \wysi_counter|sload_path[14]~1\,
	sload_path_13 => \wysi_counter|sload_path[13]~1\,
	sload_path_12 => \wysi_counter|sload_path[12]~1\,
	sload_path_11 => \wysi_counter|sload_path[11]~1\,
	sload_path_10 => \wysi_counter|sload_path[10]~1\,
	sload_path_9 => \wysi_counter|sload_path[9]~1\,
	sload_path_8 => \wysi_counter|sload_path[8]~1\,
	sload_path_7 => \wysi_counter|sload_path[7]~1\,
	sload_path_6 => \wysi_counter|sload_path[6]~1\,
	sload_path_5 => \wysi_counter|sload_path[5]~1\,
	sload_path_4 => \wysi_counter|sload_path[4]~1\,
	sload_path_3 => \wysi_counter|sload_path[3]~1\,
	sload_path_2 => \wysi_counter|sload_path[2]~1\,
	sload_path_1 => \wysi_counter|sload_path[1]~1\,
	sload_path_0 => \wysi_counter|sload_path[0]~1\,
	RST => \inst_ROC|RST~reg0\,
	ATWDTrigger_sig => \inst_atwd_trigger|ATWDTrigger_sig\,
	ATWDTrigger_sig1 => \inst_atwd_trigger|ATWDTrigger_sig~1\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	atwd0_timestamp_32 => \inst_atwd_timestamp|atwd0_timestamp[32]~reg0\,
	atwd0_timestamp_0 => \inst_atwd_timestamp|atwd0_timestamp[0]~reg0\,
	atwd1_timestamp_0 => \inst_atwd_timestamp|atwd1_timestamp[0]~reg0\,
	atwd1_timestamp_32 => \inst_atwd_timestamp|atwd1_timestamp[32]~reg0\,
	atwd0_timestamp_33 => \inst_atwd_timestamp|atwd0_timestamp[33]~reg0\,
	atwd0_timestamp_1 => \inst_atwd_timestamp|atwd0_timestamp[1]~reg0\,
	atwd1_timestamp_1 => \inst_atwd_timestamp|atwd1_timestamp[1]~reg0\,
	atwd1_timestamp_33 => \inst_atwd_timestamp|atwd1_timestamp[33]~reg0\,
	atwd0_timestamp_34 => \inst_atwd_timestamp|atwd0_timestamp[34]~reg0\,
	atwd0_timestamp_2 => \inst_atwd_timestamp|atwd0_timestamp[2]~reg0\,
	atwd1_timestamp_2 => \inst_atwd_timestamp|atwd1_timestamp[2]~reg0\,
	atwd1_timestamp_34 => \inst_atwd_timestamp|atwd1_timestamp[34]~reg0\,
	atwd0_timestamp_35 => \inst_atwd_timestamp|atwd0_timestamp[35]~reg0\,
	atwd0_timestamp_3 => \inst_atwd_timestamp|atwd0_timestamp[3]~reg0\,
	atwd1_timestamp_3 => \inst_atwd_timestamp|atwd1_timestamp[3]~reg0\,
	atwd1_timestamp_35 => \inst_atwd_timestamp|atwd1_timestamp[35]~reg0\,
	atwd0_timestamp_36 => \inst_atwd_timestamp|atwd0_timestamp[36]~reg0\,
	atwd0_timestamp_4 => \inst_atwd_timestamp|atwd0_timestamp[4]~reg0\,
	atwd1_timestamp_4 => \inst_atwd_timestamp|atwd1_timestamp[4]~reg0\,
	atwd1_timestamp_36 => \inst_atwd_timestamp|atwd1_timestamp[36]~reg0\,
	atwd0_timestamp_37 => \inst_atwd_timestamp|atwd0_timestamp[37]~reg0\,
	atwd0_timestamp_5 => \inst_atwd_timestamp|atwd0_timestamp[5]~reg0\,
	atwd1_timestamp_5 => \inst_atwd_timestamp|atwd1_timestamp[5]~reg0\,
	atwd1_timestamp_37 => \inst_atwd_timestamp|atwd1_timestamp[37]~reg0\,
	atwd0_timestamp_38 => \inst_atwd_timestamp|atwd0_timestamp[38]~reg0\,
	atwd0_timestamp_6 => \inst_atwd_timestamp|atwd0_timestamp[6]~reg0\,
	atwd1_timestamp_6 => \inst_atwd_timestamp|atwd1_timestamp[6]~reg0\,
	atwd1_timestamp_38 => \inst_atwd_timestamp|atwd1_timestamp[38]~reg0\,
	atwd0_timestamp_39 => \inst_atwd_timestamp|atwd0_timestamp[39]~reg0\,
	atwd0_timestamp_7 => \inst_atwd_timestamp|atwd0_timestamp[7]~reg0\,
	atwd1_timestamp_7 => \inst_atwd_timestamp|atwd1_timestamp[7]~reg0\,
	atwd1_timestamp_39 => \inst_atwd_timestamp|atwd1_timestamp[39]~reg0\,
	atwd0_timestamp_40 => \inst_atwd_timestamp|atwd0_timestamp[40]~reg0\,
	atwd0_timestamp_8 => \inst_atwd_timestamp|atwd0_timestamp[8]~reg0\,
	atwd1_timestamp_40 => \inst_atwd_timestamp|atwd1_timestamp[40]~reg0\,
	atwd1_timestamp_8 => \inst_atwd_timestamp|atwd1_timestamp[8]~reg0\,
	atwd0_timestamp_41 => \inst_atwd_timestamp|atwd0_timestamp[41]~reg0\,
	atwd0_timestamp_9 => \inst_atwd_timestamp|atwd0_timestamp[9]~reg0\,
	atwd1_timestamp_9 => \inst_atwd_timestamp|atwd1_timestamp[9]~reg0\,
	atwd1_timestamp_41 => \inst_atwd_timestamp|atwd1_timestamp[41]~reg0\,
	atwd0_timestamp_42 => \inst_atwd_timestamp|atwd0_timestamp[42]~reg0\,
	atwd0_timestamp_10 => \inst_atwd_timestamp|atwd0_timestamp[10]~reg0\,
	atwd1_timestamp_10 => \inst_atwd_timestamp|atwd1_timestamp[10]~reg0\,
	atwd1_timestamp_42 => \inst_atwd_timestamp|atwd1_timestamp[42]~reg0\,
	atwd0_timestamp_43 => \inst_atwd_timestamp|atwd0_timestamp[43]~reg0\,
	atwd0_timestamp_11 => \inst_atwd_timestamp|atwd0_timestamp[11]~reg0\,
	atwd1_timestamp_11 => \inst_atwd_timestamp|atwd1_timestamp[11]~reg0\,
	atwd1_timestamp_43 => \inst_atwd_timestamp|atwd1_timestamp[43]~reg0\,
	atwd0_timestamp_44 => \inst_atwd_timestamp|atwd0_timestamp[44]~reg0\,
	atwd0_timestamp_12 => \inst_atwd_timestamp|atwd0_timestamp[12]~reg0\,
	atwd1_timestamp_12 => \inst_atwd_timestamp|atwd1_timestamp[12]~reg0\,
	atwd1_timestamp_44 => \inst_atwd_timestamp|atwd1_timestamp[44]~reg0\,
	atwd0_timestamp_45 => \inst_atwd_timestamp|atwd0_timestamp[45]~reg0\,
	atwd0_timestamp_13 => \inst_atwd_timestamp|atwd0_timestamp[13]~reg0\,
	atwd1_timestamp_13 => \inst_atwd_timestamp|atwd1_timestamp[13]~reg0\,
	atwd1_timestamp_45 => \inst_atwd_timestamp|atwd1_timestamp[45]~reg0\,
	atwd0_timestamp_46 => \inst_atwd_timestamp|atwd0_timestamp[46]~reg0\,
	atwd0_timestamp_14 => \inst_atwd_timestamp|atwd0_timestamp[14]~reg0\,
	atwd1_timestamp_14 => \inst_atwd_timestamp|atwd1_timestamp[14]~reg0\,
	atwd1_timestamp_46 => \inst_atwd_timestamp|atwd1_timestamp[46]~reg0\,
	atwd0_timestamp_47 => \inst_atwd_timestamp|atwd0_timestamp[47]~reg0\,
	atwd0_timestamp_15 => \inst_atwd_timestamp|atwd0_timestamp[15]~reg0\,
	atwd1_timestamp_15 => \inst_atwd_timestamp|atwd1_timestamp[15]~reg0\,
	atwd1_timestamp_47 => \inst_atwd_timestamp|atwd1_timestamp[47]~reg0\,
	atwd1_timestamp_16 => \inst_atwd_timestamp|atwd1_timestamp[16]~reg0\,
	atwd0_timestamp_16 => \inst_atwd_timestamp|atwd0_timestamp[16]~reg0\,
	atwd1_timestamp_17 => \inst_atwd_timestamp|atwd1_timestamp[17]~reg0\,
	atwd0_timestamp_17 => \inst_atwd_timestamp|atwd0_timestamp[17]~reg0\,
	atwd1_timestamp_18 => \inst_atwd_timestamp|atwd1_timestamp[18]~reg0\,
	atwd0_timestamp_18 => \inst_atwd_timestamp|atwd0_timestamp[18]~reg0\,
	atwd1_timestamp_19 => \inst_atwd_timestamp|atwd1_timestamp[19]~reg0\,
	atwd0_timestamp_19 => \inst_atwd_timestamp|atwd0_timestamp[19]~reg0\,
	atwd1_timestamp_20 => \inst_atwd_timestamp|atwd1_timestamp[20]~reg0\,
	atwd0_timestamp_20 => \inst_atwd_timestamp|atwd0_timestamp[20]~reg0\,
	atwd1_timestamp_21 => \inst_atwd_timestamp|atwd1_timestamp[21]~reg0\,
	atwd0_timestamp_21 => \inst_atwd_timestamp|atwd0_timestamp[21]~reg0\,
	atwd1_timestamp_22 => \inst_atwd_timestamp|atwd1_timestamp[22]~reg0\,
	atwd0_timestamp_22 => \inst_atwd_timestamp|atwd0_timestamp[22]~reg0\,
	atwd1_timestamp_23 => \inst_atwd_timestamp|atwd1_timestamp[23]~reg0\,
	atwd0_timestamp_23 => \inst_atwd_timestamp|atwd0_timestamp[23]~reg0\,
	atwd1_timestamp_24 => \inst_atwd_timestamp|atwd1_timestamp[24]~reg0\,
	atwd0_timestamp_24 => \inst_atwd_timestamp|atwd0_timestamp[24]~reg0\,
	atwd1_timestamp_25 => \inst_atwd_timestamp|atwd1_timestamp[25]~reg0\,
	atwd0_timestamp_25 => \inst_atwd_timestamp|atwd0_timestamp[25]~reg0\,
	atwd1_timestamp_26 => \inst_atwd_timestamp|atwd1_timestamp[26]~reg0\,
	atwd0_timestamp_26 => \inst_atwd_timestamp|atwd0_timestamp[26]~reg0\,
	atwd1_timestamp_27 => \inst_atwd_timestamp|atwd1_timestamp[27]~reg0\,
	atwd0_timestamp_27 => \inst_atwd_timestamp|atwd0_timestamp[27]~reg0\,
	atwd1_timestamp_28 => \inst_atwd_timestamp|atwd1_timestamp[28]~reg0\,
	atwd0_timestamp_28 => \inst_atwd_timestamp|atwd0_timestamp[28]~reg0\,
	atwd1_timestamp_29 => \inst_atwd_timestamp|atwd1_timestamp[29]~reg0\,
	atwd0_timestamp_29 => \inst_atwd_timestamp|atwd0_timestamp[29]~reg0\,
	atwd1_timestamp_30 => \inst_atwd_timestamp|atwd1_timestamp[30]~reg0\,
	atwd0_timestamp_30 => \inst_atwd_timestamp|atwd0_timestamp[30]~reg0\,
	atwd1_timestamp_31 => \inst_atwd_timestamp|atwd1_timestamp[31]~reg0\,
	atwd0_timestamp_31 => \inst_atwd_timestamp|atwd0_timestamp[31]~reg0\);
atwd0 : atwd
PORT MAP (
	CLK80 => \altclklock_component|outclock1\,
	CLK40 => \altclklock_component|outclock1~1\,
	MASTERHWDATA_0 => \core|MASTERHWDATA[0]\,
	MASTERHWDATA_1 => \core|MASTERHWDATA[1]\,
	MASTERHWDATA_2 => \core|MASTERHWDATA[2]\,
	MASTERHWDATA_3 => \core|MASTERHWDATA[3]\,
	MASTERHWDATA_4 => \core|MASTERHWDATA[4]\,
	MASTERHWDATA_5 => \core|MASTERHWDATA[5]\,
	MASTERHWDATA_6 => \core|MASTERHWDATA[6]\,
	MASTERHWDATA_7 => \core|MASTERHWDATA[7]\,
	MASTERHWDATA_8 => \core|MASTERHWDATA[8]\,
	MASTERHWDATA_9 => \core|MASTERHWDATA[9]\,
	MASTERHWDATA_10 => \core|MASTERHWDATA[10]\,
	MASTERHWDATA_11 => \core|MASTERHWDATA[11]\,
	MASTERHWDATA_12 => \core|MASTERHWDATA[12]\,
	MASTERHWDATA_13 => \core|MASTERHWDATA[13]\,
	MASTERHWDATA_14 => \core|MASTERHWDATA[14]\,
	MASTERHWDATA_15 => \core|MASTERHWDATA[15]\,
	RST => \inst_ROC|RST~reg0\,
	state1 => \inst_atwd_control|state~20\,
	reg_address_3 => \ahb_slave_inst|reg_address[3]~reg0\,
	reg_address_4 => \ahb_slave_inst|reg_address[4]~reg0\,
	reg_address_5 => \ahb_slave_inst|reg_address[5]~reg0\,
	reg_address_6 => \ahb_slave_inst|reg_address[6]~reg0\,
	reg_address_2 => \ahb_slave_inst|reg_address[2]~reg0\,
	reg_address_12 => \ahb_slave_inst|reg_address[12]~reg0\,
	reg_address_14 => \ahb_slave_inst|reg_address[14]~reg0\,
	command_0_local_0 => \slaveregister_inst|command_0_local[0]\,
	command_0_local_1 => \slaveregister_inst|command_0_local[1]\,
	command_0_local_3 => \slaveregister_inst|command_0_local[3]\,
	command_0_local_15 => \slaveregister_inst|command_0_local[15]\,
	i => \LED2ATWDdelay_inst|i~8\,
	atwd0_pong_enable => \inst_atwd_ping_pong|atwd0_pong_enable\,
	enable_disc => \inst_atwd_ping_pong|i122~19\,
	reg_address_7 => \ahb_slave_inst|reg_address[7]~reg0\,
	reg_address_8 => \ahb_slave_inst|reg_address[8]~reg0\,
	reg_address_9 => \ahb_slave_inst|reg_address[9]~reg0\,
	reg_address_10 => \ahb_slave_inst|reg_address[10]~reg0\,
	i3335 => \slaveregister_inst|i3335~16\,
	dom_id_48 => \slaveregister_inst|dom_id[48]~231\,
	i33351 => \slaveregister_inst|i3335~17\,
	OneSPE => \OneSPE~combout\,
	ATWD0_D_0 => \ATWD0_D[0]~combout\,
	ATWD0_D_3 => \ATWD0_D[3]~combout\,
	ATWD0_D_2 => \ATWD0_D[2]~combout\,
	ATWD0_D_1 => \ATWD0_D[1]~combout\,
	ATWD0_D_5 => \ATWD0_D[5]~combout\,
	ATWD0_D_4 => \ATWD0_D[4]~combout\,
	ATWD0_D_8 => \ATWD0_D[8]~combout\,
	ATWD0_D_9 => \ATWD0_D[9]~combout\,
	ATWD0_D_7 => \ATWD0_D[7]~combout\,
	ATWD0_D_6 => \ATWD0_D[6]~combout\,
	TriggerComplete_0 => \TriggerComplete_0~combout\,
	ATWDTrigger_sig1 => \inst_atwd_trigger|ATWDTrigger_sig\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ATWDTrigger_sig => \inst_atwd_trigger|ATWDTrigger_sig~COMB\,
	OutputEnable => \inst_atwd_control|OutputEnable~reg0\,
	CounterClock => \inst_atwd_control|CounterClock~reg0\,
	ShiftClock => \inst_atwd_readout|ShiftClock~reg0\,
	RampSet => \inst_atwd_control|RampSet~reg0\,
	channel_1 => \inst_atwd_control|channel[1]\,
	channel_0 => \inst_atwd_control|channel[0]\,
	ReadWrite => \inst_atwd_control|ReadWrite~reg0\,
	AnalogReset => \inst_atwd_control|AnalogReset~reg0\,
	DigitalReset => \inst_atwd_control|DigitalReset~reg0\,
	DigitalSet => \inst_atwd_control|DigitalSet~reg0\,
	state => \inst_atwd_control|state~26\,
	q_0 => \sram|q[0]~1\,
	done => \inst_atwd_trigger|done~reg0\,
	q_1 => \sram|q[1]~1\,
	q_2 => \sram|q[2]~1\,
	q_3 => \sram|q[3]~1\,
	q_4 => \sram|q[4]~1\,
	q_5 => \sram|q[5]~1\,
	q_6 => \sram|q[6]~1\,
	q_7 => \sram|q[7]~1\,
	q_8 => \sram|q[8]~1\,
	q_9 => \sram|q[9]~1\,
	q_10 => \sram|q[10]~1\,
	q_11 => \sram|q[11]~1\,
	q_12 => \sram|q[12]~1\,
	q_13 => \sram|q[13]~1\,
	q_14 => \sram|q[14]~1\,
	q_15 => \sram|q[15]~1\,
	TriggerComplete_in_sync => \inst_atwd_trigger|TriggerComplete_in_sync\);
atwd1 : atwd_1
PORT MAP (
	CLK80 => \altclklock_component|outclock1\,
	CLK40 => \altclklock_component|outclock1~1\,
	MASTERHWDATA_0 => \core|MASTERHWDATA[0]\,
	MASTERHWDATA_1 => \core|MASTERHWDATA[1]\,
	MASTERHWDATA_2 => \core|MASTERHWDATA[2]\,
	MASTERHWDATA_3 => \core|MASTERHWDATA[3]\,
	MASTERHWDATA_4 => \core|MASTERHWDATA[4]\,
	MASTERHWDATA_5 => \core|MASTERHWDATA[5]\,
	MASTERHWDATA_6 => \core|MASTERHWDATA[6]\,
	MASTERHWDATA_7 => \core|MASTERHWDATA[7]\,
	MASTERHWDATA_8 => \core|MASTERHWDATA[8]\,
	MASTERHWDATA_9 => \core|MASTERHWDATA[9]\,
	MASTERHWDATA_10 => \core|MASTERHWDATA[10]\,
	MASTERHWDATA_11 => \core|MASTERHWDATA[11]\,
	MASTERHWDATA_12 => \core|MASTERHWDATA[12]\,
	MASTERHWDATA_13 => \core|MASTERHWDATA[13]\,
	MASTERHWDATA_14 => \core|MASTERHWDATA[14]\,
	MASTERHWDATA_15 => \core|MASTERHWDATA[15]\,
	RST => \inst_ROC|RST~reg0\,
	state => \inst_atwd_control|state~26\,
	reg_address_3 => \ahb_slave_inst|reg_address[3]~reg0\,
	reg_address_4 => \ahb_slave_inst|reg_address[4]~reg0\,
	reg_address_5 => \ahb_slave_inst|reg_address[5]~reg0\,
	reg_address_6 => \ahb_slave_inst|reg_address[6]~reg0\,
	reg_address_2 => \ahb_slave_inst|reg_address[2]~reg0\,
	reg_address_12 => \ahb_slave_inst|reg_address[12]~reg0\,
	reg_address_14 => \ahb_slave_inst|reg_address[14]~reg0\,
	command_0_local_8 => \slaveregister_inst|command_0_local[8]\,
	command_0_local_9 => \slaveregister_inst|command_0_local[9]\,
	command_0_local_11 => \slaveregister_inst|command_0_local[11]\,
	command_0_local_15 => \slaveregister_inst|command_0_local[15]\,
	i => \LED2ATWDdelay_inst|i~8\,
	atwd1_pong_enable => \inst_atwd_ping_pong|atwd1_pong_enable\,
	enable_disc => \inst_atwd_ping_pong|i124~19\,
	reg_address_7 => \ahb_slave_inst|reg_address[7]~reg0\,
	reg_address_8 => \ahb_slave_inst|reg_address[8]~reg0\,
	reg_address_9 => \ahb_slave_inst|reg_address[9]~reg0\,
	reg_address_10 => \ahb_slave_inst|reg_address[10]~reg0\,
	dom_id_48 => \slaveregister_inst|dom_id[48]~231\,
	i3335 => \slaveregister_inst|i3335~17\,
	i3342 => \slaveregister_inst|i3342~15\,
	OneSPE => \OneSPE~combout\,
	ATWD1_D_0 => \ATWD1_D[0]~combout\,
	ATWD1_D_3 => \ATWD1_D[3]~combout\,
	ATWD1_D_2 => \ATWD1_D[2]~combout\,
	ATWD1_D_1 => \ATWD1_D[1]~combout\,
	ATWD1_D_5 => \ATWD1_D[5]~combout\,
	ATWD1_D_4 => \ATWD1_D[4]~combout\,
	ATWD1_D_8 => \ATWD1_D[8]~combout\,
	ATWD1_D_9 => \ATWD1_D[9]~combout\,
	ATWD1_D_7 => \ATWD1_D[7]~combout\,
	ATWD1_D_6 => \ATWD1_D[6]~combout\,
	TriggerComplete_1 => \TriggerComplete_1~combout\,
	ATWDTrigger_sig1 => \inst_atwd_trigger|ATWDTrigger_sig~1\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ATWDTrigger_sig => \inst_atwd_trigger|ATWDTrigger_sig~COMB_1\,
	OutputEnable => \inst_atwd_control|OutputEnable~reg0_1\,
	CounterClock => \inst_atwd_control|CounterClock~reg0_1\,
	ShiftClock => \inst_atwd_readout|ShiftClock~reg0_1\,
	RampSet => \inst_atwd_control|RampSet~reg0_1\,
	channel_1 => \inst_atwd_control|channel[1]~1\,
	channel_0 => \inst_atwd_control|channel[0]~1\,
	ReadWrite => \inst_atwd_control|ReadWrite~reg0_1\,
	AnalogReset => \inst_atwd_control|AnalogReset~reg0_1\,
	DigitalReset => \inst_atwd_control|DigitalReset~reg0_1\,
	DigitalSet => \inst_atwd_control|DigitalSet~reg0_1\,
	state1 => \inst_atwd_control|state~20\,
	q_0 => \sram|q[0]~2\,
	q_1 => \sram|q[1]~2\,
	q_2 => \sram|q[2]~2\,
	q_3 => \sram|q[3]~2\,
	q_4 => \sram|q[4]~2\,
	q_5 => \sram|q[5]~2\,
	q_6 => \sram|q[6]~2\,
	q_7 => \sram|q[7]~2\,
	done => \inst_atwd_trigger|done~reg0_1\,
	q_8 => \sram|q[8]~2\,
	q_9 => \sram|q[9]~2\,
	q_10 => \sram|q[10]~2\,
	q_11 => \sram|q[11]~2\,
	q_12 => \sram|q[12]~2\,
	q_13 => \sram|q[13]~2\,
	q_14 => \sram|q[14]~2\,
	q_15 => \sram|q[15]~2\,
	TriggerComplete_in_sync => \inst_atwd_trigger|TriggerComplete_in_sync~1\);
inst_master_data_source : master_data_source
PORT MAP (
	CLK => \altclklock_component|outclock0\,
	SLAVEHREADYO => \core|SLAVEHREADYO\,
	RST => \inst_ROC|RST~reg0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	wdata_0 => \inst_master_data_source|wdata[0]~reg0\,
	wdata_1 => \inst_master_data_source|wdata[1]~reg0\,
	wdata_2 => \inst_master_data_source|wdata[2]~reg0\,
	wdata_3 => \inst_master_data_source|wdata[3]~reg0\,
	wdata_4 => \inst_master_data_source|wdata[4]~reg0\,
	wdata_5 => \inst_master_data_source|wdata[5]~reg0\,
	wdata_6 => \inst_master_data_source|wdata[6]~reg0\,
	wdata_7 => \inst_master_data_source|wdata[7]~reg0\,
	wdata_8 => \inst_master_data_source|wdata[8]~reg0\,
	wdata_9 => \inst_master_data_source|wdata[9]~reg0\,
	wdata_10 => \inst_master_data_source|wdata[10]~reg0\,
	wdata_11 => \inst_master_data_source|wdata[11]~reg0\,
	wdata_12 => \inst_master_data_source|wdata[12]~reg0\,
	wdata_13 => \inst_master_data_source|wdata[13]~reg0\,
	wdata_14 => \inst_master_data_source|wdata[14]~reg0\,
	wdata_15 => \inst_master_data_source|wdata[15]~reg0\,
	wdata_16 => \inst_master_data_source|wdata[16]~reg0\,
	wdata_17 => \inst_master_data_source|wdata[17]~reg0\,
	wdata_18 => \inst_master_data_source|wdata[18]~reg0\,
	wdata_19 => \inst_master_data_source|wdata[19]~reg0\,
	wdata_20 => \inst_master_data_source|wdata[20]~reg0\,
	wdata_21 => \inst_master_data_source|wdata[21]~reg0\,
	wdata_22 => \inst_master_data_source|wdata[22]~reg0\,
	wdata_23 => \inst_master_data_source|wdata[23]~reg0\,
	wdata_24 => \inst_master_data_source|wdata[24]~reg0\,
	wdata_25 => \inst_master_data_source|wdata[25]~reg0\,
	wdata_26 => \inst_master_data_source|wdata[26]~reg0\,
	wdata_27 => \inst_master_data_source|wdata[27]~reg0\,
	wdata_28 => \inst_master_data_source|wdata[28]~reg0\,
	wdata_29 => \inst_master_data_source|wdata[29]~reg0\,
	wdata_30 => \inst_master_data_source|wdata[30]~reg0\,
	wdata_31 => \inst_master_data_source|wdata[31]~reg0\);
inst_r2r : r2r
PORT MAP (
	CLK => \altclklock_component|outclock0\,
	RST => \inst_ROC|RST~reg0\,
	enable => \slaveregister_inst|command_0_local[28]\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	R2BUS_6 => \inst_r2r|R2BUS[6]~reg0\,
	R2BUS_5 => \inst_r2r|R2BUS[5]~reg0\,
	R2BUS_4 => \inst_r2r|R2BUS[4]~reg0\,
	R2BUS_3 => \inst_r2r|R2BUS[3]~reg0\,
	R2BUS_2 => \inst_r2r|R2BUS[2]~reg0\,
	R2BUS_1 => \inst_r2r|R2BUS[1]~reg0\,
	R2BUS_0 => \inst_r2r|R2BUS[0]~reg0\);
inst_fe_r2r : fe_r2r
PORT MAP (
	CLK => \altclklock_component|outclock0\,
	RST => \inst_ROC|RST~reg0\,
	command_0_local_30 => \slaveregister_inst|command_0_local[30]\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	FE_PULSER_P_3 => \inst_fe_r2r|FE_PULSER_P[3]~reg0\,
	i113 => \inst_fe_r2r|i113\,
	FE_PULSER_P_2 => \inst_fe_r2r|FE_PULSER_P[2]~reg0\,
	FE_PULSER_P_1 => \inst_fe_r2r|FE_PULSER_P[1]~reg0\,
	FE_PULSER_P_0 => \inst_fe_r2r|FE_PULSER_P[0]~reg0\,
	FE_PULSER_N_3 => \inst_fe_r2r|FE_PULSER_N[3]~reg0\,
	FE_PULSER_N_2 => \inst_fe_r2r|FE_PULSER_N[2]~reg0\,
	FE_PULSER_N_1 => \inst_fe_r2r|FE_PULSER_N[1]~reg0\,
	FE_PULSER_N_0 => \inst_fe_r2r|FE_PULSER_N[0]~reg0\);
flasher_board_inst : flasher_board
PORT MAP (
	CLK => \altclklock_component|outclock0\,
	RST => \inst_ROC|RST~reg0\,
	command_2_local_24 => \slaveregister_inst|command_2_local[24]\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	FL_Trigger => \flasher_board_inst|FL_Trigger~reg0\,
	LEDdelay_0 => \flasher_board_inst|LEDdelay[0]\);
dcom_ap_inst : dcom_ap
PORT MAP (
	CLK20 => \altclklock_component|outclock0\,
	sload_path_47 => \wysi_counter|sload_path[47]\,
	sload_path_46 => \wysi_counter|sload_path[46]\,
	sload_path_45 => \wysi_counter|sload_path[45]\,
	sload_path_44 => \wysi_counter|sload_path[44]\,
	sload_path_43 => \wysi_counter|sload_path[43]\,
	sload_path_42 => \wysi_counter|sload_path[42]\,
	sload_path_41 => \wysi_counter|sload_path[41]\,
	sload_path_40 => \wysi_counter|sload_path[40]\,
	sload_path_39 => \wysi_counter|sload_path[39]\,
	sload_path_38 => \wysi_counter|sload_path[38]\,
	sload_path_37 => \wysi_counter|sload_path[37]\,
	sload_path_36 => \wysi_counter|sload_path[36]\,
	sload_path_35 => \wysi_counter|sload_path[35]\,
	sload_path_34 => \wysi_counter|sload_path[34]\,
	sload_path_33 => \wysi_counter|sload_path[33]\,
	sload_path_32 => \wysi_counter|sload_path[32]\,
	sload_path_31 => \wysi_counter|sload_path[31]\,
	sload_path_30 => \wysi_counter|sload_path[30]\,
	sload_path_29 => \wysi_counter|sload_path[29]\,
	sload_path_28 => \wysi_counter|sload_path[28]\,
	sload_path_27 => \wysi_counter|sload_path[27]\,
	sload_path_26 => \wysi_counter|sload_path[26]\,
	sload_path_25 => \wysi_counter|sload_path[25]\,
	sload_path_24 => \wysi_counter|sload_path[24]\,
	sload_path_23 => \wysi_counter|sload_path[23]\,
	sload_path_22 => \wysi_counter|sload_path[22]\,
	sload_path_21 => \wysi_counter|sload_path[21]\,
	sload_path_20 => \wysi_counter|sload_path[20]\,
	sload_path_19 => \wysi_counter|sload_path[19]\,
	sload_path_18 => \wysi_counter|sload_path[18]\,
	sload_path_17 => \wysi_counter|sload_path[17]\,
	sload_path_16 => \wysi_counter|sload_path[16]\,
	sload_path_151 => \wysi_counter|sload_path[15]~1\,
	sload_path_141 => \wysi_counter|sload_path[14]~1\,
	sload_path_131 => \wysi_counter|sload_path[13]~1\,
	sload_path_121 => \wysi_counter|sload_path[12]~1\,
	sload_path_111 => \wysi_counter|sload_path[11]~1\,
	sload_path_101 => \wysi_counter|sload_path[10]~1\,
	sload_path_91 => \wysi_counter|sload_path[9]~1\,
	sload_path_81 => \wysi_counter|sload_path[8]~1\,
	sload_path_71 => \wysi_counter|sload_path[7]~1\,
	sload_path_61 => \wysi_counter|sload_path[6]~1\,
	sload_path_51 => \wysi_counter|sload_path[5]~1\,
	sload_path_48 => \wysi_counter|sload_path[4]~1\,
	sload_path_310 => \wysi_counter|sload_path[3]~1\,
	sload_path_210 => \wysi_counter|sload_path[2]~1\,
	sload_path_110 => \wysi_counter|sload_path[1]~1\,
	sload_path_01 => \wysi_counter|sload_path[0]~1\,
	portadataout_0 => \dp0|portadataout[0]\,
	portadataout_1 => \dp0|portadataout[1]\,
	portadataout_2 => \dp0|portadataout[2]\,
	portadataout_3 => \dp0|portadataout[3]\,
	portadataout_4 => \dp0|portadataout[4]\,
	portadataout_5 => \dp0|portadataout[5]\,
	portadataout_6 => \dp0|portadataout[6]\,
	portadataout_7 => \dp0|portadataout[7]\,
	portadataout_8 => \dp0|portadataout[8]\,
	portadataout_9 => \dp0|portadataout[9]\,
	portadataout_10 => \dp0|portadataout[10]\,
	portadataout_11 => \dp0|portadataout[11]\,
	portadataout_12 => \dp0|portadataout[12]\,
	portadataout_13 => \dp0|portadataout[13]\,
	portadataout_14 => \dp0|portadataout[14]\,
	portadataout_15 => \dp0|portadataout[15]\,
	portadataout_16 => \dp0|portadataout[16]\,
	portadataout_17 => \dp0|portadataout[17]\,
	portadataout_18 => \dp0|portadataout[18]\,
	portadataout_19 => \dp0|portadataout[19]\,
	portadataout_20 => \dp0|portadataout[20]\,
	portadataout_21 => \dp0|portadataout[21]\,
	portadataout_22 => \dp0|portadataout[22]\,
	portadataout_23 => \dp0|portadataout[23]\,
	portadataout_24 => \dp0|portadataout[24]\,
	portadataout_25 => \dp0|portadataout[25]\,
	portadataout_26 => \dp0|portadataout[26]\,
	portadataout_27 => \dp0|portadataout[27]\,
	portadataout_28 => \dp0|portadataout[28]\,
	portadataout_29 => \dp0|portadataout[29]\,
	portadataout_30 => \dp0|portadataout[30]\,
	portadataout_31 => \dp0|portadataout[31]\,
	com_ctrl_local_2 => \slaveregister_inst|com_ctrl_local[2]\,
	RST => \inst_ROC|RST~reg0\,
	rx_dpr_radr_local_0 => \slaveregister_inst|rx_dpr_radr_local[0]\,
	tx_dpr_wadr_local_0 => \slaveregister_inst|tx_dpr_wadr_local[0]\,
	rx_dpr_radr_local_1 => \slaveregister_inst|rx_dpr_radr_local[1]\,
	tx_dpr_wadr_local_1 => \slaveregister_inst|tx_dpr_wadr_local[1]\,
	rx_dpr_radr_local_2 => \slaveregister_inst|rx_dpr_radr_local[2]\,
	tx_dpr_wadr_local_2 => \slaveregister_inst|tx_dpr_wadr_local[2]\,
	rx_dpr_radr_local_3 => \slaveregister_inst|rx_dpr_radr_local[3]\,
	tx_dpr_wadr_local_3 => \slaveregister_inst|tx_dpr_wadr_local[3]\,
	rx_dpr_radr_local_4 => \slaveregister_inst|rx_dpr_radr_local[4]\,
	tx_dpr_wadr_local_4 => \slaveregister_inst|tx_dpr_wadr_local[4]\,
	rx_dpr_radr_local_5 => \slaveregister_inst|rx_dpr_radr_local[5]\,
	tx_dpr_wadr_local_5 => \slaveregister_inst|tx_dpr_wadr_local[5]\,
	rx_dpr_radr_local_6 => \slaveregister_inst|rx_dpr_radr_local[6]\,
	tx_dpr_wadr_local_6 => \slaveregister_inst|tx_dpr_wadr_local[6]\,
	rx_dpr_radr_local_7 => \slaveregister_inst|rx_dpr_radr_local[7]\,
	tx_dpr_wadr_local_7 => \slaveregister_inst|tx_dpr_wadr_local[7]\,
	rx_dpr_radr_local_8 => \slaveregister_inst|rx_dpr_radr_local[8]\,
	tx_dpr_wadr_local_8 => \slaveregister_inst|tx_dpr_wadr_local[8]\,
	rx_dpr_radr_local_9 => \slaveregister_inst|rx_dpr_radr_local[9]\,
	tx_dpr_wadr_local_9 => \slaveregister_inst|tx_dpr_wadr_local[9]\,
	rx_dpr_radr_local_10 => \slaveregister_inst|rx_dpr_radr_local[10]\,
	tx_dpr_wadr_local_10 => \slaveregister_inst|tx_dpr_wadr_local[10]\,
	rx_dpr_radr_local_11 => \slaveregister_inst|rx_dpr_radr_local[11]\,
	tx_dpr_wadr_local_11 => \slaveregister_inst|tx_dpr_wadr_local[11]\,
	rx_dpr_radr_local_12 => \slaveregister_inst|rx_dpr_radr_local[12]\,
	tx_dpr_wadr_local_12 => \slaveregister_inst|tx_dpr_wadr_local[12]\,
	rx_dpr_radr_local_13 => \slaveregister_inst|rx_dpr_radr_local[13]\,
	tx_dpr_wadr_local_13 => \slaveregister_inst|tx_dpr_wadr_local[13]\,
	rx_dpr_radr_local_14 => \slaveregister_inst|rx_dpr_radr_local[14]\,
	tx_dpr_wadr_local_14 => \slaveregister_inst|tx_dpr_wadr_local[14]\,
	rx_dpr_radr_local_15 => \slaveregister_inst|rx_dpr_radr_local[15]\,
	tx_dpr_wadr_local_15 => \slaveregister_inst|tx_dpr_wadr_local[15]\,
	tx_pack_rdy => \slaveregister_inst|tx_pack_rdy~reg0\,
	rx_dpr_radr_stb => \slaveregister_inst|rx_dpr_radr_stb~reg0\,
	dom_id_48 => \slaveregister_inst|dom_id[48]~reg0\,
	dom_id_0 => \slaveregister_inst|dom_id[0]~reg0\,
	dom_id_1 => \slaveregister_inst|dom_id[1]~reg0\,
	dom_id_2 => \slaveregister_inst|dom_id[2]~reg0\,
	dom_id_3 => \slaveregister_inst|dom_id[3]~reg0\,
	dom_id_4 => \slaveregister_inst|dom_id[4]~reg0\,
	dom_id_5 => \slaveregister_inst|dom_id[5]~reg0\,
	dom_id_6 => \slaveregister_inst|dom_id[6]~reg0\,
	dom_id_7 => \slaveregister_inst|dom_id[7]~reg0\,
	dom_id_8 => \slaveregister_inst|dom_id[8]~reg0\,
	dom_id_9 => \slaveregister_inst|dom_id[9]~reg0\,
	dom_id_10 => \slaveregister_inst|dom_id[10]~reg0\,
	dom_id_11 => \slaveregister_inst|dom_id[11]~reg0\,
	dom_id_12 => \slaveregister_inst|dom_id[12]~reg0\,
	dom_id_13 => \slaveregister_inst|dom_id[13]~reg0\,
	dom_id_14 => \slaveregister_inst|dom_id[14]~reg0\,
	dom_id_15 => \slaveregister_inst|dom_id[15]~reg0\,
	dom_id_16 => \slaveregister_inst|dom_id[16]~reg0\,
	dom_id_17 => \slaveregister_inst|dom_id[17]~reg0\,
	dom_id_18 => \slaveregister_inst|dom_id[18]~reg0\,
	dom_id_19 => \slaveregister_inst|dom_id[19]~reg0\,
	dom_id_20 => \slaveregister_inst|dom_id[20]~reg0\,
	dom_id_21 => \slaveregister_inst|dom_id[21]~reg0\,
	dom_id_22 => \slaveregister_inst|dom_id[22]~reg0\,
	dom_id_23 => \slaveregister_inst|dom_id[23]~reg0\,
	dom_id_24 => \slaveregister_inst|dom_id[24]~reg0\,
	dom_id_25 => \slaveregister_inst|dom_id[25]~reg0\,
	dom_id_26 => \slaveregister_inst|dom_id[26]~reg0\,
	dom_id_27 => \slaveregister_inst|dom_id[27]~reg0\,
	dom_id_28 => \slaveregister_inst|dom_id[28]~reg0\,
	dom_id_29 => \slaveregister_inst|dom_id[29]~reg0\,
	dom_id_30 => \slaveregister_inst|dom_id[30]~reg0\,
	dom_id_31 => \slaveregister_inst|dom_id[31]~reg0\,
	dom_id_32 => \slaveregister_inst|dom_id[32]~reg0\,
	dom_id_33 => \slaveregister_inst|dom_id[33]~reg0\,
	dom_id_34 => \slaveregister_inst|dom_id[34]~reg0\,
	dom_id_35 => \slaveregister_inst|dom_id[35]~reg0\,
	dom_id_36 => \slaveregister_inst|dom_id[36]~reg0\,
	dom_id_37 => \slaveregister_inst|dom_id[37]~reg0\,
	dom_id_38 => \slaveregister_inst|dom_id[38]~reg0\,
	dom_id_39 => \slaveregister_inst|dom_id[39]~reg0\,
	dom_id_40 => \slaveregister_inst|dom_id[40]~reg0\,
	dom_id_41 => \slaveregister_inst|dom_id[41]~reg0\,
	dom_id_42 => \slaveregister_inst|dom_id[42]~reg0\,
	dom_id_43 => \slaveregister_inst|dom_id[43]~reg0\,
	dom_id_44 => \slaveregister_inst|dom_id[44]~reg0\,
	dom_id_45 => \slaveregister_inst|dom_id[45]~reg0\,
	dom_id_46 => \slaveregister_inst|dom_id[46]~reg0\,
	dom_id_47 => \slaveregister_inst|dom_id[47]~reg0\,
	GND_port => \~GND\,
	COM_AD_D => ww_dcom_ap_inst_COM_AD_D,
	A_nB => \A_nB~combout\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	sload_path_15 => \wysi_counter|sload_path[15]\,
	sload_path_14 => \wysi_counter|sload_path[14]\,
	sload_path_13 => \wysi_counter|sload_path[13]\,
	sload_path_12 => \wysi_counter|sload_path[12]\,
	sload_path_11 => \wysi_counter|sload_path[11]\,
	sload_path_10 => \wysi_counter|sload_path[10]\,
	sload_path_9 => \wysi_counter|sload_path[9]\,
	sload_path_8 => \wysi_counter|sload_path[8]\,
	sload_path_7 => \wysi_counter|sload_path[7]\,
	sload_path_6 => \wysi_counter|sload_path[6]\,
	sload_path_5 => \wysi_counter|sload_path[5]\,
	sload_path_4 => \wysi_counter|sload_path[4]\,
	sload_path_3 => \wysi_counter|sload_path[3]\,
	sload_path_2 => \wysi_counter|sload_path[2]\,
	sload_path_1 => \wysi_counter|sload_path[1]\,
	sload_path_0 => \wysi_counter|sload_path[0]\,
	q_15 => \wysi_counter|q[15]\,
	q_14 => \wysi_counter|q[14]\,
	q_13 => \wysi_counter|q[13]\,
	q_12 => \wysi_counter|q[12]\,
	q_11 => \wysi_counter|q[11]\,
	q_10 => \wysi_counter|q[10]\,
	q_9 => \wysi_counter|q[9]\,
	q_8 => \wysi_counter|q[8]\,
	q_7 => \wysi_counter|q[7]\,
	q_6 => \wysi_counter|q[6]\,
	q_5 => \wysi_counter|q[5]\,
	q_4 => \wysi_counter|q[4]\,
	q_3 => \wysi_counter|q[3]\,
	q_2 => \wysi_counter|q[2]\,
	q_1 => \wysi_counter|q[1]\,
	q_0 => \wysi_counter|q[0]\,
	q_121 => \wysi_counter|q[12]~1\,
	q_111 => \wysi_counter|q[11]~1\,
	q_101 => \wysi_counter|q[10]~1\,
	q_91 => \wysi_counter|q[9]~1\,
	q_81 => \wysi_counter|q[8]~1\,
	q_71 => \wysi_counter|q[7]~1\,
	q_61 => \wysi_counter|q[6]~1\,
	q_51 => \wysi_counter|q[5]~1\,
	q_41 => \wysi_counter|q[4]~1\,
	q_31 => \wysi_counter|q[3]~1\,
	q_21 => \wysi_counter|q[2]~1\,
	q_16 => \wysi_counter|q[1]~1\,
	q_01 => \wysi_counter|q[0]~1\,
	COMM_RESET => \DC_CTRAP|COMM_RESET~reg\,
	inst23_7 => \DC_Tx_chan_ap|inst23[7]\,
	inst23_6 => \DC_Tx_chan_ap|inst23[6]\,
	inst23_0 => \DC_Tx_chan_ap|inst23[0]\,
	pulse_sent => \DCOM_tcal_timer|pulse_sent~reg\,
	pulse_rcvd => \inst2|pulse_rcvd~reg\,
	tcal_rcvd => \inst4|tcal_rcvd~reg\,
	buf_res => \DC_CTRAP|buf_res~reg\,
	ctrl_error => \inst10|ctrl_error~reg\,
	idle_rcvd => \inst4|idle_rcvd~reg\,
	drreq_rcvd => \inst4|drreq_rcvd~reg\,
	rx_we => \inst10|rx_we~reg\,
	inst46_0 => \DC_Rx_chan_ap|inst46[0]\,
	inst46_1 => \DC_Rx_chan_ap|inst46[1]\,
	inst46_2 => \DC_Rx_chan_ap|inst46[2]\,
	inst46_3 => \DC_Rx_chan_ap|inst46[3]\,
	inst46_4 => \DC_Rx_chan_ap|inst46[4]\,
	inst46_5 => \DC_Rx_chan_ap|inst46[5]\,
	inst46_6 => \DC_Rx_chan_ap|inst46[6]\,
	inst46_7 => \DC_Rx_chan_ap|inst46[7]\,
	inst43_0 => \DC_Rx_chan_ap|inst43[0]\,
	inst43_1 => \DC_Rx_chan_ap|inst43[1]\,
	inst43_2 => \DC_Rx_chan_ap|inst43[2]\,
	inst43_3 => \DC_Rx_chan_ap|inst43[3]\,
	inst43_4 => \DC_Rx_chan_ap|inst43[4]\,
	inst43_5 => \DC_Rx_chan_ap|inst43[5]\,
	inst43_6 => \DC_Rx_chan_ap|inst43[6]\,
	inst43_7 => \DC_Rx_chan_ap|inst43[7]\,
	inst41_0 => \DC_Rx_chan_ap|inst41[0]\,
	inst41_1 => \DC_Rx_chan_ap|inst41[1]\,
	inst41_2 => \DC_Rx_chan_ap|inst41[2]\,
	inst41_3 => \DC_Rx_chan_ap|inst41[3]\,
	inst41_4 => \DC_Rx_chan_ap|inst41[4]\,
	inst41_5 => \DC_Rx_chan_ap|inst41[5]\,
	inst41_6 => \DC_Rx_chan_ap|inst41[6]\,
	inst41_7 => \DC_Rx_chan_ap|inst41[7]\,
	inst38_0 => \DC_Rx_chan_ap|inst38[0]\,
	inst38_1 => \DC_Rx_chan_ap|inst38[1]\,
	inst38_2 => \DC_Rx_chan_ap|inst38[2]\,
	inst38_3 => \DC_Rx_chan_ap|inst38[3]\,
	inst38_4 => \DC_Rx_chan_ap|inst38[4]\,
	inst38_5 => \DC_Rx_chan_ap|inst38[5]\,
	inst38_6 => \DC_Rx_chan_ap|inst38[6]\,
	inst38_7 => \DC_Rx_chan_ap|inst38[7]\,
	comres_rcvd => \inst4|comres_rcvd~reg\,
	op_6 => \inst6|op_6~350\,
	inst16_0 => \DC_Tx_chan_ap|inst16[0]\,
	inst50 => \DC_Tx_chan_ap|inst50\,
	inst16_1 => \DC_Tx_chan_ap|inst16[1]\,
	reboot_gnt => \DC_CTRAP|reboot_gnt~reg\,
	inst16_2 => \DC_Tx_chan_ap|inst16[2]\,
	last_node_0 => \lpm_or_component|last_node[0]~15\,
	inst16_3 => \DC_Tx_chan_ap|inst16[3]\,
	inst16_4 => \DC_Tx_chan_ap|inst16[4]\,
	op_61 => \inst24|op_6~324\,
	inst16_5 => \DC_Tx_chan_ap|inst16[5]\,
	com_avail => \DC_CTRAP|com_avail~reg\,
	inst16_6 => \DC_Tx_chan_ap|inst16[6]\,
	inst16_7 => \DC_Tx_chan_ap|inst16[7]\,
	inst16_8 => \DC_Tx_chan_ap|inst16[8]\,
	inst16_9 => \DC_Tx_chan_ap|inst16[9]\,
	inst16_10 => \DC_Tx_chan_ap|inst16[10]\,
	inst16_11 => \DC_Tx_chan_ap|inst16[11]\,
	inst16_12 => \DC_Tx_chan_ap|inst16[12]\,
	inst16_13 => \DC_Tx_chan_ap|inst16[13]\,
	inst16_14 => \DC_Tx_chan_ap|inst16[14]\,
	inst16_15 => \DC_Tx_chan_ap|inst16[15]\);
timer_inst : timer
PORT MAP (
	outclock1 => \altclklock_component|outclock1~1\,
	RST => \inst_ROC|RST~reg0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	sload_path_47 => \wysi_counter|sload_path[47]\,
	sload_path_46 => \wysi_counter|sload_path[46]\,
	sload_path_45 => \wysi_counter|sload_path[45]\,
	sload_path_44 => \wysi_counter|sload_path[44]\,
	sload_path_43 => \wysi_counter|sload_path[43]\,
	sload_path_42 => \wysi_counter|sload_path[42]\,
	sload_path_41 => \wysi_counter|sload_path[41]\,
	sload_path_40 => \wysi_counter|sload_path[40]\,
	sload_path_39 => \wysi_counter|sload_path[39]\,
	sload_path_38 => \wysi_counter|sload_path[38]\,
	sload_path_37 => \wysi_counter|sload_path[37]\,
	sload_path_36 => \wysi_counter|sload_path[36]\,
	sload_path_35 => \wysi_counter|sload_path[35]\,
	sload_path_34 => \wysi_counter|sload_path[34]\,
	sload_path_33 => \wysi_counter|sload_path[33]\,
	sload_path_32 => \wysi_counter|sload_path[32]\,
	sload_path_31 => \wysi_counter|sload_path[31]\,
	sload_path_30 => \wysi_counter|sload_path[30]\,
	sload_path_29 => \wysi_counter|sload_path[29]\,
	sload_path_28 => \wysi_counter|sload_path[28]\,
	sload_path_27 => \wysi_counter|sload_path[27]\,
	sload_path_26 => \wysi_counter|sload_path[26]\,
	sload_path_25 => \wysi_counter|sload_path[25]\,
	sload_path_24 => \wysi_counter|sload_path[24]\,
	sload_path_23 => \wysi_counter|sload_path[23]\,
	sload_path_22 => \wysi_counter|sload_path[22]\,
	sload_path_21 => \wysi_counter|sload_path[21]\,
	sload_path_20 => \wysi_counter|sload_path[20]\,
	sload_path_19 => \wysi_counter|sload_path[19]\,
	sload_path_18 => \wysi_counter|sload_path[18]\,
	sload_path_17 => \wysi_counter|sload_path[17]\,
	sload_path_16 => \wysi_counter|sload_path[16]\,
	sload_path_15 => \wysi_counter|sload_path[15]~1\,
	sload_path_14 => \wysi_counter|sload_path[14]~1\,
	sload_path_13 => \wysi_counter|sload_path[13]~1\,
	sload_path_12 => \wysi_counter|sload_path[12]~1\,
	sload_path_11 => \wysi_counter|sload_path[11]~1\,
	sload_path_10 => \wysi_counter|sload_path[10]~1\,
	sload_path_9 => \wysi_counter|sload_path[9]~1\,
	sload_path_8 => \wysi_counter|sload_path[8]~1\,
	sload_path_7 => \wysi_counter|sload_path[7]~1\,
	sload_path_6 => \wysi_counter|sload_path[6]~1\,
	sload_path_5 => \wysi_counter|sload_path[5]~1\,
	sload_path_4 => \wysi_counter|sload_path[4]~1\,
	sload_path_3 => \wysi_counter|sload_path[3]~1\,
	sload_path_2 => \wysi_counter|sload_path[2]~1\,
	sload_path_1 => \wysi_counter|sload_path[1]~1\,
	sload_path_0 => \wysi_counter|sload_path[0]~1\);
LED2ATWDdelay_inst : LED2ATWDdelay
PORT MAP (
	CLK40 => \altclklock_component|outclock1~1\,
	RST => \inst_ROC|RST~reg0\,
	command_4_local_0 => \slaveregister_inst|command_4_local[0]\,
	command_4_local_1 => \slaveregister_inst|command_4_local[1]\,
	command_4_local_2 => \slaveregister_inst|command_4_local[2]\,
	command_4_local_3 => \slaveregister_inst|command_4_local[3]\,
	LEDdelay_0 => \inst_single_led|LEDdelay[0]\,
	LEDdelay_01 => \flasher_board_inst|LEDdelay[0]\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	i => \LED2ATWDdelay_inst|i~8\);

\uartrxd_pin|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_UARTRXD,
	combout => \UARTRXD~combout\);

\intextpin_pin|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_INTEXTPIN,
	combout => \INTEXTPIN~combout\);

\uartdsrn_pin|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_UARTDSRN,
	combout => \UARTDSRN~combout\);

\uartctsn_pin|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_UARTCTSN,
	combout => \UARTCTSN~combout\);

\ebiack_pin|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_EBIACK,
	combout => \EBIACK~combout\);

\clk_ref_pin|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_CLK_REF,
	combout => \CLK_REF~combout\);

\npor_pin|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_nPOR,
	combout => \nPOR~combout\);

\wysi_counter|counter_cell[0]\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|sload_path[0]~2\ = DFFE(!\wysi_counter|sload_path[0]~2\, GLOBAL(outclock1), , , )
-- \wysi_counter|counter_cell[0]~lut2\ = CARRY(\wysi_counter|sload_path[0]~2\)

-- pragma translate_off
GENERIC MAP (
	operation_mode => "qfbk_counter",
	packed_mode => "false",
	lut_mask => "0FF0",
	output_mode => "reg_only")
-- pragma translate_on
PORT MAP (
	clk => \altclklock_component|outclock1\,
	devclrn => devclrn,
	devpor => devpor,
	regout => \wysi_counter|sload_path[0]~2\,
	cout => \wysi_counter|counter_cell[0]~lut2\);

\COINC_DOWN_A~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_COINC_DOWN_A,
	combout => \COINC_DOWN_A~combout\);

\COINC_DOWN_ABAR~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_COINC_DOWN_ABAR,
	combout => \COINC_DOWN_ABAR~combout\);

\COINC_DOWN_B~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_COINC_DOWN_B,
	combout => \COINC_DOWN_B~combout\);

\COINC_DOWN_BBAR~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_COINC_DOWN_BBAR,
	combout => \COINC_DOWN_BBAR~combout\);

\COINC_UP_A~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_COINC_UP_A,
	combout => \COINC_UP_A~combout\);

\COINC_UP_ABAR~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_COINC_UP_ABAR,
	combout => \COINC_UP_ABAR~combout\);

\COINC_UP_B~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_COINC_UP_B,
	combout => \COINC_UP_B~combout\);

\COINC_UP_BBAR~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_COINC_UP_BBAR,
	combout => \COINC_UP_BBAR~combout\);

\FL_ATTN~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_FL_ATTN,
	combout => \FL_ATTN~combout\);

\FL_TDO~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_FL_TDO,
	combout => \FL_TDO~combout\);

\CLK2p~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_CLK2p,
	combout => \CLK2p~combout\);

\OneSPE~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_OneSPE,
	combout => \OneSPE~combout\);

\COM_AD_D[9]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_COM_AD_D(9),
	combout => \COM_AD_D[9]~combout\);

\A_nB~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_A_nB,
	combout => \A_nB~combout\);

\FLASH_AD_D[0]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_FLASH_AD_D(0),
	combout => \FLASH_AD_D[0]~combout\);

\FLASH_AD_D[1]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_FLASH_AD_D(1),
	combout => \FLASH_AD_D[1]~combout\);

\FLASH_AD_D[2]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_FLASH_AD_D(2),
	combout => \FLASH_AD_D[2]~combout\);

\FLASH_AD_D[3]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_FLASH_AD_D(3),
	combout => \FLASH_AD_D[3]~combout\);

\FLASH_AD_D[4]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_FLASH_AD_D(4),
	combout => \FLASH_AD_D[4]~combout\);

\FLASH_AD_D[5]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_FLASH_AD_D(5),
	combout => \FLASH_AD_D[5]~combout\);

\FLASH_AD_D[6]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_FLASH_AD_D(6),
	combout => \FLASH_AD_D[6]~combout\);

\FLASH_AD_D[7]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_FLASH_AD_D(7),
	combout => \FLASH_AD_D[7]~combout\);

\FLASH_AD_D[8]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_FLASH_AD_D(8),
	combout => \FLASH_AD_D[8]~combout\);

\FLASH_AD_D[9]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_FLASH_AD_D(9),
	combout => \FLASH_AD_D[9]~combout\);

\FLASH_NCO~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_FLASH_NCO,
	combout => \FLASH_NCO~combout\);

\CLK1p~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_CLK1p,
	combout => \CLK1p~combout\);

\MultiSPE~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_MultiSPE,
	combout => \MultiSPE~combout\);

\COM_AD_D[8]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_COM_AD_D(8),
	combout => \COM_AD_D[8]~combout\);

\ATWD0_D[0]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_ATWD0_D(0),
	combout => \ATWD0_D[0]~combout\);

\ATWD0_D[3]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_ATWD0_D(3),
	combout => \ATWD0_D[3]~combout\);

\ATWD0_D[2]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_ATWD0_D(2),
	combout => \ATWD0_D[2]~combout\);

\ATWD0_D[1]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_ATWD0_D(1),
	combout => \ATWD0_D[1]~combout\);

\ATWD0_D[5]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_ATWD0_D(5),
	combout => \ATWD0_D[5]~combout\);

\ATWD0_D[4]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_ATWD0_D(4),
	combout => \ATWD0_D[4]~combout\);

\ATWD0_D[8]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_ATWD0_D(8),
	combout => \ATWD0_D[8]~combout\);

\ATWD0_D[9]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_ATWD0_D(9),
	combout => \ATWD0_D[9]~combout\);

\ATWD0_D[7]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_ATWD0_D(7),
	combout => \ATWD0_D[7]~combout\);

\ATWD0_D[6]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_ATWD0_D(6),
	combout => \ATWD0_D[6]~combout\);

\ATWD1_D[0]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_ATWD1_D(0),
	combout => \ATWD1_D[0]~combout\);

\ATWD1_D[3]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_ATWD1_D(3),
	combout => \ATWD1_D[3]~combout\);

\ATWD1_D[2]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_ATWD1_D(2),
	combout => \ATWD1_D[2]~combout\);

\ATWD1_D[1]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_ATWD1_D(1),
	combout => \ATWD1_D[1]~combout\);

\ATWD1_D[5]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_ATWD1_D(5),
	combout => \ATWD1_D[5]~combout\);

\ATWD1_D[4]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_ATWD1_D(4),
	combout => \ATWD1_D[4]~combout\);

\ATWD1_D[8]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_ATWD1_D(8),
	combout => \ATWD1_D[8]~combout\);

\ATWD1_D[9]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_ATWD1_D(9),
	combout => \ATWD1_D[9]~combout\);

\ATWD1_D[7]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_ATWD1_D(7),
	combout => \ATWD1_D[7]~combout\);

\ATWD1_D[6]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_ATWD1_D(6),
	combout => \ATWD1_D[6]~combout\);

\TriggerComplete_0~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_TriggerComplete_0,
	combout => \TriggerComplete_0~combout\);

\TriggerComplete_1~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_TriggerComplete_1,
	combout => \TriggerComplete_1~combout\);

\COM_AD_D[7]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_COM_AD_D(7),
	combout => \COM_AD_D[7]~combout\);

\COM_AD_D[6]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_COM_AD_D(6),
	combout => \COM_AD_D[6]~combout\);

\COM_AD_D[0]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_COM_AD_D(0),
	combout => \COM_AD_D[0]~combout\);

\COM_AD_D[5]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_COM_AD_D(5),
	combout => \COM_AD_D[5]~combout\);

\COM_AD_D[1]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_COM_AD_D(1),
	combout => \COM_AD_D[1]~combout\);

\COM_AD_D[4]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_COM_AD_D(4),
	combout => \COM_AD_D[4]~combout\);

\COM_AD_D[2]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_COM_AD_D(2),
	combout => \COM_AD_D[2]~combout\);

\COM_AD_D[3]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_COM_AD_D(3),
	combout => \COM_AD_D[3]~combout\);

\wysi_counter|counter_cell[0]~0_I\ : apex20ke_lcell 
-- Equation(s):
-- \wysi_counter|counter_cell[0]~0\ = \wysi_counter|counter_cell[0]~lut2\ & \wysi_counter|counter_cell[0]~0\

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	cin_used => "true",
	packed_mode => "false",
	lut_mask => "F000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	datad => \wysi_counter|counter_cell[0]~0\,
	cin => \wysi_counter|counter_cell[0]~lut2\,
	devclrn => devclrn,
	devpor => devpor,
	combout => \wysi_counter|counter_cell[0]~0\);

\~GND~I\ : apex20ke_lcell 
-- Equation(s):
-- \~GND\ = GND

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "0000",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	combout => \~GND\);

\~VCC~I\ : apex20ke_lcell 
-- Equation(s):
-- \~VCC\ = VCC

-- pragma translate_off
GENERIC MAP (
	operation_mode => "normal",
	packed_mode => "false",
	lut_mask => "FFFF",
	output_mode => "comb_only")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	combout => \~VCC\);

\sdramdqs_pbidir[0]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQSOUT0\,
	oe => \core|core~SDRAMDQSOE\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQS(0),
	combout => \sdramdqs_pbidir[0]|combout\);

\sdramdqs_pbidir[1]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQSOUT1\,
	oe => \core|core~SDRAMDQSOE\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQS(1),
	combout => \sdramdqs_pbidir[1]|combout\);

\sdramdqs_pbidir[2]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQSOUT2\,
	oe => \core|core~SDRAMDQSOE\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQS(2),
	combout => \sdramdqs_pbidir[2]|combout\);

\sdramdqs_pbidir[3]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQSOUT3\,
	oe => \core|core~SDRAMDQSOE\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQS(3),
	combout => \sdramdqs_pbidir[3]|combout\);

\sdramdq_pbidir[0]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQOUT0\,
	oe => \core|core~SDRAMDQOE0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQ(0),
	combout => \sdramdq_pbidir[0]|combout\);

\sdramdq_pbidir[1]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQOUT1\,
	oe => \core|core~SDRAMDQOE0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQ(1),
	combout => \sdramdq_pbidir[1]|combout\);

\sdramdq_pbidir[2]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQOUT2\,
	oe => \core|core~SDRAMDQOE0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQ(2),
	combout => \sdramdq_pbidir[2]|combout\);

\sdramdq_pbidir[3]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQOUT3\,
	oe => \core|core~SDRAMDQOE0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQ(3),
	combout => \sdramdq_pbidir[3]|combout\);

\sdramdq_pbidir[4]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQOUT4\,
	oe => \core|core~SDRAMDQOE0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQ(4),
	combout => \sdramdq_pbidir[4]|combout\);

\sdramdq_pbidir[5]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQOUT5\,
	oe => \core|core~SDRAMDQOE0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQ(5),
	combout => \sdramdq_pbidir[5]|combout\);

\sdramdq_pbidir[6]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQOUT6\,
	oe => \core|core~SDRAMDQOE0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQ(6),
	combout => \sdramdq_pbidir[6]|combout\);

\sdramdq_pbidir[7]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQOUT7\,
	oe => \core|core~SDRAMDQOE0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQ(7),
	combout => \sdramdq_pbidir[7]|combout\);

\sdramdq_pbidir[8]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQOUT8\,
	oe => \core|core~SDRAMDQOE1\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQ(8),
	combout => \sdramdq_pbidir[8]|combout\);

\sdramdq_pbidir[9]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQOUT9\,
	oe => \core|core~SDRAMDQOE1\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQ(9),
	combout => \sdramdq_pbidir[9]|combout\);

\sdramdq_pbidir[10]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQOUT10\,
	oe => \core|core~SDRAMDQOE1\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQ(10),
	combout => \sdramdq_pbidir[10]|combout\);

\sdramdq_pbidir[11]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQOUT11\,
	oe => \core|core~SDRAMDQOE1\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQ(11),
	combout => \sdramdq_pbidir[11]|combout\);

\sdramdq_pbidir[12]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQOUT12\,
	oe => \core|core~SDRAMDQOE1\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQ(12),
	combout => \sdramdq_pbidir[12]|combout\);

\sdramdq_pbidir[13]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQOUT13\,
	oe => \core|core~SDRAMDQOE1\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQ(13),
	combout => \sdramdq_pbidir[13]|combout\);

\sdramdq_pbidir[14]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQOUT14\,
	oe => \core|core~SDRAMDQOE1\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQ(14),
	combout => \sdramdq_pbidir[14]|combout\);

\sdramdq_pbidir[15]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQOUT15\,
	oe => \core|core~SDRAMDQOE1\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQ(15),
	combout => \sdramdq_pbidir[15]|combout\);

\sdramdq_pbidir[16]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQOUT16\,
	oe => \core|core~SDRAMDQOE2\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQ(16),
	combout => \sdramdq_pbidir[16]|combout\);

\sdramdq_pbidir[17]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQOUT17\,
	oe => \core|core~SDRAMDQOE2\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQ(17),
	combout => \sdramdq_pbidir[17]|combout\);

\sdramdq_pbidir[18]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQOUT18\,
	oe => \core|core~SDRAMDQOE2\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQ(18),
	combout => \sdramdq_pbidir[18]|combout\);

\sdramdq_pbidir[19]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQOUT19\,
	oe => \core|core~SDRAMDQOE2\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQ(19),
	combout => \sdramdq_pbidir[19]|combout\);

\sdramdq_pbidir[20]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQOUT20\,
	oe => \core|core~SDRAMDQOE2\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQ(20),
	combout => \sdramdq_pbidir[20]|combout\);

\sdramdq_pbidir[21]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQOUT21\,
	oe => \core|core~SDRAMDQOE2\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQ(21),
	combout => \sdramdq_pbidir[21]|combout\);

\sdramdq_pbidir[22]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQOUT22\,
	oe => \core|core~SDRAMDQOE2\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQ(22),
	combout => \sdramdq_pbidir[22]|combout\);

\sdramdq_pbidir[23]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQOUT23\,
	oe => \core|core~SDRAMDQOE2\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQ(23),
	combout => \sdramdq_pbidir[23]|combout\);

\sdramdq_pbidir[24]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQOUT24\,
	oe => \core|core~SDRAMDQOE3\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQ(24),
	combout => \sdramdq_pbidir[24]|combout\);

\sdramdq_pbidir[25]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQOUT25\,
	oe => \core|core~SDRAMDQOE3\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQ(25),
	combout => \sdramdq_pbidir[25]|combout\);

\sdramdq_pbidir[26]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQOUT26\,
	oe => \core|core~SDRAMDQOE3\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQ(26),
	combout => \sdramdq_pbidir[26]|combout\);

\sdramdq_pbidir[27]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQOUT27\,
	oe => \core|core~SDRAMDQOE3\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQ(27),
	combout => \sdramdq_pbidir[27]|combout\);

\sdramdq_pbidir[28]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQOUT28\,
	oe => \core|core~SDRAMDQOE3\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQ(28),
	combout => \sdramdq_pbidir[28]|combout\);

\sdramdq_pbidir[29]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQOUT29\,
	oe => \core|core~SDRAMDQOE3\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQ(29),
	combout => \sdramdq_pbidir[29]|combout\);

\sdramdq_pbidir[30]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQOUT30\,
	oe => \core|core~SDRAMDQOE3\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQ(30),
	combout => \sdramdq_pbidir[30]|combout\);

\sdramdq_pbidir[31]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQOUT31\,
	oe => \core|core~SDRAMDQOE3\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => SDRAMDQ(31),
	combout => \sdramdq_pbidir[31]|combout\);

\ebidq_pbidir[0]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIDQOUT0\,
	oe => \core|core~EBIDQOE\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => EBIDQ(0),
	combout => \ebidq_pbidir[0]|combout\);

\ebidq_pbidir[1]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIDQOUT1\,
	oe => \core|core~EBIDQOE\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => EBIDQ(1),
	combout => \ebidq_pbidir[1]|combout\);

\ebidq_pbidir[2]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIDQOUT2\,
	oe => \core|core~EBIDQOE\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => EBIDQ(2),
	combout => \ebidq_pbidir[2]|combout\);

\ebidq_pbidir[3]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIDQOUT3\,
	oe => \core|core~EBIDQOE\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => EBIDQ(3),
	combout => \ebidq_pbidir[3]|combout\);

\ebidq_pbidir[4]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIDQOUT4\,
	oe => \core|core~EBIDQOE\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => EBIDQ(4),
	combout => \ebidq_pbidir[4]|combout\);

\ebidq_pbidir[5]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIDQOUT5\,
	oe => \core|core~EBIDQOE\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => EBIDQ(5),
	combout => \ebidq_pbidir[5]|combout\);

\ebidq_pbidir[6]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIDQOUT6\,
	oe => \core|core~EBIDQOE\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => EBIDQ(6),
	combout => \ebidq_pbidir[6]|combout\);

\ebidq_pbidir[7]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIDQOUT7\,
	oe => \core|core~EBIDQOE\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => EBIDQ(7),
	combout => \ebidq_pbidir[7]|combout\);

\ebidq_pbidir[8]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIDQOUT8\,
	oe => \core|core~EBIDQOE\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => EBIDQ(8),
	combout => \ebidq_pbidir[8]|combout\);

\ebidq_pbidir[9]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIDQOUT9\,
	oe => \core|core~EBIDQOE\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => EBIDQ(9),
	combout => \ebidq_pbidir[9]|combout\);

\ebidq_pbidir[10]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIDQOUT10\,
	oe => \core|core~EBIDQOE\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => EBIDQ(10),
	combout => \ebidq_pbidir[10]|combout\);

\ebidq_pbidir[11]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIDQOUT11\,
	oe => \core|core~EBIDQOE\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => EBIDQ(11),
	combout => \ebidq_pbidir[11]|combout\);

\ebidq_pbidir[12]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIDQOUT12\,
	oe => \core|core~EBIDQOE\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => EBIDQ(12),
	combout => \ebidq_pbidir[12]|combout\);

\ebidq_pbidir[13]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIDQOUT13\,
	oe => \core|core~EBIDQOE\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => EBIDQ(13),
	combout => \ebidq_pbidir[13]|combout\);

\ebidq_pbidir[14]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIDQOUT14\,
	oe => \core|core~EBIDQOE\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => EBIDQ(14),
	combout => \ebidq_pbidir[14]|combout\);

\ebidq_pbidir[15]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIDQOUT15\,
	oe => \core|core~EBIDQOE\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => EBIDQ(15),
	combout => \ebidq_pbidir[15]|combout\);

\uartrin_pbidir|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~UARTRION\,
	oe => \core|core~UARTDCDRIOE\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => UARTRIN,
	combout => \uartrin_pbidir|combout\);

\uartdcdn_pbidir|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~UARTDCDON\,
	oe => \core|core~UARTDCDRIOE\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => UARTDCDN,
	combout => \uartdcdn_pbidir|combout\);

\nreset_pbidir|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "bidir",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low",
	open_drain_output => "true")
-- pragma translate_on
PORT MAP (
	datain => \core|core\,
	oe => VCC,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => nRESET,
	combout => \nreset_pbidir|combout\);

\ATWDTrigger_0~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "data_in_to_pin",
	feedback_mode => "from_reg",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_atwd_trigger|ATWDTrigger_sig~COMB\,
	clk => \altclklock_component|outclock1~1\,
	aclr => \inst_ROC|RST~reg0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_ATWDTrigger_0,
	regout => \inst_atwd_trigger|ATWDTrigger_sig\);

\ATWDTrigger_1~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "data_in_to_pin",
	feedback_mode => "from_reg",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_atwd_trigger|ATWDTrigger_sig~COMB_1\,
	clk => \altclklock_component|outclock1~1\,
	aclr => \inst_ROC|RST~reg0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_ATWDTrigger_1,
	regout => \inst_atwd_trigger|ATWDTrigger_sig~1\);

\CLK3p~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_CLK3p);

\CLK4p~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_CLK4p);

\COM_AD_OTR~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_COM_AD_OTR);

\HDV_Rx~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "input",
	reg_source_mode => "none",
	feedback_mode => "from_pin",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => GND,
	ena => VCC,
	padio => ww_HDV_Rx);

\uartdtrn_pout|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~UARTDTRN\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_UARTDTRN);

\uartrtsn_pout|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~UARTRTSN\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_UARTRTSN);

\uarttxd_pout|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~UARTTXD\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_UARTTXD);

\ebibe_pout[0]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIBE0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_EBIBE(0));

\ebibe_pout[1]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIBE1\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_EBIBE(1));

\ebicsn_pout[0]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBICSN0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_EBICSN(0));

\ebicsn_pout[1]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBICSN1\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_EBICSN(1));

\ebicsn_pout[2]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBICSN2\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_EBICSN(2));

\ebicsn_pout[3]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBICSN3\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_EBICSN(3));

\ebiaddr_pout[0]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIADDR0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_EBIADDR(0));

\ebiaddr_pout[1]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIADDR1\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_EBIADDR(1));

\ebiaddr_pout[2]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIADDR2\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_EBIADDR(2));

\ebiaddr_pout[3]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIADDR3\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_EBIADDR(3));

\ebiaddr_pout[4]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIADDR4\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_EBIADDR(4));

\ebiaddr_pout[5]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIADDR5\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_EBIADDR(5));

\ebiaddr_pout[6]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIADDR6\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_EBIADDR(6));

\ebiaddr_pout[7]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIADDR7\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_EBIADDR(7));

\ebiaddr_pout[8]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIADDR8\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_EBIADDR(8));

\ebiaddr_pout[9]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIADDR9\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_EBIADDR(9));

\ebiaddr_pout[10]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIADDR10\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_EBIADDR(10));

\ebiaddr_pout[11]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIADDR11\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_EBIADDR(11));

\ebiaddr_pout[12]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIADDR12\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_EBIADDR(12));

\ebiaddr_pout[13]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIADDR13\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_EBIADDR(13));

\ebiaddr_pout[14]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIADDR14\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_EBIADDR(14));

\ebiaddr_pout[15]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIADDR15\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_EBIADDR(15));

\ebiaddr_pout[16]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIADDR16\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_EBIADDR(16));

\ebiaddr_pout[17]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIADDR17\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_EBIADDR(17));

\ebiaddr_pout[18]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIADDR18\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_EBIADDR(18));

\ebiaddr_pout[19]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIADDR19\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_EBIADDR(19));

\ebiaddr_pout[20]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIADDR20\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_EBIADDR(20));

\ebiaddr_pout[21]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIADDR21\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_EBIADDR(21));

\ebiaddr_pout[22]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIADDR22\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_EBIADDR(22));

\ebiaddr_pout[23]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIADDR23\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_EBIADDR(23));

\ebiaddr_pout[24]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIADDR24\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_EBIADDR(24));

\ebiclk_pout|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBICLK\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_EBICLK);

\ebioen_pout|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIOEN\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_EBIOEN);

\ebiwen_pout|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~EBIWEN\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_EBIWEN);

\sdramaddr_pout[0]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMADDR0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_SDRAMADDR(0));

\sdramaddr_pout[1]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMADDR1\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_SDRAMADDR(1));

\sdramaddr_pout[2]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMADDR2\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_SDRAMADDR(2));

\sdramaddr_pout[3]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMADDR3\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_SDRAMADDR(3));

\sdramaddr_pout[4]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMADDR4\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_SDRAMADDR(4));

\sdramaddr_pout[5]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMADDR5\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_SDRAMADDR(5));

\sdramaddr_pout[6]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMADDR6\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_SDRAMADDR(6));

\sdramaddr_pout[7]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMADDR7\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_SDRAMADDR(7));

\sdramaddr_pout[8]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMADDR8\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_SDRAMADDR(8));

\sdramaddr_pout[9]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMADDR9\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_SDRAMADDR(9));

\sdramaddr_pout[10]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMADDR10\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_SDRAMADDR(10));

\sdramaddr_pout[11]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMADDR11\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_SDRAMADDR(11));

\sdramaddr_pout[12]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMADDR12\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_SDRAMADDR(12));

\sdramaddr_pout[13]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMADDR13\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_SDRAMADDR(13));

\sdramaddr_pout[14]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMADDR14\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_SDRAMADDR(14));

\sdramcsn_pout[0]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMCSN0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_SDRAMCSN(0));

\sdramcsn_pout[1]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMCSN1\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_SDRAMCSN(1));

\sdramdqm_pout[0]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQM0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_SDRAMDQM(0));

\sdramdqm_pout[1]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQM1\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_SDRAMDQM(1));

\sdramdqm_pout[2]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQM2\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_SDRAMDQM(2));

\sdramdqm_pout[3]|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMDQM3\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_SDRAMDQM(3));

\sdramrasn_pout|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMRASN\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_SDRAMRASN);

\sdramcasn_pout|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMCASN\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_SDRAMCASN);

\sdramwen_pout|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMWEN\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_SDRAMWEN);

\sdramclke_pout|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMCLKE\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_SDRAMCLKE);

\sdramclkn_pout|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMCLKN\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_SDRAMCLKN);

\sdramclk_pout|ioatom\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \core|core~SDRAMCLK\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_SDRAMCLK);

\CLKLK_OUT2p~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \altclklock_component|outclock1~1\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_CLKLK_OUT2p);

\COMM_RESET~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \ALT_NOT_DC_CTRAP|COMM_RESET~reg\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_COMM_RESET);

\FPGA_LOADED~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => GND,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_FPGA_LOADED);

\COM_TX_SLEEP~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => GND,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_COM_TX_SLEEP);

\COM_DB[13]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \DC_Tx_chan_ap|inst23[7]\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_COM_DB(13));

\COM_DB[12]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \DC_Tx_chan_ap|inst23[6]\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_COM_DB(12));

\COM_DB[11]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \DC_Tx_chan_ap|inst23[6]\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_COM_DB(11));

\COM_DB[10]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \DC_Tx_chan_ap|inst23[6]\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_COM_DB(10));

\COM_DB[9]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \DC_Tx_chan_ap|inst23[6]\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_COM_DB(9));

\COM_DB[8]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \DC_Tx_chan_ap|inst23[6]\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_COM_DB(8));

\COM_DB[7]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \DC_Tx_chan_ap|inst23[6]\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_COM_DB(7));

\COM_DB[6]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \DC_Tx_chan_ap|inst23[0]\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_COM_DB(6));

\HDV_RxENA~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => GND,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_HDV_RxENA);

\HDV_TxENA~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => GND,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_HDV_TxENA);

\HDV_IN~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => GND,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_HDV_IN);

\FLASH_AD_STBY~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => GND,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_FLASH_AD_STBY);

\OutputEnable_0~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_atwd_control|OutputEnable~reg0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_OutputEnable_0);

\CounterClock_0~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_atwd_control|CounterClock~reg0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_CounterClock_0);

\ShiftClock_0~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_atwd_readout|ShiftClock~reg0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_ShiftClock_0);

\RampSet_0~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_atwd_control|RampSet~reg0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_RampSet_0);

\ChannelSelect_0[1]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_atwd_control|channel[1]\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_ChannelSelect_0(1));

\ChannelSelect_0[0]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_atwd_control|channel[0]\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_ChannelSelect_0(0));

\ReadWrite_0~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_atwd_control|ReadWrite~reg0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_ReadWrite_0);

\AnalogReset_0~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_atwd_control|AnalogReset~reg0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_AnalogReset_0);

\DigitalReset_0~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_atwd_control|DigitalReset~reg0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_DigitalReset_0);

\DigitalSet_0~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_atwd_control|DigitalSet~reg0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_DigitalSet_0);

\ATWD0VDD_SUP~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => VCC,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_ATWD0VDD_SUP);

\OutputEnable_1~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_atwd_control|OutputEnable~reg0_1\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_OutputEnable_1);

\CounterClock_1~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_atwd_control|CounterClock~reg0_1\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_CounterClock_1);

\ShiftClock_1~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_atwd_readout|ShiftClock~reg0_1\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_ShiftClock_1);

\RampSet_1~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_atwd_control|RampSet~reg0_1\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_RampSet_1);

\ChannelSelect_1[1]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_atwd_control|channel[1]~1\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_ChannelSelect_1(1));

\ChannelSelect_1[0]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_atwd_control|channel[0]~1\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_ChannelSelect_1(0));

\ReadWrite_1~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_atwd_control|ReadWrite~reg0_1\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_ReadWrite_1);

\AnalogReset_1~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_atwd_control|AnalogReset~reg0_1\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_AnalogReset_1);

\DigitalReset_1~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_atwd_control|DigitalReset~reg0_1\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_DigitalReset_1);

\DigitalSet_1~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_atwd_control|DigitalSet~reg0_1\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_DigitalSet_1);

\ATWD1VDD_SUP~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => VCC,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_ATWD1VDD_SUP);

\MultiSPE_nl~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \ALT_NOT_inst_hit_counter|MultiSPE_nl~reg0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_MultiSPE_nl);

\OneSPE_nl~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \ALT_NOT_inst_hit_counter|OneSPE_nl~reg0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_OneSPE_nl);

\FE_TEST_PULSE~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_fe_testpulse|FE_TEST_PULSE~reg0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_FE_TEST_PULSE);

\FE_PULSER_P[3]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_fe_r2r|FE_PULSER_P[3]~reg0\,
	oe => \ALT_NOT_inst_fe_r2r|i113\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => ww_FE_PULSER_P(3));

\FE_PULSER_P[2]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_fe_r2r|FE_PULSER_P[2]~reg0\,
	oe => \ALT_NOT_inst_fe_r2r|i113\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => ww_FE_PULSER_P(2));

\FE_PULSER_P[1]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_fe_r2r|FE_PULSER_P[1]~reg0\,
	oe => \ALT_NOT_inst_fe_r2r|i113\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => ww_FE_PULSER_P(1));

\FE_PULSER_P[0]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_fe_r2r|FE_PULSER_P[0]~reg0\,
	oe => \ALT_NOT_inst_fe_r2r|i113\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => ww_FE_PULSER_P(0));

\FE_PULSER_N[3]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_fe_r2r|FE_PULSER_N[3]~reg0\,
	oe => \ALT_NOT_inst_fe_r2r|i113\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => ww_FE_PULSER_N(3));

\FE_PULSER_N[2]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_fe_r2r|FE_PULSER_N[2]~reg0\,
	oe => \ALT_NOT_inst_fe_r2r|i113\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => ww_FE_PULSER_N(2));

\FE_PULSER_N[1]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_fe_r2r|FE_PULSER_N[1]~reg0\,
	oe => \ALT_NOT_inst_fe_r2r|i113\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => ww_FE_PULSER_N(1));

\FE_PULSER_N[0]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_fe_r2r|FE_PULSER_N[0]~reg0\,
	oe => \ALT_NOT_inst_fe_r2r|i113\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => ww_FE_PULSER_N(0));

\R2BUS[6]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_r2r|R2BUS[6]~reg0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_R2BUS(6));

\R2BUS[5]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_r2r|R2BUS[5]~reg0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_R2BUS(5));

\R2BUS[4]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_r2r|R2BUS[4]~reg0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_R2BUS(4));

\R2BUS[3]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_r2r|R2BUS[3]~reg0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_R2BUS(3));

\R2BUS[2]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_r2r|R2BUS[2]~reg0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_R2BUS(2));

\R2BUS[1]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_r2r|R2BUS[1]~reg0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_R2BUS(1));

\R2BUS[0]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_r2r|R2BUS[0]~reg0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_R2BUS(0));

\SingleLED_TRIGGER~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_single_led|SingleLED_TRIGGER~reg0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_SingleLED_TRIGGER);

\COINCIDENCE_OUT_DOWN~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_coinc|COINCIDENCE_OUT_DOWN~reg0\,
	oe => \inst_coinc|i563\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => ww_COINCIDENCE_OUT_DOWN);

\COINC_DOWN_ALATCH~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low",
	open_drain_output => "true")
-- pragma translate_on
PORT MAP (
	datain => \slaveregister_inst|command_2_local[12]\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_COINC_DOWN_ALATCH);

\COINC_DOWN_BLATCH~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low",
	open_drain_output => "true")
-- pragma translate_on
PORT MAP (
	datain => \slaveregister_inst|command_2_local[13]\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_COINC_DOWN_BLATCH);

\COINCIDENCE_OUT_UP~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst_coinc|COINCIDENCE_OUT_UP~reg0\,
	oe => \inst_coinc|i565\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => ww_COINCIDENCE_OUT_UP);

\COINC_UP_ALATCH~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low",
	open_drain_output => "true")
-- pragma translate_on
PORT MAP (
	datain => \slaveregister_inst|command_2_local[14]\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_COINC_UP_ALATCH);

\COINC_UP_BLATCH~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low",
	open_drain_output => "true")
-- pragma translate_on
PORT MAP (
	datain => \slaveregister_inst|command_2_local[15]\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_COINC_UP_BLATCH);

\FL_Trigger~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \flasher_board_inst|FL_Trigger~reg0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_FL_Trigger);

\FL_Trigger_bar~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \ALT_NOT_flasher_board_inst|FL_Trigger~reg0\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_FL_Trigger_bar);

\FL_PRE_TRIG~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \slaveregister_inst|command_2_local[26]\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_FL_PRE_TRIG);

\FL_TMS~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \slaveregister_inst|command_2_local[28]\,
	oe => \slaveregister_inst|command_2_local[31]\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => ww_FL_TMS);

\FL_TCK~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \slaveregister_inst|command_2_local[29]\,
	oe => \slaveregister_inst|command_2_local[31]\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => ww_FL_TCK);

\FL_TDI~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \slaveregister_inst|command_2_local[30]\,
	oe => \slaveregister_inst|command_2_local[31]\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => ww_FL_TDI);

\PDL_FPGA_D[7]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => GND,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_PDL_FPGA_D(7));

\PDL_FPGA_D[6]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \ALT_NOT_DC_CTRAP|COMM_RESET~reg\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_PDL_FPGA_D(6));

\PDL_FPGA_D[5]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => GND,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_PDL_FPGA_D(5));

\PDL_FPGA_D[4]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => VCC,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_PDL_FPGA_D(4));

\PDL_FPGA_D[3]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => GND,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_PDL_FPGA_D(3));

\PDL_FPGA_D[2]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => VCC,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_PDL_FPGA_D(2));

\PDL_FPGA_D[1]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => GND,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_PDL_FPGA_D(1));

\PDL_FPGA_D[0]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => VCC,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_PDL_FPGA_D(0));

\PGM[15]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => VCC,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_PGM(15));

\PGM[14]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => GND,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_PGM(14));

\PGM[13]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => GND,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_PGM(13));

\PGM[12]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => VCC,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_PGM(12));

\PGM[11]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => GND,
	oe => GND,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	ena => VCC,
	padio => ww_PGM(11));

\PGM[10]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \wysi_counter|sload_path[0]~2\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_PGM(10));

\PGM[9]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => GND,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_PGM(9));

\PGM[8]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => GND,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_PGM(8));

\PGM[7]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \DCOM_tcal_timer|pulse_sent~reg\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_PGM(7));

\PGM[6]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst2|pulse_rcvd~reg\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_PGM(6));

\PGM[5]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst4|tcal_rcvd~reg\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_PGM(5));

\PGM[4]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \DC_CTRAP|buf_res~reg\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_PGM(4));

\PGM[3]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst10|ctrl_error~reg\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_PGM(3));

\PGM[2]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst4|idle_rcvd~reg\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_PGM(2));

\PGM[1]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \inst4|drreq_rcvd~reg\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_PGM(1));

\PGM[0]~I\ : apex20ke_io 
-- pragma translate_off
GENERIC MAP (
	operation_mode => "output",
	reg_source_mode => "none",
	feedback_mode => "none",
	power_up => "low")
-- pragma translate_on
PORT MAP (
	datain => \slaveregister_inst|com_ctrl_local[2]\,
	devclrn => devclrn,
	devpor => devpor,
	devoe => devoe,
	oe => VCC,
	ena => VCC,
	padio => ww_PGM(0));
END structure;


