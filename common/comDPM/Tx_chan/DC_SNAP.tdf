% C:\PROJECTS\ICECUBE\DOR\FPGA\DCOM_01\TX_CHAN\DC_SNAP.tdf %
% AHDL code created by Visual Software Solution's StateCAD 4.11 %
% Sun Apr 25 08:22:04 2004 %

% This AHDL code was generated using: %
%  binary encoded state assignment with structured code format. %
%  Minimization is enabled,  implied else is enabled,  %
%  and outputs are speed optimized. %

SUBDESIGN DC_SNAP(
	CLK :	INPUT;
	crc_done :	INPUT;
	last_byte :	INPUT;
	last_byte_shr :	INPUT;
	odd_plen :	INPUT;
	RESET :	INPUT;
	send_ctrl :	INPUT;
	send_data :	INPUT;
	send_id :	INPUT;
	send_tcal :	INPUT;
	shift_rdy :	INPUT;
	tcwf_ef :	INPUT;
	uart_done :	INPUT;
	uart_lat :	INPUT;
	crc_init :	OUTPUT;
	crc_last :	OUTPUT;
	ctrl_val :	OUTPUT;
	data_val :	OUTPUT;
	dom_adr_en :	OUTPUT;
	dpr_ren :	OUTPUT;
	id_shr :	OUTPUT;
	id_shr_ld :	OUTPUT;
	msg_sent :	OUTPUT;
	muxsel0 :	OUTPUT;
	muxsel1 :	OUTPUT;
	muxsel2 :	OUTPUT;
	muxsel3 :	OUTPUT;
	muxsel4 :	OUTPUT;
	plen_clk_en :	OUTPUT;
	plen_ct_inc :	OUTPUT;
	plen_sload :	OUTPUT;
	rxtime_shr :	OUTPUT;
	shift_ct_aclr :	OUTPUT;
	shift_ct_en :	OUTPUT;
	tcwf_rd_next :	OUTPUT;
	txtime_shr :	OUTPUT;
	data_stb :	OUTPUT;
)


VARIABLE
	sreg : MACHINE OF BITS (SV0, SV1, SV2, SV3, SV4)
		WITH STATES (
			SEND_IDLE =	B"10110",
			BYT0 =	B"00000",
			BYT1 =	B"00001",
			BYT2 =	B"00010",
			BYT3 =	B"00011",
			CRC0 =	B"00100",
			CRC1 =	B"00101",
			CRC2 =	B"00110",
			CRC3 =	B"00111",
			CRC_WAIT =	B"01000",
			DCMD_SEQ1 =	B"01001",
			EOF =	B"01010",
			EOF_SENT =	B"01011",
			EOF_WAIT =	B"01100",
			FRD_CHK =	B"01101",
			ID_BYTE =	B"01110",
			ID_LOAD =	B"01111",
			ID_SHR8 =	B"10000",
			LEN0 =	B"10001",
			MTYPE_LEN1 =	B"10010",
			PL_INC =	B"10011",
			PTYPE_SEQ0 =	B"10100",
			RXSHR8 =	B"10101",
			STF =	B"10111",
			TC_RX_TIME =	B"11000",
			TC_TX_TIME =	B"11001",
			TCWFM_FRD =	B"11010",
			TCWFM_H =	B"11011",
			TCWFM_L =	B"11100",
			TXSHR8 =	B"11101"
		);

	sreg1 : MACHINE OF BITS (SV5)
		WITH STATES (
			DATA_HDR =	B"1",
			DATA_BODY =	B"0"
		);

	crc_init :	DFF;
	crc_last :	DFF;
	ctrl_val :	DFF;
	data_val :	DFF;
	dom_adr_en :	DFF;
	dpr_ren :	DFF;
	id_shr :	DFF;
	id_shr_ld :	DFF;
	msg_sent :	DFF;
	muxsel0 :	DFF;
	muxsel1 :	DFF;
	muxsel2 :	DFF;
	muxsel3 :	DFF;
	muxsel4 :	DFF;
	plen_clk_en :	DFF;
	plen_ct_inc :	DFF;
	plen_sload :	DFF;
	rxtime_shr :	DFF;
	shift_ct_aclr :	DFF;
	shift_ct_en :	DFF;
	tcwf_rd_next :	DFF;
	txtime_shr :	DFF;

BEGIN

% Clock setup %
	crc_init.clk=CLK;
	crc_last.clk=CLK;
	ctrl_val.clk=CLK;
	data_val.clk=CLK;
	dom_adr_en.clk=CLK;
	dpr_ren.clk=CLK;
	id_shr.clk=CLK;
	id_shr_ld.clk=CLK;
	msg_sent.clk=CLK;
	muxsel0.clk=CLK;
	muxsel1.clk=CLK;
	muxsel2.clk=CLK;
	muxsel3.clk=CLK;
	muxsel4.clk=CLK;
	plen_clk_en.clk=CLK;
	plen_ct_inc.clk=CLK;
	plen_sload.clk=CLK;
	rxtime_shr.clk=CLK;
	shift_ct_aclr.clk=CLK;
	shift_ct_en.clk=CLK;
	tcwf_rd_next.clk=CLK;
	txtime_shr.clk=CLK;
	sreg.clk=CLK;
	sreg1.clk=CLK;

	sreg.reset =  RESET ;

	IF ( RESET ) THEN
		tcwf_rd_next.clrn=GND;
		dpr_ren.clrn=GND;
		id_shr_ld.clrn=GND;
		id_shr.clrn=GND;
		txtime_shr.clrn=GND;
		rxtime_shr.clrn=GND;
		shift_ct_aclr.clrn=GND;
		shift_ct_en.clrn=GND;
		crc_init.clrn=GND;
		crc_last.clrn=GND;
		plen_ct_inc.clrn=GND;
		msg_sent.clrn=GND;
		ctrl_val.clrn=GND;
		data_val.clrn=GND;
		plen_sload.clrn=GND;
		plen_clk_en.clrn=GND;
		muxsel4.clrn=GND;
		muxsel3.clrn=GND;
		muxsel2.clrn=GND;
		muxsel1.clrn=GND;
		muxsel0.clrn=GND;
	ELSE
		tcwf_rd_next.clrn=VCC;
		dpr_ren.clrn=VCC;
		id_shr_ld.clrn=VCC;
		id_shr.clrn=VCC;
		txtime_shr.clrn=VCC;
		rxtime_shr.clrn=VCC;
		shift_ct_aclr.clrn=VCC;
		shift_ct_en.clrn=VCC;
		crc_init.clrn=VCC;
		crc_last.clrn=VCC;
		plen_ct_inc.clrn=VCC;
		msg_sent.clrn=VCC;
		ctrl_val.clrn=VCC;
		data_val.clrn=VCC;
		plen_sload.clrn=VCC;
		plen_clk_en.clrn=VCC;
		muxsel4.clrn=VCC;
		muxsel3.clrn=VCC;
		muxsel2.clrn=VCC;
		muxsel1.clrn=VCC;
		muxsel0.clrn=VCC;
	END IF;

	CASE sreg IS
		WHEN BYT0 =>
			IF ( uart_lat ) THEN 
				sreg = BYT1;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1);
			ELSE
				sreg = BYT0;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0);
			END IF;
		WHEN BYT1 =>
			IF ( uart_lat ) THEN 
				sreg = BYT2;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0);
			ELSE
				sreg = BYT1;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1);
			END IF;
		WHEN BYT2 =>
			IF ( uart_lat ) THEN 
				sreg = BYT3;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1);
			ELSE
				sreg = BYT2;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0);
			END IF;
		WHEN BYT3 =>
			IF ( uart_lat ) THEN 
				sreg = FRD_CHK;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,1
					,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0);
			ELSE
				sreg = BYT3;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1);
			END IF;
		WHEN CRC0 =>
			IF ( uart_lat ) THEN 
				sreg = EOF;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,1);
			ELSE
				sreg = CRC0;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0);
			END IF;
		WHEN CRC1 =>
			IF ( uart_lat ) THEN 
				sreg = CRC0;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0);
			ELSE
				sreg = CRC1;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1);
			END IF;
		WHEN CRC2 =>
			IF ( uart_lat ) THEN 
				sreg = CRC1;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1);
			ELSE
				sreg = CRC2;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0);
			END IF;
		WHEN CRC3 =>
			IF ( uart_lat ) THEN 
				sreg = CRC2;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0);
			ELSE
				sreg = CRC3;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,1);
			END IF;
		WHEN CRC_WAIT =>
			IF ( crc_done ) THEN 
				sreg = CRC3;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,1);
			ELSE
				sreg = CRC_WAIT;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0);
			END IF;
		WHEN DCMD_SEQ1 =>
			IF ( !uart_lat  #  !send_ctrl & !send_id & !send_tcal ) THEN 
				sreg = DCMD_SEQ1;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,1);
			END IF;
			IF ( uart_lat & send_ctrl ) THEN 
				sreg = CRC_WAIT;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0);
			END IF;
			IF ( uart_lat & send_id ) THEN 
				sreg = ID_LOAD;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);
			END IF;
			IF ( uart_lat & send_tcal ) THEN 
				sreg = TC_RX_TIME;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,0);
			END IF;
		WHEN EOF =>
			IF ( uart_lat ) THEN 
				sreg = EOF_WAIT;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);
			ELSE
				sreg = EOF;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,1);
			END IF;
		WHEN EOF_SENT =>
			sreg = SEND_IDLE;
			(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,shift_ct_aclr
				,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,data_val,
				plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0,0,0,0,0,
				0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);
		WHEN EOF_WAIT =>
			IF ( uart_done ) THEN 
				sreg = EOF_SENT;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0);
			ELSE
				sreg = EOF_WAIT;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);
			END IF;
		WHEN FRD_CHK =>
			IF ( !last_byte ) THEN 
				sreg = BYT0;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0);
			END IF;
			IF ( last_byte ) THEN 
				sreg = CRC_WAIT;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0);
			END IF;
		WHEN ID_BYTE =>
			IF ( uart_lat ) THEN 
				sreg = ID_SHR8;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,1,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,1,0);
			ELSE
				sreg = ID_BYTE;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0);
			END IF;
		WHEN ID_LOAD =>
			sreg = ID_BYTE;
			(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,shift_ct_aclr
				,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,data_val,
				plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0,0,0,0,0,
				0,0,0,0,0,0,0,1,0,0,1,0,0,1,0);
		WHEN ID_SHR8 =>
			IF ( !shift_rdy & !last_byte_shr ) THEN 
				sreg = ID_SHR8;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,1,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,1,0);
			END IF;
			IF ( shift_rdy & !last_byte_shr ) THEN 
				sreg = ID_BYTE;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0);
			END IF;
			IF ( last_byte_shr ) THEN 
				sreg = CRC_WAIT;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0);
			END IF;
		WHEN LEN0 =>
			IF ( uart_lat ) THEN 
				sreg = MTYPE_LEN1;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1);
			ELSE
				sreg = LEN0;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0);
			END IF;
		WHEN MTYPE_LEN1 =>
			IF ( uart_lat ) THEN 
				sreg = PTYPE_SEQ0;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0);
			ELSE
				sreg = MTYPE_LEN1;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1);
			END IF;
		WHEN PL_INC =>
			sreg = BYT0;
			(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,shift_ct_aclr
				,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,data_val,
				plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0,0,0,0,0,
				0,0,0,0,0,0,0,1,0,0,0,0,0,0,0);
		WHEN PTYPE_SEQ0 =>
			IF ( uart_lat ) THEN 
				sreg = DCMD_SEQ1;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,1);
			ELSE
				sreg = PTYPE_SEQ0;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0);
			END IF;
		WHEN RXSHR8 =>
			IF ( !shift_rdy & !last_byte_shr ) THEN 
				sreg = RXSHR8;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,1,1,0);
			END IF;
			IF ( shift_rdy & !last_byte_shr ) THEN 
				sreg = TC_RX_TIME;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,0);
			END IF;
			IF ( last_byte_shr ) THEN 
				sreg = TC_TX_TIME;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1);
			END IF;
		WHEN SEND_IDLE =>
			IF ( send_ctrl  #  send_data  #  send_id  #  send_tcal ) THEN 
				sreg = STF;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0,0);
			ELSE
				sreg = SEND_IDLE;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);
			END IF;
		WHEN STF =>
			IF ( !uart_lat ) THEN 
				sreg = STF;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0,0);
			END IF;
			IF ( uart_lat & !send_data ) THEN 
				sreg = LEN0;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0);
			END IF;
			IF ( uart_lat & send_data & !odd_plen ) THEN 
				sreg = BYT0;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0);
			END IF;
			IF ( uart_lat & send_data & odd_plen ) THEN 
				sreg = PL_INC;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0);
			END IF;
		WHEN TC_RX_TIME =>
			IF ( uart_lat ) THEN 
				sreg = RXSHR8;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,1,1,0);
			ELSE
				sreg = TC_RX_TIME;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,0);
			END IF;
		WHEN TC_TX_TIME =>
			IF ( uart_lat ) THEN 
				sreg = TXSHR8;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1);
			ELSE
				sreg = TC_TX_TIME;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1);
			END IF;
		WHEN TCWFM_FRD =>
			sreg = TCWFM_L;
			(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,shift_ct_aclr
				,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,data_val,
				plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0,0,0,0,0,
				0,0,0,0,0,0,0,1,0,0,1,0,0,0,0);
		WHEN TCWFM_H =>
			IF ( !uart_lat ) THEN 
				sreg = TCWFM_H;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1);
			END IF;
			IF ( uart_lat & !tcwf_ef ) THEN 
				sreg = TCWFM_FRD;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(1,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0);
			END IF;
			IF ( uart_lat & tcwf_ef ) THEN 
				sreg = CRC_WAIT;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0);
			END IF;
		WHEN TCWFM_L =>
			IF ( uart_lat ) THEN 
				sreg = TCWFM_H;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1);
			ELSE
				sreg = TCWFM_L;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0);
			END IF;
		WHEN TXSHR8 =>
			IF ( !shift_rdy & !last_byte_shr ) THEN 
				sreg = TXSHR8;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1);
			END IF;
			IF ( shift_rdy & !last_byte_shr ) THEN 
				sreg = TC_TX_TIME;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1);
			END IF;
			IF ( last_byte_shr ) THEN 
				sreg = TCWFM_L;
				(tcwf_rd_next,dpr_ren,id_shr_ld,id_shr,txtime_shr,rxtime_shr,
					shift_ct_aclr,shift_ct_en,crc_init,crc_last,plen_ct_inc,msg_sent,ctrl_val,
					data_val,plen_sload,plen_clk_en,muxsel4,muxsel3,muxsel2,muxsel1,muxsel0)=(0,0
					,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0);
			END IF;
	END CASE;

	sreg1.reset =  RESET ;

	IF ( RESET ) THEN
		dom_adr_en.prn=GND;
	ELSE
		dom_adr_en.prn=VCC;
	END IF;

	CASE sreg1 IS
		WHEN DATA_BODY =>
			IF ( !SV0 & SV1 & !SV2 & SV3 & SV4 ) THEN 
				sreg1 = DATA_HDR;
				dom_adr_en=VCC;
			ELSE
				sreg1 = DATA_BODY;
				dom_adr_en=GND;
			END IF;
		WHEN DATA_HDR =>
			IF ( !SV0 & !SV1 & !SV2 & SV3 & !SV4 ) THEN 
				sreg1 = DATA_BODY;
				dom_adr_en=GND;
			ELSE
				sreg1 = DATA_HDR;
				dom_adr_en=VCC;
			END IF;
	END CASE;


% Logic Equations %
data_stb =  data_val & uart_lat ;

END;
