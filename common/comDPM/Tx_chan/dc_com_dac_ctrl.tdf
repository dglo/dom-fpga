TITLE "DOM Tx DAC control, K.-H. Sulanke,DESY Zeuthen, 2004-07-08";
-- DAC creating a rectangular waveform, period / bit time=1us

INCLUDE	"dac_levct";

CONSTANT COMDAC_MIN = 128+32;
CONSTANT COMDAC_MAX = 128+127;

--FUNCTION dac_levct (clock, updown, clk_en, aset)
--RETURNS (	q[7..0],	cout);

OPTIONS	BIT0=LSB;

SUBDESIGN dc_com_dac_ctrl
(
	comres_rcvd		: INPUT;
	clk				: INPUT;
	txd				: INPUT;	-- serial data
	tx_ct[4..0]		: INPUT;	-- UART counter
	h_pulse			: INPUT;	-- time calibration high pulse
	l_pulse			: INPUT;	-- time calibration low pulse
	domlev_up_rq	: INPUT;	-- request from DOR, 1 clock length pulse
	domlev_dn_rq	: INPUT;	-- request from DOR, 1 clock length pulse
	
	dac_d[7..0]		: OUTPUT;	-- dac value,  0..ff
	dac_lev[7..0]	: OUTPUT;	-- dac max. value, 196..255
)

VARIABLE

	daclev			: dac_levct;
	daclev_up		: NODE;
	daclev_adj		: NODE;
	
BEGIN


	IF	(domlev_up_rq & (daclev.q[7..0] != COMDAC_MAX))	-- increase Tx signal if smaller 255
		THEN	daclev_up	= VCC;
				daclev_adj	= VCC;
	END IF;
	
	IF	(domlev_dn_rq & (daclev.q[7..0] > COMDAC_MIN))		-- decrease Tx signal if bigger 196
		THEN	daclev_up	= GND;
				daclev_adj	= VCC;
	END IF;
	
--	IF	(daclev.q[7..0] < COMDAC_MIN))		-- to ensure the start value
--		THEN	daclev.aset	= VCC;
--	END IF;

		daclev.( clock, updown,    clk_en,     aset) =
		   		( clk,  daclev_up, daclev_adj, comres_rcvd);
	
	IF (!h_pulse & !l_pulse & !txd) THEN dac_d[] =  H"80"; 			 END IF;

	IF (!h_pulse &  l_pulse	)		THEN dac_d[] = !daclev.q[7..0]; END IF;
	IF ( h_pulse & !l_pulse	)		THEN dac_d[] =  daclev.q[7..0]; END IF;
	
	IF (!h_pulse & !l_pulse &  txd & tx_ct[]<10) THEN 
			dac_d[] =  daclev.q[7..0]; 
	END IF;
	
	IF (!h_pulse & !l_pulse &  txd & tx_ct[]>=10) THEN 
			dac_d[] = !daclev.q[7..0]; 
	END IF;
	
	dac_lev[]	= daclev.q[];

END;