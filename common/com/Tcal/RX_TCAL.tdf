% C:\PROJECTS\ICECUBE\DOR\FPGA\DCOM_01\TCAL\RX_TCAL.tdf %
% AHDL code created by Visual Software Solution's StateCAD 5.0 %
% Tue Aug 12 12:23:07 2003 %

% This AHDL code was generated using: %
%  binary encoded state assignment with structured code format. %
%  Minimization is enabled,  implied else is enabled,  %
%  and outputs are speed optimized. %

SUBDESIGN RX_TCAL(
	CLK :	INPUT;
	msg_sent :	INPUT;
	pulse_rcvd :	INPUT;
	res :	INPUT;
	tcal_prec :	INPUT;
	tcwf_af :	INPUT;
	tcwf_ef :	INPUT;
	tcwf_rd_next :	INPUT;
	mean_lat :	OUTPUT;
	rx_time_lat :	OUTPUT;
	tcwf_aclr :	OUTPUT;
	tcwf_ct_aclr :	OUTPUT;
	tcwf_rdreq :	OUTPUT;
	tcwf_wrreq :	OUTPUT;
	wfm_data_val :	OUTPUT;
)


VARIABLE
	sreg : MACHINE OF BITS (SV0, SV2, SV3)
		WITH STATES (
			IDLE =	B"011",
			DAT_VALID =	B"000",
			EXP_HL =	B"001",
			FWR =	B"010",
			LAST_DAT =	B"100",
			LAT_MVAL =	B"101",
			RD_NEXT =	B"110",
			RxTIME =	B"111"
		);

	mean_lat :	DFF;
	rx_time_lat :	DFF;
	tcwf_aclr :	DFF;
	tcwf_ct_aclr :	DFF;
	tcwf_rdreq :	DFF;
	tcwf_wrreq :	DFF;
	wfm_data_val :	DFF;

BEGIN

% Clock setup %
	mean_lat.clk=CLK;
	rx_time_lat.clk=CLK;
	tcwf_aclr.clk=CLK;
	tcwf_ct_aclr.clk=CLK;
	tcwf_rdreq.clk=CLK;
	tcwf_wrreq.clk=CLK;
	wfm_data_val.clk=CLK;
	sreg.clk=CLK;

	sreg.reset =  res ;

	IF ( res ) THEN
		wfm_data_val.clrn=GND;
		rx_time_lat.clrn=GND;
		mean_lat.clrn=GND;
		tcwf_ct_aclr.prn=GND;
		tcwf_aclr.prn=GND;
		tcwf_rdreq.clrn=GND;
		tcwf_wrreq.clrn=GND;
	ELSE
		wfm_data_val.clrn=VCC;
		rx_time_lat.clrn=VCC;
		mean_lat.clrn=VCC;
		tcwf_ct_aclr.prn=VCC;
		tcwf_aclr.prn=VCC;
		tcwf_rdreq.clrn=VCC;
		tcwf_wrreq.clrn=VCC;
	END IF;

	CASE sreg IS
		WHEN DAT_VALID =>
			IF ( tcwf_rd_next ) THEN 
				sreg = RD_NEXT;
				(wfm_data_val,rx_time_lat,mean_lat,tcwf_ct_aclr,tcwf_aclr,tcwf_rdreq,
					tcwf_wrreq)=(0,0,0,0,0,1,0);
			ELSE
				sreg = DAT_VALID;
				(wfm_data_val,rx_time_lat,mean_lat,tcwf_ct_aclr,tcwf_aclr,tcwf_rdreq,
					tcwf_wrreq)=(1,0,0,0,0,0,0);
			END IF;
		WHEN EXP_HL =>
			IF ( pulse_rcvd ) THEN 
				sreg = RxTIME;
				(wfm_data_val,rx_time_lat,mean_lat,tcwf_ct_aclr,tcwf_aclr,tcwf_rdreq,
					tcwf_wrreq)=(0,1,0,1,0,0,0);
			ELSE
				sreg = EXP_HL;
				(wfm_data_val,rx_time_lat,mean_lat,tcwf_ct_aclr,tcwf_aclr,tcwf_rdreq,
					tcwf_wrreq)=(0,0,0,1,0,1,1);
			END IF;
		WHEN FWR =>
			IF ( tcwf_af ) THEN 
				sreg = EXP_HL;
				(wfm_data_val,rx_time_lat,mean_lat,tcwf_ct_aclr,tcwf_aclr,tcwf_rdreq,
					tcwf_wrreq)=(0,0,0,1,0,1,1);
			ELSE
				sreg = FWR;
				(wfm_data_val,rx_time_lat,mean_lat,tcwf_ct_aclr,tcwf_aclr,tcwf_rdreq,
					tcwf_wrreq)=(0,0,0,1,0,0,1);
			END IF;
		WHEN IDLE =>
			IF ( tcal_prec ) THEN 
				sreg = LAT_MVAL;
				(wfm_data_val,rx_time_lat,mean_lat,tcwf_ct_aclr,tcwf_aclr,tcwf_rdreq,
					tcwf_wrreq)=(0,0,1,1,0,0,0);
			ELSE
				sreg = IDLE;
				(wfm_data_val,rx_time_lat,mean_lat,tcwf_ct_aclr,tcwf_aclr,tcwf_rdreq,
					tcwf_wrreq)=(0,0,0,1,1,0,0);
			END IF;
		WHEN LAST_DAT =>
			IF ( msg_sent ) THEN 
				sreg = IDLE;
				(wfm_data_val,rx_time_lat,mean_lat,tcwf_ct_aclr,tcwf_aclr,tcwf_rdreq,
					tcwf_wrreq)=(0,0,0,1,1,0,0);
			ELSE
				sreg = LAST_DAT;
				(wfm_data_val,rx_time_lat,mean_lat,tcwf_ct_aclr,tcwf_aclr,tcwf_rdreq,
					tcwf_wrreq)=(1,0,0,0,0,0,0);
			END IF;
		WHEN LAT_MVAL =>
			sreg = FWR;
			(wfm_data_val,rx_time_lat,mean_lat,tcwf_ct_aclr,tcwf_aclr,tcwf_rdreq,
				tcwf_wrreq)=(0,0,0,1,0,0,1);
		WHEN RD_NEXT =>
			IF ( tcwf_ef ) THEN 
				sreg = LAST_DAT;
				(wfm_data_val,rx_time_lat,mean_lat,tcwf_ct_aclr,tcwf_aclr,tcwf_rdreq,
					tcwf_wrreq)=(1,0,0,0,0,0,0);
			END IF;
			IF ( !tcwf_ef ) THEN 
				sreg = DAT_VALID;
				(wfm_data_val,rx_time_lat,mean_lat,tcwf_ct_aclr,tcwf_aclr,tcwf_rdreq,
					tcwf_wrreq)=(1,0,0,0,0,0,0);
			END IF;
		WHEN RxTIME =>
			sreg = DAT_VALID;
			(wfm_data_val,rx_time_lat,mean_lat,tcwf_ct_aclr,tcwf_aclr,tcwf_rdreq,
				tcwf_wrreq)=(1,0,0,0,0,0,0);
	END CASE;

END;
