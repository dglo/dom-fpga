% C:\PROJECTS\ICECUBE\DOR\FPGA\DOR_10\TX_CHAN\TX_UART.tdf %
% AHDL code created by Visual Software Solution's StateCAD 5.0 %
% Sat Apr 12 13:08:41 2003 %

% This AHDL code was generated using: %
%  binary encoded state assignment with structured code format. %
%  Minimization is enabled,  implied else is enabled,  %
%  and outputs are speed optimized. %

SUBDESIGN TX_UART(
	CLK :	INPUT;
	res :	INPUT;
	txct0 :	INPUT;
	txct1 :	INPUT;
	txct2 :	INPUT;
	txct3 :	INPUT;
	txct4 :	INPUT;
	txdval :	INPUT;
	txlast :	INPUT;
	txctclr :	OUTPUT;
	txdrven :	OUTPUT;
	txidle :	OUTPUT;
	txrdreq :	OUTPUT;
	txshclr :	OUTPUT;
	txshen :	OUTPUT;
	txshld :	OUTPUT;
)


VARIABLE
	sreg1 : MACHINE OF BITS (SV0, SV4, SV5)
		WITH STATES (
			TXIDL =	B"011",
			CLK_OFF =	B"000",
			CLK_ON =	B"001",
			TXCNT =	B"010",
			TXSHFT =	B"100",
			TXSLD =	B"101"
		);

	txctclr :	DFF;
	txdrven :	DFF;
	txidle :	DFF;
	txrdreq :	DFF;
	txshclr :	DFF;
	txshen :	DFF;
	txshld :	DFF;

	txcteq18 :	NODE;
BEGIN

% Clock setup %
	txctclr.clk=CLK;
	txdrven.clk=CLK;
	txidle.clk=CLK;
	txrdreq.clk=CLK;
	txshclr.clk=CLK;
	txshen.clk=CLK;
	txshld.clk=CLK;
	sreg1.clk=CLK;

	sreg1.reset =  res ;

	IF ( res ) THEN
		txidle.prn=GND;
		txdrven.clrn=GND;
		txrdreq.clrn=GND;
		txshclr.prn=GND;
		txshld.clrn=GND;
		txshen.clrn=GND;
		txctclr.prn=GND;
	ELSE
		txidle.prn=VCC;
		txdrven.clrn=VCC;
		txrdreq.clrn=VCC;
		txshclr.prn=VCC;
		txshld.clrn=VCC;
		txshen.clrn=VCC;
		txctclr.prn=VCC;
	END IF;

	CASE sreg1 IS
		WHEN CLK_OFF =>
			sreg1 = TXIDL;
			(txidle,txdrven,txrdreq,txshclr,txshld,txshen,txctclr)=(1,0,0,1,0,0,1);
		WHEN CLK_ON =>
			sreg1 = TXSLD;
			(txidle,txdrven,txrdreq,txshclr,txshld,txshen,txctclr)=(0,1,1,0,1,1,0);
		WHEN TXCNT =>
			IF ( txcteq18 ) THEN 
				sreg1 = TXSHFT;
				(txidle,txdrven,txrdreq,txshclr,txshld,txshen,txctclr)=(0,1,0,0,0,1,0);
			ELSE
				sreg1 = TXCNT;
				(txidle,txdrven,txrdreq,txshclr,txshld,txshen,txctclr)=(0,1,0,0,0,0,0);
			END IF;
		WHEN TXIDL =>
			IF ( txdval ) THEN 
				sreg1 = CLK_ON;
				(txidle,txdrven,txrdreq,txshclr,txshld,txshen,txctclr)=(0,1,0,1,0,0,1);
			ELSE
				sreg1 = TXIDL;
				(txidle,txdrven,txrdreq,txshclr,txshld,txshen,txctclr)=(1,0,0,1,0,0,1);
			END IF;
		WHEN TXSHFT =>
			IF ( !txlast ) THEN 
				sreg1 = TXCNT;
				(txidle,txdrven,txrdreq,txshclr,txshld,txshen,txctclr)=(0,1,0,0,0,0,0);
			END IF;
			IF ( txlast & !txdval ) THEN 
				sreg1 = CLK_OFF;
				(txidle,txdrven,txrdreq,txshclr,txshld,txshen,txctclr)=(0,1,0,1,0,0,1);
			END IF;
			IF ( txlast & txdval ) THEN 
				sreg1 = TXSLD;
				(txidle,txdrven,txrdreq,txshclr,txshld,txshen,txctclr)=(0,1,1,0,1,1,0);
			END IF;
		WHEN TXSLD =>
			sreg1 = TXCNT;
			(txidle,txdrven,txrdreq,txshclr,txshld,txshen,txctclr)=(0,1,0,0,0,0,0);
	END CASE;


% Logic Equations %
txcteq18 =  txct4 & !txct3 & !txct2 & txct1 & !txct0 ;

END;
