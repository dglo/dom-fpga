TITLE "Tx Dual Port RAM control, LAST CHANGE: 2003/11/18";

-- alm_empty flag calculation on the base of 
-- mem_avail = read_pointer - write_pointer 
-- (unsigned sub, pointer=0..mem_size-1)

INCLUDE "tx_dpr_radr_ct";

--FUNCTION tx_dpr_adr_ct 
--(
--	clock,
--	clk_en,
--	sload,
--	aclr,
--	data[12..0]
--)
--RETURNS (
--	q[12..0]
--);

CONSTANT MAX_PACKET_SIZE	= 4096 + 4;	-- 4KB payload + 4 byte header
CONSTANT TX_DPR_SIZE 		= 16*1024;	-- 16KB ->14bit pointer

--PARAMETERS
--(
--	RX_DPR_ADR_WIDTH	= 13,	-- must be concistent with tx_dpr_adr_ct !!!
--	RX_DPR_SIZE			= 2^DPR_ADR_WIDTH
--);

SUBDESIGN	Tx_dpr_ctrl
(
	CLK20				: INPUT;	-- communication clock
	comres_rcvd			: INPUT;	-- communication reset received, duration=1 clock 
	tx_dpr_wadr[15..0]	: INPUT;	-- points to next write address, updated with tx_pack_rdy
	tx_dpr_ren			: INPUT;	-- used to count up tx_dpr_radr[] only
		
	tx_dpr_radr[15..0]	: OUTPUT;	-- Rx DPR write address
	tx_alm_empty		: OUTPUT;	-- at least 4KB can be written to the Tx DPR
)

VARIABLE
	not_comres_rcvd		: NODE;
	tx_dpr_rad			: tx_dpr_radr_ct;	-- 16 bit up counter
	tx_dpr_radr[15..0]	: NODE;
	
BEGIN

	not_comres_rcvd		= !comres_rcvd;

	tx_dpr_rad.				(	clock,	clk_en,		sload,	aclr		)
						= 	(	CLK20,	tx_dpr_ren,	GND,	comres_rcvd);
	tx_dpr_rad.data[]	= 	H"0000";
	
	tx_dpr_radr[]		=	tx_dpr_rad.q[];

	if( tx_dpr_radr[13..0] - tx_dpr_wadr[13..0] > MAX_PACKET_SIZE )
		THEN	tx_alm_empty	= VCC;
		else	tx_alm_empty	= GND;		END IF;
	
END;
