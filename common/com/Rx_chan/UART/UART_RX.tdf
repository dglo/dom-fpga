% C:\PROJECTS\ICECUBE\DOR\FPGA\DOR_10\RX_CHAN\UART\UART_RX.tdf %
% AHDL code created by Visual Software Solution's StateCAD 5.0 %
% Fri Apr 18 16:14:40 2003 %

% This AHDL code was generated using: %
%  binary encoded state assignment with structured code format. %
%  Minimization is enabled,  implied else is enabled,  %
%  and outputs are speed optimized. %

SUBDESIGN UART_RX(
	CLK :	INPUT;
	res :	INPUT;
	rxct[4..0] :	INPUT;
	rxd :	INPUT;
	rxlast :	INPUT;
	ctclr :	OUTPUT;
	shd :	OUTPUT;
	shen :	OUTPUT;
	stb :	OUTPUT;
)


VARIABLE
	sreg : MACHINE OF BITS (SV0, SV3, SV4)
		WITH STATES (
			RXIDLE =	B"001",
			RXCNT =	B"000",
			RXSTART =	B"010",
			RXSTOP =	B"011",
			RXSTRB =	B"100",
			SHFT0 =	B"101",
			SHFT1 =	B"110",
			WT =	B"111"
		);

	ctclr :	DFF;
	shd :	DFF;
	shen :	DFF;
	stb :	DFF;

	rxcteq5 :	NODE;
	rxcteq9 :	NODE;
BEGIN

% Clock setup %
	ctclr.clk=CLK;
	shd.clk=CLK;
	shen.clk=CLK;
	stb.clk=CLK;
	sreg.clk=CLK;

	sreg.reset =  res ;

	IF ( res ) THEN
		stb.clrn=GND;
		shen.clrn=GND;
		shd.clrn=GND;
		ctclr.prn=GND;
	ELSE
		stb.clrn=VCC;
		shen.clrn=VCC;
		shd.clrn=VCC;
		ctclr.prn=VCC;
	END IF;

	CASE sreg IS
		WHEN RXCNT =>
			IF ( !rxcteq5 & !rxd ) THEN 
				sreg = RXCNT;
				(stb,shen,shd,ctclr)=(0,0,0,0);
			END IF;
			IF ( rxcteq5 & !rxd ) THEN 
				sreg = SHFT0;
				(stb,shen,shd,ctclr)=(0,1,0,0);
			END IF;
			IF ( rxd ) THEN 
				sreg = SHFT1;
				(stb,shen,shd,ctclr)=(0,1,1,0);
			END IF;
		WHEN RXIDLE =>
			IF ( rxd ) THEN 
				sreg = RXSTART;
				(stb,shen,shd,ctclr)=(0,0,0,0);
			ELSE
				sreg = RXIDLE;
				(stb,shen,shd,ctclr)=(0,0,0,1);
			END IF;
		WHEN RXSTART =>
			IF ( rxcteq9 ) THEN 
				sreg = RXCNT;
				(stb,shen,shd,ctclr)=(0,0,0,0);
			ELSE
				sreg = RXSTART;
				(stb,shen,shd,ctclr)=(0,0,0,0);
			END IF;
		WHEN RXSTOP =>
			IF ( !rxcteq5 & !rxd ) THEN 
				sreg = RXSTOP;
				(stb,shen,shd,ctclr)=(0,0,0,0);
			END IF;
			IF ( rxcteq5 & !rxd ) THEN 
				sreg = RXIDLE;
				(stb,shen,shd,ctclr)=(0,0,0,1);
			END IF;
			IF ( rxd ) THEN 
				sreg = RXSTRB;
				(stb,shen,shd,ctclr)=(1,0,0,0);
			END IF;
		WHEN RXSTRB =>
			sreg = RXIDLE;
			(stb,shen,shd,ctclr)=(0,0,0,1);
		WHEN SHFT0 =>
			sreg = WT;
			(stb,shen,shd,ctclr)=(0,0,0,0);
		WHEN SHFT1 =>
			sreg = WT;
			(stb,shen,shd,ctclr)=(0,0,0,0);
		WHEN WT =>
			IF ( !rxcteq9 ) THEN 
				sreg = WT;
				(stb,shen,shd,ctclr)=(0,0,0,0);
			END IF;
			IF ( rxlast & rxcteq9 ) THEN 
				sreg = RXSTOP;
				(stb,shen,shd,ctclr)=(0,0,0,0);
			END IF;
			IF ( !rxlast & rxcteq9 ) THEN 
				sreg = RXCNT;
				(stb,shen,shd,ctclr)=(0,0,0,0);
			END IF;
	END CASE;


% Logic Equations %
rxcteq5 =  !rxct4 & !rxct3 & rxct2 & !rxct1 & rxct0 ;

rxcteq9 =  !rxct4 & rxct3 & !rxct2 & !rxct1 & rxct0 ;

END;
