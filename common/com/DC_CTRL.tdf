% C:\PROJECTS\ICECUBE\DOR\FPGA\DCOM_01\DC_CTRL.tdf %
% AHDL code created by Visual Software Solution's StateCAD 5.0 %
% Tue Nov 11 15:35:19 2003 %

% This AHDL code was generated using: %
%  binary encoded state assignment with structured code format. %
%  Minimization is enabled,  implied else is enabled,  %
%  and outputs are speed optimized. %

SUBDESIGN DC_CTRL(
	CLK :	INPUT;
	bfstat_rcvd :	INPUT;
	comres_rcvd :	INPUT;
	ctrl_err :	INPUT;
	ctrl_sent :	INPUT;
	ctrl_stb :	INPUT;
	data_stb :	INPUT;
	del_15us :	INPUT;
	drbt_req :	INPUT;
	drreq_rcvd :	INPUT;
	eof_rcvd :	INPUT;
	id_data_avail :	INPUT;
	idle_rcvd :	INPUT;
	idreq_rcvd :	INPUT;
	msg_err :	INPUT;
	msg_sent :	INPUT;
	my_adr :	INPUT;
	pulse_rcvd :	INPUT;
	pulse_sent :	INPUT;
	reset :	INPUT;
	rxwraff :	INPUT;
	stf_rcvd :	INPUT;
	sysres_rcvd :	INPUT;
	tcal_rcvd :	INPUT;
	time_bit_18 :	INPUT;
	txrdef :	INPUT;
	cmd_snd0 :	OUTPUT;
	cmd_snd1 :	OUTPUT;
	cmd_snd2 :	OUTPUT;
	cmd_snd3 :	OUTPUT;
	com_aval :	OUTPUT;
	drbt_gnt :	OUTPUT;
	rec_ctrl :	OUTPUT;
	rec_data :	OUTPUT;
	rec_ena :	OUTPUT;
	send_ctrl :	OUTPUT;
	send_data :	OUTPUT;
	send_id :	OUTPUT;
	sys_res :	OUTPUT;
	tcal_cyc :	OUTPUT;
	tcal_data :	OUTPUT;
	tcal_prec :	OUTPUT;
	tcal_psnd :	OUTPUT;
	timer_clrn :	OUTPUT;
)


VARIABLE
	sreg : MACHINE OF BITS (SV0, SV1, SV2, SV3, SV8)
		WITH STATES (
			COM_START =	B"00001",
			CMD_WAIT =	B"00000",
			DOM_REBOOT =	B"00010",
			DRREQ_WT =	B"00011",
			REC_DAT =	B"00100",
			REC_PULSE =	B"00101",
			REC_WT =	B"00110",
			SEND_WT =	B"00111",
			SND_DAT =	B"01000",
			SND_DRAND =	B"01001",
			SND_DRBT =	B"01010",
			SND_EOF =	B"01011",
			SND_ID_STF =	B"01100",
			SND_IDLE =	B"01101",
			SND_MRNB =	B"01110",
			SND_MRWB =	B"01111",
			SND_MRWE =	B"10000",
			SND_PULSE =	B"10001",
			SND_STF =	B"10010",
			SND_TC_DAT =	B"10011",
			SND_TC_EOF =	B"10100",
			SYS_RESET =	B"10101"
		);

	sreg1 : MACHINE OF BITS (SV9)
		WITH STATES (
			COM_OFF =	B"0",
			COM_ON =	B"1"
		);

	sreg2 : MACHINE OF BITS (SV10, SV11, SV12)
		WITH STATES (
			FPGA_RDY =	B"110",
			COM_RES =	B"000",
			CRES_1 =	B"001",
			CRES_2 =	B"010",
			CRES_3 =	B"011",
			CRES_WAIT =	B"100",
			DOM_RBT =	B"101",
			WAIT_6ms =	B"111"
		);

	cmd_snd0 :	DFF;
	cmd_snd1 :	DFF;
	cmd_snd2 :	DFF;
	cmd_snd3 :	DFF;
	com_aval :	DFF;
	drbt_gnt :	DFF;
	rec_ctrl :	DFF;
	rec_data :	DFF;
	rec_ena :	DFF;
	send_ctrl :	DFF;
	send_data :	DFF;
	send_id :	DFF;
	sys_res :	DFF;
	tcal_cyc :	DFF;
	tcal_data :	DFF;
	tcal_prec :	DFF;
	tcal_psnd :	DFF;
	timer_clrn :	DFF;

	noise :	NODE;
BEGIN

% Clock setup %
	cmd_snd0.clk=CLK;
	cmd_snd1.clk=CLK;
	cmd_snd2.clk=CLK;
	cmd_snd3.clk=CLK;
	com_aval.clk=CLK;
	drbt_gnt.clk=CLK;
	rec_ctrl.clk=CLK;
	rec_data.clk=CLK;
	rec_ena.clk=CLK;
	send_ctrl.clk=CLK;
	send_data.clk=CLK;
	send_id.clk=CLK;
	sys_res.clk=CLK;
	tcal_cyc.clk=CLK;
	tcal_data.clk=CLK;
	tcal_prec.clk=CLK;
	tcal_psnd.clk=CLK;
	timer_clrn.clk=CLK;
	sreg.clk=CLK;
	sreg1.clk=CLK;
	sreg2.clk=CLK;

	sreg.reset =  !SV10 & comres_rcvd  #  SV11 & comres_rcvd  #  !SV12 & 
		comres_rcvd ;

	IF ( !SV10 & comres_rcvd  #  SV11 & comres_rcvd  #  !SV12 & comres_rcvd ) 
		THEN
		timer_clrn.clrn=GND;
		send_id.clrn=GND;
		drbt_gnt.clrn=GND;
		sys_res.clrn=GND;
		tcal_data.clrn=GND;
		tcal_psnd.clrn=GND;
		tcal_prec.clrn=GND;
		tcal_cyc.clrn=GND;
		cmd_snd3.clrn=GND;
		cmd_snd2.clrn=GND;
		cmd_snd1.clrn=GND;
		cmd_snd0.clrn=GND;
		rec_data.clrn=GND;
		rec_ctrl.prn=GND;
		send_data.clrn=GND;
		send_ctrl.clrn=GND;
	ELSE
		timer_clrn.clrn=VCC;
		send_id.clrn=VCC;
		drbt_gnt.clrn=VCC;
		sys_res.clrn=VCC;
		tcal_data.clrn=VCC;
		tcal_psnd.clrn=VCC;
		tcal_prec.clrn=VCC;
		tcal_cyc.clrn=VCC;
		cmd_snd3.clrn=VCC;
		cmd_snd2.clrn=VCC;
		cmd_snd1.clrn=VCC;
		cmd_snd0.clrn=VCC;
		rec_data.clrn=VCC;
		rec_ctrl.prn=VCC;
		send_data.clrn=VCC;
		send_ctrl.clrn=VCC;
	END IF;

	CASE sreg IS
		WHEN CMD_WAIT =>
			IF ( !idle_rcvd & !drreq_rcvd & !sysres_rcvd & !bfstat_rcvd & !stf_rcvd & 
				!tcal_rcvd & !idreq_rcvd  #  !idle_rcvd & !drreq_rcvd & !sysres_rcvd & !
				bfstat_rcvd & !stf_rcvd & !tcal_rcvd & !id_data_avail ) THEN 
				sreg = CMD_WAIT;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0);
			END IF;
			IF ( idle_rcvd ) THEN 
				sreg = SND_IDLE;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1);
			END IF;
			IF ( drreq_rcvd & drbt_req & txrdef ) THEN 
				sreg = SND_DRBT;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,1);
			END IF;
			IF ( sysres_rcvd ) THEN 
				sreg = SYS_RESET;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0);
			END IF;
			IF ( bfstat_rcvd & rxwraff ) THEN 
				sreg = SND_MRNB;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1);
			END IF;
			IF ( drreq_rcvd & txrdef & !drbt_req ) THEN 
				sreg = SND_DRAND;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1);
			END IF;
			IF ( drreq_rcvd & !txrdef ) THEN 
				sreg = SND_STF;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1);
			END IF;
			IF ( bfstat_rcvd & !rxwraff ) THEN 
				sreg = SND_MRWB;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1);
			END IF;
			IF ( stf_rcvd ) THEN 
				sreg = REC_DAT;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0);
			END IF;
			IF ( tcal_rcvd ) THEN 
				sreg = REC_WT;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0);
			END IF;
			IF ( idreq_rcvd & id_data_avail ) THEN 
				sreg = SND_ID_STF;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1);
			END IF;
		WHEN COM_START =>
			IF ( !SV10 & !SV11 & !SV12 ) THEN 
				sreg = SND_IDLE;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1);
			ELSE
				sreg = COM_START;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0);
			END IF;
		WHEN DOM_REBOOT =>
			sreg = DOM_REBOOT;
			(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
				tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
				send_ctrl)=(0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0);
		WHEN DRREQ_WT =>
			IF ( drreq_rcvd ) THEN 
				sreg = SND_TC_DAT;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0);
			ELSE
				sreg = DRREQ_WT;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0);
			END IF;
		WHEN REC_DAT =>
			IF ( !eof_rcvd & !msg_err ) THEN 
				sreg = REC_DAT;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0);
			END IF;
			IF ( eof_rcvd & rxwraff & !msg_err ) THEN 
				sreg = SND_MRNB;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1);
			END IF;
			IF ( msg_err ) THEN 
				sreg = SND_MRWE;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1);
			END IF;
			IF ( eof_rcvd & !rxwraff & !msg_err ) THEN 
				sreg = SND_MRWB;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1);
			END IF;
		WHEN REC_PULSE =>
			IF ( pulse_rcvd ) THEN 
				sreg = SEND_WT;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0);
			ELSE
				sreg = REC_PULSE;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0);
			END IF;
		WHEN REC_WT =>
			IF ( del_15us ) THEN 
				sreg = REC_PULSE;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0);
			ELSE
				sreg = REC_WT;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0);
			END IF;
		WHEN SEND_WT =>
			IF ( del_15us ) THEN 
				sreg = SND_PULSE;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0);
			ELSE
				sreg = SEND_WT;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0);
			END IF;
		WHEN SND_DAT =>
			IF ( msg_sent ) THEN 
				sreg = SND_EOF;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1);
			ELSE
				sreg = SND_DAT;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0);
			END IF;
		WHEN SND_DRAND =>
			IF ( ctrl_sent ) THEN 
				sreg = CMD_WAIT;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0);
			ELSE
				sreg = SND_DRAND;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1);
			END IF;
		WHEN SND_DRBT =>
			IF ( ctrl_sent ) THEN 
				sreg = DOM_REBOOT;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0);
			ELSE
				sreg = SND_DRBT;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,1);
			END IF;
		WHEN SND_EOF =>
			IF ( ctrl_sent ) THEN 
				sreg = CMD_WAIT;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0);
			ELSE
				sreg = SND_EOF;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1);
			END IF;
		WHEN SND_ID_STF =>
			IF ( ctrl_sent ) THEN 
				sreg = SND_DAT;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0);
			ELSE
				sreg = SND_ID_STF;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1);
			END IF;
		WHEN SND_IDLE =>
			IF ( ctrl_sent ) THEN 
				sreg = CMD_WAIT;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0);
			ELSE
				sreg = SND_IDLE;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1);
			END IF;
		WHEN SND_MRNB =>
			IF ( ctrl_sent ) THEN 
				sreg = CMD_WAIT;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0);
			ELSE
				sreg = SND_MRNB;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1);
			END IF;
		WHEN SND_MRWB =>
			IF ( ctrl_sent ) THEN 
				sreg = CMD_WAIT;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0);
			ELSE
				sreg = SND_MRWB;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1);
			END IF;
		WHEN SND_MRWE =>
			IF ( ctrl_sent ) THEN 
				sreg = CMD_WAIT;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0);
			ELSE
				sreg = SND_MRWE;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1);
			END IF;
		WHEN SND_PULSE =>
			IF ( pulse_sent ) THEN 
				sreg = DRREQ_WT;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0);
			ELSE
				sreg = SND_PULSE;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0);
			END IF;
		WHEN SND_STF =>
			IF ( ctrl_sent ) THEN 
				sreg = SND_DAT;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0);
			ELSE
				sreg = SND_STF;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1);
			END IF;
		WHEN SND_TC_DAT =>
			IF ( msg_sent ) THEN 
				sreg = SND_TC_EOF;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,1);
			ELSE
				sreg = SND_TC_DAT;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0);
			END IF;
		WHEN SND_TC_EOF =>
			IF ( ctrl_sent ) THEN 
				sreg = CMD_WAIT;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0);
			ELSE
				sreg = SND_TC_EOF;
				(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
					tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
					send_ctrl)=(0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,1);
			END IF;
		WHEN SYS_RESET =>
			sreg = SYS_RESET;
			(timer_clrn,send_id,drbt_gnt,sys_res,tcal_data,tcal_psnd,tcal_prec,
				tcal_cyc,cmd_snd3,cmd_snd2,cmd_snd1,cmd_snd0,rec_data,rec_ctrl,send_data,
				send_ctrl)=(0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0);
	END CASE;

	sreg1.reset =  comres_rcvd ;

	IF ( comres_rcvd ) THEN
		com_aval.clrn=GND;
	ELSE
		com_aval.clrn=VCC;
	END IF;

	CASE sreg1 IS
		WHEN COM_OFF =>
			IF ( !SV0 & SV1 & SV2 & !SV3 & SV8 & ctrl_sent ) THEN 
				sreg1 = COM_ON;
				com_aval=VCC;
			ELSE
				sreg1 = COM_OFF;
				com_aval=GND;
			END IF;
		WHEN COM_ON =>
			sreg1 = COM_ON;
			com_aval=VCC;
	END CASE;

	sreg2.reset =  reset ;

	IF ( reset ) THEN
		rec_ena.clrn=GND;
	ELSE
		rec_ena.clrn=VCC;
	END IF;

	CASE sreg2 IS
		WHEN COM_RES =>
			IF ( !SV0 & !SV1 & !SV2 & SV3 & !SV8  #  SV0 & !SV1 & SV2 & !SV3 & SV8 ) 
				THEN 
				sreg2 = DOM_RBT;
				rec_ena=GND;
			ELSE
				sreg2 = COM_RES;
				rec_ena=VCC;
			END IF;
		WHEN CRES_1 =>
			IF ( !comres_rcvd & !noise ) THEN 
				sreg2 = CRES_1;
				rec_ena=VCC;
			END IF;
			IF ( comres_rcvd ) THEN 
				sreg2 = CRES_2;
				rec_ena=VCC;
			END IF;
			IF ( noise ) THEN 
				sreg2 = CRES_WAIT;
				rec_ena=VCC;
			END IF;
		WHEN CRES_2 =>
			IF ( !noise & !comres_rcvd ) THEN 
				sreg2 = CRES_2;
				rec_ena=VCC;
			END IF;
			IF ( noise ) THEN 
				sreg2 = CRES_WAIT;
				rec_ena=VCC;
			END IF;
			IF ( comres_rcvd ) THEN 
				sreg2 = CRES_3;
				rec_ena=VCC;
			END IF;
		WHEN CRES_3 =>
			IF ( !comres_rcvd & !noise ) THEN 
				sreg2 = CRES_3;
				rec_ena=VCC;
			END IF;
			IF ( comres_rcvd ) THEN 
				sreg2 = COM_RES;
				rec_ena=VCC;
			END IF;
			IF ( noise ) THEN 
				sreg2 = CRES_WAIT;
				rec_ena=VCC;
			END IF;
		WHEN CRES_WAIT =>
			IF ( comres_rcvd ) THEN 
				sreg2 = CRES_1;
				rec_ena=VCC;
			ELSE
				sreg2 = CRES_WAIT;
				rec_ena=VCC;
			END IF;
		WHEN DOM_RBT =>
			sreg2 = DOM_RBT;
			rec_ena=GND;
		WHEN FPGA_RDY =>
			sreg2 = WAIT_6ms;
			rec_ena=GND;
		WHEN WAIT_6ms =>
			IF ( time_bit_18 ) THEN 
				sreg2 = CRES_WAIT;
				rec_ena=VCC;
			ELSE
				sreg2 = WAIT_6ms;
				rec_ena=GND;
			END IF;
	END CASE;


% Logic Equations %
noise =  my_adr & ctrl_stb & !comres_rcvd  #  my_adr & ctrl_err  #  my_adr & 
	data_stb ;

END;
